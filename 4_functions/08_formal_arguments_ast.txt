TranslationUnitDecl 0x7ff4e28326d0
|-TypedefDecl implicit __int128_t '__int128'
| `-BuiltinType '__int128'
|-TypedefDecl implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 'unsigned __int128'
|-TypedefDecl implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 'struct __NSConstantString_tag'
|   `-CXXRecord '__NSConstantString_tag'
|-TypedefDecl implicit __builtin_ms_va_list 'char *'
| `-PointerType 'char *'
|   `-BuiltinType 'char'
|-TypedefDecl implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 'struct __va_list_tag [1]' 1
|   `-RecordType 'struct __va_list_tag'
|     `-CXXRecord '__va_list_tag'
|-FunctionDecl used min 'int (int, int)' inline
| |-ParmVarDecl used i 'int'
| |-ParmVarDecl used j 'int'
| `-CompoundStmt
|   `-ReturnStmt
|     `-ImplicitCastExpr 'int' <LValueToRValue>
|       `-ConditionalOperator 'int' lvalue
|         |-BinaryOperator '_Bool' '<'
|         | |-ImplicitCastExpr 'int' <LValueToRValue>
|         | | `-DeclRefExpr 'int' lvalue ParmVar 0x7ff4e2865c70 'i' 'int'
|         | `-ImplicitCastExpr 'int' <LValueToRValue>
|         |   `-DeclRefExpr 'int' lvalue ParmVar 0x7ff4e2865ce8 'j' 'int'
|         |-DeclRefExpr 'int' lvalue ParmVar 0x7ff4e2865c70 'i' 'int'
|         `-DeclRefExpr 'int' lvalue ParmVar 0x7ff4e2865ce8 'j' 'int'
|-FunctionDecl used foo 'int (void)'
| `-CompoundStmt
|   `-ReturnStmt
|     `-IntegerLiteral 'int' 1024
|-FunctionDecl used bar1 'int (void)'
| `-CompoundStmt
|   `-ReturnStmt
|     `-IntegerLiteral 'int' 2047
`-FunctionDecl main 'int (void)'
  `-CompoundStmt
    |-DeclStmt
    | `-VarDecl used val1 'int':'int' cinit
    |   `-IntegerLiteral 'int' 1024
    |-DeclStmt
    | `-VarDecl used val2 'int':'int' cinit
    |   `-IntegerLiteral 'int' 2048
    |-DeclStmt
    | `-VarDecl used min_val 'int':'int' cinit
    |   `-CallExpr 'int'
    |     |-ImplicitCastExpr 'int (*)(int, int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 'int (int, int)' lvalue Function 0x7ff4e2865dc8 'min' 'int (int, int)'
    |     |-ImplicitCastExpr 'int':'int' <LValueToRValue>
    |     | `-DeclRefExpr 'int':'int' lvalue Var 0x7ff4e28663b0 'val1' 'int':'int'
    |     `-ImplicitCastExpr 'int':'int' <LValueToRValue>
    |       `-DeclRefExpr 'int':'int' lvalue Var 0x7ff4e2866518 'val2' 'int':'int'
    |-BinaryOperator 'int':'int' lvalue '='
    | |-DeclRefExpr 'int':'int' lvalue Var 0x7ff4e2866630 'min_val' 'int':'int'
    | `-CallExpr 'int'
    |   |-ImplicitCastExpr 'int (*)(int, int)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'int (int, int)' lvalue Function 0x7ff4e2865dc8 'min' 'int (int, int)'
    |   |-IntegerLiteral 'int' 1024
    |   `-IntegerLiteral 'int' 2048
    |-BinaryOperator 'int':'int' lvalue '='
    | |-DeclRefExpr 'int':'int' lvalue Var 0x7ff4e2866630 'min_val' 'int':'int'
    | `-CallExpr 'int'
    |   |-ImplicitCastExpr 'int (*)(int, int)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'int (int, int)' lvalue Function 0x7ff4e2865dc8 'min' 'int (int, int)'
    |   |-CallExpr 'int'
    |   | `-ImplicitCastExpr 'int (*)(void)' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 'int (void)' lvalue Function 0x7ff4e2866088 'foo' 'int (void)'
    |   `-BinaryOperator 'int' '+'
    |     |-CallExpr 'int'
    |     | `-ImplicitCastExpr 'int (*)(void)' <FunctionToPointerDecay>
    |     |   `-DeclRefExpr 'int (void)' lvalue Function 0x7ff4e28661a0 'bar1' 'int (void)'
    |     `-IntegerLiteral 'int' 1
    |-DeclStmt
    | `-VarDecl used t1 'int'
    |-DeclStmt
    | `-VarDecl used t2 'int'
    |-BinaryOperator 'int' lvalue ','
    | |-BinaryOperator 'int' lvalue ','
    | | |-BinaryOperator 'int':'int' lvalue '='
    | | | |-DeclRefExpr 'int':'int' lvalue Var 0x7ff4e2866630 'min_val' 'int':'int'
    | | | `-ImplicitCastExpr 'int' <LValueToRValue>
    | | |   `-ParenExpr 'int' lvalue
    | | |     `-BinaryOperator 'int' lvalue '='
    | | |       |-DeclRefExpr 'int' lvalue Var 0x7ff4e300c528 't1' 'int'
    | | |       `-CallExpr 'int'
    | | |         `-ImplicitCastExpr 'int (*)(void)' <FunctionToPointerDecay>
    | | |           `-DeclRefExpr 'int (void)' lvalue Function 0x7ff4e2866088 'foo' 'int (void)'
    | | `-ParenExpr 'int' lvalue
    | |   `-BinaryOperator 'int' lvalue '='
    | |     |-DeclRefExpr 'int' lvalue Var 0x7ff4e300c5b8 't2' 'int'
    | |     `-BinaryOperator 'int' '+'
    | |       |-CallExpr 'int'
    | |       | `-ImplicitCastExpr 'int (*)(void)' <FunctionToPointerDecay>
    | |       |   `-DeclRefExpr 'int (void)' lvalue Function 0x7ff4e28661a0 'bar1' 'int (void)'
    | |       `-IntegerLiteral 'int' 1
    | `-ConditionalOperator 'int' lvalue
    |   |-BinaryOperator '_Bool' '<'
    |   | |-ImplicitCastExpr 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 'int' lvalue Var 0x7ff4e300c528 't1' 'int'
    |   | `-ImplicitCastExpr 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 'int' lvalue Var 0x7ff4e300c5b8 't2' 'int'
    |   |-DeclRefExpr 'int' lvalue Var 0x7ff4e300c528 't1' 'int'
    |   `-DeclRefExpr 'int' lvalue Var 0x7ff4e300c5b8 't2' 'int'
    `-ReturnStmt
      `-IntegerLiteral 'int' 0
