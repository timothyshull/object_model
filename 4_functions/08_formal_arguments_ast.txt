TranslationUnitDecl 0x7fd2e802f6d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fd2e802fc60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fd2e802f940 '__int128'
|-TypedefDecl 0x7fd2e802fcd0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fd2e802f960 'unsigned __int128'
|-TypedefDecl 0x7fd2e8030018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fd2e802fdc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fd2e802fd28 '__NSConstantString_tag'
|-TypedefDecl 0x7fd2e80300b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fd2e8030070 'char *'
|   `-BuiltinType 0x7fd2e802f760 'char'
|-TypedefDecl 0x7fd2e8063200 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fd2e8030390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fd2e80301a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fd2e8030108 '__va_list_tag'
|-FunctionDecl 0x7fd2e80633c8 <object_model/4_functions/08_formal_arguments.cpp:2:1, line:5:1> line:2:12 used min 'int (int, int)' inline
| |-ParmVarDecl 0x7fd2e8063270 <col:16, col:20> col:20 used i 'int'
| |-ParmVarDecl 0x7fd2e80632e8 <col:23, col:27> col:27 used j 'int'
| `-CompoundStmt 0x7fd2e8063608 <line:3:1, line:5:1>
|   `-ReturnStmt 0x7fd2e80635f0 <line:4:5, col:24>
|     `-ImplicitCastExpr 0x7fd2e80635d8 <col:12, col:24> 'int' <LValueToRValue>
|       `-ConditionalOperator 0x7fd2e80635a8 <col:12, col:24> 'int' lvalue
|         |-BinaryOperator 0x7fd2e8063530 <col:12, col:16> '_Bool' '<'
|         | |-ImplicitCastExpr 0x7fd2e8063500 <col:12> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x7fd2e80634b0 <col:12> 'int' lvalue ParmVar 0x7fd2e8063270 'i' 'int'
|         | `-ImplicitCastExpr 0x7fd2e8063518 <col:16> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x7fd2e80634d8 <col:16> 'int' lvalue ParmVar 0x7fd2e80632e8 'j' 'int'
|         |-DeclRefExpr 0x7fd2e8063558 <col:20> 'int' lvalue ParmVar 0x7fd2e8063270 'i' 'int'
|         `-DeclRefExpr 0x7fd2e8063580 <col:24> 'int' lvalue ParmVar 0x7fd2e80632e8 'j' 'int'
|-FunctionDecl 0x7fd2e8063688 <line:7:1, line:10:1> line:7:5 used foo 'int (void)'
| `-CompoundStmt 0x7fd2e8063758 <line:8:1, line:10:1>
|   `-ReturnStmt 0x7fd2e8063740 <line:9:5, col:12>
|     `-IntegerLiteral 0x7fd2e8063720 <col:12> 'int' 1024
|-FunctionDecl 0x7fd2e80637a0 <line:12:1, line:15:1> line:12:5 used bar1 'int (void)'
| `-CompoundStmt 0x7fd2e8063870 <line:13:1, line:15:1>
|   `-ReturnStmt 0x7fd2e8063858 <line:14:5, col:12>
|     `-IntegerLiteral 0x7fd2e8063838 <col:12> 'int' 2047
`-FunctionDecl 0x7fd2e80638b8 <line:17:1, line:35:1> line:17:5 main 'int (void)'
  `-CompoundStmt 0x7fd2e78024f0 <line:18:1, line:35:1>
    |-DeclStmt 0x7fd2e8063af0 <line:19:5, col:21>
    | `-VarDecl 0x7fd2e80639b0 <col:5, col:17> col:10 used val1 'int':'int' cinit
    |   `-IntegerLiteral 0x7fd2e8063a10 <col:17> 'int' 1024
    |-DeclStmt 0x7fd2e8063c08 <line:20:5, col:21>
    | `-VarDecl 0x7fd2e8063b18 <col:5, col:17> col:10 used val2 'int':'int' cinit
    |   `-IntegerLiteral 0x7fd2e8063b78 <col:17> 'int' 2048
    |-DeclStmt 0x7fd2e8063e78 <line:22:5, col:35>
    | `-VarDecl 0x7fd2e8063c30 <col:5, col:34> col:10 used min_val 'int':'int' cinit
    |   `-CallExpr 0x7fd2e8063da0 <col:20, col:34> 'int'
    |     |-ImplicitCastExpr 0x7fd2e8063d88 <col:20> 'int (*)(int, int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fd2e8063d38 <col:20> 'int (int, int)' lvalue Function 0x7fd2e80633c8 'min' 'int (int, int)'
    |     |-ImplicitCastExpr 0x7fd2e8063dd8 <col:24> 'int':'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x7fd2e8063ce8 <col:24> 'int':'int' lvalue Var 0x7fd2e80639b0 'val1' 'int':'int'
    |     `-ImplicitCastExpr 0x7fd2e8063df0 <col:30> 'int':'int' <LValueToRValue>
    |       `-DeclRefExpr 0x7fd2e8063d10 <col:30> 'int':'int' lvalue Var 0x7fd2e8063b18 'val2' 'int':'int'
    |-BinaryOperator 0x7fd2e8063fc8 <line:25:5, col:29> 'int':'int' lvalue '='
    | |-DeclRefExpr 0x7fd2e8063e90 <col:5> 'int':'int' lvalue Var 0x7fd2e8063c30 'min_val' 'int':'int'
    | `-CallExpr 0x7fd2e8063f90 <col:15, col:29> 'int'
    |   |-ImplicitCastExpr 0x7fd2e8063f78 <col:15> 'int (*)(int, int)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x7fd2e8063f50 <col:15> 'int (int, int)' lvalue Function 0x7fd2e80633c8 'min' 'int (int, int)'
    |   |-IntegerLiteral 0x7fd2e8063f10 <col:19> 'int' 1024
    |   `-IntegerLiteral 0x7fd2e8063f30 <col:25> 'int' 2048
    |-BinaryOperator 0x7fd2e7801ee8 <line:28:5, col:36> 'int':'int' lvalue '='
    | |-DeclRefExpr 0x7fd2e8063ff0 <col:5> 'int':'int' lvalue Var 0x7fd2e8063c30 'min_val' 'int':'int'
    | `-CallExpr 0x7fd2e7801eb0 <col:15, col:36> 'int'
    |   |-ImplicitCastExpr 0x7fd2e7801e98 <col:15> 'int (*)(int, int)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x7fd2e7801e70 <col:15> 'int (int, int)' lvalue Function 0x7fd2e80633c8 'min' 'int (int, int)'
    |   |-CallExpr 0x7fd2e8064130 <col:19, col:23> 'int'
    |   | `-ImplicitCastExpr 0x7fd2e8064118 <col:19> 'int (*)(void)' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x7fd2e80640c8 <col:19> 'int (void)' lvalue Function 0x7fd2e8063688 'foo' 'int (void)'
    |   `-BinaryOperator 0x7fd2e7801e48 <col:26, col:35> 'int' '+'
    |     |-CallExpr 0x7fd2e7801e00 <col:26, col:31> 'int'
    |     | `-ImplicitCastExpr 0x7fd2e80641d8 <col:26> 'int (*)(void)' <FunctionToPointerDecay>
    |     |   `-DeclRefExpr 0x7fd2e80641b0 <col:26> 'int (void)' lvalue Function 0x7fd2e80637a0 'bar1' 'int (void)'
    |     `-IntegerLiteral 0x7fd2e7801e28 <col:35> 'int' 1
    |-DeclStmt 0x7fd2e7801f88 <line:31:5, col:11>
    | `-VarDecl 0x7fd2e7801f28 <col:5, col:9> col:9 used t1 'int'
    |-DeclStmt 0x7fd2e7802018 <line:32:5, col:11>
    | `-VarDecl 0x7fd2e7801fb8 <col:5, col:9> col:9 used t2 'int'
    |-BinaryOperator 0x7fd2e7802490 <line:33:5, col:63> 'int' lvalue ','
    | |-BinaryOperator 0x7fd2e7802340 <col:5, col:45> 'int' lvalue ','
    | | |-BinaryOperator 0x7fd2e78021a0 <col:5, col:26> 'int':'int' lvalue '='
    | | | |-DeclRefExpr 0x7fd2e7802030 <col:5> 'int':'int' lvalue Var 0x7fd2e8063c30 'min_val' 'int':'int'
    | | | `-ImplicitCastExpr 0x7fd2e7802188 <col:15, col:26> 'int' <LValueToRValue>
    | | |   `-ParenExpr 0x7fd2e7802168 <col:15, col:26> 'int' lvalue
    | | |     `-BinaryOperator 0x7fd2e7802140 <col:16, col:25> 'int' lvalue '='
    | | |       |-DeclRefExpr 0x7fd2e7802058 <col:16> 'int' lvalue Var 0x7fd2e7801f28 't1' 'int'
    | | |       `-CallExpr 0x7fd2e7802118 <col:21, col:25> 'int'
    | | |         `-ImplicitCastExpr 0x7fd2e7802100 <col:21> 'int (*)(void)' <FunctionToPointerDecay>
    | | |           `-DeclRefExpr 0x7fd2e78020d8 <col:21> 'int (void)' lvalue Function 0x7fd2e8063688 'foo' 'int (void)'
    | | `-ParenExpr 0x7fd2e7802320 <col:29, col:45> 'int' lvalue
    | |   `-BinaryOperator 0x7fd2e78022f8 <col:30, col:44> 'int' lvalue '='
    | |     |-DeclRefExpr 0x7fd2e78021c8 <col:30> 'int' lvalue Var 0x7fd2e7801fb8 't2' 'int'
    | |     `-BinaryOperator 0x7fd2e78022d0 <col:35, col:44> 'int' '+'
    | |       |-CallExpr 0x7fd2e7802288 <col:35, col:40> 'int'
    | |       | `-ImplicitCastExpr 0x7fd2e7802270 <col:35> 'int (*)(void)' <FunctionToPointerDecay>
    | |       |   `-DeclRefExpr 0x7fd2e7802248 <col:35> 'int (void)' lvalue Function 0x7fd2e80637a0 'bar1' 'int (void)'
    | |       `-IntegerLiteral 0x7fd2e78022b0 <col:44> 'int' 1
    | `-ConditionalOperator 0x7fd2e7802460 <col:48, col:63> 'int' lvalue
    |   |-BinaryOperator 0x7fd2e78023e8 <col:48, col:53> '_Bool' '<'
    |   | |-ImplicitCastExpr 0x7fd2e78023b8 <col:48> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x7fd2e7802368 <col:48> 'int' lvalue Var 0x7fd2e7801f28 't1' 'int'
    |   | `-ImplicitCastExpr 0x7fd2e78023d0 <col:53> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x7fd2e7802390 <col:53> 'int' lvalue Var 0x7fd2e7801fb8 't2' 'int'
    |   |-DeclRefExpr 0x7fd2e7802410 <col:58> 'int' lvalue Var 0x7fd2e7801f28 't1' 'int'
    |   `-DeclRefExpr 0x7fd2e7802438 <col:63> 'int' lvalue Var 0x7fd2e7801fb8 't2' 'int'
    `-ReturnStmt 0x7fd2e78024d8 <line:34:5, col:12>
      `-IntegerLiteral 0x7fd2e78024b8 <col:12> 'int' 0
