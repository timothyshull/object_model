
*** Dumping AST Record Layout
         0 | struct B
         0 |   (B vtable pointer)
         8 |   int n
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class X
         0 |   (X vtable pointer)
         8 |   struct B (virtual base)
         8 |     (B vtable pointer)
        16 |     int n
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Y
         0 |   (Y vtable pointer)
         8 |   struct B (virtual base)
         8 |     (B vtable pointer)
        16 |     int n
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Z
         0 |   struct B (primary base)
         0 |     (B vtable pointer)
         8 |     int n
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct AA
         0 |   class X (primary base)
         0 |     (X vtable pointer)
         8 |   class Y (base)
         8 |     (Y vtable pointer)
        16 |   class Z (base)
        16 |     struct B (primary base)
        16 |       (B vtable pointer)
        24 |       int n
        32 |   struct B (virtual base)
        32 |     (B vtable pointer)
        40 |     int n
           | [sizeof=48, dsize=44, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fcbf1869058 </Users/tskull/Documents/Programming/Cpp/object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:1:1, line:7:1> line:1:8 referenced struct B definition
|-CXXRecordDecl 0x7fcbf1869178 <col:1, col:8> col:8 implicit struct B
|-FieldDecl 0x7fcbf1869228 <line:2:5, col:9> col:9 referenced n 'int'
|-CXXMethodDecl 0x7fcbf18692f0 <line:4:5, line:6:5> line:4:18 m 'void (void)' virtual
| `-CompoundStmt 0x7fcbf18698b0 <col:22, line:6:5>
|   `-BinaryOperator 0x7fcbf1869888 <line:5:9, col:13> 'int' lvalue '='
|     |-MemberExpr 0x7fcbf1869830 <col:9> 'int' lvalue ->n 0x7fcbf1869228
|     | `-CXXThisExpr 0x7fcbf1869818 <col:9> 'struct B *' this
|     `-IntegerLiteral 0x7fcbf1869868 <col:13> 'int' 1
|-CXXMethodDecl 0x7fcbf18693e8 <line:1:8, <invalid sloc>> col:8 implicit operator= 'struct B &(const struct B &)' inline default noexcept-unevaluated 0x7fcbf18693e8
| `-ParmVarDecl 0x7fcbf1869500 <col:8> col:8 'const struct B &'
|-CXXMethodDecl 0x7fcbf1869598 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(struct B &&)' inline default noexcept-unevaluated 0x7fcbf1869598
| `-ParmVarDecl 0x7fcbf18696b0 <col:8> col:8 'struct B &&'
|-CXXDestructorDecl 0x7fcbf1869738 <col:8> col:8 implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7fcbf1869738
|-CXXConstructorDecl 0x7fcbf280def8 <col:8> col:8 implicit used B 'void (void) noexcept' inline default
| `-CompoundStmt 0x7fcbf280f210 <col:8>
|-CXXConstructorDecl 0x7fcbf280e4f8 <col:8> col:8 implicit constexpr B 'void (const struct B &)' inline default noexcept-unevaluated 0x7fcbf280e4f8
| `-ParmVarDecl 0x7fcbf280e620 <col:8> col:8 'const struct B &'
`-CXXConstructorDecl 0x7fcbf280e688 <col:8> col:8 implicit constexpr B 'void (struct B &&)' inline default noexcept-unevaluated 0x7fcbf280e688
  `-ParmVarDecl 0x7fcbf280e7b0 <col:8> col:8 'struct B &&'

Layout: <CGRecordLayout
  LLVMType:%struct.B = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.B.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fcbf18698d0 </Users/tskull/Documents/Programming/Cpp/object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:9:1, line:13:1> line:9:7 referenced class X definition
|-virtual public 'struct B'
|-CXXRecordDecl 0x7fcbf1869a50 <col:1, col:7> col:7 implicit class X
|-CXXMethodDecl 0x7fcbf1869b38 <line:10:5, line:12:5> line:10:18 m 'void (void)' virtual
| |-CompoundStmt 0x7fcbf2809bf8 <col:31, line:12:5>
| | `-BinaryOperator 0x7fcbf2809bd0 <line:11:9, col:16> 'int' lvalue '='
| |   |-MemberExpr 0x7fcbf2809b60 <col:9, col:12> 'int' lvalue ->n 0x7fcbf1869228
| |   | `-ImplicitCastExpr 0x7fcbf2809b40 <col:12> 'struct B *' <UncheckedDerivedToBase (virtual B)>
| |   |   `-CXXThisExpr 0x7fcbf2809b28 <col:12> 'class X *' this
| |   `-IntegerLiteral 0x7fcbf2809bb0 <col:16> 'int' 2
| `-OverrideAttr 0x7fcbf1869bd0 <line:10:22>
|-CXXMethodDecl 0x7fcbf1869c78 <line:9:7, <invalid sloc>> col:7 implicit operator= 'class X &(const class X &)' inline default noexcept-unevaluated 0x7fcbf1869c78
| `-ParmVarDecl 0x7fcbf1869d90 <col:7> col:7 'const class X &'
|-CXXMethodDecl 0x7fcbf1869e28 <col:7, <invalid sloc>> col:7 implicit operator= 'class X &(class X &&)' inline default noexcept-unevaluated 0x7fcbf1869e28
| `-ParmVarDecl 0x7fcbf1869f40 <col:7> col:7 'class X &&'
|-CXXDestructorDecl 0x7fcbf2809a00 <col:7> col:7 implicit ~X 'void (void)' inline default trivial noexcept-unevaluated 0x7fcbf2809a00
|-CXXConstructorDecl 0x7fcbf280ddf8 <col:7> col:7 implicit used X 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7fcbf280f290 <col:7> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7fcbf280f300 <col:7>
|-CXXConstructorDecl 0x7fcbf280e368 <col:7> col:7 implicit X 'void (const class X &)' inline default noexcept-unevaluated 0x7fcbf280e368
| `-ParmVarDecl 0x7fcbf280e490 <col:7> col:7 'const class X &'
`-CXXConstructorDecl 0x7fcbf280e818 <col:7> col:7 implicit X 'void (class X &&)' inline default noexcept-unevaluated 0x7fcbf280e818
  `-ParmVarDecl 0x7fcbf280e940 <col:7> col:7 'class X &&'

Layout: <CGRecordLayout
  LLVMType:%class.X = type { i32 (...)**, %struct.B.base }
  NonVirtualBaseLLVMType:%class.X.base = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fcbf2809c18 </Users/tskull/Documents/Programming/Cpp/object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:15:1, line:19:1> line:15:7 referenced class Y definition
|-virtual public 'struct B'
|-CXXRecordDecl 0x7fcbf2809d90 <col:1, col:7> col:7 implicit class Y
|-CXXMethodDecl 0x7fcbf2809e78 <line:16:5, line:18:5> line:16:18 m 'void (void)' virtual
| |-CompoundStmt 0x7fcbf280a4f0 <col:31, line:18:5>
| | `-BinaryOperator 0x7fcbf280a4c8 <line:17:9, col:16> 'int' lvalue '='
| |   |-MemberExpr 0x7fcbf280a458 <col:9, col:12> 'int' lvalue ->n 0x7fcbf1869228
| |   | `-ImplicitCastExpr 0x7fcbf280a438 <col:12> 'struct B *' <UncheckedDerivedToBase (virtual B)>
| |   |   `-CXXThisExpr 0x7fcbf280a420 <col:12> 'class Y *' this
| |   `-IntegerLiteral 0x7fcbf280a4a8 <col:16> 'int' 3
| `-OverrideAttr 0x7fcbf2809f10 <line:16:22>
|-CXXMethodDecl 0x7fcbf2809fb8 <line:15:7, <invalid sloc>> col:7 implicit operator= 'class Y &(const class Y &)' inline default noexcept-unevaluated 0x7fcbf2809fb8
| `-ParmVarDecl 0x7fcbf280a0d0 <col:7> col:7 'const class Y &'
|-CXXMethodDecl 0x7fcbf280a168 <col:7, <invalid sloc>> col:7 implicit operator= 'class Y &(class Y &&)' inline default noexcept-unevaluated 0x7fcbf280a168
| `-ParmVarDecl 0x7fcbf280a280 <col:7> col:7 'class Y &&'
|-CXXDestructorDecl 0x7fcbf280a308 <col:7> col:7 implicit ~Y 'void (void)' inline default trivial noexcept-unevaluated 0x7fcbf280a308
|-CXXConstructorDecl 0x7fcbf280dff8 <col:7> col:7 implicit used Y 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7fcbf280f380 <col:7> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7fcbf280f3f0 <col:7>
|-CXXConstructorDecl 0x7fcbf280ea00 <col:7> col:7 implicit Y 'void (const class Y &)' inline default noexcept-unevaluated 0x7fcbf280ea00
| `-ParmVarDecl 0x7fcbf280eb30 <col:7> col:7 'const class Y &'
`-CXXConstructorDecl 0x7fcbf280eb98 <col:7> col:7 implicit Y 'void (class Y &&)' inline default noexcept-unevaluated 0x7fcbf280eb98
  `-ParmVarDecl 0x7fcbf280ecc0 <col:7> col:7 'class Y &&'

Layout: <CGRecordLayout
  LLVMType:%class.Y = type { i32 (...)**, %struct.B.base }
  NonVirtualBaseLLVMType:%class.Y.base = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fcbf280a510 </Users/tskull/Documents/Programming/Cpp/object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:21:1, line:25:1> line:21:7 referenced class Z definition
|-public 'struct B'
|-CXXRecordDecl 0x7fcbf280a678 <col:1, col:7> col:7 implicit class Z
|-CXXMethodDecl 0x7fcbf280a758 <line:22:5, line:24:5> line:22:18 m 'void (void)' virtual
| |-CompoundStmt 0x7fcbf280c220 <col:31, line:24:5>
| | `-BinaryOperator 0x7fcbf280c1f8 <line:23:9, col:16> 'int' lvalue '='
| |   |-MemberExpr 0x7fcbf280c188 <col:9, col:12> 'int' lvalue ->n 0x7fcbf1869228
| |   | `-ImplicitCastExpr 0x7fcbf280c168 <col:12> 'struct B *' <UncheckedDerivedToBase (B)>
| |   |   `-CXXThisExpr 0x7fcbf280c150 <col:12> 'class Z *' this
| |   `-IntegerLiteral 0x7fcbf280c1d8 <col:16> 'int' 4
| `-OverrideAttr 0x7fcbf280a7f0 <line:22:22>
|-CXXMethodDecl 0x7fcbf280a898 <line:21:7, <invalid sloc>> col:7 implicit operator= 'class Z &(const class Z &)' inline default noexcept-unevaluated 0x7fcbf280a898
| `-ParmVarDecl 0x7fcbf280be00 <col:7> col:7 'const class Z &'
|-CXXMethodDecl 0x7fcbf280be98 <col:7, <invalid sloc>> col:7 implicit operator= 'class Z &(class Z &&)' inline default noexcept-unevaluated 0x7fcbf280be98
| `-ParmVarDecl 0x7fcbf280bfb0 <col:7> col:7 'class Z &&'
|-CXXDestructorDecl 0x7fcbf280c038 <col:7> col:7 implicit ~Z 'void (void)' inline default trivial noexcept-unevaluated 0x7fcbf280c038
|-CXXConstructorDecl 0x7fcbf280e0f8 <col:7> col:7 implicit used Z 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7fcbf280f470 <col:7> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7fcbf280f4e0 <col:7>
|-CXXConstructorDecl 0x7fcbf280ed28 <col:7> col:7 implicit constexpr Z 'void (const class Z &)' inline default noexcept-unevaluated 0x7fcbf280ed28
| `-ParmVarDecl 0x7fcbf280ee50 <col:7> col:7 'const class Z &'
`-CXXConstructorDecl 0x7fcbf280eeb8 <col:7> col:7 implicit constexpr Z 'void (class Z &&)' inline default noexcept-unevaluated 0x7fcbf280eeb8
  `-ParmVarDecl 0x7fcbf280efe0 <col:7> col:7 'class Z &&'

Layout: <CGRecordLayout
  LLVMType:%class.Z = type { %struct.B.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.Z.base = type { %struct.B.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fcbf280c240 </Users/tskull/Documents/Programming/Cpp/object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:27:1, line:34:1> line:27:8 referenced struct AA definition
|-public 'class X'
|-public 'class Y'
|-public 'class Z'
|-CXXRecordDecl 0x7fcbf280c440 <col:1, col:8> col:8 implicit struct AA
|-CXXMethodDecl 0x7fcbf280c528 <line:28:5, line:33:5> line:28:10 used m 'void (void)'
| |-CompoundStmt 0x7fcbf280da98 <line:29:5, line:33:5>
| | |-BinaryOperator 0x7fcbf280cbb0 <line:30:9, col:16> 'int' lvalue '='
| | | |-MemberExpr 0x7fcbf280cb40 <col:9, col:12> 'int' lvalue ->n 0x7fcbf1869228
| | | | `-ImplicitCastExpr 0x7fcbf280cb20 <col:12> 'struct B *' <UncheckedDerivedToBase (virtual B)>
| | | |   `-ImplicitCastExpr 0x7fcbf280cb00 <col:12> 'class X *' <UncheckedDerivedToBase (X)>
| | | |     `-CXXThisExpr 0x7fcbf280cae8 <col:12> 'struct AA *' this
| | | `-IntegerLiteral 0x7fcbf280cb90 <col:16> 'int' 5
| | |-BinaryOperator 0x7fcbf280ccf0 <line:31:9, col:16> 'int' lvalue '='
| | | |-MemberExpr 0x7fcbf280cc80 <col:9, col:12> 'int' lvalue ->n 0x7fcbf1869228
| | | | `-ImplicitCastExpr 0x7fcbf280cc60 <col:12> 'struct B *' <UncheckedDerivedToBase (virtual B)>
| | | |   `-ImplicitCastExpr 0x7fcbf280cc40 <col:12> 'class Y *' <UncheckedDerivedToBase (Y)>
| | | |     `-CXXThisExpr 0x7fcbf280cc28 <col:12> 'struct AA *' this
| | | `-IntegerLiteral 0x7fcbf280ccd0 <col:16> 'int' 6
| | `-BinaryOperator 0x7fcbf280da70 <line:32:9, col:16> 'int' lvalue '='
| |   |-MemberExpr 0x7fcbf280da00 <col:9, col:12> 'int' lvalue ->n 0x7fcbf1869228
| |   | `-ImplicitCastExpr 0x7fcbf280cda0 <col:12> 'struct B *' <UncheckedDerivedToBase (B)>
| |   |   `-ImplicitCastExpr 0x7fcbf280cd80 <col:12> 'class Z *' <UncheckedDerivedToBase (Z)>
| |   |     `-CXXThisExpr 0x7fcbf280cd68 <col:12> 'struct AA *' this
| |   `-IntegerLiteral 0x7fcbf280da50 <col:16> 'int' 7
| `-OverrideAttr 0x7fcbf280c5c0 <line:28:14>
|-CXXMethodDecl 0x7fcbf280c668 <line:27:8, <invalid sloc>> col:8 implicit operator= 'struct AA &(const struct AA &)' inline default noexcept-unevaluated 0x7fcbf280c668
| `-ParmVarDecl 0x7fcbf280c780 <col:8> col:8 'const struct AA &'
|-CXXMethodDecl 0x7fcbf280c818 <col:8, <invalid sloc>> col:8 implicit operator= 'struct AA &(struct AA &&)' inline default noexcept-unevaluated 0x7fcbf280c818
| `-ParmVarDecl 0x7fcbf280c930 <col:8> col:8 'struct AA &&'
|-CXXDestructorDecl 0x7fcbf280c9b8 <col:8> col:8 implicit ~AA 'void (void)' inline default trivial noexcept-unevaluated 0x7fcbf280c9b8
|-CXXConstructorDecl 0x7fcbf280dcf8 <col:8> col:8 implicit used AA 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7fcbf280f228 <col:8> 'struct B' 'void (void) noexcept'
| |-CXXCtorInitializer 'class X'
| | `-CXXConstructExpr 0x7fcbf280f318 <col:8> 'class X' 'void (void) noexcept'
| |-CXXCtorInitializer 'class Y'
| | `-CXXConstructExpr 0x7fcbf280f408 <col:8> 'class Y' 'void (void) noexcept'
| |-CXXCtorInitializer 'class Z'
| | `-CXXConstructExpr 0x7fcbf280f4f8 <col:8> 'class Z' 'void (void) noexcept'
| `-CompoundStmt 0x7fcbf280f580 <col:8>
|-CXXConstructorDecl 0x7fcbf280e1d8 <col:8> col:8 implicit AA 'void (const struct AA &)' inline default noexcept-unevaluated 0x7fcbf280e1d8
| `-ParmVarDecl 0x7fcbf280e300 <col:8> col:8 'const struct AA &'
`-CXXConstructorDecl 0x7fcbf280f048 <col:8> col:8 implicit AA 'void (struct AA &&)' inline default noexcept-unevaluated 0x7fcbf280f048
  `-ParmVarDecl 0x7fcbf280f170 <col:8> col:8 'struct AA &&'

Layout: <CGRecordLayout
  LLVMType:%struct.AA = type <{ %class.X.base, %class.Y.base, %class.Z.base, [4 x i8], %struct.B.base, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.AA.base = type <{ %class.X.base, %class.Y.base, %class.Z.base }>
  IsZeroInitializable:1
  BitFields:[
]>
