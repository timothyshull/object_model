
*** Dumping AST Record Layout
         0 | struct B
         0 |   (B vtable pointer)
         8 |   int n
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class X
         0 |   (X vtable pointer)
         8 |   struct B (virtual base)
         8 |     (B vtable pointer)
        16 |     int n
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Y
         0 |   (Y vtable pointer)
         8 |   struct B (virtual base)
         8 |     (B vtable pointer)
        16 |     int n
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Z
         0 |   struct B (primary base)
         0 |     (B vtable pointer)
         8 |     int n
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct AA
         0 |   class X (primary base)
         0 |     (X vtable pointer)
         8 |   class Y (base)
         8 |     (Y vtable pointer)
        16 |   class Z (base)
        16 |     struct B (primary base)
        16 |       (B vtable pointer)
        24 |       int n
        32 |   struct B (virtual base)
        32 |     (B vtable pointer)
        40 |     int n
           | [sizeof=48, dsize=44, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff64b867258 <object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:1:1, line:7:1> line:1:8 referenced struct B definition
|-CXXRecordDecl 0x7ff64b867378 <col:1, col:8> col:8 implicit struct B
|-FieldDecl 0x7ff64b867428 <line:2:5, col:9> col:9 referenced n 'int'
|-CXXMethodDecl 0x7ff64b8674f0 <line:4:5, line:6:5> line:4:18 m 'void (void)' virtual
| `-CompoundStmt 0x7ff64b867ab0 <col:22, line:6:5>
|   `-BinaryOperator 0x7ff64b867a88 <line:5:9, col:13> 'int' lvalue '='
|     |-MemberExpr 0x7ff64b867a30 <col:9> 'int' lvalue ->n 0x7ff64b867428
|     | `-CXXThisExpr 0x7ff64b867a18 <col:9> 'struct B *' this
|     `-IntegerLiteral 0x7ff64b867a68 <col:13> 'int' 1
|-CXXMethodDecl 0x7ff64b8675e8 <line:1:8, <invalid sloc>> col:8 implicit operator= 'struct B &(const struct B &)' inline default noexcept-unevaluated 0x7ff64b8675e8
| `-ParmVarDecl 0x7ff64b867700 <col:8> col:8 'const struct B &'
|-CXXMethodDecl 0x7ff64b867798 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(struct B &&)' inline default noexcept-unevaluated 0x7ff64b867798
| `-ParmVarDecl 0x7ff64b8678b0 <col:8> col:8 'struct B &&'
|-CXXDestructorDecl 0x7ff64b867938 <col:8> col:8 implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7ff64b867938
|-CXXConstructorDecl 0x7ff64b895ef8 <col:8> col:8 implicit used B 'void (void) noexcept' inline default
| `-CompoundStmt 0x7ff64b897210 <col:8>
|-CXXConstructorDecl 0x7ff64b8964f8 <col:8> col:8 implicit constexpr B 'void (const struct B &)' inline default noexcept-unevaluated 0x7ff64b8964f8
| `-ParmVarDecl 0x7ff64b896620 <col:8> col:8 'const struct B &'
`-CXXConstructorDecl 0x7ff64b896688 <col:8> col:8 implicit constexpr B 'void (struct B &&)' inline default noexcept-unevaluated 0x7ff64b896688
  `-ParmVarDecl 0x7ff64b8967b0 <col:8> col:8 'struct B &&'

Layout: <CGRecordLayout
  LLVMType:%struct.B = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.B.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff64b867ad0 <object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:9:1, line:13:1> line:9:7 referenced class X definition
|-virtual public 'struct B'
|-CXXRecordDecl 0x7ff64b867c50 <col:1, col:7> col:7 implicit class X
|-CXXMethodDecl 0x7ff64b867d38 <line:10:5, line:12:5> line:10:18 m 'void (void)' virtual
| |-CompoundStmt 0x7ff64b8927f8 <col:31, line:12:5>
| | `-BinaryOperator 0x7ff64b8927d0 <line:11:9, col:16> 'int' lvalue '='
| |   |-MemberExpr 0x7ff64b892760 <col:9, col:12> 'int' lvalue ->n 0x7ff64b867428
| |   | `-ImplicitCastExpr 0x7ff64b892740 <col:12> 'struct B *' <UncheckedDerivedToBase (virtual B)>
| |   |   `-CXXThisExpr 0x7ff64b892728 <col:12> 'class X *' this
| |   `-IntegerLiteral 0x7ff64b8927b0 <col:16> 'int' 2
| `-OverrideAttr 0x7ff64b867dd0 <line:10:22>
|-CXXMethodDecl 0x7ff64b867e78 <line:9:7, <invalid sloc>> col:7 implicit operator= 'class X &(const class X &)' inline default noexcept-unevaluated 0x7ff64b867e78
| `-ParmVarDecl 0x7ff64b867f90 <col:7> col:7 'const class X &'
|-CXXMethodDecl 0x7ff64b868028 <col:7, <invalid sloc>> col:7 implicit operator= 'class X &(class X &&)' inline default noexcept-unevaluated 0x7ff64b868028
| `-ParmVarDecl 0x7ff64b868140 <col:7> col:7 'class X &&'
|-CXXDestructorDecl 0x7ff64b892600 <col:7> col:7 implicit ~X 'void (void)' inline default trivial noexcept-unevaluated 0x7ff64b892600
|-CXXConstructorDecl 0x7ff64b895df8 <col:7> col:7 implicit used X 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7ff64b897290 <col:7> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7ff64b897300 <col:7>
|-CXXConstructorDecl 0x7ff64b896368 <col:7> col:7 implicit X 'void (const class X &)' inline default noexcept-unevaluated 0x7ff64b896368
| `-ParmVarDecl 0x7ff64b896490 <col:7> col:7 'const class X &'
`-CXXConstructorDecl 0x7ff64b896818 <col:7> col:7 implicit X 'void (class X &&)' inline default noexcept-unevaluated 0x7ff64b896818
  `-ParmVarDecl 0x7ff64b896940 <col:7> col:7 'class X &&'

Layout: <CGRecordLayout
  LLVMType:%class.X = type { i32 (...)**, %struct.B.base }
  NonVirtualBaseLLVMType:%class.X.base = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff64b892818 <object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:15:1, line:19:1> line:15:7 referenced class Y definition
|-virtual public 'struct B'
|-CXXRecordDecl 0x7ff64b892990 <col:1, col:7> col:7 implicit class Y
|-CXXMethodDecl 0x7ff64b892a78 <line:16:5, line:18:5> line:16:18 m 'void (void)' virtual
| |-CompoundStmt 0x7ff64b8930f0 <col:31, line:18:5>
| | `-BinaryOperator 0x7ff64b8930c8 <line:17:9, col:16> 'int' lvalue '='
| |   |-MemberExpr 0x7ff64b893058 <col:9, col:12> 'int' lvalue ->n 0x7ff64b867428
| |   | `-ImplicitCastExpr 0x7ff64b893038 <col:12> 'struct B *' <UncheckedDerivedToBase (virtual B)>
| |   |   `-CXXThisExpr 0x7ff64b893020 <col:12> 'class Y *' this
| |   `-IntegerLiteral 0x7ff64b8930a8 <col:16> 'int' 3
| `-OverrideAttr 0x7ff64b892b10 <line:16:22>
|-CXXMethodDecl 0x7ff64b892bb8 <line:15:7, <invalid sloc>> col:7 implicit operator= 'class Y &(const class Y &)' inline default noexcept-unevaluated 0x7ff64b892bb8
| `-ParmVarDecl 0x7ff64b892cd0 <col:7> col:7 'const class Y &'
|-CXXMethodDecl 0x7ff64b892d68 <col:7, <invalid sloc>> col:7 implicit operator= 'class Y &(class Y &&)' inline default noexcept-unevaluated 0x7ff64b892d68
| `-ParmVarDecl 0x7ff64b892e80 <col:7> col:7 'class Y &&'
|-CXXDestructorDecl 0x7ff64b892f08 <col:7> col:7 implicit ~Y 'void (void)' inline default trivial noexcept-unevaluated 0x7ff64b892f08
|-CXXConstructorDecl 0x7ff64b895ff8 <col:7> col:7 implicit used Y 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7ff64b897380 <col:7> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7ff64b8973f0 <col:7>
|-CXXConstructorDecl 0x7ff64b896a00 <col:7> col:7 implicit Y 'void (const class Y &)' inline default noexcept-unevaluated 0x7ff64b896a00
| `-ParmVarDecl 0x7ff64b896b30 <col:7> col:7 'const class Y &'
`-CXXConstructorDecl 0x7ff64b896b98 <col:7> col:7 implicit Y 'void (class Y &&)' inline default noexcept-unevaluated 0x7ff64b896b98
  `-ParmVarDecl 0x7ff64b896cc0 <col:7> col:7 'class Y &&'

Layout: <CGRecordLayout
  LLVMType:%class.Y = type { i32 (...)**, %struct.B.base }
  NonVirtualBaseLLVMType:%class.Y.base = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff64b893110 <object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:21:1, line:25:1> line:21:7 referenced class Z definition
|-public 'struct B'
|-CXXRecordDecl 0x7ff64b893278 <col:1, col:7> col:7 implicit class Z
|-CXXMethodDecl 0x7ff64b893358 <line:22:5, line:24:5> line:22:18 m 'void (void)' virtual
| |-CompoundStmt 0x7ff64b894220 <col:31, line:24:5>
| | `-BinaryOperator 0x7ff64b8941f8 <line:23:9, col:16> 'int' lvalue '='
| |   |-MemberExpr 0x7ff64b894188 <col:9, col:12> 'int' lvalue ->n 0x7ff64b867428
| |   | `-ImplicitCastExpr 0x7ff64b894168 <col:12> 'struct B *' <UncheckedDerivedToBase (B)>
| |   |   `-CXXThisExpr 0x7ff64b894150 <col:12> 'class Z *' this
| |   `-IntegerLiteral 0x7ff64b8941d8 <col:16> 'int' 4
| `-OverrideAttr 0x7ff64b8933f0 <line:22:22>
|-CXXMethodDecl 0x7ff64b893498 <line:21:7, <invalid sloc>> col:7 implicit operator= 'class Z &(const class Z &)' inline default noexcept-unevaluated 0x7ff64b893498
| `-ParmVarDecl 0x7ff64b893e00 <col:7> col:7 'const class Z &'
|-CXXMethodDecl 0x7ff64b893e98 <col:7, <invalid sloc>> col:7 implicit operator= 'class Z &(class Z &&)' inline default noexcept-unevaluated 0x7ff64b893e98
| `-ParmVarDecl 0x7ff64b893fb0 <col:7> col:7 'class Z &&'
|-CXXDestructorDecl 0x7ff64b894038 <col:7> col:7 implicit ~Z 'void (void)' inline default trivial noexcept-unevaluated 0x7ff64b894038
|-CXXConstructorDecl 0x7ff64b8960f8 <col:7> col:7 implicit used Z 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7ff64b897470 <col:7> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7ff64b8974e0 <col:7>
|-CXXConstructorDecl 0x7ff64b896d28 <col:7> col:7 implicit constexpr Z 'void (const class Z &)' inline default noexcept-unevaluated 0x7ff64b896d28
| `-ParmVarDecl 0x7ff64b896e50 <col:7> col:7 'const class Z &'
`-CXXConstructorDecl 0x7ff64b896eb8 <col:7> col:7 implicit constexpr Z 'void (class Z &&)' inline default noexcept-unevaluated 0x7ff64b896eb8
  `-ParmVarDecl 0x7ff64b896fe0 <col:7> col:7 'class Z &&'

Layout: <CGRecordLayout
  LLVMType:%class.Z = type { %struct.B.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.Z.base = type { %struct.B.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff64b894240 <object_model_refined/4_functions/05_virtual_functions_under_virtual_inheritance.cpp:27:1, line:34:1> line:27:8 referenced struct AA definition
|-public 'class X'
|-public 'class Y'
|-public 'class Z'
|-CXXRecordDecl 0x7ff64b894440 <col:1, col:8> col:8 implicit struct AA
|-CXXMethodDecl 0x7ff64b894528 <line:28:5, line:33:5> line:28:10 used m 'void (void)'
| |-CompoundStmt 0x7ff64b895a98 <line:29:5, line:33:5>
| | |-BinaryOperator 0x7ff64b894bb0 <line:30:9, col:16> 'int' lvalue '='
| | | |-MemberExpr 0x7ff64b894b40 <col:9, col:12> 'int' lvalue ->n 0x7ff64b867428
| | | | `-ImplicitCastExpr 0x7ff64b894b20 <col:12> 'struct B *' <UncheckedDerivedToBase (virtual B)>
| | | |   `-ImplicitCastExpr 0x7ff64b894b00 <col:12> 'class X *' <UncheckedDerivedToBase (X)>
| | | |     `-CXXThisExpr 0x7ff64b894ae8 <col:12> 'struct AA *' this
| | | `-IntegerLiteral 0x7ff64b894b90 <col:16> 'int' 5
| | |-BinaryOperator 0x7ff64b894cf0 <line:31:9, col:16> 'int' lvalue '='
| | | |-MemberExpr 0x7ff64b894c80 <col:9, col:12> 'int' lvalue ->n 0x7ff64b867428
| | | | `-ImplicitCastExpr 0x7ff64b894c60 <col:12> 'struct B *' <UncheckedDerivedToBase (virtual B)>
| | | |   `-ImplicitCastExpr 0x7ff64b894c40 <col:12> 'class Y *' <UncheckedDerivedToBase (Y)>
| | | |     `-CXXThisExpr 0x7ff64b894c28 <col:12> 'struct AA *' this
| | | `-IntegerLiteral 0x7ff64b894cd0 <col:16> 'int' 6
| | `-BinaryOperator 0x7ff64b895a70 <line:32:9, col:16> 'int' lvalue '='
| |   |-MemberExpr 0x7ff64b895a00 <col:9, col:12> 'int' lvalue ->n 0x7ff64b867428
| |   | `-ImplicitCastExpr 0x7ff64b894da0 <col:12> 'struct B *' <UncheckedDerivedToBase (B)>
| |   |   `-ImplicitCastExpr 0x7ff64b894d80 <col:12> 'class Z *' <UncheckedDerivedToBase (Z)>
| |   |     `-CXXThisExpr 0x7ff64b894d68 <col:12> 'struct AA *' this
| |   `-IntegerLiteral 0x7ff64b895a50 <col:16> 'int' 7
| `-OverrideAttr 0x7ff64b8945c0 <line:28:14>
|-CXXMethodDecl 0x7ff64b894668 <line:27:8, <invalid sloc>> col:8 implicit operator= 'struct AA &(const struct AA &)' inline default noexcept-unevaluated 0x7ff64b894668
| `-ParmVarDecl 0x7ff64b894780 <col:8> col:8 'const struct AA &'
|-CXXMethodDecl 0x7ff64b894818 <col:8, <invalid sloc>> col:8 implicit operator= 'struct AA &(struct AA &&)' inline default noexcept-unevaluated 0x7ff64b894818
| `-ParmVarDecl 0x7ff64b894930 <col:8> col:8 'struct AA &&'
|-CXXDestructorDecl 0x7ff64b8949b8 <col:8> col:8 implicit ~AA 'void (void)' inline default trivial noexcept-unevaluated 0x7ff64b8949b8
|-CXXConstructorDecl 0x7ff64b895cf8 <col:8> col:8 implicit used AA 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7ff64b897228 <col:8> 'struct B' 'void (void) noexcept'
| |-CXXCtorInitializer 'class X'
| | `-CXXConstructExpr 0x7ff64b897318 <col:8> 'class X' 'void (void) noexcept'
| |-CXXCtorInitializer 'class Y'
| | `-CXXConstructExpr 0x7ff64b897408 <col:8> 'class Y' 'void (void) noexcept'
| |-CXXCtorInitializer 'class Z'
| | `-CXXConstructExpr 0x7ff64b8974f8 <col:8> 'class Z' 'void (void) noexcept'
| `-CompoundStmt 0x7ff64b897580 <col:8>
|-CXXConstructorDecl 0x7ff64b8961d8 <col:8> col:8 implicit AA 'void (const struct AA &)' inline default noexcept-unevaluated 0x7ff64b8961d8
| `-ParmVarDecl 0x7ff64b896300 <col:8> col:8 'const struct AA &'
`-CXXConstructorDecl 0x7ff64b897048 <col:8> col:8 implicit AA 'void (struct AA &&)' inline default noexcept-unevaluated 0x7ff64b897048
  `-ParmVarDecl 0x7ff64b897170 <col:8> col:8 'struct AA &&'

Layout: <CGRecordLayout
  LLVMType:%struct.AA = type <{ %class.X.base, %class.Y.base, %class.Z.base, [4 x i8], %struct.B.base, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.AA.base = type <{ %class.X.base, %class.Y.base, %class.Z.base }>
  IsZeroInitializable:1
  BitFields:[
]>
