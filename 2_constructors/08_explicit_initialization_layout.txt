
*** Dumping AST Record Layout
         0 | struct X
         0 |   int x
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fc858856288 </Users/tskull/Documents/Programming/Cpp/object_model_refined/2_constructors/08_explicit_initialization.cpp:15:1, line:23:1> line:15:8 referenced struct X definition
|-FullComment 0x7fc8588836b0 <line:2:3, line:12:81>
| |-ParagraphComment 0x7fc8588834f0 <line:2:3, col:24>
| | `-TextComment 0x7fc8588834c0 <col:3, col:24> Text=" from cppreference.com"
| |-ParagraphComment 0x7fc858883590 <line:4:3, line:6:92>
| | |-TextComment 0x7fc858883510 <line:4:3, col:91> Text=" The explicit specifier specifies that a constructor or conversion function (since C++11)"
| | |-TextComment 0x7fc858883530 <line:5:3, col:87> Text=" doesn't allow implicit conversions or copy-initialization. It may only appear within"
| | `-TextComment 0x7fc858883550 <line:6:3, col:92> Text=" the decl-specifier-seq of the declaration of such a function within its class definition."
| |-ParagraphComment 0x7fc858883600 <line:8:3, line:9:70>
| | |-TextComment 0x7fc8588835b0 <line:8:3, col:91> Text=" A constructor with a single non-default parameter (until C++11) that is declared without"
| | `-TextComment 0x7fc8588835d0 <line:9:3, col:70> Text=" the function specifier explicit is called a converting constructor."
| `-ParagraphComment 0x7fc858883670 <line:11:3, line:12:81>
|   |-TextComment 0x7fc858883620 <line:11:3, col:91> Text=" Copy-initialization is less permissive than direct-initialization: explicit constructors"
|   `-TextComment 0x7fc858883640 <line:12:3, col:81> Text=" are not converting constructors and are not considered for copy-initialization"
|-CXXRecordDecl 0x7fc8588563a8 <line:15:1, col:8> col:8 implicit referenced struct X
|-FieldDecl 0x7fc858856458 <line:16:5, col:13> col:9 referenced x 'int'
| `-IntegerLiteral 0x7fc8588568e8 <col:13> 'int' 0
|-CXXConstructorDecl 0x7fc8588565d0 <line:18:5, col:22> col:5 used X 'void (int)'
| |-ParmVarDecl 0x7fc8588564b8 <col:7, col:11> col:11 used a 'int'
| |-CXXCtorInitializer Field 0x7fc858856458 'x' 'int'
| | `-InitListExpr 0x7fc8588569b0 <col:17, col:19> 'int'
| |   `-ImplicitCastExpr 0x7fc8588569f0 <col:18> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x7fc858856940 <col:18> 'int' lvalue ParmVar 0x7fc8588564b8 'a' 'int'
| `-CompoundStmt 0x7fc858856a40 <col:21, col:22>
|-CXXConstructorDecl 0x7fc8588566d0 <line:20:5, col:17> col:5 constexpr X 'void (void)' default noexcept-unevaluated 0x7fc8588566d0
|-CXXDestructorDecl 0x7fc8588567c8 <line:22:5, col:18> col:5 referenced ~X 'void (void) noexcept' default trivial
`-CXXConstructorDecl 0x7fc858882c08 <line:15:8> col:8 implicit used constexpr X 'void (const struct X &) noexcept' inline default trivial
  |-ParmVarDecl 0x7fc858882d30 <col:8> col:8 used 'const struct X &'
  |-CXXCtorInitializer Field 0x7fc858856458 'x' 'int'
  | `-ImplicitCastExpr 0x7fc858882f98 <col:8> 'int' <LValueToRValue>
  |   `-MemberExpr 0x7fc858882f60 <col:8> 'const int' lvalue .x 0x7fc858856458
  |     `-DeclRefExpr 0x7fc858882f38 <col:8> 'const struct X' lvalue ParmVar 0x7fc858882d30 '' 'const struct X &'
  `-CompoundStmt 0x7fc858882fe0 <col:8>

Layout: <CGRecordLayout
  LLVMType:%struct.X = type { i32 }
  NonVirtualBaseLLVMType:%struct.X = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Y
         0 |   int y
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fc858856a58 </Users/tskull/Documents/Programming/Cpp/object_model_refined/2_constructors/08_explicit_initialization.cpp:25:1, line:33:1> line:25:8 referenced struct Y definition
|-CXXRecordDecl 0x7fc858856b78 <col:1, col:8> col:8 implicit referenced struct Y
|-FieldDecl 0x7fc858856c28 <line:26:5, col:13> col:9 y 'int'
| `-IntegerLiteral 0x7fc858857048 <col:13> 'int' 0
|-CXXConstructorDecl 0x7fc858856d60 <line:28:5, col:31> col:14 used Y 'void (int)'
| |-ParmVarDecl 0x7fc858856c88 <col:16, col:20> col:20 used a 'int'
| |-CXXCtorInitializer Field 0x7fc858856c28 'y' 'int'
| | `-InitListExpr 0x7fc8588570d8 <col:26, col:28> 'int'
| |   `-ImplicitCastExpr 0x7fc858857118 <col:27> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x7fc858857068 <col:27> 'int' lvalue ParmVar 0x7fc858856c88 'a' 'int'
| `-CompoundStmt 0x7fc858857168 <col:30, col:31>
|-CXXConstructorDecl 0x7fc858856e30 <line:30:5, col:17> col:5 constexpr Y 'void (void)' default noexcept-unevaluated 0x7fc858856e30
|-CXXDestructorDecl 0x7fc858856f28 <line:32:5, col:18> col:5 ~Y 'void (void) noexcept' default trivial
`-CXXConstructorDecl 0x7fc858883168 <line:25:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default trivial noexcept-unevaluated 0x7fc858883168
  `-ParmVarDecl 0x7fc858883290 <col:8> col:8 'const struct Y &'

Layout: <CGRecordLayout
  LLVMType:%struct.Y = type { i32 }
  NonVirtualBaseLLVMType:%struct.Y = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>
