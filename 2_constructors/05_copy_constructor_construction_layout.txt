
*** Dumping AST Record Layout
         0 | struct A
         0 |   int n
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fa011867658 <object_model_refined/2_constructors/05_copy_constructor_construction.cpp:3:1, line:11:1> line:3:8 referenced struct A definition
|-CXXRecordDecl 0x7fa011867778 <col:1, col:8> col:8 implicit referenced struct A
|-FieldDecl 0x7fa011867828 <line:4:5, col:9> col:9 referenced n 'int'
|-CXXConstructorDecl 0x7fa0118679a0 <line:6:5, col:26> col:5 used A 'void (int)'
| |-ParmVarDecl 0x7fa011867888 <col:7, col:15> col:11 used n 'int' cinit
| | `-IntegerLiteral 0x7fa011867d58 <col:15> 'int' 1
| |-CXXCtorInitializer Field 0x7fa011867828 'n' 'int'
| | `-InitListExpr 0x7fa011867e20 <col:21, col:23> 'int'
| |   `-ImplicitCastExpr 0x7fa011867e60 <col:22> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x7fa011867db0 <col:22> 'int' lvalue ParmVar 0x7fa011867888 'n' 'int'
| `-CompoundStmt 0x7fa011867eb0 <col:25, col:26>
|-CXXConstructorDecl 0x7fa011867b50 <line:8:5, col:29> col:5 used A 'void (const struct A &)'
| |-ParmVarDecl 0x7fa011867a88 <col:7, col:16> col:16 used a 'const struct A &'
| |-CXXCtorInitializer Field 0x7fa011867828 'n' 'int'
| | `-InitListExpr 0x7fa011867f70 <col:22, col:26> 'int'
| |   `-ImplicitCastExpr 0x7fa011867fb0 <col:23, col:25> 'int' <LValueToRValue>
| |     `-MemberExpr 0x7fa011867ef0 <col:23, col:25> 'const int' lvalue .n 0x7fa011867828
| |       `-DeclRefExpr 0x7fa011867ec8 <col:23> 'const struct A' lvalue ParmVar 0x7fa011867a88 'a' 'const struct A &'
| `-CompoundStmt 0x7fa011868000 <col:28, col:29>
|-CXXDestructorDecl 0x7fa011867c80 <line:10:5, col:18> col:5 ~A 'void (void) noexcept' default trivial
`-CXXMethodDecl 0x7fa011893e00 <line:3:8, <invalid sloc>> col:8 implicit operator= 'struct A &(const struct A &)' inline default trivial noexcept-unevaluated 0x7fa011893e00
  `-ParmVarDecl 0x7fa011893f20 <col:8> col:8 'const struct A &'

Layout: <CGRecordLayout
  LLVMType:%struct.A = type { i32 }
  NonVirtualBaseLLVMType:%struct.A = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct B
         0 |   struct A (base)
         0 |     int n
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fa011868018 <object_model_refined/2_constructors/05_copy_constructor_construction.cpp:13:1, col:15> col:8 referenced struct B definition
|-public 'struct A'
|-CXXRecordDecl 0x7fa011868178 <col:1, col:8> col:8 implicit referenced struct B
|-CXXConstructorDecl 0x7fa011868258 <col:8> col:8 implicit B 'void (struct B &&)' inline default noexcept-unevaluated 0x7fa011868258
| `-ParmVarDecl 0x7fa011868380 <col:8> col:8 'struct B &&'
|-CXXMethodDecl 0x7fa011868418 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(struct B &&)' inline default trivial noexcept-unevaluated 0x7fa011868418
| `-ParmVarDecl 0x7fa011868530 <col:8> col:8 'struct B &&'
|-CXXDestructorDecl 0x7fa011893fa8 <col:8> col:8 implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7fa011893fa8
|-CXXConstructorDecl 0x7fa0118945b0 <col:8> col:8 implicit used B 'void (void) noexcept(false)' inline default
| |-CXXCtorInitializer 'struct A'
| | `-CXXConstructExpr 0x7fa0118948c8 <col:8> 'struct A' 'void (int)'
| |   `-CXXDefaultArgExpr 0x7fa0118948a8 <<invalid sloc>> 'int'
| `-CompoundStmt 0x7fa011894940 <col:8>
`-CXXConstructorDecl 0x7fa0118946c8 <col:8> col:8 implicit used B 'void (const struct B &) noexcept(false)' inline default
  |-ParmVarDecl 0x7fa0118947f0 <col:8> col:8 used 'const struct B &'
  |-CXXCtorInitializer 'struct A'
  | `-CXXConstructExpr 0x7fa011895df8 <col:8> 'struct A' 'void (const struct A &)'
  |   `-ImplicitCastExpr 0x7fa011895dd8 <col:8> 'const struct A' lvalue <UncheckedDerivedToBase (A)>
  |     `-DeclRefExpr 0x7fa011895db0 <col:8> 'const struct B' lvalue ParmVar 0x7fa0118947f0 '' 'const struct B &'
  `-CompoundStmt 0x7fa011895e70 <col:8>

Layout: <CGRecordLayout
  LLVMType:%struct.B = type { %struct.A }
  NonVirtualBaseLLVMType:%struct.B = type { %struct.A }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct C
         0 |   struct B (base)
         0 |     struct A (base)
         0 |       int n
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fa011894088 <object_model_refined/2_constructors/05_copy_constructor_construction.cpp:15:1, line:19:1> line:15:8 referenced struct C definition
|-public 'struct B'
|-CXXRecordDecl 0x7fa0118941e8 <col:1, col:8> col:8 implicit referenced struct C
|-CXXConstructorDecl 0x7fa0118942e8 <line:16:5, col:16> col:5 used C 'void (void)'
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7fa011894958 <col:11, col:13> 'struct B' 'void (void) noexcept(false)' zeroing
| `-CompoundStmt 0x7fa0118949b8 <col:15, col:16>
`-CXXConstructorDecl 0x7fa011894490 <line:18:5, col:25> col:5 C 'void (const struct C &)' delete
  `-ParmVarDecl 0x7fa0118943c8 <col:7, col:15> col:16 'const struct C &'

Layout: <CGRecordLayout
  LLVMType:%struct.C = type { %struct.B }
  NonVirtualBaseLLVMType:%struct.C = type { %struct.B }
  IsZeroInitializable:1
  BitFields:[
]>
