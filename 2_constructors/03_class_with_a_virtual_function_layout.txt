
*** Dumping AST Record Layout
         0 | struct X
         0 |   (X vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fa256069058 <object_model_refined/2_constructors/03_class_with_a_virtual_function.cpp:1:1, line:3:1> line:1:8 referenced struct X definition
|-CXXRecordDecl 0x7fa256069178 <col:1, col:8> col:8 implicit struct X
|-CXXMethodDecl 0x7fa256069290 <line:2:5, col:31> col:18 referenced m1 'void (void) const' virtual pure
|-CXXMethodDecl 0x7fa256069388 <line:1:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct X &(const struct X &)' inline default noexcept-unevaluated 0x7fa256069388
| `-ParmVarDecl 0x7fa2560694a0 <col:8> col:8 'const struct X &'
|-CXXMethodDecl 0x7fa256069538 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct X &(struct X &&)' inline default noexcept-unevaluated 0x7fa256069538
| `-ParmVarDecl 0x7fa256069650 <col:8> col:8 'struct X &&'
`-CXXDestructorDecl 0x7fa2560696d8 <col:8> col:8 implicit ~X 'void (void)' inline default trivial noexcept-unevaluated 0x7fa2560696d8

Layout: <CGRecordLayout
  LLVMType:%struct.X = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.X = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Y
         0 |   struct X (primary base)
         0 |     (X vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Z
         0 |   struct X (primary base)
         0 |     (X vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fa256069b28 <object_model_refined/2_constructors/03_class_with_a_virtual_function.cpp:9:1, line:11:1> line:9:8 referenced struct Y definition
|-public 'struct X'
|-CXXRecordDecl 0x7fa256069c88 <col:1, col:8> col:8 implicit struct Y
|-CXXMethodDecl 0x7fa256069d68 <line:10:5, col:31> col:10 m1 'void (void) const'
| |-CompoundStmt 0x7fa256805b48 <col:30, col:31>
| `-OverrideAttr 0x7fa256069e00 <col:21>
|-CXXMethodDecl 0x7fa256069ea8 <line:9:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct Y &(const struct Y &)' inline default noexcept-unevaluated 0x7fa256069ea8
| `-ParmVarDecl 0x7fa256805800 <col:8> col:8 'const struct Y &'
|-CXXMethodDecl 0x7fa256805898 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct Y &(struct Y &&)' inline default noexcept-unevaluated 0x7fa256805898
| `-ParmVarDecl 0x7fa2568059b0 <col:8> col:8 'struct Y &&'
|-CXXDestructorDecl 0x7fa256805a38 <col:8> col:8 implicit ~Y 'void (void)' inline default trivial noexcept-unevaluated 0x7fa256805a38
|-CXXConstructorDecl 0x7fa256806548 <col:8> col:8 implicit used constexpr Y 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct X'
| | `-CXXConstructExpr 0x7fa2568079a8 <col:8> 'struct X' 'void (void) noexcept'
| `-CompoundStmt 0x7fa256807a18 <col:8>
|-CXXConstructorDecl 0x7fa256807638 <col:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default noexcept-unevaluated 0x7fa256807638
| `-ParmVarDecl 0x7fa256807760 <col:8> col:8 'const struct Y &'
`-CXXConstructorDecl 0x7fa2568077c8 <col:8> col:8 implicit constexpr Y 'void (struct Y &&)' inline default noexcept-unevaluated 0x7fa2568077c8
  `-ParmVarDecl 0x7fa2568078f0 <col:8> col:8 'struct Y &&'

Layout: <CGRecordLayout
  LLVMType:%struct.Y = type { %struct.X }
  NonVirtualBaseLLVMType:%struct.Y = type { %struct.X }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fa256805b60 <object_model_refined/2_constructors/03_class_with_a_virtual_function.cpp:13:1, line:15:1> line:13:8 referenced struct Z definition
|-public 'struct X'
|-CXXRecordDecl 0x7fa256805cc8 <col:1, col:8> col:8 implicit struct Z
|-CXXMethodDecl 0x7fa256805da8 <line:14:5, col:31> col:10 m1 'void (void) const'
| |-CompoundStmt 0x7fa256806348 <col:30, col:31>
| `-OverrideAttr 0x7fa256805e40 <col:21>
|-CXXMethodDecl 0x7fa256805ee8 <line:13:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct Z &(const struct Z &)' inline default noexcept-unevaluated 0x7fa256805ee8
| `-ParmVarDecl 0x7fa256806000 <col:8> col:8 'const struct Z &'
|-CXXMethodDecl 0x7fa256806098 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct Z &(struct Z &&)' inline default noexcept-unevaluated 0x7fa256806098
| `-ParmVarDecl 0x7fa2568061b0 <col:8> col:8 'struct Z &&'
|-CXXDestructorDecl 0x7fa256806238 <col:8> col:8 implicit ~Z 'void (void)' inline default trivial noexcept-unevaluated 0x7fa256806238
|-CXXConstructorDecl 0x7fa256807d58 <col:8> col:8 implicit used constexpr Z 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct X'
| | `-CXXConstructExpr 0x7fa256808158 <col:8> 'struct X' 'void (void) noexcept'
| `-CompoundStmt 0x7fa2568081c8 <col:8>
|-CXXConstructorDecl 0x7fa256807e38 <col:8> col:8 implicit constexpr Z 'void (const struct Z &)' inline default noexcept-unevaluated 0x7fa256807e38
| `-ParmVarDecl 0x7fa256807f60 <col:8> col:8 'const struct Z &'
`-CXXConstructorDecl 0x7fa256807fc8 <col:8> col:8 implicit constexpr Z 'void (struct Z &&)' inline default noexcept-unevaluated 0x7fa256807fc8
  `-ParmVarDecl 0x7fa2568080f0 <col:8> col:8 'struct Z &&'

Layout: <CGRecordLayout
  LLVMType:%struct.Z = type { %struct.X }
  NonVirtualBaseLLVMType:%struct.Z = type { %struct.X }
  IsZeroInitializable:1
  BitFields:[
]>
