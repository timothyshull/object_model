TranslationUnitDecl 0x7f94cd0326d0
|-TypedefDecl implicit __int128_t '__int128'
| `-BuiltinType '__int128'
|-TypedefDecl implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 'unsigned __int128'
|-TypedefDecl implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 'struct __NSConstantString_tag'
|   `-CXXRecord '__NSConstantString_tag'
|-TypedefDecl implicit __builtin_ms_va_list 'char *'
| `-PointerType 'char *'
|   `-BuiltinType 'char'
|-TypedefDecl implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 'struct __va_list_tag [1]' 1
|   `-RecordType 'struct __va_list_tag'
|     `-CXXRecord '__va_list_tag'
|-CXXRecordDecl referenced struct X definition
| |-CXXRecordDecl implicit referenced struct X
| |-FieldDecl referenced x 'int'
| | `-IntegerLiteral 'int' 0
| |-CXXConstructorDecl used X 'void (int)'
| | |-ParmVarDecl used a 'int'
| | |-CXXCtorInitializer Field 0x7f94cd065e28 'x' 'int'
| | | `-InitListExpr 'int'
| | |   `-ImplicitCastExpr 'int' <LValueToRValue>
| | |     `-DeclRefExpr 'int' lvalue ParmVar 0x7f94cd065e88 'a' 'int'
| | `-CompoundStmt
| |-CXXConstructorDecl used constexpr X 'void (void) noexcept' default
| | |-CXXCtorInitializer Field 0x7f94cd065e28 'x' 'int'
| | | `-CXXDefaultInitExpr 'int'
| | `-CompoundStmt
| |-CXXDestructorDecl referenced ~X 'void (void) noexcept' default trivial
| `-CXXConstructorDecl implicit used constexpr X 'void (const struct X &) noexcept' inline default trivial
|   |-ParmVarDecl used 'const struct X &'
|   |-CXXCtorInitializer Field 0x7f94cd065e28 'x' 'int'
|   | `-ImplicitCastExpr 'int' <LValueToRValue>
|   |   `-MemberExpr 'const int' lvalue .x 0x7f94cd065e28
|   |     `-DeclRefExpr 'const struct X' lvalue ParmVar 0x7f94cd066ba0 '' 'const struct X &'
|   `-CompoundStmt
|-FunctionDecl used func 'void (struct X)'
| |-ParmVarDecl used x 'struct X'
| `-CompoundStmt
|   `-DeclStmt
|     `-VarDecl y 'int':'int' cinit
|       `-ImplicitCastExpr 'int' <LValueToRValue>
|         `-MemberExpr 'int' lvalue .x 0x7f94cd065e28
|           `-DeclRefExpr 'struct X' lvalue ParmVar 0x7f94cd066438 'x' 'struct X'
`-FunctionDecl main 'int (void)'
  `-CompoundStmt
    |-DeclStmt
    | `-VarDecl used x1 'struct X' cinit
    |   `-ExprWithCleanups 'struct X'
    |     `-CXXConstructExpr 'struct X' 'void (const struct X &) noexcept' elidable
    |       `-MaterializeTemporaryExpr 'const struct X' lvalue
    |         `-ImplicitCastExpr 'const struct X' <NoOp>
    |           `-ImplicitCastExpr 'struct X' <ConstructorConversion>
    |             `-CXXConstructExpr 'struct X' 'void (int)'
    |               `-IntegerLiteral 'int' 10
    |-CallExpr 'void'
    | |-ImplicitCastExpr 'void (*)(struct X)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 'void (struct X)' lvalue Function 0x7f94cd066500 'func' 'void (struct X)'
    | `-CXXConstructExpr 'struct X' 'void (const struct X &) noexcept'
    |   `-ImplicitCastExpr 'const struct X' lvalue <NoOp>
    |     `-DeclRefExpr 'struct X' lvalue Var 0x7f94cd0669c8 'x1' 'struct X'
    |-ExprWithCleanups 'void'
    | `-CallExpr 'void'
    |   |-ImplicitCastExpr 'void (*)(struct X)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'void (struct X)' lvalue Function 0x7f94cd066500 'func' 'void (struct X)'
    |   `-CXXConstructExpr 'struct X' 'void (const struct X &) noexcept' elidable
    |     `-MaterializeTemporaryExpr 'const struct X' lvalue
    |       `-ImplicitCastExpr 'const struct X' <NoOp>
    |         `-ImplicitCastExpr 'struct X' <ConstructorConversion>
    |           `-CXXConstructExpr 'struct X' 'void (int)'
    |             `-IntegerLiteral 'int' 10
    |-DeclStmt
    | `-VarDecl used x2 'struct X' listinit
    |   `-CXXConstructExpr 'struct X' 'void (void) noexcept' zeroing
    |-CallExpr 'void'
    | |-ImplicitCastExpr 'void (*)(struct X)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 'void (struct X)' lvalue Function 0x7f94cd066500 'func' 'void (struct X)'
    | `-CXXConstructExpr 'struct X' 'void (const struct X &) noexcept'
    |   `-ImplicitCastExpr 'const struct X' lvalue <NoOp>
    |     `-DeclRefExpr 'struct X' lvalue Var 0x7f94cd800d28 'x2' 'struct X'
    |-CallExpr 'void'
    | |-ImplicitCastExpr 'void (*)(struct X)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 'void (struct X)' lvalue Function 0x7f94cd066500 'func' 'void (struct X)'
    | `-CXXConstructExpr 'struct X' 'void (void) noexcept' zeroing
    `-ReturnStmt
      `-IntegerLiteral 'int' 0
