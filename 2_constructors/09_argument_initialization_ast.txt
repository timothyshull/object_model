TranslationUnitDecl 0x7fd4a40186d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fd4a4018c60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fd4a4018940 '__int128'
|-TypedefDecl 0x7fd4a4018cd0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fd4a4018960 'unsigned __int128'
|-TypedefDecl 0x7fd4a4019018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fd4a4018dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fd4a4018d28 '__NSConstantString_tag'
|-TypedefDecl 0x7fd4a40190b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fd4a4019070 'char *'
|   `-BuiltinType 0x7fd4a4018760 'char'
|-TypedefDecl 0x7fd4a404ae00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fd4a4019390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fd4a40191a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fd4a4019108 '__va_list_tag'
|-CXXRecordDecl 0x7fd4a404ae58 <object_model_refined/2_constructors/09_argument_initialization.cpp:1:1, line:9:1> line:1:8 referenced struct X definition
| |-CXXRecordDecl 0x7fd4a404af78 <col:1, col:8> col:8 implicit referenced struct X
| |-FieldDecl 0x7fd4a404b028 <line:2:5, col:13> col:9 referenced x 'int'
| | `-IntegerLiteral 0x7fd4a404b4b8 <col:13> 'int' 0
| |-CXXConstructorDecl 0x7fd4a404b1a0 <line:4:5, col:22> col:5 used X 'void (int)'
| | |-ParmVarDecl 0x7fd4a404b088 <col:7, col:11> col:11 used a 'int'
| | |-CXXCtorInitializer Field 0x7fd4a404b028 'x' 'int'
| | | `-InitListExpr 0x7fd4a404b580 <col:17, col:19> 'int'
| | |   `-ImplicitCastExpr 0x7fd4a404b5c0 <col:18> 'int' <LValueToRValue>
| | |     `-DeclRefExpr 0x7fd4a404b510 <col:18> 'int' lvalue ParmVar 0x7fd4a404b088 'a' 'int'
| | `-CompoundStmt 0x7fd4a404b610 <col:21, col:22>
| |-CXXConstructorDecl 0x7fd4a404b2a0 <line:6:5, col:17> col:5 used constexpr X 'void (void) noexcept' default
| | |-CXXCtorInitializer Field 0x7fd4a404b028 'x' 'int'
| | | `-CXXDefaultInitExpr 0x7fd4a4074858 <col:5> 'int'
| | `-CompoundStmt 0x7fd4a40748a8 <col:17>
| |-CXXDestructorDecl 0x7fd4a404b398 <line:8:5, col:18> col:5 referenced ~X 'void (void) noexcept' default trivial
| `-CXXConstructorDecl 0x7fd4a404bcd8 <line:1:8> col:8 implicit used constexpr X 'void (const struct X &) noexcept' inline default trivial
|   |-ParmVarDecl 0x7fd4a4074200 <col:8> col:8 used 'const struct X &'
|   |-CXXCtorInitializer Field 0x7fd4a404b028 'x' 'int'
|   | `-ImplicitCastExpr 0x7fd4a4074398 <col:8> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x7fd4a4074360 <col:8> 'const int' lvalue .x 0x7fd4a404b028
|   |     `-DeclRefExpr 0x7fd4a4074338 <col:8> 'const struct X' lvalue ParmVar 0x7fd4a4074200 '' 'const struct X &'
|   `-CompoundStmt 0x7fd4a40743e0 <col:8>
|-FunctionDecl 0x7fd4a404b700 <line:11:1, line:14:1> line:11:6 used func 'void (struct X)'
| |-ParmVarDecl 0x7fd4a404b638 <col:11, col:13> col:13 used x 'struct X'
| `-CompoundStmt 0x7fd4a404b9c0 <line:12:1, line:14:1>
|   `-DeclStmt 0x7fd4a404b9a8 <line:13:5, col:17>
|     `-VarDecl 0x7fd4a404b810 <col:5, col:16> col:10 y 'int':'int' cinit
|       `-ImplicitCastExpr 0x7fd4a404b990 <col:14, col:16> 'int' <LValueToRValue>
|         `-MemberExpr 0x7fd4a404b898 <col:14, col:16> 'int' lvalue .x 0x7fd4a404b028
|           `-DeclRefExpr 0x7fd4a404b870 <col:14> 'struct X' lvalue ParmVar 0x7fd4a404b638 'x' 'struct X'
`-FunctionDecl 0x7fd4a404ba38 <line:16:1, line:28:1> line:16:5 main 'int (void)'
  `-CompoundStmt 0x7fd4a4074bb8 <line:17:1, line:28:1>
    |-DeclStmt 0x7fd4a404bbf8 <line:19:5, col:18>
    | `-VarDecl 0x7fd4a404bb08 <col:5, col:16> col:10 used arg 'int':'int' cinit
    |   `-IntegerLiteral 0x7fd4a404bb68 <col:16> 'int' 10
    |-DeclStmt 0x7fd4a4074448 <line:20:5, col:15>
    | `-VarDecl 0x7fd4a404bc20 <col:5, col:12> col:7 used x1 'struct X' cinit
    |   `-ExprWithCleanups 0x7fd4a4074430 <col:7, col:12> 'struct X'
    |     `-CXXConstructExpr 0x7fd4a40743f8 <col:7, col:12> 'struct X' 'void (const struct X &) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0x7fd4a40742e8 <col:12> 'const struct X' lvalue
    |         `-ImplicitCastExpr 0x7fd4a40742d0 <col:12> 'const struct X' <NoOp>
    |           `-ImplicitCastExpr 0x7fd4a40742b8 <col:12> 'struct X' <ConstructorConversion>
    |             `-CXXConstructExpr 0x7fd4a4074280 <col:12> 'struct X' 'void (int)'
    |               `-ImplicitCastExpr 0x7fd4a4074268 <col:12> 'int':'int' <LValueToRValue>
    |                 `-DeclRefExpr 0x7fd4a404bc80 <col:12> 'int':'int' lvalue Var 0x7fd4a404bb08 'arg' 'int':'int'
    |-CallExpr 0x7fd4a4074550 <line:21:5, col:12> 'void'
    | |-ImplicitCastExpr 0x7fd4a4074538 <col:5> 'void (*)(struct X)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x7fd4a40744e0 <col:5> 'void (struct X)' lvalue Function 0x7fd4a404b700 'func' 'void (struct X)'
    | `-CXXConstructExpr 0x7fd4a4074598 <col:10> 'struct X' 'void (const struct X &) noexcept'
    |   `-ImplicitCastExpr 0x7fd4a4074580 <col:10> 'const struct X' lvalue <NoOp>
    |     `-DeclRefExpr 0x7fd4a40744b8 <col:10> 'struct X' lvalue Var 0x7fd4a404bc20 'x1' 'struct X'
    |-ExprWithCleanups 0x7fd4a4074790 <line:22:5, col:13> 'void'
    | `-CallExpr 0x7fd4a4074690 <col:5, col:13> 'void'
    |   |-ImplicitCastExpr 0x7fd4a4074678 <col:5> 'void (*)(struct X)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x7fd4a4074650 <col:5> 'void (struct X)' lvalue Function 0x7fd4a404b700 'func' 'void (struct X)'
    |   `-CXXConstructExpr 0x7fd4a4074758 <col:10> 'struct X' 'void (const struct X &) noexcept' elidable
    |     `-MaterializeTemporaryExpr 0x7fd4a4074740 <col:10> 'const struct X' lvalue
    |       `-ImplicitCastExpr 0x7fd4a4074728 <col:10> 'const struct X' <NoOp>
    |         `-ImplicitCastExpr 0x7fd4a4074710 <col:10> 'struct X' <ConstructorConversion>
    |           `-CXXConstructExpr 0x7fd4a40746d8 <col:10> 'struct X' 'void (int)'
    |             `-ImplicitCastExpr 0x7fd4a40746c0 <col:10> 'int':'int' <LValueToRValue>
    |               `-DeclRefExpr 0x7fd4a4074628 <col:10> 'int':'int' lvalue Var 0x7fd4a404bb08 'arg' 'int':'int'
    |-DeclStmt 0x7fd4a40748f0 <line:24:5, col:11>
    | `-VarDecl 0x7fd4a40747b8 <col:5, col:10> col:7 used x2 'struct X' listinit
    |   `-CXXConstructExpr 0x7fd4a40748c0 <col:7, col:10> 'struct X' 'void (void) noexcept' zeroing
    |-CallExpr 0x7fd4a40749c8 <line:25:5, col:12> 'void'
    | |-ImplicitCastExpr 0x7fd4a40749b0 <col:5> 'void (*)(struct X)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x7fd4a4074988 <col:5> 'void (struct X)' lvalue Function 0x7fd4a404b700 'func' 'void (struct X)'
    | `-CXXConstructExpr 0x7fd4a4074a10 <col:10> 'struct X' 'void (const struct X &) noexcept'
    |   `-ImplicitCastExpr 0x7fd4a40749f8 <col:10> 'const struct X' lvalue <NoOp>
    |     `-DeclRefExpr 0x7fd4a4074960 <col:10> 'struct X' lvalue Var 0x7fd4a40747b8 'x2' 'struct X'
    |-CallExpr 0x7fd4a4074b20 <line:26:5, col:12> 'void'
    | |-ImplicitCastExpr 0x7fd4a4074b08 <col:5> 'void (*)(struct X)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x7fd4a4074ae0 <col:5> 'void (struct X)' lvalue Function 0x7fd4a404b700 'func' 'void (struct X)'
    | `-CXXConstructExpr 0x7fd4a4074b50 <col:10, col:11> 'struct X' 'void (void) noexcept' zeroing
    `-ReturnStmt 0x7fd4a4074ba0 <line:27:5, col:12>
      `-IntegerLiteral 0x7fd4a4074b80 <col:12> 'int' 0
