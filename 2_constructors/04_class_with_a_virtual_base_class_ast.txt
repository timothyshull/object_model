TranslationUnitDecl 0x7fdfb00326d0
|-TypedefDecl implicit __int128_t '__int128'
| `-BuiltinType '__int128'
|-TypedefDecl implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 'unsigned __int128'
|-TypedefDecl implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 'struct __NSConstantString_tag'
|   `-CXXRecord '__NSConstantString_tag'
|-TypedefDecl implicit __builtin_ms_va_list 'char *'
| `-PointerType 'char *'
|   `-BuiltinType 'char'
|-TypedefDecl implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 'struct __va_list_tag [1]' 1
|   `-RecordType 'struct __va_list_tag'
|     `-CXXRecord '__va_list_tag'
|-CXXRecordDecl referenced struct X definition
| |-CXXRecordDecl implicit struct X
| |-FieldDecl referenced i 'int'
| |-CXXMethodDecl > implicit constexpr operator= 'struct X &(const struct X &)' inline default trivial noexcept-unevaluated 0x7fdfb0066348
| | `-ParmVarDecl 'const struct X &'
| |-CXXMethodDecl > implicit constexpr operator= 'struct X &(struct X &&)' inline default trivial noexcept-unevaluated 0x7fdfb00664f8
| | `-ParmVarDecl 'struct X &&'
| |-CXXDestructorDecl implicit ~X 'void (void)' inline default trivial noexcept-unevaluated 0x7fdfb0066958
| |-CXXConstructorDecl implicit used X 'void (void) noexcept' inline default trivial
| | `-CompoundStmt
| |-CXXConstructorDecl implicit constexpr X 'void (const struct X &)' inline default trivial noexcept-unevaluated 0x7fdfb0092d58
| | `-ParmVarDecl 'const struct X &'
| `-CXXConstructorDecl implicit constexpr X 'void (struct X &&)' inline default trivial noexcept-unevaluated 0x7fdfb0092ee8
|   `-ParmVarDecl 'struct X &&'
|-CXXRecordDecl referenced struct A definition
| |-virtual public 'struct X'
| |-CXXRecordDecl implicit struct A
| |-FieldDecl j 'int'
| |-CXXMethodDecl > implicit operator= 'struct A &(const struct A &)' inline default noexcept-unevaluated 0x7fdfb0066168
| | `-ParmVarDecl 'const struct A &'
| |-CXXMethodDecl > implicit operator= 'struct A &(struct A &&)' inline default noexcept-unevaluated 0x7fdfb00666a8
| | `-ParmVarDecl 'struct A &&'
| |-CXXDestructorDecl implicit ~A 'void (void)' inline default trivial noexcept-unevaluated 0x7fdfb0066848
| |-CXXConstructorDecl implicit used A 'void (void) noexcept' inline default
| | |-CXXCtorInitializer 'struct X'
| | | `-CXXConstructExpr 'struct X' 'void (void) noexcept'
| | `-CompoundStmt
| |-CXXConstructorDecl implicit A 'void (const struct A &)' inline default noexcept-unevaluated 0x7fdfb0092bc8
| | `-ParmVarDecl 'const struct A &'
| `-CXXConstructorDecl implicit A 'void (struct A &&)' inline default noexcept-unevaluated 0x7fdfb0093078
|   `-ParmVarDecl 'struct A &&'
|-CXXRecordDecl referenced struct B definition
| |-virtual public 'struct X'
| |-CXXRecordDecl implicit struct B
| |-FieldDecl d 'double'
| |-CXXMethodDecl > implicit operator= 'struct B &(const struct B &)' inline default noexcept-unevaluated 0x7fdfb0091558
| | `-ParmVarDecl 'const struct B &'
| |-CXXMethodDecl > implicit operator= 'struct B &(struct B &&)' inline default noexcept-unevaluated 0x7fdfb0091708
| | `-ParmVarDecl 'struct B &&'
| |-CXXDestructorDecl implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7fdfb00918a8
| |-CXXConstructorDecl implicit used B 'void (void) noexcept' inline default
| | |-CXXCtorInitializer 'struct X'
| | | `-CXXConstructExpr 'struct X' 'void (void) noexcept'
| | `-CompoundStmt
| |-CXXConstructorDecl implicit B 'void (const struct B &)' inline default noexcept-unevaluated 0x7fdfb00944a8
| | `-ParmVarDecl 'const struct B &'
| `-CXXConstructorDecl implicit B 'void (struct B &&)' inline default noexcept-unevaluated 0x7fdfb0094638
|   `-ParmVarDecl 'struct B &&'
|-CXXRecordDecl referenced struct C definition
| |-public 'struct A'
| |-public 'struct B'
| |-CXXRecordDecl implicit struct C
| |-FieldDecl k 'int'
| |-CXXMethodDecl > implicit operator= 'struct C &(const struct C &)' inline default noexcept-unevaluated 0x7fdfb0091c98
| | `-ParmVarDecl 'const struct C &'
| |-CXXMethodDecl > implicit operator= 'struct C &(struct C &&)' inline default noexcept-unevaluated 0x7fdfb0091e48
| | `-ParmVarDecl 'struct C &&'
| |-CXXDestructorDecl implicit ~C 'void (void)' inline default trivial noexcept-unevaluated 0x7fdfb0091fe8
| |-CXXConstructorDecl implicit used C 'void (void) noexcept' inline default
| | |-CXXCtorInitializer 'struct X'
| | | `-CXXConstructExpr 'struct X' 'void (void) noexcept'
| | |-CXXCtorInitializer 'struct A'
| | | `-CXXConstructExpr 'struct A' 'void (void) noexcept'
| | |-CXXCtorInitializer 'struct B'
| | | `-CXXConstructExpr 'struct B' 'void (void) noexcept'
| | `-CompoundStmt
| |-CXXConstructorDecl implicit C 'void (const struct C &)' inline default noexcept-unevaluated 0x7fdfb0093718
| | `-ParmVarDecl 'const struct C &'
| `-CXXConstructorDecl implicit C 'void (struct C &&)' inline default noexcept-unevaluated 0x7fdfb00947c8
|   `-ParmVarDecl 'struct C &&'
|-FunctionDecl used func 'void (struct A *)'
| |-ParmVarDecl used pa 'struct A *'
| `-CompoundStmt
|   `-BinaryOperator 'int' lvalue '='
|     |-MemberExpr 'int' lvalue ->i 0x7fdfb0065e28
|     | `-ImplicitCastExpr 'struct X *' <UncheckedDerivedToBase (virtual X)>
|     |   `-ImplicitCastExpr 'struct A *' <LValueToRValue>
|     |     `-DeclRefExpr 'struct A *' lvalue ParmVar 0x7fdfb0092108 'pa' 'struct A *'
|     `-IntegerLiteral 'int' 1024
`-FunctionDecl main 'int (void)'
  `-CompoundStmt
    |-DeclStmt
    | `-VarDecl used a 'struct A' listinit
    |   `-CXXConstructExpr 'struct A' 'void (void) noexcept' zeroing
    |-CallExpr 'void'
    | |-ImplicitCastExpr 'void (*)(struct A *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 'void (struct A *)' lvalue Function 0x7fdfb00921d0 'func' 'void (struct A *)'
    | `-UnaryOperator 'struct A *' prefix '&'
    |   `-DeclRefExpr 'struct A' lvalue Var 0x7fdfb0092928 'a' 'struct A'
    |-DeclStmt
    | `-VarDecl used c 'struct C' listinit
    |   `-CXXConstructExpr 'struct C' 'void (void) noexcept' zeroing
    |-CallExpr 'void'
    | |-ImplicitCastExpr 'void (*)(struct A *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 'void (struct A *)' lvalue Function 0x7fdfb00921d0 'func' 'void (struct A *)'
    | `-ImplicitCastExpr 'struct A *' <DerivedToBase (A)>
    |   `-UnaryOperator 'struct C *' prefix '&'
    |     `-DeclRefExpr 'struct C' lvalue Var 0x7fdfb0093470 'c' 'struct C'
    `-ReturnStmt
      `-IntegerLiteral 'int' 0
