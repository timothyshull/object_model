TranslationUnitDecl 0x7f8272804ad0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f8272805060 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f8272804d40 '__int128'
|-TypedefDecl 0x7f82728050d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f8272804d60 'unsigned __int128'
|-TypedefDecl 0x7f8272805418 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f82728051c0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f8272805128 '__NSConstantString_tag'
|-TypedefDecl 0x7f82728054b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f8272805470 'char *'
|   `-BuiltinType 0x7f8272804b60 'char'
|-TypedefDecl 0x7f8272059a00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f8272805790 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f82728055a0 'struct __va_list_tag'
|     `-CXXRecord 0x7f8272805508 '__va_list_tag'
|-CXXRecordDecl 0x7f8272059a58 <object_model/2_constructors/01_default_constructor_construction.cpp:1:1, line:4:1> line:1:8 referenced struct X definition
| |-CXXRecordDecl 0x7f8272059b78 <col:1, col:8> col:8 implicit struct X
| |-FieldDecl 0x7f8272059c28 <line:2:5, col:12> col:12 x 'double'
| |-FieldDecl 0x7f8272059c88 <line:3:5, col:12> col:12 y 'double'
| |-CXXConstructorDecl 0x7f827205a198 <line:1:8> col:8 implicit used X 'void (void) noexcept' inline default trivial
| | `-CompoundStmt 0x7f827205a660 <col:8>
| |-CXXConstructorDecl 0x7f827205a2d8 <col:8> col:8 implicit constexpr X 'void (const struct X &)' inline default trivial noexcept-unevaluated 0x7f827205a2d8
| | `-ParmVarDecl 0x7f827205a400 <col:8> col:8 'const struct X &'
| `-CXXConstructorDecl 0x7f827205a498 <col:8> col:8 implicit constexpr X 'void (struct X &&)' inline default trivial noexcept-unevaluated 0x7f827205a498
|   `-ParmVarDecl 0x7f827205a5c0 <col:8> col:8 'struct X &&'
|-CXXRecordDecl 0x7f8272059cf0 <line:6:1, line:9:1> line:6:8 referenced struct Y definition
| |-CXXRecordDecl 0x7f8272059e18 <col:1, col:8> col:8 implicit referenced struct Y
| |-FieldDecl 0x7f8272059ec8 <line:7:5, col:12> col:12 v 'double'
| |-FieldDecl 0x7f8272059f48 <line:8:5, col:8> col:8 n 'struct Y *'
| |-CXXConstructorDecl 0x7f827205a750 <line:6:8> col:8 implicit used Y 'void (void) noexcept' inline default trivial
| | `-CompoundStmt 0x7f8274006fb8 <col:8>
| |-CXXConstructorDecl 0x7f827205a868 <col:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default trivial noexcept-unevaluated 0x7f827205a868
| | `-ParmVarDecl 0x7f827205a990 <col:8> col:8 'const struct Y &'
| `-CXXConstructorDecl 0x7f8274006e28 <col:8> col:8 implicit constexpr Y 'void (struct Y &&)' inline default trivial noexcept-unevaluated 0x7f8274006e28
|   `-ParmVarDecl 0x7f8274006f50 <col:8> col:8 'struct Y &&'
`-FunctionDecl 0x7f827205a008 <line:11:1, line:27:1> line:11:5 main 'int (void)'
  `-CompoundStmt 0x7f8274007748 <line:12:1, line:27:1>
    |-DeclStmt 0x7f827205a6a8 <line:15:5, col:9>
    | `-VarDecl 0x7f827205a118 <col:5, col:7> col:7 x1 'struct X' callinit
    |   `-CXXConstructExpr 0x7f827205a678 <col:7> 'struct X' 'void (void) noexcept'
    |-DeclStmt 0x7f8274007000 <line:16:5, col:9>
    | `-VarDecl 0x7f827205a6d0 <col:5, col:7> col:7 y1 'struct Y' callinit
    |   `-CXXConstructExpr 0x7f8274006fd0 <col:7> 'struct Y' 'void (void) noexcept'
    |-DeclStmt 0x7f8274007200 <line:20:5, col:11>
    | `-VarDecl 0x7f8274007028 <col:5, col:10> col:7 x2 'struct X' listinit
    |   `-InitListExpr 0x7f82740070c8 <col:9, col:10> 'struct X'
    |     |-ImplicitValueInitExpr 0x7f8274007118 <<invalid sloc>> 'double'
    |     `-ImplicitValueInitExpr 0x7f8274007128 <<invalid sloc>> 'double'
    |-DeclStmt 0x7f8274007400 <line:21:5, col:11>
    | `-VarDecl 0x7f8274007228 <col:5, col:10> col:7 used y2 'struct Y' listinit
    |   `-InitListExpr 0x7f82740072c8 <col:9, col:10> 'struct Y'
    |     |-ImplicitValueInitExpr 0x7f8274007318 <<invalid sloc>> 'double'
    |     `-ImplicitValueInitExpr 0x7f8274007328 <<invalid sloc>> 'struct Y *'
    |-DeclStmt 0x7f8274007568 <line:24:5, col:19>
    | `-VarDecl 0x7f8274007428 <col:5, col:18> col:7 x3 'struct X' listinit
    |   `-InitListExpr 0x7f8274007518 <col:9, col:18> 'struct X'
    |     |-FloatingLiteral 0x7f8274007488 <col:10> 'double' 1.000000e+00
    |     `-FloatingLiteral 0x7f82740074a8 <col:15> 'double' 2.000000e+00
    |-DeclStmt 0x7f82740076f8 <line:25:5, col:19>
    | `-VarDecl 0x7f8274007590 <col:5, col:18> col:7 y3 'struct Y' listinit
    |   `-InitListExpr 0x7f82740076a8 <col:9, col:18> 'struct Y'
    |     |-FloatingLiteral 0x7f82740075f0 <col:10> 'double' 3.000000e+00
    |     `-UnaryOperator 0x7f8274007638 <col:15, col:16> 'struct Y *' prefix '&'
    |       `-DeclRefExpr 0x7f8274007610 <col:16> 'struct Y' lvalue Var 0x7f8274007228 'y2' 'struct Y'
    `-ReturnStmt 0x7f8274007730 <line:26:5, col:12>
      `-IntegerLiteral 0x7f8274007710 <col:12> 'int' 0
