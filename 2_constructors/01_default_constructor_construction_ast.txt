TranslationUnitDecl 0x7f98378326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f9837832c60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f9837832940 '__int128'
|-TypedefDecl 0x7f9837832cd0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f9837832960 'unsigned __int128'
|-TypedefDecl 0x7f9837833018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f9837832dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f9837832d28 '__NSConstantString_tag'
|-TypedefDecl 0x7f98378330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f9837833070 'char *'
|   `-BuiltinType 0x7f9837832760 'char'
|-TypedefDecl 0x7f9837865c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f9837833390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f98378331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7f9837833108 '__va_list_tag'
|-CXXRecordDecl 0x7f9837865c58 <object_model/2_constructors/01_default_constructor_construction.cpp:1:1, line:4:1> line:1:8 referenced struct X definition
| |-CXXRecordDecl 0x7f9837865d78 <col:1, col:8> col:8 implicit struct X
| |-FieldDecl 0x7f9837865e28 <line:2:5, col:12> col:12 x 'double'
| |-FieldDecl 0x7f9837865e88 <line:3:5, col:12> col:12 y 'double'
| |-CXXConstructorDecl 0x7f9837866398 <line:1:8> col:8 implicit used X 'void (void) noexcept' inline default trivial
| | `-CompoundStmt 0x7f9837866860 <col:8>
| |-CXXConstructorDecl 0x7f98378664d8 <col:8> col:8 implicit constexpr X 'void (const struct X &)' inline default trivial noexcept-unevaluated 0x7f98378664d8
| | `-ParmVarDecl 0x7f9837866600 <col:8> col:8 'const struct X &'
| `-CXXConstructorDecl 0x7f9837866698 <col:8> col:8 implicit constexpr X 'void (struct X &&)' inline default trivial noexcept-unevaluated 0x7f9837866698
|   `-ParmVarDecl 0x7f98378667c0 <col:8> col:8 'struct X &&'
|-CXXRecordDecl 0x7f9837865ef0 <line:6:1, line:9:1> line:6:8 referenced struct Y definition
| |-CXXRecordDecl 0x7f9837866018 <col:1, col:8> col:8 implicit referenced struct Y
| |-FieldDecl 0x7f98378660c8 <line:7:5, col:12> col:12 v 'double'
| |-FieldDecl 0x7f9837866148 <line:8:5, col:8> col:8 n 'struct Y *'
| |-CXXConstructorDecl 0x7f9837866950 <line:6:8> col:8 implicit used Y 'void (void) noexcept' inline default trivial
| | `-CompoundStmt 0x7f98378911b8 <col:8>
| |-CXXConstructorDecl 0x7f9837866a68 <col:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default trivial noexcept-unevaluated 0x7f9837866a68
| | `-ParmVarDecl 0x7f9837866b90 <col:8> col:8 'const struct Y &'
| `-CXXConstructorDecl 0x7f9837891028 <col:8> col:8 implicit constexpr Y 'void (struct Y &&)' inline default trivial noexcept-unevaluated 0x7f9837891028
|   `-ParmVarDecl 0x7f9837891150 <col:8> col:8 'struct Y &&'
`-FunctionDecl 0x7f9837866208 <line:11:1, line:27:1> line:11:5 main 'int (void)'
  `-CompoundStmt 0x7f9837891948 <line:12:1, line:27:1>
    |-DeclStmt 0x7f98378668a8 <line:15:5, col:9>
    | `-VarDecl 0x7f9837866318 <col:5, col:7> col:7 x1 'struct X' callinit
    |   `-CXXConstructExpr 0x7f9837866878 <col:7> 'struct X' 'void (void) noexcept'
    |-DeclStmt 0x7f9837891200 <line:16:5, col:9>
    | `-VarDecl 0x7f98378668d0 <col:5, col:7> col:7 y1 'struct Y' callinit
    |   `-CXXConstructExpr 0x7f98378911d0 <col:7> 'struct Y' 'void (void) noexcept'
    |-DeclStmt 0x7f9837891400 <line:20:5, col:11>
    | `-VarDecl 0x7f9837891228 <col:5, col:10> col:7 x2 'struct X' listinit
    |   `-InitListExpr 0x7f98378912c8 <col:9, col:10> 'struct X'
    |     |-ImplicitValueInitExpr 0x7f9837891318 <<invalid sloc>> 'double'
    |     `-ImplicitValueInitExpr 0x7f9837891328 <<invalid sloc>> 'double'
    |-DeclStmt 0x7f9837891600 <line:21:5, col:11>
    | `-VarDecl 0x7f9837891428 <col:5, col:10> col:7 used y2 'struct Y' listinit
    |   `-InitListExpr 0x7f98378914c8 <col:9, col:10> 'struct Y'
    |     |-ImplicitValueInitExpr 0x7f9837891518 <<invalid sloc>> 'double'
    |     `-ImplicitValueInitExpr 0x7f9837891528 <<invalid sloc>> 'struct Y *'
    |-DeclStmt 0x7f9837891768 <line:24:5, col:19>
    | `-VarDecl 0x7f9837891628 <col:5, col:18> col:7 x3 'struct X' listinit
    |   `-InitListExpr 0x7f9837891718 <col:9, col:18> 'struct X'
    |     |-FloatingLiteral 0x7f9837891688 <col:10> 'double' 1.000000e+00
    |     `-FloatingLiteral 0x7f98378916a8 <col:15> 'double' 2.000000e+00
    |-DeclStmt 0x7f98378918f8 <line:25:5, col:19>
    | `-VarDecl 0x7f9837891790 <col:5, col:18> col:7 y3 'struct Y' listinit
    |   `-InitListExpr 0x7f98378918a8 <col:9, col:18> 'struct Y'
    |     |-FloatingLiteral 0x7f98378917f0 <col:10> 'double' 3.000000e+00
    |     `-UnaryOperator 0x7f9837891838 <col:15, col:16> 'struct Y *' prefix '&'
    |       `-DeclRefExpr 0x7f9837891810 <col:16> 'struct Y' lvalue Var 0x7f9837891428 'y2' 'struct Y'
    `-ReturnStmt 0x7f9837891930 <line:26:5, col:12>
      `-IntegerLiteral 0x7f9837891910 <col:12> 'int' 0
