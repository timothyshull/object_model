TranslationUnitDecl 0x7f88c7017ad0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f88c7018060 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f88c7017d40 '__int128'
|-TypedefDecl 0x7f88c70180d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f88c7017d60 'unsigned __int128'
|-TypedefDecl 0x7f88c7018418 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f88c70181c0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f88c7018128 '__NSConstantString_tag'
|-TypedefDecl 0x7f88c70184b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f88c7018470 'char *'
|   `-BuiltinType 0x7f88c7017b60 'char'
|-TypedefDecl 0x7f88c701a400 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f88c7018790 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f88c70185a0 'struct __va_list_tag'
|     `-CXXRecord 0x7f88c7018508 '__va_list_tag'
|-CXXRecordDecl 0x7f88c701a458 <object_model_refined/2_constructors/01_default_constructor_construction.cpp:1:1, line:4:1> line:1:8 referenced struct X definition
| |-CXXRecordDecl 0x7f88c701a578 <col:1, col:8> col:8 implicit struct X
| |-FieldDecl 0x7f88c701a628 <line:2:5, col:12> col:12 x 'double'
| |-FieldDecl 0x7f88c701a688 <line:3:5, col:12> col:12 y 'double'
| |-CXXConstructorDecl 0x7f88c701ab98 <line:1:8> col:8 implicit used X 'void (void) noexcept' inline default trivial
| | `-CompoundStmt 0x7f88c701b060 <col:8>
| |-CXXConstructorDecl 0x7f88c701acd8 <col:8> col:8 implicit constexpr X 'void (const struct X &)' inline default trivial noexcept-unevaluated 0x7f88c701acd8
| | `-ParmVarDecl 0x7f88c701ae00 <col:8> col:8 'const struct X &'
| `-CXXConstructorDecl 0x7f88c701ae98 <col:8> col:8 implicit constexpr X 'void (struct X &&)' inline default trivial noexcept-unevaluated 0x7f88c701ae98
|   `-ParmVarDecl 0x7f88c701afc0 <col:8> col:8 'struct X &&'
|-CXXRecordDecl 0x7f88c701a6f0 <line:6:1, line:9:1> line:6:8 referenced struct Y definition
| |-CXXRecordDecl 0x7f88c701a818 <col:1, col:8> col:8 implicit referenced struct Y
| |-FieldDecl 0x7f88c701a8c8 <line:7:5, col:12> col:12 v 'double'
| |-FieldDecl 0x7f88c701a948 <line:8:5, col:8> col:8 n 'struct Y *'
| |-CXXConstructorDecl 0x7f88c701b150 <line:6:8> col:8 implicit used Y 'void (void) noexcept' inline default trivial
| | `-CompoundStmt 0x7f88c702cdb8 <col:8>
| |-CXXConstructorDecl 0x7f88c701b268 <col:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default trivial noexcept-unevaluated 0x7f88c701b268
| | `-ParmVarDecl 0x7f88c701b390 <col:8> col:8 'const struct Y &'
| `-CXXConstructorDecl 0x7f88c702cc28 <col:8> col:8 implicit constexpr Y 'void (struct Y &&)' inline default trivial noexcept-unevaluated 0x7f88c702cc28
|   `-ParmVarDecl 0x7f88c702cd50 <col:8> col:8 'struct Y &&'
`-FunctionDecl 0x7f88c701aa08 <line:11:1, line:21:1> line:11:5 main 'int (void)'
  `-CompoundStmt 0x7f88c702d250 <line:12:1, line:21:1>
    |-DeclStmt 0x7f88c701b0a8 <line:14:5, col:9>
    | `-VarDecl 0x7f88c701ab18 <col:5, col:7> col:7 x1 'struct X' callinit
    |   `-CXXConstructExpr 0x7f88c701b078 <col:7> 'struct X' 'void (void) noexcept'
    |-DeclStmt 0x7f88c702ce00 <line:15:5, col:9>
    | `-VarDecl 0x7f88c701b0d0 <col:5, col:7> col:7 y1 'struct Y' callinit
    |   `-CXXConstructExpr 0x7f88c702cdd0 <col:7> 'struct Y' 'void (void) noexcept'
    |-DeclStmt 0x7f88c702d000 <line:18:5, col:11>
    | `-VarDecl 0x7f88c702ce28 <col:5, col:10> col:7 x2 'struct X' listinit
    |   `-InitListExpr 0x7f88c702cec8 <col:9, col:10> 'struct X'
    |     |-ImplicitValueInitExpr 0x7f88c702cf18 <<invalid sloc>> 'double'
    |     `-ImplicitValueInitExpr 0x7f88c702cf28 <<invalid sloc>> 'double'
    |-DeclStmt 0x7f88c702d200 <line:19:5, col:11>
    | `-VarDecl 0x7f88c702d028 <col:5, col:10> col:7 y2 'struct Y' listinit
    |   `-InitListExpr 0x7f88c702d0c8 <col:9, col:10> 'struct Y'
    |     |-ImplicitValueInitExpr 0x7f88c702d118 <<invalid sloc>> 'double'
    |     `-ImplicitValueInitExpr 0x7f88c702d128 <<invalid sloc>> 'struct Y *'
    `-ReturnStmt 0x7f88c702d238 <line:20:5, col:12>
      `-IntegerLiteral 0x7f88c702d218 <col:12> 'int' 0
