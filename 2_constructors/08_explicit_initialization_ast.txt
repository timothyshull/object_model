TranslationUnitDecl 0x7f823d02f8d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f823d02fe60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f823d02fb40 '__int128'
|-TypedefDecl 0x7f823d02fed0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f823d02fb60 'unsigned __int128'
|-TypedefDecl 0x7f823d030218 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f823d02ffc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f823d02ff28 '__NSConstantString_tag'
|-TypedefDecl 0x7f823d0302b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f823d030270 'char *'
|   `-BuiltinType 0x7f823d02f960 'char'
|-TypedefDecl 0x7f823d062000 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f823d030590 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f823d0303a0 'struct __va_list_tag'
|     `-CXXRecord 0x7f823d030308 '__va_list_tag'
|-CXXRecordDecl 0x7f823d062058 <object_model_refined/2_constructors/08_explicit_initialization.cpp:1:1, line:9:1> line:1:8 referenced struct X definition
| |-CXXRecordDecl 0x7f823d062178 <col:1, col:8> col:8 implicit referenced struct X
| |-FieldDecl 0x7f823d062228 <line:2:5, col:13> col:9 referenced x 'int'
| | `-IntegerLiteral 0x7f823d0626b8 <col:13> 'int' 0
| |-CXXConstructorDecl 0x7f823d0623a0 <line:4:5, col:22> col:5 used X 'void (int)'
| | |-ParmVarDecl 0x7f823d062288 <col:7, col:11> col:11 used a 'int'
| | |-CXXCtorInitializer Field 0x7f823d062228 'x' 'int'
| | | `-InitListExpr 0x7f823d062780 <col:17, col:19> 'int'
| | |   `-ImplicitCastExpr 0x7f823d0627c0 <col:18> 'int' <LValueToRValue>
| | |     `-DeclRefExpr 0x7f823d062710 <col:18> 'int' lvalue ParmVar 0x7f823d062288 'a' 'int'
| | `-CompoundStmt 0x7f823d062810 <col:21, col:22>
| |-CXXConstructorDecl 0x7f823d0624a0 <line:6:5, col:17> col:5 constexpr X 'void (void)' default noexcept-unevaluated 0x7f823d0624a0
| |-CXXDestructorDecl 0x7f823d062598 <line:8:5, col:18> col:5 referenced ~X 'void (void) noexcept' default trivial
| `-CXXConstructorDecl 0x7f823d08b608 <line:1:8> col:8 implicit used constexpr X 'void (const struct X &) noexcept' inline default trivial
|   |-ParmVarDecl 0x7f823d08b730 <col:8> col:8 used 'const struct X &'
|   |-CXXCtorInitializer Field 0x7f823d062228 'x' 'int'
|   | `-ImplicitCastExpr 0x7f823d08b998 <col:8> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x7f823d08b960 <col:8> 'const int' lvalue .x 0x7f823d062228
|   |     `-DeclRefExpr 0x7f823d08b938 <col:8> 'const struct X' lvalue ParmVar 0x7f823d08b730 '' 'const struct X &'
|   `-CompoundStmt 0x7f823d08b9e0 <col:8>
|-CXXRecordDecl 0x7f823d062828 <line:11:1, line:19:1> line:11:8 referenced struct Y definition
| |-CXXRecordDecl 0x7f823d062948 <col:1, col:8> col:8 implicit referenced struct Y
| |-FieldDecl 0x7f823d0629f8 <line:12:5, col:13> col:9 y 'int'
| | `-IntegerLiteral 0x7f823d062e18 <col:13> 'int' 0
| |-CXXConstructorDecl 0x7f823d062b30 <line:14:5, col:31> col:14 used Y 'void (int)'
| | |-ParmVarDecl 0x7f823d062a58 <col:16, col:20> col:20 used a 'int'
| | |-CXXCtorInitializer Field 0x7f823d0629f8 'y' 'int'
| | | `-InitListExpr 0x7f823d062ea8 <col:26, col:28> 'int'
| | |   `-ImplicitCastExpr 0x7f823d062ee8 <col:27> 'int' <LValueToRValue>
| | |     `-DeclRefExpr 0x7f823d062e38 <col:27> 'int' lvalue ParmVar 0x7f823d062a58 'a' 'int'
| | `-CompoundStmt 0x7f823d062f38 <col:30, col:31>
| |-CXXConstructorDecl 0x7f823d062c00 <line:16:5, col:17> col:5 constexpr Y 'void (void)' default noexcept-unevaluated 0x7f823d062c00
| |-CXXDestructorDecl 0x7f823d062cf8 <line:18:5, col:18> col:5 ~Y 'void (void) noexcept' default trivial
| `-CXXConstructorDecl 0x7f823d08bb68 <line:11:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default trivial noexcept-unevaluated 0x7f823d08bb68
|   `-ParmVarDecl 0x7f823d08bc90 <col:8> col:8 'const struct Y &'
`-FunctionDecl 0x7f823d08b400 <line:21:1, line:28:1> line:21:5 main 'int (void)'
  `-CompoundStmt 0x7f823d08bd80 <col:12, line:28:1>
    |-DeclStmt 0x7f823d08b7d0 <line:22:5, col:12>
    | `-VarDecl 0x7f823d08b518 <col:5, col:11> col:7 x1 'struct X' listinit
    |   `-CXXConstructExpr 0x7f823d08b798 <col:7, col:11> 'struct X' 'void (int)'
    |     `-IntegerLiteral 0x7f823d08b578 <col:10> 'int' 1
    |-DeclStmt 0x7f823d08ba48 <line:23:5, col:13>
    | `-VarDecl 0x7f823d08b7f8 <col:5, col:12> col:7 x2 'struct X' cinit
    |   `-ExprWithCleanups 0x7f823d08ba30 <col:7, col:12> 'struct X'
    |     `-CXXConstructExpr 0x7f823d08b9f8 <col:7, col:12> 'struct X' 'void (const struct X &) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0x7f823d08b8e0 <col:12> 'const struct X' lvalue
    |         `-ImplicitCastExpr 0x7f823d08b8c8 <col:12> 'const struct X' <NoOp>
    |           `-ImplicitCastExpr 0x7f823d08b8b0 <col:12> 'struct X' <ConstructorConversion>
    |             `-CXXConstructExpr 0x7f823d08b878 <col:12> 'struct X' 'void (int)'
    |               `-IntegerLiteral 0x7f823d08b858 <col:12> 'int' 2
    |-DeclStmt 0x7f823d08bd30 <line:25:5, col:12>
    | `-VarDecl 0x7f823d08ba70 <col:5, col:11> col:7 y1 'struct Y' listinit
    |   `-CXXConstructExpr 0x7f823d08bcf8 <col:7, col:11> 'struct Y' 'void (int)'
    |     `-IntegerLiteral 0x7f823d08bad0 <col:10> 'int' 1
    `-ReturnStmt 0x7f823d08bd68 <line:27:5, col:12>
      `-IntegerLiteral 0x7f823d08bd48 <col:12> 'int' 0
