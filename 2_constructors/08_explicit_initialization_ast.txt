TranslationUnitDecl 0x7fc1e7818cd0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fc1e7819260 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fc1e7818f40 '__int128'
|-TypedefDecl 0x7fc1e78192d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fc1e7818f60 'unsigned __int128'
|-TypedefDecl 0x7fc1e7819618 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fc1e78193c0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fc1e7819328 '__NSConstantString_tag'
|-TypedefDecl 0x7fc1e78196b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fc1e7819670 'char *'
|   `-BuiltinType 0x7fc1e7818d60 'char'
|-TypedefDecl 0x7fc1e784c800 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fc1e7819990 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fc1e78197a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fc1e7819708 '__va_list_tag'
|-CXXRecordDecl 0x7fc1e784c888 <object_model/2_constructors/08_explicit_initialization.cpp:15:1, line:23:1> line:15:8 referenced struct X definition
| |-FullComment 0x7fc1e78787f0 <line:2:3, line:12:81>
| | |-ParagraphComment 0x7fc1e7878630 <line:2:3, col:24>
| | | `-TextComment 0x7fc1e7878600 <col:3, col:24> Text=" from cppreference.com"
| | |-ParagraphComment 0x7fc1e78786d0 <line:4:3, line:6:92>
| | | |-TextComment 0x7fc1e7878650 <line:4:3, col:91> Text=" The explicit specifier specifies that a constructor or conversion function (since C++11)"
| | | |-TextComment 0x7fc1e7878670 <line:5:3, col:87> Text=" doesn't allow implicit conversions or copy-initialization. It may only appear within"
| | | `-TextComment 0x7fc1e7878690 <line:6:3, col:92> Text=" the decl-specifier-seq of the declaration of such a function within its class definition."
| | |-ParagraphComment 0x7fc1e7878740 <line:8:3, line:9:70>
| | | |-TextComment 0x7fc1e78786f0 <line:8:3, col:91> Text=" A constructor with a single non-default parameter (until C++11) that is declared without"
| | | `-TextComment 0x7fc1e7878710 <line:9:3, col:70> Text=" the function specifier explicit is called a converting constructor."
| | `-ParagraphComment 0x7fc1e78787b0 <line:11:3, line:12:81>
| |   |-TextComment 0x7fc1e7878760 <line:11:3, col:91> Text=" Copy-initialization is less permissive than direct-initialization: explicit constructors"
| |   `-TextComment 0x7fc1e7878780 <line:12:3, col:81> Text=" are not converting constructors and are not considered for copy-initialization"
| |-CXXRecordDecl 0x7fc1e784c9a8 <line:15:1, col:8> col:8 implicit referenced struct X
| |-FieldDecl 0x7fc1e784ca58 <line:16:5, col:13> col:9 referenced x 'int'
| | `-IntegerLiteral 0x7fc1e784cee8 <col:13> 'int' 0
| |-CXXConstructorDecl 0x7fc1e784cbd0 <line:18:5, col:22> col:5 used X 'void (int)'
| | |-ParmVarDecl 0x7fc1e784cab8 <col:7, col:11> col:11 used a 'int'
| | |-CXXCtorInitializer Field 0x7fc1e784ca58 'x' 'int'
| | | `-InitListExpr 0x7fc1e784cfb0 <col:17, col:19> 'int'
| | |   `-ImplicitCastExpr 0x7fc1e784cff0 <col:18> 'int' <LValueToRValue>
| | |     `-DeclRefExpr 0x7fc1e784cf40 <col:18> 'int' lvalue ParmVar 0x7fc1e784cab8 'a' 'int'
| | `-CompoundStmt 0x7fc1e784d040 <col:21, col:22>
| |-CXXConstructorDecl 0x7fc1e784ccd0 <line:20:5, col:17> col:5 constexpr X 'void (void)' default noexcept-unevaluated 0x7fc1e784ccd0
| |-CXXDestructorDecl 0x7fc1e784cdc8 <line:22:5, col:18> col:5 referenced ~X 'void (void) noexcept' default trivial
| `-CXXConstructorDecl 0x7fc1e7877e08 <line:15:8> col:8 implicit used constexpr X 'void (const struct X &) noexcept' inline default trivial
|   |-ParmVarDecl 0x7fc1e7877f30 <col:8> col:8 used 'const struct X &'
|   |-CXXCtorInitializer Field 0x7fc1e784ca58 'x' 'int'
|   | `-ImplicitCastExpr 0x7fc1e7878198 <col:8> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x7fc1e7878160 <col:8> 'const int' lvalue .x 0x7fc1e784ca58
|   |     `-DeclRefExpr 0x7fc1e7878138 <col:8> 'const struct X' lvalue ParmVar 0x7fc1e7877f30 '' 'const struct X &'
|   `-CompoundStmt 0x7fc1e78781e0 <col:8>
|-CXXRecordDecl 0x7fc1e784d058 <line:25:1, line:33:1> line:25:8 referenced struct Y definition
| |-CXXRecordDecl 0x7fc1e784d178 <col:1, col:8> col:8 implicit referenced struct Y
| |-FieldDecl 0x7fc1e784d228 <line:26:5, col:13> col:9 y 'int'
| | `-IntegerLiteral 0x7fc1e784d648 <col:13> 'int' 0
| |-CXXConstructorDecl 0x7fc1e784d360 <line:28:5, col:31> col:14 used Y 'void (int)'
| | |-ParmVarDecl 0x7fc1e784d288 <col:16, col:20> col:20 used a 'int'
| | |-CXXCtorInitializer Field 0x7fc1e784d228 'y' 'int'
| | | `-InitListExpr 0x7fc1e784d6d8 <col:26, col:28> 'int'
| | |   `-ImplicitCastExpr 0x7fc1e784d718 <col:27> 'int' <LValueToRValue>
| | |     `-DeclRefExpr 0x7fc1e784d668 <col:27> 'int' lvalue ParmVar 0x7fc1e784d288 'a' 'int'
| | `-CompoundStmt 0x7fc1e784d768 <col:30, col:31>
| |-CXXConstructorDecl 0x7fc1e784d430 <line:30:5, col:17> col:5 constexpr Y 'void (void)' default noexcept-unevaluated 0x7fc1e784d430
| |-CXXDestructorDecl 0x7fc1e784d528 <line:32:5, col:18> col:5 ~Y 'void (void) noexcept' default trivial
| `-CXXConstructorDecl 0x7fc1e7878368 <line:25:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default trivial noexcept-unevaluated 0x7fc1e7878368
|   `-ParmVarDecl 0x7fc1e7878490 <col:8> col:8 'const struct Y &'
`-FunctionDecl 0x7fc1e7877c00 <line:35:1, line:42:1> line:35:5 main 'int (void)'
  `-CompoundStmt 0x7fc1e7878580 <col:12, line:42:1>
    |-DeclStmt 0x7fc1e7877fd0 <line:36:5, col:12>
    | `-VarDecl 0x7fc1e7877d18 <col:5, col:11> col:7 x1 'struct X' listinit
    |   `-CXXConstructExpr 0x7fc1e7877f98 <col:7, col:11> 'struct X' 'void (int)'
    |     `-IntegerLiteral 0x7fc1e7877d78 <col:10> 'int' 1
    |-DeclStmt 0x7fc1e7878248 <line:37:5, col:13>
    | `-VarDecl 0x7fc1e7877ff8 <col:5, col:12> col:7 x2 'struct X' cinit
    |   `-ExprWithCleanups 0x7fc1e7878230 <col:7, col:12> 'struct X'
    |     `-CXXConstructExpr 0x7fc1e78781f8 <col:7, col:12> 'struct X' 'void (const struct X &) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0x7fc1e78780e0 <col:12> 'const struct X' lvalue
    |         `-ImplicitCastExpr 0x7fc1e78780c8 <col:12> 'const struct X' <NoOp>
    |           `-ImplicitCastExpr 0x7fc1e78780b0 <col:12> 'struct X' <ConstructorConversion>
    |             `-CXXConstructExpr 0x7fc1e7878078 <col:12> 'struct X' 'void (int)'
    |               `-IntegerLiteral 0x7fc1e7878058 <col:12> 'int' 2
    |-DeclStmt 0x7fc1e7878530 <line:39:5, col:12>
    | `-VarDecl 0x7fc1e7878270 <col:5, col:11> col:7 y1 'struct Y' listinit
    |   `-CXXConstructExpr 0x7fc1e78784f8 <col:7, col:11> 'struct Y' 'void (int)'
    |     `-IntegerLiteral 0x7fc1e78782d0 <col:10> 'int' 1
    `-ReturnStmt 0x7fc1e7878568 <line:41:5, col:12>
      `-IntegerLiteral 0x7fc1e7878548 <col:12> 'int' 0
