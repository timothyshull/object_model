TranslationUnitDecl 0x7f8a238326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f8a23832c60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f8a23832940 '__int128'
|-TypedefDecl 0x7f8a23832cd0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f8a23832960 'unsigned __int128'
|-TypedefDecl 0x7f8a23833018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f8a23832dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f8a23832d28 '__NSConstantString_tag'
|-TypedefDecl 0x7f8a238330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f8a23833070 'char *'
|   `-BuiltinType 0x7f8a23832760 'char'
|-TypedefDecl 0x7f8a24805e00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f8a23833390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f8a238331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7f8a23833108 '__va_list_tag'
|-CXXRecordDecl 0x7f8a24805e88 <object_model/2_constructors/08_explicit_initialization.cpp:15:1, line:23:1> line:15:8 referenced struct X definition
| |-FullComment 0x7f8a24813ff0 <line:2:3, line:12:81>
| | |-ParagraphComment 0x7f8a24813e30 <line:2:3, col:24>
| | | `-TextComment 0x7f8a24813e00 <col:3, col:24> Text=" from cppreference.com"
| | |-ParagraphComment 0x7f8a24813ed0 <line:4:3, line:6:92>
| | | |-TextComment 0x7f8a24813e50 <line:4:3, col:91> Text=" The explicit specifier specifies that a constructor or conversion function (since C++11)"
| | | |-TextComment 0x7f8a24813e70 <line:5:3, col:87> Text=" doesn't allow implicit conversions or copy-initialization. It may only appear within"
| | | `-TextComment 0x7f8a24813e90 <line:6:3, col:92> Text=" the decl-specifier-seq of the declaration of such a function within its class definition."
| | |-ParagraphComment 0x7f8a24813f40 <line:8:3, line:9:70>
| | | |-TextComment 0x7f8a24813ef0 <line:8:3, col:91> Text=" A constructor with a single non-default parameter (until C++11) that is declared without"
| | | `-TextComment 0x7f8a24813f10 <line:9:3, col:70> Text=" the function specifier explicit is called a converting constructor."
| | `-ParagraphComment 0x7f8a24813fb0 <line:11:3, line:12:81>
| |   |-TextComment 0x7f8a24813f60 <line:11:3, col:91> Text=" Copy-initialization is less permissive than direct-initialization: explicit constructors"
| |   `-TextComment 0x7f8a24813f80 <line:12:3, col:81> Text=" are not converting constructors and are not considered for copy-initialization"
| |-CXXRecordDecl 0x7f8a24805fa8 <line:15:1, col:8> col:8 implicit referenced struct X
| |-FieldDecl 0x7f8a24806058 <line:16:5, col:13> col:9 referenced x 'int'
| | `-IntegerLiteral 0x7f8a248064e8 <col:13> 'int' 0
| |-CXXConstructorDecl 0x7f8a248061d0 <line:18:5, col:22> col:5 used X 'void (int)'
| | |-ParmVarDecl 0x7f8a248060b8 <col:7, col:11> col:11 used a 'int'
| | |-CXXCtorInitializer Field 0x7f8a24806058 'x' 'int'
| | | `-InitListExpr 0x7f8a248065b0 <col:17, col:19> 'int'
| | |   `-ImplicitCastExpr 0x7f8a248065f0 <col:18> 'int' <LValueToRValue>
| | |     `-DeclRefExpr 0x7f8a24806540 <col:18> 'int' lvalue ParmVar 0x7f8a248060b8 'a' 'int'
| | `-CompoundStmt 0x7f8a24806640 <col:21, col:22>
| |-CXXConstructorDecl 0x7f8a248062d0 <line:20:5, col:17> col:5 constexpr X 'void (void)' default noexcept-unevaluated 0x7f8a248062d0
| |-CXXDestructorDecl 0x7f8a248063c8 <line:22:5, col:18> col:5 referenced ~X 'void (void) noexcept' default trivial
| `-CXXConstructorDecl 0x7f8a24813608 <line:15:8> col:8 implicit used constexpr X 'void (const struct X &) noexcept' inline default trivial
|   |-ParmVarDecl 0x7f8a24813730 <col:8> col:8 used 'const struct X &'
|   |-CXXCtorInitializer Field 0x7f8a24806058 'x' 'int'
|   | `-ImplicitCastExpr 0x7f8a24813998 <col:8> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x7f8a24813960 <col:8> 'const int' lvalue .x 0x7f8a24806058
|   |     `-DeclRefExpr 0x7f8a24813938 <col:8> 'const struct X' lvalue ParmVar 0x7f8a24813730 '' 'const struct X &'
|   `-CompoundStmt 0x7f8a248139e0 <col:8>
|-CXXRecordDecl 0x7f8a24806658 <line:25:1, line:33:1> line:25:8 referenced struct Y definition
| |-CXXRecordDecl 0x7f8a24806778 <col:1, col:8> col:8 implicit referenced struct Y
| |-FieldDecl 0x7f8a24806828 <line:26:5, col:13> col:9 y 'int'
| | `-IntegerLiteral 0x7f8a24806c48 <col:13> 'int' 0
| |-CXXConstructorDecl 0x7f8a24806960 <line:28:5, col:31> col:14 used Y 'void (int)'
| | |-ParmVarDecl 0x7f8a24806888 <col:16, col:20> col:20 used a 'int'
| | |-CXXCtorInitializer Field 0x7f8a24806828 'y' 'int'
| | | `-InitListExpr 0x7f8a24806cd8 <col:26, col:28> 'int'
| | |   `-ImplicitCastExpr 0x7f8a24806d18 <col:27> 'int' <LValueToRValue>
| | |     `-DeclRefExpr 0x7f8a24806c68 <col:27> 'int' lvalue ParmVar 0x7f8a24806888 'a' 'int'
| | `-CompoundStmt 0x7f8a24806d68 <col:30, col:31>
| |-CXXConstructorDecl 0x7f8a24806a30 <line:30:5, col:17> col:5 constexpr Y 'void (void)' default noexcept-unevaluated 0x7f8a24806a30
| |-CXXDestructorDecl 0x7f8a24806b28 <line:32:5, col:18> col:5 ~Y 'void (void) noexcept' default trivial
| `-CXXConstructorDecl 0x7f8a24813b68 <line:25:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default trivial noexcept-unevaluated 0x7f8a24813b68
|   `-ParmVarDecl 0x7f8a24813c90 <col:8> col:8 'const struct Y &'
`-FunctionDecl 0x7f8a24813400 <line:35:1, line:42:1> line:35:5 main 'int (void)'
  `-CompoundStmt 0x7f8a24813d80 <col:12, line:42:1>
    |-DeclStmt 0x7f8a248137d0 <line:36:5, col:12>
    | `-VarDecl 0x7f8a24813518 <col:5, col:11> col:7 x1 'struct X' listinit
    |   `-CXXConstructExpr 0x7f8a24813798 <col:7, col:11> 'struct X' 'void (int)'
    |     `-IntegerLiteral 0x7f8a24813578 <col:10> 'int' 1
    |-DeclStmt 0x7f8a24813a48 <line:37:5, col:13>
    | `-VarDecl 0x7f8a248137f8 <col:5, col:12> col:7 x2 'struct X' cinit
    |   `-ExprWithCleanups 0x7f8a24813a30 <col:7, col:12> 'struct X'
    |     `-CXXConstructExpr 0x7f8a248139f8 <col:7, col:12> 'struct X' 'void (const struct X &) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0x7f8a248138e0 <col:12> 'const struct X' lvalue
    |         `-ImplicitCastExpr 0x7f8a248138c8 <col:12> 'const struct X' <NoOp>
    |           `-ImplicitCastExpr 0x7f8a248138b0 <col:12> 'struct X' <ConstructorConversion>
    |             `-CXXConstructExpr 0x7f8a24813878 <col:12> 'struct X' 'void (int)'
    |               `-IntegerLiteral 0x7f8a24813858 <col:12> 'int' 2
    |-DeclStmt 0x7f8a24813d30 <line:39:5, col:12>
    | `-VarDecl 0x7f8a24813a70 <col:5, col:11> col:7 y1 'struct Y' listinit
    |   `-CXXConstructExpr 0x7f8a24813cf8 <col:7, col:11> 'struct Y' 'void (int)'
    |     `-IntegerLiteral 0x7f8a24813ad0 <col:10> 'int' 1
    `-ReturnStmt 0x7f8a24813d68 <line:41:5, col:12>
      `-IntegerLiteral 0x7f8a24813d48 <col:12> 'int' 0
