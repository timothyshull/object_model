
*** Dumping AST Record Layout
         0 | struct V
         0 |   (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct A
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D
         0 |   struct A (primary base)
         8 |   struct B (base)
         0 |   struct V (virtual base)
         0 |     (V vtable pointer)
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B2
         0 |   (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D2
         0 |   struct B2 (primary base)
         0 |     (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff190069058 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:2:1, line:4:1> line:2:8 referenced struct V definition
|-CXXRecordDecl 0x7ff190069178 <col:1, col:8> col:8 implicit struct V
|-CXXMethodDecl 0x7ff190069290 <line:3:5, col:23> col:18 m 'void (void)' virtual
| `-CompoundStmt 0x7ff1900697b8 <col:22, col:23>
|-CXXMethodDecl 0x7ff190069388 <line:2:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(const struct V &)' inline default noexcept-unevaluated 0x7ff190069388
| `-ParmVarDecl 0x7ff1900694a0 <col:8> col:8 'const struct V &'
|-CXXMethodDecl 0x7ff190069538 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(struct V &&)' inline default noexcept-unevaluated 0x7ff190069538
| `-ParmVarDecl 0x7ff190069650 <col:8> col:8 'struct V &&'
|-CXXDestructorDecl 0x7ff1900696d8 <col:8> col:8 implicit ~V 'void (void)' inline default trivial noexcept-unevaluated 0x7ff1900696d8
|-CXXConstructorDecl 0x7ff1900996c8 <col:8> col:8 implicit used constexpr V 'void (void) noexcept' inline default
| `-CompoundStmt 0x7ff19009a558 <col:8>
|-CXXConstructorDecl 0x7ff190099bc8 <col:8> col:8 implicit constexpr V 'void (const struct V &)' inline default noexcept-unevaluated 0x7ff190099bc8
| `-ParmVarDecl 0x7ff190099cf0 <col:8> col:8 'const struct V &'
`-CXXConstructorDecl 0x7ff190099d58 <col:8> col:8 implicit constexpr V 'void (struct V &&)' inline default noexcept-unevaluated 0x7ff190099d58
  `-ParmVarDecl 0x7ff190099e80 <col:8> col:8 'struct V &&'

Layout: <CGRecordLayout
  LLVMType:%struct.V = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.V = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff1900697d0 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:6:1, col:23> col:8 referenced struct A definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7ff190069950 <col:1, col:8> col:8 implicit struct A
|-CXXMethodDecl 0x7ff190069a48 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(const struct A &)' inline default noexcept-unevaluated 0x7ff190069a48
| `-ParmVarDecl 0x7ff190069b60 <col:8> col:8 'const struct A &'
|-CXXMethodDecl 0x7ff190069bf8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(struct A &&)' inline default noexcept-unevaluated 0x7ff190069bf8
| `-ParmVarDecl 0x7ff190069d10 <col:8> col:8 'struct A &&'
|-CXXDestructorDecl 0x7ff190069d98 <col:8> col:8 implicit ~A 'void (void)' inline default trivial noexcept-unevaluated 0x7ff190069d98
|-CXXConstructorDecl 0x7ff1900995c8 <col:8> col:8 implicit used A 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7ff19009a5d8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7ff19009a648 <col:8>
|-CXXConstructorDecl 0x7ff190099a38 <col:8> col:8 implicit A 'void (const struct A &)' inline default noexcept-unevaluated 0x7ff190099a38
| `-ParmVarDecl 0x7ff190099b60 <col:8> col:8 'const struct A &'
`-CXXConstructorDecl 0x7ff190099ee8 <col:8> col:8 implicit A 'void (struct A &&)' inline default noexcept-unevaluated 0x7ff190099ee8
  `-ParmVarDecl 0x7ff19009a040 <col:8> col:8 'struct A &&'

Layout: <CGRecordLayout
  LLVMType:%struct.A = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.A = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff190069e78 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:8:1, col:23> col:8 referenced struct B definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7ff190096400 <col:1, col:8> col:8 implicit struct B
|-CXXMethodDecl 0x7ff1900964f8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(const struct B &)' inline default noexcept-unevaluated 0x7ff1900964f8
| `-ParmVarDecl 0x7ff190096610 <col:8> col:8 'const struct B &'
|-CXXMethodDecl 0x7ff1900966a8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(struct B &&)' inline default noexcept-unevaluated 0x7ff1900966a8
| `-ParmVarDecl 0x7ff1900967c0 <col:8> col:8 'struct B &&'
|-CXXDestructorDecl 0x7ff190096848 <col:8> col:8 implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7ff190096848
|-CXXConstructorDecl 0x7ff1900997c8 <col:8> col:8 implicit used B 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7ff19009a6c8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7ff19009a738 <col:8>
|-CXXConstructorDecl 0x7ff19009a0a8 <col:8> col:8 implicit B 'void (const struct B &)' inline default noexcept-unevaluated 0x7ff19009a0a8
| `-ParmVarDecl 0x7ff19009a1d0 <col:8> col:8 'const struct B &'
`-CXXConstructorDecl 0x7ff19009a238 <col:8> col:8 implicit B 'void (struct B &&)' inline default noexcept-unevaluated 0x7ff19009a238
  `-ParmVarDecl 0x7ff19009a360 <col:8> col:8 'struct B &&'

Layout: <CGRecordLayout
  LLVMType:%struct.B = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.B = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff190096928 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:10:1, col:18> col:8 referenced struct D definition
|-public 'struct A'
|-public 'struct B'
|-CXXRecordDecl 0x7ff190096ae0 <col:1, col:8> col:8 implicit struct D
|-CXXMethodDecl 0x7ff190096bd8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(const struct D &)' inline default noexcept-unevaluated 0x7ff190096bd8
| `-ParmVarDecl 0x7ff190096cf0 <col:8> col:8 'const struct D &'
|-CXXMethodDecl 0x7ff190096d88 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(struct D &&)' inline default noexcept-unevaluated 0x7ff190096d88
| `-ParmVarDecl 0x7ff190096ea0 <col:8> col:8 'struct D &&'
|-CXXDestructorDecl 0x7ff190096f28 <col:8> col:8 implicit ~D 'void (void)' inline default trivial noexcept-unevaluated 0x7ff190096f28
|-CXXConstructorDecl 0x7ff1900994c8 <col:8> col:8 implicit used D 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7ff19009a570 <col:8> 'struct V' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct A'
| | `-CXXConstructExpr 0x7ff19009a660 <col:8> 'struct A' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7ff19009a750 <col:8> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7ff19009a7d0 <col:8>
|-CXXConstructorDecl 0x7ff1900998a8 <col:8> col:8 implicit D 'void (const struct D &)' inline default noexcept-unevaluated 0x7ff1900998a8
| `-ParmVarDecl 0x7ff1900999d0 <col:8> col:8 'const struct D &'
`-CXXConstructorDecl 0x7ff19009a3c8 <col:8> col:8 implicit D 'void (struct D &&)' inline default noexcept-unevaluated 0x7ff19009a3c8
  `-ParmVarDecl 0x7ff19009a4f0 <col:8> col:8 'struct D &&'

Layout: <CGRecordLayout
  LLVMType:%struct.D = type { %struct.A, %struct.B }
  NonVirtualBaseLLVMType:%struct.D = type { %struct.A, %struct.B }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff190097008 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:12:1, line:14:1> line:12:8 referenced struct B2 definition
|-CXXRecordDecl 0x7ff190097128 <col:1, col:8> col:8 implicit referenced struct B2
|-CXXDestructorDecl 0x7ff190097238 <line:13:5, col:20> col:13 used ~B2 'void (void) noexcept' virtual
| `-CompoundStmt 0x7ff1900981c0 <col:19, col:20>
|-CXXMethodDecl 0x7ff190098000 <line:12:8, <invalid sloc>> col:8 implicit operator= 'struct B2 &(const struct B2 &)' inline default noexcept-unevaluated 0x7ff190098000
| `-ParmVarDecl 0x7ff190098120 <col:8> col:8 'const struct B2 &'
|-CXXConstructorDecl 0x7ff190098ad8 <col:8> col:8 implicit constexpr B2 'void (const struct B2 &)' inline default noexcept-unevaluated 0x7ff190098ad8
| `-ParmVarDecl 0x7ff190098c00 <col:8> col:8 'const struct B2 &'
`-CXXConstructorDecl 0x7ff19009d400 <col:8> col:8 implicit used constexpr B2 'void (void) noexcept' inline default
  `-CompoundStmt 0x7ff19009d4e8 <col:8>

Layout: <CGRecordLayout
  LLVMType:%struct.B2 = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.B2 = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff1900987b8 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:16:1, line:18:1> line:16:8 referenced struct D2 definition
|-public 'struct B2'
|-CXXRecordDecl 0x7ff190098918 <col:1, col:8> col:8 implicit struct D2
|-CXXMethodDecl 0x7ff1900989f8 <line:17:5, col:23> col:18 used m 'void (void)' virtual
| `-CompoundStmt 0x7ff190099288 <col:22, col:23>
|-CXXConstructorDecl 0x7ff190098c88 <line:16:8> col:8 implicit constexpr D2 'void (struct D2 &&)' inline default noexcept-unevaluated 0x7ff190098c88
| `-ParmVarDecl 0x7ff190098db0 <col:8> col:8 'struct D2 &&'
|-CXXMethodDecl 0x7ff190098e78 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(const struct D2 &)' inline default noexcept-unevaluated 0x7ff190098e78
| `-ParmVarDecl 0x7ff190098f90 <col:8> col:8 'const struct D2 &'
|-CXXMethodDecl 0x7ff190099000 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(struct D2 &&)' inline default noexcept-unevaluated 0x7ff190099000
| `-ParmVarDecl 0x7ff190099120 <col:8> col:8 'struct D2 &&'
|-CXXDestructorDecl 0x7ff1900991a8 <col:8> col:8 implicit ~D2 'void (void) noexcept' inline default
|-CXXConstructorDecl 0x7ff19009da10 <col:8> col:8 implicit used constexpr D2 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B2'
| | `-CXXConstructExpr 0x7ff19009dc88 <col:8> 'struct B2' 'void (void) noexcept'
| `-CompoundStmt 0x7ff19009dcf8 <col:8>
`-CXXConstructorDecl 0x7ff19009daf8 <col:8> col:8 implicit constexpr D2 'void (const struct D2 &)' inline default noexcept-unevaluated 0x7ff19009daf8
  `-ParmVarDecl 0x7ff19009dc20 <col:8> col:8 'const struct D2 &'

Layout: <CGRecordLayout
  LLVMType:%struct.D2 = type { %struct.B2 }
  NonVirtualBaseLLVMType:%struct.D2 = type { %struct.B2 }
  IsZeroInitializable:1
  BitFields:[
]>
