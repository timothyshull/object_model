
*** Dumping AST Record Layout
         0 | struct V
         0 |   (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct A
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D
         0 |   struct A (primary base)
         8 |   struct B (base)
         0 |   struct V (virtual base)
         0 |     (V vtable pointer)
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B2
         0 |   (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D2
         0 |   struct B2 (primary base)
         0 |     (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fc19081d458 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:2:1, line:4:1> line:2:8 referenced struct V definition
|-CXXRecordDecl 0x7fc19081d578 <col:1, col:8> col:8 implicit struct V
|-CXXMethodDecl 0x7fc19081d690 <line:3:5, col:23> col:18 m 'void (void)' virtual
| `-CompoundStmt 0x7fc19081dbb8 <col:22, col:23>
|-CXXMethodDecl 0x7fc19081d788 <line:2:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(const struct V &)' inline default noexcept-unevaluated 0x7fc19081d788
| `-ParmVarDecl 0x7fc19081d8a0 <col:8> col:8 'const struct V &'
|-CXXMethodDecl 0x7fc19081d938 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(struct V &&)' inline default noexcept-unevaluated 0x7fc19081d938
| `-ParmVarDecl 0x7fc19081da50 <col:8> col:8 'struct V &&'
|-CXXDestructorDecl 0x7fc19081dad8 <col:8> col:8 implicit ~V 'void (void)' inline default trivial noexcept-unevaluated 0x7fc19081dad8
|-CXXConstructorDecl 0x7fc190851ec8 <col:8> col:8 implicit used constexpr V 'void (void) noexcept' inline default
| `-CompoundStmt 0x7fc190852d58 <col:8>
|-CXXConstructorDecl 0x7fc1908523c8 <col:8> col:8 implicit constexpr V 'void (const struct V &)' inline default noexcept-unevaluated 0x7fc1908523c8
| `-ParmVarDecl 0x7fc1908524f0 <col:8> col:8 'const struct V &'
`-CXXConstructorDecl 0x7fc190852558 <col:8> col:8 implicit constexpr V 'void (struct V &&)' inline default noexcept-unevaluated 0x7fc190852558
  `-ParmVarDecl 0x7fc190852680 <col:8> col:8 'struct V &&'

Layout: <CGRecordLayout
  LLVMType:%struct.V = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.V = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fc19081dbd0 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:6:1, col:23> col:8 referenced struct A definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7fc19081dd50 <col:1, col:8> col:8 implicit struct A
|-CXXMethodDecl 0x7fc19081de48 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(const struct A &)' inline default noexcept-unevaluated 0x7fc19081de48
| `-ParmVarDecl 0x7fc19081df60 <col:8> col:8 'const struct A &'
|-CXXMethodDecl 0x7fc19081dff8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(struct A &&)' inline default noexcept-unevaluated 0x7fc19081dff8
| `-ParmVarDecl 0x7fc19081e110 <col:8> col:8 'struct A &&'
|-CXXDestructorDecl 0x7fc19081e198 <col:8> col:8 implicit ~A 'void (void)' inline default trivial noexcept-unevaluated 0x7fc19081e198
|-CXXConstructorDecl 0x7fc190851dc8 <col:8> col:8 implicit used A 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7fc190852dd8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7fc190852e48 <col:8>
|-CXXConstructorDecl 0x7fc190852238 <col:8> col:8 implicit A 'void (const struct A &)' inline default noexcept-unevaluated 0x7fc190852238
| `-ParmVarDecl 0x7fc190852360 <col:8> col:8 'const struct A &'
`-CXXConstructorDecl 0x7fc1908526e8 <col:8> col:8 implicit A 'void (struct A &&)' inline default noexcept-unevaluated 0x7fc1908526e8
  `-ParmVarDecl 0x7fc190852840 <col:8> col:8 'struct A &&'

Layout: <CGRecordLayout
  LLVMType:%struct.A = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.A = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fc19081e278 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:8:1, col:23> col:8 referenced struct B definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7fc19084ec00 <col:1, col:8> col:8 implicit struct B
|-CXXMethodDecl 0x7fc19084ecf8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(const struct B &)' inline default noexcept-unevaluated 0x7fc19084ecf8
| `-ParmVarDecl 0x7fc19084ee10 <col:8> col:8 'const struct B &'
|-CXXMethodDecl 0x7fc19084eea8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(struct B &&)' inline default noexcept-unevaluated 0x7fc19084eea8
| `-ParmVarDecl 0x7fc19084efc0 <col:8> col:8 'struct B &&'
|-CXXDestructorDecl 0x7fc19084f048 <col:8> col:8 implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7fc19084f048
|-CXXConstructorDecl 0x7fc190851fc8 <col:8> col:8 implicit used B 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7fc190852ec8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7fc190852f38 <col:8>
|-CXXConstructorDecl 0x7fc1908528a8 <col:8> col:8 implicit B 'void (const struct B &)' inline default noexcept-unevaluated 0x7fc1908528a8
| `-ParmVarDecl 0x7fc1908529d0 <col:8> col:8 'const struct B &'
`-CXXConstructorDecl 0x7fc190852a38 <col:8> col:8 implicit B 'void (struct B &&)' inline default noexcept-unevaluated 0x7fc190852a38
  `-ParmVarDecl 0x7fc190852b60 <col:8> col:8 'struct B &&'

Layout: <CGRecordLayout
  LLVMType:%struct.B = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.B = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fc19084f128 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:10:1, col:18> col:8 referenced struct D definition
|-public 'struct A'
|-public 'struct B'
|-CXXRecordDecl 0x7fc19084f2e0 <col:1, col:8> col:8 implicit struct D
|-CXXMethodDecl 0x7fc19084f3d8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(const struct D &)' inline default noexcept-unevaluated 0x7fc19084f3d8
| `-ParmVarDecl 0x7fc19084f4f0 <col:8> col:8 'const struct D &'
|-CXXMethodDecl 0x7fc19084f588 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(struct D &&)' inline default noexcept-unevaluated 0x7fc19084f588
| `-ParmVarDecl 0x7fc19084f6a0 <col:8> col:8 'struct D &&'
|-CXXDestructorDecl 0x7fc19084f728 <col:8> col:8 implicit ~D 'void (void)' inline default trivial noexcept-unevaluated 0x7fc19084f728
|-CXXConstructorDecl 0x7fc190851cc8 <col:8> col:8 implicit used D 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7fc190852d70 <col:8> 'struct V' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct A'
| | `-CXXConstructExpr 0x7fc190852e60 <col:8> 'struct A' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7fc190852f50 <col:8> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7fc190852fd0 <col:8>
|-CXXConstructorDecl 0x7fc1908520a8 <col:8> col:8 implicit D 'void (const struct D &)' inline default noexcept-unevaluated 0x7fc1908520a8
| `-ParmVarDecl 0x7fc1908521d0 <col:8> col:8 'const struct D &'
`-CXXConstructorDecl 0x7fc190852bc8 <col:8> col:8 implicit D 'void (struct D &&)' inline default noexcept-unevaluated 0x7fc190852bc8
  `-ParmVarDecl 0x7fc190852cf0 <col:8> col:8 'struct D &&'

Layout: <CGRecordLayout
  LLVMType:%struct.D = type { %struct.A, %struct.B }
  NonVirtualBaseLLVMType:%struct.D = type { %struct.A, %struct.B }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fc19084f808 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:12:1, line:14:1> line:12:8 referenced struct B2 definition
|-CXXRecordDecl 0x7fc19084f928 <col:1, col:8> col:8 implicit referenced struct B2
|-CXXDestructorDecl 0x7fc19084fa38 <line:13:5, col:20> col:13 used ~B2 'void (void) noexcept' virtual
| `-CompoundStmt 0x7fc1908509c0 <col:19, col:20>
|-CXXMethodDecl 0x7fc190850800 <line:12:8, <invalid sloc>> col:8 implicit operator= 'struct B2 &(const struct B2 &)' inline default noexcept-unevaluated 0x7fc190850800
| `-ParmVarDecl 0x7fc190850920 <col:8> col:8 'const struct B2 &'
|-CXXConstructorDecl 0x7fc1908512d8 <col:8> col:8 implicit constexpr B2 'void (const struct B2 &)' inline default noexcept-unevaluated 0x7fc1908512d8
| `-ParmVarDecl 0x7fc190851400 <col:8> col:8 'const struct B2 &'
`-CXXConstructorDecl 0x7fc190855600 <col:8> col:8 implicit used constexpr B2 'void (void) noexcept' inline default
  `-CompoundStmt 0x7fc1908556e8 <col:8>

Layout: <CGRecordLayout
  LLVMType:%struct.B2 = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.B2 = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7fc190850fb8 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:16:1, line:18:1> line:16:8 referenced struct D2 definition
|-public 'struct B2'
|-CXXRecordDecl 0x7fc190851118 <col:1, col:8> col:8 implicit struct D2
|-CXXMethodDecl 0x7fc1908511f8 <line:17:5, col:23> col:18 used m 'void (void)' virtual
| `-CompoundStmt 0x7fc190851a88 <col:22, col:23>
|-CXXConstructorDecl 0x7fc190851488 <line:16:8> col:8 implicit constexpr D2 'void (struct D2 &&)' inline default noexcept-unevaluated 0x7fc190851488
| `-ParmVarDecl 0x7fc1908515b0 <col:8> col:8 'struct D2 &&'
|-CXXMethodDecl 0x7fc190851678 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(const struct D2 &)' inline default noexcept-unevaluated 0x7fc190851678
| `-ParmVarDecl 0x7fc190851790 <col:8> col:8 'const struct D2 &'
|-CXXMethodDecl 0x7fc190851800 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(struct D2 &&)' inline default noexcept-unevaluated 0x7fc190851800
| `-ParmVarDecl 0x7fc190851920 <col:8> col:8 'struct D2 &&'
|-CXXDestructorDecl 0x7fc1908519a8 <col:8> col:8 implicit ~D2 'void (void) noexcept' inline default
|-CXXConstructorDecl 0x7fc190855c00 <col:8> col:8 implicit used constexpr D2 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B2'
| | `-CXXConstructExpr 0x7fc190855e78 <col:8> 'struct B2' 'void (void) noexcept'
| `-CompoundStmt 0x7fc190855ee8 <col:8>
`-CXXConstructorDecl 0x7fc190855ce8 <col:8> col:8 implicit constexpr D2 'void (const struct D2 &)' inline default noexcept-unevaluated 0x7fc190855ce8
  `-ParmVarDecl 0x7fc190855e10 <col:8> col:8 'const struct D2 &'

Layout: <CGRecordLayout
  LLVMType:%struct.D2 = type { %struct.B2 }
  NonVirtualBaseLLVMType:%struct.D2 = type { %struct.B2 }
  IsZeroInitializable:1
  BitFields:[
]>
