
*** Dumping AST Record Layout
         0 | struct V
         0 |   (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct A
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D
         0 |   struct A (primary base)
         8 |   struct B (base)
         0 |   struct V (virtual base)
         0 |     (V vtable pointer)
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B2
         0 |   (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D2
         0 |   struct B2 (primary base)
         0 |     (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff1f4068658 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:2:1, line:4:1> line:2:8 referenced struct V definition
|-CXXRecordDecl 0x7ff1f4068778 <col:1, col:8> col:8 implicit struct V
|-CXXMethodDecl 0x7ff1f4068890 <line:3:5, col:23> col:18 m 'void (void)' virtual
| `-CompoundStmt 0x7ff1f4068db8 <col:22, col:23>
|-CXXMethodDecl 0x7ff1f4068988 <line:2:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(const struct V &)' inline default noexcept-unevaluated 0x7ff1f4068988
| `-ParmVarDecl 0x7ff1f4068aa0 <col:8> col:8 'const struct V &'
|-CXXMethodDecl 0x7ff1f4068b38 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(struct V &&)' inline default noexcept-unevaluated 0x7ff1f4068b38
| `-ParmVarDecl 0x7ff1f4068c50 <col:8> col:8 'struct V &&'
|-CXXDestructorDecl 0x7ff1f4068cd8 <col:8> col:8 implicit ~V 'void (void)' inline default trivial noexcept-unevaluated 0x7ff1f4068cd8
|-CXXConstructorDecl 0x7ff1f4098cc8 <col:8> col:8 implicit used constexpr V 'void (void) noexcept' inline default
| `-CompoundStmt 0x7ff1f4099b58 <col:8>
|-CXXConstructorDecl 0x7ff1f40991c8 <col:8> col:8 implicit constexpr V 'void (const struct V &)' inline default noexcept-unevaluated 0x7ff1f40991c8
| `-ParmVarDecl 0x7ff1f40992f0 <col:8> col:8 'const struct V &'
`-CXXConstructorDecl 0x7ff1f4099358 <col:8> col:8 implicit constexpr V 'void (struct V &&)' inline default noexcept-unevaluated 0x7ff1f4099358
  `-ParmVarDecl 0x7ff1f4099480 <col:8> col:8 'struct V &&'

Layout: <CGRecordLayout
  LLVMType:%struct.V = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.V = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff1f4068dd0 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:6:1, col:23> col:8 referenced struct A definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7ff1f4068f50 <col:1, col:8> col:8 implicit struct A
|-CXXMethodDecl 0x7ff1f4069048 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(const struct A &)' inline default noexcept-unevaluated 0x7ff1f4069048
| `-ParmVarDecl 0x7ff1f4069160 <col:8> col:8 'const struct A &'
|-CXXMethodDecl 0x7ff1f40691f8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(struct A &&)' inline default noexcept-unevaluated 0x7ff1f40691f8
| `-ParmVarDecl 0x7ff1f4069310 <col:8> col:8 'struct A &&'
|-CXXDestructorDecl 0x7ff1f4069398 <col:8> col:8 implicit ~A 'void (void)' inline default trivial noexcept-unevaluated 0x7ff1f4069398
|-CXXConstructorDecl 0x7ff1f4098bc8 <col:8> col:8 implicit used A 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7ff1f4099bd8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7ff1f4099c48 <col:8>
|-CXXConstructorDecl 0x7ff1f4099038 <col:8> col:8 implicit A 'void (const struct A &)' inline default noexcept-unevaluated 0x7ff1f4099038
| `-ParmVarDecl 0x7ff1f4099160 <col:8> col:8 'const struct A &'
`-CXXConstructorDecl 0x7ff1f40994e8 <col:8> col:8 implicit A 'void (struct A &&)' inline default noexcept-unevaluated 0x7ff1f40994e8
  `-ParmVarDecl 0x7ff1f4099640 <col:8> col:8 'struct A &&'

Layout: <CGRecordLayout
  LLVMType:%struct.A = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.A = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff1f4069478 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:8:1, col:23> col:8 referenced struct B definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7ff1f4095a00 <col:1, col:8> col:8 implicit struct B
|-CXXMethodDecl 0x7ff1f4095af8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(const struct B &)' inline default noexcept-unevaluated 0x7ff1f4095af8
| `-ParmVarDecl 0x7ff1f4095c10 <col:8> col:8 'const struct B &'
|-CXXMethodDecl 0x7ff1f4095ca8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(struct B &&)' inline default noexcept-unevaluated 0x7ff1f4095ca8
| `-ParmVarDecl 0x7ff1f4095dc0 <col:8> col:8 'struct B &&'
|-CXXDestructorDecl 0x7ff1f4095e48 <col:8> col:8 implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7ff1f4095e48
|-CXXConstructorDecl 0x7ff1f4098dc8 <col:8> col:8 implicit used B 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7ff1f4099cc8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7ff1f4099d38 <col:8>
|-CXXConstructorDecl 0x7ff1f40996a8 <col:8> col:8 implicit B 'void (const struct B &)' inline default noexcept-unevaluated 0x7ff1f40996a8
| `-ParmVarDecl 0x7ff1f40997d0 <col:8> col:8 'const struct B &'
`-CXXConstructorDecl 0x7ff1f4099838 <col:8> col:8 implicit B 'void (struct B &&)' inline default noexcept-unevaluated 0x7ff1f4099838
  `-ParmVarDecl 0x7ff1f4099960 <col:8> col:8 'struct B &&'

Layout: <CGRecordLayout
  LLVMType:%struct.B = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.B = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff1f4095f28 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:10:1, col:18> col:8 referenced struct D definition
|-public 'struct A'
|-public 'struct B'
|-CXXRecordDecl 0x7ff1f40960e0 <col:1, col:8> col:8 implicit struct D
|-CXXMethodDecl 0x7ff1f40961d8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(const struct D &)' inline default noexcept-unevaluated 0x7ff1f40961d8
| `-ParmVarDecl 0x7ff1f40962f0 <col:8> col:8 'const struct D &'
|-CXXMethodDecl 0x7ff1f4096388 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(struct D &&)' inline default noexcept-unevaluated 0x7ff1f4096388
| `-ParmVarDecl 0x7ff1f40964a0 <col:8> col:8 'struct D &&'
|-CXXDestructorDecl 0x7ff1f4096528 <col:8> col:8 implicit ~D 'void (void)' inline default trivial noexcept-unevaluated 0x7ff1f4096528
|-CXXConstructorDecl 0x7ff1f4098ac8 <col:8> col:8 implicit used D 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7ff1f4099b70 <col:8> 'struct V' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct A'
| | `-CXXConstructExpr 0x7ff1f4099c60 <col:8> 'struct A' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7ff1f4099d50 <col:8> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7ff1f4099dd0 <col:8>
|-CXXConstructorDecl 0x7ff1f4098ea8 <col:8> col:8 implicit D 'void (const struct D &)' inline default noexcept-unevaluated 0x7ff1f4098ea8
| `-ParmVarDecl 0x7ff1f4098fd0 <col:8> col:8 'const struct D &'
`-CXXConstructorDecl 0x7ff1f40999c8 <col:8> col:8 implicit D 'void (struct D &&)' inline default noexcept-unevaluated 0x7ff1f40999c8
  `-ParmVarDecl 0x7ff1f4099af0 <col:8> col:8 'struct D &&'

Layout: <CGRecordLayout
  LLVMType:%struct.D = type { %struct.A, %struct.B }
  NonVirtualBaseLLVMType:%struct.D = type { %struct.A, %struct.B }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff1f4096608 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:12:1, line:14:1> line:12:8 referenced struct B2 definition
|-CXXRecordDecl 0x7ff1f4096728 <col:1, col:8> col:8 implicit referenced struct B2
|-CXXDestructorDecl 0x7ff1f4096838 <line:13:5, col:20> col:13 used ~B2 'void (void) noexcept' virtual
| `-CompoundStmt 0x7ff1f40977c0 <col:19, col:20>
|-CXXMethodDecl 0x7ff1f4097600 <line:12:8, <invalid sloc>> col:8 implicit operator= 'struct B2 &(const struct B2 &)' inline default noexcept-unevaluated 0x7ff1f4097600
| `-ParmVarDecl 0x7ff1f4097720 <col:8> col:8 'const struct B2 &'
|-CXXConstructorDecl 0x7ff1f40980d8 <col:8> col:8 implicit constexpr B2 'void (const struct B2 &)' inline default noexcept-unevaluated 0x7ff1f40980d8
| `-ParmVarDecl 0x7ff1f4098200 <col:8> col:8 'const struct B2 &'
`-CXXConstructorDecl 0x7ff1f409ca00 <col:8> col:8 implicit used constexpr B2 'void (void) noexcept' inline default
  `-CompoundStmt 0x7ff1f409cae8 <col:8>

Layout: <CGRecordLayout
  LLVMType:%struct.B2 = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.B2 = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7ff1f4097db8 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:16:1, line:18:1> line:16:8 referenced struct D2 definition
|-public 'struct B2'
|-CXXRecordDecl 0x7ff1f4097f18 <col:1, col:8> col:8 implicit struct D2
|-CXXMethodDecl 0x7ff1f4097ff8 <line:17:5, col:23> col:18 used m 'void (void)' virtual
| `-CompoundStmt 0x7ff1f4098888 <col:22, col:23>
|-CXXConstructorDecl 0x7ff1f4098288 <line:16:8> col:8 implicit constexpr D2 'void (struct D2 &&)' inline default noexcept-unevaluated 0x7ff1f4098288
| `-ParmVarDecl 0x7ff1f40983b0 <col:8> col:8 'struct D2 &&'
|-CXXMethodDecl 0x7ff1f4098478 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(const struct D2 &)' inline default noexcept-unevaluated 0x7ff1f4098478
| `-ParmVarDecl 0x7ff1f4098590 <col:8> col:8 'const struct D2 &'
|-CXXMethodDecl 0x7ff1f4098600 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(struct D2 &&)' inline default noexcept-unevaluated 0x7ff1f4098600
| `-ParmVarDecl 0x7ff1f4098720 <col:8> col:8 'struct D2 &&'
|-CXXDestructorDecl 0x7ff1f40987a8 <col:8> col:8 implicit ~D2 'void (void) noexcept' inline default
|-CXXConstructorDecl 0x7ff1f409d000 <col:8> col:8 implicit used constexpr D2 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B2'
| | `-CXXConstructExpr 0x7ff1f409d278 <col:8> 'struct B2' 'void (void) noexcept'
| `-CompoundStmt 0x7ff1f409d2e8 <col:8>
`-CXXConstructorDecl 0x7ff1f409d0e8 <col:8> col:8 implicit constexpr D2 'void (const struct D2 &)' inline default noexcept-unevaluated 0x7ff1f409d0e8
  `-ParmVarDecl 0x7ff1f409d210 <col:8> col:8 'const struct D2 &'

Layout: <CGRecordLayout
  LLVMType:%struct.D2 = type { %struct.B2 }
  NonVirtualBaseLLVMType:%struct.D2 = type { %struct.B2 }
  IsZeroInitializable:1
  BitFields:[
]>
