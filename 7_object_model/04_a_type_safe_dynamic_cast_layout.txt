
*** Dumping AST Record Layout
         0 | struct V
         0 |   (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct A
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D
         0 |   struct A (primary base)
         8 |   struct B (base)
         0 |   struct V (virtual base)
         0 |     (V vtable pointer)
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B2
         0 |   (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D2
         0 |   struct B2 (primary base)
         0 |     (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f9caa867258 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:2:1, line:4:1> line:2:8 referenced struct V definition
|-CXXRecordDecl 0x7f9caa867378 <col:1, col:8> col:8 implicit struct V
|-CXXMethodDecl 0x7f9caa867490 <line:3:5, col:23> col:18 m 'void (void)' virtual
| `-CompoundStmt 0x7f9caa8679b8 <col:22, col:23>
|-CXXMethodDecl 0x7f9caa867588 <line:2:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(const struct V &)' inline default noexcept-unevaluated 0x7f9caa867588
| `-ParmVarDecl 0x7f9caa8676a0 <col:8> col:8 'const struct V &'
|-CXXMethodDecl 0x7f9caa867738 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(struct V &&)' inline default noexcept-unevaluated 0x7f9caa867738
| `-ParmVarDecl 0x7f9caa867850 <col:8> col:8 'struct V &&'
|-CXXDestructorDecl 0x7f9caa8678d8 <col:8> col:8 implicit ~V 'void (void)' inline default trivial noexcept-unevaluated 0x7f9caa8678d8
|-CXXConstructorDecl 0x7f9caa8958c8 <col:8> col:8 implicit used constexpr V 'void (void) noexcept' inline default
| `-CompoundStmt 0x7f9caa896758 <col:8>
|-CXXConstructorDecl 0x7f9caa895dc8 <col:8> col:8 implicit constexpr V 'void (const struct V &)' inline default noexcept-unevaluated 0x7f9caa895dc8
| `-ParmVarDecl 0x7f9caa895ef0 <col:8> col:8 'const struct V &'
`-CXXConstructorDecl 0x7f9caa895f58 <col:8> col:8 implicit constexpr V 'void (struct V &&)' inline default noexcept-unevaluated 0x7f9caa895f58
  `-ParmVarDecl 0x7f9caa896080 <col:8> col:8 'struct V &&'

Layout: <CGRecordLayout
  LLVMType:%struct.V = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.V = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f9caa8679d0 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:6:1, col:23> col:8 referenced struct A definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7f9caa867b50 <col:1, col:8> col:8 implicit struct A
|-CXXMethodDecl 0x7f9caa867c48 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(const struct A &)' inline default noexcept-unevaluated 0x7f9caa867c48
| `-ParmVarDecl 0x7f9caa867d60 <col:8> col:8 'const struct A &'
|-CXXMethodDecl 0x7f9caa867df8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(struct A &&)' inline default noexcept-unevaluated 0x7f9caa867df8
| `-ParmVarDecl 0x7f9caa867f10 <col:8> col:8 'struct A &&'
|-CXXDestructorDecl 0x7f9caa867f98 <col:8> col:8 implicit ~A 'void (void)' inline default trivial noexcept-unevaluated 0x7f9caa867f98
|-CXXConstructorDecl 0x7f9caa8957c8 <col:8> col:8 implicit used A 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7f9caa8967d8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7f9caa896848 <col:8>
|-CXXConstructorDecl 0x7f9caa895c38 <col:8> col:8 implicit A 'void (const struct A &)' inline default noexcept-unevaluated 0x7f9caa895c38
| `-ParmVarDecl 0x7f9caa895d60 <col:8> col:8 'const struct A &'
`-CXXConstructorDecl 0x7f9caa8960e8 <col:8> col:8 implicit A 'void (struct A &&)' inline default noexcept-unevaluated 0x7f9caa8960e8
  `-ParmVarDecl 0x7f9caa896240 <col:8> col:8 'struct A &&'

Layout: <CGRecordLayout
  LLVMType:%struct.A = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.A = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f9caa868078 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:8:1, col:23> col:8 referenced struct B definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7f9caa892600 <col:1, col:8> col:8 implicit struct B
|-CXXMethodDecl 0x7f9caa8926f8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(const struct B &)' inline default noexcept-unevaluated 0x7f9caa8926f8
| `-ParmVarDecl 0x7f9caa892810 <col:8> col:8 'const struct B &'
|-CXXMethodDecl 0x7f9caa8928a8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(struct B &&)' inline default noexcept-unevaluated 0x7f9caa8928a8
| `-ParmVarDecl 0x7f9caa8929c0 <col:8> col:8 'struct B &&'
|-CXXDestructorDecl 0x7f9caa892a48 <col:8> col:8 implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7f9caa892a48
|-CXXConstructorDecl 0x7f9caa8959c8 <col:8> col:8 implicit used B 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7f9caa8968c8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7f9caa896938 <col:8>
|-CXXConstructorDecl 0x7f9caa8962a8 <col:8> col:8 implicit B 'void (const struct B &)' inline default noexcept-unevaluated 0x7f9caa8962a8
| `-ParmVarDecl 0x7f9caa8963d0 <col:8> col:8 'const struct B &'
`-CXXConstructorDecl 0x7f9caa896438 <col:8> col:8 implicit B 'void (struct B &&)' inline default noexcept-unevaluated 0x7f9caa896438
  `-ParmVarDecl 0x7f9caa896560 <col:8> col:8 'struct B &&'

Layout: <CGRecordLayout
  LLVMType:%struct.B = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.B = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f9caa892b28 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:10:1, col:18> col:8 referenced struct D definition
|-public 'struct A'
|-public 'struct B'
|-CXXRecordDecl 0x7f9caa892ce0 <col:1, col:8> col:8 implicit struct D
|-CXXMethodDecl 0x7f9caa892dd8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(const struct D &)' inline default noexcept-unevaluated 0x7f9caa892dd8
| `-ParmVarDecl 0x7f9caa892ef0 <col:8> col:8 'const struct D &'
|-CXXMethodDecl 0x7f9caa892f88 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(struct D &&)' inline default noexcept-unevaluated 0x7f9caa892f88
| `-ParmVarDecl 0x7f9caa8930a0 <col:8> col:8 'struct D &&'
|-CXXDestructorDecl 0x7f9caa893128 <col:8> col:8 implicit ~D 'void (void)' inline default trivial noexcept-unevaluated 0x7f9caa893128
|-CXXConstructorDecl 0x7f9caa8956c8 <col:8> col:8 implicit used D 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7f9caa896770 <col:8> 'struct V' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct A'
| | `-CXXConstructExpr 0x7f9caa896860 <col:8> 'struct A' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7f9caa896950 <col:8> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7f9caa8969d0 <col:8>
|-CXXConstructorDecl 0x7f9caa895aa8 <col:8> col:8 implicit D 'void (const struct D &)' inline default noexcept-unevaluated 0x7f9caa895aa8
| `-ParmVarDecl 0x7f9caa895bd0 <col:8> col:8 'const struct D &'
`-CXXConstructorDecl 0x7f9caa8965c8 <col:8> col:8 implicit D 'void (struct D &&)' inline default noexcept-unevaluated 0x7f9caa8965c8
  `-ParmVarDecl 0x7f9caa8966f0 <col:8> col:8 'struct D &&'

Layout: <CGRecordLayout
  LLVMType:%struct.D = type { %struct.A, %struct.B }
  NonVirtualBaseLLVMType:%struct.D = type { %struct.A, %struct.B }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f9caa893208 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:12:1, line:14:1> line:12:8 referenced struct B2 definition
|-CXXRecordDecl 0x7f9caa893328 <col:1, col:8> col:8 implicit referenced struct B2
|-CXXDestructorDecl 0x7f9caa893438 <line:13:5, col:20> col:13 used ~B2 'void (void) noexcept' virtual
| `-CompoundStmt 0x7f9caa8943c0 <col:19, col:20>
|-CXXMethodDecl 0x7f9caa894200 <line:12:8, <invalid sloc>> col:8 implicit operator= 'struct B2 &(const struct B2 &)' inline default noexcept-unevaluated 0x7f9caa894200
| `-ParmVarDecl 0x7f9caa894320 <col:8> col:8 'const struct B2 &'
|-CXXConstructorDecl 0x7f9caa894cd8 <col:8> col:8 implicit constexpr B2 'void (const struct B2 &)' inline default noexcept-unevaluated 0x7f9caa894cd8
| `-ParmVarDecl 0x7f9caa894e00 <col:8> col:8 'const struct B2 &'
`-CXXConstructorDecl 0x7f9cab000000 <col:8> col:8 implicit used constexpr B2 'void (void) noexcept' inline default
  `-CompoundStmt 0x7f9cab0000e8 <col:8>

Layout: <CGRecordLayout
  LLVMType:%struct.B2 = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.B2 = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f9caa8949b8 <object_model_refined/7_object_model/04_a_type_safe_dynamic_cast.cpp:16:1, line:18:1> line:16:8 referenced struct D2 definition
|-public 'struct B2'
|-CXXRecordDecl 0x7f9caa894b18 <col:1, col:8> col:8 implicit struct D2
|-CXXMethodDecl 0x7f9caa894bf8 <line:17:5, col:23> col:18 used m 'void (void)' virtual
| `-CompoundStmt 0x7f9caa895488 <col:22, col:23>
|-CXXConstructorDecl 0x7f9caa894e88 <line:16:8> col:8 implicit constexpr D2 'void (struct D2 &&)' inline default noexcept-unevaluated 0x7f9caa894e88
| `-ParmVarDecl 0x7f9caa894fb0 <col:8> col:8 'struct D2 &&'
|-CXXMethodDecl 0x7f9caa895078 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(const struct D2 &)' inline default noexcept-unevaluated 0x7f9caa895078
| `-ParmVarDecl 0x7f9caa895190 <col:8> col:8 'const struct D2 &'
|-CXXMethodDecl 0x7f9caa895200 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(struct D2 &&)' inline default noexcept-unevaluated 0x7f9caa895200
| `-ParmVarDecl 0x7f9caa895320 <col:8> col:8 'struct D2 &&'
|-CXXDestructorDecl 0x7f9caa8953a8 <col:8> col:8 implicit ~D2 'void (void) noexcept' inline default
|-CXXConstructorDecl 0x7f9cab000610 <col:8> col:8 implicit used constexpr D2 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B2'
| | `-CXXConstructExpr 0x7f9cab000888 <col:8> 'struct B2' 'void (void) noexcept'
| `-CompoundStmt 0x7f9cab0008f8 <col:8>
`-CXXConstructorDecl 0x7f9cab0006f8 <col:8> col:8 implicit constexpr D2 'void (const struct D2 &)' inline default noexcept-unevaluated 0x7f9cab0006f8
  `-ParmVarDecl 0x7f9cab000820 <col:8> col:8 'const struct D2 &'

Layout: <CGRecordLayout
  LLVMType:%struct.D2 = type { %struct.B2 }
  NonVirtualBaseLLVMType:%struct.D2 = type { %struct.B2 }
  IsZeroInitializable:1
  BitFields:[
]>
