
*** Dumping AST Record Layout
         0 | struct V
         0 |   (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct A
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B
         0 |   struct V (primary virtual base)
         0 |     (V vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D
         0 |   struct A (primary base)
         8 |   struct B (base)
         0 |   struct V (virtual base)
         0 |     (V vtable pointer)
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct B2
         0 |   (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct D2
         0 |   struct B2 (primary base)
         0 |     (B2 vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f822c027858 <object_model/7_object_model/04_a_type_safe_dynamic_cast.cpp:2:1, line:4:1> line:2:8 referenced struct V definition
|-CXXRecordDecl 0x7f822c027978 <col:1, col:8> col:8 implicit struct V
|-CXXMethodDecl 0x7f822c027a90 <line:3:5, col:23> col:18 m 'void (void)' virtual
| `-CompoundStmt 0x7f822c027fb8 <col:22, col:23>
|-CXXMethodDecl 0x7f822c027b88 <line:2:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(const struct V &)' inline default noexcept-unevaluated 0x7f822c027b88
| `-ParmVarDecl 0x7f822c027ca0 <col:8> col:8 'const struct V &'
|-CXXMethodDecl 0x7f822c027d38 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct V &(struct V &&)' inline default noexcept-unevaluated 0x7f822c027d38
| `-ParmVarDecl 0x7f822c027e50 <col:8> col:8 'struct V &&'
|-CXXDestructorDecl 0x7f822c027ed8 <col:8> col:8 implicit ~V 'void (void)' inline default trivial noexcept-unevaluated 0x7f822c027ed8
|-CXXConstructorDecl 0x7f822c05c2c8 <col:8> col:8 implicit used constexpr V 'void (void) noexcept' inline default
| `-CompoundStmt 0x7f822c05d158 <col:8>
|-CXXConstructorDecl 0x7f822c05c7c8 <col:8> col:8 implicit constexpr V 'void (const struct V &)' inline default noexcept-unevaluated 0x7f822c05c7c8
| `-ParmVarDecl 0x7f822c05c8f0 <col:8> col:8 'const struct V &'
`-CXXConstructorDecl 0x7f822c05c958 <col:8> col:8 implicit constexpr V 'void (struct V &&)' inline default noexcept-unevaluated 0x7f822c05c958
  `-ParmVarDecl 0x7f822c05ca80 <col:8> col:8 'struct V &&'

Layout: <CGRecordLayout
  LLVMType:%struct.V = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.V = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f822c027fd0 <object_model/7_object_model/04_a_type_safe_dynamic_cast.cpp:6:1, col:23> col:8 referenced struct A definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7f822c028150 <col:1, col:8> col:8 implicit struct A
|-CXXMethodDecl 0x7f822c028248 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(const struct A &)' inline default noexcept-unevaluated 0x7f822c028248
| `-ParmVarDecl 0x7f822c028360 <col:8> col:8 'const struct A &'
|-CXXMethodDecl 0x7f822c0283f8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct A &(struct A &&)' inline default noexcept-unevaluated 0x7f822c0283f8
| `-ParmVarDecl 0x7f822c028510 <col:8> col:8 'struct A &&'
|-CXXDestructorDecl 0x7f822c028598 <col:8> col:8 implicit ~A 'void (void)' inline default trivial noexcept-unevaluated 0x7f822c028598
|-CXXConstructorDecl 0x7f822c05c1c8 <col:8> col:8 implicit used A 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7f822c05d1d8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7f822c05d248 <col:8>
|-CXXConstructorDecl 0x7f822c05c638 <col:8> col:8 implicit A 'void (const struct A &)' inline default noexcept-unevaluated 0x7f822c05c638
| `-ParmVarDecl 0x7f822c05c760 <col:8> col:8 'const struct A &'
`-CXXConstructorDecl 0x7f822c05cae8 <col:8> col:8 implicit A 'void (struct A &&)' inline default noexcept-unevaluated 0x7f822c05cae8
  `-ParmVarDecl 0x7f822c05cc40 <col:8> col:8 'struct A &&'

Layout: <CGRecordLayout
  LLVMType:%struct.A = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.A = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f822c028678 <object_model/7_object_model/04_a_type_safe_dynamic_cast.cpp:8:1, col:23> col:8 referenced struct B definition
|-virtual public 'struct V'
|-CXXRecordDecl 0x7f822c059000 <col:1, col:8> col:8 implicit struct B
|-CXXMethodDecl 0x7f822c0590f8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(const struct B &)' inline default noexcept-unevaluated 0x7f822c0590f8
| `-ParmVarDecl 0x7f822c059210 <col:8> col:8 'const struct B &'
|-CXXMethodDecl 0x7f822c0592a8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct B &(struct B &&)' inline default noexcept-unevaluated 0x7f822c0592a8
| `-ParmVarDecl 0x7f822c0593c0 <col:8> col:8 'struct B &&'
|-CXXDestructorDecl 0x7f822c059448 <col:8> col:8 implicit ~B 'void (void)' inline default trivial noexcept-unevaluated 0x7f822c059448
|-CXXConstructorDecl 0x7f822c05c3c8 <col:8> col:8 implicit used B 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7f822c05d2c8 <col:8> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7f822c05d338 <col:8>
|-CXXConstructorDecl 0x7f822c05cca8 <col:8> col:8 implicit B 'void (const struct B &)' inline default noexcept-unevaluated 0x7f822c05cca8
| `-ParmVarDecl 0x7f822c05cdd0 <col:8> col:8 'const struct B &'
`-CXXConstructorDecl 0x7f822c05ce38 <col:8> col:8 implicit B 'void (struct B &&)' inline default noexcept-unevaluated 0x7f822c05ce38
  `-ParmVarDecl 0x7f822c05cf60 <col:8> col:8 'struct B &&'

Layout: <CGRecordLayout
  LLVMType:%struct.B = type { %struct.V }
  NonVirtualBaseLLVMType:%struct.B = type { %struct.V }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f822c059528 <object_model/7_object_model/04_a_type_safe_dynamic_cast.cpp:10:1, col:18> col:8 referenced struct D definition
|-public 'struct A'
|-public 'struct B'
|-CXXRecordDecl 0x7f822c0596e0 <col:1, col:8> col:8 implicit struct D
|-CXXMethodDecl 0x7f822c0597d8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(const struct D &)' inline default noexcept-unevaluated 0x7f822c0597d8
| `-ParmVarDecl 0x7f822c0598f0 <col:8> col:8 'const struct D &'
|-CXXMethodDecl 0x7f822c059988 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D &(struct D &&)' inline default noexcept-unevaluated 0x7f822c059988
| `-ParmVarDecl 0x7f822c059aa0 <col:8> col:8 'struct D &&'
|-CXXDestructorDecl 0x7f822c059b28 <col:8> col:8 implicit ~D 'void (void)' inline default trivial noexcept-unevaluated 0x7f822c059b28
|-CXXConstructorDecl 0x7f822c05c0c8 <col:8> col:8 implicit used D 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7f822c05d170 <col:8> 'struct V' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct A'
| | `-CXXConstructExpr 0x7f822c05d260 <col:8> 'struct A' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct B'
| | `-CXXConstructExpr 0x7f822c05d350 <col:8> 'struct B' 'void (void) noexcept'
| `-CompoundStmt 0x7f822c05d3d0 <col:8>
|-CXXConstructorDecl 0x7f822c05c4a8 <col:8> col:8 implicit D 'void (const struct D &)' inline default noexcept-unevaluated 0x7f822c05c4a8
| `-ParmVarDecl 0x7f822c05c5d0 <col:8> col:8 'const struct D &'
`-CXXConstructorDecl 0x7f822c05cfc8 <col:8> col:8 implicit D 'void (struct D &&)' inline default noexcept-unevaluated 0x7f822c05cfc8
  `-ParmVarDecl 0x7f822c05d0f0 <col:8> col:8 'struct D &&'

Layout: <CGRecordLayout
  LLVMType:%struct.D = type { %struct.A, %struct.B }
  NonVirtualBaseLLVMType:%struct.D = type { %struct.A, %struct.B }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f822c059c08 <object_model/7_object_model/04_a_type_safe_dynamic_cast.cpp:12:1, line:14:1> line:12:8 referenced struct B2 definition
|-CXXRecordDecl 0x7f822c059d28 <col:1, col:8> col:8 implicit referenced struct B2
|-CXXDestructorDecl 0x7f822c059e38 <line:13:5, col:20> col:13 used ~B2 'void (void) noexcept' virtual
| `-CompoundStmt 0x7f822c05adc0 <col:19, col:20>
|-CXXMethodDecl 0x7f822c05ac00 <line:12:8, <invalid sloc>> col:8 implicit operator= 'struct B2 &(const struct B2 &)' inline default noexcept-unevaluated 0x7f822c05ac00
| `-ParmVarDecl 0x7f822c05ad20 <col:8> col:8 'const struct B2 &'
|-CXXConstructorDecl 0x7f822c05b6d8 <col:8> col:8 implicit constexpr B2 'void (const struct B2 &)' inline default noexcept-unevaluated 0x7f822c05b6d8
| `-ParmVarDecl 0x7f822c05b800 <col:8> col:8 'const struct B2 &'
`-CXXConstructorDecl 0x7f822c05fa00 <col:8> col:8 implicit used constexpr B2 'void (void) noexcept' inline default
  `-CompoundStmt 0x7f822c05fae8 <col:8>

Layout: <CGRecordLayout
  LLVMType:%struct.B2 = type { i32 (...)** }
  NonVirtualBaseLLVMType:%struct.B2 = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f822c05b3b8 <object_model/7_object_model/04_a_type_safe_dynamic_cast.cpp:16:1, line:18:1> line:16:8 referenced struct D2 definition
|-public 'struct B2'
|-CXXRecordDecl 0x7f822c05b518 <col:1, col:8> col:8 implicit struct D2
|-CXXMethodDecl 0x7f822c05b5f8 <line:17:5, col:23> col:18 used m 'void (void)' virtual
| `-CompoundStmt 0x7f822c05be88 <col:22, col:23>
|-CXXConstructorDecl 0x7f822c05b888 <line:16:8> col:8 implicit constexpr D2 'void (struct D2 &&)' inline default noexcept-unevaluated 0x7f822c05b888
| `-ParmVarDecl 0x7f822c05b9b0 <col:8> col:8 'struct D2 &&'
|-CXXMethodDecl 0x7f822c05ba78 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(const struct D2 &)' inline default noexcept-unevaluated 0x7f822c05ba78
| `-ParmVarDecl 0x7f822c05bb90 <col:8> col:8 'const struct D2 &'
|-CXXMethodDecl 0x7f822c05bc00 <col:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(struct D2 &&)' inline default noexcept-unevaluated 0x7f822c05bc00
| `-ParmVarDecl 0x7f822c05bd20 <col:8> col:8 'struct D2 &&'
|-CXXDestructorDecl 0x7f822c05bda8 <col:8> col:8 implicit ~D2 'void (void) noexcept' inline default
|-CXXConstructorDecl 0x7f822c060010 <col:8> col:8 implicit used constexpr D2 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct B2'
| | `-CXXConstructExpr 0x7f822c060288 <col:8> 'struct B2' 'void (void) noexcept'
| `-CompoundStmt 0x7f822c0602f8 <col:8>
`-CXXConstructorDecl 0x7f822c0600f8 <col:8> col:8 implicit constexpr D2 'void (const struct D2 &)' inline default noexcept-unevaluated 0x7f822c0600f8
  `-ParmVarDecl 0x7f822c060220 <col:8> col:8 'const struct D2 &'

Layout: <CGRecordLayout
  LLVMType:%struct.D2 = type { %struct.B2 }
  NonVirtualBaseLLVMType:%struct.D2 = type { %struct.B2 }
  IsZeroInitializable:1
  BitFields:[
]>
