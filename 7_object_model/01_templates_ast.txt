TranslationUnitDecl 0x7f9c850326d0
|-TypedefDecl implicit referenced __int128_t '__int128'
| `-BuiltinType '__int128'
|-TypedefDecl implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 'unsigned __int128'
|-TypedefDecl implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 'struct __NSConstantString_tag'
|   `-CXXRecord '__NSConstantString_tag'
|-TypedefDecl implicit __builtin_ms_va_list 'char *'
| `-PointerType 'char *'
|   `-BuiltinType 'char'
|-TypedefDecl implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 'struct __va_list_tag [1]' 1
|   `-RecordType 'struct __va_list_tag'
|     `-CXXRecord '__va_list_tag'
|-NamespaceDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, > std
| `-NamespaceDecl <scratch space>:25:1 __1 inline
|-TypedefDecl </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, > ptrdiff_t 'long'
| `-BuiltinType 'long'
|-TypedefDecl referenced size_t 'unsigned long'
| `-BuiltinType 'unsigned long'
|-TypedefDecl </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, > max_align_t 'long double'
| `-BuiltinType 'long double'
|-NamespaceDecl prev 0x7f9c85066258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, > std
| |-original Namespace 0x7f9c85066258 'std'
| `-TypedefDecl referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
|   `-DecltypeType 'decltype(nullptr)' sugar
|     |-CXXNullPtrLiteralExpr 'nullptr_t'
|     `-BuiltinType 'nullptr_t'
|-NamespaceDecl prev 0x7f9c85066478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, > std
| |-original Namespace 0x7f9c85066258 'std'
| `-NamespaceDecl prev 0x7f9c850662c0 <scratch space>:53:1 __1 inline
|   |-original Namespace 0x7f9c850662c0 '__1'
|   |-UsingDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, > ::ptrdiff_t
|   |-UsingShadowDecl implicit Typedef 0x7f9c85066340 'ptrdiff_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::size_t
|   |-UsingShadowDecl implicit Typedef 0x7f9c850663b0 'size_t'
|   | `-TypedefType 'size_t' sugar
|   |   |-Typedef 'size_t'
|   |   `-BuiltinType 'unsigned long'
|   |-UsingDecl ::max_align_t
|   `-UsingShadowDecl implicit Typedef 0x7f9c85066420 'max_align_t'
|     `-<<<NULL>>>
|-NamespaceDecl prev 0x7f9c85066590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, > std
| |-original Namespace 0x7f9c85066258 'std'
| `-NamespaceDecl prev 0x7f9c850665f8 <scratch space>:54:1 __1 inline
|   |-original Namespace 0x7f9c850662c0 '__1'
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, > pair
|   | |-TemplateTypeParmDecl class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl class depth 0 index 1 _T2
|   | `-CXXRecordDecl struct pair
|   |   `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, > reference_wrapper
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl class reference_wrapper
|   |   `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, > hash
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct hash
|   |   `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, > __void_t
|   | |-TemplateTypeParmDecl class depth 0 index 0
|   | `-CXXRecordDecl struct __void_t definition
|   |   |-CXXRecordDecl implicit struct __void_t
|   |   `-TypedefDecl type 'void'
|   |     `-BuiltinType 'void'
|   |-ClassTemplateDecl __identity
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __identity definition
|   |   |-CXXRecordDecl implicit struct __identity
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl __dependent_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | `-CXXRecordDecl struct __dependent_type definition
|   |   |-public '_Tp'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, > implicit struct __dependent_type
|   |-ClassTemplateDecl conditional
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _If
|   | |-TemplateTypeParmDecl class depth 0 index 2 _Then
|   | `-CXXRecordDecl struct conditional definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, > implicit struct conditional
|   |   `-TypedefDecl type '_If'
|   |     `-TemplateTypeParmType '_If' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_If'
|   |-ClassTemplatePartialSpecializationDecl struct conditional definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _If
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Then
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, > implicit struct conditional
|   | `-TypedefDecl type '_Then'
|   |   `-TemplateTypeParmType '_Then' dependent depth 0 index 1
|   |     `-TemplateTypeParm '_Then'
|   |-TypeAliasTemplateDecl conditional_t
|   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _If
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _Then
|   | `-TypeAliasDecl conditional_t 'typename conditional<_Bp, _If, _Then>::type'
|   |   `-DependentNameType 'typename conditional<_Bp, _If, _Then>::type' dependent
|   |-ClassTemplateDecl __lazy_enable_if
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | `-CXXRecordDecl struct __lazy_enable_if definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, > implicit struct __lazy_enable_if
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_enable_if definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, > implicit struct __lazy_enable_if
|   | `-TypedefDecl type 'typename _Tp::type'
|   |   `-DependentNameType 'typename _Tp::type' dependent
|   |-ClassTemplateDecl enable_if
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl struct enable_if definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, > implicit struct enable_if
|   |-ClassTemplatePartialSpecializationDecl struct enable_if definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, > implicit struct enable_if
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl enable_if_t
|   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | | `-TemplateArgument type 'void'
|   | `-TypeAliasDecl enable_if_t 'typename enable_if<_Bp, _Tp>::type'
|   |   `-DependentNameType 'typename enable_if<_Bp, _Tp>::type' dependent
|   |-FunctionTemplateDecl addressof
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl addressof '_Tp *(_Tp &) noexcept' inline
|   |   |-ParmVarDecl referenced __x '_Tp &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-DeclRefExpr '<builtin fn type>' Function 0x7f9c850acd58 '__builtin_addressof' 'void *(void &) noexcept'
|   |   |     `-DeclRefExpr '_Tp' lvalue ParmVar 0x7f9c850ac968 '__x' '_Tp &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-VisibilityAttr Hidden
|   |   `-NoSanitizeAttr cfi
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, > addressof
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl addressof '_Tp *(const _Tp &&) noexcept' delete
|   |   `-ParmVarDecl 'const _Tp &&'
|   |-CXXRecordDecl referenced struct __two definition
|   | |-CXXRecordDecl implicit struct __two
|   | `-FieldDecl __lx 'char [2]'
|   |-ClassTemplateDecl integral_constant
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced '_Tp' depth 0 index 1 __v
|   | |-CXXRecordDecl struct integral_constant definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, > implicit referenced struct integral_constant
|   | | |-VarDecl referenced value 'const _Tp' static constexpr cinit
|   | | | `-DeclRefExpr '_Tp' NonTypeTemplateParm 0x7f9c850ade00 '__v' '_Tp'
|   | | |-TypedefDecl referenced value_type '_Tp'
|   | | | `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm '_Tp'
|   | | |-TypedefDecl type 'integral_constant<_Tp, __v>'
|   | | | `-InjectedClassNameType 'integral_constant<_Tp, __v>' dependent
|   | | |   `-CXXRecord 'integral_constant'
|   | | |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
|   | | | |-CompoundStmt
|   | | | | `-ReturnStmt
|   | | | |   `-DeclRefExpr 'const _Tp' lvalue Var 0x7f9c850ae2f0 'value' 'const _Tp'
|   | | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr Hidden
|   | | `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-DeclRefExpr 'const _Tp' lvalue Var 0x7f9c850ae2f0 'value' 'const _Tp'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, > struct integral_constant definition
|   | | |-TemplateArgument type '_Bool'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl prev 0x7f9c850aee00 implicit struct integral_constant
|   | | |-VarDecl referenced value 'const _Bool':'const _Bool' static constexpr cinit
|   | | | `-SubstNonTypeTemplateParmExpr '_Bool'
|   | | |   `-CXXBoolLiteralExpr '_Bool' true
|   | | |-TypedefDecl value_type '_Bool':'_Bool'
|   | | | `-SubstTemplateTypeParmType '_Bool' sugar
|   | | |   |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Tp'
|   | | |   `-BuiltinType '_Bool'
|   | | |-TypedefDecl type 'struct std::__1::integral_constant<_Bool, true>'
|   | | | `-RecordType 'struct std::__1::integral_constant<_Bool, true>'
|   | | |   `-ClassTemplateSpecialization 'integral_constant'
|   | | |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
|   | | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, > struct integral_constant definition
|   | | |-TemplateArgument type '_Bool'
|   | | |-TemplateArgument integral 0
|   | | |-CXXRecordDecl prev 0x7f9c850af0d0 implicit struct integral_constant
|   | | |-VarDecl referenced value 'const _Bool':'const _Bool' static constexpr cinit
|   | | | `-SubstNonTypeTemplateParmExpr '_Bool'
|   | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | |-TypedefDecl value_type '_Bool':'_Bool'
|   | | | `-SubstTemplateTypeParmType '_Bool' sugar
|   | | |   |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Tp'
|   | | |   `-BuiltinType '_Bool'
|   | | |-TypedefDecl type 'struct std::__1::integral_constant<_Bool, false>'
|   | | | `-RecordType 'struct std::__1::integral_constant<_Bool, false>'
|   | | |   `-ClassTemplateSpecialization 'integral_constant'
|   | | |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
|   | | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, > struct integral_constant definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 0
|   |   |-CXXRecordDecl prev 0x7f9c85809ca0 implicit struct integral_constant
|   |   |-VarDecl value 'const unsigned long':'const unsigned long' static constexpr cinit
|   |   | `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |   |   `-IntegerLiteral 'unsigned long' 0
|   |   |-TypedefDecl value_type 'unsigned long':'unsigned long'
|   |   | `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |   |   |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm '_Tp'
|   |   |   `-BuiltinType 'unsigned long'
|   |   |-TypedefDecl type 'struct std::__1::integral_constant<unsigned long, 0>'
|   |   | `-RecordType 'struct std::__1::integral_constant<unsigned long, 0>'
|   |   |   `-ClassTemplateSpecialization 'integral_constant'
|   |   |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
|   |   | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
|   |     `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-VarDecl parent 0x7f9c850adea8 prev 0x7f9c850ae2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, > value 'const _Tp' constexpr
|   |-TypedefDecl referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
|   | `-TemplateSpecializationType 'integral_constant<_Bool, (true)>' sugar integral_constant
|   |   |-TemplateArgument type '_Bool'
|   |   |-TemplateArgument expr
|   |   | `-ParenExpr '_Bool'
|   |   |   `-CXXBoolLiteralExpr '_Bool' true
|   |   `-RecordType 'struct std::__1::integral_constant<_Bool, true>'
|   |     `-ClassTemplateSpecialization 'integral_constant'
|   |-TypedefDecl referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
|   | `-TemplateSpecializationType 'integral_constant<_Bool, (false)>' sugar integral_constant
|   |   |-TemplateArgument type '_Bool'
|   |   |-TemplateArgument expr
|   |   | `-ParenExpr '_Bool'
|   |   |   `-CXXBoolLiteralExpr '_Bool' false
|   |   `-RecordType 'struct std::__1::integral_constant<_Bool, false>'
|   |     `-ClassTemplateSpecialization 'integral_constant'
|   |-ClassTemplateDecl __lazy_and_impl
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _Last
|   | |-TemplateTypeParmDecl class depth 0 index 1 ... _Preds
|   | |-CXXRecordDecl struct __lazy_and_impl
|   | `-ClassTemplateSpecialization '__lazy_and_impl'
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_and_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Preds
|   | `-CXXRecordDecl implicit struct __lazy_and_impl
|   |-ClassTemplateSpecializationDecl struct __lazy_and_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __lazy_and_impl
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_and_impl definition
|   | |-public 'integral_constant<_Bool, _Pred::type::value>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Pred
|   | `-CXXRecordDecl implicit struct __lazy_and_impl
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_and_impl definition
|   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-CXXRecordDecl implicit struct __lazy_and_impl
|   |-ClassTemplateDecl __lazy_and
|   | |-TemplateTypeParmDecl class depth 0 index 0 _P1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Pr
|   | `-CXXRecordDecl struct __lazy_and definition
|   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
|   |   `-CXXRecordDecl implicit struct __lazy_and
|   |-ClassTemplateDecl __lazy_or_impl
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _List
|   | |-TemplateTypeParmDecl class depth 0 index 1 ... _Preds
|   | |-CXXRecordDecl struct __lazy_or_impl
|   | `-ClassTemplateSpecialization '__lazy_or_impl'
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_or_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Preds
|   | `-CXXRecordDecl implicit struct __lazy_or_impl
|   |-ClassTemplateSpecializationDecl struct __lazy_or_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __lazy_or_impl
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_or_impl definition
|   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-CXXRecordDecl implicit struct __lazy_or_impl
|   |-ClassTemplateDecl __lazy_or
|   | |-TemplateTypeParmDecl class depth 0 index 0 _P1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Pr
|   | `-CXXRecordDecl struct __lazy_or definition
|   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
|   |   `-CXXRecordDecl implicit struct __lazy_or
|   |-ClassTemplateDecl __lazy_not
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Pred
|   | `-CXXRecordDecl struct __lazy_not definition
|   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
|   |   `-CXXRecordDecl implicit struct __lazy_not
|   |-ClassTemplateDecl __and_
|   | |-TemplateTypeParmDecl class depth 0 index 0 ...
|   | |-CXXRecordDecl struct __and_
|   | `-ClassTemplateSpecialization '__and_'
|   |-ClassTemplateSpecializationDecl struct __and_ definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl struct __and_ definition
|   | |-public '_B0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | `-CXXRecordDecl implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl struct __and_ definition
|   | |-public 'conditional<_B0::value, _B1, _B0>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _B1
|   | `-CXXRecordDecl implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl struct __and_ definition
|   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument type 'type-parameter-0-2'
|   | | `-TemplateArgument type 'type-parameter-0-3...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _B1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _B2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 ... _Bn
|   | `-CXXRecordDecl implicit struct __and_
|   |-ClassTemplateDecl __or_
|   | |-TemplateTypeParmDecl class depth 0 index 0 ...
|   | |-CXXRecordDecl struct __or_
|   | `-ClassTemplateSpecialization '__or_'
|   |-ClassTemplateSpecializationDecl struct __or_ definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl struct __or_ definition
|   | |-public '_B0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | `-CXXRecordDecl implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl struct __or_ definition
|   | |-public 'conditional<_B0::value, _B0, _B1>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _B1
|   | `-CXXRecordDecl implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl struct __or_ definition
|   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument type 'type-parameter-0-2'
|   | | `-TemplateArgument type 'type-parameter-0-3...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _B1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _B2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 ... _Bn
|   | `-CXXRecordDecl implicit struct __or_
|   |-ClassTemplateDecl __not_
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __not_ definition
|   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
|   |   `-CXXRecordDecl implicit struct __not_
|   |-ClassTemplateDecl is_const
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_const definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, > implicit struct is_const
|   |-ClassTemplatePartialSpecializationDecl struct is_const definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, > implicit struct is_const
|   |-ClassTemplateDecl is_volatile
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_volatile definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, > implicit struct is_volatile
|   |-ClassTemplatePartialSpecializationDecl struct is_volatile definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, > implicit struct is_volatile
|   |-ClassTemplateDecl remove_const
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_const definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, > implicit struct remove_const
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_const definition
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, > implicit struct remove_const
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_const_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_const_t 'typename remove_const<_Tp>::type'
|   |   `-DependentNameType 'typename remove_const<_Tp>::type' dependent
|   |-ClassTemplateDecl remove_volatile
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_volatile definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, > implicit struct remove_volatile
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_volatile definition
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, > implicit struct remove_volatile
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_volatile_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_volatile_t 'typename remove_volatile<_Tp>::type'
|   |   `-DependentNameType 'typename remove_volatile<_Tp>::type' dependent
|   |-ClassTemplateDecl remove_cv
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_cv definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, > implicit struct remove_cv
|   |   `-TypedefDecl type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
|   |     `-DependentNameType 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
|   |-TypeAliasTemplateDecl remove_cv_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_cv_t 'typename remove_cv<_Tp>::type'
|   |   `-DependentNameType 'typename remove_cv<_Tp>::type' dependent
|   |-ClassTemplateDecl __libcpp_is_void
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __libcpp_is_void
|   | `-ClassTemplateSpecialization '__libcpp_is_void'
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_void definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'void'
|   | `-CXXRecordDecl implicit struct __libcpp_is_void
|   |-ClassTemplateDecl is_void
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_void definition
|   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, > implicit struct is_void
|   |-ClassTemplateDecl __is_nullptr_t_impl
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __is_nullptr_t_impl definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __is_nullptr_t_impl
|   | `-ClassTemplateSpecialization '__is_nullptr_t_impl'
|   |-ClassTemplateSpecializationDecl struct __is_nullptr_t_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'nullptr_t'
|   | `-CXXRecordDecl implicit struct __is_nullptr_t_impl
|   |-ClassTemplateDecl __is_nullptr_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_nullptr_t definition
|   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, > implicit struct __is_nullptr_t
|   |-ClassTemplateDecl is_null_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_null_pointer definition
|   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, > implicit struct is_null_pointer
|   |-ClassTemplateDecl __libcpp_is_integral
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __libcpp_is_integral definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | `-ClassTemplateSpecialization '__libcpp_is_integral'
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type '_Bool'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'signed char'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned char'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'wchar_t'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char16_t'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char32_t'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'short'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned short'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'int'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned int'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned long'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long long'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned long long'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type '__int128'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned __int128'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateDecl is_integral
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_integral definition
|   |   |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, > implicit struct is_integral
|   |-ClassTemplateDecl __libcpp_is_floating_point
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __libcpp_is_floating_point definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __libcpp_is_floating_point
|   | |-ClassTemplateSpecialization '__libcpp_is_floating_point'
|   | |-ClassTemplateSpecialization '__libcpp_is_floating_point'
|   | `-ClassTemplateSpecialization '__libcpp_is_floating_point'
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'float'
|   | `-CXXRecordDecl implicit struct __libcpp_is_floating_point
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'double'
|   | `-CXXRecordDecl implicit struct __libcpp_is_floating_point
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long double'
|   | `-CXXRecordDecl implicit struct __libcpp_is_floating_point
|   |-ClassTemplateDecl is_floating_point
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_floating_point definition
|   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, > implicit struct is_floating_point
|   |-ClassTemplateDecl is_array
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_array definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, > implicit struct is_array
|   |-ClassTemplatePartialSpecializationDecl struct is_array definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, > implicit struct is_array
|   |-ClassTemplatePartialSpecializationDecl struct is_array definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, > implicit struct is_array
|   |-ClassTemplateDecl __libcpp_is_pointer
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_pointer
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_pointer definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_pointer
|   |-ClassTemplateDecl is_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_pointer definition
|   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, > implicit struct is_pointer
|   |-ClassTemplateDecl is_lvalue_reference
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_lvalue_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, > implicit struct is_lvalue_reference
|   |-ClassTemplatePartialSpecializationDecl struct is_lvalue_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, > implicit struct is_lvalue_reference
|   |-ClassTemplateDecl is_rvalue_reference
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_rvalue_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, > implicit struct is_rvalue_reference
|   |-ClassTemplatePartialSpecializationDecl struct is_rvalue_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, > implicit struct is_rvalue_reference
|   |-ClassTemplateDecl is_reference
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, > implicit struct is_reference
|   |-ClassTemplatePartialSpecializationDecl struct is_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, > implicit struct is_reference
|   |-ClassTemplatePartialSpecializationDecl struct is_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, > implicit struct is_reference
|   |-ClassTemplateDecl is_union
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_union definition
|   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, > implicit struct is_union
|   |-ClassTemplateDecl is_class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_class definition
|   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, > implicit struct is_class
|   |-ClassTemplateDecl is_same
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Up
|   | `-CXXRecordDecl struct is_same definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, > implicit struct is_same
|   |-ClassTemplatePartialSpecializationDecl struct is_same definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, > implicit struct is_same
|   |-NamespaceDecl __libcpp_is_function_imp
|   | |-CXXRecordDecl referenced struct __dummy_type definition
|   | | `-CXXRecordDecl implicit struct __dummy_type
|   | |-FunctionTemplateDecl __test
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl __test 'char (_Tp *)'
|   | |   `-ParmVarDecl '_Tp *'
|   | |-FunctionTemplateDecl __test
|   | | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | | `-FunctionDecl __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
|   | |   `-ParmVarDecl 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
|   | |-FunctionTemplateDecl __test
|   | | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | | `-FunctionDecl __test 'struct std::__1::__two (...)'
|   | |-FunctionTemplateDecl __source
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl __source '_Tp &(int)'
|   | |   `-ParmVarDecl 'int'
|   | `-FunctionTemplateDecl __source
|   |   |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   |   `-FunctionDecl __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
|   |-ClassTemplateDecl __libcpp_is_function
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-BinaryOperator '<dependent type>' '||'
|   | |     | |-BinaryOperator '<dependent type>' '||'
|   | |     | | |-BinaryOperator '<dependent type>' '||'
|   | |     | | | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_function definition
|   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_function
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_function definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_function
|   |-ClassTemplateDecl is_function
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_function definition
|   |   |-public '__libcpp_is_function<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, > implicit struct is_function
|   |-ClassTemplateDecl __member_pointer_traits_imp
|   | |-TemplateTypeParmDecl class depth 0 index 0 _MP
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1 _IsMemberFunctionPtr
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2 _IsMemberObjectPtr
|   | `-CXXRecordDecl struct __member_pointer_traits_imp definition
|   |   `-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   |-ClassTemplateDecl __libcpp_is_member_function_pointer
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_member_function_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_member_function_pointer
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_member_function_pointer definition
|   | |-public 'is_function<_Ret>'
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Class
|   | `-CXXRecordDecl implicit struct __libcpp_is_member_function_pointer
|   |-ClassTemplateDecl is_member_function_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_member_function_pointer definition
|   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, > implicit struct is_member_function_pointer
|   |-ClassTemplateDecl __libcpp_is_member_pointer
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_member_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_member_pointer
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_member_pointer definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Up
|   | `-CXXRecordDecl implicit struct __libcpp_is_member_pointer
|   |-ClassTemplateDecl is_member_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_member_pointer definition
|   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, > implicit struct is_member_pointer
|   |-ClassTemplateDecl is_member_object_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_member_object_pointer definition
|   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, > implicit struct is_member_object_pointer
|   |-ClassTemplateDecl is_enum
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_enum definition
|   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, > implicit struct is_enum
|   |-ClassTemplateDecl is_arithmetic
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_arithmetic definition
|   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, > implicit struct is_arithmetic
|   |-ClassTemplateDecl is_fundamental
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_fundamental definition
|   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, > implicit struct is_fundamental
|   |-ClassTemplateDecl is_scalar
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_scalar definition
|   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, > implicit struct is_scalar
|   | `-ClassTemplateSpecialization 'is_scalar'
|   |-ClassTemplateSpecializationDecl struct is_scalar definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'nullptr_t'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, > implicit struct is_scalar
|   |-ClassTemplateDecl is_object
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_object definition
|   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, > implicit struct is_object
|   |-ClassTemplateDecl is_compound
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_compound definition
|   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, > implicit struct is_compound
|   |-CXXRecordDecl struct __is_referenceable_impl definition
|   | |-CXXRecordDecl implicit struct __is_referenceable_impl
|   | |-FunctionTemplateDecl __test
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | `-CXXMethodDecl __test '_Tp &(int)' static
|   | |   `-ParmVarDecl 'int'
|   | `-FunctionTemplateDecl __test
|   |   |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   |   `-CXXMethodDecl __test 'struct std::__1::__two (...)' static
|   |-ClassTemplateDecl __is_referenceable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_referenceable definition
|   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
|   |   `-CXXRecordDecl implicit struct __is_referenceable
|   |-ClassTemplateDecl __add_const
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-BinaryOperator '<dependent type>' '||'
|   | |     | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __add_const definition
|   |   |-CXXRecordDecl implicit struct __add_const
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct __add_const definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_const
|   | `-TypedefDecl type 'const _Tp'
|   |   `-QualType 'const _Tp' const
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_const
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct add_const definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, > implicit struct add_const
|   |   `-TypedefDecl type 'typename __add_const<_Tp>::type'
|   |     `-DependentNameType 'typename __add_const<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl add_const_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_const_t 'typename add_const<_Tp>::type'
|   |   `-DependentNameType 'typename add_const<_Tp>::type' dependent
|   |-ClassTemplateDecl __add_volatile
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-BinaryOperator '<dependent type>' '||'
|   | |     | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __add_volatile definition
|   |   |-CXXRecordDecl implicit struct __add_volatile
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct __add_volatile definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_volatile
|   | `-TypedefDecl type 'volatile _Tp'
|   |   `-QualType 'volatile _Tp' volatile
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_volatile
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct add_volatile definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, > implicit struct add_volatile
|   |   `-TypedefDecl type 'typename __add_volatile<_Tp>::type'
|   |     `-DependentNameType 'typename __add_volatile<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl add_volatile_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_volatile_t 'typename add_volatile<_Tp>::type'
|   |   `-DependentNameType 'typename add_volatile<_Tp>::type' dependent
|   |-ClassTemplateDecl add_cv
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct add_cv definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, > implicit struct add_cv
|   |   `-TypedefDecl type 'typename add_const<typename add_volatile<_Tp>::type>::type'
|   |     `-DependentNameType 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
|   |-TypeAliasTemplateDecl add_cv_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_cv_t 'typename add_cv<_Tp>::type'
|   |   `-DependentNameType 'typename add_cv<_Tp>::type' dependent
|   |-ClassTemplateDecl remove_reference
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_reference definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, > implicit struct remove_reference
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_reference definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, > implicit struct remove_reference
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_reference definition
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, > implicit struct remove_reference
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_reference_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_reference_t 'typename remove_reference<_Tp>::type'
|   |   `-DependentNameType 'typename remove_reference<_Tp>::type' dependent
|   |-ClassTemplateDecl __add_lvalue_reference_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __add_lvalue_reference_impl definition
|   |   |-CXXRecordDecl implicit struct __add_lvalue_reference_impl
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct __add_lvalue_reference_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_lvalue_reference_impl
|   | `-TypedefDecl type '_Tp &'
|   |   `-LValueReferenceType '_Tp &' dependent
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_lvalue_reference
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct add_lvalue_reference definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, > implicit struct add_lvalue_reference
|   |   `-TypedefDecl type 'typename __add_lvalue_reference_impl<_Tp>::type'
|   |     `-DependentNameType 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl add_lvalue_reference_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
|   |   `-DependentNameType 'typename add_lvalue_reference<_Tp>::type' dependent
|   |-ClassTemplateDecl __add_rvalue_reference_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __add_rvalue_reference_impl definition
|   |   |-CXXRecordDecl implicit struct __add_rvalue_reference_impl
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct __add_rvalue_reference_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_rvalue_reference_impl
|   | `-TypedefDecl type '_Tp &&'
|   |   `-RValueReferenceType '_Tp &&' dependent
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_rvalue_reference
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct add_rvalue_reference definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, > implicit struct add_rvalue_reference
|   |   `-TypedefDecl type 'typename __add_rvalue_reference_impl<_Tp>::type'
|   |     `-DependentNameType 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl add_rvalue_reference_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
|   |   `-DependentNameType 'typename add_rvalue_reference<_Tp>::type' dependent
|   |-FunctionTemplateDecl __declval
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl __declval '_Tp &&(int)'
|   |   `-ParmVarDecl 'int'
|   |-FunctionTemplateDecl __declval
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl __declval '_Tp (long)'
|   |   `-ParmVarDecl 'long'
|   |-FunctionTemplateDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
|   |-ClassTemplateDecl __uncvref
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __uncvref definition
|   |   |-CXXRecordDecl implicit struct __uncvref
|   |   `-TypedefDecl type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
|   |     `-DependentNameType 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
|   |-ClassTemplateDecl __unconstref
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __unconstref definition
|   |   |-CXXRecordDecl implicit struct __unconstref
|   |   `-TypedefDecl type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
|   |     `-DependentNameType 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
|   |-TypeAliasTemplateDecl __uncvref_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl __uncvref_t 'typename __uncvref<_Tp>::type'
|   |   `-DependentNameType 'typename __uncvref<_Tp>::type' dependent
|   |-ClassTemplateDecl __is_same_uncvref
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl struct __is_same_uncvref definition
|   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
|   |   `-CXXRecordDecl implicit struct __is_same_uncvref
|   |-CXXRecordDecl referenced struct __any definition
|   | |-CXXRecordDecl implicit referenced struct __any
|   | `-CXXConstructorDecl __any 'void (...)'
|   |-ClassTemplateDecl remove_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_pointer definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, > implicit struct remove_pointer
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, > implicit struct remove_pointer
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *const'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, > implicit struct remove_pointer
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, > implicit struct remove_pointer
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, > implicit struct remove_pointer
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_pointer_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_pointer_t 'typename remove_pointer<_Tp>::type'
|   |   `-DependentNameType 'typename remove_pointer<_Tp>::type' dependent
|   |-ClassTemplateDecl __add_pointer_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __add_pointer_impl definition
|   |   |-CXXRecordDecl implicit struct __add_pointer_impl
|   |   `-TypedefDecl type 'typename remove_reference<_Tp>::type *'
|   |     `-PointerType 'typename remove_reference<_Tp>::type *' dependent
|   |       `-DependentNameType 'typename remove_reference<_Tp>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct __add_pointer_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_pointer_impl
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct add_pointer definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, > implicit struct add_pointer
|   |   `-TypedefDecl type 'typename __add_pointer_impl<_Tp>::type'
|   |     `-DependentNameType 'typename __add_pointer_impl<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl add_pointer_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_pointer_t 'typename add_pointer<_Tp>::type'
|   |   `-DependentNameType 'typename add_pointer<_Tp>::type' dependent
|   |-ClassTemplateDecl __libcpp_is_signed_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_signed_impl definition
|   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_signed_impl
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_signed_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_signed_impl
|   |-ClassTemplateDecl __libcpp_is_signed
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_signed definition
|   |   |-public '__libcpp_is_signed_impl<_Tp>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_signed
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_signed definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_signed
|   |-ClassTemplateDecl is_signed
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_signed definition
|   |   |-public '__libcpp_is_signed<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, > implicit struct is_signed
|   |-ClassTemplateDecl __libcpp_is_unsigned_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_unsigned_impl definition
|   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_unsigned_impl
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_unsigned_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_unsigned_impl
|   |-ClassTemplateDecl __libcpp_is_unsigned
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_unsigned definition
|   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_unsigned
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_unsigned definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_unsigned
|   |-ClassTemplateDecl is_unsigned
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_unsigned definition
|   |   |-public '__libcpp_is_unsigned<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, > implicit struct is_unsigned
|   |-ClassTemplateDecl rank
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct rank definition
|   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, > implicit struct rank
|   |-ClassTemplatePartialSpecializationDecl struct rank definition
|   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, > implicit struct rank
|   |-ClassTemplatePartialSpecializationDecl struct rank definition
|   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, > implicit struct rank
|   |-ClassTemplateDecl extent
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 'unsigned int' depth 0 index 1 _Ip
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 'int' 0
|   | `-CXXRecordDecl struct extent definition
|   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, > implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl struct extent definition
|   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, > implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl struct extent definition
|   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'unsigned int' NonTypeTemplateParm 0x7f9c8580c970 '_Ip' 'unsigned int'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'unsigned int' depth 0 index 1 _Ip
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, > implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl struct extent definition
|   | |-public 'integral_constant<size_t, _Np>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, > implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl struct extent definition
|   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'unsigned int' NonTypeTemplateParm 0x7f9c8580dca8 '_Ip' 'unsigned int'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-NonTypeTemplateParmDecl referenced 'unsigned int' depth 0 index 2 _Ip
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, > implicit struct extent
|   |-ClassTemplateDecl remove_extent
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_extent definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, > implicit struct remove_extent
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_extent definition
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, > implicit struct remove_extent
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_extent definition
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, > implicit struct remove_extent
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_extent_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_extent_t 'typename remove_extent<_Tp>::type'
|   |   `-DependentNameType 'typename remove_extent<_Tp>::type' dependent
|   |-ClassTemplateDecl remove_all_extents
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_all_extents definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, > implicit struct remove_all_extents
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_all_extents definition
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, > implicit struct remove_all_extents
|   | `-TypedefDecl type 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 'typename remove_all_extents<_Tp>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct remove_all_extents definition
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, > implicit struct remove_all_extents
|   | `-TypedefDecl type 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 'typename remove_all_extents<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl remove_all_extents_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 'typename remove_all_extents<_Tp>::type' dependent
|   |-ClassTemplateDecl __decay
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Up
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | `-CXXRecordDecl struct __decay definition
|   |   |-CXXRecordDecl implicit struct __decay
|   |   `-TypedefDecl type 'typename remove_cv<_Up>::type'
|   |     `-DependentNameType 'typename remove_cv<_Up>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct __decay definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Up
|   | |-CXXRecordDecl implicit struct __decay
|   | |-AccessSpecDecl public
|   | `-TypedefDecl type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
|   |   `-DependentNameType 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
|   |-ClassTemplateDecl decay
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct decay definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, > implicit struct decay
|   |   |-AccessSpecDecl private
|   |   |-TypedefDecl referenced _Up 'typename remove_reference<_Tp>::type'
|   |   | `-DependentNameType 'typename remove_reference<_Tp>::type' dependent
|   |   |-AccessSpecDecl public
|   |   `-TypedefDecl type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
|   |     `-DependentNameType 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
|   |-TypeAliasTemplateDecl decay_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl decay_t 'typename decay<_Tp>::type'
|   |   `-DependentNameType 'typename decay<_Tp>::type' dependent
|   |-ClassTemplateDecl is_abstract
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_abstract definition
|   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, > implicit struct is_abstract
|   |-ClassTemplateDecl __libcpp_is_final
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_final definition
|   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, > implicit struct __libcpp_is_final
|   |-ClassTemplateDecl is_final
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_final definition
|   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, > implicit struct is_final
|   |-ClassTemplateDecl is_base_of
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Dp
|   | `-CXXRecordDecl struct is_base_of definition
|   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, > implicit struct is_base_of
|   |-ClassTemplateDecl is_convertible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-CXXRecordDecl struct is_convertible definition
|   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, > implicit struct is_convertible
|   |-ClassTemplateDecl is_empty
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_empty definition
|   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, > implicit struct is_empty
|   |-ClassTemplateDecl is_polymorphic
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_polymorphic definition
|   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, > implicit struct is_polymorphic
|   |-ClassTemplateDecl has_virtual_destructor
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct has_virtual_destructor definition
|   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, > implicit struct has_virtual_destructor
|   |-ClassTemplateDecl alignment_of
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct alignment_of definition
|   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, > implicit struct alignment_of
|   |-ClassTemplateDecl __type_list
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-CXXRecordDecl struct __type_list definition
|   | | |-CXXRecordDecl implicit struct __type_list
|   | | |-TypedefDecl _Head '_Hp'
|   | | | `-TemplateTypeParmType '_Hp' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm '_Hp'
|   | | `-TypedefDecl _Tail '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Tp'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type '__int128'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'long long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'int'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'short'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list definition
|   | | |-TemplateArgument type 'signed char'
|   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | | |-CXXRecordDecl prev 0x7f9c8583ec10 implicit struct __type_list
|   | | |-TypedefDecl referenced _Head 'signed char':'signed char'
|   | | | `-SubstTemplateTypeParmType 'signed char' sugar
|   | | |   |-TemplateTypeParmType '_Hp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Hp'
|   | | |   `-BuiltinType 'signed char'
|   | | `-TypedefDecl _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | |   `-SubstTemplateTypeParmType 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-RecordType 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | |       `-ClassTemplateSpecialization '__type_list'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned __int128'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned long long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned int'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned short'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
|   | `-ClassTemplateSpecializationDecl struct __type_list definition
|   |   |-TemplateArgument type 'unsigned char'
|   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |   |-CXXRecordDecl prev 0x7f9c85840a00 implicit struct __type_list
|   |   |-TypedefDecl referenced _Head 'unsigned char':'unsigned char'
|   |   | `-SubstTemplateTypeParmType 'unsigned char' sugar
|   |   |   |-TemplateTypeParmType '_Hp' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm '_Hp'
|   |   |   `-BuiltinType 'unsigned char'
|   |   `-TypedefDecl _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |     `-SubstTemplateTypeParmType 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
|   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   |       | `-TemplateTypeParm '_Tp'
|   |       `-RecordType 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |         `-ClassTemplateSpecialization '__type_list'
|   |-CXXRecordDecl referenced struct __nat definition
|   | |-CXXRecordDecl implicit referenced struct __nat
|   | |-CXXConstructorDecl __nat 'void (void)' delete trivial
|   | |-CXXConstructorDecl __nat 'void (const struct std::__1::__nat &)' delete trivial
|   | | `-ParmVarDecl 'const struct std::__1::__nat &'
|   | |-CXXMethodDecl operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
|   | | `-ParmVarDecl 'const struct std::__1::__nat &'
|   | `-CXXDestructorDecl ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7f9c85819ca0
|   |-ClassTemplateDecl __align_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __align_type definition
|   | | |-CXXRecordDecl implicit struct __align_type
|   | | |-VarDecl value 'const size_t':'const unsigned long' static cinit
|   | | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned char'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned short'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned int'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned long long'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'double'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'long double'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'struct std::__1::__struct_double'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
|   | `-ClassTemplateSpecializationDecl struct __align_type
|   |   `-TemplateArgument type 'int *'
|   |-CXXRecordDecl referenced struct __struct_double definition
|   | |-CXXRecordDecl implicit struct __struct_double
|   | `-FieldDecl __lx 'long double'
|   |-CXXRecordDecl referenced struct __struct_double4 definition
|   | |-CXXRecordDecl implicit struct __struct_double4
|   | `-FieldDecl __lx 'double [4]'
|   |-TypedefDecl referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
|   | `-TemplateSpecializationType '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
|   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
|   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
|   |   `-RecordType 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
|   |     `-ClassTemplateSpecialization '__type_list'
|   |-ClassTemplateDecl __find_pod
|   | |-TemplateTypeParmDecl class depth 0 index 0 _TL
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 1 _Align
|   | `-CXXRecordDecl struct __find_pod
|   |-ClassTemplatePartialSpecializationDecl struct __find_pod definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85820148 '_Align' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | |-CXXRecordDecl implicit struct __find_pod
|   | `-TypedefDecl type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
|   |   `-DependentNameType 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct __find_pod definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85820d38 '_Align' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Align
|   | |-CXXRecordDecl implicit struct __find_pod
|   | `-TypedefDecl type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
|   |   `-DependentNameType 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
|   |-ClassTemplateDecl __find_max_align
|   | |-TemplateTypeParmDecl class depth 0 index 0 _TL
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 1 _Len
|   | `-CXXRecordDecl struct __find_max_align
|   |-ClassTemplatePartialSpecializationDecl struct __find_max_align definition
|   | |-public 'integral_constant<size_t, _Hp::value>'
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85821e38 '_Len' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Len
|   | `-CXXRecordDecl implicit struct __find_max_align
|   |-ClassTemplateDecl __select_align
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _A1
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _A2
|   | `-CXXRecordDecl struct __select_align definition
|   |   |-CXXRecordDecl implicit struct __select_align
|   |   |-AccessSpecDecl private
|   |   |-VarDecl referenced __min 'const size_t':'const unsigned long' static cinit
|   |   | `-ConditionalOperator 'size_t':'unsigned long'
|   |   |   |-BinaryOperator '_Bool' '<'
|   |   |   | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c858227b0 '_A2' 'size_t':'unsigned long'
|   |   |   | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85822748 '_A1' 'size_t':'unsigned long'
|   |   |   |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c858227b0 '_A2' 'size_t':'unsigned long'
|   |   |   `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85822748 '_A1' 'size_t':'unsigned long'
|   |   |-VarDecl referenced __max 'const size_t':'const unsigned long' static cinit
|   |   | `-ConditionalOperator 'size_t':'unsigned long'
|   |   |   |-BinaryOperator '_Bool' '<'
|   |   |   | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85822748 '_A1' 'size_t':'unsigned long'
|   |   |   | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c858227b0 '_A2' 'size_t':'unsigned long'
|   |   |   |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c858227b0 '_A2' 'size_t':'unsigned long'
|   |   |   `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85822748 '_A1' 'size_t':'unsigned long'
|   |   |-AccessSpecDecl public
|   |   `-VarDecl value 'const size_t':'const unsigned long' static cinit
|   |     `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |       `-ConditionalOperator 'const size_t':'const unsigned long' lvalue
|   |         |-BinaryOperator '_Bool' '<'
|   |         | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c858226e0 '_Len' 'size_t':'unsigned long'
|   |         | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |         |   `-DeclRefExpr 'const size_t':'const unsigned long' lvalue Var 0x7f9c85822e58 '__max' 'const size_t':'const unsigned long'
|   |         |-DeclRefExpr 'const size_t':'const unsigned long' lvalue Var 0x7f9c85822cf0 '__min' 'const size_t':'const unsigned long'
|   |         `-DeclRefExpr 'const size_t':'const unsigned long' lvalue Var 0x7f9c85822e58 '__max' 'const size_t':'const unsigned long'
|   |-ClassTemplatePartialSpecializationDecl struct __find_max_align definition
|   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85823278 '_Len' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Len
|   | `-CXXRecordDecl implicit struct __find_max_align
|   |-ClassTemplateDecl aligned_storage
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct aligned_storage definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, > implicit struct aligned_storage
|   |   |-TypedefDecl referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
|   |   | `-DependentNameType 'typename __find_pod<__all_types, _Align>::type' dependent
|   |   |-StaticAssertDecl
|   |   | |-UnaryOperator '<dependent type>' prefix '!'
|   |   | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   | `-StringLiteral 'const char [1]' lvalue ""
|   |   `-CXXRecordDecl union type definition
|   |     |-CXXRecordDecl implicit union type
|   |     |-FieldDecl __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
|   |     `-FieldDecl __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
|   |-TypeAliasTemplateDecl aligned_storage_t
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-TypeAliasDecl aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
|   |   `-DependentNameType 'typename aligned_storage<_Len, _Align>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85827200 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85827c90 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 2
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85828790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 4
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85829230 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 8
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85829cc0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 16
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582a790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 32
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582b230 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 64
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582bcc0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 128
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582c790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 256
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582d230 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 512
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582dcc0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1024
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582e790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 2048
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582f230 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 4096
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c8582fcc0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 8192
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85830790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 16384
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
|   |-ClassTemplateDecl __static_max
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 1 ... _In
|   | `-CXXRecordDecl struct __static_max
|   |-ClassTemplatePartialSpecializationDecl struct __static_max definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85831688 '_I0' 'size_t':'unsigned long'
|   | |-TemplateArgument pack
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-CXXRecordDecl implicit struct __static_max
|   | `-VarDecl value 'const size_t':'const unsigned long' static cinit
|   |   `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85831688 '_I0' 'size_t':'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl struct __static_max definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85831c10 '_I0' 'size_t':'unsigned long'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument expr
|   | | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85831c78 '_I1' 'size_t':'unsigned long'
|   | | `-TemplateArgument expr
|   | |   `-PackExpansionExpr '<dependent type>'
|   | |     `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85831ce0 '_In' 'size_t':'unsigned long'
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _I1
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
|   | |-CXXRecordDecl implicit struct __static_max
|   | `-VarDecl value 'const size_t':'const unsigned long' static cinit
|   |   `-ConditionalOperator '<dependent type>'
|   |     |-BinaryOperator '_Bool' '>='
|   |     | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85831c10 '_I0' 'size_t':'unsigned long'
|   |     | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85831c78 '_I1' 'size_t':'unsigned long'
|   |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-ClassTemplateDecl aligned_union
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Type0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Types
|   | `-CXXRecordDecl struct aligned_union definition
|   |   |-CXXRecordDecl implicit struct aligned_union
|   |   |-VarDecl referenced alignment_value 'const size_t':'const unsigned long' static cinit
|   |   | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   |-VarDecl referenced __len 'const size_t':'const unsigned long' static cinit
|   |   | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   `-TypedefDecl type 'typename aligned_storage<__len, alignment_value>::type'
|   |     `-DependentNameType 'typename aligned_storage<__len, alignment_value>::type' dependent
|   |-TypeAliasTemplateDecl aligned_union_t
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Types
|   | `-TypeAliasDecl aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
|   |   `-DependentNameType 'typename aligned_union<_Len, _Types...>::type' dependent
|   |-ClassTemplateDecl __numeric_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __numeric_type definition
|   | | |-CXXRecordDecl implicit struct __numeric_type
|   | | |-CXXMethodDecl __test 'void (...)' static
|   | | |-CXXMethodDecl __test 'float (float)' static
|   | | | `-ParmVarDecl 'float'
|   | | |-CXXMethodDecl __test 'double (char)' static
|   | | | `-ParmVarDecl 'char'
|   | | |-CXXMethodDecl __test 'double (int)' static
|   | | | `-ParmVarDecl 'int'
|   | | |-CXXMethodDecl __test 'double (unsigned int)' static
|   | | | `-ParmVarDecl 'unsigned int'
|   | | |-CXXMethodDecl __test 'double (long)' static
|   | | | `-ParmVarDecl 'long'
|   | | |-CXXMethodDecl __test 'double (unsigned long)' static
|   | | | `-ParmVarDecl 'unsigned long'
|   | | |-CXXMethodDecl __test 'double (long long)' static
|   | | | `-ParmVarDecl 'long long'
|   | | |-CXXMethodDecl __test 'double (unsigned long long)' static
|   | | | `-ParmVarDecl 'unsigned long long'
|   | | |-CXXMethodDecl __test 'double (double)' static
|   | | | `-ParmVarDecl 'double'
|   | | |-CXXMethodDecl __test 'long double (long double)' static
|   | | | `-ParmVarDecl 'long double'
|   | | |-TypedefDecl referenced type 'decltype(__test(declval<_Tp>()))'
|   | | | `-DecltypeType 'decltype(__test(declval<_Tp>()))' dependent
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test' 0x7f9c85835de8 0x7f9c85835c68 0x7f9c85835ae8 0x7f9c85835968 0x7f9c858357e8 0x7f9c85835668 0x7f9c858354e8 0x7f9c85835368 0x7f9c858351e8 0x7f9c85835068 0x7f9c85834ac8
|   | | |     `-CallExpr '<dependent type>'
|   | | |       `-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = 'declval' 0x7f9c850eb780
|   | | `-VarDecl value 'const _Bool' static cinit
|   | |   `-UnaryOperator '<dependent type>' prefix '!'
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-ClassTemplateSpecialization '__numeric_type'
|   |-ClassTemplateSpecializationDecl struct __numeric_type definition
|   | |-TemplateArgument type 'void'
|   | |-CXXRecordDecl implicit struct __numeric_type
|   | `-VarDecl referenced value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr '_Bool' true
|   |-ClassTemplateDecl __promote_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A2
|   | | `-TemplateArgument type 'void'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _A3
|   | | `-TemplateArgument type 'void'
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '&&'
|   | |     |-BinaryOperator '<dependent type>' '&&'
|   | |     | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl class __promote_imp definition
|   |   |-CXXRecordDecl implicit class __promote_imp
|   |   |-AccessSpecDecl public
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-CXXBoolLiteralExpr '_Bool' false
|   |-ClassTemplatePartialSpecializationDecl class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-2'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _A3
|   | |-CXXRecordDecl implicit class __promote_imp
|   | |-AccessSpecDecl private
|   | |-TypedefDecl referenced __type1 'typename __promote_imp<_A1>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A1>::type' dependent
|   | |-TypedefDecl referenced __type2 'typename __promote_imp<_A2>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A2>::type' dependent
|   | |-TypedefDecl referenced __type3 'typename __promote_imp<_A3>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A3>::type' dependent
|   | |-AccessSpecDecl public
|   | |-TypedefDecl type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
|   | | `-DecltypeType 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
|   | |   `-BinaryOperator '<dependent type>' '+'
|   | |     |-BinaryOperator '<dependent type>' '+'
|   | |     | |-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
|   | |     | `-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
|   | |     `-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr '_Bool' true
|   |-ClassTemplatePartialSpecializationDecl class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A2
|   | |-CXXRecordDecl implicit class __promote_imp
|   | |-AccessSpecDecl private
|   | |-TypedefDecl referenced __type1 'typename __promote_imp<_A1>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A1>::type' dependent
|   | |-TypedefDecl referenced __type2 'typename __promote_imp<_A2>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A2>::type' dependent
|   | |-AccessSpecDecl public
|   | |-TypedefDecl type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
|   | | `-DecltypeType 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
|   | |   `-BinaryOperator '<dependent type>' '+'
|   | |     |-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
|   | |     `-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr '_Bool' true
|   |-ClassTemplatePartialSpecializationDecl class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-CXXRecordDecl implicit class __promote_imp
|   | |-AccessSpecDecl public
|   | |-TypedefDecl type 'typename __numeric_type<_A1>::type'
|   | | `-DependentNameType 'typename __numeric_type<_A1>::type' dependent
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr '_Bool' true
|   |-ClassTemplateDecl __promote
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A2
|   | | `-TemplateArgument type 'void'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _A3
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl class __promote definition
|   |   |-public '__promote_imp<_A1, _A2, _A3>'
|   |   `-CXXRecordDecl implicit class __promote
|   |-TypedefDecl referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
|   | `-TemplateSpecializationType '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
|   |   |-TemplateArgument type 'signed char'
|   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   |   `-RecordType 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
|   |     `-ClassTemplateSpecialization '__type_list'
|   |-TypedefDecl referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
|   | `-TemplateSpecializationType '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
|   |   |-TemplateArgument type 'unsigned char'
|   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |   `-RecordType 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
|   |     `-ClassTemplateSpecialization '__type_list'
|   |-ClassTemplateDecl __find_first
|   | |-TemplateTypeParmDecl class depth 0 index 0 _TypeList
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Size
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '_Bool' '<='
|   | |     |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85840ce8 '_Size' 'size_t':'unsigned long'
|   | |     `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof 'typename _TypeList::_Head'
|   | `-CXXRecordDecl struct __find_first
|   |-ClassTemplatePartialSpecializationDecl struct __find_first definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85841368 '_Size' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | |-CXXRecordDecl implicit struct __find_first
|   | `-TypedefDecl type '_Hp'
|   |   `-TemplateTypeParmType '_Hp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Hp'
|   |-ClassTemplatePartialSpecializationDecl struct __find_first definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9c85841c78 '_Size' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | |-CXXRecordDecl implicit struct __find_first
|   | `-TypedefDecl type 'typename __find_first<_Tp, _Size>::type'
|   |   `-DependentNameType 'typename __find_first<_Tp, _Size>::type' dependent
|   |-ClassTemplateDecl __apply_cv
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __apply_cv definition
|   |   |-CXXRecordDecl implicit struct __apply_cv
|   |   `-TypedefDecl type '_Up'
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'const _Up'
|   |   `-QualType 'const _Up' const
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'volatile _Up'
|   |   `-QualType 'volatile _Up' volatile
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'const volatile _Up'
|   |   `-QualType 'const volatile _Up' const volatile
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type '_Up &'
|   |   `-LValueReferenceType '_Up &' dependent
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'const _Up &'
|   |   `-LValueReferenceType 'const _Up &' dependent
|   |     `-QualType 'const _Up' const
|   |       `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'volatile _Up &'
|   |   `-LValueReferenceType 'volatile _Up &' dependent
|   |     `-QualType 'volatile _Up' volatile
|   |       `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'const volatile _Up &'
|   |   `-LValueReferenceType 'const volatile _Up &' dependent
|   |     `-QualType 'const volatile _Up' const volatile
|   |       `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm '_Up'
|   |-ClassTemplateDecl __make_signed
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __make_signed definition
|   | | `-CXXRecordDecl implicit struct __make_signed
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | `-ClassTemplateSpecialization '__make_signed'
|   |-ClassTemplatePartialSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
|   |   `-DependentNameType 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type '_Bool'
|   | |-TemplateArgument integral 1
|   | `-CXXRecordDecl implicit struct __make_signed
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'short'
|   |   `-BuiltinType 'short'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'short'
|   |   `-BuiltinType 'short'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'int'
|   |   `-BuiltinType 'int'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'int'
|   |   `-BuiltinType 'int'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'long'
|   |   `-BuiltinType 'long'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'long'
|   |   `-BuiltinType 'long'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'long long'
|   |   `-BuiltinType 'long long'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'long long'
|   |   `-BuiltinType 'long long'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type '__int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type '__int128_t':'__int128'
|   |   `-TypedefType '__int128_t' sugar
|   |     |-Typedef '__int128_t'
|   |     `-BuiltinType '__int128'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type '__int128_t':'__int128'
|   |   `-TypedefType '__int128_t' sugar
|   |     |-Typedef '__int128_t'
|   |     `-BuiltinType '__int128'
|   |-ClassTemplateDecl make_signed
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct make_signed definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, > implicit struct make_signed
|   |   `-TypedefDecl type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
|   |     `-DependentNameType 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
|   |-TypeAliasTemplateDecl make_signed_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl make_signed_t 'typename make_signed<_Tp>::type'
|   |   `-DependentNameType 'typename make_signed<_Tp>::type' dependent
|   |-ClassTemplateDecl __make_unsigned
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __make_unsigned definition
|   | | `-CXXRecordDecl implicit struct __make_unsigned
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | `-ClassTemplateSpecialization '__make_unsigned'
|   |-ClassTemplatePartialSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
|   |   `-DependentNameType 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type '_Bool'
|   | |-TemplateArgument integral 1
|   | `-CXXRecordDecl implicit struct __make_unsigned
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned short'
|   |   `-BuiltinType 'unsigned short'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned short'
|   |   `-BuiltinType 'unsigned short'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned int'
|   |   `-BuiltinType 'unsigned int'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned int'
|   |   `-BuiltinType 'unsigned int'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned long'
|   |   `-BuiltinType 'unsigned long'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned long'
|   |   `-BuiltinType 'unsigned long'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned long long'
|   |   `-BuiltinType 'unsigned long long'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned long long'
|   |   `-BuiltinType 'unsigned long long'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type '__int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type '__uint128_t':'unsigned __int128'
|   |   `-TypedefType '__uint128_t' sugar
|   |     |-Typedef '__uint128_t'
|   |     `-BuiltinType 'unsigned __int128'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type '__uint128_t':'unsigned __int128'
|   |   `-TypedefType '__uint128_t' sugar
|   |     |-Typedef '__uint128_t'
|   |     `-BuiltinType 'unsigned __int128'
|   |-ClassTemplateDecl make_unsigned
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct make_unsigned definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, > implicit struct make_unsigned
|   |   `-TypedefDecl type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
|   |     `-DependentNameType 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
|   |-TypeAliasTemplateDecl make_unsigned_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl make_unsigned_t 'typename make_unsigned<_Tp>::type'
|   |   `-DependentNameType 'typename make_unsigned<_Tp>::type' dependent
|   |-ClassTemplateDecl common_type
|   | |-TemplateTypeParmDecl class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl struct common_type definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, > implicit struct common_type
|   |-ClassTemplatePartialSpecializationDecl struct common_type definition
|   | |-public 'common_type<_Tp, _Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, > implicit struct common_type
|   |-ClassTemplateDecl __common_type2_imp
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl struct __common_type2_imp definition
|   |   `-CXXRecordDecl implicit struct __common_type2_imp
|   |-ClassTemplatePartialSpecializationDecl struct __common_type2_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __common_type2_imp
|   | `-TypedefDecl type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
|   |   `-DependentNameType 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
|   |-TypeAliasTemplateDecl __common_type2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DTp
|   | | `-TemplateArgument type 'typename decay<_Tp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DUp
|   | | `-TemplateArgument type 'typename decay<_Up>::type'
|   | `-TypeAliasDecl __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
|   |   `-DependentNameType 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct common_type definition
|   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, > implicit struct common_type
|   |-ClassTemplateDecl __common_types
|   | |-TemplateTypeParmDecl class depth 0 index 0 ... Tp
|   | `-CXXRecordDecl struct __common_types
|   |-ClassTemplateDecl __common_type_impl
|   | |-TemplateTypeParmDecl class depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl struct __common_type_impl definition
|   |   `-CXXRecordDecl implicit struct __common_type_impl
|   |-ClassTemplatePartialSpecializationDecl struct __common_type_impl definition
|   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __common_type_impl
|   | `-TypedefDecl type 'typename common_type<_Tp, _Up>::type'
|   |   `-DependentNameType 'typename common_type<_Tp, _Up>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct __common_type_impl definition
|   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
|   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
|   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Vp
|   | `-CXXRecordDecl implicit struct __common_type_impl
|   |-ClassTemplatePartialSpecializationDecl struct common_type definition
|   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Vp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, > implicit struct common_type
|   |-TypeAliasTemplateDecl common_type_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Tp
|   | `-TypeAliasDecl common_type_t 'typename common_type<_Tp...>::type'
|   |   `-DependentNameType 'typename common_type<_Tp...>::type' dependent
|   |-ClassTemplateDecl __select_2nd
|   | |-TemplateTypeParmDecl typename depth 0 index 0
|   | |-TemplateTypeParmDecl referenced typename depth 0 index 1 _Tp
|   | `-CXXRecordDecl struct __select_2nd definition
|   |   |-CXXRecordDecl implicit struct __select_2nd
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Tp'
|   |-FunctionTemplateDecl __is_assignable_test
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-FunctionDecl __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
|   |   `-ParmVarDecl 'int'
|   |-FunctionTemplateDecl __is_assignable_test
|   | |-TemplateTypeParmDecl class depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1
|   | `-FunctionDecl __is_assignable_test 'std::__1::false_type (...)'
|   |-ClassTemplateDecl __is_assignable_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __is_assignable_imp definition
|   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
|   |   `-CXXRecordDecl implicit struct __is_assignable_imp
|   |-ClassTemplatePartialSpecializationDecl struct __is_assignable_imp definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl implicit struct __is_assignable_imp
|   |-ClassTemplateDecl is_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl struct is_assignable definition
|   |   |-public '__is_assignable_imp<_Tp, _Arg>'
|   |   `-CXXRecordDecl implicit struct is_assignable
|   |-ClassTemplateDecl is_copy_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_copy_assignable definition
|   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, > implicit struct is_copy_assignable
|   |-ClassTemplateDecl is_move_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_move_assignable definition
|   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, > implicit struct is_move_assignable
|   |-ClassTemplateDecl __is_destructible_apply
|   | |-TemplateTypeParmDecl class depth 0 index 0
|   | `-CXXRecordDecl struct __is_destructible_apply definition
|   |   |-CXXRecordDecl implicit struct __is_destructible_apply
|   |   `-TypedefDecl type 'int'
|   |     `-BuiltinType 'int'
|   |-ClassTemplateDecl __is_destructor_wellformed
|   | |-TemplateTypeParmDecl referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_destructor_wellformed definition
|   |   |-CXXRecordDecl implicit struct __is_destructor_wellformed
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl referenced typename depth 1 index 0 _Tp1
|   |   | `-CXXMethodDecl __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
|   |   |   `-ParmVarDecl 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl typename depth 1 index 0 _Tp1
|   |   | `-CXXMethodDecl __test 'struct std::__1::__two (...)' static
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-BinaryOperator '_Bool' '=='
|   |       |-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   |       | `-ParenExpr '<dependent type>'
|   |       |   `-CallExpr '<dependent type>'
|   |       |     |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test' 0x7f9c8586ebe8 0x7f9c8586ea58
|   |       |     `-IntegerLiteral 'int' 12
|   |       `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof 'char'
|   |-ClassTemplateDecl __destructible_imp
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | `-CXXRecordDecl struct __destructible_imp
|   |-ClassTemplatePartialSpecializationDecl struct __destructible_imp definition
|   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __destructible_imp
|   |-ClassTemplatePartialSpecializationDecl struct __destructible_imp definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __destructible_imp
|   |-ClassTemplateDecl __destructible_false
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | `-CXXRecordDecl struct __destructible_false
|   |-ClassTemplatePartialSpecializationDecl struct __destructible_false definition
|   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __destructible_false
|   |-ClassTemplatePartialSpecializationDecl struct __destructible_false definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __destructible_false
|   |-ClassTemplateDecl is_destructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_destructible definition
|   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
|   | | `-CXXRecordDecl implicit struct is_destructible
|   | `-ClassTemplateSpecialization 'is_destructible'
|   |-ClassTemplatePartialSpecializationDecl struct is_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct is_destructible
|   |-ClassTemplateSpecializationDecl struct is_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'void'
|   | `-CXXRecordDecl implicit struct is_destructible
|   |-FunctionTemplateDecl move
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
|   |   |-ParmVarDecl referenced __t '_Tp &&'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-TypedefDecl referenced _Up 'typename remove_reference<_Tp>::type'
|   |   | |   `-DependentNameType 'typename remove_reference<_Tp>::type' dependent
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
|   |   |     `-DeclRefExpr '_Tp' lvalue ParmVar 0x7f9c858739e8 '__t' '_Tp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, > forward
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
|   |   |-ParmVarDecl referenced __t 'typename remove_reference<_Tp>::type &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr '_Tp' xvalue static_cast<_Tp &&> <Dependent>
|   |   |     `-DeclRefExpr 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7f9c85874180 '__t' 'typename remove_reference<_Tp>::type &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, > forward
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
|   |   |-ParmVarDecl referenced __t 'typename remove_reference<_Tp>::type &&'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-StaticAssertDecl
|   |   | |   |-UnaryOperator '<dependent type>' prefix '!'
|   |   | |   | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   | |   `-StringLiteral 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr '_Tp' xvalue static_cast<_Tp &&> <Dependent>
|   |   |     `-DeclRefExpr 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7f9c858746a0 '__t' 'typename remove_reference<_Tp>::type &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, > __decay_copy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
|   |   |-ParmVarDecl referenced __t '_Tp &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     `-DeclRefExpr '_Tp' lvalue ParmVar 0x7f9c85874df8 '__t' '_Tp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, > struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class'
|   | | `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class'
|   | | `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class'
|   | | `-QualType 'const _Class' const
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class'
|   | | `-QualType 'const _Class' const
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class'
|   | | `-QualType 'volatile _Class' volatile
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class'
|   | | `-QualType 'volatile _Class' volatile
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class'
|   | | `-QualType 'const volatile _Class' const volatile
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class'
|   | | `-QualType 'const volatile _Class' const volatile
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class &'
|   | | `-LValueReferenceType '_Class &' dependent
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class &'
|   | | `-LValueReferenceType '_Class &' dependent
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class &'
|   | | `-LValueReferenceType 'const _Class &' dependent
|   | |   `-QualType 'const _Class' const
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class &'
|   | | `-LValueReferenceType 'const _Class &' dependent
|   | |   `-QualType 'const _Class' const
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class &'
|   | | `-LValueReferenceType 'volatile _Class &' dependent
|   | |   `-QualType 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class &'
|   | | `-LValueReferenceType 'volatile _Class &' dependent
|   | |   `-QualType 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class &'
|   | | `-LValueReferenceType 'const volatile _Class &' dependent
|   | |   `-QualType 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class &'
|   | | `-LValueReferenceType 'const volatile _Class &' dependent
|   | |   `-QualType 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class &&'
|   | | `-RValueReferenceType '_Class &&' dependent
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class &&'
|   | | `-RValueReferenceType '_Class &&' dependent
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class &&'
|   | | `-RValueReferenceType 'const _Class &&' dependent
|   | |   `-QualType 'const _Class' const
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class &&'
|   | | `-RValueReferenceType 'const _Class &&' dependent
|   | |   `-QualType 'const _Class' const
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class &&'
|   | | `-RValueReferenceType 'volatile _Class &&' dependent
|   | |   `-QualType 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class &&'
|   | | `-RValueReferenceType 'volatile _Class &&' dependent
|   | |   `-QualType 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class &&'
|   | | `-RValueReferenceType 'const volatile _Class &&' dependent
|   | |   `-QualType 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class &&'
|   | | `-RValueReferenceType 'const volatile _Class &&' dependent
|   | |   `-QualType 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class'
|   | | `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm '_Class'
|   | `-TypedefDecl _ReturnType '_Rp'
|   |   `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Rp'
|   |-ClassTemplateDecl __member_pointer_traits
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _MP
|   | `-CXXRecordDecl struct __member_pointer_traits definition
|   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
|   |   `-CXXRecordDecl implicit struct __member_pointer_traits
|   |-ClassTemplateDecl __member_pointer_class_type
|   | |-TemplateTypeParmDecl class depth 0 index 0 _DecayedFp
|   | `-CXXRecordDecl struct __member_pointer_class_type definition
|   |   `-CXXRecordDecl implicit struct __member_pointer_class_type
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_class_type definition
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _ClassType
|   | |-CXXRecordDecl implicit struct __member_pointer_class_type
|   | `-TypedefDecl type '_ClassType'
|   |   `-TemplateTypeParmType '_ClassType' dependent depth 0 index 1
|   |     `-TemplateTypeParm '_ClassType'
|   |-ClassTemplateDecl result_of
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Callable
|   | `-CXXRecordDecl class result_of
|   |-NamespaceDecl __is_construct
|   | `-CXXRecordDecl struct __nat definition
|   |   `-CXXRecordDecl implicit struct __nat
|   |-ClassTemplateDecl is_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl struct is_constructible definition
|   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, > implicit struct is_constructible
|   |-ClassTemplateDecl is_default_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_default_constructible definition
|   |   |-public 'is_constructible<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, > implicit struct is_default_constructible
|   |-ClassTemplateDecl is_copy_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_copy_constructible definition
|   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, > implicit struct is_copy_constructible
|   |-ClassTemplateDecl is_move_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_move_constructible definition
|   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, > implicit struct is_move_constructible
|   |-ClassTemplateDecl is_trivially_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl struct is_trivially_constructible definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, > implicit struct is_trivially_constructible
|   |-ClassTemplateDecl is_trivially_default_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_default_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, > implicit struct is_trivially_default_constructible
|   |-ClassTemplateDecl is_trivially_copy_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_copy_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, > implicit struct is_trivially_copy_constructible
|   |-ClassTemplateDecl is_trivially_move_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_move_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, > implicit struct is_trivially_move_constructible
|   |-ClassTemplateDecl is_trivially_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl struct is_trivially_assignable definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
|   |   `-CXXRecordDecl implicit struct is_trivially_assignable
|   |-ClassTemplateDecl is_trivially_copy_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_copy_assignable definition
|   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, > implicit struct is_trivially_copy_assignable
|   |-ClassTemplateDecl is_trivially_move_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_move_assignable definition
|   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, > implicit struct is_trivially_move_assignable
|   |-ClassTemplateDecl is_trivially_destructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_destructible definition
|   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, > implicit struct is_trivially_destructible
|   |-ClassTemplateDecl __libcpp_is_nothrow_constructible
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | |-TemplateTypeParmDecl class depth 0 index 2 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 3 ... _Args
|   | `-CXXRecordDecl struct __libcpp_is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_constructible definition
|   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_constructible
|   |-FunctionTemplateDecl __implicit_conversion_to
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl __implicit_conversion_to 'void (_Tp) noexcept'
|   |   |-ParmVarDecl '_Tp'
|   |   `-CompoundStmt
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_constructible definition
|   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_constructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr '_Bool' NonTypeTemplateParm 0x7f9c85897948 '_IsReference' '_Bool'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 1 _IsReference
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_constructible
|   |-ClassTemplateDecl is_nothrow_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl struct is_nothrow_constructible definition
|   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, > implicit struct is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl struct is_nothrow_constructible definition
|   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument pack
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, > implicit struct is_nothrow_constructible
|   |-ClassTemplateDecl is_nothrow_default_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_default_constructible definition
|   |   |-public 'is_nothrow_constructible<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, > implicit struct is_nothrow_default_constructible
|   |-ClassTemplateDecl is_nothrow_copy_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_copy_constructible definition
|   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, > implicit struct is_nothrow_copy_constructible
|   |-ClassTemplateDecl is_nothrow_move_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_move_constructible definition
|   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, > implicit struct is_nothrow_move_constructible
|   |-ClassTemplateDecl __libcpp_is_nothrow_assignable
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 2 _Arg
|   | `-CXXRecordDecl struct __libcpp_is_nothrow_assignable
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_assignable definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_assignable
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_assignable definition
|   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_assignable
|   |-ClassTemplateDecl is_nothrow_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl struct is_nothrow_assignable definition
|   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, > implicit struct is_nothrow_assignable
|   |-ClassTemplateDecl is_nothrow_copy_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_copy_assignable definition
|   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, > implicit struct is_nothrow_copy_assignable
|   |-ClassTemplateDecl is_nothrow_move_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_move_assignable definition
|   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, > implicit struct is_nothrow_move_assignable
|   |-ClassTemplateDecl __libcpp_is_nothrow_destructible
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_destructible definition
|   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_destructible
|   |-ClassTemplateDecl is_nothrow_destructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_destructible definition
|   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, > implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct is_nothrow_destructible definition
|   | |-public 'is_nothrow_destructible<_Tp>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, > implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct is_nothrow_destructible definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, > implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct is_nothrow_destructible definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, > implicit struct is_nothrow_destructible
|   |-ClassTemplateDecl is_pod
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_pod definition
|   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, > implicit struct is_pod
|   |-ClassTemplateDecl is_literal_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_literal_type definition
|   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, > implicit struct is_literal_type
|   |-ClassTemplateDecl is_standard_layout
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_standard_layout definition
|   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, > implicit struct is_standard_layout
|   |-ClassTemplateDecl is_trivially_copyable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_copyable definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, > implicit struct is_trivially_copyable
|   |-ClassTemplateDecl is_trivial
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivial definition
|   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, > implicit struct is_trivial
|   |-ClassTemplateDecl __is_reference_wrapper_impl
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_reference_wrapper_impl definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __is_reference_wrapper_impl
|   |-ClassTemplatePartialSpecializationDecl struct __is_reference_wrapper_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __is_reference_wrapper_impl
|   |-ClassTemplateDecl __is_reference_wrapper
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_reference_wrapper definition
|   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
|   |   `-CXXRecordDecl implicit struct __is_reference_wrapper
|   |-ClassTemplateDecl __check_complete
|   | |-TemplateTypeParmDecl class depth 0 index 0 ... _Tp
|   | |-CXXRecordDecl struct __check_complete
|   | `-ClassTemplateSpecialization '__check_complete'
|   |-ClassTemplateSpecializationDecl struct __check_complete definition
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Hp>'
|   | |-private '__check_complete<_T0, _Tp...>'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Tp
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Hp>'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __check_complete
|   | `-StaticAssertDecl
|   |   |-BinaryOperator '_Bool' '>'
|   |   | |-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof '_Tp'
|   |   | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 'int' 0
|   |   `-StringLiteral 'const char [23]' lvalue "Type must be complete."
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Rp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Rp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-TypeAliasTemplateDecl __enable_if_bullet1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | `-TypeAliasDecl __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet3
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet4
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet5
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | `-TypeAliasDecl __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet6
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-FunctionTemplateDecl __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Args
|   | `-FunctionDecl __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
|   |   |-ParmVarDecl 'struct std::__1::__any'
|   |   `-ParmVarDecl __args '_Args &&...'
|   |-FunctionTemplateDecl __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Args
|   | `-FunctionDecl __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
|   |   |-ParmVarDecl 'struct std::__1::__any'
|   |   `-ParmVarDecl __args '_Args &&...'
|   |-FunctionTemplateDecl __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
|   |   |     |   |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
|   |   |     |   | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     |   | `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858ba1b8 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858ba118 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7f9c858ba2f8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
|   |   |     |   |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
|   |   |     |   | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     |   | `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858beba8 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858beb08 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7f9c858bec88 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator '<dependent type>' '.*'
|   |   |     |   |-CallExpr '<dependent type>'
|   |   |     |   | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .get
|   |   |     |   |   `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858c0528 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858c0488 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7f9c858c0608 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator '<dependent type>' '.*'
|   |   |     |   |-CallExpr '<dependent type>'
|   |   |     |   | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .get
|   |   |     |   |   `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858c1b58 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858c1ab8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7f9c858c1c38 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator '<dependent type>' '.*'
|   |   |     |   |-ParenExpr '<dependent type>'
|   |   |     |   | `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
|   |   |     |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     |   |     `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858c3508 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858c3468 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7f9c858c35e8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator '<dependent type>' '.*'
|   |   |     |   |-ParenExpr '<dependent type>'
|   |   |     |   | `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
|   |   |     |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     |   |     `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858c5058 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858c4fb8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7f9c858c5138 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     | `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858c6b88 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858c6ae8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     | `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858d3e18 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858d3d78 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '.*'
|   |   |     |-CallExpr '<dependent type>'
|   |   |     | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .get
|   |   |     |   `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858d5038 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858d4f98 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '.*'
|   |   |     |-CallExpr '<dependent type>'
|   |   |     | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .get
|   |   |     |   `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858d5f78 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858d5ed8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '.*'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
|   |   |     |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     |     `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858d7268 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858d71c8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '.*'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
|   |   |     |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     |     `-DeclRefExpr '_A0' lvalue ParmVar 0x7f9c858d8708 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858d8668 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     | `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c858d90e8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7f9c858d9228 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |     | `-DeclRefExpr '_Fp' lvalue ParmVar 0x7f9c850cf7d8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9c85874350 0x7f9c85874870
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7f9c850cf8b8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, > __invokable_r
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | `-CXXRecordDecl struct __invokable_r definition
|   |   |-private '__check_complete<_Fp>'
|   |   |-CXXRecordDecl implicit struct __invokable_r
|   |   |-TypeAliasDecl referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
|   |   | `-DecltypeType 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7f9c858b9028 0x7f9c858bdc78 0x7f9c858c0df8 0x7f9c858c3fa8 0x7f9c858c7128 0x7f9c858d5488 0x7f9c858d7898 0x7f9c850cf288
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
|   |   |     | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
|   |   |         `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-TypeAliasTemplateDecl __invokable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-TypeAliasDecl __invokable '__invokable_r<void, _Fp, _Args...>'
|   |   `-TemplateSpecializationType '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
|   |     |-TemplateArgument type 'void'
|   |     |-TemplateArgument type '_Fp'
|   |     `-TemplateArgument type '_Args...'
|   |-ClassTemplateDecl __nothrow_invokable_r_imp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _IsInvokable
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1 _IsCVVoid
|   | |-TemplateTypeParmDecl class depth 0 index 2 _Ret
|   | |-TemplateTypeParmDecl class depth 0 index 3 _Fp
|   | |-TemplateTypeParmDecl class depth 0 index 4 ... _Args
|   | `-CXXRecordDecl struct __nothrow_invokable_r_imp definition
|   |   |-CXXRecordDecl implicit struct __nothrow_invokable_r_imp
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-CXXBoolLiteralExpr '_Bool' false
|   |-ClassTemplatePartialSpecializationDecl struct __nothrow_invokable_r_imp definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-CXXRecordDecl implicit referenced struct __nothrow_invokable_r_imp
|   | |-TypedefDecl referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
|   | | `-InjectedClassNameType '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
|   | |   `-ClassTemplatePartialSpecialization '__nothrow_invokable_r_imp'
|   | |-FunctionTemplateDecl __test_noexcept
|   | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tp
|   | | `-CXXMethodDecl __test_noexcept 'void (_Tp) noexcept' static
|   | |   `-ParmVarDecl '_Tp'
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXNoexceptExpr '_Bool'
|   |     `-CallExpr '<dependent type>'
|   |       |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7f9c850f8b40
|   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
|   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7f9c858b9028 0x7f9c858bdc78 0x7f9c858c0df8 0x7f9c858c3fa8 0x7f9c858c7128 0x7f9c858d5488 0x7f9c858d7898 0x7f9c850cf288
|   |         |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
|   |         | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   |         `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
|   |           `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
|   |             `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   |-ClassTemplatePartialSpecializationDecl struct __nothrow_invokable_r_imp definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-CXXRecordDecl implicit struct __nothrow_invokable_r_imp
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXNoexceptExpr '_Bool'
|   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
|   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7f9c858b9028 0x7f9c858bdc78 0x7f9c858c0df8 0x7f9c858c3fa8 0x7f9c858c7128 0x7f9c858d5488 0x7f9c858d7898 0x7f9c850cf288
|   |       |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
|   |       | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   |       `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
|   |         `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
|   |           `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   |-TypeAliasTemplateDecl __nothrow_invokable_r
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | `-TypeAliasDecl __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
|   |   `-TemplateSpecializationType '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     |-TemplateArgument type '_Ret'
|   |     |-TemplateArgument type '_Fp'
|   |     `-TemplateArgument type '_Args...'
|   |-ClassTemplateDecl __invoke_of
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl struct __invoke_of definition
|   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
|   |   `-CXXRecordDecl implicit struct __invoke_of
|   |-ClassTemplatePartialSpecializationDecl class result_of definition
|   | |-public '__invoke_of<_Fp, _Args...>'
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, > implicit class result_of
|   |-TypeAliasTemplateDecl result_of_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl result_of_t 'typename result_of<_Tp>::type'
|   |   `-DependentNameType 'typename result_of<_Tp>::type' dependent
|   |-ClassTemplateDecl __is_swappable
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_swappable
|   |-ClassTemplateDecl __is_nothrow_swappable
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_nothrow_swappable
|   |-FunctionTemplateDecl swap
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
|   |   |-ParmVarDecl referenced __x '_Tp &'
|   |   |-ParmVarDecl referenced __y '_Tp &'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __t '_Tp' callinit
|   |   | |   `-ParenListExpr 'NULL TYPE'
|   |   | |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
|   |   | |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7f9c85873c08
|   |   | |       `-DeclRefExpr '_Tp' lvalue ParmVar 0x7f9c85859a88 '__x' '_Tp &'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-DeclRefExpr '_Tp' lvalue ParmVar 0x7f9c85859a88 '__x' '_Tp &'
|   |   | | `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7f9c85873c08
|   |   | |   `-DeclRefExpr '_Tp' lvalue ParmVar 0x7f9c85859af8 '__y' '_Tp &'
|   |   | `-BinaryOperator '<dependent type>' '='
|   |   |   |-DeclRefExpr '_Tp' lvalue ParmVar 0x7f9c85859af8 '__y' '_Tp &'
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7f9c85873c08
|   |   |     `-DeclRefExpr '_Tp' lvalue Var 0x7f9c8585a088 '__t' '_Tp'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | `-FunctionDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
|   |   |-ParmVarDecl __a '_Tp (&)[_Np]'
|   |   |-ParmVarDecl __b '_Tp (&)[_Np]'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, > iter_swap
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ForwardIterator1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _ForwardIterator2
|   | `-FunctionDecl iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
|   |   |-ParmVarDecl referenced __a '_ForwardIterator1'
|   |   |-ParmVarDecl referenced __b '_ForwardIterator2'
|   |   |-CompoundStmt
|   |   | `-CallExpr '<dependent type>'
|   |   |   |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'swap' 0x7f9c8585ada8 0x7f9c85859f38
|   |   |   |-UnaryOperator '<dependent type>' prefix '*'
|   |   |   | `-DeclRefExpr '_ForwardIterator1' lvalue ParmVar 0x7f9c8585af98 '__a' '_ForwardIterator1'
|   |   |   `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     `-DeclRefExpr '_ForwardIterator2' lvalue ParmVar 0x7f9c8585b008 '__b' '_ForwardIterator2'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-NamespaceDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, > __detail
|   | |-ClassTemplateDecl __swappable_with
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | | | `-TemplateArgument type '_Tp'
|   | | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2 _NotVoid
|   | | | `-TemplateArgument expr
|   | | |   `-BinaryOperator '<dependent type>' '&&'
|   | | |     |-UnaryOperator '<dependent type>' prefix '!'
|   | | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | |     `-UnaryOperator '<dependent type>' prefix '!'
|   | | |       `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | `-CXXRecordDecl struct __swappable_with definition
|   | |   |-CXXRecordDecl implicit struct __swappable_with
|   | |   |-FunctionTemplateDecl __test_swap
|   | |   | |-TemplateTypeParmDecl referenced class depth 1 index 0 _LHS
|   | |   | |-TemplateTypeParmDecl referenced class depth 1 index 1 _RHS
|   | |   | `-CXXMethodDecl __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
|   | |   |   `-ParmVarDecl 'int'
|   | |   |-FunctionTemplateDecl __test_swap
|   | |   | |-TemplateTypeParmDecl class depth 1 index 0
|   | |   | |-TemplateTypeParmDecl class depth 1 index 1
|   | |   | `-CXXMethodDecl __test_swap 'struct std::__1::__nat (long)' static
|   | |   |   `-ParmVarDecl 'long'
|   | |   |-TypedefDecl referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
|   | |   | `-DecltypeType 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
|   | |   |   `-ParenExpr '<dependent type>'
|   | |   |     `-CallExpr '<dependent type>'
|   | |   |       |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7f9c858da478 0x7f9c858da1b8
|   | |   |       `-IntegerLiteral 'int' 0
|   | |   |-TypedefDecl referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
|   | |   | `-DecltypeType 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
|   | |   |   `-ParenExpr '<dependent type>'
|   | |   |     `-CallExpr '<dependent type>'
|   | |   |       |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7f9c858da478 0x7f9c858da1b8
|   | |   |       `-IntegerLiteral 'int' 0
|   | |   `-VarDecl value 'const _Bool' static cinit
|   | |     `-BinaryOperator '<dependent type>' '&&'
|   | |       |-UnaryOperator '<dependent type>' prefix '!'
|   | |       | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |       `-UnaryOperator '<dependent type>' prefix '!'
|   | |         `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-ClassTemplatePartialSpecializationDecl struct __swappable_with definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument integral 0
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | | `-CXXRecordDecl implicit struct __swappable_with
|   | |-ClassTemplateDecl __nothrow_swappable_with
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | | | `-TemplateArgument type '_Tp'
|   | | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2 _Swappable
|   | | | `-TemplateArgument expr
|   | | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | `-CXXRecordDecl struct __nothrow_swappable_with definition
|   | |   |-CXXRecordDecl implicit struct __nothrow_swappable_with
|   | |   `-VarDecl value 'const _Bool' static cinit
|   | |     `-BinaryOperator '_Bool' '&&'
|   | |       |-CXXNoexceptExpr '_Bool'
|   | |       | `-CallExpr '<dependent type>'
|   | |       |   |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'swap' 0x7f9c8585ada8 0x7f9c85859f38
|   | |       |   |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
|   | |       |   | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   | |       |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
|   | |       |     `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   | |       `-CXXNoexceptExpr '_Bool'
|   | |         `-CallExpr '<dependent type>'
|   | |           |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'swap' 0x7f9c8585ada8 0x7f9c85859f38
|   | |           |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
|   | |           | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   | |           `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
|   | |             `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9c850eb780
|   | `-ClassTemplatePartialSpecializationDecl struct __nothrow_swappable_with definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'type-parameter-0-0'
|   |   |-TemplateArgument type 'type-parameter-0-1'
|   |   |-TemplateArgument integral 0
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   |   `-CXXRecordDecl implicit struct __nothrow_swappable_with
|   |-ClassTemplateDecl prev 0x7f9c85859048 __is_swappable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl prev 0x7f9c85858fb0 struct __is_swappable definition
|   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
|   |   `-CXXRecordDecl implicit struct __is_swappable
|   |-ClassTemplateDecl prev 0x7f9c85859378 __is_nothrow_swappable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl prev 0x7f9c858592e0 struct __is_nothrow_swappable definition
|   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
|   |   `-CXXRecordDecl implicit struct __is_nothrow_swappable
|   |-ClassTemplateDecl underlying_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct underlying_type definition
|   |   |-CXXRecordDecl implicit struct underlying_type
|   |   `-TypedefDecl type '__underlying_type(_Tp)'
|   |     `-UnaryTransformType '__underlying_type(_Tp)' dependent underlying_type
|   |       `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl underlying_type_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl underlying_type_t 'typename underlying_type<_Tp>::type'
|   |   `-DependentNameType 'typename underlying_type<_Tp>::type' dependent
|   |-ClassTemplateDecl __sfinae_underlying_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __sfinae_underlying_type definition
|   |   |-CXXRecordDecl implicit struct __sfinae_underlying_type
|   |   |-TypedefDecl referenced type 'typename underlying_type<_Tp>::type'
|   |   | `-DependentNameType 'typename underlying_type<_Tp>::type' dependent
|   |   `-TypedefDecl __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
|   |     `-DecltypeType 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
|   |       `-BinaryOperator '<dependent type>' '+'
|   |         |-ParenExpr 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
|   |         | `-CStyleCastExpr 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
|   |         |   `-IntegerLiteral 'int' 1
|   |         `-IntegerLiteral 'int' 0
|   |-ClassTemplatePartialSpecializationDecl struct __sfinae_underlying_type definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __sfinae_underlying_type
|   |-FunctionDecl __convert_to_integral 'int (int)' inline
|   | |-ParmVarDecl used __val 'int'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 'int' lvalue ParmVar 0x7f9c858df5c0 '__val' 'int'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, > __convert_to_integral 'unsigned int (unsigned int)' inline
|   | |-ParmVarDecl used __val 'unsigned int'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 'unsigned int' lvalue ParmVar 0x7f9c858df848 '__val' 'unsigned int'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, > __convert_to_integral 'long (long)' inline
|   | |-ParmVarDecl used __val 'long'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'long' <LValueToRValue>
|   | |     `-DeclRefExpr 'long' lvalue ParmVar 0x7f9c858dfad0 '__val' 'long'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, > __convert_to_integral 'unsigned long (unsigned long)' inline
|   | |-ParmVarDecl used __val 'unsigned long'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'unsigned long' <LValueToRValue>
|   | |     `-DeclRefExpr 'unsigned long' lvalue ParmVar 0x7f9c858dfd50 '__val' 'unsigned long'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, > __convert_to_integral 'long long (long long)' inline
|   | |-ParmVarDecl used __val 'long long'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'long long' <LValueToRValue>
|   | |     `-DeclRefExpr 'long long' lvalue ParmVar 0x7f9c858dffd0 '__val' 'long long'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, > __convert_to_integral 'unsigned long long (unsigned long long)' inline
|   | |-ParmVarDecl used __val 'unsigned long long'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 'unsigned long long' lvalue ParmVar 0x7f9c858e0250 '__val' 'unsigned long long'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, > __convert_to_integral '__int128_t (__int128_t)' inline
|   | |-ParmVarDecl used __val '__int128_t':'__int128'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr '__int128_t':'__int128' <LValueToRValue>
|   | |     `-DeclRefExpr '__int128_t':'__int128' lvalue ParmVar 0x7f9c858e04c8 '__val' '__int128_t':'__int128'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, > __convert_to_integral '__uint128_t (__uint128_t)' inline
|   | |-ParmVarDecl used __val '__uint128_t':'unsigned __int128'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr '__uint128_t':'unsigned __int128' <LValueToRValue>
|   | |     `-DeclRefExpr '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7f9c858e0780 '__val' '__uint128_t':'unsigned __int128'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, > __convert_to_integral
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
|   |   |-ParmVarDecl referenced __val '_Tp'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-DeclRefExpr '_Tp' lvalue ParmVar 0x7f9c858e0d70 '__val' '_Tp'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, > __has_operator_addressof_member_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __has_operator_addressof_member_imp definition
|   |   |-CXXRecordDecl implicit struct __has_operator_addressof_member_imp
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Up
|   |   | `-CXXMethodDecl __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
|   |   |   `-ParmVarDecl 'int'
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl class depth 1 index 0
|   |   | `-CXXMethodDecl __test 'auto (long) -> std::__1::false_type' static
|   |   |   `-ParmVarDecl 'long'
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-ClassTemplateDecl __has_operator_addressof_free_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __has_operator_addressof_free_imp definition
|   |   |-CXXRecordDecl implicit struct __has_operator_addressof_free_imp
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Up
|   |   | `-CXXMethodDecl __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
|   |   |   `-ParmVarDecl 'int'
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl class depth 1 index 0
|   |   | `-CXXMethodDecl __test 'auto (long) -> std::__1::false_type' static
|   |   |   `-ParmVarDecl 'long'
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-ClassTemplateDecl __has_operator_addressof
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __has_operator_addressof definition
|   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
|   |   `-CXXRecordDecl implicit struct __has_operator_addressof
|   |-CXXRecordDecl referenced struct __extract_key_fail_tag definition
|   | `-CXXRecordDecl implicit struct __extract_key_fail_tag
|   |-CXXRecordDecl referenced struct __extract_key_self_tag definition
|   | `-CXXRecordDecl implicit struct __extract_key_self_tag
|   |-CXXRecordDecl referenced struct __extract_key_first_tag definition
|   | `-CXXRecordDecl implicit struct __extract_key_first_tag
|   |-ClassTemplateDecl __can_extract_key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _RawValTy
|   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
|   | `-CXXRecordDecl struct __can_extract_key definition
|   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
|   |   `-CXXRecordDecl implicit struct __can_extract_key
|   |-ClassTemplatePartialSpecializationDecl struct __can_extract_key definition
|   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Pair
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _First
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _Second
|   | `-CXXRecordDecl implicit struct __can_extract_key
|   |-ClassTemplateDecl __can_extract_map_key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl class depth 0 index 2 _ContainerValueTy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _RawValTy
|   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
|   | `-CXXRecordDecl struct __can_extract_map_key definition
|   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
|   |   `-CXXRecordDecl implicit struct __can_extract_map_key
|   |-ClassTemplatePartialSpecializationDecl struct __can_extract_map_key definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-2'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _RawValTy
|   | `-CXXRecordDecl implicit struct __can_extract_map_key
|   |-VarDecl parent 0x7f9c850af0d0 prev 0x7f9c850afea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> value 'const _Bool':'const _Bool' constexpr
|   `-VarDecl parent 0x7f9c850aee00 prev 0x7f9c850b0840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> value 'const _Bool':'const _Bool' constexpr
|-LinkageSpecDecl implicit C
| `-FunctionDecl implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 'void &'
|   |-NoThrowAttr Implicit
|   `-ConstAttr Implicit
|-ClassTemplateDecl A
| |-TemplateTypeParmDecl typename depth 0 index 0 T
| |-CXXRecordDecl class A definition
| | |-CXXRecordDecl implicit class A
| | |-AccessSpecDecl public
| | `-CXXMethodDecl m 'void (void)'
| |   `-CompoundStmt
| |-ClassTemplateSpecialization 'A'
| `-ClassTemplateSpecializationDecl class A definition
|   |-TemplateArgument type 'double'
|   |-CXXRecordDecl prev 0x7f9c858e8460 implicit class A
|   |-AccessSpecDecl public
|   `-CXXMethodDecl m 'void (void)'
|     `-CompoundStmt
|-ClassTemplateSpecializationDecl class A definition
| |-TemplateArgument type 'int'
| |-CXXRecordDecl prev 0x7f9c858e80c0 implicit class A
| |-AccessSpecDecl public
| `-CXXMethodDecl m 'void (void)'
|   `-CompoundStmt
|-FunctionTemplateDecl f
| |-TemplateTypeParmDecl referenced typename depth 0 index 0 T
| |-FunctionDecl f 'void (T)'
| | `-ParmVarDecl s 'T'
| |-FunctionDecl f 'void (double)'
| | |-TemplateArgument type 'double'
| | |-ParmVarDecl s 'double':'double'
| | `-CompoundStmt
| `-FunctionDecl f 'void (int)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl s 'int':'int'
|   `-CompoundStmt
|-FunctionTemplateDecl prev 0x7f9c858e8a38 f
| |-TemplateTypeParmDecl referenced typename depth 0 index 0 T
| |-FunctionDecl prev 0x7f9c858e89a0 f 'void (T)'
| | |-ParmVarDecl s 'T'
| | `-CompoundStmt
| |-Function 'f' 'void (double)'
| `-Function 'f' 'void (int)'
|-CXXRecordDecl referenced struct B definition
| |-CXXRecordDecl implicit struct B
| `-FunctionTemplateDecl operator()
|   |-TemplateTypeParmDecl referenced typename depth 0 index 0 T
|   |-CXXMethodDecl operator() 'void (const T &)'
|   | |-ParmVarDecl obj 'const T &'
|   | `-CompoundStmt
|   |-CXXMethodDecl used operator() 'void (const double &)'
|   | |-TemplateArgument type 'double'
|   | |-ParmVarDecl obj 'const double &'
|   | `-CompoundStmt
|   `-CXXMethodDecl used operator() 'void (const int &)'
|     |-TemplateArgument type 'int'
|     |-ParmVarDecl obj 'const int &'
|     `-CompoundStmt
|-ClassTemplateDecl is_void
| |-TemplateTypeParmDecl typename depth 0 index 0 T
| |-CXXRecordDecl struct is_void definition
| | |-public 'std::false_type':'struct std::__1::integral_constant<_Bool, false>'
| | `-CXXRecordDecl implicit struct is_void
| |-ClassTemplateSpecialization 'is_void'
| `-ClassTemplateSpecializationDecl struct is_void definition
|   |-public 'std::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |-TemplateArgument type 'char'
|   `-CXXRecordDecl prev 0x7f9c858eb0e8 implicit struct is_void
|-ClassTemplateSpecializationDecl struct is_void definition
| |-public 'std::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |-TemplateArgument type 'void'
| `-CXXRecordDecl implicit struct is_void
`-FunctionDecl main 'int (void)'
  `-CompoundStmt
    |-DeclStmt
    | `-VarDecl ai 'A<int>':'class A<int>' listinit
    |   `-InitListExpr 'A<int>':'class A<int>'
    |-DeclStmt
    | `-VarDecl used b 'struct B' listinit
    |   `-InitListExpr 'struct B'
    |-ExprWithCleanups 'void'
    | `-CXXOperatorCallExpr 'void'
    |   |-ImplicitCastExpr 'void (*)(const double &)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'void (const double &)' lvalue CXXMethod 0x7f9c858eaa30 'operator()' 'void (const double &)'
    |   |-DeclRefExpr 'struct B' lvalue Var 0x7f9c858ea578 'b' 'struct B'
    |   `-MaterializeTemporaryExpr 'const double':'const double' lvalue
    |     `-FloatingLiteral 'double' 1.000000e+00
    |-ExprWithCleanups 'void'
    | `-CXXOperatorCallExpr 'void'
    |   |-ImplicitCastExpr 'void (*)(const int &)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'void (const int &)' lvalue CXXMethod 0x7f9c858eae60 'operator()' 'void (const int &)'
    |   |-DeclRefExpr 'struct B' lvalue Var 0x7f9c858ea578 'b' 'struct B'
    |   `-MaterializeTemporaryExpr 'const int':'const int' lvalue
    |     `-IntegerLiteral 'int' 1
    |-DeclStmt
    | `-VarDecl iv1 'const _Bool':'const _Bool' cinit
    |   `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
    |     `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7f9c850afea8 'value' 'const _Bool':'const _Bool'
    |-DeclStmt
    | `-VarDecl iv2 'const _Bool':'const _Bool' cinit
    |   `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
    |     `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7f9c850b0840 'value' 'const _Bool':'const _Bool'
    `-ReturnStmt
      `-IntegerLiteral 'int' 0
