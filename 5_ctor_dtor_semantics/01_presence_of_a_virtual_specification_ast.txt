TranslationUnitDecl 0x7f96148326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f9614832c60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f9614832940 '__int128'
|-TypedefDecl 0x7f9614832cd0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f9614832960 'unsigned __int128'
|-TypedefDecl 0x7f9614833018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f9614832dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f9614832d28 '__NSConstantString_tag'
|-TypedefDecl 0x7f96148330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f9614833070 'char *'
|   `-BuiltinType 0x7f9614832760 'char'
|-TypedefDecl 0x7f9614866200 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f9614833390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f96148331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7f9614833108 '__va_list_tag'
|-CXXRecordDecl 0x7f9614866258 <object_model/5_ctor_dtor_semantics/01_presence_of_a_virtual_specification.cpp:1:1, line:29:1> line:1:8 referenced struct B1 definition
| |-CXXRecordDecl 0x7f9614866378 <col:1, col:8> col:8 implicit referenced struct B1
| |-FieldDecl 0x7f9614866428 <line:2:5, col:16> col:11 referenced cp 'char *'
| | `-ImplicitCastExpr 0x7f9614866e30 <col:16> 'char *' <NullToPointer>
| |   `-CXXNullPtrLiteralExpr 0x7f9614866e18 <col:16> 'nullptr_t'
| |-CXXConstructorDecl 0x7f9614866510 <line:4:5, line:7:5> line:4:5 used B1 'void (void)'
| | |-CXXCtorInitializer Field 0x7f9614866428 'cp' 'char *'
| | | `-CXXDefaultInitExpr 0x7f9614866e48 <col:5> 'char *'
| | `-CompoundStmt 0x7f96150003c8 <line:5:5, line:7:5>
| |   `-BinaryOperator 0x7f96150003a0 <line:6:9, col:25> 'char *' lvalue '='
| |     |-MemberExpr 0x7f9614866eb0 <col:9> 'char *' lvalue ->cp 0x7f9614866428
| |     | `-CXXThisExpr 0x7f9614866e98 <col:9> 'struct B1 *' this
| |     `-CXXNewExpr 0x7f9615000348 <col:14, col:25> 'char *' array Function 0x7f96148670b0 'operator new[]' 'void *(unsigned long)'
| |       `-ImplicitCastExpr 0x7f9614866f18 <col:23> 'unsigned long' <IntegralCast>
| |         `-IntegerLiteral 0x7f9614866ee8 <col:23> 'int' 10
| |-CXXConstructorDecl 0x7f96148666c0 <line:9:5, col:24> col:5 B1 'void (const struct B1 &)'
| | |-ParmVarDecl 0x7f96148665f8 <col:8, col:18> col:18 rhs 'const struct B1 &'
| | |-CXXCtorInitializer Field 0x7f9614866428 'cp' 'char *'
| | | `-CXXDefaultInitExpr 0x7f96150003e8 <col:5> 'char *'
| | `-CompoundStmt 0x7f9615000438 <col:23, col:24>
| |-CXXConstructorDecl 0x7f9614866870 <line:11:5, col:19> col:5 B1 'void (struct B1 &&)'
| | |-ParmVarDecl 0x7f96148667a8 <col:8, col:13> col:13 rhs 'struct B1 &&'
| | |-CXXCtorInitializer Field 0x7f9614866428 'cp' 'char *'
| | | `-CXXDefaultInitExpr 0x7f9615000450 <col:5> 'char *'
| | `-CompoundStmt 0x7f96150004a0 <col:18, col:19>
| |-CXXDestructorDecl 0x7f9614866970 <line:13:5, line:16:5> line:13:13 used ~B1 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f9615000580 <line:14:5, line:16:5>
| |   `-CXXDeleteExpr 0x7f9615000558 <line:15:9, col:18> 'void' array Function 0x7f96150001c0 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x7f9615000540 <col:18> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x7f9615000508 <col:18> 'char *' lvalue ->cp 0x7f9614866428
| |         `-CXXThisExpr 0x7f96150004f0 <col:18> 'struct B1 *' this
| |-CXXMethodDecl 0x7f9614866b10 <line:18:5, line:21:5> line:18:9 operator= 'struct B1 &(const struct B1 &)'
| | |-ParmVarDecl 0x7f9614866a20 <col:19, col:29> col:29 rhs 'const struct B1 &'
| | `-CompoundStmt 0x7f96150005f0 <line:19:5, line:21:5>
| |   `-ReturnStmt 0x7f96150005d8 <line:20:9, col:17>
| |     `-UnaryOperator 0x7f96150005b8 <col:16, col:17> 'struct B1' lvalue prefix '*'
| |       `-CXXThisExpr 0x7f96150005a0 <col:17> 'struct B1 *' this
| |-CXXMethodDecl 0x7f9614866c80 <line:23:5, line:26:5> line:23:9 operator= 'struct B1 &(struct B1 &&)'
| | |-ParmVarDecl 0x7f9614866bc0 <col:19, col:24> col:24 rhs 'struct B1 &&'
| | `-CompoundStmt 0x7f9615000660 <line:24:5, line:26:5>
| |   `-ReturnStmt 0x7f9615000648 <line:25:9, col:17>
| |     `-UnaryOperator 0x7f9615000628 <col:16, col:17> 'struct B1' lvalue prefix '*'
| |       `-CXXThisExpr 0x7f9615000610 <col:17> 'struct B1 *' this
| `-CXXMethodDecl 0x7f9614866d40 <line:28:5, col:23> col:18 used m 'void (void)' virtual
|   `-CompoundStmt 0x7f9615000680 <col:22, col:23>
|-FunctionDecl 0x7f9614866f68 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x7f9614867048 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x7f9614867000 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7f96148670b0 <<invalid sloc>> <invalid sloc> implicit used operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x7f9614867190 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x7f9614867148 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7f9615000078 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x7f9615000158 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x7f9615000110 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7f96150001c0 <<invalid sloc>> <invalid sloc> implicit used operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x7f96150002a0 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x7f9615000258 <<invalid sloc>> Implicit Default
|-CXXRecordDecl 0x7f9615000698 <line:31:1, line:59:1> line:31:8 referenced struct D1 definition
| |-public 'struct B1'
| |-CXXRecordDecl 0x7f96150007f8 <col:1, col:8> col:8 implicit referenced struct D1
| |-FieldDecl 0x7f96150008d0 <line:32:5, col:15> col:10 referenced ip 'int *'
| | `-ImplicitCastExpr 0x7f9615001760 <col:15> 'int *' <NullToPointer>
| |   `-CXXNullPtrLiteralExpr 0x7f9615001748 <col:15> 'nullptr_t'
| |-CXXConstructorDecl 0x7f9615000988 <line:34:5, line:37:5> line:34:5 used D1 'void (void)'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7f9615001778 <col:5> 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7f96150008d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 0x7f96150017e0 <col:5> 'int *'
| | `-CompoundStmt 0x7f9615001998 <line:35:5, line:37:5>
| |   `-BinaryOperator 0x7f9615001970 <line:36:9, col:24> 'int *' lvalue '='
| |     |-MemberExpr 0x7f9615001850 <col:9> 'int *' lvalue ->ip 0x7f96150008d0
| |     | `-CXXThisExpr 0x7f9615001838 <col:9> 'struct D1 *' this
| |     `-CXXNewExpr 0x7f9615001918 <col:14, col:24> 'int *' array Function 0x7f96148670b0 'operator new[]' 'void *(unsigned long)'
| |       `-ImplicitCastExpr 0x7f96150018c0 <col:22> 'unsigned long' <IntegralCast>
| |         `-IntegerLiteral 0x7f9615001888 <col:22> 'int' 10
| |-CXXConstructorDecl 0x7f9615000b30 <line:39:5, col:24> col:5 D1 'void (const struct D1 &)'
| | |-ParmVarDecl 0x7f9615000a68 <col:8, col:18> col:18 rhs 'const struct D1 &'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7f96150019b8 <col:5> 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7f96150008d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 0x7f9615001a20 <col:5> 'int *'
| | `-CompoundStmt 0x7f9615001a78 <col:23, col:24>
| |-CXXConstructorDecl 0x7f9615000ce0 <line:41:5, col:19> col:5 D1 'void (struct D1 &&)'
| | |-ParmVarDecl 0x7f9615000c18 <col:8, col:13> col:13 rhs 'struct D1 &&'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7f9615001a90 <col:5> 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7f96150008d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 0x7f9615001af8 <col:5> 'int *'
| | `-CompoundStmt 0x7f9615001b50 <col:18, col:19>
| |-CXXDestructorDecl 0x7f9615000de0 <line:43:5, line:46:5> line:43:13 used ~D1 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f9615001bf8 <line:44:5, line:46:5>
| |   `-CXXDeleteExpr 0x7f9615001bd0 <line:45:9, col:18> 'void' array Function 0x7f96150001c0 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x7f9615001bb8 <col:18> 'int *' <LValueToRValue>
| |       `-MemberExpr 0x7f9615001b80 <col:18> 'int *' lvalue ->ip 0x7f96150008d0
| |         `-CXXThisExpr 0x7f9615001b68 <col:18> 'struct D1 *' this
| |-CXXMethodDecl 0x7f9615001400 <line:48:5, line:51:5> line:48:9 operator= 'struct D1 &(const struct D1 &)'
| | |-ParmVarDecl 0x7f9615000e90 <col:19, col:29> col:29 rhs 'const struct D1 &'
| | `-CompoundStmt 0x7f9615001c68 <line:49:5, line:51:5>
| |   `-ReturnStmt 0x7f9615001c50 <line:50:9, col:17>
| |     `-UnaryOperator 0x7f9615001c30 <col:16, col:17> 'struct D1' lvalue prefix '*'
| |       `-CXXThisExpr 0x7f9615001c18 <col:17> 'struct D1 *' this
| |-CXXMethodDecl 0x7f9615001570 <line:53:5, line:56:5> line:53:9 operator= 'struct D1 &(struct D1 &&)'
| | |-ParmVarDecl 0x7f96150014b0 <col:19, col:24> col:24 rhs 'struct D1 &&'
| | `-CompoundStmt 0x7f9615001cd8 <line:54:5, line:56:5>
| |   `-ReturnStmt 0x7f9615001cc0 <line:55:9, col:17>
| |     `-UnaryOperator 0x7f9615001ca0 <col:16, col:17> 'struct D1' lvalue prefix '*'
| |       `-CXXThisExpr 0x7f9615001c88 <col:17> 'struct D1 *' this
| `-CXXMethodDecl 0x7f9615001630 <line:58:5, col:24> col:10 used m 'void (void)'
|   |-CompoundStmt 0x7f9615001cf8 <col:23, col:24>
|   `-OverrideAttr 0x7f96150016c8 <col:14>
`-FunctionDecl 0x7f9615001d68 <line:61:1, line:85:1> line:61:5 main 'int (void)'
  `-CompoundStmt 0x7f96150036f8 <line:62:1, line:85:1>
    |-DeclStmt 0x7f9615001f48 <line:63:5, col:12>
    | `-VarDecl 0x7f9615001e78 <col:5, col:11> col:8 used b1 'struct B1' listinit
    |   `-CXXConstructExpr 0x7f9615001f18 <col:8, col:11> 'struct B1' 'void (void)'
    |-DeclStmt 0x7f9615002040 <line:64:5, col:12>
    | `-VarDecl 0x7f9615001f70 <col:5, col:11> col:8 used d1 'struct D1' listinit
    |   `-CXXConstructExpr 0x7f9615002010 <col:8, col:11> 'struct D1' 'void (void)'
    |-DeclStmt 0x7f9615002148 <line:67:5, col:17>
    | `-VarDecl 0x7f9615002068 <col:5, col:15> col:9 used b1r 'struct B1 &' cinit
    |   `-DeclRefExpr 0x7f96150020c8 <col:15> 'struct B1' lvalue Var 0x7f9615001e78 'b1' 'struct B1'
    |-DeclStmt 0x7f9615003000 <line:68:5, col:17>
    | `-VarDecl 0x7f9615002170 <col:5, col:15> col:9 used d1r 'struct B1 &' cinit
    |   `-ImplicitCastExpr 0x7f96150021f8 <col:15> 'struct B1' lvalue <DerivedToBase (B1)>
    |     `-DeclRefExpr 0x7f96150021d0 <col:15> 'struct D1' lvalue Var 0x7f9615001f70 'd1' 'struct D1'
    |-CXXMemberCallExpr 0x7f9615003078 <line:69:5, col:11> 'void'
    | `-MemberExpr 0x7f9615003040 <col:5, col:9> '<bound member function type>' .m 0x7f9614866d40
    |   `-DeclRefExpr 0x7f9615003018 <col:5> 'struct B1' lvalue Var 0x7f9615002068 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 0x7f9615003100 <line:70:5, col:11> 'void'
    | `-MemberExpr 0x7f96150030c8 <col:5, col:9> '<bound member function type>' .m 0x7f9614866d40
    |   `-DeclRefExpr 0x7f96150030a0 <col:5> 'struct B1' lvalue Var 0x7f9615002170 'd1r' 'struct B1 &'
    |-DeclStmt 0x7f96150031e0 <line:73:5, col:18>
    | `-VarDecl 0x7f9615003138 <col:5, col:16> col:9 used b1p 'struct B1 *' cinit
    |   `-UnaryOperator 0x7f96150031c0 <col:15, col:16> 'struct B1 *' prefix '&'
    |     `-DeclRefExpr 0x7f9615003198 <col:16> 'struct B1' lvalue Var 0x7f9615001e78 'b1' 'struct B1'
    |-DeclStmt 0x7f96150032d0 <line:74:5, col:18>
    | `-VarDecl 0x7f9615003208 <col:5, col:16> col:9 used d1p 'struct B1 *' cinit
    |   `-ImplicitCastExpr 0x7f96150032b0 <col:15, col:16> 'struct B1 *' <DerivedToBase (B1)>
    |     `-UnaryOperator 0x7f9615003290 <col:15, col:16> 'struct D1 *' prefix '&'
    |       `-DeclRefExpr 0x7f9615003268 <col:16> 'struct D1' lvalue Var 0x7f9615001f70 'd1' 'struct D1'
    |-CXXMemberCallExpr 0x7f9615003360 <line:75:5, col:12> 'void'
    | `-MemberExpr 0x7f9615003328 <col:5, col:10> '<bound member function type>' ->m 0x7f9614866d40
    |   `-ImplicitCastExpr 0x7f9615003310 <col:5> 'struct B1 *' <LValueToRValue>
    |     `-DeclRefExpr 0x7f96150032e8 <col:5> 'struct B1 *' lvalue Var 0x7f9615003138 'b1p' 'struct B1 *'
    |-CXXMemberCallExpr 0x7f9615003400 <line:76:5, col:12> 'void'
    | `-MemberExpr 0x7f96150033c8 <col:5, col:10> '<bound member function type>' ->m 0x7f9614866d40
    |   `-ImplicitCastExpr 0x7f96150033b0 <col:5> 'struct B1 *' <LValueToRValue>
    |     `-DeclRefExpr 0x7f9615003388 <col:5> 'struct B1 *' lvalue Var 0x7f9615003208 'd1p' 'struct B1 *'
    |-CXXMemberCallExpr 0x7f96150034d0 <line:79:5, col:15> 'void'
    | `-MemberExpr 0x7f9615003480 <col:5, col:13> '<bound member function type>' .m 0x7f9614866d40
    |   `-DeclRefExpr 0x7f9615003428 <col:5> 'struct B1' lvalue Var 0x7f9615002068 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 0x7f9615003558 <line:80:5, col:11> 'void'
    | `-MemberExpr 0x7f9615003520 <col:5, col:9> '<bound member function type>' .m 0x7f9614866d40
    |   `-DeclRefExpr 0x7f96150034f8 <col:5> 'struct B1' lvalue Var 0x7f9615002068 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 0x7f9615003610 <line:81:5, col:15> 'void'
    | `-MemberExpr 0x7f96150035c0 <col:5, col:13> '<bound member function type>' .m 0x7f9614866d40
    |   `-DeclRefExpr 0x7f9615003580 <col:5> 'struct B1' lvalue Var 0x7f9615002170 'd1r' 'struct B1 &'
    |-CXXMemberCallExpr 0x7f9615003698 <line:82:5, col:11> 'void'
    | `-MemberExpr 0x7f9615003660 <col:5, col:9> '<bound member function type>' .m 0x7f9614866d40
    |   `-DeclRefExpr 0x7f9615003638 <col:5> 'struct B1' lvalue Var 0x7f9615002170 'd1r' 'struct B1 &'
    `-ReturnStmt 0x7f96150036e0 <line:84:5, col:12>
      `-IntegerLiteral 0x7f96150036c0 <col:12> 'int' 0
