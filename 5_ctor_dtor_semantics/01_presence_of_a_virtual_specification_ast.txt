TranslationUnitDecl 0x7fb9d5019cd0
|-TypedefDecl implicit __int128_t '__int128'
| `-BuiltinType '__int128'
|-TypedefDecl implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 'unsigned __int128'
|-TypedefDecl implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 'struct __NSConstantString_tag'
|   `-CXXRecord '__NSConstantString_tag'
|-TypedefDecl implicit __builtin_ms_va_list 'char *'
| `-PointerType 'char *'
|   `-BuiltinType 'char'
|-TypedefDecl implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 'struct __va_list_tag [1]' 1
|   `-RecordType 'struct __va_list_tag'
|     `-CXXRecord '__va_list_tag'
|-CXXRecordDecl referenced struct B1 definition
| |-CXXRecordDecl implicit referenced struct B1
| |-FieldDecl referenced cp 'char *'
| | `-ImplicitCastExpr 'char *' <NullToPointer>
| |   `-CXXNullPtrLiteralExpr 'nullptr_t'
| |-CXXConstructorDecl used B1 'void (void)'
| | |-CXXCtorInitializer Field 0x7fb9d504da28 'cp' 'char *'
| | | `-CXXDefaultInitExpr 'char *'
| | `-CompoundStmt
| |   `-BinaryOperator 'char *' lvalue '='
| |     |-MemberExpr 'char *' lvalue ->cp 0x7fb9d504da28
| |     | `-CXXThisExpr 'struct B1 *' this
| |     `-CXXNewExpr 'char *' array Function 0x7fb9d504e6b0 'operator new[]' 'void *(unsigned long)'
| |       `-ImplicitCastExpr 'unsigned long' <IntegralCast>
| |         `-IntegerLiteral 'int' 10
| |-CXXConstructorDecl B1 'void (const struct B1 &)'
| | |-ParmVarDecl rhs 'const struct B1 &'
| | |-CXXCtorInitializer Field 0x7fb9d504da28 'cp' 'char *'
| | | `-CXXDefaultInitExpr 'char *'
| | `-CompoundStmt
| |-CXXConstructorDecl B1 'void (struct B1 &&)'
| | |-ParmVarDecl rhs 'struct B1 &&'
| | |-CXXCtorInitializer Field 0x7fb9d504da28 'cp' 'char *'
| | | `-CXXDefaultInitExpr 'char *'
| | `-CompoundStmt
| |-CXXDestructorDecl used ~B1 'void (void) noexcept' virtual
| | `-CompoundStmt
| |   `-CXXDeleteExpr 'void' array Function 0x7fb9d5078dc0 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 'char *' <LValueToRValue>
| |       `-MemberExpr 'char *' lvalue ->cp 0x7fb9d504da28
| |         `-CXXThisExpr 'struct B1 *' this
| |-CXXMethodDecl operator= 'struct B1 &(const struct B1 &)'
| | |-ParmVarDecl rhs 'const struct B1 &'
| | `-CompoundStmt
| |   `-ReturnStmt
| |     `-UnaryOperator 'struct B1' lvalue prefix '*'
| |       `-CXXThisExpr 'struct B1 *' this
| |-CXXMethodDecl operator= 'struct B1 &(struct B1 &&)'
| | |-ParmVarDecl rhs 'struct B1 &&'
| | `-CompoundStmt
| |   `-ReturnStmt
| |     `-UnaryOperator 'struct B1' lvalue prefix '*'
| |       `-CXXThisExpr 'struct B1 *' this
| `-CXXMethodDecl used m 'void (void)' virtual
|   `-CompoundStmt
|-FunctionDecl implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl implicit 'unsigned long'
| `-VisibilityAttr Implicit Default
|-FunctionDecl implicit used operator new[] 'void *(unsigned long)'
| |-ParmVarDecl implicit 'unsigned long'
| `-VisibilityAttr Implicit Default
|-FunctionDecl implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl implicit 'void *'
| `-VisibilityAttr Implicit Default
|-FunctionDecl implicit used operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl implicit 'void *'
| `-VisibilityAttr Implicit Default
|-CXXRecordDecl referenced struct D1 definition
| |-public 'struct B1'
| |-CXXRecordDecl implicit referenced struct D1
| |-FieldDecl referenced ip 'int *'
| | `-ImplicitCastExpr 'int *' <NullToPointer>
| |   `-CXXNullPtrLiteralExpr 'nullptr_t'
| |-CXXConstructorDecl used D1 'void (void)'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7fb9d50794d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 'int *'
| | `-CompoundStmt
| |   `-BinaryOperator 'int *' lvalue '='
| |     |-MemberExpr 'int *' lvalue ->ip 0x7fb9d50794d0
| |     | `-CXXThisExpr 'struct D1 *' this
| |     `-CXXNewExpr 'int *' array Function 0x7fb9d504e6b0 'operator new[]' 'void *(unsigned long)'
| |       `-ImplicitCastExpr 'unsigned long' <IntegralCast>
| |         `-IntegerLiteral 'int' 10
| |-CXXConstructorDecl D1 'void (const struct D1 &)'
| | |-ParmVarDecl rhs 'const struct D1 &'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7fb9d50794d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 'int *'
| | `-CompoundStmt
| |-CXXConstructorDecl D1 'void (struct D1 &&)'
| | |-ParmVarDecl rhs 'struct D1 &&'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7fb9d50794d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 'int *'
| | `-CompoundStmt
| |-CXXDestructorDecl used ~D1 'void (void) noexcept' virtual
| | `-CompoundStmt
| |   `-CXXDeleteExpr 'void' array Function 0x7fb9d5078dc0 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 'int *' <LValueToRValue>
| |       `-MemberExpr 'int *' lvalue ->ip 0x7fb9d50794d0
| |         `-CXXThisExpr 'struct D1 *' this
| |-CXXMethodDecl operator= 'struct D1 &(const struct D1 &)'
| | |-ParmVarDecl rhs 'const struct D1 &'
| | `-CompoundStmt
| |   `-ReturnStmt
| |     `-UnaryOperator 'struct D1' lvalue prefix '*'
| |       `-CXXThisExpr 'struct D1 *' this
| |-CXXMethodDecl operator= 'struct D1 &(struct D1 &&)'
| | |-ParmVarDecl rhs 'struct D1 &&'
| | `-CompoundStmt
| |   `-ReturnStmt
| |     `-UnaryOperator 'struct D1' lvalue prefix '*'
| |       `-CXXThisExpr 'struct D1 *' this
| `-CXXMethodDecl used m 'void (void)'
|   |-CompoundStmt
|   `-OverrideAttr
`-FunctionDecl main 'int (void)'
  `-CompoundStmt
    |-DeclStmt
    | `-VarDecl used b1 'struct B1' listinit
    |   `-CXXConstructExpr 'struct B1' 'void (void)'
    |-DeclStmt
    | `-VarDecl used d1 'struct D1' listinit
    |   `-CXXConstructExpr 'struct D1' 'void (void)'
    |-DeclStmt
    | `-VarDecl used b1r 'struct B1 &' cinit
    |   `-DeclRefExpr 'struct B1' lvalue Var 0x7fb9d507a678 'b1' 'struct B1'
    |-DeclStmt
    | `-VarDecl used d1r 'struct B1 &' cinit
    |   `-ImplicitCastExpr 'struct B1' lvalue <DerivedToBase (B1)>
    |     `-DeclRefExpr 'struct D1' lvalue Var 0x7fb9d507a770 'd1' 'struct D1'
    |-CXXMemberCallExpr 'void'
    | `-MemberExpr '<bound member function type>' .m 0x7fb9d504e340
    |   `-DeclRefExpr 'struct B1' lvalue Var 0x7fb9d507a868 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 'void'
    | `-MemberExpr '<bound member function type>' .m 0x7fb9d504e340
    |   `-DeclRefExpr 'struct B1' lvalue Var 0x7fb9d507a970 'd1r' 'struct B1 &'
    |-DeclStmt
    | `-VarDecl used b1p 'struct B1 *' cinit
    |   `-UnaryOperator 'struct B1 *' prefix '&'
    |     `-DeclRefExpr 'struct B1' lvalue Var 0x7fb9d507a678 'b1' 'struct B1'
    |-DeclStmt
    | `-VarDecl used d1p 'struct B1 *' cinit
    |   `-ImplicitCastExpr 'struct B1 *' <DerivedToBase (B1)>
    |     `-UnaryOperator 'struct D1 *' prefix '&'
    |       `-DeclRefExpr 'struct D1' lvalue Var 0x7fb9d507a770 'd1' 'struct D1'
    |-CXXMemberCallExpr 'void'
    | `-MemberExpr '<bound member function type>' ->m 0x7fb9d504e340
    |   `-ImplicitCastExpr 'struct B1 *' <LValueToRValue>
    |     `-DeclRefExpr 'struct B1 *' lvalue Var 0x7fb9d507b138 'b1p' 'struct B1 *'
    |-CXXMemberCallExpr 'void'
    | `-MemberExpr '<bound member function type>' ->m 0x7fb9d504e340
    |   `-ImplicitCastExpr 'struct B1 *' <LValueToRValue>
    |     `-DeclRefExpr 'struct B1 *' lvalue Var 0x7fb9d507b208 'd1p' 'struct B1 *'
    |-CXXMemberCallExpr 'void'
    | `-MemberExpr '<bound member function type>' .m 0x7fb9d504e340
    |   `-DeclRefExpr 'struct B1' lvalue Var 0x7fb9d507a868 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 'void'
    | `-MemberExpr '<bound member function type>' .m 0x7fb9d504e340
    |   `-DeclRefExpr 'struct B1' lvalue Var 0x7fb9d507a868 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 'void'
    | `-MemberExpr '<bound member function type>' .m 0x7fb9d504e340
    |   `-DeclRefExpr 'struct B1' lvalue Var 0x7fb9d507a970 'd1r' 'struct B1 &'
    |-CXXMemberCallExpr 'void'
    | `-MemberExpr '<bound member function type>' .m 0x7fb9d504e340
    |   `-DeclRefExpr 'struct B1' lvalue Var 0x7fb9d507a970 'd1r' 'struct B1 &'
    `-ReturnStmt
      `-IntegerLiteral 'int' 0
