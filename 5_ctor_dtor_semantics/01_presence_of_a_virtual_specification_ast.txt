TranslationUnitDecl 0x7fb2860324d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fb286032a60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fb286032740 '__int128'
|-TypedefDecl 0x7fb286032ad0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fb286032760 'unsigned __int128'
|-TypedefDecl 0x7fb286032e18 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fb286032bc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fb286032b28 '__NSConstantString_tag'
|-TypedefDecl 0x7fb286032eb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fb286032e70 'char *'
|   `-BuiltinType 0x7fb286032560 'char'
|-TypedefDecl 0x7fb286065c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fb286033190 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fb286032fa0 'struct __va_list_tag'
|     `-CXXRecord 0x7fb286032f08 '__va_list_tag'
|-CXXRecordDecl 0x7fb286065c58 </Users/tskull/Documents/Programming/Cpp/object_model_refined/5_ctor_dtor_semantics/01_presence_of_a_virtual_specification.cpp:1:1, line:29:1> line:1:8 referenced struct B1 definition
| |-CXXRecordDecl 0x7fb286065d78 <col:1, col:8> col:8 implicit referenced struct B1
| |-FieldDecl 0x7fb286065e28 <line:2:5, col:16> col:11 referenced cp 'char *'
| | `-ImplicitCastExpr 0x7fb286066830 <col:16> 'char *' <NullToPointer>
| |   `-CXXNullPtrLiteralExpr 0x7fb286066818 <col:16> 'nullptr_t'
| |-CXXConstructorDecl 0x7fb286065f10 <line:4:5, line:7:5> line:4:5 used B1 'void (void)'
| | |-CXXCtorInitializer Field 0x7fb286065e28 'cp' 'char *'
| | | `-CXXDefaultInitExpr 0x7fb286066848 <col:5> 'char *'
| | `-CompoundStmt 0x7fb2860913c8 <line:5:5, line:7:5>
| |   `-BinaryOperator 0x7fb2860913a0 <line:6:9, col:25> 'char *' lvalue '='
| |     |-MemberExpr 0x7fb2860668b0 <col:9> 'char *' lvalue ->cp 0x7fb286065e28
| |     | `-CXXThisExpr 0x7fb286066898 <col:9> 'struct B1 *' this
| |     `-CXXNewExpr 0x7fb286091348 <col:14, col:25> 'char *' array Function 0x7fb286066ab0 'operator new[]' 'void *(unsigned long)'
| |       `-ImplicitCastExpr 0x7fb286066918 <col:23> 'unsigned long' <IntegralCast>
| |         `-IntegerLiteral 0x7fb2860668e8 <col:23> 'int' 10
| |-CXXConstructorDecl 0x7fb2860660c0 <line:9:5, col:24> col:5 B1 'void (const struct B1 &)'
| | |-ParmVarDecl 0x7fb286065ff8 <col:8, col:18> col:18 rhs 'const struct B1 &'
| | |-CXXCtorInitializer Field 0x7fb286065e28 'cp' 'char *'
| | | `-CXXDefaultInitExpr 0x7fb2860913e8 <col:5> 'char *'
| | `-CompoundStmt 0x7fb286091438 <col:23, col:24>
| |-CXXConstructorDecl 0x7fb286066270 <line:11:5, col:19> col:5 B1 'void (struct B1 &&)'
| | |-ParmVarDecl 0x7fb2860661a8 <col:8, col:13> col:13 rhs 'struct B1 &&'
| | |-CXXCtorInitializer Field 0x7fb286065e28 'cp' 'char *'
| | | `-CXXDefaultInitExpr 0x7fb286091450 <col:5> 'char *'
| | `-CompoundStmt 0x7fb2860914a0 <col:18, col:19>
| |-CXXDestructorDecl 0x7fb286066370 <line:13:5, line:16:5> line:13:13 used ~B1 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7fb286091580 <line:14:5, line:16:5>
| |   `-CXXDeleteExpr 0x7fb286091558 <line:15:9, col:18> 'void' array Function 0x7fb2860911c0 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x7fb286091540 <col:18> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x7fb286091508 <col:18> 'char *' lvalue ->cp 0x7fb286065e28
| |         `-CXXThisExpr 0x7fb2860914f0 <col:18> 'struct B1 *' this
| |-CXXMethodDecl 0x7fb286066510 <line:18:5, line:21:5> line:18:9 operator= 'struct B1 &(const struct B1 &)'
| | |-ParmVarDecl 0x7fb286066420 <col:19, col:29> col:29 rhs 'const struct B1 &'
| | `-CompoundStmt 0x7fb2860915f0 <line:19:5, line:21:5>
| |   `-ReturnStmt 0x7fb2860915d8 <line:20:9, col:17>
| |     `-UnaryOperator 0x7fb2860915b8 <col:16, col:17> 'struct B1' lvalue prefix '*'
| |       `-CXXThisExpr 0x7fb2860915a0 <col:17> 'struct B1 *' this
| |-CXXMethodDecl 0x7fb286066680 <line:23:5, line:26:5> line:23:9 operator= 'struct B1 &(struct B1 &&)'
| | |-ParmVarDecl 0x7fb2860665c0 <col:19, col:24> col:24 rhs 'struct B1 &&'
| | `-CompoundStmt 0x7fb286091660 <line:24:5, line:26:5>
| |   `-ReturnStmt 0x7fb286091648 <line:25:9, col:17>
| |     `-UnaryOperator 0x7fb286091628 <col:16, col:17> 'struct B1' lvalue prefix '*'
| |       `-CXXThisExpr 0x7fb286091610 <col:17> 'struct B1 *' this
| `-CXXMethodDecl 0x7fb286066740 <line:28:5, col:23> col:18 used m 'void (void)' virtual
|   `-CompoundStmt 0x7fb286091680 <col:22, col:23>
|-FunctionDecl 0x7fb286066968 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x7fb286066a48 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x7fb286066a00 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7fb286066ab0 <<invalid sloc>> <invalid sloc> implicit used operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x7fb286066b90 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x7fb286066b48 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7fb286091078 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x7fb286091158 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x7fb286091110 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7fb2860911c0 <<invalid sloc>> <invalid sloc> implicit used operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x7fb2860912a0 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x7fb286091258 <<invalid sloc>> Implicit Default
|-CXXRecordDecl 0x7fb286091698 <line:31:1, line:59:1> line:31:8 referenced struct D1 definition
| |-public 'struct B1'
| |-CXXRecordDecl 0x7fb2860917f8 <col:1, col:8> col:8 implicit referenced struct D1
| |-FieldDecl 0x7fb2860918d0 <line:32:5, col:15> col:10 referenced ip 'int *'
| | `-ImplicitCastExpr 0x7fb286092360 <col:15> 'int *' <NullToPointer>
| |   `-CXXNullPtrLiteralExpr 0x7fb286092348 <col:15> 'nullptr_t'
| |-CXXConstructorDecl 0x7fb286091988 <line:34:5, line:37:5> line:34:5 used D1 'void (void)'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7fb286092378 <col:5> 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7fb2860918d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 0x7fb2860923e0 <col:5> 'int *'
| | `-CompoundStmt 0x7fb286092598 <line:35:5, line:37:5>
| |   `-BinaryOperator 0x7fb286092570 <line:36:9, col:24> 'int *' lvalue '='
| |     |-MemberExpr 0x7fb286092450 <col:9> 'int *' lvalue ->ip 0x7fb2860918d0
| |     | `-CXXThisExpr 0x7fb286092438 <col:9> 'struct D1 *' this
| |     `-CXXNewExpr 0x7fb286092518 <col:14, col:24> 'int *' array Function 0x7fb286066ab0 'operator new[]' 'void *(unsigned long)'
| |       `-ImplicitCastExpr 0x7fb2860924c0 <col:22> 'unsigned long' <IntegralCast>
| |         `-IntegerLiteral 0x7fb286092488 <col:22> 'int' 10
| |-CXXConstructorDecl 0x7fb286091b30 <line:39:5, col:24> col:5 D1 'void (const struct D1 &)'
| | |-ParmVarDecl 0x7fb286091a68 <col:8, col:18> col:18 rhs 'const struct D1 &'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7fb2860925b8 <col:5> 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7fb2860918d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 0x7fb286092620 <col:5> 'int *'
| | `-CompoundStmt 0x7fb286092678 <col:23, col:24>
| |-CXXConstructorDecl 0x7fb286091ce0 <line:41:5, col:19> col:5 D1 'void (struct D1 &&)'
| | |-ParmVarDecl 0x7fb286091c18 <col:8, col:13> col:13 rhs 'struct D1 &&'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7fb286092690 <col:5> 'struct B1' 'void (void)'
| | |-CXXCtorInitializer Field 0x7fb2860918d0 'ip' 'int *'
| | | `-CXXDefaultInitExpr 0x7fb2860926f8 <col:5> 'int *'
| | `-CompoundStmt 0x7fb286092750 <col:18, col:19>
| |-CXXDestructorDecl 0x7fb286091de0 <line:43:5, line:46:5> line:43:13 used ~D1 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7fb2860927f8 <line:44:5, line:46:5>
| |   `-CXXDeleteExpr 0x7fb2860927d0 <line:45:9, col:18> 'void' array Function 0x7fb2860911c0 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x7fb2860927b8 <col:18> 'int *' <LValueToRValue>
| |       `-MemberExpr 0x7fb286092780 <col:18> 'int *' lvalue ->ip 0x7fb2860918d0
| |         `-CXXThisExpr 0x7fb286092768 <col:18> 'struct D1 *' this
| |-CXXMethodDecl 0x7fb286092000 <line:48:5, line:51:5> line:48:9 operator= 'struct D1 &(const struct D1 &)'
| | |-ParmVarDecl 0x7fb286091e90 <col:19, col:29> col:29 rhs 'const struct D1 &'
| | `-CompoundStmt 0x7fb286092868 <line:49:5, line:51:5>
| |   `-ReturnStmt 0x7fb286092850 <line:50:9, col:17>
| |     `-UnaryOperator 0x7fb286092830 <col:16, col:17> 'struct D1' lvalue prefix '*'
| |       `-CXXThisExpr 0x7fb286092818 <col:17> 'struct D1 *' this
| |-CXXMethodDecl 0x7fb286092170 <line:53:5, line:56:5> line:53:9 operator= 'struct D1 &(struct D1 &&)'
| | |-ParmVarDecl 0x7fb2860920b0 <col:19, col:24> col:24 rhs 'struct D1 &&'
| | `-CompoundStmt 0x7fb2860928d8 <line:54:5, line:56:5>
| |   `-ReturnStmt 0x7fb2860928c0 <line:55:9, col:17>
| |     `-UnaryOperator 0x7fb2860928a0 <col:16, col:17> 'struct D1' lvalue prefix '*'
| |       `-CXXThisExpr 0x7fb286092888 <col:17> 'struct D1 *' this
| `-CXXMethodDecl 0x7fb286092230 <line:58:5, col:24> col:10 used m 'void (void)'
|   |-CompoundStmt 0x7fb2860928f8 <col:23, col:24>
|   `-OverrideAttr 0x7fb2860922c8 <col:14>
`-FunctionDecl 0x7fb286092968 <line:61:1, line:85:1> line:61:5 main 'int (void)'
  `-CompoundStmt 0x7fb286093ae0 <line:62:1, line:85:1>
    |-DeclStmt 0x7fb286092b48 <line:63:5, col:12>
    | `-VarDecl 0x7fb286092a78 <col:5, col:11> col:8 used b1 'struct B1' listinit
    |   `-CXXConstructExpr 0x7fb286092b18 <col:8, col:11> 'struct B1' 'void (void)'
    |-DeclStmt 0x7fb286092c40 <line:64:5, col:12>
    | `-VarDecl 0x7fb286092b70 <col:5, col:11> col:8 used d1 'struct D1' listinit
    |   `-CXXConstructExpr 0x7fb286092c10 <col:8, col:11> 'struct D1' 'void (void)'
    |-DeclStmt 0x7fb286092d48 <line:67:5, col:17>
    | `-VarDecl 0x7fb286092c68 <col:5, col:15> col:9 used b1r 'struct B1 &' cinit
    |   `-DeclRefExpr 0x7fb286092cc8 <col:15> 'struct B1' lvalue Var 0x7fb286092a78 'b1' 'struct B1'
    |-DeclStmt 0x7fb286092fd0 <line:68:5, col:17>
    | `-VarDecl 0x7fb286092d70 <col:5, col:15> col:9 used d1r 'struct B1 &' cinit
    |   `-ImplicitCastExpr 0x7fb286092df8 <col:15> 'struct B1' lvalue <DerivedToBase (B1)>
    |     `-DeclRefExpr 0x7fb286092dd0 <col:15> 'struct D1' lvalue Var 0x7fb286092b70 'd1' 'struct D1'
    |-CXXMemberCallExpr 0x7fb286093460 <line:69:5, col:11> 'void'
    | `-MemberExpr 0x7fb286093428 <col:5, col:9> '<bound member function type>' .m 0x7fb286066740
    |   `-DeclRefExpr 0x7fb286093400 <col:5> 'struct B1' lvalue Var 0x7fb286092c68 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 0x7fb2860934e8 <line:70:5, col:11> 'void'
    | `-MemberExpr 0x7fb2860934b0 <col:5, col:9> '<bound member function type>' .m 0x7fb286066740
    |   `-DeclRefExpr 0x7fb286093488 <col:5> 'struct B1' lvalue Var 0x7fb286092d70 'd1r' 'struct B1 &'
    |-DeclStmt 0x7fb2860935c8 <line:73:5, col:18>
    | `-VarDecl 0x7fb286093520 <col:5, col:16> col:9 used b1p 'struct B1 *' cinit
    |   `-UnaryOperator 0x7fb2860935a8 <col:15, col:16> 'struct B1 *' prefix '&'
    |     `-DeclRefExpr 0x7fb286093580 <col:16> 'struct B1' lvalue Var 0x7fb286092a78 'b1' 'struct B1'
    |-DeclStmt 0x7fb2860936b8 <line:74:5, col:18>
    | `-VarDecl 0x7fb2860935f0 <col:5, col:16> col:9 used d1p 'struct B1 *' cinit
    |   `-ImplicitCastExpr 0x7fb286093698 <col:15, col:16> 'struct B1 *' <DerivedToBase (B1)>
    |     `-UnaryOperator 0x7fb286093678 <col:15, col:16> 'struct D1 *' prefix '&'
    |       `-DeclRefExpr 0x7fb286093650 <col:16> 'struct D1' lvalue Var 0x7fb286092b70 'd1' 'struct D1'
    |-CXXMemberCallExpr 0x7fb286093748 <line:75:5, col:12> 'void'
    | `-MemberExpr 0x7fb286093710 <col:5, col:10> '<bound member function type>' ->m 0x7fb286066740
    |   `-ImplicitCastExpr 0x7fb2860936f8 <col:5> 'struct B1 *' <LValueToRValue>
    |     `-DeclRefExpr 0x7fb2860936d0 <col:5> 'struct B1 *' lvalue Var 0x7fb286093520 'b1p' 'struct B1 *'
    |-CXXMemberCallExpr 0x7fb2860937e8 <line:76:5, col:12> 'void'
    | `-MemberExpr 0x7fb2860937b0 <col:5, col:10> '<bound member function type>' ->m 0x7fb286066740
    |   `-ImplicitCastExpr 0x7fb286093798 <col:5> 'struct B1 *' <LValueToRValue>
    |     `-DeclRefExpr 0x7fb286093770 <col:5> 'struct B1 *' lvalue Var 0x7fb2860935f0 'd1p' 'struct B1 *'
    |-CXXMemberCallExpr 0x7fb2860938b8 <line:79:5, col:15> 'void'
    | `-MemberExpr 0x7fb286093868 <col:5, col:13> '<bound member function type>' .m 0x7fb286066740
    |   `-DeclRefExpr 0x7fb286093810 <col:5> 'struct B1' lvalue Var 0x7fb286092c68 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 0x7fb286093940 <line:80:5, col:11> 'void'
    | `-MemberExpr 0x7fb286093908 <col:5, col:9> '<bound member function type>' .m 0x7fb286066740
    |   `-DeclRefExpr 0x7fb2860938e0 <col:5> 'struct B1' lvalue Var 0x7fb286092c68 'b1r' 'struct B1 &'
    |-CXXMemberCallExpr 0x7fb2860939f8 <line:81:5, col:15> 'void'
    | `-MemberExpr 0x7fb2860939a8 <col:5, col:13> '<bound member function type>' .m 0x7fb286066740
    |   `-DeclRefExpr 0x7fb286093968 <col:5> 'struct B1' lvalue Var 0x7fb286092d70 'd1r' 'struct B1 &'
    |-CXXMemberCallExpr 0x7fb286093a80 <line:82:5, col:11> 'void'
    | `-MemberExpr 0x7fb286093a48 <col:5, col:9> '<bound member function type>' .m 0x7fb286066740
    |   `-DeclRefExpr 0x7fb286093a20 <col:5> 'struct B1' lvalue Var 0x7fb286092d70 'd1r' 'struct B1 &'
    `-ReturnStmt 0x7fb286093ac8 <line:84:5, col:12>
      `-IntegerLiteral 0x7fb286093aa8 <col:12> 'int' 0
