TranslationUnitDecl 0x7fe0278326d0
|-TypedefDecl implicit referenced __int128_t '__int128'
| `-BuiltinType '__int128'
|-TypedefDecl implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 'unsigned __int128'
|-TypedefDecl implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 'struct __NSConstantString_tag'
|   `-CXXRecord '__NSConstantString_tag'
|-TypedefDecl implicit __builtin_ms_va_list 'char *'
| `-PointerType 'char *'
|   `-BuiltinType 'char'
|-TypedefDecl implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 'struct __va_list_tag [1]' 1
|   `-RecordType 'struct __va_list_tag'
|     `-CXXRecord '__va_list_tag'
|-NamespaceDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, > std
| `-NamespaceDecl <scratch space>:25:1 __1 inline
|-TypedefDecl </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, > ptrdiff_t 'long'
| `-BuiltinType 'long'
|-TypedefDecl referenced size_t 'unsigned long'
| `-BuiltinType 'unsigned long'
|-TypedefDecl </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, > max_align_t 'long double'
| `-BuiltinType 'long double'
|-NamespaceDecl prev 0x7fe027866458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, > std
| |-original Namespace 0x7fe027866458 'std'
| `-TypedefDecl referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
|   `-DecltypeType 'decltype(nullptr)' sugar
|     |-CXXNullPtrLiteralExpr 'nullptr_t'
|     `-BuiltinType 'nullptr_t'
|-NamespaceDecl prev 0x7fe027866678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, > std
| |-original Namespace 0x7fe027866458 'std'
| `-NamespaceDecl prev 0x7fe0278664c0 <scratch space>:53:1 __1 inline
|   |-original Namespace 0x7fe0278664c0 '__1'
|   |-UsingDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, > ::ptrdiff_t
|   |-UsingShadowDecl implicit Typedef 0x7fe027866540 'ptrdiff_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::size_t
|   |-UsingShadowDecl implicit Typedef 0x7fe0278665b0 'size_t'
|   | `-TypedefType 'size_t' sugar
|   |   |-Typedef 'size_t'
|   |   `-BuiltinType 'unsigned long'
|   |-UsingDecl ::max_align_t
|   `-UsingShadowDecl implicit Typedef 0x7fe027866620 'max_align_t'
|     `-<<<NULL>>>
|-NamespaceDecl prev 0x7fe027866790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, > std
| |-original Namespace 0x7fe027866458 'std'
| `-NamespaceDecl prev 0x7fe0278667f8 <scratch space>:54:1 __1 inline
|   |-original Namespace 0x7fe0278664c0 '__1'
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, > pair
|   | |-TemplateTypeParmDecl class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl class depth 0 index 1 _T2
|   | |-CXXRecordDecl struct pair
|   | | `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:311:1, > struct pair definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-CXXRecordDecl prev 0x7fe02807f688 implicit struct pair
|   |   |-TypedefDecl first_type 'unsigned long':'unsigned long'
|   |   | `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |   |   |-TemplateTypeParmType '_T1' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm '_T1'
|   |   |   `-BuiltinType 'unsigned long'
|   |   |-TypedefDecl second_type 'unsigned long':'unsigned long'
|   |   | `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |   |   |-TemplateTypeParmType '_T2' dependent depth 0 index 1
|   |   |   | `-TemplateTypeParm '_T2'
|   |   |   `-BuiltinType 'unsigned long'
|   |   |-FieldDecl referenced first 'unsigned long':'unsigned long'
|   |   |-FieldDecl referenced second 'unsigned long':'unsigned long'
|   |   |-CXXConstructorDecl constexpr pair 'void (const struct std::__1::pair<unsigned long, unsigned long> &)' default trivial noexcept-unevaluated 0x7fe0290052c0
|   |   | `-ParmVarDecl 'const struct std::__1::pair<unsigned long, unsigned long> &'
|   |   |-CXXConstructorDecl used constexpr pair 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' default trivial
|   |   | |-ParmVarDecl used 'struct std::__1::pair<unsigned long, unsigned long> &&'
|   |   | |-CXXCtorInitializer Field 0x7fe0290050e0 'first' 'unsigned long':'unsigned long'
|   |   | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |   `-MemberExpr 'unsigned long':'unsigned long' xvalue .first 0x7fe0290050e0
|   |   | |     `-CXXStaticCastExpr 'struct std::__1::pair<unsigned long, unsigned long>' xvalue static_cast<struct std::__1::pair<unsigned long, unsigned long> &&> <NoOp>
|   |   | |       `-DeclRefExpr 'struct std::__1::pair<unsigned long, unsigned long>' lvalue ParmVar 0x7fe0290053b8 '' 'struct std::__1::pair<unsigned long, unsigned long> &&'
|   |   | |-CXXCtorInitializer Field 0x7fe029005138 'second' 'unsigned long':'unsigned long'
|   |   | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |   `-MemberExpr 'unsigned long':'unsigned long' xvalue .second 0x7fe029005138
|   |   | |     `-CXXStaticCastExpr 'struct std::__1::pair<unsigned long, unsigned long>' xvalue static_cast<struct std::__1::pair<unsigned long, unsigned long> &&> <NoOp>
|   |   | |       `-DeclRefExpr 'struct std::__1::pair<unsigned long, unsigned long>' lvalue ParmVar 0x7fe0290053b8 '' 'struct std::__1::pair<unsigned long, unsigned long> &&'
|   |   | `-CompoundStmt
|   |   |-TypeAliasTemplateDecl _EnableB
|   |   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _Val
|   |   | `-TypeAliasDecl _EnableB 'typename enable_if<_Val, _Bool>::type'
|   |   |   `-DependentNameType 'typename enable_if<_Val, _Bool>::type' dependent
|   |   |-CXXRecordDecl struct _CheckArgs definition
|   |   | |-CXXRecordDecl prev 0x7fe029008088 implicit struct _CheckArgs
|   |   | |-FunctionTemplateDecl __enable_default
|   |   | | |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   | | |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   | | `-CXXMethodDecl constexpr __enable_default '_Bool (void)' static
|   |   | |-FunctionTemplateDecl __enable_explicit
|   |   | | |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   | | |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   | | |-CXXMethodDecl constexpr __enable_explicit '_Bool (void)' static
|   |   | | |-CXXMethodDecl referenced constexpr __enable_explicit '_Bool (void)' static
|   |   | | | |-TemplateArgument type 'const unsigned long &'
|   |   | | | |-TemplateArgument type 'const unsigned long &'
|   |   | | | `-CompoundStmt
|   |   | | |   `-ReturnStmt
|   |   | | |     `-BinaryOperator '_Bool' '&&'
|   |   | | |       |-BinaryOperator '_Bool' '&&'
|   |   | | |       | |-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   | | |       | | `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   | | |       | `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   | | |       `-ParenExpr '_Bool'
|   |   | | |         `-BinaryOperator '_Bool' '||'
|   |   | | |           |-UnaryOperator '_Bool' prefix '!'
|   |   | | |           | `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   | | |           |   `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   | | |           `-UnaryOperator '_Bool' prefix '!'
|   |   | | |             `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   | | |               `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   | | `-CXXMethodDecl referenced constexpr __enable_explicit '_Bool (void)' static
|   |   | |   |-TemplateArgument type 'unsigned long'
|   |   | |   |-TemplateArgument type 'unsigned long'
|   |   | |   `-CompoundStmt
|   |   | |     `-ReturnStmt
|   |   | |       `-BinaryOperator '_Bool' '&&'
|   |   | |         |-BinaryOperator '_Bool' '&&'
|   |   | |         | |-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   | |         | | `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   | |         | `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   | |         |   `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   | |         `-ParenExpr '_Bool'
|   |   | |           `-BinaryOperator '_Bool' '||'
|   |   | |             |-UnaryOperator '_Bool' prefix '!'
|   |   | |             | `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   | |             |   `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   | |             `-UnaryOperator '_Bool' prefix '!'
|   |   | |               `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   | |                 `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   | `-FunctionTemplateDecl __enable_implicit
|   |   |   |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   |   |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   |   |-CXXMethodDecl constexpr __enable_implicit '_Bool (void)' static
|   |   |   |-CXXMethodDecl referenced constexpr __enable_implicit '_Bool (void)' static
|   |   |   | |-TemplateArgument type 'const unsigned long &'
|   |   |   | |-TemplateArgument type 'const unsigned long &'
|   |   |   | `-CompoundStmt
|   |   |   |   `-ReturnStmt
|   |   |   |     `-BinaryOperator '_Bool' '&&'
|   |   |   |       |-BinaryOperator '_Bool' '&&'
|   |   |   |       | |-BinaryOperator '_Bool' '&&'
|   |   |   |       | | |-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   |   |       | | | `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   |   |       | | `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   |   |       | |   `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   |   |       | `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   |   |       |   `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   |   |       `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   |   `-CXXMethodDecl referenced constexpr __enable_implicit '_Bool (void)' static
|   |   |     |-TemplateArgument type 'unsigned long'
|   |   |     |-TemplateArgument type 'unsigned long'
|   |   |     `-CompoundStmt
|   |   |       `-ReturnStmt
|   |   |         `-BinaryOperator '_Bool' '&&'
|   |   |           |-BinaryOperator '_Bool' '&&'
|   |   |           | |-BinaryOperator '_Bool' '&&'
|   |   |           | | |-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   |           | | | `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   |           | | `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   |           | `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   |           |   `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   |           `-ImplicitCastExpr '_Bool':'_Bool' <LValueToRValue>
|   |   |             `-DeclRefExpr 'const _Bool':'const _Bool' lvalue Var 0x7fe029017498 'value' 'const _Bool':'const _Bool'
|   |   |-TypeAliasTemplateDecl _CheckArgsDep
|   |   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _MaybeEnable
|   |   | `-TypeAliasDecl _CheckArgsDep 'typename conditional<_MaybeEnable, struct _CheckArgs, struct __check_tuple_constructor_fail>::type'
|   |   |   `-DependentNameType 'typename conditional<_MaybeEnable, struct _CheckArgs, struct __check_tuple_constructor_fail>::type' dependent
|   |   |-CXXRecordDecl struct _CheckTupleLikeConstructor
|   |   |-TypeAliasTemplateDecl _CheckTLC
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _Tuple
|   |   | `-TypeAliasDecl _CheckTLC 'typename conditional<__tuple_like_with_size<_Tuple, 2>::value && !is_same<typename decay<_Tuple>::type, struct pair<unsigned long, unsigned long> >::value, struct _CheckTupleLikeConstructor, struct __check_tuple_constructor_fail>::type'
|   |   |   `-DependentNameType 'typename conditional<__tuple_like_with_size<_Tuple, 2>::value && !is_same<typename decay<_Tuple>::type, struct pair<unsigned long, unsigned long> >::value, struct _CheckTupleLikeConstructor, struct __check_tuple_constructor_fail>::type' dependent
|   |   |-FunctionTemplateDecl pair
|   |   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _Dummy
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' true
|   |   | |-NonTypeTemplateParmDecl '_EnableB<_CheckArgsDep<_Dummy>::template __enable_default<unsigned long, unsigned long>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_default<unsigned long, unsigned long>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:409:33> constexpr pair 'void (void)'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:411:5, > pair
|   |   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _Dummy
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' true
|   |   | |-NonTypeTemplateParmDecl '_EnableB<_CheckArgsDep<_Dummy>::template __enable_explicit<const unsigned long &, const unsigned long &>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_explicit<const unsigned long &, const unsigned long &>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:416:38> constexpr pair 'void (const unsigned long &, const unsigned long &)'
|   |   |   |-ParmVarDecl __t1 'const unsigned long &'
|   |   |   |-ParmVarDecl __t2 'const unsigned long &'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:418:5, > pair
|   |   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _Dummy
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' true
|   |   | |-NonTypeTemplateParmDecl '_EnableB<_CheckArgsDep<_Dummy>::template __enable_implicit<const unsigned long &, const unsigned long &>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_implicit<const unsigned long &, const unsigned long &>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:423:38> constexpr pair 'void (const unsigned long &, const unsigned long &)'
|   |   | | |-ParmVarDecl __t1 'const unsigned long &'
|   |   | | |-ParmVarDecl __t2 'const unsigned long &'
|   |   | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   | `-CXXConstructorDecl constexpr pair 'void (const unsigned long &, const unsigned long &)'
|   |   |   |-TemplateArgument integral 1
|   |   |   |-TemplateArgument integral 0
|   |   |   |-ParmVarDecl __t1 'const unsigned long &'
|   |   |   |-ParmVarDecl __t2 'const unsigned long &'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:425:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_explicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<_U1, _U2>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:80> constexpr pair 'void (_U1 &&, _U2 &&)'
|   |   |   |-ParmVarDecl __u1 '_U1 &&'
|   |   |   |-ParmVarDecl __u2 '_U2 &&'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:432:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_implicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<_U1, _U2>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:80> constexpr pair 'void (_U1 &&, _U2 &&)'
|   |   | | |-ParmVarDecl __u1 '_U1 &&'
|   |   | | |-ParmVarDecl __u2 '_U2 &&'
|   |   | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   | `-CXXConstructorDecl used constexpr pair 'void (unsigned long &&, unsigned long &&)'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument integral 0
|   |   |   |-ParmVarDecl used __u1 'unsigned long &&'
|   |   |   |-ParmVarDecl used __u2 'unsigned long &&'
|   |   |   |-CXXCtorInitializer Field 0x7fe0290050e0 'first' 'unsigned long':'unsigned long'
|   |   |   | `-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:41> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:41> 'unsigned long':'unsigned long' xvalue
|   |   |   |     |-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:35> 'unsigned long &&(*)(typename remove_reference<unsigned long>::type &) noexcept' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:35> 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' lvalue Function 0x7fe027885f48 'forward' 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' (FunctionTemplate 0x7fe028821b50 'forward')
|   |   |   |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe0289a6fd8 '__u1' 'unsigned long &&'
|   |   |   |-CXXCtorInitializer Field 0x7fe029005138 'second' 'unsigned long':'unsigned long'
|   |   |   | `-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:76> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:76> 'unsigned long':'unsigned long' xvalue
|   |   |   |     |-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:70> 'unsigned long &&(*)(typename remove_reference<unsigned long>::type &) noexcept' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:70> 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' lvalue Function 0x7fe027885f48 'forward' 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' (FunctionTemplate 0x7fe028821b50 'forward')
|   |   |   |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe0289a7078 '__u2' 'unsigned long &&'
|   |   |   |-CompoundStmt
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:439:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_explicit<const _U1 &, const _U2 &>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<const _U1 &, const _U2 &>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:444:49> constexpr pair 'void (const pair<_U1, _U2> &)'
|   |   |   |-ParmVarDecl __p 'const pair<_U1, _U2> &'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:446:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_implicit<const _U1 &, const _U2 &>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<const _U1 &, const _U2 &>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:451:49> constexpr pair 'void (const pair<_U1, _U2> &)'
|   |   | | |-ParmVarDecl __p 'const pair<_U1, _U2> &'
|   |   | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   | `-CXXConstructorDecl constexpr pair 'void (const pair<unsigned long, unsigned long> &)'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument integral 0
|   |   |   |-ParmVarDecl __p 'const pair<unsigned long, unsigned long> &'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:453:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_explicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<_U1, _U2>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:91> constexpr pair 'void (pair<_U1, _U2> &&)'
|   |   |   |-ParmVarDecl __p 'pair<_U1, _U2> &&'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:460:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_implicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<_U1, _U2>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:91> constexpr pair 'void (pair<_U1, _U2> &&)'
|   |   | | |-ParmVarDecl __p 'pair<_U1, _U2> &&'
|   |   | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   | `-CXXConstructorDecl constexpr pair 'void (pair<unsigned long, unsigned long> &&)'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument integral 0
|   |   |   |-ParmVarDecl __p 'pair<unsigned long, unsigned long> &&'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:467:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _Tuple
|   |   | |-NonTypeTemplateParmDecl '_EnableB<_CheckTLC<_Tuple>::template __enable_explicit<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_explicit<_Tuple>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:63> constexpr pair 'void (_Tuple &&)'
|   |   |   |-ParmVarDecl __p '_Tuple &&'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:475:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _Tuple
|   |   | |-NonTypeTemplateParmDecl '_EnableB<_CheckTLC<_Tuple>::template __enable_implicit<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_implicit<_Tuple>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:63> constexpr pair 'void (_Tuple &&)'
|   |   |   |-ParmVarDecl __p '_Tuple &&'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:483:5, > pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 ... _Args1
|   |   | |-TemplateTypeParmDecl class depth 0 index 1 ... _Args2
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:489:77> pair 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>)'
|   |   |   |-ParmVarDecl __pc 'struct std::__1::piecewise_construct_t'
|   |   |   |-ParmVarDecl __first_args 'tuple<_Args1...>'
|   |   |   |-ParmVarDecl __second_args 'tuple<_Args2...>'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-CXXMethodDecl operator= 'struct std::__1::pair<unsigned long, unsigned long> &(const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &)' noexcept-uninstantiated 0x7fe0280472e8
|   |   | |-ParmVarDecl __p 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &'
|   |   | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-CXXMethodDecl used operator= 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)'
|   |   | |-ParmVarDecl used __p 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&'
|   |   | |-CompoundStmt
|   |   | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-MemberExpr 'unsigned long':'unsigned long' lvalue ->first 0x7fe0290050e0
|   |   | | | | `-CXXThisExpr 'struct std::__1::pair<unsigned long, unsigned long> *' this
|   |   | | | `-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:53> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:53> 'unsigned long':'unsigned long' xvalue
|   |   | | |     |-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:42> 'unsigned long &&(*)(typename remove_reference<unsigned long>::type &) noexcept' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:42> 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' lvalue Function 0x7fe027885f48 'forward' 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' (FunctionTemplate 0x7fe028821b50 'forward')
|   |   | | |     `-MemberExpr 'unsigned long':'unsigned long' lvalue .first 0x7fe0290050e0
|   |   | | |       `-DeclRefExpr 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type':'struct std::__1::pair<unsigned long, unsigned long>' lvalue ParmVar 0x7fe0280b98f0 '__p' 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&'
|   |   | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-MemberExpr 'unsigned long':'unsigned long' lvalue ->second 0x7fe029005138
|   |   | | | | `-CXXThisExpr 'struct std::__1::pair<unsigned long, unsigned long> *' this
|   |   | | | `-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:56> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:56> 'unsigned long':'unsigned long' xvalue
|   |   | | |     |-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:44> 'unsigned long &&(*)(typename remove_reference<unsigned long>::type &) noexcept' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:44> 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' lvalue Function 0x7fe027885f48 'forward' 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' (FunctionTemplate 0x7fe028821b50 'forward')
|   |   | | |     `-MemberExpr 'unsigned long':'unsigned long' lvalue .second 0x7fe029005138
|   |   | | |       `-DeclRefExpr 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type':'struct std::__1::pair<unsigned long, unsigned long>' lvalue ParmVar 0x7fe0280b98f0 '__p' 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&'
|   |   | | `-ReturnStmt
|   |   | |   `-UnaryOperator 'struct std::__1::pair<unsigned long, unsigned long>' lvalue prefix '*'
|   |   | |     `-CXXThisExpr 'struct std::__1::pair<unsigned long, unsigned long> *' this
|   |   | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:517:5, > operator=
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 _Tuple
|   |   | |-NonTypeTemplateParmDecl '_EnableB<_CheckTLC<_Tuple>::template __enable_assign<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_assign<_Tuple>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr '_Bool' false
|   |   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:525:5> operator= 'struct std::__1::pair<unsigned long, unsigned long> &(_Tuple &&)'
|   |   |   |-ParmVarDecl __p '_Tuple &&'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-CXXMethodDecl swap 'void (struct std::__1::pair<unsigned long, unsigned long> &)' noexcept-uninstantiated 0x7fe028049d68
|   |   | |-ParmVarDecl __p 'struct std::__1::pair<unsigned long, unsigned long> &'
|   |   | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-AccessSpecDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:537:1, > private
|   |   |-FunctionTemplateDecl pair
|   |   | |-TemplateTypeParmDecl class depth 0 index 0 ... _Args1
|   |   | |-TemplateTypeParmDecl class depth 0 index 1 ... _Args2
|   |   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 ... _I1
|   |   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 3 ... _I2
|   |   | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:544:62> pair 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...> &, tuple<_Args2...> &, __tuple_indices<_I1...>, __tuple_indices<_I2...>)'
|   |   |   |-ParmVarDecl 'struct std::__1::piecewise_construct_t'
|   |   |   |-ParmVarDecl __first_args 'tuple<_Args1...> &'
|   |   |   |-ParmVarDecl __second_args 'tuple<_Args2...> &'
|   |   |   |-ParmVarDecl '__tuple_indices<_I1...>'
|   |   |   |-ParmVarDecl '__tuple_indices<_I2...>'
|   |   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-CXXDestructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:312:29> implicit referenced ~pair 'void (void) noexcept' inline default trivial
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, > reference_wrapper
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl class reference_wrapper
|   |   `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, > hash
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct hash
|   | | `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | `-ClassTemplateSpecialization 'hash'
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, > __void_t
|   | |-TemplateTypeParmDecl class depth 0 index 0
|   | `-CXXRecordDecl struct __void_t definition
|   |   |-CXXRecordDecl implicit struct __void_t
|   |   `-TypedefDecl type 'void'
|   |     `-BuiltinType 'void'
|   |-ClassTemplateDecl __identity
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __identity definition
|   |   |-CXXRecordDecl implicit struct __identity
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl __dependent_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | `-CXXRecordDecl struct __dependent_type definition
|   |   |-public '_Tp'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, > implicit struct __dependent_type
|   |-ClassTemplateDecl conditional
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _If
|   | |-TemplateTypeParmDecl class depth 0 index 2 _Then
|   | |-CXXRecordDecl struct conditional definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, > implicit struct conditional
|   | | `-TypedefDecl type '_If'
|   | |   `-TemplateTypeParmType '_If' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_If'
|   | |-ClassTemplateSpecializationDecl struct conditional definition
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | | |-TemplateArgument type 'struct std::__1::__nat'
|   | | |-CXXRecordDecl prev 0x7fe0280b3c70 implicit struct conditional
|   | | `-TypedefDecl referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   | |   `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   | |     |-TemplateTypeParmType '_If' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_If'
|   | |     `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   | |       `-ClassTemplateSpecialization 'pair'
|   | |-ClassTemplateSpecializationDecl struct conditional definition
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long> *'
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | | |-CXXRecordDecl prev 0x7fe0280c8c68 implicit struct conditional
|   | | `-TypedefDecl referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   | |   `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   | |     |-TemplateTypeParmType '_Then' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Then'
|   | |     `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   | |       `-ClassTemplateSpecialization 'pair'
|   | |-ClassTemplateSpecializationDecl struct conditional definition
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>::_CheckTupleLikeConstructor'
|   | | |-TemplateArgument type 'struct std::__1::__check_tuple_constructor_fail'
|   | | |-CXXRecordDecl prev 0x7fe0280c9958 implicit struct conditional
|   | | `-TypedefDecl referenced type 'struct std::__1::__check_tuple_constructor_fail':'struct std::__1::__check_tuple_constructor_fail'
|   | |   `-SubstTemplateTypeParmType 'struct std::__1::__check_tuple_constructor_fail' sugar
|   | |     |-TemplateTypeParmType '_Then' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Then'
|   | |     `-RecordType 'struct std::__1::__check_tuple_constructor_fail'
|   | |       `-CXXRecord '__check_tuple_constructor_fail'
|   | `-ClassTemplateSpecializationDecl struct conditional definition
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs'
|   |   |-TemplateArgument type 'struct std::__1::__check_tuple_constructor_fail'
|   |   |-CXXRecordDecl prev 0x7fe0289a4138 implicit struct conditional
|   |   `-TypedefDecl referenced type 'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs':'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs'
|   |     `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs' sugar
|   |       |-TemplateTypeParmType '_If' dependent depth 0 index 1
|   |       | `-TemplateTypeParm '_If'
|   |       `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs'
|   |         `-CXXRecord '_CheckArgs'
|   |-ClassTemplatePartialSpecializationDecl struct conditional definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _If
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Then
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, > implicit struct conditional
|   | `-TypedefDecl type '_Then'
|   |   `-TemplateTypeParmType '_Then' dependent depth 0 index 1
|   |     `-TemplateTypeParm '_Then'
|   |-TypeAliasTemplateDecl conditional_t
|   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _If
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _Then
|   | `-TypeAliasDecl conditional_t 'typename conditional<_Bp, _If, _Then>::type'
|   |   `-DependentNameType 'typename conditional<_Bp, _If, _Then>::type' dependent
|   |-ClassTemplateDecl __lazy_enable_if
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | `-CXXRecordDecl struct __lazy_enable_if definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, > implicit struct __lazy_enable_if
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_enable_if definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, > implicit struct __lazy_enable_if
|   | `-TypedefDecl type 'typename _Tp::type'
|   |   `-DependentNameType 'typename _Tp::type' dependent
|   |-ClassTemplateDecl enable_if
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | | `-TemplateArgument type 'void'
|   | |-CXXRecordDecl struct enable_if definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, > implicit struct enable_if
|   | |-ClassTemplateSpecializationDecl struct enable_if definition
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type '_Bool'
|   | | |-CXXRecordDecl prev 0x7fe0280bd6d0 implicit struct enable_if
|   | | `-TypedefDecl referenced type '_Bool':'_Bool'
|   | |   `-SubstTemplateTypeParmType '_Bool' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-BuiltinType '_Bool'
|   | |-ClassTemplateSpecializationDecl struct enable_if definition
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type '_Bool'
|   | | `-CXXRecordDecl prev 0x7fe0280ca360 implicit struct enable_if
|   | `-ClassTemplateSpecializationDecl struct enable_if definition
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type 'void'
|   |   |-CXXRecordDecl prev 0x7fe028996a20 implicit struct enable_if
|   |   `-TypedefDecl referenced type 'void':'void'
|   |     `-SubstTemplateTypeParmType 'void' sugar
|   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Tp'
|   |       `-BuiltinType 'void'
|   |-ClassTemplatePartialSpecializationDecl struct enable_if definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, > implicit struct enable_if
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl enable_if_t
|   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | | `-TemplateArgument type 'void'
|   | `-TypeAliasDecl enable_if_t 'typename enable_if<_Bp, _Tp>::type'
|   |   `-DependentNameType 'typename enable_if<_Bp, _Tp>::type' dependent
|   |-FunctionTemplateDecl addressof
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl addressof '_Tp *(_Tp &) noexcept' inline
|   |   |-ParmVarDecl referenced __x '_Tp &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-DeclRefExpr '<builtin fn type>' Function 0x7fe028000758 '__builtin_addressof' 'void *(void &) noexcept'
|   |   |     `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe028000368 '__x' '_Tp &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-VisibilityAttr Hidden
|   |   `-NoSanitizeAttr cfi
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, > addressof
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl addressof '_Tp *(const _Tp &&) noexcept' delete
|   |   `-ParmVarDecl 'const _Tp &&'
|   |-CXXRecordDecl referenced struct __two definition
|   | |-CXXRecordDecl implicit struct __two
|   | |-FieldDecl __lx 'char [2]'
|   | `-CXXDestructorDecl implicit referenced ~__two 'void (void) noexcept' inline default trivial
|   |-ClassTemplateDecl integral_constant
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced '_Tp' depth 0 index 1 __v
|   | |-CXXRecordDecl struct integral_constant definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, > implicit referenced struct integral_constant
|   | | |-VarDecl referenced value 'const _Tp' static constexpr cinit
|   | | | `-DeclRefExpr '_Tp' NonTypeTemplateParm 0x7fe0278ad000 '__v' '_Tp'
|   | | |-TypedefDecl referenced value_type '_Tp'
|   | | | `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm '_Tp'
|   | | |-TypedefDecl type 'integral_constant<_Tp, __v>'
|   | | | `-InjectedClassNameType 'integral_constant<_Tp, __v>' dependent
|   | | |   `-CXXRecord 'integral_constant'
|   | | |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
|   | | | |-CompoundStmt
|   | | | | `-ReturnStmt
|   | | | |   `-DeclRefExpr 'const _Tp' lvalue Var 0x7fe0278ad4f0 'value' 'const _Tp'
|   | | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr Hidden
|   | | `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-DeclRefExpr 'const _Tp' lvalue Var 0x7fe0278ad4f0 'value' 'const _Tp'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, > struct integral_constant definition
|   | | |-TemplateArgument type '_Bool'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl prev 0x7fe0278ae000 implicit struct integral_constant
|   | | |-VarDecl used value 'const _Bool':'const _Bool' static constexpr cinit
|   | | | `-SubstNonTypeTemplateParmExpr '_Bool'
|   | | |   `-CXXBoolLiteralExpr '_Bool' true
|   | | |-TypedefDecl value_type '_Bool':'_Bool'
|   | | | `-SubstTemplateTypeParmType '_Bool' sugar
|   | | |   |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Tp'
|   | | |   `-BuiltinType '_Bool'
|   | | |-TypedefDecl type 'struct std::__1::integral_constant<_Bool, true>'
|   | | | `-RecordType 'struct std::__1::integral_constant<_Bool, true>'
|   | | |   `-ClassTemplateSpecialization 'integral_constant'
|   | | |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
|   | | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, > struct integral_constant definition
|   | | |-TemplateArgument type '_Bool'
|   | | |-TemplateArgument integral 0
|   | | |-CXXRecordDecl prev 0x7fe0278ae2d0 implicit struct integral_constant
|   | | |-VarDecl referenced value 'const _Bool':'const _Bool' static constexpr cinit
|   | | | `-SubstNonTypeTemplateParmExpr '_Bool'
|   | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | |-TypedefDecl value_type '_Bool':'_Bool'
|   | | | `-SubstTemplateTypeParmType '_Bool' sugar
|   | | |   |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Tp'
|   | | |   `-BuiltinType '_Bool'
|   | | |-TypedefDecl type 'struct std::__1::integral_constant<_Bool, false>'
|   | | | `-RecordType 'struct std::__1::integral_constant<_Bool, false>'
|   | | |   `-ClassTemplateSpecialization 'integral_constant'
|   | | |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
|   | | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, > struct integral_constant definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument integral 0
|   | | |-CXXRecordDecl prev 0x7fe028029ea0 implicit struct integral_constant
|   | | |-VarDecl value 'const unsigned long':'const unsigned long' static constexpr cinit
|   | | | `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   | | |   `-IntegerLiteral 'unsigned long' 0
|   | | |-TypedefDecl value_type 'unsigned long':'unsigned long'
|   | | | `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | | |   |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Tp'
|   | | |   `-BuiltinType 'unsigned long'
|   | | |-TypedefDecl type 'struct std::__1::integral_constant<unsigned long, 0>'
|   | | | `-RecordType 'struct std::__1::integral_constant<unsigned long, 0>'
|   | | |   `-ClassTemplateSpecialization 'integral_constant'
|   | | |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
|   | | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, > struct integral_constant definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 2
|   |   |-CXXRecordDecl prev 0x7fe028058468 implicit struct integral_constant
|   |   |-VarDecl referenced value 'const unsigned long':'const unsigned long' static constexpr cinit
|   |   | `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |   |   `-IntegerLiteral 'unsigned long' 2
|   |   |-TypedefDecl value_type 'unsigned long':'unsigned long'
|   |   | `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |   |   |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm '_Tp'
|   |   |   `-BuiltinType 'unsigned long'
|   |   |-TypedefDecl type 'struct std::__1::integral_constant<unsigned long, 2>'
|   |   | `-RecordType 'struct std::__1::integral_constant<unsigned long, 2>'
|   |   |   `-ClassTemplateSpecialization 'integral_constant'
|   |   |-CXXConversionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 2>::value_type (void) const noexcept'
|   |   | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-CXXMethodDecl constexpr operator() 'std::__1::integral_constant<unsigned long, 2>::value_type (void) const noexcept'
|   |     `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-VarDecl parent 0x7fe0278ad0a8 prev 0x7fe0278ad4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, > value 'const _Tp' constexpr
|   |-TypedefDecl referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
|   | `-TemplateSpecializationType 'integral_constant<_Bool, (true)>' sugar integral_constant
|   |   |-TemplateArgument type '_Bool'
|   |   |-TemplateArgument expr
|   |   | `-ParenExpr '_Bool'
|   |   |   `-CXXBoolLiteralExpr '_Bool' true
|   |   `-RecordType 'struct std::__1::integral_constant<_Bool, true>'
|   |     `-ClassTemplateSpecialization 'integral_constant'
|   |-TypedefDecl referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
|   | `-TemplateSpecializationType 'integral_constant<_Bool, (false)>' sugar integral_constant
|   |   |-TemplateArgument type '_Bool'
|   |   |-TemplateArgument expr
|   |   | `-ParenExpr '_Bool'
|   |   |   `-CXXBoolLiteralExpr '_Bool' false
|   |   `-RecordType 'struct std::__1::integral_constant<_Bool, false>'
|   |     `-ClassTemplateSpecialization 'integral_constant'
|   |-ClassTemplateDecl __lazy_and_impl
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _Last
|   | |-TemplateTypeParmDecl class depth 0 index 1 ... _Preds
|   | |-CXXRecordDecl struct __lazy_and_impl
|   | `-ClassTemplateSpecialization '__lazy_and_impl'
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_and_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Preds
|   | `-CXXRecordDecl implicit struct __lazy_and_impl
|   |-ClassTemplateSpecializationDecl struct __lazy_and_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __lazy_and_impl
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_and_impl definition
|   | |-public 'integral_constant<_Bool, _Pred::type::value>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Pred
|   | `-CXXRecordDecl implicit struct __lazy_and_impl
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_and_impl definition
|   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-CXXRecordDecl implicit struct __lazy_and_impl
|   |-ClassTemplateDecl __lazy_and
|   | |-TemplateTypeParmDecl class depth 0 index 0 _P1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Pr
|   | `-CXXRecordDecl struct __lazy_and definition
|   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
|   |   `-CXXRecordDecl implicit struct __lazy_and
|   |-ClassTemplateDecl __lazy_or_impl
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _List
|   | |-TemplateTypeParmDecl class depth 0 index 1 ... _Preds
|   | |-CXXRecordDecl struct __lazy_or_impl
|   | `-ClassTemplateSpecialization '__lazy_or_impl'
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_or_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Preds
|   | `-CXXRecordDecl implicit struct __lazy_or_impl
|   |-ClassTemplateSpecializationDecl struct __lazy_or_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __lazy_or_impl
|   |-ClassTemplatePartialSpecializationDecl struct __lazy_or_impl definition
|   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-CXXRecordDecl implicit struct __lazy_or_impl
|   |-ClassTemplateDecl __lazy_or
|   | |-TemplateTypeParmDecl class depth 0 index 0 _P1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Pr
|   | `-CXXRecordDecl struct __lazy_or definition
|   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
|   |   `-CXXRecordDecl implicit struct __lazy_or
|   |-ClassTemplateDecl __lazy_not
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Pred
|   | `-CXXRecordDecl struct __lazy_not definition
|   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
|   |   `-CXXRecordDecl implicit struct __lazy_not
|   |-ClassTemplateDecl __and_
|   | |-TemplateTypeParmDecl class depth 0 index 0 ...
|   | |-CXXRecordDecl struct __and_
|   | `-ClassTemplateSpecialization '__and_'
|   |-ClassTemplateSpecializationDecl struct __and_ definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl struct __and_ definition
|   | |-public '_B0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | `-CXXRecordDecl implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl struct __and_ definition
|   | |-public 'conditional<_B0::value, _B1, _B0>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _B1
|   | `-CXXRecordDecl implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl struct __and_ definition
|   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument type 'type-parameter-0-2'
|   | | `-TemplateArgument type 'type-parameter-0-3...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _B1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _B2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 ... _Bn
|   | `-CXXRecordDecl implicit struct __and_
|   |-ClassTemplateDecl __or_
|   | |-TemplateTypeParmDecl class depth 0 index 0 ...
|   | |-CXXRecordDecl struct __or_
|   | `-ClassTemplateSpecialization '__or_'
|   |-ClassTemplateSpecializationDecl struct __or_ definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl struct __or_ definition
|   | |-public '_B0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | `-CXXRecordDecl implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl struct __or_ definition
|   | |-public 'conditional<_B0::value, _B0, _B1>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _B1
|   | `-CXXRecordDecl implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl struct __or_ definition
|   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument type 'type-parameter-0-2'
|   | | `-TemplateArgument type 'type-parameter-0-3...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _B1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _B2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 ... _Bn
|   | `-CXXRecordDecl implicit struct __or_
|   |-ClassTemplateDecl __not_
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __not_ definition
|   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
|   |   `-CXXRecordDecl implicit struct __not_
|   |-ClassTemplateDecl is_const
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_const definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, > implicit struct is_const
|   | `-ClassTemplateSpecializationDecl struct is_const definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl prev 0x7fe02901c238 implicit struct is_const
|   |-ClassTemplatePartialSpecializationDecl struct is_const definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, > implicit struct is_const
|   |-ClassTemplateDecl is_volatile
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_volatile definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, > implicit struct is_volatile
|   |-ClassTemplatePartialSpecializationDecl struct is_volatile definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, > implicit struct is_volatile
|   |-ClassTemplateDecl remove_const
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct remove_const definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, > implicit struct remove_const
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | |-ClassTemplateSpecializationDecl struct remove_const definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe0290193e8 implicit struct remove_const
|   | | `-TypedefDecl referenced type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_const definition
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-CXXRecordDecl prev 0x7fe02901ea58 implicit struct remove_const
|   | | `-TypedefDecl referenced type 'unsigned long &':'unsigned long &'
|   | |   `-SubstTemplateTypeParmType 'unsigned long &' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-LValueReferenceType 'unsigned long &'
|   | |       `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_const definition
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-CXXRecordDecl prev 0x7fe02901fce8 implicit struct remove_const
|   | | `-TypedefDecl referenced type 'const unsigned long &':'const unsigned long &'
|   | |   `-SubstTemplateTypeParmType 'const unsigned long &' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-LValueReferenceType 'const unsigned long &'
|   | |       `-QualType 'const unsigned long' const
|   | |         `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_const definition
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | |-CXXRecordDecl prev 0x7fe0280b5978 implicit struct remove_const
|   | | `-TypedefDecl referenced type 'unsigned long &&':'unsigned long &&'
|   | |   `-SubstTemplateTypeParmType 'unsigned long &&' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-RValueReferenceType 'unsigned long &&'
|   | |       `-BuiltinType 'unsigned long'
|   | `-ClassTemplateSpecializationDecl struct remove_const definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl prev 0x7fe0280c0f18 implicit struct remove_const
|   |   `-TypedefDecl referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Tp'
|   |       `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |         `-ClassTemplateSpecialization 'pair'
|   |-ClassTemplatePartialSpecializationDecl struct remove_const definition
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, > implicit struct remove_const
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_const_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_const_t 'typename remove_const<_Tp>::type'
|   |   `-DependentNameType 'typename remove_const<_Tp>::type' dependent
|   |-ClassTemplateDecl remove_volatile
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct remove_volatile definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, > implicit struct remove_volatile
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | |-ClassTemplateSpecializationDecl struct remove_volatile definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe0290197f0 implicit struct remove_volatile
|   | | `-TypedefDecl referenced type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_volatile definition
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-CXXRecordDecl prev 0x7fe02901ee60 implicit struct remove_volatile
|   | | `-TypedefDecl referenced type 'unsigned long &':'unsigned long &'
|   | |   `-SubstTemplateTypeParmType 'unsigned long &' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-LValueReferenceType 'unsigned long &'
|   | |       `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_volatile definition
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-CXXRecordDecl prev 0x7fe0290200f0 implicit struct remove_volatile
|   | | `-TypedefDecl referenced type 'const unsigned long &':'const unsigned long &'
|   | |   `-SubstTemplateTypeParmType 'const unsigned long &' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-LValueReferenceType 'const unsigned long &'
|   | |       `-QualType 'const unsigned long' const
|   | |         `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_volatile definition
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | |-CXXRecordDecl prev 0x7fe0280b5d80 implicit struct remove_volatile
|   | | `-TypedefDecl referenced type 'unsigned long &&':'unsigned long &&'
|   | |   `-SubstTemplateTypeParmType 'unsigned long &&' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-RValueReferenceType 'unsigned long &&'
|   | |       `-BuiltinType 'unsigned long'
|   | `-ClassTemplateSpecializationDecl struct remove_volatile definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl prev 0x7fe0280c1320 implicit struct remove_volatile
|   |   `-TypedefDecl referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Tp'
|   |       `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |         `-ClassTemplateSpecialization 'pair'
|   |-ClassTemplatePartialSpecializationDecl struct remove_volatile definition
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, > implicit struct remove_volatile
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_volatile_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_volatile_t 'typename remove_volatile<_Tp>::type'
|   |   `-DependentNameType 'typename remove_volatile<_Tp>::type' dependent
|   |-ClassTemplateDecl remove_cv
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct remove_cv definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, > implicit struct remove_cv
|   | | `-TypedefDecl type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
|   | |   `-DependentNameType 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
|   | |-ClassTemplateSpecializationDecl struct remove_cv definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe029019108 implicit struct remove_cv
|   | | `-TypedefDecl referenced type 'typename remove_volatile<typename remove_const<unsigned long>::type>::type':'unsigned long'
|   | |   `-ElaboratedType 'typename remove_volatile<typename remove_const<unsigned long>::type>::type' sugar
|   | |     `-TypedefType 'std::__1::remove_volatile<unsigned long>::type' sugar
|   | |       |-Typedef 'type'
|   | |       `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |         | `-TemplateTypeParm '_Tp'
|   | |         `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_cv definition
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-CXXRecordDecl prev 0x7fe02901e778 implicit struct remove_cv
|   | | `-TypedefDecl referenced type 'typename remove_volatile<typename remove_const<unsigned long &>::type>::type':'unsigned long &'
|   | |   `-ElaboratedType 'typename remove_volatile<typename remove_const<unsigned long &>::type>::type' sugar
|   | |     `-TypedefType 'std::__1::remove_volatile<unsigned long &>::type' sugar
|   | |       |-Typedef 'type'
|   | |       `-SubstTemplateTypeParmType 'unsigned long &' sugar
|   | |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |         | `-TemplateTypeParm '_Tp'
|   | |         `-LValueReferenceType 'unsigned long &'
|   | |           `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_cv definition
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-CXXRecordDecl prev 0x7fe02901fa00 implicit struct remove_cv
|   | | `-TypedefDecl referenced type 'typename remove_volatile<typename remove_const<const unsigned long &>::type>::type':'const unsigned long &'
|   | |   `-ElaboratedType 'typename remove_volatile<typename remove_const<const unsigned long &>::type>::type' sugar
|   | |     `-TypedefType 'std::__1::remove_volatile<const unsigned long &>::type' sugar
|   | |       |-Typedef 'type'
|   | |       `-SubstTemplateTypeParmType 'const unsigned long &' sugar
|   | |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |         | `-TemplateTypeParm '_Tp'
|   | |         `-LValueReferenceType 'const unsigned long &'
|   | |           `-QualType 'const unsigned long' const
|   | |             `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct remove_cv definition
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | |-CXXRecordDecl prev 0x7fe0280b5698 implicit struct remove_cv
|   | | `-TypedefDecl referenced type 'typename remove_volatile<typename remove_const<unsigned long &&>::type>::type':'unsigned long &&'
|   | |   `-ElaboratedType 'typename remove_volatile<typename remove_const<unsigned long &&>::type>::type' sugar
|   | |     `-TypedefType 'std::__1::remove_volatile<unsigned long &&>::type' sugar
|   | |       |-Typedef 'type'
|   | |       `-SubstTemplateTypeParmType 'unsigned long &&' sugar
|   | |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |         | `-TemplateTypeParm '_Tp'
|   | |         `-RValueReferenceType 'unsigned long &&'
|   | |           `-BuiltinType 'unsigned long'
|   | `-ClassTemplateSpecializationDecl struct remove_cv definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl prev 0x7fe0280c0c30 implicit struct remove_cv
|   |   `-TypedefDecl referenced type 'typename remove_volatile<typename remove_const<struct pair<unsigned long, unsigned long> >::type>::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-ElaboratedType 'typename remove_volatile<typename remove_const<struct pair<unsigned long, unsigned long> >::type>::type' sugar
|   |       `-TypedefType 'std::__1::remove_volatile<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |         |-Typedef 'type'
|   |         `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |           |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |           | `-TemplateTypeParm '_Tp'
|   |           `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |             `-ClassTemplateSpecialization 'pair'
|   |-TypeAliasTemplateDecl remove_cv_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_cv_t 'typename remove_cv<_Tp>::type'
|   |   `-DependentNameType 'typename remove_cv<_Tp>::type' dependent
|   |-ClassTemplateDecl __libcpp_is_void
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __libcpp_is_void
|   | |-ClassTemplateSpecialization '__libcpp_is_void'
|   | |-ClassTemplateSpecializationDecl struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe029019cf0 implicit struct __libcpp_is_void
|   | |-ClassTemplateSpecializationDecl struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-CXXRecordDecl prev 0x7fe02901f360 implicit struct __libcpp_is_void
|   | |-ClassTemplateSpecializationDecl struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-CXXRecordDecl prev 0x7fe0290205f0 implicit struct __libcpp_is_void
|   | |-ClassTemplateSpecializationDecl struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | `-CXXRecordDecl prev 0x7fe0280b6280 implicit struct __libcpp_is_void
|   | `-ClassTemplateSpecializationDecl struct __libcpp_is_void definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c5de0 implicit struct __libcpp_is_void
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_void definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'void'
|   | `-CXXRecordDecl implicit struct __libcpp_is_void
|   |-ClassTemplateDecl is_void
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, > implicit struct is_void
|   | |-ClassTemplateSpecializationDecl struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<unsigned long>::type>':'struct std::__1::__libcpp_is_void<unsigned long>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe029018eb0 implicit struct is_void
|   | |-ClassTemplateSpecializationDecl struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<unsigned long &>::type>':'struct std::__1::__libcpp_is_void<unsigned long &>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-CXXRecordDecl prev 0x7fe02901e528 implicit struct is_void
|   | |-ClassTemplateSpecializationDecl struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<const unsigned long &>::type>':'struct std::__1::__libcpp_is_void<const unsigned long &>'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-CXXRecordDecl prev 0x7fe02901f798 implicit struct is_void
|   | |-ClassTemplateSpecializationDecl struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<unsigned long &&>::type>':'struct std::__1::__libcpp_is_void<unsigned long &&>'
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | `-CXXRecordDecl prev 0x7fe0280b5448 implicit struct is_void
|   | `-ClassTemplateSpecializationDecl struct is_void definition
|   |   |-public '__libcpp_is_void<typename remove_cv<struct pair<unsigned long, unsigned long> >::type>':'struct std::__1::__libcpp_is_void<struct std::__1::pair<unsigned long, unsigned long> >'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c5a90 implicit struct is_void
|   |-ClassTemplateDecl __is_nullptr_t_impl
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __is_nullptr_t_impl definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __is_nullptr_t_impl
|   | |-ClassTemplateSpecialization '__is_nullptr_t_impl'
|   | |-ClassTemplateSpecializationDecl struct __is_nullptr_t_impl definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe02901a5b0 implicit struct __is_nullptr_t_impl
|   | `-ClassTemplateSpecializationDecl struct __is_nullptr_t_impl definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c6950 implicit struct __is_nullptr_t_impl
|   |-ClassTemplateSpecializationDecl struct __is_nullptr_t_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'nullptr_t'
|   | `-CXXRecordDecl implicit struct __is_nullptr_t_impl
|   |-ClassTemplateDecl __is_nullptr_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __is_nullptr_t definition
|   | | |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, > implicit struct __is_nullptr_t
|   | |-ClassTemplateSpecializationDecl struct __is_nullptr_t definition
|   | | |-public '__is_nullptr_t_impl<typename remove_cv<unsigned long>::type>':'struct std::__1::__is_nullptr_t_impl<unsigned long>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe02901a268 implicit struct __is_nullptr_t
|   | `-ClassTemplateSpecializationDecl struct __is_nullptr_t definition
|   |   |-public '__is_nullptr_t_impl<typename remove_cv<struct pair<unsigned long, unsigned long> >::type>':'struct std::__1::__is_nullptr_t_impl<struct std::__1::pair<unsigned long, unsigned long> >'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c6608 implicit struct __is_nullptr_t
|   |-ClassTemplateDecl is_null_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_null_pointer definition
|   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, > implicit struct is_null_pointer
|   |-ClassTemplateDecl __libcpp_is_integral
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __libcpp_is_integral definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization '__libcpp_is_integral'
|   | `-ClassTemplateSpecialization '__libcpp_is_integral'
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type '_Bool'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'signed char'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned char'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'wchar_t'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char16_t'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char32_t'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'short'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned short'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'int'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned int'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned long'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long long'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned long long'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type '__int128'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned __int128'
|   | `-CXXRecordDecl implicit struct __libcpp_is_integral
|   |-ClassTemplateDecl is_integral
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_integral definition
|   |   |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, > implicit struct is_integral
|   |-ClassTemplateDecl __libcpp_is_floating_point
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __libcpp_is_floating_point definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __libcpp_is_floating_point
|   | |-ClassTemplateSpecialization '__libcpp_is_floating_point'
|   | |-ClassTemplateSpecialization '__libcpp_is_floating_point'
|   | `-ClassTemplateSpecialization '__libcpp_is_floating_point'
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'float'
|   | `-CXXRecordDecl implicit struct __libcpp_is_floating_point
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'double'
|   | `-CXXRecordDecl implicit struct __libcpp_is_floating_point
|   |-ClassTemplateSpecializationDecl struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long double'
|   | `-CXXRecordDecl implicit struct __libcpp_is_floating_point
|   |-ClassTemplateDecl is_floating_point
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_floating_point definition
|   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, > implicit struct is_floating_point
|   |-ClassTemplateDecl is_array
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_array definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, > implicit struct is_array
|   | `-ClassTemplateSpecializationDecl struct is_array definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c46b0 implicit struct is_array
|   |-ClassTemplatePartialSpecializationDecl struct is_array definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, > implicit struct is_array
|   |-ClassTemplatePartialSpecializationDecl struct is_array definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, > implicit struct is_array
|   |-ClassTemplateDecl __libcpp_is_pointer
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_pointer
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_pointer definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_pointer
|   |-ClassTemplateDecl is_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_pointer definition
|   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, > implicit struct is_pointer
|   |-ClassTemplateDecl is_lvalue_reference
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_lvalue_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, > implicit struct is_lvalue_reference
|   |-ClassTemplatePartialSpecializationDecl struct is_lvalue_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, > implicit struct is_lvalue_reference
|   |-ClassTemplateDecl is_rvalue_reference
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_rvalue_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, > implicit struct is_rvalue_reference
|   |-ClassTemplatePartialSpecializationDecl struct is_rvalue_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, > implicit struct is_rvalue_reference
|   |-ClassTemplateDecl is_reference
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_reference definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, > implicit struct is_reference
|   | |-ClassTemplateSpecializationDecl struct is_reference definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe029017f48 implicit struct is_reference
|   | `-ClassTemplateSpecializationDecl struct is_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c6228 implicit struct is_reference
|   |-ClassTemplatePartialSpecializationDecl struct is_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, > implicit struct is_reference
|   |-ClassTemplatePartialSpecializationDecl struct is_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, > implicit struct is_reference
|   |-ClassTemplateDecl is_union
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_union definition
|   | | |-public 'integral_constant<_Bool, __is_union(_Tp)>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, > implicit struct is_union
|   | |-ClassTemplateSpecializationDecl struct is_union definition
|   | | |-public 'integral_constant<_Bool, __is_union(unsigned long)>':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe0290189e8 implicit struct is_union
|   | `-ClassTemplateSpecializationDecl struct is_union definition
|   |   |-public 'integral_constant<_Bool, __is_union(struct std::__1::pair<unsigned long, unsigned long>)>':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c55c8 implicit struct is_union
|   |-ClassTemplateDecl is_class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_class definition
|   | | |-public 'integral_constant<_Bool, __is_class(_Tp)>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, > implicit struct is_class
|   | |-ClassTemplateSpecializationDecl struct is_class definition
|   | | |-public 'integral_constant<_Bool, __is_class(unsigned long)>':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe029018578 implicit struct is_class
|   | `-ClassTemplateSpecializationDecl struct is_class definition
|   |   |-public 'integral_constant<_Bool, __is_class(struct std::__1::pair<unsigned long, unsigned long>)>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c5158 implicit struct is_class
|   |-ClassTemplateDecl is_same
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Up
|   | |-CXXRecordDecl struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, > implicit struct is_same
|   | |-ClassTemplateSpecializationDecl struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-TemplateArgument type 'struct std::__1::__two'
|   | | `-CXXRecordDecl prev 0x7fe029016c88 implicit struct is_same
|   | |-ClassTemplateSpecializationDecl struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-TemplateArgument type 'struct std::__1::__two'
|   | | `-CXXRecordDecl prev 0x7fe02901d6e8 implicit struct is_same
|   | |-ClassTemplateSpecializationDecl struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long> &'
|   | | |-TemplateArgument type 'struct std::__1::__two'
|   | | `-CXXRecordDecl prev 0x7fe0280c3d08 implicit struct is_same
|   | |-ClassTemplateSpecializationDecl struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | | |-TemplateArgument type 'void'
|   | | `-CXXRecordDecl prev 0x7fe0280c8140 implicit struct is_same
|   | `-ClassTemplateSpecializationDecl struct is_same definition
|   |   |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c94d0 implicit struct is_same
|   |-ClassTemplatePartialSpecializationDecl struct is_same definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, > implicit struct is_same
|   |-NamespaceDecl __libcpp_is_function_imp
|   | |-CXXRecordDecl referenced struct __dummy_type definition
|   | | |-CXXRecordDecl implicit struct __dummy_type
|   | | |-CXXConstructorDecl implicit constexpr __dummy_type 'void (void)' inline default trivial noexcept-unevaluated 0x7fe02901b580
|   | | |-CXXConstructorDecl implicit constexpr __dummy_type 'void (const struct std::__1::__libcpp_is_function_imp::__dummy_type &)' inline default trivial noexcept-unevaluated 0x7fe02901b698
|   | | | `-ParmVarDecl 'const struct std::__1::__libcpp_is_function_imp::__dummy_type &'
|   | | `-CXXConstructorDecl implicit constexpr __dummy_type 'void (struct std::__1::__libcpp_is_function_imp::__dummy_type &&)' inline default trivial noexcept-unevaluated 0x7fe02901b858
|   | |   `-ParmVarDecl 'struct std::__1::__libcpp_is_function_imp::__dummy_type &&'
|   | |-FunctionTemplateDecl __test
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl __test 'char (_Tp *)'
|   | |   `-ParmVarDecl '_Tp *'
|   | |-FunctionTemplateDecl __test
|   | | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | | `-FunctionDecl __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
|   | |   `-ParmVarDecl 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
|   | |-FunctionTemplateDecl __test
|   | | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | | |-FunctionDecl __test 'struct std::__1::__two (...)'
|   | | `-FunctionDecl referenced __test 'struct std::__1::__two (...)'
|   | |   `-TemplateArgument type 'unsigned long'
|   | |-FunctionTemplateDecl __source
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | |-FunctionDecl __source '_Tp &(int)'
|   | | | `-ParmVarDecl 'int'
|   | | `-FunctionDecl referenced __source 'unsigned long &(int)'
|   | |   |-TemplateArgument type 'unsigned long'
|   | |   `-ParmVarDecl 'int'
|   | `-FunctionTemplateDecl __source
|   |   |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   |   |-FunctionDecl __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
|   |   `-FunctionDecl __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
|   |     `-TemplateArgument type 'unsigned long'
|   |-ClassTemplateDecl __libcpp_is_function
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-BinaryOperator '<dependent type>' '||'
|   | |     | |-BinaryOperator '<dependent type>' '||'
|   | |     | | |-BinaryOperator '<dependent type>' '||'
|   | |     | | | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __libcpp_is_function definition
|   | | |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
|   | | `-CXXRecordDecl implicit struct __libcpp_is_function
|   | |-ClassTemplateSpecializationDecl struct __libcpp_is_function definition
|   | | |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<unsigned long>(__libcpp_is_function_imp::__source<unsigned long>(0))) == 1>':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument integral 0
|   | | `-CXXRecordDecl prev 0x7fe02901a9e8 implicit struct __libcpp_is_function
|   | `-ClassTemplateSpecializationDecl struct __libcpp_is_function definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-TemplateArgument integral 1
|   |   `-CXXRecordDecl prev 0x7fe0280c6d88 implicit struct __libcpp_is_function
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_function definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_function
|   |-ClassTemplateDecl is_function
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_function definition
|   | | |-public '__libcpp_is_function<_Tp>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, > implicit struct is_function
|   | |-ClassTemplateSpecializationDecl struct is_function definition
|   | | |-public '__libcpp_is_function<unsigned long>':'struct std::__1::__libcpp_is_function<unsigned long, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe0290182e8 implicit struct is_function
|   | `-ClassTemplateSpecializationDecl struct is_function definition
|   |   |-public '__libcpp_is_function<struct std::__1::pair<unsigned long, unsigned long> >':'struct std::__1::__libcpp_is_function<struct std::__1::pair<unsigned long, unsigned long>, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c4ec0 implicit struct is_function
|   |-ClassTemplateDecl __member_pointer_traits_imp
|   | |-TemplateTypeParmDecl class depth 0 index 0 _MP
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1 _IsMemberFunctionPtr
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2 _IsMemberObjectPtr
|   | `-CXXRecordDecl struct __member_pointer_traits_imp definition
|   |   `-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   |-ClassTemplateDecl __libcpp_is_member_function_pointer
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_member_function_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_member_function_pointer
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_member_function_pointer definition
|   | |-public 'is_function<_Ret>'
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Class
|   | `-CXXRecordDecl implicit struct __libcpp_is_member_function_pointer
|   |-ClassTemplateDecl is_member_function_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_member_function_pointer definition
|   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, > implicit struct is_member_function_pointer
|   |-ClassTemplateDecl __libcpp_is_member_pointer
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_member_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_member_pointer
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_member_pointer definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Up
|   | `-CXXRecordDecl implicit struct __libcpp_is_member_pointer
|   |-ClassTemplateDecl is_member_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_member_pointer definition
|   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, > implicit struct is_member_pointer
|   |-ClassTemplateDecl is_member_object_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_member_object_pointer definition
|   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, > implicit struct is_member_object_pointer
|   |-ClassTemplateDecl is_enum
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_enum definition
|   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, > implicit struct is_enum
|   |-ClassTemplateDecl is_arithmetic
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_arithmetic definition
|   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, > implicit struct is_arithmetic
|   |-ClassTemplateDecl is_fundamental
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_fundamental definition
|   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, > implicit struct is_fundamental
|   |-ClassTemplateDecl is_scalar
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_scalar definition
|   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, > implicit struct is_scalar
|   | `-ClassTemplateSpecialization 'is_scalar'
|   |-ClassTemplateSpecializationDecl struct is_scalar definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'nullptr_t'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, > implicit struct is_scalar
|   |-ClassTemplateDecl is_object
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_object definition
|   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, > implicit struct is_object
|   |-ClassTemplateDecl is_compound
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_compound definition
|   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, > implicit struct is_compound
|   |-CXXRecordDecl struct __is_referenceable_impl definition
|   | |-CXXRecordDecl implicit struct __is_referenceable_impl
|   | |-FunctionTemplateDecl __test
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | |-CXXMethodDecl __test '_Tp &(int)' static
|   | | | `-ParmVarDecl 'int'
|   | | |-CXXMethodDecl referenced __test 'unsigned long &(int)' static
|   | | | |-TemplateArgument type 'unsigned long'
|   | | | `-ParmVarDecl 'int'
|   | | |-CXXMethodDecl referenced __test 'const unsigned long &(int)' static
|   | | | |-TemplateArgument type 'const unsigned long'
|   | | | `-ParmVarDecl 'int'
|   | | `-CXXMethodDecl referenced __test 'struct std::__1::pair<unsigned long, unsigned long> &(int)' static
|   | |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | |   `-ParmVarDecl 'int'
|   | `-FunctionTemplateDecl __test
|   |   |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   |   |-CXXMethodDecl __test 'struct std::__1::__two (...)' static
|   |   |-CXXMethodDecl __test 'struct std::__1::__two (...)' static
|   |   | `-TemplateArgument type 'unsigned long'
|   |   |-CXXMethodDecl __test 'struct std::__1::__two (...)' static
|   |   | `-TemplateArgument type 'const unsigned long'
|   |   `-CXXMethodDecl __test 'struct std::__1::__two (...)' static
|   |     `-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |-ClassTemplateDecl __is_referenceable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __is_referenceable definition
|   | | |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
|   | | `-CXXRecordDecl implicit struct __is_referenceable
|   | |-ClassTemplateSpecializationDecl struct __is_referenceable definition
|   | | |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<unsigned long>(0)), struct __two>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe029016298 implicit struct __is_referenceable
|   | |-ClassTemplateSpecializationDecl struct __is_referenceable definition
|   | | |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<const unsigned long>(0)), struct __two>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'const unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe02901ce38 implicit struct __is_referenceable
|   | `-ClassTemplateSpecializationDecl struct __is_referenceable definition
|   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<struct pair<unsigned long, unsigned long> >(0)), struct __two>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c3440 implicit struct __is_referenceable
|   |-ClassTemplateDecl __add_const
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-BinaryOperator '<dependent type>' '||'
|   | |     | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __add_const definition
|   | | |-CXXRecordDecl implicit struct __add_const
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | `-ClassTemplateSpecializationDecl struct __add_const definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 0
|   |   |-CXXRecordDecl prev 0x7fe02901c5e0 implicit struct __add_const
|   |   `-TypedefDecl referenced type 'const unsigned long':'const unsigned long'
|   |     `-QualType 'const unsigned long' const
|   |       `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         | `-TemplateTypeParm '_Tp'
|   |         `-BuiltinType 'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl struct __add_const definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_const
|   | `-TypedefDecl type 'const _Tp'
|   |   `-QualType 'const _Tp' const
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_const
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct add_const definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, > implicit struct add_const
|   | | `-TypedefDecl type 'typename __add_const<_Tp>::type'
|   | |   `-DependentNameType 'typename __add_const<_Tp>::type' dependent
|   | `-ClassTemplateSpecializationDecl struct add_const definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-CXXRecordDecl prev 0x7fe029017c20 implicit struct add_const
|   |   `-TypedefDecl referenced type 'typename __add_const<unsigned long>::type':'const unsigned long'
|   |     `-ElaboratedType 'typename __add_const<unsigned long>::type' sugar
|   |       `-TypedefType 'std::__1::__add_const<unsigned long, false>::type' sugar
|   |         |-Typedef 'type'
|   |         `-QualType 'const unsigned long' const
|   |           `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |             |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |             | `-TemplateTypeParm '_Tp'
|   |             `-BuiltinType 'unsigned long'
|   |-TypeAliasTemplateDecl add_const_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_const_t 'typename add_const<_Tp>::type'
|   |   `-DependentNameType 'typename add_const<_Tp>::type' dependent
|   |-ClassTemplateDecl __add_volatile
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-BinaryOperator '<dependent type>' '||'
|   | |     | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __add_volatile definition
|   |   |-CXXRecordDecl implicit struct __add_volatile
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct __add_volatile definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_volatile
|   | `-TypedefDecl type 'volatile _Tp'
|   |   `-QualType 'volatile _Tp' volatile
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_volatile
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct add_volatile definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, > implicit struct add_volatile
|   |   `-TypedefDecl type 'typename __add_volatile<_Tp>::type'
|   |     `-DependentNameType 'typename __add_volatile<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl add_volatile_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_volatile_t 'typename add_volatile<_Tp>::type'
|   |   `-DependentNameType 'typename add_volatile<_Tp>::type' dependent
|   |-ClassTemplateDecl add_cv
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct add_cv definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, > implicit struct add_cv
|   |   `-TypedefDecl type 'typename add_const<typename add_volatile<_Tp>::type>::type'
|   |     `-DependentNameType 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
|   |-TypeAliasTemplateDecl add_cv_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_cv_t 'typename add_cv<_Tp>::type'
|   |   `-DependentNameType 'typename add_cv<_Tp>::type' dependent
|   |-ClassTemplateDecl remove_reference
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct remove_reference definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, > implicit struct remove_reference
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | |-ClassTemplateSpecializationDecl struct remove_reference definition
|   | | |-TemplateArgument type 'struct A &'
|   | | |-CXXRecordDecl prev 0x7fe0280afe38 implicit struct remove_reference
|   | | `-TypedefDecl referenced type 'struct A':'struct A'
|   | |   `-SubstTemplateTypeParmType 'struct A' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-RecordType 'struct A'
|   | |       `-CXXRecord 'A'
|   | |-ClassTemplateSpecializationDecl struct remove_reference definition
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | | |-CXXRecordDecl prev 0x7fe0280c0808 implicit struct remove_reference
|   | | `-TypedefDecl referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   | |   `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   | |       `-ClassTemplateSpecialization 'pair'
|   | |-ClassTemplateSpecializationDecl struct remove_reference definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe0289a7588 implicit struct remove_reference
|   | | `-TypedefDecl referenced type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-BuiltinType 'unsigned long'
|   | `-ClassTemplateSpecializationDecl struct remove_reference definition
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-CXXRecordDecl prev 0x7fe027889768 implicit struct remove_reference
|   |   `-TypedefDecl referenced type 'unsigned long':'unsigned long'
|   |     `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Tp'
|   |       `-BuiltinType 'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl struct remove_reference definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, > implicit struct remove_reference
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_reference definition
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, > implicit struct remove_reference
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_reference_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_reference_t 'typename remove_reference<_Tp>::type'
|   |   `-DependentNameType 'typename remove_reference<_Tp>::type' dependent
|   |-ClassTemplateDecl __add_lvalue_reference_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __add_lvalue_reference_impl definition
|   | | |-CXXRecordDecl implicit struct __add_lvalue_reference_impl
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | |-ClassTemplateSpecializationDecl struct __add_lvalue_reference_impl definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl prev 0x7fe0290176a0 implicit struct __add_lvalue_reference_impl
|   | | `-TypedefDecl referenced type 'unsigned long &'
|   | |   `-LValueReferenceType 'unsigned long &'
|   | |     `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |       | `-TemplateTypeParm '_Tp'
|   | |       `-BuiltinType 'unsigned long'
|   | `-ClassTemplateSpecializationDecl struct __add_lvalue_reference_impl definition
|   |   |-TemplateArgument type 'const unsigned long'
|   |   |-TemplateArgument integral 1
|   |   |-CXXRecordDecl prev 0x7fe02901dce0 implicit struct __add_lvalue_reference_impl
|   |   `-TypedefDecl referenced type 'const unsigned long &'
|   |     `-LValueReferenceType 'const unsigned long &'
|   |       `-SubstTemplateTypeParmType 'const unsigned long' sugar
|   |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         | `-TemplateTypeParm '_Tp'
|   |         `-QualType 'const unsigned long' const
|   |           `-BuiltinType 'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl struct __add_lvalue_reference_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_lvalue_reference_impl
|   | `-TypedefDecl type '_Tp &'
|   |   `-LValueReferenceType '_Tp &' dependent
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_lvalue_reference
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct add_lvalue_reference definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, > implicit struct add_lvalue_reference
|   | | `-TypedefDecl type 'typename __add_lvalue_reference_impl<_Tp>::type'
|   | |   `-DependentNameType 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
|   | |-ClassTemplateSpecializationDecl struct add_lvalue_reference definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe029015f78 implicit struct add_lvalue_reference
|   | | `-TypedefDecl referenced type 'typename __add_lvalue_reference_impl<unsigned long>::type':'unsigned long &'
|   | |   `-ElaboratedType 'typename __add_lvalue_reference_impl<unsigned long>::type' sugar
|   | |     `-TypedefType 'std::__1::__add_lvalue_reference_impl<unsigned long, true>::type' sugar
|   | |       |-Typedef 'type'
|   | |       `-LValueReferenceType 'unsigned long &'
|   | |         `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |           |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |           | `-TemplateTypeParm '_Tp'
|   | |           `-BuiltinType 'unsigned long'
|   | `-ClassTemplateSpecializationDecl struct add_lvalue_reference definition
|   |   |-TemplateArgument type 'const unsigned long'
|   |   |-CXXRecordDecl prev 0x7fe02901cb10 implicit struct add_lvalue_reference
|   |   `-TypedefDecl referenced type 'typename __add_lvalue_reference_impl<const unsigned long>::type':'const unsigned long &'
|   |     `-ElaboratedType 'typename __add_lvalue_reference_impl<const unsigned long>::type' sugar
|   |       `-TypedefType 'std::__1::__add_lvalue_reference_impl<const unsigned long, true>::type' sugar
|   |         |-Typedef 'type'
|   |         `-LValueReferenceType 'const unsigned long &'
|   |           `-SubstTemplateTypeParmType 'const unsigned long' sugar
|   |             |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |             | `-TemplateTypeParm '_Tp'
|   |             `-QualType 'const unsigned long' const
|   |               `-BuiltinType 'unsigned long'
|   |-TypeAliasTemplateDecl add_lvalue_reference_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
|   |   `-DependentNameType 'typename add_lvalue_reference<_Tp>::type' dependent
|   |-ClassTemplateDecl __add_rvalue_reference_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __add_rvalue_reference_impl definition
|   | | |-CXXRecordDecl implicit struct __add_rvalue_reference_impl
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | `-ClassTemplateSpecializationDecl struct __add_rvalue_reference_impl definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 1
|   |   |-CXXRecordDecl prev 0x7fe0280b4b10 implicit struct __add_rvalue_reference_impl
|   |   `-TypedefDecl referenced type 'unsigned long &&'
|   |     `-RValueReferenceType 'unsigned long &&'
|   |       `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         | `-TemplateTypeParm '_Tp'
|   |         `-BuiltinType 'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl struct __add_rvalue_reference_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_rvalue_reference_impl
|   | `-TypedefDecl type '_Tp &&'
|   |   `-RValueReferenceType '_Tp &&' dependent
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_rvalue_reference
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct add_rvalue_reference definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, > implicit struct add_rvalue_reference
|   | | `-TypedefDecl type 'typename __add_rvalue_reference_impl<_Tp>::type'
|   | |   `-DependentNameType 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
|   | `-ClassTemplateSpecializationDecl struct add_rvalue_reference definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-CXXRecordDecl prev 0x7fe0280b46f0 implicit struct add_rvalue_reference
|   |   `-TypedefDecl referenced type 'typename __add_rvalue_reference_impl<unsigned long>::type':'unsigned long &&'
|   |     `-ElaboratedType 'typename __add_rvalue_reference_impl<unsigned long>::type' sugar
|   |       `-TypedefType 'std::__1::__add_rvalue_reference_impl<unsigned long, true>::type' sugar
|   |         |-Typedef 'type'
|   |         `-RValueReferenceType 'unsigned long &&'
|   |           `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |             |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |             | `-TemplateTypeParm '_Tp'
|   |             `-BuiltinType 'unsigned long'
|   |-TypeAliasTemplateDecl add_rvalue_reference_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
|   |   `-DependentNameType 'typename add_rvalue_reference<_Tp>::type' dependent
|   |-FunctionTemplateDecl __declval
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl __declval '_Tp &&(int)'
|   | | `-ParmVarDecl 'int'
|   | |-FunctionDecl referenced __declval 'unsigned long &&(int)'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-ParmVarDecl 'int'
|   | |-FunctionDecl referenced __declval 'const unsigned long &&(int)'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-ParmVarDecl 'int'
|   | `-FunctionDecl referenced __declval 'unsigned long &&&&(int)'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-ParmVarDecl 'int'
|   |-FunctionTemplateDecl __declval
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl __declval '_Tp (long)'
|   | | `-ParmVarDecl 'long'
|   | |-FunctionDecl __declval 'unsigned long &(long)'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-ParmVarDecl 'long'
|   | |-FunctionDecl __declval 'const unsigned long &(long)'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-ParmVarDecl 'long'
|   | `-FunctionDecl __declval 'unsigned long &&(long)'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-ParmVarDecl 'long'
|   |-FunctionTemplateDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
|   | |-FunctionDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 referenced declval 'decltype(std::__1::__declval<unsigned long &>(0)) (void) noexcept'
|   | | `-TemplateArgument type 'unsigned long &'
|   | |-FunctionDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 referenced declval 'decltype(std::__1::__declval<const unsigned long &>(0)) (void) noexcept'
|   | | `-TemplateArgument type 'const unsigned long &'
|   | `-FunctionDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 referenced declval 'decltype(std::__1::__declval<unsigned long &&>(0)) (void) noexcept'
|   |   `-TemplateArgument type 'unsigned long &&'
|   |-ClassTemplateDecl __uncvref
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __uncvref definition
|   | | |-CXXRecordDecl implicit struct __uncvref
|   | | `-TypedefDecl type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
|   | |   `-DependentNameType 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
|   | `-ClassTemplateSpecializationDecl struct __uncvref definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl prev 0x7fe0280c0528 implicit struct __uncvref
|   |   `-TypedefDecl referenced type 'typename remove_cv<typename remove_reference<struct pair<unsigned long, unsigned long> >::type>::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-ElaboratedType 'typename remove_cv<typename remove_reference<struct pair<unsigned long, unsigned long> >::type>::type' sugar
|   |       `-TypedefType 'std::__1::remove_cv<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |         |-Typedef 'type'
|   |         `-ElaboratedType 'typename remove_volatile<typename remove_const<struct pair<unsigned long, unsigned long> >::type>::type' sugar
|   |           `-TypedefType 'std::__1::remove_volatile<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |             |-Typedef 'type'
|   |             `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |               |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |               | `-TemplateTypeParm '_Tp'
|   |               `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |                 `-ClassTemplateSpecialization 'pair'
|   |-ClassTemplateDecl __unconstref
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __unconstref definition
|   |   |-CXXRecordDecl implicit struct __unconstref
|   |   `-TypedefDecl type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
|   |     `-DependentNameType 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
|   |-TypeAliasTemplateDecl __uncvref_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl __uncvref_t 'typename __uncvref<_Tp>::type'
|   |   `-DependentNameType 'typename __uncvref<_Tp>::type' dependent
|   |-ClassTemplateDecl __is_same_uncvref
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl struct __is_same_uncvref definition
|   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
|   |   `-CXXRecordDecl implicit struct __is_same_uncvref
|   |-CXXRecordDecl referenced struct __any definition
|   | |-CXXRecordDecl implicit referenced struct __any
|   | `-CXXConstructorDecl __any 'void (...)'
|   |-ClassTemplateDecl remove_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_pointer definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, > implicit struct remove_pointer
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, > implicit struct remove_pointer
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *const'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, > implicit struct remove_pointer
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, > implicit struct remove_pointer
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, > implicit struct remove_pointer
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_pointer_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_pointer_t 'typename remove_pointer<_Tp>::type'
|   |   `-DependentNameType 'typename remove_pointer<_Tp>::type' dependent
|   |-ClassTemplateDecl __add_pointer_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __add_pointer_impl definition
|   | | |-CXXRecordDecl implicit struct __add_pointer_impl
|   | | `-TypedefDecl type 'typename remove_reference<_Tp>::type *'
|   | |   `-PointerType 'typename remove_reference<_Tp>::type *' dependent
|   | |     `-DependentNameType 'typename remove_reference<_Tp>::type' dependent
|   | `-ClassTemplateSpecializationDecl struct __add_pointer_impl definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-TemplateArgument integral 1
|   |   |-CXXRecordDecl prev 0x7fe0280c8548 implicit struct __add_pointer_impl
|   |   `-TypedefDecl referenced type 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type *'
|   |     `-PointerType 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type *'
|   |       `-ElaboratedType 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type' sugar
|   |         `-TypedefType 'std::__1::remove_reference<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |           |-Typedef 'type'
|   |           `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |             |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |             | `-TemplateTypeParm '_Tp'
|   |             `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |               `-ClassTemplateSpecialization 'pair'
|   |-ClassTemplatePartialSpecializationDecl struct __add_pointer_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __add_pointer_impl
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl add_pointer
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct add_pointer definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, > implicit struct add_pointer
|   | | `-TypedefDecl type 'typename __add_pointer_impl<_Tp>::type'
|   | |   `-DependentNameType 'typename __add_pointer_impl<_Tp>::type' dependent
|   | `-ClassTemplateSpecializationDecl struct add_pointer definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl prev 0x7fe0280c7228 implicit struct add_pointer
|   |   `-TypedefDecl referenced type 'typename __add_pointer_impl<struct pair<unsigned long, unsigned long> >::type':'typename remove_reference<struct pair<unsigned long, unsigned long> >::type *'
|   |     `-ElaboratedType 'typename __add_pointer_impl<struct pair<unsigned long, unsigned long> >::type' sugar
|   |       `-TypedefType 'std::__1::__add_pointer_impl<struct std::__1::pair<unsigned long, unsigned long>, true>::type' sugar
|   |         |-Typedef 'type'
|   |         `-PointerType 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type *'
|   |           `-ElaboratedType 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type' sugar
|   |             `-TypedefType 'std::__1::remove_reference<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |               |-Typedef 'type'
|   |               `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |                 |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |                 | `-TemplateTypeParm '_Tp'
|   |                 `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |                   `-ClassTemplateSpecialization 'pair'
|   |-TypeAliasTemplateDecl add_pointer_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl add_pointer_t 'typename add_pointer<_Tp>::type'
|   |   `-DependentNameType 'typename add_pointer<_Tp>::type' dependent
|   |-ClassTemplateDecl __libcpp_is_signed_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_signed_impl definition
|   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_signed_impl
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_signed_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_signed_impl
|   |-ClassTemplateDecl __libcpp_is_signed
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_signed definition
|   |   |-public '__libcpp_is_signed_impl<_Tp>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_signed
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_signed definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_signed
|   |-ClassTemplateDecl is_signed
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_signed definition
|   |   |-public '__libcpp_is_signed<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, > implicit struct is_signed
|   |-ClassTemplateDecl __libcpp_is_unsigned_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_unsigned_impl definition
|   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_unsigned_impl
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_unsigned_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_unsigned_impl
|   |-ClassTemplateDecl __libcpp_is_unsigned
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __libcpp_is_unsigned definition
|   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
|   |   `-CXXRecordDecl implicit struct __libcpp_is_unsigned
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_unsigned definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_unsigned
|   |-ClassTemplateDecl is_unsigned
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_unsigned definition
|   |   |-public '__libcpp_is_unsigned<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, > implicit struct is_unsigned
|   |-ClassTemplateDecl rank
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct rank definition
|   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, > implicit struct rank
|   |-ClassTemplatePartialSpecializationDecl struct rank definition
|   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, > implicit struct rank
|   |-ClassTemplatePartialSpecializationDecl struct rank definition
|   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, > implicit struct rank
|   |-ClassTemplateDecl extent
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 'unsigned int' depth 0 index 1 _Ip
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 'int' 0
|   | `-CXXRecordDecl struct extent definition
|   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, > implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl struct extent definition
|   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, > implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl struct extent definition
|   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'unsigned int' NonTypeTemplateParm 0x7fe02802cb70 '_Ip' 'unsigned int'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'unsigned int' depth 0 index 1 _Ip
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, > implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl struct extent definition
|   | |-public 'integral_constant<size_t, _Np>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, > implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl struct extent definition
|   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'unsigned int' NonTypeTemplateParm 0x7fe02802dea8 '_Ip' 'unsigned int'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-NonTypeTemplateParmDecl referenced 'unsigned int' depth 0 index 2 _Ip
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, > implicit struct extent
|   |-ClassTemplateDecl remove_extent
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct remove_extent definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, > implicit struct remove_extent
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | `-ClassTemplateSpecializationDecl struct remove_extent definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl prev 0x7fe0280c4a58 implicit struct remove_extent
|   |   `-TypedefDecl referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Tp'
|   |       `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |         `-ClassTemplateSpecialization 'pair'
|   |-ClassTemplatePartialSpecializationDecl struct remove_extent definition
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, > implicit struct remove_extent
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_extent definition
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, > implicit struct remove_extent
|   | `-TypedefDecl type '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl remove_extent_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_extent_t 'typename remove_extent<_Tp>::type'
|   |   `-DependentNameType 'typename remove_extent<_Tp>::type' dependent
|   |-ClassTemplateDecl remove_all_extents
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct remove_all_extents definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, > implicit struct remove_all_extents
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct remove_all_extents definition
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, > implicit struct remove_all_extents
|   | `-TypedefDecl type 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 'typename remove_all_extents<_Tp>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct remove_all_extents definition
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, > implicit struct remove_all_extents
|   | `-TypedefDecl type 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 'typename remove_all_extents<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl remove_all_extents_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 'typename remove_all_extents<_Tp>::type' dependent
|   |-ClassTemplateDecl __decay
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Up
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | |-CXXRecordDecl struct __decay definition
|   | | |-CXXRecordDecl implicit struct __decay
|   | | `-TypedefDecl type 'typename remove_cv<_Up>::type'
|   | |   `-DependentNameType 'typename remove_cv<_Up>::type' dependent
|   | `-ClassTemplateSpecializationDecl struct __decay definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-TemplateArgument integral 1
|   |   |-CXXRecordDecl prev 0x7fe0280c4300 implicit struct __decay
|   |   |-AccessSpecDecl public
|   |   `-TypedefDecl referenced type 'typename conditional<is_array<struct pair<unsigned long, unsigned long> >::value, typename remove_extent<struct pair<unsigned long, unsigned long> >::type *, typename conditional<is_function<struct pair<unsigned long, unsigned long> >::value, typename add_pointer<struct pair<unsigned long, unsigned long> >::type, typename remove_cv<struct pair<unsigned long, unsigned long> >::type>::type>::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-ElaboratedType 'typename conditional<is_array<struct pair<unsigned long, unsigned long> >::value, typename remove_extent<struct pair<unsigned long, unsigned long> >::type *, typename conditional<is_function<struct pair<unsigned long, unsigned long> >::value, typename add_pointer<struct pair<unsigned long, unsigned long> >::type, typename remove_cv<struct pair<unsigned long, unsigned long> >::type>::type>::type' sugar
|   |       `-TypedefType 'std::__1::conditional<false, struct std::__1::pair<unsigned long, unsigned long> *, struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |         |-Typedef 'type'
|   |         `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |           |-TemplateTypeParmType '_Then' dependent depth 0 index 1
|   |           | `-TemplateTypeParm '_Then'
|   |           `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |             `-ClassTemplateSpecialization 'pair'
|   |-ClassTemplatePartialSpecializationDecl struct __decay definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Up
|   | |-CXXRecordDecl implicit struct __decay
|   | |-AccessSpecDecl public
|   | `-TypedefDecl type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
|   |   `-DependentNameType 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
|   |-ClassTemplateDecl decay
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct decay definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, > implicit struct decay
|   | | |-AccessSpecDecl private
|   | | |-TypedefDecl referenced _Up 'typename remove_reference<_Tp>::type'
|   | | | `-DependentNameType 'typename remove_reference<_Tp>::type' dependent
|   | | |-AccessSpecDecl public
|   | | `-TypedefDecl type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
|   | |   `-DependentNameType 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
|   | `-ClassTemplateSpecializationDecl struct decay definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl prev 0x7fe0280c2f78 implicit struct decay
|   |   |-AccessSpecDecl private
|   |   |-TypedefDecl _Up 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | `-ElaboratedType 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type' sugar
|   |   |   `-TypedefType 'std::__1::remove_reference<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |   |     |-Typedef 'type'
|   |   |     `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |   |       | `-TemplateTypeParm '_Tp'
|   |   |       `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |         `-ClassTemplateSpecialization 'pair'
|   |   |-AccessSpecDecl public
|   |   `-TypedefDecl referenced type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-ElaboratedType 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' sugar
|   |       `-TypedefType 'std::__1::__decay<struct std::__1::pair<unsigned long, unsigned long>, true>::type' sugar
|   |         |-Typedef 'type'
|   |         `-ElaboratedType 'typename conditional<is_array<struct pair<unsigned long, unsigned long> >::value, typename remove_extent<struct pair<unsigned long, unsigned long> >::type *, typename conditional<is_function<struct pair<unsigned long, unsigned long> >::value, typename add_pointer<struct pair<unsigned long, unsigned long> >::type, typename remove_cv<struct pair<unsigned long, unsigned long> >::type>::type>::type' sugar
|   |           `-TypedefType 'std::__1::conditional<false, struct std::__1::pair<unsigned long, unsigned long> *, struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |             |-Typedef 'type'
|   |             `-SubstTemplateTypeParmType 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |               |-TemplateTypeParmType '_Then' dependent depth 0 index 1
|   |               | `-TemplateTypeParm '_Then'
|   |               `-RecordType 'struct std::__1::pair<unsigned long, unsigned long>'
|   |                 `-ClassTemplateSpecialization 'pair'
|   |-TypeAliasTemplateDecl decay_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl decay_t 'typename decay<_Tp>::type'
|   |   `-DependentNameType 'typename decay<_Tp>::type' dependent
|   |-ClassTemplateDecl is_abstract
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_abstract definition
|   | | |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, > implicit struct is_abstract
|   | `-ClassTemplateSpecializationDecl struct is_abstract definition
|   |   |-public 'integral_constant<_Bool, __is_abstract(unsigned long)>':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl prev 0x7fe0280bcd08 implicit struct is_abstract
|   |-ClassTemplateDecl __libcpp_is_final
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_final definition
|   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, > implicit struct __libcpp_is_final
|   |-ClassTemplateDecl is_final
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_final definition
|   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, > implicit struct is_final
|   |-ClassTemplateDecl is_base_of
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Dp
|   | `-CXXRecordDecl struct is_base_of definition
|   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, > implicit struct is_base_of
|   |-ClassTemplateDecl is_convertible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | |-CXXRecordDecl struct is_convertible definition
|   | | |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, > implicit struct is_convertible
|   | |-ClassTemplateSpecializationDecl struct is_convertible definition
|   | | |-public 'integral_constant<_Bool, __is_convertible_to(const unsigned long &, unsigned long) && !is_abstract<unsigned long>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe0280bc9e0 implicit struct is_convertible
|   | `-ClassTemplateSpecializationDecl struct is_convertible definition
|   |   |-public 'integral_constant<_Bool, __is_convertible_to(unsigned long, unsigned long) && !is_abstract<unsigned long>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl prev 0x7fe0280bea90 implicit struct is_convertible
|   |-ClassTemplateDecl is_empty
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_empty definition
|   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, > implicit struct is_empty
|   |-ClassTemplateDecl is_polymorphic
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_polymorphic definition
|   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, > implicit struct is_polymorphic
|   |-ClassTemplateDecl has_virtual_destructor
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct has_virtual_destructor definition
|   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, > implicit struct has_virtual_destructor
|   |-ClassTemplateDecl alignment_of
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct alignment_of definition
|   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, > implicit struct alignment_of
|   |-ClassTemplateDecl __type_list
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-CXXRecordDecl struct __type_list definition
|   | | |-CXXRecordDecl implicit struct __type_list
|   | | |-TypedefDecl _Head '_Hp'
|   | | | `-TemplateTypeParmType '_Hp' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm '_Hp'
|   | | `-TypedefDecl _Tail '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Tp'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type '__int128'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'long long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'int'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'short'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list definition
|   | | |-TemplateArgument type 'signed char'
|   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | | |-CXXRecordDecl prev 0x7fe0278f1c10 implicit struct __type_list
|   | | |-TypedefDecl referenced _Head 'signed char':'signed char'
|   | | | `-SubstTemplateTypeParmType 'signed char' sugar
|   | | |   |-TemplateTypeParmType '_Hp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Hp'
|   | | |   `-BuiltinType 'signed char'
|   | | `-TypedefDecl _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | |   `-SubstTemplateTypeParmType 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
|   | |     |-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Tp'
|   | |     `-RecordType 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | |       `-ClassTemplateSpecialization '__type_list'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned __int128'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned long long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned int'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl struct __type_list
|   | | |-TemplateArgument type 'unsigned short'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
|   | `-ClassTemplateSpecializationDecl struct __type_list definition
|   |   |-TemplateArgument type 'unsigned char'
|   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |   |-CXXRecordDecl prev 0x7fe0278f2a00 implicit struct __type_list
|   |   |-TypedefDecl referenced _Head 'unsigned char':'unsigned char'
|   |   | `-SubstTemplateTypeParmType 'unsigned char' sugar
|   |   |   |-TemplateTypeParmType '_Hp' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm '_Hp'
|   |   |   `-BuiltinType 'unsigned char'
|   |   `-TypedefDecl _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |     `-SubstTemplateTypeParmType 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
|   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   |       | `-TemplateTypeParm '_Tp'
|   |       `-RecordType 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |         `-ClassTemplateSpecialization '__type_list'
|   |-CXXRecordDecl referenced struct __nat definition
|   | |-CXXRecordDecl implicit referenced struct __nat
|   | |-CXXConstructorDecl __nat 'void (void)' delete trivial
|   | |-CXXConstructorDecl __nat 'void (const struct std::__1::__nat &)' delete trivial
|   | | `-ParmVarDecl 'const struct std::__1::__nat &'
|   | |-CXXMethodDecl operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
|   | | `-ParmVarDecl 'const struct std::__1::__nat &'
|   | `-CXXDestructorDecl ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fe028039ea0
|   |-ClassTemplateDecl __align_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __align_type definition
|   | | |-CXXRecordDecl implicit struct __align_type
|   | | |-VarDecl value 'const size_t':'const unsigned long' static cinit
|   | | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Tp'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned char'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned short'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned int'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'unsigned long long'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'double'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'long double'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'struct std::__1::__struct_double'
|   | |-ClassTemplateSpecializationDecl struct __align_type
|   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
|   | `-ClassTemplateSpecializationDecl struct __align_type
|   |   `-TemplateArgument type 'int *'
|   |-CXXRecordDecl referenced struct __struct_double definition
|   | |-CXXRecordDecl implicit struct __struct_double
|   | `-FieldDecl __lx 'long double'
|   |-CXXRecordDecl referenced struct __struct_double4 definition
|   | |-CXXRecordDecl implicit struct __struct_double4
|   | `-FieldDecl __lx 'double [4]'
|   |-TypedefDecl referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
|   | `-TemplateSpecializationType '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
|   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
|   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
|   |   `-RecordType 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
|   |     `-ClassTemplateSpecialization '__type_list'
|   |-ClassTemplateDecl __find_pod
|   | |-TemplateTypeParmDecl class depth 0 index 0 _TL
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 1 _Align
|   | `-CXXRecordDecl struct __find_pod
|   |-ClassTemplatePartialSpecializationDecl struct __find_pod definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028040348 '_Align' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | |-CXXRecordDecl implicit struct __find_pod
|   | `-TypedefDecl type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
|   |   `-DependentNameType 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct __find_pod definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278a4338 '_Align' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Align
|   | |-CXXRecordDecl implicit struct __find_pod
|   | `-TypedefDecl type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
|   |   `-DependentNameType 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
|   |-ClassTemplateDecl __find_max_align
|   | |-TemplateTypeParmDecl class depth 0 index 0 _TL
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 1 _Len
|   | `-CXXRecordDecl struct __find_max_align
|   |-ClassTemplatePartialSpecializationDecl struct __find_max_align definition
|   | |-public 'integral_constant<size_t, _Hp::value>'
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cea38 '_Len' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Len
|   | `-CXXRecordDecl implicit struct __find_max_align
|   |-ClassTemplateDecl __select_align
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _A1
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _A2
|   | `-CXXRecordDecl struct __select_align definition
|   |   |-CXXRecordDecl implicit struct __select_align
|   |   |-AccessSpecDecl private
|   |   |-VarDecl referenced __min 'const size_t':'const unsigned long' static cinit
|   |   | `-ConditionalOperator 'size_t':'unsigned long'
|   |   |   |-BinaryOperator '_Bool' '<'
|   |   |   | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf3b0 '_A2' 'size_t':'unsigned long'
|   |   |   | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf348 '_A1' 'size_t':'unsigned long'
|   |   |   |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf3b0 '_A2' 'size_t':'unsigned long'
|   |   |   `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf348 '_A1' 'size_t':'unsigned long'
|   |   |-VarDecl referenced __max 'const size_t':'const unsigned long' static cinit
|   |   | `-ConditionalOperator 'size_t':'unsigned long'
|   |   |   |-BinaryOperator '_Bool' '<'
|   |   |   | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf348 '_A1' 'size_t':'unsigned long'
|   |   |   | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf3b0 '_A2' 'size_t':'unsigned long'
|   |   |   |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf3b0 '_A2' 'size_t':'unsigned long'
|   |   |   `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf348 '_A1' 'size_t':'unsigned long'
|   |   |-AccessSpecDecl public
|   |   `-VarDecl value 'const size_t':'const unsigned long' static cinit
|   |     `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |       `-ConditionalOperator 'const size_t':'const unsigned long' lvalue
|   |         |-BinaryOperator '_Bool' '<'
|   |         | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cf2e0 '_Len' 'size_t':'unsigned long'
|   |         | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |         |   `-DeclRefExpr 'const size_t':'const unsigned long' lvalue Var 0x7fe0278cfa58 '__max' 'const size_t':'const unsigned long'
|   |         |-DeclRefExpr 'const size_t':'const unsigned long' lvalue Var 0x7fe0278cf8f0 '__min' 'const size_t':'const unsigned long'
|   |         `-DeclRefExpr 'const size_t':'const unsigned long' lvalue Var 0x7fe0278cfa58 '__max' 'const size_t':'const unsigned long'
|   |-ClassTemplatePartialSpecializationDecl struct __find_max_align definition
|   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278cfe78 '_Len' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Len
|   | `-CXXRecordDecl implicit struct __find_max_align
|   |-ClassTemplateDecl aligned_storage
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct aligned_storage definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, > implicit struct aligned_storage
|   |   |-TypedefDecl referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
|   |   | `-DependentNameType 'typename __find_pod<__all_types, _Align>::type' dependent
|   |   |-StaticAssertDecl
|   |   | |-UnaryOperator '<dependent type>' prefix '!'
|   |   | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   | `-StringLiteral 'const char [1]' lvalue ""
|   |   `-CXXRecordDecl union type definition
|   |     |-CXXRecordDecl implicit union type
|   |     |-FieldDecl __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
|   |     `-FieldDecl __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
|   |-TypeAliasTemplateDecl aligned_storage_t
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-TypeAliasDecl aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
|   |   `-DependentNameType 'typename aligned_storage<_Len, _Align>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278da800 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278db290 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 2
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278dbd90 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 4
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278dc830 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 8
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278dd2c0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 16
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278ddd90 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 32
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278de830 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 64
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278df2c0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 128
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278dfd90 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 256
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e0830 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 512
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e12c0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1024
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e1d90 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 2048
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e2830 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 4096
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e32c0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 8192
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
|   |-ClassTemplatePartialSpecializationDecl struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e3d90 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 16384
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, > implicit struct aligned_storage
|   | `-CXXRecordDecl struct type definition
|   |   |-AlignedAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
|   |   |-CXXRecordDecl implicit struct type
|   |   `-FieldDecl __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
|   |-ClassTemplateDecl __static_max
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 1 ... _In
|   | `-CXXRecordDecl struct __static_max
|   |-ClassTemplatePartialSpecializationDecl struct __static_max definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e4c88 '_I0' 'size_t':'unsigned long'
|   | |-TemplateArgument pack
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-CXXRecordDecl implicit struct __static_max
|   | `-VarDecl value 'const size_t':'const unsigned long' static cinit
|   |   `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e4c88 '_I0' 'size_t':'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl struct __static_max definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e5210 '_I0' 'size_t':'unsigned long'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument expr
|   | | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e5278 '_I1' 'size_t':'unsigned long'
|   | | `-TemplateArgument expr
|   | |   `-PackExpansionExpr '<dependent type>'
|   | |     `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e52e0 '_In' 'size_t':'unsigned long'
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _I1
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
|   | |-CXXRecordDecl implicit struct __static_max
|   | `-VarDecl value 'const size_t':'const unsigned long' static cinit
|   |   `-ConditionalOperator '<dependent type>'
|   |     |-BinaryOperator '_Bool' '>='
|   |     | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e5210 '_I0' 'size_t':'unsigned long'
|   |     | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278e5278 '_I1' 'size_t':'unsigned long'
|   |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-ClassTemplateDecl aligned_union
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Type0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Types
|   | `-CXXRecordDecl struct aligned_union definition
|   |   |-CXXRecordDecl implicit struct aligned_union
|   |   |-VarDecl referenced alignment_value 'const size_t':'const unsigned long' static cinit
|   |   | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   |-VarDecl referenced __len 'const size_t':'const unsigned long' static cinit
|   |   | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   `-TypedefDecl type 'typename aligned_storage<__len, alignment_value>::type'
|   |     `-DependentNameType 'typename aligned_storage<__len, alignment_value>::type' dependent
|   |-TypeAliasTemplateDecl aligned_union_t
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Types
|   | `-TypeAliasDecl aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
|   |   `-DependentNameType 'typename aligned_union<_Len, _Types...>::type' dependent
|   |-ClassTemplateDecl __numeric_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __numeric_type definition
|   | | |-CXXRecordDecl implicit struct __numeric_type
|   | | |-CXXMethodDecl __test 'void (...)' static
|   | | |-CXXMethodDecl __test 'float (float)' static
|   | | | `-ParmVarDecl 'float'
|   | | |-CXXMethodDecl __test 'double (char)' static
|   | | | `-ParmVarDecl 'char'
|   | | |-CXXMethodDecl __test 'double (int)' static
|   | | | `-ParmVarDecl 'int'
|   | | |-CXXMethodDecl __test 'double (unsigned int)' static
|   | | | `-ParmVarDecl 'unsigned int'
|   | | |-CXXMethodDecl __test 'double (long)' static
|   | | | `-ParmVarDecl 'long'
|   | | |-CXXMethodDecl __test 'double (unsigned long)' static
|   | | | `-ParmVarDecl 'unsigned long'
|   | | |-CXXMethodDecl __test 'double (long long)' static
|   | | | `-ParmVarDecl 'long long'
|   | | |-CXXMethodDecl __test 'double (unsigned long long)' static
|   | | | `-ParmVarDecl 'unsigned long long'
|   | | |-CXXMethodDecl __test 'double (double)' static
|   | | | `-ParmVarDecl 'double'
|   | | |-CXXMethodDecl __test 'long double (long double)' static
|   | | | `-ParmVarDecl 'long double'
|   | | |-TypedefDecl referenced type 'decltype(__test(declval<_Tp>()))'
|   | | | `-DecltypeType 'decltype(__test(declval<_Tp>()))' dependent
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test' 0x7fe0278e85e8 0x7fe0278e8468 0x7fe0278e82e8 0x7fe0278e8168 0x7fe0278e7fe8 0x7fe0278e7e68 0x7fe0278e7ce8 0x7fe0278e7b68 0x7fe0278e79e8 0x7fe0278e7868 0x7fe0278e76c8
|   | | |     `-CallExpr '<dependent type>'
|   | | |       `-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = 'declval' 0x7fe028013180
|   | | `-VarDecl value 'const _Bool' static cinit
|   | |   `-UnaryOperator '<dependent type>' prefix '!'
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-ClassTemplateSpecialization '__numeric_type'
|   |-ClassTemplateSpecializationDecl struct __numeric_type definition
|   | |-TemplateArgument type 'void'
|   | |-CXXRecordDecl implicit struct __numeric_type
|   | `-VarDecl referenced value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr '_Bool' true
|   |-ClassTemplateDecl __promote_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A2
|   | | `-TemplateArgument type 'void'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _A3
|   | | `-TemplateArgument type 'void'
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '&&'
|   | |     |-BinaryOperator '<dependent type>' '&&'
|   | |     | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl class __promote_imp definition
|   |   |-CXXRecordDecl implicit class __promote_imp
|   |   |-AccessSpecDecl public
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-CXXBoolLiteralExpr '_Bool' false
|   |-ClassTemplatePartialSpecializationDecl class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-2'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _A3
|   | |-CXXRecordDecl implicit class __promote_imp
|   | |-AccessSpecDecl private
|   | |-TypedefDecl referenced __type1 'typename __promote_imp<_A1>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A1>::type' dependent
|   | |-TypedefDecl referenced __type2 'typename __promote_imp<_A2>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A2>::type' dependent
|   | |-TypedefDecl referenced __type3 'typename __promote_imp<_A3>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A3>::type' dependent
|   | |-AccessSpecDecl public
|   | |-TypedefDecl type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
|   | | `-DecltypeType 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
|   | |   `-BinaryOperator '<dependent type>' '+'
|   | |     |-BinaryOperator '<dependent type>' '+'
|   | |     | |-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
|   | |     | `-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
|   | |     `-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr '_Bool' true
|   |-ClassTemplatePartialSpecializationDecl class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A2
|   | |-CXXRecordDecl implicit class __promote_imp
|   | |-AccessSpecDecl private
|   | |-TypedefDecl referenced __type1 'typename __promote_imp<_A1>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A1>::type' dependent
|   | |-TypedefDecl referenced __type2 'typename __promote_imp<_A2>::type'
|   | | `-DependentNameType 'typename __promote_imp<_A2>::type' dependent
|   | |-AccessSpecDecl public
|   | |-TypedefDecl type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
|   | | `-DecltypeType 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
|   | |   `-BinaryOperator '<dependent type>' '+'
|   | |     |-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
|   | |     `-CXXUnresolvedConstructExpr 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr '_Bool' true
|   |-ClassTemplatePartialSpecializationDecl class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-CXXRecordDecl implicit class __promote_imp
|   | |-AccessSpecDecl public
|   | |-TypedefDecl type 'typename __numeric_type<_A1>::type'
|   | | `-DependentNameType 'typename __numeric_type<_A1>::type' dependent
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr '_Bool' true
|   |-ClassTemplateDecl __promote
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A2
|   | | `-TemplateArgument type 'void'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _A3
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl class __promote definition
|   |   |-public '__promote_imp<_A1, _A2, _A3>'
|   |   `-CXXRecordDecl implicit class __promote
|   |-TypedefDecl referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
|   | `-TemplateSpecializationType '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
|   |   |-TemplateArgument type 'signed char'
|   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   |   `-RecordType 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
|   |     `-ClassTemplateSpecialization '__type_list'
|   |-TypedefDecl referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
|   | `-TemplateSpecializationType '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
|   |   |-TemplateArgument type 'unsigned char'
|   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |   `-RecordType 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
|   |     `-ClassTemplateSpecialization '__type_list'
|   |-ClassTemplateDecl __find_first
|   | |-TemplateTypeParmDecl class depth 0 index 0 _TypeList
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Size
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '_Bool' '<='
|   | |     |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278f2ce8 '_Size' 'size_t':'unsigned long'
|   | |     `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof 'typename _TypeList::_Head'
|   | `-CXXRecordDecl struct __find_first
|   |-ClassTemplatePartialSpecializationDecl struct __find_first definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278f3368 '_Size' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | |-CXXRecordDecl implicit struct __find_first
|   | `-TypedefDecl type '_Hp'
|   |   `-TemplateTypeParmType '_Hp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Hp'
|   |-ClassTemplatePartialSpecializationDecl struct __find_first definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0278f3c78 '_Size' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | |-CXXRecordDecl implicit struct __find_first
|   | `-TypedefDecl type 'typename __find_first<_Tp, _Size>::type'
|   |   `-DependentNameType 'typename __find_first<_Tp, _Size>::type' dependent
|   |-ClassTemplateDecl __apply_cv
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __apply_cv definition
|   |   |-CXXRecordDecl implicit struct __apply_cv
|   |   `-TypedefDecl type '_Up'
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'const _Up'
|   |   `-QualType 'const _Up' const
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'volatile _Up'
|   |   `-QualType 'volatile _Up' volatile
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'const volatile _Up'
|   |   `-QualType 'const volatile _Up' const volatile
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type '_Up &'
|   |   `-LValueReferenceType '_Up &' dependent
|   |     `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'const _Up &'
|   |   `-LValueReferenceType 'const _Up &' dependent
|   |     `-QualType 'const _Up' const
|   |       `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'volatile _Up &'
|   |   `-LValueReferenceType 'volatile _Up &' dependent
|   |     `-QualType 'volatile _Up' volatile
|   |       `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm '_Up'
|   |-ClassTemplatePartialSpecializationDecl struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __apply_cv
|   | `-TypedefDecl type 'const volatile _Up &'
|   |   `-LValueReferenceType 'const volatile _Up &' dependent
|   |     `-QualType 'const volatile _Up' const volatile
|   |       `-TemplateTypeParmType '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm '_Up'
|   |-ClassTemplateDecl __make_signed
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __make_signed definition
|   | | `-CXXRecordDecl implicit struct __make_signed
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | |-ClassTemplateSpecialization '__make_signed'
|   | `-ClassTemplateSpecialization '__make_signed'
|   |-ClassTemplatePartialSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
|   |   `-DependentNameType 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type '_Bool'
|   | |-TemplateArgument integral 1
|   | `-CXXRecordDecl implicit struct __make_signed
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'short'
|   |   `-BuiltinType 'short'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'short'
|   |   `-BuiltinType 'short'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'int'
|   |   `-BuiltinType 'int'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'int'
|   |   `-BuiltinType 'int'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'long'
|   |   `-BuiltinType 'long'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'long'
|   |   `-BuiltinType 'long'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'long long'
|   |   `-BuiltinType 'long long'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type 'long long'
|   |   `-BuiltinType 'long long'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type '__int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type '__int128_t':'__int128'
|   |   `-TypedefType '__int128_t' sugar
|   |     |-Typedef '__int128_t'
|   |     `-BuiltinType '__int128'
|   |-ClassTemplateSpecializationDecl struct __make_signed definition
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_signed
|   | `-TypedefDecl type '__int128_t':'__int128'
|   |   `-TypedefType '__int128_t' sugar
|   |     |-Typedef '__int128_t'
|   |     `-BuiltinType '__int128'
|   |-ClassTemplateDecl make_signed
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct make_signed definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, > implicit struct make_signed
|   |   `-TypedefDecl type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
|   |     `-DependentNameType 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
|   |-TypeAliasTemplateDecl make_signed_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl make_signed_t 'typename make_signed<_Tp>::type'
|   |   `-DependentNameType 'typename make_signed<_Tp>::type' dependent
|   |-ClassTemplateDecl __make_unsigned
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __make_unsigned definition
|   | | `-CXXRecordDecl implicit struct __make_unsigned
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | |-ClassTemplateSpecialization '__make_unsigned'
|   | `-ClassTemplateSpecialization '__make_unsigned'
|   |-ClassTemplatePartialSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
|   |   `-DependentNameType 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type '_Bool'
|   | |-TemplateArgument integral 1
|   | `-CXXRecordDecl implicit struct __make_unsigned
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned short'
|   |   `-BuiltinType 'unsigned short'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned short'
|   |   `-BuiltinType 'unsigned short'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned int'
|   |   `-BuiltinType 'unsigned int'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned int'
|   |   `-BuiltinType 'unsigned int'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned long'
|   |   `-BuiltinType 'unsigned long'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned long'
|   |   `-BuiltinType 'unsigned long'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned long long'
|   |   `-BuiltinType 'unsigned long long'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type 'unsigned long long'
|   |   `-BuiltinType 'unsigned long long'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type '__int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type '__uint128_t':'unsigned __int128'
|   |   `-TypedefType '__uint128_t' sugar
|   |     |-Typedef '__uint128_t'
|   |     `-BuiltinType 'unsigned __int128'
|   |-ClassTemplateSpecializationDecl struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __make_unsigned
|   | `-TypedefDecl type '__uint128_t':'unsigned __int128'
|   |   `-TypedefType '__uint128_t' sugar
|   |     |-Typedef '__uint128_t'
|   |     `-BuiltinType 'unsigned __int128'
|   |-ClassTemplateDecl make_unsigned
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct make_unsigned definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, > implicit struct make_unsigned
|   |   `-TypedefDecl type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
|   |     `-DependentNameType 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
|   |-TypeAliasTemplateDecl make_unsigned_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl make_unsigned_t 'typename make_unsigned<_Tp>::type'
|   |   `-DependentNameType 'typename make_unsigned<_Tp>::type' dependent
|   |-ClassTemplateDecl common_type
|   | |-TemplateTypeParmDecl class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl struct common_type definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, > implicit struct common_type
|   |-ClassTemplatePartialSpecializationDecl struct common_type definition
|   | |-public 'common_type<_Tp, _Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, > implicit struct common_type
|   |-ClassTemplateDecl __common_type2_imp
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl struct __common_type2_imp definition
|   |   `-CXXRecordDecl implicit struct __common_type2_imp
|   |-ClassTemplatePartialSpecializationDecl struct __common_type2_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __common_type2_imp
|   | `-TypedefDecl type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
|   |   `-DependentNameType 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
|   |-TypeAliasTemplateDecl __common_type2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DTp
|   | | `-TemplateArgument type 'typename decay<_Tp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DUp
|   | | `-TemplateArgument type 'typename decay<_Up>::type'
|   | `-TypeAliasDecl __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
|   |   `-DependentNameType 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct common_type definition
|   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, > implicit struct common_type
|   |-ClassTemplateDecl __common_types
|   | |-TemplateTypeParmDecl class depth 0 index 0 ... Tp
|   | `-CXXRecordDecl struct __common_types
|   |-ClassTemplateDecl __common_type_impl
|   | |-TemplateTypeParmDecl class depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl struct __common_type_impl definition
|   |   `-CXXRecordDecl implicit struct __common_type_impl
|   |-ClassTemplatePartialSpecializationDecl struct __common_type_impl definition
|   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl implicit struct __common_type_impl
|   | `-TypedefDecl type 'typename common_type<_Tp, _Up>::type'
|   |   `-DependentNameType 'typename common_type<_Tp, _Up>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl struct __common_type_impl definition
|   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
|   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
|   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Vp
|   | `-CXXRecordDecl implicit struct __common_type_impl
|   |-ClassTemplatePartialSpecializationDecl struct common_type definition
|   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Vp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, > implicit struct common_type
|   |-TypeAliasTemplateDecl common_type_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Tp
|   | `-TypeAliasDecl common_type_t 'typename common_type<_Tp...>::type'
|   |   `-DependentNameType 'typename common_type<_Tp...>::type' dependent
|   |-ClassTemplateDecl __select_2nd
|   | |-TemplateTypeParmDecl typename depth 0 index 0
|   | |-TemplateTypeParmDecl referenced typename depth 0 index 1 _Tp
|   | |-CXXRecordDecl struct __select_2nd definition
|   | | |-CXXRecordDecl implicit struct __select_2nd
|   | | `-TypedefDecl type '_Tp'
|   | |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Tp'
|   | `-ClassTemplateSpecializationDecl struct __select_2nd definition
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'struct std::__1::integral_constant<_Bool, true>'
|   |   |-CXXRecordDecl prev 0x7fe029022ec8 implicit struct __select_2nd
|   |   `-TypedefDecl referenced type 'struct std::__1::integral_constant<_Bool, true>':'struct std::__1::integral_constant<_Bool, true>'
|   |     `-SubstTemplateTypeParmType 'struct std::__1::integral_constant<_Bool, true>' sugar
|   |       |-TemplateTypeParmType '_Tp' dependent depth 0 index 1
|   |       | `-TemplateTypeParm '_Tp'
|   |       `-RecordType 'struct std::__1::integral_constant<_Bool, true>'
|   |         `-ClassTemplateSpecialization 'integral_constant'
|   |-FunctionTemplateDecl __is_assignable_test
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | |-FunctionDecl __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
|   | | `-ParmVarDecl 'int'
|   | |-FunctionDecl referenced __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<unsigned long &>() = std::__1::declval<const unsigned long &>())), true_type>::type (int)'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-ParmVarDecl 'int'
|   | `-FunctionDecl referenced __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<unsigned long &>() = std::__1::declval<unsigned long &&>())), true_type>::type (int)'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-ParmVarDecl 'int'
|   |-FunctionTemplateDecl __is_assignable_test
|   | |-TemplateTypeParmDecl class depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1
|   | |-FunctionDecl __is_assignable_test 'std::__1::false_type (...)'
|   | |-FunctionDecl __is_assignable_test 'std::__1::false_type (...)'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-TemplateArgument type 'const unsigned long &'
|   | `-FunctionDecl __is_assignable_test 'std::__1::false_type (...)'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   `-TemplateArgument type 'unsigned long &&'
|   |-ClassTemplateDecl __is_assignable_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-CXXRecordDecl struct __is_assignable_imp definition
|   | | |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
|   | | `-CXXRecordDecl implicit struct __is_assignable_imp
|   | |-ClassTemplateSpecializationDecl struct __is_assignable_imp definition
|   | | |-public 'decltype((std::__1::__is_assignable_test<unsigned long &, const unsigned long &>(0)))':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-TemplateArgument integral 0
|   | | `-CXXRecordDecl prev 0x7fe029020a40 implicit struct __is_assignable_imp
|   | `-ClassTemplateSpecializationDecl struct __is_assignable_imp definition
|   |   |-public 'decltype((std::__1::__is_assignable_test<unsigned long &, unsigned long &&>(0)))':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   |-TemplateArgument integral 0
|   |   `-CXXRecordDecl prev 0x7fe0280b66d0 implicit struct __is_assignable_imp
|   |-ClassTemplatePartialSpecializationDecl struct __is_assignable_imp definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl implicit struct __is_assignable_imp
|   |-ClassTemplateDecl is_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | |-CXXRecordDecl struct is_assignable definition
|   | | |-public '__is_assignable_imp<_Tp, _Arg>'
|   | | `-CXXRecordDecl implicit struct is_assignable
|   | |-ClassTemplateSpecializationDecl struct is_assignable definition
|   | | |-public '__is_assignable_imp<unsigned long &, const unsigned long &>':'struct std::__1::__is_assignable_imp<unsigned long &, const unsigned long &, false>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-CXXRecordDecl prev 0x7fe02901e240 implicit struct is_assignable
|   | `-ClassTemplateSpecializationDecl struct is_assignable definition
|   |   |-public '__is_assignable_imp<unsigned long &, unsigned long &&>':'struct std::__1::__is_assignable_imp<unsigned long &, unsigned long &&, false>'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl prev 0x7fe0280b50a0 implicit struct is_assignable
|   |-ClassTemplateDecl is_copy_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_copy_assignable definition
|   | | |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, > implicit struct is_copy_assignable
|   | `-ClassTemplateSpecializationDecl struct is_copy_assignable definition
|   |   |-public 'is_assignable<typename add_lvalue_reference<unsigned long>::type, typename add_lvalue_reference<typename add_const<unsigned long>::type>::type>':'struct std::__1::is_assignable<unsigned long &, const unsigned long &>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl prev 0x7fe029015d20 implicit struct is_copy_assignable
|   |-ClassTemplateDecl is_move_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_move_assignable definition
|   | | |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, > implicit struct is_move_assignable
|   | `-ClassTemplateSpecializationDecl struct is_move_assignable definition
|   |   |-public 'is_assignable<typename add_lvalue_reference<unsigned long>::type, typename add_rvalue_reference<unsigned long>::type>':'struct std::__1::is_assignable<unsigned long &, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl prev 0x7fe0280b4390 implicit struct is_move_assignable
|   |-ClassTemplateDecl __is_destructible_apply
|   | |-TemplateTypeParmDecl class depth 0 index 0
|   | `-CXXRecordDecl struct __is_destructible_apply definition
|   |   |-CXXRecordDecl implicit struct __is_destructible_apply
|   |   `-TypedefDecl type 'int'
|   |     `-BuiltinType 'int'
|   |-ClassTemplateDecl __is_destructor_wellformed
|   | |-TemplateTypeParmDecl referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_destructor_wellformed definition
|   |   |-CXXRecordDecl implicit struct __is_destructor_wellformed
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl referenced typename depth 1 index 0 _Tp1
|   |   | `-CXXMethodDecl __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
|   |   |   `-ParmVarDecl 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl typename depth 1 index 0 _Tp1
|   |   | `-CXXMethodDecl __test 'struct std::__1::__two (...)' static
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-BinaryOperator '_Bool' '=='
|   |       |-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   |       | `-ParenExpr '<dependent type>'
|   |       |   `-CallExpr '<dependent type>'
|   |       |     |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test' 0x7fe02881c3e8 0x7fe02881c258
|   |       |     `-IntegerLiteral 'int' 12
|   |       `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof 'char'
|   |-ClassTemplateDecl __destructible_imp
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | `-CXXRecordDecl struct __destructible_imp
|   |-ClassTemplatePartialSpecializationDecl struct __destructible_imp definition
|   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __destructible_imp
|   |-ClassTemplatePartialSpecializationDecl struct __destructible_imp definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __destructible_imp
|   |-ClassTemplateDecl __destructible_false
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | `-CXXRecordDecl struct __destructible_false
|   |-ClassTemplatePartialSpecializationDecl struct __destructible_false definition
|   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __destructible_false
|   |-ClassTemplatePartialSpecializationDecl struct __destructible_false definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __destructible_false
|   |-ClassTemplateDecl is_destructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_destructible definition
|   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
|   | | `-CXXRecordDecl implicit struct is_destructible
|   | `-ClassTemplateSpecialization 'is_destructible'
|   |-ClassTemplatePartialSpecializationDecl struct is_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct is_destructible
|   |-ClassTemplateSpecializationDecl struct is_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'void'
|   | `-CXXRecordDecl implicit struct is_destructible
|   |-FunctionTemplateDecl move
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
|   | | |-ParmVarDecl referenced __t '_Tp &&'
|   | | |-CompoundStmt
|   | | | |-DeclStmt
|   | | | | `-TypedefDecl referenced _Up 'typename remove_reference<_Tp>::type'
|   | | | |   `-DependentNameType 'typename remove_reference<_Tp>::type' dependent
|   | | | `-ReturnStmt
|   | | |   `-CXXStaticCastExpr '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
|   | | |     `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe0288211e8 '__t' '_Tp &&'
|   | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr Hidden
|   | |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2208:1, > used constexpr move 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' inline
|   | | |-TemplateArgument type 'struct A &'
|   | | |-ParmVarDecl used __t 'struct A &&'
|   | | |-CompoundStmt
|   | | | |-DeclStmt
|   | | | | `-TypedefDecl _Up 'typename remove_reference<struct A &>::type':'struct A'
|   | | | |   `-ElaboratedType 'typename remove_reference<struct A &>::type' sugar
|   | | | |     `-TypedefType 'std::__1::remove_reference<struct A &>::type' sugar
|   | | | |       |-Typedef 'type'
|   | | | |       `-SubstTemplateTypeParmType 'struct A' sugar
|   | | | |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   | | | |         | `-TemplateTypeParm '_Tp'
|   | | | |         `-RecordType 'struct A'
|   | | | |           `-CXXRecord 'A'
|   | | | `-ReturnStmt
|   | | |   `-CXXStaticCastExpr '_Up':'struct A' xvalue static_cast<_Up &&> <NoOp>
|   | | |     `-DeclRefExpr 'struct A' lvalue ParmVar 0x7fe0280b0308 '__t' 'struct A &&'
|   | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2208:1, > used constexpr move 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' inline
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-ParmVarDecl used __t 'unsigned long &&'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-TypedefDecl _Up 'typename remove_reference<unsigned long &>::type':'unsigned long'
|   |   | |   `-ElaboratedType 'typename remove_reference<unsigned long &>::type' sugar
|   |   | |     `-TypedefType 'std::__1::remove_reference<unsigned long &>::type' sugar
|   |   | |       |-Typedef 'type'
|   |   | |       `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |   | |         |-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |   | |         | `-TemplateTypeParm '_Tp'
|   |   | |         `-BuiltinType 'unsigned long'
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr '_Up':'unsigned long' xvalue static_cast<_Up &&> <NoOp>
|   |   |     `-DeclRefExpr 'unsigned long' lvalue ParmVar 0x7fe027904c38 '__t' 'unsigned long &&'
|   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, > forward
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
|   | | |-ParmVarDecl referenced __t 'typename remove_reference<_Tp>::type &'
|   | | |-CompoundStmt
|   | | | `-ReturnStmt
|   | | |   `-CXXStaticCastExpr '_Tp' xvalue static_cast<_Tp &&> <Dependent>
|   | | |     `-DeclRefExpr 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fe028821980 '__t' 'typename remove_reference<_Tp>::type &'
|   | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr Hidden
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2217:1, > used constexpr forward 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' inline
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-ParmVarDecl used __t 'typename remove_reference<unsigned long>::type &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'unsigned long':'unsigned long' xvalue static_cast<unsigned long &&> <NoOp>
|   |   |     `-DeclRefExpr 'typename remove_reference<unsigned long>::type':'unsigned long' lvalue ParmVar 0x7fe027885e40 '__t' 'typename remove_reference<unsigned long>::type &'
|   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, > forward
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
|   |   |-ParmVarDecl referenced __t 'typename remove_reference<_Tp>::type &&'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-StaticAssertDecl
|   |   | |   |-UnaryOperator '<dependent type>' prefix '!'
|   |   | |   | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   | |   `-StringLiteral 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr '_Tp' xvalue static_cast<_Tp &&> <Dependent>
|   |   |     `-DeclRefExpr 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fe028821ea0 '__t' 'typename remove_reference<_Tp>::type &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, > __decay_copy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
|   |   |-ParmVarDecl referenced __t '_Tp &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe0288225f8 '__t' '_Tp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, > struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class'
|   | | `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class'
|   | | `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class'
|   | | `-QualType 'const _Class' const
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class'
|   | | `-QualType 'const _Class' const
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class'
|   | | `-QualType 'volatile _Class' volatile
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class'
|   | | `-QualType 'volatile _Class' volatile
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class'
|   | | `-QualType 'const volatile _Class' const volatile
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class'
|   | | `-QualType 'const volatile _Class' const volatile
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class &'
|   | | `-LValueReferenceType '_Class &' dependent
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class &'
|   | | `-LValueReferenceType '_Class &' dependent
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class &'
|   | | `-LValueReferenceType 'const _Class &' dependent
|   | |   `-QualType 'const _Class' const
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class &'
|   | | `-LValueReferenceType 'const _Class &' dependent
|   | |   `-QualType 'const _Class' const
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class &'
|   | | `-LValueReferenceType 'volatile _Class &' dependent
|   | |   `-QualType 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class &'
|   | | `-LValueReferenceType 'volatile _Class &' dependent
|   | |   `-QualType 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class &'
|   | | `-LValueReferenceType 'const volatile _Class &' dependent
|   | |   `-QualType 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class &'
|   | | `-LValueReferenceType 'const volatile _Class &' dependent
|   | |   `-QualType 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class &&'
|   | | `-RValueReferenceType '_Class &&' dependent
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class &&'
|   | | `-RValueReferenceType '_Class &&' dependent
|   | |   `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class &&'
|   | | `-RValueReferenceType 'const _Class &&' dependent
|   | |   `-QualType 'const _Class' const
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const _Class &&'
|   | | `-RValueReferenceType 'const _Class &&' dependent
|   | |   `-QualType 'const _Class' const
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class &&'
|   | | `-RValueReferenceType 'volatile _Class &&' dependent
|   | |   `-QualType 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'volatile _Class &&'
|   | | `-RValueReferenceType 'volatile _Class &&' dependent
|   | |   `-QualType 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class &&'
|   | | `-RValueReferenceType 'const volatile _Class &&' dependent
|   | |   `-QualType 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       `-PackExpansionType '_Param...' dependent
|   |         `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm '_Param'
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType 'const volatile _Class &&'
|   | | `-RValueReferenceType 'const volatile _Class &&' dependent
|   | |   `-QualType 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm '_Class'
|   | |-TypedefDecl _ReturnType '_Rp'
|   | | `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm '_Rp'
|   | `-TypedefDecl _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm '_Rp'
|   |       |-PackExpansionType '_Param...' dependent
|   |       | `-TemplateTypeParmType '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-CXXRecordDecl implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl _ClassType '_Class'
|   | | `-TemplateTypeParmType '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm '_Class'
|   | `-TypedefDecl _ReturnType '_Rp'
|   |   `-TemplateTypeParmType '_Rp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Rp'
|   |-ClassTemplateDecl __member_pointer_traits
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _MP
|   | `-CXXRecordDecl struct __member_pointer_traits definition
|   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
|   |   `-CXXRecordDecl implicit struct __member_pointer_traits
|   |-ClassTemplateDecl __member_pointer_class_type
|   | |-TemplateTypeParmDecl class depth 0 index 0 _DecayedFp
|   | `-CXXRecordDecl struct __member_pointer_class_type definition
|   |   `-CXXRecordDecl implicit struct __member_pointer_class_type
|   |-ClassTemplatePartialSpecializationDecl struct __member_pointer_class_type definition
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _ClassType
|   | |-CXXRecordDecl implicit struct __member_pointer_class_type
|   | `-TypedefDecl type '_ClassType'
|   |   `-TemplateTypeParmType '_ClassType' dependent depth 0 index 1
|   |     `-TemplateTypeParm '_ClassType'
|   |-ClassTemplateDecl result_of
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Callable
|   | `-CXXRecordDecl class result_of
|   |-NamespaceDecl __is_construct
|   | `-CXXRecordDecl struct __nat definition
|   |   `-CXXRecordDecl implicit struct __nat
|   |-ClassTemplateDecl is_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | |-CXXRecordDecl struct is_constructible definition
|   | | |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, > implicit struct is_constructible
|   | |-ClassTemplateSpecializationDecl struct is_constructible definition
|   | | |-public 'integral_constant<_Bool, __is_constructible(unsigned long, const unsigned long &)>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument pack
|   | | | `-TemplateArgument type 'const unsigned long &'
|   | | `-CXXRecordDecl prev 0x7fe0280bc2f0 implicit struct is_constructible
|   | |-ClassTemplateSpecializationDecl struct is_constructible definition
|   | | |-public 'integral_constant<_Bool, __is_constructible(unsigned long, unsigned long)>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument pack
|   | | | `-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl prev 0x7fe0280be3a0 implicit struct is_constructible
|   | `-ClassTemplateSpecializationDecl struct is_constructible definition
|   |   |-public 'integral_constant<_Bool, __is_constructible(unsigned long, unsigned long &&)>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument pack
|   |   | `-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl prev 0x7fe028996348 implicit struct is_constructible
|   |-ClassTemplateDecl is_default_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_default_constructible definition
|   |   |-public 'is_constructible<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, > implicit struct is_default_constructible
|   |-ClassTemplateDecl is_copy_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_copy_constructible definition
|   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, > implicit struct is_copy_constructible
|   |-ClassTemplateDecl is_move_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_move_constructible definition
|   | | |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, > implicit struct is_move_constructible
|   | `-ClassTemplateSpecializationDecl struct is_move_constructible definition
|   |   |-public 'is_constructible<unsigned long, typename add_rvalue_reference<unsigned long>::type>':'struct std::__1::is_constructible<unsigned long, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl prev 0x7fe028995fd8 implicit struct is_move_constructible
|   |-ClassTemplateDecl is_trivially_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl struct is_trivially_constructible definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, > implicit struct is_trivially_constructible
|   |-ClassTemplateDecl is_trivially_default_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_default_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, > implicit struct is_trivially_default_constructible
|   |-ClassTemplateDecl is_trivially_copy_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_copy_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, > implicit struct is_trivially_copy_constructible
|   |-ClassTemplateDecl is_trivially_move_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_move_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, > implicit struct is_trivially_move_constructible
|   |-ClassTemplateDecl is_trivially_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl struct is_trivially_assignable definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
|   |   `-CXXRecordDecl implicit struct is_trivially_assignable
|   |-ClassTemplateDecl is_trivially_copy_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_copy_assignable definition
|   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, > implicit struct is_trivially_copy_assignable
|   |-ClassTemplateDecl is_trivially_move_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_move_assignable definition
|   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, > implicit struct is_trivially_move_assignable
|   |-ClassTemplateDecl is_trivially_destructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_destructible definition
|   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, > implicit struct is_trivially_destructible
|   |-ClassTemplateDecl __libcpp_is_nothrow_constructible
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | |-TemplateTypeParmDecl class depth 0 index 2 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 3 ... _Args
|   | |-CXXRecordDecl struct __libcpp_is_nothrow_constructible
|   | `-ClassTemplateSpecializationDecl struct __libcpp_is_nothrow_constructible definition
|   |   |-public 'integral_constant<_Bool, noexcept(unsigned long(declval<unsigned long &&>()))>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument integral 0
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument pack
|   |   | `-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl prev 0x7fe028997b50 implicit struct __libcpp_is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_constructible definition
|   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_constructible
|   |-FunctionTemplateDecl __implicit_conversion_to
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl __implicit_conversion_to 'void (_Tp) noexcept'
|   |   |-ParmVarDecl '_Tp'
|   |   `-CompoundStmt
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_constructible definition
|   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_constructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr '_Bool' NonTypeTemplateParm 0x7fe028846148 '_IsReference' '_Bool'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 1 _IsReference
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_constructible
|   |-ClassTemplateDecl is_nothrow_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | |-CXXRecordDecl struct is_nothrow_constructible definition
|   | | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, > implicit struct is_nothrow_constructible
|   | `-ClassTemplateSpecializationDecl struct is_nothrow_constructible definition
|   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<unsigned long, unsigned long &&>::value, is_reference<unsigned long>::value, unsigned long, unsigned long &&>':'struct std::__1::__libcpp_is_nothrow_constructible<true, false, unsigned long, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument pack
|   |   | `-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl prev 0x7fe028997598 implicit struct is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl struct is_nothrow_constructible definition
|   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument pack
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, > implicit struct is_nothrow_constructible
|   |-ClassTemplateDecl is_nothrow_default_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_default_constructible definition
|   |   |-public 'is_nothrow_constructible<_Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, > implicit struct is_nothrow_default_constructible
|   |-ClassTemplateDecl is_nothrow_copy_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_copy_constructible definition
|   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, > implicit struct is_nothrow_copy_constructible
|   |-ClassTemplateDecl is_nothrow_move_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_nothrow_move_constructible definition
|   | | |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, > implicit struct is_nothrow_move_constructible
|   | `-ClassTemplateSpecializationDecl struct is_nothrow_move_constructible definition
|   |   |-public 'is_nothrow_constructible<unsigned long, typename add_rvalue_reference<unsigned long>::type>':'struct std::__1::is_nothrow_constructible<unsigned long, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl prev 0x7fe028997228 implicit struct is_nothrow_move_constructible
|   |-ClassTemplateDecl __libcpp_is_nothrow_assignable
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 2 _Arg
|   | |-CXXRecordDecl struct __libcpp_is_nothrow_assignable
|   | `-ClassTemplateSpecializationDecl struct __libcpp_is_nothrow_assignable definition
|   |   |-public 'integral_constant<_Bool, noexcept(std::__1::declval<unsigned long &>() = std::__1::declval<unsigned long &&>())>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl prev 0x7fe0280cfaa0 implicit struct __libcpp_is_nothrow_assignable
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_assignable definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_assignable
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_assignable definition
|   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_assignable
|   |-ClassTemplateDecl is_nothrow_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Arg
|   | |-CXXRecordDecl struct is_nothrow_assignable definition
|   | | |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, > implicit struct is_nothrow_assignable
|   | `-ClassTemplateSpecializationDecl struct is_nothrow_assignable definition
|   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<unsigned long &, unsigned long &&>::value, unsigned long &, unsigned long &&>':'struct std::__1::__libcpp_is_nothrow_assignable<true, unsigned long &, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl prev 0x7fe0280cf6b0 implicit struct is_nothrow_assignable
|   |-ClassTemplateDecl is_nothrow_copy_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_copy_assignable definition
|   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, > implicit struct is_nothrow_copy_assignable
|   |-ClassTemplateDecl is_nothrow_move_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct is_nothrow_move_assignable definition
|   | | |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, > implicit struct is_nothrow_move_assignable
|   | `-ClassTemplateSpecializationDecl struct is_nothrow_move_assignable definition
|   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<unsigned long>::type, typename add_rvalue_reference<unsigned long>::type>':'struct std::__1::is_nothrow_assignable<unsigned long &, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl prev 0x7fe0280cf260 implicit struct is_nothrow_move_assignable
|   |-ClassTemplateDecl __libcpp_is_nothrow_destructible
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | `-CXXRecordDecl struct __libcpp_is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct __libcpp_is_nothrow_destructible definition
|   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __libcpp_is_nothrow_destructible
|   |-ClassTemplateDecl is_nothrow_destructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_nothrow_destructible definition
|   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, > implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct is_nothrow_destructible definition
|   | |-public 'is_nothrow_destructible<_Tp>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, > implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct is_nothrow_destructible definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, > implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl struct is_nothrow_destructible definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, > implicit struct is_nothrow_destructible
|   |-ClassTemplateDecl is_pod
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_pod definition
|   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, > implicit struct is_pod
|   |-ClassTemplateDecl is_literal_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_literal_type definition
|   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, > implicit struct is_literal_type
|   |-ClassTemplateDecl is_standard_layout
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_standard_layout definition
|   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, > implicit struct is_standard_layout
|   |-ClassTemplateDecl is_trivially_copyable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivially_copyable definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, > implicit struct is_trivially_copyable
|   |-ClassTemplateDecl is_trivial
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct is_trivial definition
|   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, > implicit struct is_trivial
|   |-ClassTemplateDecl __is_reference_wrapper_impl
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_reference_wrapper_impl definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __is_reference_wrapper_impl
|   |-ClassTemplatePartialSpecializationDecl struct __is_reference_wrapper_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __is_reference_wrapper_impl
|   |-ClassTemplateDecl __is_reference_wrapper
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_reference_wrapper definition
|   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
|   |   `-CXXRecordDecl implicit struct __is_reference_wrapper
|   |-ClassTemplateDecl __check_complete
|   | |-TemplateTypeParmDecl class depth 0 index 0 ... _Tp
|   | |-CXXRecordDecl struct __check_complete
|   | `-ClassTemplateSpecialization '__check_complete'
|   |-ClassTemplateSpecializationDecl struct __check_complete definition
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Hp>'
|   | |-private '__check_complete<_T0, _Tp...>'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Tp
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Hp>'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Hp
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __check_complete
|   | `-StaticAssertDecl
|   |   |-BinaryOperator '_Bool' '>'
|   |   | |-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof '_Tp'
|   |   | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 'int' 0
|   |   `-StringLiteral 'const char [23]' lvalue "Type must be complete."
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Rp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Rp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Class
|   | `-CXXRecordDecl implicit struct __check_complete
|   |-TypeAliasTemplateDecl __enable_if_bullet1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | `-TypeAliasDecl __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet3
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet4
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet5
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | `-TypeAliasDecl __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl __enable_if_bullet6
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-FunctionTemplateDecl __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Args
|   | `-FunctionDecl __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
|   |   |-ParmVarDecl 'struct std::__1::__any'
|   |   `-ParmVarDecl __args '_Args &&...'
|   |-FunctionTemplateDecl __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Args
|   | `-FunctionDecl __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
|   |   |-ParmVarDecl 'struct std::__1::__any'
|   |   `-ParmVarDecl __args '_Args &&...'
|   |-FunctionTemplateDecl __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
|   |   |     |   |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
|   |   |     |   | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     |   | `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe02886b9b8 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe02886b918 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7fe02886baf8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
|   |   |     |   |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
|   |   |     |   | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     |   | `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe0288703a8 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe028870308 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7fe028870488 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator '<dependent type>' '.*'
|   |   |     |   |-CallExpr '<dependent type>'
|   |   |     |   | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .get
|   |   |     |   |   `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028871d28 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe028871c88 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7fe028871e08 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator '<dependent type>' '.*'
|   |   |     |   |-CallExpr '<dependent type>'
|   |   |     |   | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .get
|   |   |     |   |   `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028873d58 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe028873cb8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7fe028873e38 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator '<dependent type>' '.*'
|   |   |     |   |-ParenExpr '<dependent type>'
|   |   |     |   | `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
|   |   |     |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     |   |     `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028875708 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe028875668 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7fe0288757e8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-BinaryOperator '<dependent type>' '.*'
|   |   |     |   |-ParenExpr '<dependent type>'
|   |   |     |   | `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
|   |   |     |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     |   |     `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028877858 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe0288777b8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7fe028877938 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     | `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028879388 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe0288792e8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     | `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028886618 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe028886578 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '.*'
|   |   |     |-CallExpr '<dependent type>'
|   |   |     | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .get
|   |   |     |   `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028887838 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe028887798 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '.*'
|   |   |     |-CallExpr '<dependent type>'
|   |   |     | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .get
|   |   |     |   `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028888778 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe0288886d8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '.*'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
|   |   |     |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     |     `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe028889a68 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe0288899c8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __a0 '_A0 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '.*'
|   |   |     |-ParenExpr '<dependent type>'
|   |   |     | `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
|   |   |     |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     |     `-DeclRefExpr '_A0' lvalue ParmVar 0x7fe02888af08 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe02888ae68 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, > __invoke
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-FunctionDecl __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     | `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe02888b8e8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7fe02888ba28 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, > __invoke_constexpr
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-FunctionDecl constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl referenced __f '_Fp &&'
|   |   |-ParmVarDecl referenced __args '_Args &&...'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     | `-DeclRefExpr '_Fp' lvalue ParmVar 0x7fe02888c7d8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |         `-DeclRefExpr '_Args &&...' lvalue ParmVar 0x7fe02888c8b8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, > __invokable_r
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | `-CXXRecordDecl struct __invokable_r definition
|   |   |-private '__check_complete<_Fp>'
|   |   |-CXXRecordDecl implicit struct __invokable_r
|   |   |-TypeAliasDecl referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
|   |   | `-DecltypeType 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fe02886a828 0x7fe02886f478 0x7fe0288725f8 0x7fe0288767a8 0x7fe028879928 0x7fe028887c88 0x7fe02888a098 0x7fe02888c288
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
|   |   |     | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   |   |     `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
|   |   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
|   |   |         `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-TypeAliasTemplateDecl __invokable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-TypeAliasDecl __invokable '__invokable_r<void, _Fp, _Args...>'
|   |   `-TemplateSpecializationType '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
|   |     |-TemplateArgument type 'void'
|   |     |-TemplateArgument type '_Fp'
|   |     `-TemplateArgument type '_Args...'
|   |-ClassTemplateDecl __nothrow_invokable_r_imp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _IsInvokable
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1 _IsCVVoid
|   | |-TemplateTypeParmDecl class depth 0 index 2 _Ret
|   | |-TemplateTypeParmDecl class depth 0 index 3 _Fp
|   | |-TemplateTypeParmDecl class depth 0 index 4 ... _Args
|   | `-CXXRecordDecl struct __nothrow_invokable_r_imp definition
|   |   |-CXXRecordDecl implicit struct __nothrow_invokable_r_imp
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-CXXBoolLiteralExpr '_Bool' false
|   |-ClassTemplatePartialSpecializationDecl struct __nothrow_invokable_r_imp definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-CXXRecordDecl implicit referenced struct __nothrow_invokable_r_imp
|   | |-TypedefDecl referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
|   | | `-InjectedClassNameType '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
|   | |   `-ClassTemplatePartialSpecialization '__nothrow_invokable_r_imp'
|   | |-FunctionTemplateDecl __test_noexcept
|   | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tp
|   | | `-CXXMethodDecl __test_noexcept 'void (_Tp) noexcept' static
|   | |   `-ParmVarDecl '_Tp'
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXNoexceptExpr '_Bool'
|   |     `-CallExpr '<dependent type>'
|   |       |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fe028892740
|   |       `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
|   |         |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fe02886a828 0x7fe02886f478 0x7fe0288725f8 0x7fe0288767a8 0x7fe028879928 0x7fe028887c88 0x7fe02888a098 0x7fe02888c288
|   |         |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
|   |         | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   |         `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
|   |           `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
|   |             `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   |-ClassTemplatePartialSpecializationDecl struct __nothrow_invokable_r_imp definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | |-CXXRecordDecl implicit struct __nothrow_invokable_r_imp
|   | `-VarDecl value 'const _Bool' static cinit
|   |   `-CXXNoexceptExpr '_Bool'
|   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
|   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fe02886a828 0x7fe02886f478 0x7fe0288725f8 0x7fe0288767a8 0x7fe028879928 0x7fe028887c88 0x7fe02888a098 0x7fe02888c288
|   |       |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
|   |       | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   |       `-PackExpansionExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
|   |         `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
|   |           `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   |-TypeAliasTemplateDecl __nothrow_invokable_r
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _Args
|   | `-TypeAliasDecl __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
|   |   `-TemplateSpecializationType '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     |-TemplateArgument type '_Ret'
|   |     |-TemplateArgument type '_Fp'
|   |     `-TemplateArgument type '_Args...'
|   |-ClassTemplateDecl __invoke_of
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl struct __invoke_of definition
|   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
|   |   `-CXXRecordDecl implicit struct __invoke_of
|   |-ClassTemplatePartialSpecializationDecl class result_of definition
|   | |-public '__invoke_of<_Fp, _Args...>'
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Args
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, > implicit class result_of
|   |-TypeAliasTemplateDecl result_of_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl result_of_t 'typename result_of<_Tp>::type'
|   |   `-DependentNameType 'typename result_of<_Tp>::type' dependent
|   |-ClassTemplateDecl __is_swappable
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_swappable
|   |-ClassTemplateDecl __is_nothrow_swappable
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __is_nothrow_swappable
|   |-FunctionTemplateDecl swap
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
|   | | |-ParmVarDecl referenced __x '_Tp &'
|   | | |-ParmVarDecl referenced __y '_Tp &'
|   | | |-CompoundStmt
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __t '_Tp' callinit
|   | | | |   `-ParenListExpr 'NULL TYPE'
|   | | | |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
|   | | | |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   | | | |       `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe028896888 '__x' '_Tp &'
|   | | | |-BinaryOperator '<dependent type>' '='
|   | | | | |-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe028896888 '__x' '_Tp &'
|   | | | | `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
|   | | | |   |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   | | | |   `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe0288968f8 '__y' '_Tp &'
|   | | | `-BinaryOperator '<dependent type>' '='
|   | | |   |-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe0288968f8 '__y' '_Tp &'
|   | | |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
|   | | |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   | | |     `-DeclRefExpr '_Tp' lvalue Var 0x7fe028896e88 '__t' '_Tp'
|   | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr Hidden
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4444:1, > used swap 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type (unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)' inline
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-ParmVarDecl used __x 'unsigned long &'
|   |   |-ParmVarDecl used __y 'unsigned long &'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-VarDecl used __t 'unsigned long':'unsigned long' callinit
|   |   | |   `-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> 'typename remove_reference<unsigned long &>::type':'unsigned long' <LValueToRValue>
|   |   | |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> 'typename remove_reference<unsigned long &>::type':'unsigned long' xvalue
|   |   | |       |-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> 'typename remove_reference<unsigned long &>::type &&(*)(unsigned long &&) noexcept' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' lvalue Function 0x7fe027904d20 'move' 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' (FunctionTemplate 0x7fe028821408 'move')
|   |   | |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe028996e78 '__x' 'unsigned long &'
|   |   | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe028996e78 '__x' 'unsigned long &'
|   |   | | `-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> 'typename remove_reference<unsigned long &>::type':'unsigned long' <LValueToRValue>
|   |   | |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> 'typename remove_reference<unsigned long &>::type':'unsigned long' xvalue
|   |   | |     |-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> 'typename remove_reference<unsigned long &>::type &&(*)(unsigned long &&) noexcept' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' lvalue Function 0x7fe027904d20 'move' 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' (FunctionTemplate 0x7fe028821408 'move')
|   |   | |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe028996ee8 '__y' 'unsigned long &'
|   |   | `-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   |   |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe028996ee8 '__y' 'unsigned long &'
|   |   |   `-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> 'typename remove_reference<unsigned long &>::type':'unsigned long' <LValueToRValue>
|   |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> 'typename remove_reference<unsigned long &>::type':'unsigned long' xvalue
|   |   |       |-ImplicitCastExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> 'typename remove_reference<unsigned long &>::type &&(*)(unsigned long &&) noexcept' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' lvalue Function 0x7fe027904d20 'move' 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' (FunctionTemplate 0x7fe028821408 'move')
|   |   |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe027889608 '__t' 'unsigned long':'unsigned long'
|   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | `-FunctionDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
|   |   |-ParmVarDecl __a '_Tp (&)[_Np]'
|   |   |-ParmVarDecl __b '_Tp (&)[_Np]'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, > iter_swap
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ForwardIterator1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _ForwardIterator2
|   | `-FunctionDecl iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
|   |   |-ParmVarDecl referenced __a '_ForwardIterator1'
|   |   |-ParmVarDecl referenced __b '_ForwardIterator2'
|   |   |-CompoundStmt
|   |   | `-CallExpr '<dependent type>'
|   |   |   |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fe028897ba8 0x7fe028896d38
|   |   |   |-UnaryOperator '<dependent type>' prefix '*'
|   |   |   | `-DeclRefExpr '_ForwardIterator1' lvalue ParmVar 0x7fe028897d98 '__a' '_ForwardIterator1'
|   |   |   `-UnaryOperator '<dependent type>' prefix '*'
|   |   |     `-DeclRefExpr '_ForwardIterator2' lvalue ParmVar 0x7fe028897e08 '__b' '_ForwardIterator2'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-NamespaceDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, > __detail
|   | |-ClassTemplateDecl __swappable_with
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | | | `-TemplateArgument type '_Tp'
|   | | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2 _NotVoid
|   | | | `-TemplateArgument expr
|   | | |   `-BinaryOperator '<dependent type>' '&&'
|   | | |     |-UnaryOperator '<dependent type>' prefix '!'
|   | | |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | |     `-UnaryOperator '<dependent type>' prefix '!'
|   | | |       `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | `-CXXRecordDecl struct __swappable_with definition
|   | |   |-CXXRecordDecl implicit struct __swappable_with
|   | |   |-FunctionTemplateDecl __test_swap
|   | |   | |-TemplateTypeParmDecl referenced class depth 1 index 0 _LHS
|   | |   | |-TemplateTypeParmDecl referenced class depth 1 index 1 _RHS
|   | |   | `-CXXMethodDecl __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
|   | |   |   `-ParmVarDecl 'int'
|   | |   |-FunctionTemplateDecl __test_swap
|   | |   | |-TemplateTypeParmDecl class depth 1 index 0
|   | |   | |-TemplateTypeParmDecl class depth 1 index 1
|   | |   | `-CXXMethodDecl __test_swap 'struct std::__1::__nat (long)' static
|   | |   |   `-ParmVarDecl 'long'
|   | |   |-TypedefDecl referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
|   | |   | `-DecltypeType 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
|   | |   |   `-ParenExpr '<dependent type>'
|   | |   |     `-CallExpr '<dependent type>'
|   | |   |       |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fe02889b678 0x7fe02889b3b8
|   | |   |       `-IntegerLiteral 'int' 0
|   | |   |-TypedefDecl referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
|   | |   | `-DecltypeType 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
|   | |   |   `-ParenExpr '<dependent type>'
|   | |   |     `-CallExpr '<dependent type>'
|   | |   |       |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fe02889b678 0x7fe02889b3b8
|   | |   |       `-IntegerLiteral 'int' 0
|   | |   `-VarDecl value 'const _Bool' static cinit
|   | |     `-BinaryOperator '<dependent type>' '&&'
|   | |       |-UnaryOperator '<dependent type>' prefix '!'
|   | |       | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |       `-UnaryOperator '<dependent type>' prefix '!'
|   | |         `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-ClassTemplatePartialSpecializationDecl struct __swappable_with definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument integral 0
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | | `-CXXRecordDecl implicit struct __swappable_with
|   | |-ClassTemplateDecl __nothrow_swappable_with
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | | | `-TemplateArgument type '_Tp'
|   | | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2 _Swappable
|   | | | `-TemplateArgument expr
|   | | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | `-CXXRecordDecl struct __nothrow_swappable_with definition
|   | |   |-CXXRecordDecl implicit struct __nothrow_swappable_with
|   | |   `-VarDecl value 'const _Bool' static cinit
|   | |     `-BinaryOperator '_Bool' '&&'
|   | |       |-CXXNoexceptExpr '_Bool'
|   | |       | `-CallExpr '<dependent type>'
|   | |       |   |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fe028897ba8 0x7fe028896d38
|   | |       |   |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
|   | |       |   | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   | |       |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
|   | |       |     `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   | |       `-CXXNoexceptExpr '_Bool'
|   | |         `-CallExpr '<dependent type>'
|   | |           |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fe028897ba8 0x7fe028896d38
|   | |           |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
|   | |           | `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   | |           `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
|   | |             `-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe028013180
|   | `-ClassTemplatePartialSpecializationDecl struct __nothrow_swappable_with definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'type-parameter-0-0'
|   |   |-TemplateArgument type 'type-parameter-0-1'
|   |   |-TemplateArgument integral 0
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   |   `-CXXRecordDecl implicit struct __nothrow_swappable_with
|   |-ClassTemplateDecl prev 0x7fe028895e48 __is_swappable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl prev 0x7fe028895db0 struct __is_swappable definition
|   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
|   |   `-CXXRecordDecl implicit struct __is_swappable
|   |-ClassTemplateDecl prev 0x7fe028896178 __is_nothrow_swappable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl prev 0x7fe0288960e0 struct __is_nothrow_swappable definition
|   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
|   |   `-CXXRecordDecl implicit struct __is_nothrow_swappable
|   |-ClassTemplateDecl underlying_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct underlying_type definition
|   |   |-CXXRecordDecl implicit struct underlying_type
|   |   `-TypedefDecl type '__underlying_type(_Tp)'
|   |     `-UnaryTransformType '__underlying_type(_Tp)' dependent underlying_type
|   |       `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl underlying_type_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl underlying_type_t 'typename underlying_type<_Tp>::type'
|   |   `-DependentNameType 'typename underlying_type<_Tp>::type' dependent
|   |-ClassTemplateDecl __sfinae_underlying_type
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __sfinae_underlying_type definition
|   |   |-CXXRecordDecl implicit struct __sfinae_underlying_type
|   |   |-TypedefDecl referenced type 'typename underlying_type<_Tp>::type'
|   |   | `-DependentNameType 'typename underlying_type<_Tp>::type' dependent
|   |   `-TypedefDecl __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
|   |     `-DecltypeType 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
|   |       `-BinaryOperator '<dependent type>' '+'
|   |         |-ParenExpr 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
|   |         | `-CStyleCastExpr 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
|   |         |   `-IntegerLiteral 'int' 1
|   |         `-IntegerLiteral 'int' 0
|   |-ClassTemplatePartialSpecializationDecl struct __sfinae_underlying_type definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __sfinae_underlying_type
|   |-FunctionDecl __convert_to_integral 'int (int)' inline
|   | |-ParmVarDecl used __val 'int'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 'int' lvalue ParmVar 0x7fe0288a1bc0 '__val' 'int'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, > __convert_to_integral 'unsigned int (unsigned int)' inline
|   | |-ParmVarDecl used __val 'unsigned int'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 'unsigned int' lvalue ParmVar 0x7fe0288a2248 '__val' 'unsigned int'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, > __convert_to_integral 'long (long)' inline
|   | |-ParmVarDecl used __val 'long'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'long' <LValueToRValue>
|   | |     `-DeclRefExpr 'long' lvalue ParmVar 0x7fe0288a24d0 '__val' 'long'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, > __convert_to_integral 'unsigned long (unsigned long)' inline
|   | |-ParmVarDecl used __val 'unsigned long'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'unsigned long' <LValueToRValue>
|   | |     `-DeclRefExpr 'unsigned long' lvalue ParmVar 0x7fe0288a2750 '__val' 'unsigned long'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, > __convert_to_integral 'long long (long long)' inline
|   | |-ParmVarDecl used __val 'long long'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'long long' <LValueToRValue>
|   | |     `-DeclRefExpr 'long long' lvalue ParmVar 0x7fe0288a29d0 '__val' 'long long'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, > __convert_to_integral 'unsigned long long (unsigned long long)' inline
|   | |-ParmVarDecl used __val 'unsigned long long'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr 'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 'unsigned long long' lvalue ParmVar 0x7fe0288a2c50 '__val' 'unsigned long long'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, > __convert_to_integral '__int128_t (__int128_t)' inline
|   | |-ParmVarDecl used __val '__int128_t':'__int128'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr '__int128_t':'__int128' <LValueToRValue>
|   | |     `-DeclRefExpr '__int128_t':'__int128' lvalue ParmVar 0x7fe0288a2ec8 '__val' '__int128_t':'__int128'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, > __convert_to_integral '__uint128_t (__uint128_t)' inline
|   | |-ParmVarDecl used __val '__uint128_t':'unsigned __int128'
|   | |-CompoundStmt
|   | | `-ReturnStmt
|   | |   `-ImplicitCastExpr '__uint128_t':'unsigned __int128' <LValueToRValue>
|   | |     `-DeclRefExpr '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fe0288a3180 '__val' '__uint128_t':'unsigned __int128'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, > __convert_to_integral
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
|   |   |-ParmVarDecl referenced __val '_Tp'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe0288a3770 '__val' '_Tp'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, > __has_operator_addressof_member_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __has_operator_addressof_member_imp definition
|   |   |-CXXRecordDecl implicit struct __has_operator_addressof_member_imp
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Up
|   |   | `-CXXMethodDecl __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
|   |   |   `-ParmVarDecl 'int'
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl class depth 1 index 0
|   |   | `-CXXMethodDecl __test 'auto (long) -> std::__1::false_type' static
|   |   |   `-ParmVarDecl 'long'
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-ClassTemplateDecl __has_operator_addressof_free_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __has_operator_addressof_free_imp definition
|   |   |-CXXRecordDecl implicit struct __has_operator_addressof_free_imp
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Up
|   |   | `-CXXMethodDecl __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
|   |   |   `-ParmVarDecl 'int'
|   |   |-FunctionTemplateDecl __test
|   |   | |-TemplateTypeParmDecl class depth 1 index 0
|   |   | `-CXXMethodDecl __test 'auto (long) -> std::__1::false_type' static
|   |   |   `-ParmVarDecl 'long'
|   |   `-VarDecl value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-ClassTemplateDecl __has_operator_addressof
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __has_operator_addressof definition
|   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
|   |   `-CXXRecordDecl implicit struct __has_operator_addressof
|   |-CXXRecordDecl referenced struct __extract_key_fail_tag definition
|   | `-CXXRecordDecl implicit struct __extract_key_fail_tag
|   |-CXXRecordDecl referenced struct __extract_key_self_tag definition
|   | `-CXXRecordDecl implicit struct __extract_key_self_tag
|   |-CXXRecordDecl referenced struct __extract_key_first_tag definition
|   | `-CXXRecordDecl implicit struct __extract_key_first_tag
|   |-ClassTemplateDecl __can_extract_key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _RawValTy
|   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
|   | `-CXXRecordDecl struct __can_extract_key definition
|   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
|   |   `-CXXRecordDecl implicit struct __can_extract_key
|   |-ClassTemplatePartialSpecializationDecl struct __can_extract_key definition
|   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Pair
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _First
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _Second
|   | `-CXXRecordDecl implicit struct __can_extract_key
|   |-ClassTemplateDecl __can_extract_map_key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl class depth 0 index 2 _ContainerValueTy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 3 _RawValTy
|   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
|   | `-CXXRecordDecl struct __can_extract_map_key definition
|   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
|   |   `-CXXRecordDecl implicit struct __can_extract_map_key
|   |-ClassTemplatePartialSpecializationDecl struct __can_extract_map_key definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-2'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _RawValTy
|   | `-CXXRecordDecl implicit struct __can_extract_map_key
|   |-VarDecl parent 0x7fe0278ae2d0 prev 0x7fe0278af0a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> referenced value 'const _Bool':'const _Bool' constexpr
|   |-VarDecl parent 0x7fe0278ae000 prev 0x7fe0278afa40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> used value 'const _Bool':'const _Bool' constexpr
|   `-VarDecl parent 0x7fe028058468 prev 0x7fe028058748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> value 'const unsigned long':'const unsigned long' constexpr
|-LinkageSpecDecl implicit C
| `-FunctionDecl implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 'void &'
|   |-NoThrowAttr Implicit
|   `-ConstAttr Implicit
|-NamespaceDecl prev 0x7fe027866a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, > std
| |-original Namespace 0x7fe027866458 'std'
| `-NamespaceDecl prev 0x7fe027866ac0 <scratch space>:136:1 __1 inline
|   |-original Namespace 0x7fe0278664c0 '__1'
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:25:1, > tuple_size
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl class tuple_size
|   | | `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:652:1, > class tuple_size definition
|   |   |-public 'integral_constant<size_t, 2>':'struct std::__1::integral_constant<unsigned long, 2>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c2010 implicit class tuple_size
|   |-TypeAliasTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:28:1, > __enable_if_tuple_size_imp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl class depth 0 index 1 ...
|   | `-TypeAliasDecl __enable_if_tuple_size_imp '_Tp'
|   |   `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl class tuple_size definition
|   | |-public 'integral_constant<size_t, tuple_size<_Tp>::value>'
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:32:1, > implicit class tuple_size
|   |-ClassTemplatePartialSpecializationDecl class tuple_size definition
|   | |-public 'integral_constant<size_t, tuple_size<_Tp>::value>'
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:39:1, > implicit class tuple_size
|   |-ClassTemplatePartialSpecializationDecl class tuple_size definition
|   | |-public 'integral_constant<size_t, tuple_size<_Tp>::value>'
|   | |-TemplateArgument type 'const volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:46:1, > implicit class tuple_size
|   |-ClassTemplateDecl tuple_element
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl class depth 0 index 1 _Tp
|   | `-CXXRecordDecl class tuple_element
|   |   `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:59:1, > class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028808460 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'const type-parameter-0-1'
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:60:1, > implicit class tuple_element
|   | |-AccessSpecDecl public
|   | `-TypedefDecl type 'typename add_const<typename tuple_element<_Ip, _Tp>::type>::type'
|   |   `-DependentNameType 'typename add_const<typename tuple_element<_Ip, _Tp>::type>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028808e48 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'volatile type-parameter-0-1'
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:67:1, > implicit class tuple_element
|   | |-AccessSpecDecl public
|   | `-TypedefDecl type 'typename add_volatile<typename tuple_element<_Ip, _Tp>::type>::type'
|   |   `-DependentNameType 'typename add_volatile<typename tuple_element<_Ip, _Tp>::type>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288097e8 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'const volatile type-parameter-0-1'
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:74:1, > implicit class tuple_element
|   | |-AccessSpecDecl public
|   | `-TypedefDecl type 'typename add_cv<typename tuple_element<_Ip, _Tp>::type>::type'
|   |   `-DependentNameType 'typename add_cv<typename tuple_element<_Ip, _Tp>::type>::type' dependent
|   |-ClassTemplateDecl __tuple_like
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-CXXRecordDecl struct __tuple_like definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __tuple_like
|   | `-ClassTemplateSpecializationDecl struct __tuple_like definition
|   |   |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl prev 0x7fe0280c19e8 implicit struct __tuple_like
|   |-ClassTemplatePartialSpecializationDecl struct __tuple_like definition
|   | |-public '__tuple_like<_Tp>'
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __tuple_like
|   |-ClassTemplatePartialSpecializationDecl struct __tuple_like definition
|   | |-public '__tuple_like<_Tp>'
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __tuple_like
|   |-ClassTemplatePartialSpecializationDecl struct __tuple_like definition
|   | |-public '__tuple_like<_Tp>'
|   | |-TemplateArgument type 'const volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl implicit struct __tuple_like
|   |-ClassTemplateDecl __tuple_indices
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 ...
|   | `-CXXRecordDecl struct __tuple_indices definition
|   |   `-CXXRecordDecl implicit struct __tuple_indices
|   |-ClassTemplateDecl __integer_sequence
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _IdxType
|   | |-NonTypeTemplateParmDecl referenced '_IdxType' depth 0 index 1 ... _Values
|   | `-CXXRecordDecl struct __integer_sequence definition
|   |   |-CXXRecordDecl implicit struct __integer_sequence
|   |   |-TypeAliasTemplateDecl __convert
|   |   | |-TemplateTemplateParmDecl depth 1 index 0 _ToIndexSeq
|   |   | | |-TemplateTypeParmDecl referenced class depth 2 index 0 _OIdxType
|   |   | | `-NonTypeTemplateParmDecl '_OIdxType' depth 2 index 1 ...
|   |   | |-TemplateTypeParmDecl referenced class depth 1 index 1 _ToIndexType
|   |   | `-TypeAliasDecl __convert '_ToIndexSeq<_ToIndexType, _Values...>'
|   |   |   `-TemplateSpecializationType '_ToIndexSeq<_ToIndexType, _Values...>' dependent _ToIndexSeq
|   |   |     |-TemplateArgument type '_ToIndexType'
|   |   |     `-TemplateArgument expr
|   |   |       `-PackExpansionExpr '<dependent type>'
|   |   |         `-DeclRefExpr '_IdxType' NonTypeTemplateParm 0x7fe0288af098 '_Values' '_IdxType'
|   |   `-TypeAliasTemplateDecl __to_tuple_indices
|   |     |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 1 index 0 _Sp
|   |     `-TypeAliasDecl __to_tuple_indices '__tuple_indices<(_Values + _Sp)...>'
|   |       `-TemplateSpecializationType '__tuple_indices<(_Values + _Sp)...>' dependent __tuple_indices
|   |         `-TemplateArgument expr
|   |           `-PackExpansionExpr '<dependent type>'
|   |             `-ParenExpr '<dependent type>'
|   |               `-BinaryOperator '<dependent type>' '+'
|   |                 |-DeclRefExpr '_IdxType' NonTypeTemplateParm 0x7fe0288af098 '_Values' '_IdxType'
|   |                 `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288bfb60 '_Sp' 'size_t':'unsigned long'
|   |-TypeAliasTemplateDecl __make_indices_imp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ep
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Sp
|   | `-TypeAliasDecl __make_indices_imp 'typename __make_integer_seq<__integer_sequence, size_t, _Ep - _Sp>::__to_tuple_indices<_Sp>'
|   |   `-DependentTemplateSpecializationType 'typename __make_integer_seq<__integer_sequence, size_t, _Ep - _Sp>::__to_tuple_indices<_Sp>' dependent
|   |-ClassTemplateDecl __make_tuple_indices
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ep
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Sp
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 'int' 0
|   | `-CXXRecordDecl struct __make_tuple_indices definition
|   |   |-CXXRecordDecl implicit struct __make_tuple_indices
|   |   |-StaticAssertDecl
|   |   | |-BinaryOperator '_Bool' '<='
|   |   | | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288c0878 '_Sp' 'size_t':'unsigned long'
|   |   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288c07f0 '_Ep' 'size_t':'unsigned long'
|   |   | `-StringLiteral 'const char [33]' lvalue "__make_tuple_indices input error"
|   |   `-TypedefDecl type '__make_indices_imp<_Ep, _Sp>':'typename __make_integer_seq<__integer_sequence, unsigned long, _Ep - _Sp>::__to_tuple_indices<_Sp>'
|   |     `-TemplateSpecializationType '__make_indices_imp<_Ep, _Sp>' sugar dependent alias __make_indices_imp
|   |       |-TemplateArgument expr
|   |       | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288c07f0 '_Ep' 'size_t':'unsigned long'
|   |       |-TemplateArgument expr
|   |       | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288c0878 '_Sp' 'size_t':'unsigned long'
|   |       |-DependentTemplateSpecializationType 'typename __make_integer_seq<__integer_sequence, size_t, _Ep - _Sp>::__to_tuple_indices<_Sp>' dependent
|   |       `-DependentTemplateSpecializationType 'typename __make_integer_seq<__integer_sequence, unsigned long, _Ep - _Sp>::__to_tuple_indices<_Sp>' dependent
|   |-ClassTemplateDecl tuple
|   | |-TemplateTypeParmDecl class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl class tuple
|   |   `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:165:1, > struct __tuple_like definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'tuple<type-parameter-0-0...>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl implicit struct __tuple_like
|   |-ClassTemplatePartialSpecializationDecl class tuple_size definition
|   | |-public 'integral_constant<size_t, sizeof...(_Tp)>'
|   | |-TemplateArgument type 'tuple<type-parameter-0-0...>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:168:1, > implicit class tuple_size
|   |-FunctionTemplateDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:176:1 get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:176:1 constexpr get 'typename tuple_element<_Ip, tuple<_Tp...> >::type &(tuple<_Tp...> &) noexcept'
|   |   |-ParmVarDecl 'tuple<_Tp...> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:178:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:181:1 get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:181:1 constexpr get 'const typename tuple_element<_Ip, tuple<_Tp...> >::type &(const tuple<_Tp...> &) noexcept'
|   |   |-ParmVarDecl 'const tuple<_Tp...> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:183:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:186:1 get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:186:1 constexpr get 'typename tuple_element<_Ip, tuple<_Tp...> >::type &&(tuple<_Tp...> &&) noexcept'
|   |   |-ParmVarDecl 'tuple<_Tp...> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:188:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:191:1 get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:191:1 constexpr get 'const typename tuple_element<_Ip, tuple<_Tp...> >::type &&(const tuple<_Tp...> &&) noexcept'
|   |   |-ParmVarDecl 'const tuple<_Tp...> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:197:1, > struct __tuple_like definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'pair<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-CXXRecordDecl implicit struct __tuple_like
|   |-FunctionTemplateDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:202:1 get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:202:1 constexpr get 'typename tuple_element<_Ip, pair<_T1, _T2> >::type &(pair<_T1, _T2> &) noexcept'
|   |   |-ParmVarDecl 'pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:204:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:207:1 get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:207:1 constexpr get 'const typename tuple_element<_Ip, pair<_T1, _T2> >::type &(const pair<_T1, _T2> &) noexcept'
|   |   |-ParmVarDecl 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:210:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:213:1 get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:213:1 constexpr get 'typename tuple_element<_Ip, pair<_T1, _T2> >::type &&(pair<_T1, _T2> &&) noexcept'
|   |   |-ParmVarDecl 'pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:215:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:218:1 get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:218:1 constexpr get 'const typename tuple_element<_Ip, pair<_T1, _T2> >::type &&(const pair<_T1, _T2> &&) noexcept'
|   |   |-ParmVarDecl 'const pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:223:1, > array
|   | |-TemplateTypeParmDecl class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 1 _Size
|   | `-CXXRecordDecl struct array
|   |   `-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:225:1, > struct __tuple_like definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'array<type-parameter-0-0, _Size>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Size
|   | `-CXXRecordDecl implicit struct __tuple_like
|   |-FunctionTemplateDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:230:1 get
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:230:1 constexpr get '_Tp &(array<_Tp, _Size> &) noexcept'
|   |   |-ParmVarDecl 'array<_Tp, _Size> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:232:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:235:1 get
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:235:1 constexpr get 'const _Tp &(const array<_Tp, _Size> &) noexcept'
|   |   |-ParmVarDecl 'const array<_Tp, _Size> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:238:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:241:1 get
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:241:1 constexpr get '_Tp &&(array<_Tp, _Size> &&) noexcept'
|   |   |-ParmVarDecl 'array<_Tp, _Size> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:243:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:246:1 get
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, > /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:246:1 constexpr get 'const _Tp &&(const array<_Tp, _Size> &&) noexcept'
|   |   |-ParmVarDecl 'const array<_Tp, _Size> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:253:1, > __tuple_types
|   | |-TemplateTypeParmDecl class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl struct __tuple_types definition
|   |   `-CXXRecordDecl implicit struct __tuple_types
|   |-ClassTemplatePartialSpecializationDecl class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288c9630 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type '__tuple_types<type-parameter-0-1...>'
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Types
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:285:1, > implicit class tuple_element
|   | |-AccessSpecDecl public
|   | |-StaticAssertDecl
|   | | |-BinaryOperator '_Bool' '<'
|   | | | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288c9630 '_Ip' 'size_t':'unsigned long'
|   | | | `-SizeOfPackExpr 'unsigned long' 0x7fe0288c9688 _Types
|   | | `-StringLiteral 'const char [33]' lvalue "tuple_element index out of range"
|   | `-TypedefDecl type '__type_pack_element<_Ip, _Types...>'
|   |   `-TemplateSpecializationType '__type_pack_element<_Ip, _Types...>' dependent __type_pack_element
|   |     |-TemplateArgument expr
|   |     | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288c9630 '_Ip' 'size_t':'unsigned long'
|   |     `-TemplateArgument type '_Types...'
|   |-ClassTemplatePartialSpecializationDecl class tuple_size definition
|   | |-public 'integral_constant<size_t, sizeof...(_Tp)>'
|   | |-TemplateArgument type '__tuple_types<type-parameter-0-0...>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:294:1, > implicit class tuple_size
|   |-ClassTemplatePartialSpecializationDecl struct __tuple_like definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type '__tuple_types<type-parameter-0-0...>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl implicit struct __tuple_like
|   |-ClassTemplateDecl __apply_cv_mf
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _ApplyLV
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1 _ApplyConst
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2 _ApplyVolatile
|   | |-CXXRecordDecl struct __apply_cv_mf
|   | |-ClassTemplateSpecialization '__apply_cv_mf'
|   | |-ClassTemplateSpecialization '__apply_cv_mf'
|   | |-ClassTemplateSpecialization '__apply_cv_mf'
|   | |-ClassTemplateSpecialization '__apply_cv_mf'
|   | |-ClassTemplateSpecialization '__apply_cv_mf'
|   | |-ClassTemplateSpecialization '__apply_cv_mf'
|   | |-ClassTemplateSpecialization '__apply_cv_mf'
|   | `-ClassTemplateSpecialization '__apply_cv_mf'
|   |-ClassTemplateSpecializationDecl struct __apply_cv_mf definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl __apply
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl __apply '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateSpecializationDecl struct __apply_cv_mf definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl __apply
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl __apply 'const _Tp'
|   |     `-QualType 'const _Tp' const
|   |       `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm '_Tp'
|   |-ClassTemplateSpecializationDecl struct __apply_cv_mf definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl __apply
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl __apply 'volatile _Tp'
|   |     `-QualType 'volatile _Tp' volatile
|   |       `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm '_Tp'
|   |-ClassTemplateSpecializationDecl struct __apply_cv_mf definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl __apply
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl __apply 'const volatile _Tp'
|   |     `-QualType 'const volatile _Tp' const volatile
|   |       `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm '_Tp'
|   |-ClassTemplateSpecializationDecl struct __apply_cv_mf definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl __apply
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl __apply '_Tp &'
|   |     `-LValueReferenceType '_Tp &' dependent
|   |       `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm '_Tp'
|   |-ClassTemplateSpecializationDecl struct __apply_cv_mf definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl __apply
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl __apply 'const _Tp &'
|   |     `-LValueReferenceType 'const _Tp &' dependent
|   |       `-QualType 'const _Tp' const
|   |         `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |           `-TemplateTypeParm '_Tp'
|   |-ClassTemplateSpecializationDecl struct __apply_cv_mf definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl __apply
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl __apply 'volatile _Tp &'
|   |     `-LValueReferenceType 'volatile _Tp &' dependent
|   |       `-QualType 'volatile _Tp' volatile
|   |         `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |           `-TemplateTypeParm '_Tp'
|   |-ClassTemplateSpecializationDecl struct __apply_cv_mf definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl __apply
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl __apply 'const volatile _Tp &'
|   |     `-LValueReferenceType 'const volatile _Tp &' dependent
|   |       `-QualType 'const volatile _Tp' const volatile
|   |         `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |           `-TemplateTypeParm '_Tp'
|   |-TypeAliasTemplateDecl __apply_cv_t
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _RawTp
|   | | `-TemplateArgument type 'typename remove_reference<_Tp>::type'
|   | `-TypeAliasDecl __apply_cv_t '__apply_cv_mf<is_lvalue_reference<_Tp>::value, is_const<_RawTp>::value, is_volatile<_RawTp>::value>'
|   |   `-TemplateSpecializationType '__apply_cv_mf<is_lvalue_reference<_Tp>::value, is_const<_RawTp>::value, is_volatile<_RawTp>::value>' dependent __apply_cv_mf
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     `-TemplateArgument expr
|   |       `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-ClassTemplateDecl __make_tuple_types_flat
|   | |-TemplateTypeParmDecl class depth 0 index 0 _TupleTypes
|   | |-TemplateTypeParmDecl class depth 0 index 1 _TupleIndices
|   | `-CXXRecordDecl struct __make_tuple_types_flat
|   |-ClassTemplatePartialSpecializationDecl struct __make_tuple_types_flat definition
|   | |-TemplateArgument type '<type-parameter-0-1...>'
|   | |-TemplateArgument type '__tuple_indices<_Idx...>'
|   | |-TemplateTemplateParmDecl depth 0 index 0 _Tuple
|   | | `-TemplateTypeParmDecl class depth 1 index 0 ...
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Types
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 ... _Idx
|   | |-CXXRecordDecl implicit struct __make_tuple_types_flat
|   | `-TypeAliasTemplateDecl __apply_quals
|   |   |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tp
|   |   |-TemplateTypeParmDecl class depth 1 index 1 _ApplyFn
|   |   | `-TemplateArgument type '__apply_cv_t<_Tp>':'__apply_cv_mf<is_lvalue_reference<type-parameter-1-0>::value, is_const<typename remove_reference<type-parameter-1-0>::type>::value, is_volatile<typename remove_reference<type-parameter-1-0>::type>::value>'
|   |   `-TypeAliasDecl __apply_quals '__tuple_types<typename _ApplyFn::__apply<__type_pack_element<_Idx, _Types...> >...>'
|   |     `-TemplateSpecializationType '__tuple_types<typename _ApplyFn::__apply<__type_pack_element<_Idx, _Types...> >...>' dependent __tuple_types
|   |       `-TemplateArgument type 'typename _ApplyFn::__apply<__type_pack_element<_Idx, _Types...> >...'
|   |-ClassTemplatePartialSpecializationDecl struct __make_tuple_types_flat definition
|   | |-TemplateArgument type 'array<type-parameter-0-0, _Size>'
|   | |-TemplateArgument type '__tuple_indices<_Idx...>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Vt
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 ... _Idx
|   | |-CXXRecordDecl implicit struct __make_tuple_types_flat
|   | |-TypeAliasTemplateDecl __value_type
|   | | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 1 index 0
|   | | `-TypeAliasDecl __value_type '_Vt'
|   | |   `-TemplateTypeParmType '_Vt' dependent depth 0 index 0
|   | |     `-TemplateTypeParm '_Vt'
|   | `-TypeAliasTemplateDecl __apply_quals
|   |   |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tp
|   |   |-TemplateTypeParmDecl class depth 1 index 1 _ApplyFn
|   |   | `-TemplateArgument type '__apply_cv_t<_Tp>':'__apply_cv_mf<is_lvalue_reference<type-parameter-1-0>::value, is_const<typename remove_reference<type-parameter-1-0>::type>::value, is_volatile<typename remove_reference<type-parameter-1-0>::type>::value>'
|   |   `-TypeAliasDecl __apply_quals '__tuple_types<typename _ApplyFn::__apply<__value_type<_Idx> >...>'
|   |     `-TemplateSpecializationType '__tuple_types<typename _ApplyFn::__apply<__value_type<_Idx> >...>' dependent __tuple_types
|   |       `-TemplateArgument type 'typename _ApplyFn::__apply<__value_type<_Idx> >...'
|   |-ClassTemplateDecl __make_tuple_types
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Ep
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 2 _Sp
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 'int' 0
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 3 _SameSize
|   | | `-TemplateArgument expr
|   | |   `-ParenExpr '<dependent type>'
|   | |     `-BinaryOperator '<dependent type>' '=='
|   | |       |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288d2d98 '_Ep' 'size_t':'unsigned long'
|   | |       `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __make_tuple_types definition
|   |   |-CXXRecordDecl implicit struct __make_tuple_types
|   |   |-StaticAssertDecl
|   |   | |-BinaryOperator '_Bool' '<='
|   |   | | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288d2e20 '_Sp' 'size_t':'unsigned long'
|   |   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288d2d98 '_Ep' 'size_t':'unsigned long'
|   |   | `-StringLiteral 'const char [31]' lvalue "__make_tuple_types input error"
|   |   |-TypeAliasDecl referenced _RawTp 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
|   |   | `-DependentNameType 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
|   |   |-TypeAliasDecl referenced _Maker '__make_tuple_types_flat<std::__1::__make_tuple_types::_RawTp, typename __make_tuple_indices<_Ep, _Sp>::type>'
|   |   | `-TemplateSpecializationType '__make_tuple_types_flat<std::__1::__make_tuple_types::_RawTp, typename __make_tuple_indices<_Ep, _Sp>::type>' dependent __make_tuple_types_flat
|   |   |   |-TemplateArgument type 'std::__1::__make_tuple_types::_RawTp':'typename remove_cv<typename remove_reference<_Tp>::type>::type'
|   |   |   `-TemplateArgument type 'typename __make_tuple_indices<_Ep, _Sp>::type'
|   |   `-TypeAliasDecl type 'typename _Maker::__apply_quals<_Tp>'
|   |     `-DependentTemplateSpecializationType 'typename _Maker::__apply_quals<_Tp>' dependent
|   |-ClassTemplatePartialSpecializationDecl struct __make_tuple_types definition
|   | |-TemplateArgument type 'tuple<type-parameter-0-0...>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288d4148 '_Ep' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Types
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Ep
|   | |-CXXRecordDecl implicit struct __make_tuple_types
|   | `-TypedefDecl type '__tuple_types<_Types...>'
|   |   `-TemplateSpecializationType '__tuple_types<_Types...>' dependent __tuple_types
|   |     `-TemplateArgument type '_Types...'
|   |-ClassTemplatePartialSpecializationDecl struct __make_tuple_types definition
|   | |-TemplateArgument type '__tuple_types<type-parameter-0-0...>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288d4be8 '_Ep' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Types
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Ep
|   | |-CXXRecordDecl implicit struct __make_tuple_types
|   | `-TypedefDecl type '__tuple_types<_Types...>'
|   |   `-TemplateSpecializationType '__tuple_types<_Types...>' dependent __tuple_types
|   |     `-TemplateArgument type '_Types...'
|   |-ClassTemplateDecl __all_dummy
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 ... _Preds
|   | `-CXXRecordDecl struct __all_dummy
|   |-TypeAliasTemplateDecl __all
|   | |-NonTypeTemplateParmDecl referenced '_Bool' depth 0 index 0 ... _Pred
|   | `-TypeAliasDecl __all 'is_same<__all_dummy<_Pred...>, __all_dummy<((void)_Pred , true)...> >'
|   |   `-TemplateSpecializationType 'is_same<__all_dummy<_Pred...>, __all_dummy<((void)_Pred , true)...> >' dependent is_same
|   |     |-TemplateArgument type '__all_dummy<_Pred...>'
|   |     `-TemplateArgument type '__all_dummy<((void)_Pred , true)...>'
|   |-CXXRecordDecl struct __tuple_sfinae_base definition
|   | |-CXXRecordDecl implicit struct __tuple_sfinae_base
|   | |-FunctionTemplateDecl __do_test
|   | | |-TemplateTemplateParmDecl depth 0 index 0 _Trait
|   | | | |-TemplateTypeParmDecl class depth 1 index 0
|   | | | `-TemplateTypeParmDecl class depth 1 index 1 ...
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _LArgs
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 2 ... _RArgs
|   | | `-CXXMethodDecl __do_test 'auto (__tuple_types<_LArgs...>, __tuple_types<_RArgs...>) -> __all<typename enable_if<_Trait<_LArgs, _RArgs>::value, _Bool>::type({true})...>' static
|   | |   |-ParmVarDecl '__tuple_types<_LArgs...>'
|   | |   `-ParmVarDecl '__tuple_types<_RArgs...>'
|   | |-FunctionTemplateDecl __do_test
|   | | |-TemplateTemplateParmDecl depth 0 index 0
|   | | | `-TemplateTypeParmDecl class depth 1 index 0 ...
|   | | `-CXXMethodDecl __do_test 'auto (...) -> std::__1::false_type' static
|   | |-TypeAliasTemplateDecl __constructible
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _FromArgs
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _ToArgs
|   | | `-TypeAliasDecl __constructible 'decltype(__do_test<is_constructible>(_ToArgs({}), _FromArgs({})))'
|   | |   `-DecltypeType 'decltype(__do_test<is_constructible>(_ToArgs({}), _FromArgs({})))' dependent
|   | |     `-CallExpr '<dependent type>'
|   | |       |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = '__do_test' 0x7fe0288d75f8 0x7fe0288d73a8
|   | |       |-CXXUnresolvedConstructExpr '_ToArgs'
|   | |       | `-InitListExpr 'void'
|   | |       `-CXXUnresolvedConstructExpr '_FromArgs'
|   | |         `-InitListExpr 'void'
|   | |-TypeAliasTemplateDecl __convertible
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _FromArgs
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _ToArgs
|   | | `-TypeAliasDecl __convertible 'decltype(__do_test<is_convertible>(_FromArgs({}), _ToArgs({})))'
|   | |   `-DecltypeType 'decltype(__do_test<is_convertible>(_FromArgs({}), _ToArgs({})))' dependent
|   | |     `-CallExpr '<dependent type>'
|   | |       |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = '__do_test' 0x7fe0288d75f8 0x7fe0288d73a8
|   | |       |-CXXUnresolvedConstructExpr '_FromArgs'
|   | |       | `-InitListExpr 'void'
|   | |       `-CXXUnresolvedConstructExpr '_ToArgs'
|   | |         `-InitListExpr 'void'
|   | `-TypeAliasTemplateDecl __assignable
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _FromArgs
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 1 _ToArgs
|   |   `-TypeAliasDecl __assignable 'decltype(__do_test<is_assignable>(_ToArgs({}), _FromArgs({})))'
|   |     `-DecltypeType 'decltype(__do_test<is_assignable>(_ToArgs({}), _FromArgs({})))' dependent
|   |       `-CallExpr '<dependent type>'
|   |         |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = '__do_test' 0x7fe0288d75f8 0x7fe0288d73a8
|   |         |-CXXUnresolvedConstructExpr '_ToArgs'
|   |         | `-InitListExpr 'void'
|   |         `-CXXUnresolvedConstructExpr '_FromArgs'
|   |           `-InitListExpr 'void'
|   |-ClassTemplateDecl __tuple_convertible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __tuple_convertible definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __tuple_convertible
|   |-ClassTemplatePartialSpecializationDecl struct __tuple_convertible definition
|   | |-public 'struct __tuple_sfinae_base::__convertible<typename __make_tuple_types<_Tp>::type, typename __make_tuple_types<_Up>::type>':'decltype(__do_test<is_convertible>(typename __make_tuple_types<type-parameter-0-0, tuple_size<typename remove_reference<type-parameter-0-0>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-0>::type>::value == tuple_size<typename remove_reference<type-parameter-0-0>::type>::value)>::type({}), typename __make_tuple_types<type-parameter-0-1, tuple_size<typename remove_reference<type-parameter-0-1>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-1>::type>::value == tuple_size<typename remove_reference<type-parameter-0-1>::type>::value)>::type({})))'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl implicit struct __tuple_convertible
|   |-ClassTemplateDecl __tuple_constructible
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __tuple_constructible definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __tuple_constructible
|   |-ClassTemplatePartialSpecializationDecl struct __tuple_constructible definition
|   | |-public 'struct __tuple_sfinae_base::__constructible<typename __make_tuple_types<_Tp>::type, typename __make_tuple_types<_Up>::type>':'decltype(__do_test<is_constructible>(typename __make_tuple_types<type-parameter-0-1, tuple_size<typename remove_reference<type-parameter-0-1>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-1>::type>::value == tuple_size<typename remove_reference<type-parameter-0-1>::type>::value)>::type({}), typename __make_tuple_types<type-parameter-0-0, tuple_size<typename remove_reference<type-parameter-0-0>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-0>::type>::value == tuple_size<typename remove_reference<type-parameter-0-0>::type>::value)>::type({})))'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl implicit struct __tuple_constructible
|   |-ClassTemplateDecl __tuple_assignable
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __tuple_assignable definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl implicit struct __tuple_assignable
|   |-ClassTemplatePartialSpecializationDecl struct __tuple_assignable definition
|   | |-public 'struct __tuple_sfinae_base::__assignable<typename __make_tuple_types<_Tp>::type, typename __make_tuple_types<_Up &>::type>':'decltype(__do_test<is_assignable>(typename __make_tuple_types<type-parameter-0-1 &, tuple_size<typename remove_reference<type-parameter-0-1 &>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-1 &>::type>::value == tuple_size<typename remove_reference<type-parameter-0-1 &>::type>::value)>::type({}), typename __make_tuple_types<type-parameter-0-0, tuple_size<typename remove_reference<type-parameter-0-0>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-0>::type>::value == tuple_size<typename remove_reference<type-parameter-0-0>::type>::value)>::type({})))'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl implicit struct __tuple_assignable
|   |-ClassTemplatePartialSpecializationDecl class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288df9e0 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'tuple<type-parameter-0-1...>'
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:460:1, > implicit class tuple_element
|   | |-AccessSpecDecl public
|   | `-TypedefDecl type 'typename tuple_element<_Ip, __tuple_types<_Tp...> >::type'
|   |   `-DependentNameType 'typename tuple_element<_Ip, __tuple_types<_Tp...> >::type' dependent
|   |-TypeAliasTemplateDecl tuple_element_t
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 ... _Tp
|   | `-TypeAliasDecl tuple_element_t 'typename tuple_element<_Ip, _Tp...>::type'
|   |   `-DependentNameType 'typename tuple_element<_Ip, _Tp...>::type' dependent
|   |-ClassTemplateDecl __tuple_like_with_size_imp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 0 _IsTuple
|   | |-TemplateTypeParmDecl class depth 0 index 1 _SizeTrait
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 2 _Expected
|   | |-CXXRecordDecl struct __tuple_like_with_size_imp definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl implicit struct __tuple_like_with_size_imp
|   | `-ClassTemplateSpecializationDecl struct __tuple_like_with_size_imp definition
|   |   |-public 'integral_constant<_Bool, class tuple_size<struct pair<unsigned long, unsigned long> >::value == 2UL>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type 'class std::__1::tuple_size<struct std::__1::pair<unsigned long, unsigned long> >'
|   |   |-TemplateArgument integral 2
|   |   `-CXXRecordDecl prev 0x7fe0280c21f8 implicit struct __tuple_like_with_size_imp
|   |-ClassTemplatePartialSpecializationDecl struct __tuple_like_with_size_imp definition
|   | |-public 'integral_constant<_Bool, _SizeTrait::value == _Expected>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288e0e88 '_Expected' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _SizeTrait
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Expected
|   | `-CXXRecordDecl implicit struct __tuple_like_with_size_imp
|   |-TypeAliasTemplateDecl __tuple_like_with_size
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tuple
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _ExpectedSize
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _RawTuple
|   | | `-TemplateArgument type 'typename __uncvref<_Tuple>::type'
|   | `-TypeAliasDecl __tuple_like_with_size '__tuple_like_with_size_imp<__tuple_like<_RawTuple>::value, tuple_size<_RawTuple>, _ExpectedSize>'
|   |   `-TemplateSpecializationType '__tuple_like_with_size_imp<__tuple_like<_RawTuple>::value, tuple_size<_RawTuple>, _ExpectedSize>' dependent __tuple_like_with_size_imp
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |     |-TemplateArgument type 'tuple_size<_RawTuple>'
|   |     `-TemplateArgument expr
|   |       `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0288e2768 '_ExpectedSize' 'size_t':'unsigned long'
|   `-CXXRecordDecl referenced struct __check_tuple_constructor_fail definition
|     |-VisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:669:46, > Default
|     |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:485:1, > implicit struct __check_tuple_constructor_fail
|     |-FunctionTemplateDecl __enable_default
|     | |-TemplateTypeParmDecl class depth 0 index 0 ...
|     | `-CXXMethodDecl constexpr __enable_default '_Bool (void)' static
|     |   `-CompoundStmt
|     |     `-ReturnStmt
|     |       `-CXXBoolLiteralExpr '_Bool' false
|     |-FunctionTemplateDecl __enable_explicit
|     | |-TemplateTypeParmDecl class depth 0 index 0 ...
|     | `-CXXMethodDecl constexpr __enable_explicit '_Bool (void)' static
|     |   `-CompoundStmt
|     |     `-ReturnStmt
|     |       `-CXXBoolLiteralExpr '_Bool' false
|     |-FunctionTemplateDecl __enable_implicit
|     | |-TemplateTypeParmDecl class depth 0 index 0 ...
|     | |-CXXMethodDecl constexpr __enable_implicit '_Bool (void)' static
|     | | `-CompoundStmt
|     | |   `-ReturnStmt
|     | |     `-CXXBoolLiteralExpr '_Bool' false
|     | `-CXXMethodDecl referenced constexpr __enable_implicit '_Bool (void)' static
|     |   |-TemplateArgument pack
|     |   | `-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|     |   `-CompoundStmt
|     |     `-ReturnStmt
|     |       `-CXXBoolLiteralExpr '_Bool' false
|     `-FunctionTemplateDecl __enable_assign
|       |-TemplateTypeParmDecl class depth 0 index 0 ...
|       |-CXXMethodDecl constexpr __enable_assign '_Bool (void)' static
|       | `-CompoundStmt
|       |   `-ReturnStmt
|       |     `-CXXBoolLiteralExpr '_Bool' false
|       `-CXXMethodDecl referenced constexpr __enable_assign '_Bool (void)' static
|         |-TemplateArgument pack
|         | `-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|         `-CompoundStmt
|           `-ReturnStmt
|             `-CXXBoolLiteralExpr '_Bool' false
|-BuiltinTemplateDecl implicit __make_integer_seq
| |-TemplateTemplateParmDecl implicit depth 0 index 0
| | |-TemplateTypeParmDecl implicit typename depth 1 index 0
| | `-NonTypeTemplateParmDecl implicit 'type-parameter-1-0' depth 0 index 1 ...
| |-TemplateTypeParmDecl implicit typename depth 0 index 1
| `-NonTypeTemplateParmDecl 'type-parameter-0-1' depth 0 index 2
|-BuiltinTemplateDecl implicit __type_pack_element
| |-NonTypeTemplateParmDecl 'unsigned long' depth 0 index 0
| `-TemplateTypeParmDecl implicit typename depth 0 index 1 ...
|-NamespaceDecl prev 0x7fe0288aad38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:53:1, > std
| |-original Namespace 0x7fe027866458 'std'
| |-ClassTemplateDecl initializer_list
| | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ep
| | `-CXXRecordDecl class initializer_list definition
| |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
| |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:59:1, > implicit referenced class initializer_list
| |   |-FieldDecl referenced __begin_ 'const _Ep *'
| |   |-FieldDecl referenced __size_ 'size_t':'unsigned long'
| |   |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:69:10> constexpr initializer_list<_Ep> 'void (const _Ep *, size_t) noexcept'
| |   | |-ParmVarDecl referenced __b 'const _Ep *'
| |   | |-ParmVarDecl referenced __s 'size_t':'unsigned long'
| |   | |-CXXCtorInitializer Field 0x7fe0288e3e38 '__begin_' 'const _Ep *'
| |   | | `-ParenListExpr 'NULL TYPE'
| |   | |   `-DeclRefExpr 'const _Ep *' lvalue ParmVar 0x7fe0288e3f18 '__b' 'const _Ep *'
| |   | |-CXXCtorInitializer Field 0x7fe0288e3e90 '__size_' 'size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
| |   | |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe0288e3f88 '__s' 'size_t':'unsigned long'
| |   | |-CompoundStmt
| |   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   | `-VisibilityAttr Hidden
| |   |-AccessSpecDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:70:1, > public
| |   |-TypedefDecl value_type '_Ep'
| |   | `-TemplateTypeParmType '_Ep' dependent depth 0 index 0
| |   |   `-TemplateTypeParm '_Ep'
| |   |-TypedefDecl reference 'const _Ep &'
| |   | `-LValueReferenceType 'const _Ep &' dependent
| |   |   `-QualType 'const _Ep' const
| |   |     `-TemplateTypeParmType '_Ep' dependent depth 0 index 0
| |   |       `-TemplateTypeParm '_Ep'
| |   |-TypedefDecl const_reference 'const _Ep &'
| |   | `-LValueReferenceType 'const _Ep &' dependent
| |   |   `-QualType 'const _Ep' const
| |   |     `-TemplateTypeParmType '_Ep' dependent depth 0 index 0
| |   |       `-TemplateTypeParm '_Ep'
| |   |-TypedefDecl size_type 'size_t':'unsigned long'
| |   | `-TypedefType 'size_t' sugar
| |   |   |-Typedef 'size_t'
| |   |   `-BuiltinType 'unsigned long'
| |   |-TypedefDecl iterator 'const _Ep *'
| |   | `-PointerType 'const _Ep *' dependent
| |   |   `-QualType 'const _Ep' const
| |   |     `-TemplateTypeParmType '_Ep' dependent depth 0 index 0
| |   |       `-TemplateTypeParm '_Ep'
| |   |-TypedefDecl const_iterator 'const _Ep *'
| |   | `-PointerType 'const _Ep *' dependent
| |   |   `-QualType 'const _Ep' const
| |   |     `-TemplateTypeParmType '_Ep' dependent depth 0 index 0
| |   |       `-TemplateTypeParm '_Ep'
| |   |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:81:67> constexpr initializer_list<_Ep> 'void (void) noexcept'
| |   | |-CXXCtorInitializer Field 0x7fe0288e3e38 '__begin_' 'const _Ep *'
| |   | | `-ParenListExpr 'NULL TYPE'
| |   | |   `-CXXNullPtrLiteralExpr 'nullptr_t'
| |   | |-CXXCtorInitializer Field 0x7fe0288e3e90 '__size_' 'size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 'int' 0
| |   | |-CompoundStmt
| |   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   | `-VisibilityAttr Hidden
| |   |-CXXMethodDecl constexpr size 'size_t (void) const noexcept'
| |   | |-CompoundStmt
| |   | | `-ReturnStmt
| |   | |   `-MemberExpr 'const size_t':'const unsigned long' lvalue ->__size_ 0x7fe0288e3e90
| |   | |     `-CXXThisExpr 'const initializer_list<_Ep> *' this
| |   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   | `-VisibilityAttr Hidden
| |   |-CXXMethodDecl constexpr begin 'const _Ep *(void) const noexcept'
| |   | |-CompoundStmt
| |   | | `-ReturnStmt
| |   | |   `-MemberExpr 'const _Ep *const' lvalue ->__begin_ 0x7fe0288e3e38
| |   | |     `-CXXThisExpr 'const initializer_list<_Ep> *' this
| |   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   | `-VisibilityAttr Hidden
| |   `-CXXMethodDecl constexpr end 'const _Ep *(void) const noexcept'
| |     |-CompoundStmt
| |     | `-ReturnStmt
| |     |   `-BinaryOperator '<dependent type>' '+'
| |     |     |-MemberExpr 'const _Ep *const' lvalue ->__begin_ 0x7fe0288e3e38
| |     |     | `-CXXThisExpr 'const initializer_list<_Ep> *' this
| |     |     `-MemberExpr 'const size_t':'const unsigned long' lvalue ->__size_ 0x7fe0288e3e90
| |     |       `-CXXThisExpr 'const initializer_list<_Ep> *' this
| |     |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |     `-VisibilityAttr Hidden
| |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:96:1, > begin
| | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ep
| | `-FunctionDecl constexpr begin 'const _Ep *(initializer_list<_Ep>) noexcept' inline
| |   |-ParmVarDecl referenced __il 'initializer_list<_Ep>'
| |   |-CompoundStmt
| |   | `-ReturnStmt
| |   |   `-CallExpr '<dependent type>'
| |   |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .begin
| |   |       `-DeclRefExpr 'initializer_list<_Ep>' lvalue ParmVar 0x7fe02880ff08 '__il' 'initializer_list<_Ep>'
| |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr Hidden
| `-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:105:1, > end
|   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Ep
|   `-FunctionDecl constexpr end 'const _Ep *(initializer_list<_Ep>) noexcept' inline
|     |-ParmVarDecl referenced __il 'initializer_list<_Ep>'
|     |-CompoundStmt
|     | `-ReturnStmt
|     |   `-CallExpr '<dependent type>'
|     |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .end
|     |       `-DeclRefExpr 'initializer_list<_Ep>' lvalue ParmVar 0x7fe0288103d8 '__il' 'initializer_list<_Ep>'
|     |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr Hidden
|-TypedefDecl </usr/include/i386/_types.h:37:1, > __int8_t 'signed char'
| `-BuiltinType 'signed char'
|-TypedefDecl __uint8_t 'unsigned char'
| `-BuiltinType 'unsigned char'
|-TypedefDecl __int16_t 'short'
| `-BuiltinType 'short'
|-TypedefDecl referenced __uint16_t 'unsigned short'
| `-BuiltinType 'unsigned short'
|-TypedefDecl referenced __int32_t 'int'
| `-BuiltinType 'int'
|-TypedefDecl referenced __uint32_t 'unsigned int'
| `-BuiltinType 'unsigned int'
|-TypedefDecl referenced __int64_t 'long long'
| `-BuiltinType 'long long'
|-TypedefDecl referenced __uint64_t 'unsigned long long'
| `-BuiltinType 'unsigned long long'
|-TypedefDecl referenced __darwin_intptr_t 'long'
| `-BuiltinType 'long'
|-TypedefDecl referenced __darwin_natural_t 'unsigned int'
| `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_ct_rune_t 'int'
| `-BuiltinType 'int'
|-CXXRecordDecl union definition
| |-FieldDecl __mbstate8 'char [128]'
| `-FieldDecl _mbstateL 'long long'
|-TypedefDecl referenced __mbstate_t 'union __mbstate_t':'__mbstate_t'
| `-ElaboratedType 'union __mbstate_t' sugar
|   `-RecordType '__mbstate_t'
|     `-CXXRecord ''
|-TypedefDecl __darwin_mbstate_t '__mbstate_t':'__mbstate_t'
| `-TypedefType '__mbstate_t' sugar
|   |-Typedef '__mbstate_t'
|   `-ElaboratedType 'union __mbstate_t' sugar
|     `-RecordType '__mbstate_t'
|       `-CXXRecord ''
|-TypedefDecl __darwin_ptrdiff_t 'long'
| `-BuiltinType 'long'
|-TypedefDecl __darwin_size_t 'unsigned long'
| `-BuiltinType 'unsigned long'
|-TypedefDecl __darwin_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType '__builtin_va_list' sugar
|   |-Typedef '__builtin_va_list'
|   `-ConstantArrayType 'struct __va_list_tag [1]' 1
|     `-RecordType 'struct __va_list_tag'
|       `-CXXRecord '__va_list_tag'
|-TypedefDecl referenced __darwin_wchar_t 'int'
| `-BuiltinType 'int'
|-TypedefDecl __darwin_rune_t '__darwin_wchar_t':'int'
| `-TypedefType '__darwin_wchar_t' sugar
|   |-Typedef '__darwin_wchar_t'
|   `-BuiltinType 'int'
|-TypedefDecl __darwin_wint_t 'int'
| `-BuiltinType 'int'
|-TypedefDecl __darwin_clock_t 'unsigned long'
| `-BuiltinType 'unsigned long'
|-TypedefDecl __darwin_socklen_t '__uint32_t':'unsigned int'
| `-TypedefType '__uint32_t' sugar
|   |-Typedef '__uint32_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl referenced __darwin_ssize_t 'long'
| `-BuiltinType 'long'
|-TypedefDecl __darwin_time_t 'long'
| `-BuiltinType 'long'
|-TypedefDecl </usr/include/sys/_types.h:55:1, > __darwin_blkcnt_t '__int64_t':'long long'
| `-TypedefType '__int64_t' sugar
|   |-Typedef '__int64_t'
|   `-BuiltinType 'long long'
|-TypedefDecl __darwin_blksize_t '__int32_t':'int'
| `-TypedefType '__int32_t' sugar
|   |-Typedef '__int32_t'
|   `-BuiltinType 'int'
|-TypedefDecl __darwin_dev_t '__int32_t':'int'
| `-TypedefType '__int32_t' sugar
|   |-Typedef '__int32_t'
|   `-BuiltinType 'int'
|-TypedefDecl __darwin_fsblkcnt_t 'unsigned int'
| `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_fsfilcnt_t 'unsigned int'
| `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_gid_t '__uint32_t':'unsigned int'
| `-TypedefType '__uint32_t' sugar
|   |-Typedef '__uint32_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_id_t '__uint32_t':'unsigned int'
| `-TypedefType '__uint32_t' sugar
|   |-Typedef '__uint32_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl referenced __darwin_ino64_t '__uint64_t':'unsigned long long'
| `-TypedefType '__uint64_t' sugar
|   |-Typedef '__uint64_t'
|   `-BuiltinType 'unsigned long long'
|-TypedefDecl __darwin_ino_t '__darwin_ino64_t':'unsigned long long'
| `-TypedefType '__darwin_ino64_t' sugar
|   |-Typedef '__darwin_ino64_t'
|   `-TypedefType '__uint64_t' sugar
|     |-Typedef '__uint64_t'
|     `-BuiltinType 'unsigned long long'
|-TypedefDecl referenced __darwin_mach_port_name_t '__darwin_natural_t':'unsigned int'
| `-TypedefType '__darwin_natural_t' sugar
|   |-Typedef '__darwin_natural_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_mach_port_t '__darwin_mach_port_name_t':'unsigned int'
| `-TypedefType '__darwin_mach_port_name_t' sugar
|   |-Typedef '__darwin_mach_port_name_t'
|   `-TypedefType '__darwin_natural_t' sugar
|     |-Typedef '__darwin_natural_t'
|     `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_mode_t '__uint16_t':'unsigned short'
| `-TypedefType '__uint16_t' sugar
|   |-Typedef '__uint16_t'
|   `-BuiltinType 'unsigned short'
|-TypedefDecl __darwin_off_t '__int64_t':'long long'
| `-TypedefType '__int64_t' sugar
|   |-Typedef '__int64_t'
|   `-BuiltinType 'long long'
|-TypedefDecl __darwin_pid_t '__int32_t':'int'
| `-TypedefType '__int32_t' sugar
|   |-Typedef '__int32_t'
|   `-BuiltinType 'int'
|-TypedefDecl __darwin_sigset_t '__uint32_t':'unsigned int'
| `-TypedefType '__uint32_t' sugar
|   |-Typedef '__uint32_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_suseconds_t '__int32_t':'int'
| `-TypedefType '__int32_t' sugar
|   |-Typedef '__int32_t'
|   `-BuiltinType 'int'
|-TypedefDecl __darwin_uid_t '__uint32_t':'unsigned int'
| `-TypedefType '__uint32_t' sugar
|   |-Typedef '__uint32_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_useconds_t '__uint32_t':'unsigned int'
| `-TypedefType '__uint32_t' sugar
|   |-Typedef '__uint32_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl __darwin_uuid_t 'unsigned char [16]'
| `-ConstantArrayType 'unsigned char [16]' 16
|   `-BuiltinType 'unsigned char'
|-TypedefDecl __darwin_uuid_string_t 'char [37]'
| `-ConstantArrayType 'char [37]' 37
|   `-BuiltinType 'char'
|-CXXRecordDecl </usr/include/sys/_pthread/_pthread_types.h:57:1, > struct __darwin_pthread_handler_rec definition
| |-CXXRecordDecl implicit struct __darwin_pthread_handler_rec
| |-FieldDecl __routine 'void (*)(void *)'
| |-FieldDecl __arg 'void *'
| `-FieldDecl __next 'struct __darwin_pthread_handler_rec *'
|-CXXRecordDecl struct _opaque_pthread_attr_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_attr_t
| |-FieldDecl __sig 'long'
| `-FieldDecl __opaque 'char [56]'
|-CXXRecordDecl struct _opaque_pthread_cond_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_cond_t
| |-FieldDecl __sig 'long'
| `-FieldDecl __opaque 'char [40]'
|-CXXRecordDecl struct _opaque_pthread_condattr_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_condattr_t
| |-FieldDecl __sig 'long'
| `-FieldDecl __opaque 'char [8]'
|-CXXRecordDecl struct _opaque_pthread_mutex_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_mutex_t
| |-FieldDecl __sig 'long'
| `-FieldDecl __opaque 'char [56]'
|-CXXRecordDecl struct _opaque_pthread_mutexattr_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_mutexattr_t
| |-FieldDecl __sig 'long'
| `-FieldDecl __opaque 'char [8]'
|-CXXRecordDecl struct _opaque_pthread_once_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_once_t
| |-FieldDecl __sig 'long'
| `-FieldDecl __opaque 'char [8]'
|-CXXRecordDecl struct _opaque_pthread_rwlock_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_rwlock_t
| |-FieldDecl __sig 'long'
| `-FieldDecl __opaque 'char [192]'
|-CXXRecordDecl struct _opaque_pthread_rwlockattr_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_rwlockattr_t
| |-FieldDecl __sig 'long'
| `-FieldDecl __opaque 'char [16]'
|-CXXRecordDecl struct _opaque_pthread_t definition
| |-CXXRecordDecl implicit struct _opaque_pthread_t
| |-FieldDecl __sig 'long'
| |-FieldDecl __cleanup_stack 'struct __darwin_pthread_handler_rec *'
| `-FieldDecl __opaque 'char [8176]'
|-TypedefDecl __darwin_pthread_attr_t 'struct _opaque_pthread_attr_t':'struct _opaque_pthread_attr_t'
| `-ElaboratedType 'struct _opaque_pthread_attr_t' sugar
|   `-RecordType 'struct _opaque_pthread_attr_t'
|     `-CXXRecord '_opaque_pthread_attr_t'
|-TypedefDecl __darwin_pthread_cond_t 'struct _opaque_pthread_cond_t':'struct _opaque_pthread_cond_t'
| `-ElaboratedType 'struct _opaque_pthread_cond_t' sugar
|   `-RecordType 'struct _opaque_pthread_cond_t'
|     `-CXXRecord '_opaque_pthread_cond_t'
|-TypedefDecl __darwin_pthread_condattr_t 'struct _opaque_pthread_condattr_t':'struct _opaque_pthread_condattr_t'
| `-ElaboratedType 'struct _opaque_pthread_condattr_t' sugar
|   `-RecordType 'struct _opaque_pthread_condattr_t'
|     `-CXXRecord '_opaque_pthread_condattr_t'
|-TypedefDecl __darwin_pthread_key_t 'unsigned long'
| `-BuiltinType 'unsigned long'
|-TypedefDecl __darwin_pthread_mutex_t 'struct _opaque_pthread_mutex_t':'struct _opaque_pthread_mutex_t'
| `-ElaboratedType 'struct _opaque_pthread_mutex_t' sugar
|   `-RecordType 'struct _opaque_pthread_mutex_t'
|     `-CXXRecord '_opaque_pthread_mutex_t'
|-TypedefDecl __darwin_pthread_mutexattr_t 'struct _opaque_pthread_mutexattr_t':'struct _opaque_pthread_mutexattr_t'
| `-ElaboratedType 'struct _opaque_pthread_mutexattr_t' sugar
|   `-RecordType 'struct _opaque_pthread_mutexattr_t'
|     `-CXXRecord '_opaque_pthread_mutexattr_t'
|-TypedefDecl __darwin_pthread_once_t 'struct _opaque_pthread_once_t':'struct _opaque_pthread_once_t'
| `-ElaboratedType 'struct _opaque_pthread_once_t' sugar
|   `-RecordType 'struct _opaque_pthread_once_t'
|     `-CXXRecord '_opaque_pthread_once_t'
|-TypedefDecl __darwin_pthread_rwlock_t 'struct _opaque_pthread_rwlock_t':'struct _opaque_pthread_rwlock_t'
| `-ElaboratedType 'struct _opaque_pthread_rwlock_t' sugar
|   `-RecordType 'struct _opaque_pthread_rwlock_t'
|     `-CXXRecord '_opaque_pthread_rwlock_t'
|-TypedefDecl __darwin_pthread_rwlockattr_t 'struct _opaque_pthread_rwlockattr_t':'struct _opaque_pthread_rwlockattr_t'
| `-ElaboratedType 'struct _opaque_pthread_rwlockattr_t' sugar
|   `-RecordType 'struct _opaque_pthread_rwlockattr_t'
|     `-CXXRecord '_opaque_pthread_rwlockattr_t'
|-TypedefDecl __darwin_pthread_t 'struct _opaque_pthread_t *'
| `-PointerType 'struct _opaque_pthread_t *'
|   `-ElaboratedType 'struct _opaque_pthread_t' sugar
|     `-RecordType 'struct _opaque_pthread_t'
|       `-CXXRecord '_opaque_pthread_t'
|-TypedefDecl </usr/include/_types.h:39:1, > __darwin_nl_item 'int'
| `-BuiltinType 'int'
|-TypedefDecl __darwin_wctrans_t 'int'
| `-BuiltinType 'int'
|-TypedefDecl __darwin_wctype_t '__uint32_t':'unsigned int'
| `-TypedefType '__uint32_t' sugar
|   |-Typedef '__uint32_t'
|   `-BuiltinType 'unsigned int'
|-LinkageSpecDecl </usr/include/sys/cdefs.h:71:23, > C
| |-FunctionDecl </usr/include/string.h:70:1, > used memchr 'void *(const void *, int, size_t)'
| | |-ParmVarDecl __s 'const void *'
| | |-ParmVarDecl __c 'int'
| | `-ParmVarDecl __n 'size_t':'unsigned long'
| |-FunctionDecl memcmp 'int (const void *, const void *, size_t)'
| | |-ParmVarDecl __s1 'const void *'
| | |-ParmVarDecl __s2 'const void *'
| | `-ParmVarDecl __n 'size_t':'unsigned long'
| |-FunctionDecl used memcpy 'void *(void *, const void *, size_t)'
| | |-ParmVarDecl __dst 'void *'
| | |-ParmVarDecl __src 'const void *'
| | `-ParmVarDecl __n 'size_t':'unsigned long'
| |-FunctionDecl memmove 'void *(void *, const void *, size_t)'
| | |-ParmVarDecl __dst 'void *'
| | |-ParmVarDecl __src 'const void *'
| | `-ParmVarDecl __len 'size_t':'unsigned long'
| |-FunctionDecl memset 'void *(void *, int, size_t)'
| | |-ParmVarDecl __b 'void *'
| | |-ParmVarDecl __c 'int'
| | `-ParmVarDecl __len 'size_t':'unsigned long'
| |-FunctionDecl strcat 'char *(char *, const char *)'
| | |-ParmVarDecl __s1 'char *'
| | `-ParmVarDecl __s2 'const char *'
| |-FunctionDecl used strchr 'char *(const char *, int)'
| | |-ParmVarDecl __s 'const char *'
| | `-ParmVarDecl __c 'int'
| |-FunctionDecl strcmp 'int (const char *, const char *)'
| | |-ParmVarDecl __s1 'const char *'
| | `-ParmVarDecl __s2 'const char *'
| |-FunctionDecl strcoll 'int (const char *, const char *)'
| | |-ParmVarDecl __s1 'const char *'
| | `-ParmVarDecl __s2 'const char *'
| |-FunctionDecl strcpy 'char *(char *, const char *)'
| | |-ParmVarDecl __dst 'char *'
| | `-ParmVarDecl __src 'const char *'
| |-FunctionDecl strcspn 'size_t (const char *, const char *)'
| | |-ParmVarDecl __s 'const char *'
| | `-ParmVarDecl __charset 'const char *'
| |-FunctionDecl /usr/include/string.h:81:7 strerror 'char *(int)'
| | |-ParmVarDecl __errnum 'int'
| | `-AsmLabelAttr </usr/include/sys/cdefs.h:569:36> "_strerror"
| |-FunctionDecl </usr/include/string.h:82:1, > strlen 'size_t (const char *)'
| | `-ParmVarDecl __s 'const char *'
| |-FunctionDecl strncat 'char *(char *, const char *, size_t)'
| | |-ParmVarDecl __s1 'char *'
| | |-ParmVarDecl __s2 'const char *'
| | `-ParmVarDecl __n 'size_t':'unsigned long'
| |-FunctionDecl strncmp 'int (const char *, const char *, size_t)'
| | |-ParmVarDecl __s1 'const char *'
| | |-ParmVarDecl __s2 'const char *'
| | `-ParmVarDecl __n 'size_t':'unsigned long'
| |-FunctionDecl strncpy 'char *(char *, const char *, size_t)'
| | |-ParmVarDecl __dst 'char *'
| | |-ParmVarDecl __src 'const char *'
| | `-ParmVarDecl __n 'size_t':'unsigned long'
| |-FunctionDecl used strpbrk 'char *(const char *, const char *)'
| | |-ParmVarDecl __s 'const char *'
| | `-ParmVarDecl __charset 'const char *'
| |-FunctionDecl used strrchr 'char *(const char *, int)'
| | |-ParmVarDecl __s 'const char *'
| | `-ParmVarDecl __c 'int'
| |-FunctionDecl strspn 'size_t (const char *, const char *)'
| | |-ParmVarDecl __s 'const char *'
| | `-ParmVarDecl __charset 'const char *'
| |-FunctionDecl used strstr 'char *(const char *, const char *)'
| | |-ParmVarDecl __big 'const char *'
| | `-ParmVarDecl __little 'const char *'
| |-FunctionDecl strtok 'char *(char *, const char *)'
| | |-ParmVarDecl __str 'char *'
| | `-ParmVarDecl __sep 'const char *'
| `-FunctionDecl strxfrm 'size_t (char *, const char *, size_t)'
|   |-ParmVarDecl __s1 'char *'
|   |-ParmVarDecl __s2 'const char *'
|   `-ParmVarDecl __n 'size_t':'unsigned long'
|-LinkageSpecDecl </usr/include/sys/cdefs.h:71:23, > C
| `-FunctionDecl </usr/include/string.h:104:1, > strtok_r 'char *(char *, const char *, char **)'
|   |-ParmVarDecl __str 'char *'
|   |-ParmVarDecl __sep 'const char *'
|   `-ParmVarDecl __lasts 'char **'
|-LinkageSpecDecl </usr/include/sys/cdefs.h:71:23, > C
| |-FunctionDecl </usr/include/string.h:116:1, > strerror_r 'int (int, char *, size_t)'
| | |-ParmVarDecl __errnum 'int'
| | |-ParmVarDecl __strerrbuf 'char *'
| | `-ParmVarDecl __buflen 'size_t':'unsigned long'
| |-FunctionDecl strdup 'char *(const char *)'
| | `-ParmVarDecl __s1 'const char *'
| `-FunctionDecl memccpy 'void *(void *, const void *, int, size_t)'
|   |-ParmVarDecl __dst 'void *'
|   |-ParmVarDecl __src 'const void *'
|   |-ParmVarDecl __c 'int'
|   `-ParmVarDecl __n 'size_t':'unsigned long'
|-LinkageSpecDecl </usr/include/sys/cdefs.h:71:23, > C
| |-FunctionDecl </usr/include/string.h:130:1, > stpcpy 'char *(char *, const char *)'
| | |-ParmVarDecl __dst 'char *'
| | `-ParmVarDecl __src 'const char *'
| |-FunctionDecl /usr/include/string.h:131:10 stpncpy 'char *(char *, const char *, size_t)'
| | |-ParmVarDecl __dst 'char *'
| | |-ParmVarDecl __src 'const char *'
| | |-ParmVarDecl __n 'size_t':'unsigned long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21454:87, > macos 10.7 0 0 "" ""
| |-FunctionDecl </usr/include/string.h:132:1, /usr/include/AvailabilityInternal.h:21454:124> /usr/include/string.h:132:7 strndup 'char *(const char *, size_t)'
| | |-ParmVarDecl __s1 'const char *'
| | |-ParmVarDecl __n 'size_t':'unsigned long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21454:87, > macos 10.7 0 0 "" ""
| |-FunctionDecl </usr/include/string.h:133:1, /usr/include/AvailabilityInternal.h:21454:124> /usr/include/string.h:133:10 strnlen 'size_t (const char *, size_t)'
| | |-ParmVarDecl __s1 'const char *'
| | |-ParmVarDecl __n 'size_t':'unsigned long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21454:87, > macos 10.7 0 0 "" ""
| `-FunctionDecl </usr/include/string.h:134:1, > strsignal 'char *(int)'
|   `-ParmVarDecl __sig 'int'
|-TypedefDecl </usr/include/sys/_types/_ssize_t.h:30:1, > referenced ssize_t '__darwin_ssize_t':'long'
| `-TypedefType '__darwin_ssize_t' sugar
|   |-Typedef '__darwin_ssize_t'
|   `-BuiltinType 'long'
|-LinkageSpecDecl </usr/include/sys/cdefs.h:71:23, > C
| |-FunctionDecl </usr/include/string.h:155:1, /usr/include/AvailabilityInternal.h:21454:124> /usr/include/string.h:155:7 memmem 'void *(const void *, size_t, const void *, size_t)'
| | |-ParmVarDecl __big 'const void *'
| | |-ParmVarDecl __big_len 'size_t':'unsigned long'
| | |-ParmVarDecl __little 'const void *'
| | |-ParmVarDecl __little_len 'size_t':'unsigned long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21454:87, > macos 10.7 0 0 "" ""
| |-FunctionDecl </usr/include/string.h:156:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/string.h:156:10 memset_pattern4 'void (void *, const void *, size_t)'
| | |-ParmVarDecl __b 'void *'
| | |-ParmVarDecl __pattern4 'const void *'
| | |-ParmVarDecl __len 'size_t':'unsigned long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21262:87, > macos 10.5 0 0 "" ""
| |-FunctionDecl </usr/include/string.h:157:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/string.h:157:10 memset_pattern8 'void (void *, const void *, size_t)'
| | |-ParmVarDecl __b 'void *'
| | |-ParmVarDecl __pattern8 'const void *'
| | |-ParmVarDecl __len 'size_t':'unsigned long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21262:87, > macos 10.5 0 0 "" ""
| |-FunctionDecl </usr/include/string.h:158:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/string.h:158:10 memset_pattern16 'void (void *, const void *, size_t)'
| | |-ParmVarDecl __b 'void *'
| | |-ParmVarDecl __pattern16 'const void *'
| | |-ParmVarDecl __len 'size_t':'unsigned long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21262:87, > macos 10.5 0 0 "" ""
| |-FunctionDecl </usr/include/string.h:160:1, > strcasestr 'char *(const char *, const char *)'
| | |-ParmVarDecl __big 'const char *'
| | `-ParmVarDecl __little 'const char *'
| |-FunctionDecl strnstr 'char *(const char *, const char *, size_t)'
| | |-ParmVarDecl __big 'const char *'
| | |-ParmVarDecl __little 'const char *'
| | `-ParmVarDecl __len 'size_t':'unsigned long'
| |-FunctionDecl strlcat 'size_t (char *, const char *, size_t)'
| | |-ParmVarDecl __dst 'char *'
| | |-ParmVarDecl __source 'const char *'
| | `-ParmVarDecl __size 'size_t':'unsigned long'
| |-FunctionDecl strlcpy 'size_t (char *, const char *, size_t)'
| | |-ParmVarDecl __dst 'char *'
| | |-ParmVarDecl __source 'const char *'
| | `-ParmVarDecl __size 'size_t':'unsigned long'
| |-FunctionDecl strmode 'void (int, char *)'
| | |-ParmVarDecl __mode 'int'
| | `-ParmVarDecl __bp 'char *'
| |-FunctionDecl strsep 'char *(char **, const char *)'
| | |-ParmVarDecl __stringp 'char **'
| | `-ParmVarDecl __delim 'const char *'
| |-FunctionDecl swab 'void (const void *, void *, ssize_t)'
| | |-ParmVarDecl 'const void *'
| | |-ParmVarDecl 'void *'
| | `-ParmVarDecl 'ssize_t':'long'
| `-FunctionDecl </usr/include/Availability.h:215:66, /usr/include/string.h:174:69> timingsafe_bcmp 'int (const void *, const void *, size_t)'
|   |-ParmVarDecl __b1 'const void *'
|   |-ParmVarDecl __b2 'const void *'
|   |-ParmVarDecl __len 'size_t':'unsigned long'
|   |-AvailabilityAttr </usr/include/Availability.h:215:81, > watchos 3.1 0 0 "" ""
|   |-AvailabilityAttr tvos 10.0.1 0 0 "" ""
|   |-AvailabilityAttr ios 10.1 0 0 "" ""
|   `-AvailabilityAttr macos 10.12.1 0 0 "" ""
|-LinkageSpecDecl </usr/include/sys/cdefs.h:71:23, > C
| |-FunctionDecl </usr/include/strings.h:70:1, > bcmp 'int (const void *, const void *, size_t)'
| | |-ParmVarDecl 'const void *'
| | |-ParmVarDecl 'const void *'
| | `-ParmVarDecl 'size_t':'unsigned long'
| |-FunctionDecl bcopy 'void (const void *, void *, size_t)'
| | |-ParmVarDecl 'const void *'
| | |-ParmVarDecl 'void *'
| | `-ParmVarDecl 'size_t':'unsigned long'
| |-FunctionDecl bzero 'void (void *, size_t)'
| | |-ParmVarDecl 'void *'
| | `-ParmVarDecl 'size_t':'unsigned long'
| |-FunctionDecl index 'char *(const char *, int)'
| | |-ParmVarDecl 'const char *'
| | `-ParmVarDecl 'int'
| |-FunctionDecl rindex 'char *(const char *, int)'
| | |-ParmVarDecl 'const char *'
| | `-ParmVarDecl 'int'
| |-FunctionDecl ffs 'int (int)'
| | `-ParmVarDecl 'int'
| |-FunctionDecl strcasecmp 'int (const char *, const char *)'
| | |-ParmVarDecl 'const char *'
| | `-ParmVarDecl 'const char *'
| `-FunctionDecl strncasecmp 'int (const char *, const char *, size_t)'
|   |-ParmVarDecl 'const char *'
|   |-ParmVarDecl 'const char *'
|   `-ParmVarDecl 'size_t':'unsigned long'
|-LinkageSpecDecl </usr/include/sys/cdefs.h:71:23, > C
| |-FunctionDecl </usr/include/strings.h:85:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/strings.h:85:6 ffsl 'int (long)'
| | |-ParmVarDecl 'long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21262:87, > macos 10.5 0 0 "" ""
| |-FunctionDecl </usr/include/strings.h:86:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/strings.h:86:6 ffsll 'int (long long)'
| | |-ParmVarDecl 'long long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21622:87, > macos 10.9 0 0 "" ""
| |-FunctionDecl </usr/include/strings.h:87:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/strings.h:87:6 fls 'int (int)'
| | |-ParmVarDecl 'int'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21262:87, > macos 10.5 0 0 "" ""
| |-FunctionDecl </usr/include/strings.h:88:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/strings.h:88:6 flsl 'int (long)'
| | |-ParmVarDecl 'long'
| | `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21262:87, > macos 10.5 0 0 "" ""
| `-FunctionDecl </usr/include/strings.h:89:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/strings.h:89:6 flsll 'int (long long)'
|   |-ParmVarDecl 'long long'
|   `-AvailabilityAttr </usr/include/AvailabilityInternal.h:21622:87, > macos 10.9 0 0 "" ""
|-LinkageSpecDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:72:1, > C++
| |-FunctionDecl used __libcpp_strchr 'char *(const char *, int)' inline
| | |-ParmVarDecl used __s 'const char *'
| | |-ParmVarDecl used __c 'int'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CStyleCastExpr 'char *' <NoOp>
| | |     `-CallExpr 'char *'
| | |       |-ImplicitCastExpr 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'char *(const char *, int)' lvalue Function 0x7fe028952eb8 'strchr' 'char *(const char *, int)'
| | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02895c328 '__s' 'const char *'
| | |       `-ImplicitCastExpr 'int' <LValueToRValue>
| | |         `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02895c3a0 '__c' 'int'
| | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:75:1, > strchr 'const char *(const char *, int)' inline
| | |-ParmVarDecl used __s 'const char *'
| | |-ParmVarDecl used __c 'int'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-ImplicitCastExpr 'const char *' <NoOp>
| | |     `-CallExpr 'char *'
| | |       |-ImplicitCastExpr 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'char *(const char *, int)' lvalue Function 0x7fe02895ee38 '__libcpp_strchr' 'char *(const char *, int)'
| | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02895f1b8 '__s' 'const char *'
| | |       `-ImplicitCastExpr 'int' <LValueToRValue>
| | |         `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02895f230 '__c' 'int'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:77:1, > strchr 'char *(char *, int)' inline
| | |-ParmVarDecl used __s 'char *'
| | |-ParmVarDecl used __c 'int'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CallExpr 'char *'
| | |     |-ImplicitCastExpr 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 'char *(const char *, int)' lvalue Function 0x7fe02895ee38 '__libcpp_strchr' 'char *(const char *, int)'
| | |     |-ImplicitCastExpr 'const char *' <NoOp>
| | |     | `-ImplicitCastExpr 'char *' <LValueToRValue>
| | |     |   `-DeclRefExpr 'char *' lvalue ParmVar 0x7fe02895f670 '__s' 'char *'
| | |     `-ImplicitCastExpr 'int' <LValueToRValue>
| | |       `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02895f6e8 '__c' 'int'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:80:1, > used __libcpp_strpbrk 'char *(const char *, const char *)' inline
| | |-ParmVarDecl used __s1 'const char *'
| | |-ParmVarDecl used __s2 'const char *'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CStyleCastExpr 'char *' <NoOp>
| | |     `-CallExpr 'char *'
| | |       |-ImplicitCastExpr 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'char *(const char *, const char *)' lvalue Function 0x7fe028954548 'strpbrk' 'char *(const char *, const char *)'
| | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02895faf0 '__s1' 'const char *'
| | |       `-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02895fb68 '__s2' 'const char *'
| | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:82:1, > strpbrk 'const char *(const char *, const char *)' inline
| | |-ParmVarDecl used __s1 'const char *'
| | |-ParmVarDecl used __s2 'const char *'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-ImplicitCastExpr 'const char *' <NoOp>
| | |     `-CallExpr 'char *'
| | |       |-ImplicitCastExpr 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'char *(const char *, const char *)' lvalue Function 0x7fe02895fc00 '__libcpp_strpbrk' 'char *(const char *, const char *)'
| | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02895ff78 '__s1' 'const char *'
| | |       `-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02895fff0 '__s2' 'const char *'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:84:1, > strpbrk 'char *(char *, const char *)' inline
| | |-ParmVarDecl used __s1 'char *'
| | |-ParmVarDecl used __s2 'const char *'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CallExpr 'char *'
| | |     |-ImplicitCastExpr 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 'char *(const char *, const char *)' lvalue Function 0x7fe02895fc00 '__libcpp_strpbrk' 'char *(const char *, const char *)'
| | |     |-ImplicitCastExpr 'const char *' <NoOp>
| | |     | `-ImplicitCastExpr 'char *' <LValueToRValue>
| | |     |   `-DeclRefExpr 'char *' lvalue ParmVar 0x7fe028960430 '__s1' 'char *'
| | |     `-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe0289604a8 '__s2' 'const char *'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:87:1, > used __libcpp_strrchr 'char *(const char *, int)' inline
| | |-ParmVarDecl used __s 'const char *'
| | |-ParmVarDecl used __c 'int'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CStyleCastExpr 'char *' <NoOp>
| | |     `-CallExpr 'char *'
| | |       |-ImplicitCastExpr 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'char *(const char *, int)' lvalue Function 0x7fe028954718 'strrchr' 'char *(const char *, int)'
| | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028960868 '__s' 'const char *'
| | |       `-ImplicitCastExpr 'int' <LValueToRValue>
| | |         `-DeclRefExpr 'int' lvalue ParmVar 0x7fe0289608e0 '__c' 'int'
| | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:89:1, > strrchr 'const char *(const char *, int)' inline
| | |-ParmVarDecl used __s 'const char *'
| | |-ParmVarDecl used __c 'int'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-ImplicitCastExpr 'const char *' <NoOp>
| | |     `-CallExpr 'char *'
| | |       |-ImplicitCastExpr 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'char *(const char *, int)' lvalue Function 0x7fe028960978 '__libcpp_strrchr' 'char *(const char *, int)'
| | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028960cc8 '__s' 'const char *'
| | |       `-ImplicitCastExpr 'int' <LValueToRValue>
| | |         `-DeclRefExpr 'int' lvalue ParmVar 0x7fe028960d40 '__c' 'int'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:91:1, > strrchr 'char *(char *, int)' inline
| | |-ParmVarDecl used __s 'char *'
| | |-ParmVarDecl used __c 'int'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CallExpr 'char *'
| | |     |-ImplicitCastExpr 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 'char *(const char *, int)' lvalue Function 0x7fe028960978 '__libcpp_strrchr' 'char *(const char *, int)'
| | |     |-ImplicitCastExpr 'const char *' <NoOp>
| | |     | `-ImplicitCastExpr 'char *' <LValueToRValue>
| | |     |   `-DeclRefExpr 'char *' lvalue ParmVar 0x7fe028961168 '__s' 'char *'
| | |     `-ImplicitCastExpr 'int' <LValueToRValue>
| | |       `-DeclRefExpr 'int' lvalue ParmVar 0x7fe0289611e0 '__c' 'int'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:94:1, > used __libcpp_memchr 'void *(const void *, int, size_t)' inline
| | |-ParmVarDecl used __s 'const void *'
| | |-ParmVarDecl used __c 'int'
| | |-ParmVarDecl used __n 'size_t':'unsigned long'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CStyleCastExpr 'void *' <NoOp>
| | |     `-CallExpr 'void *'
| | |       |-ImplicitCastExpr 'void *(*)(const void *, int, size_t)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'void *(const void *, int, size_t)' lvalue Function 0x7fe028900358 'memchr' 'void *(const void *, int, size_t)'
| | |       |-ImplicitCastExpr 'const void *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const void *' lvalue ParmVar 0x7fe0289615a0 '__s' 'const void *'
| | |       |-ImplicitCastExpr 'int' <LValueToRValue>
| | |       | `-DeclRefExpr 'int' lvalue ParmVar 0x7fe028961618 '__c' 'int'
| | |       `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
| | |         `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028961688 '__n' 'size_t':'unsigned long'
| | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:96:1, > memchr 'const void *(const void *, int, size_t)' inline
| | |-ParmVarDecl used __s 'const void *'
| | |-ParmVarDecl used __c 'int'
| | |-ParmVarDecl used __n 'size_t':'unsigned long'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-ImplicitCastExpr 'const void *' <NoOp>
| | |     `-CallExpr 'void *'
| | |       |-ImplicitCastExpr 'void *(*)(const void *, int, size_t)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'void *(const void *, int, size_t)' lvalue Function 0x7fe028961728 '__libcpp_memchr' 'void *(const void *, int, size_t)'
| | |       |-ImplicitCastExpr 'const void *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const void *' lvalue ParmVar 0x7fe028961b28 '__s' 'const void *'
| | |       |-ImplicitCastExpr 'int' <LValueToRValue>
| | |       | `-DeclRefExpr 'int' lvalue ParmVar 0x7fe028961ba0 '__c' 'int'
| | |       `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
| | |         `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028961c10 '__n' 'size_t':'unsigned long'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:98:1, > memchr 'void *(void *, int, size_t)' inline
| | |-ParmVarDecl used __s 'void *'
| | |-ParmVarDecl used __c 'int'
| | |-ParmVarDecl used __n 'size_t':'unsigned long'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CallExpr 'void *'
| | |     |-ImplicitCastExpr 'void *(*)(const void *, int, size_t)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 'void *(const void *, int, size_t)' lvalue Function 0x7fe028961728 '__libcpp_memchr' 'void *(const void *, int, size_t)'
| | |     |-ImplicitCastExpr 'const void *' <NoOp>
| | |     | `-ImplicitCastExpr 'void *' <LValueToRValue>
| | |     |   `-DeclRefExpr 'void *' lvalue ParmVar 0x7fe028962100 '__s' 'void *'
| | |     |-ImplicitCastExpr 'int' <LValueToRValue>
| | |     | `-DeclRefExpr 'int' lvalue ParmVar 0x7fe028962178 '__c' 'int'
| | |     `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe0289621e8 '__n' 'size_t':'unsigned long'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:101:1, > used __libcpp_strstr 'char *(const char *, const char *)' inline
| | |-ParmVarDecl used __s1 'const char *'
| | |-ParmVarDecl used __s2 'const char *'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-CStyleCastExpr 'char *' <NoOp>
| | |     `-CallExpr 'char *'
| | |       |-ImplicitCastExpr 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'char *(const char *, const char *)' lvalue Function 0x7fe0289554b0 'strstr' 'char *(const char *, const char *)'
| | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028962600 '__s1' 'const char *'
| | |       `-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028962678 '__s2' 'const char *'
| | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr Hidden
| |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:103:1, > strstr 'const char *(const char *, const char *)' inline
| | |-ParmVarDecl used __s1 'const char *'
| | |-ParmVarDecl used __s2 'const char *'
| | |-CompoundStmt
| | | `-ReturnStmt
| | |   `-ImplicitCastExpr 'const char *' <NoOp>
| | |     `-CallExpr 'char *'
| | |       |-ImplicitCastExpr 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 'char *(const char *, const char *)' lvalue Function 0x7fe028962710 '__libcpp_strstr' 'char *(const char *, const char *)'
| | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028962a60 '__s1' 'const char *'
| | |       `-ImplicitCastExpr 'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028962ad8 '__s2' 'const char *'
| | |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
| | | `-CXXBoolLiteralExpr '_Bool' true
| | |-AlwaysInlineAttr always_inline
| | `-VisibilityAttr Hidden
| `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:105:1, > strstr 'char *(char *, const char *)' inline
|   |-ParmVarDecl used __s1 'char *'
|   |-ParmVarDecl used __s2 'const char *'
|   |-CompoundStmt
|   | `-ReturnStmt
|   |   `-CallExpr 'char *'
|   |     |-ImplicitCastExpr 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 'char *(const char *, const char *)' lvalue Function 0x7fe028962710 '__libcpp_strstr' 'char *(const char *, const char *)'
|   |     |-ImplicitCastExpr 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 'char *' lvalue ParmVar 0x7fe028962ed8 '__s1' 'char *'
|   |     `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028962f50 '__s2' 'const char *'
|   |-EnableIfAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, > "<no message provided>"
|   | `-CXXBoolLiteralExpr '_Bool' true
|   |-AlwaysInlineAttr always_inline
|   `-VisibilityAttr Hidden
|-NamespaceDecl prev 0x7fe0288e38c8 std
| |-original Namespace 0x7fe027866458 'std'
| `-NamespaceDecl prev 0x7fe0288aada0 <scratch space>:406:1 __1 inline
|   |-original Namespace 0x7fe0278664c0 '__1'
|   |-UsingDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstring:69:1, > ::size_t
|   |-UsingShadowDecl prev 0x7fe027866970 implicit Typedef 0x7fe0278665b0 'size_t'
|   | `-TypedefType 'size_t' sugar
|   |   |-Typedef 'size_t'
|   |   `-BuiltinType 'unsigned long'
|   |-UsingDecl ::memcpy
|   |-UsingShadowDecl implicit Function 0x7fe028900938 'memcpy' 'void *(void *, const void *, size_t)'
|   |-UsingDecl ::memmove
|   |-UsingShadowDecl implicit Function 0x7fe028900b88 'memmove' 'void *(void *, const void *, size_t)'
|   |-UsingDecl ::strcpy
|   |-UsingShadowDecl implicit Function 0x7fe028953468 'strcpy' 'char *(char *, const char *)'
|   |-UsingDecl ::strncpy
|   |-UsingShadowDecl implicit Function 0x7fe028954328 'strncpy' 'char *(char *, const char *, size_t)'
|   |-UsingDecl ::strcat
|   |-UsingShadowDecl implicit Function 0x7fe028952ca8 'strcat' 'char *(char *, const char *)'
|   |-UsingDecl ::strncat
|   |-UsingShadowDecl implicit Function 0x7fe028953de8 'strncat' 'char *(char *, const char *, size_t)'
|   |-UsingDecl ::memcmp
|   |-UsingShadowDecl implicit Function 0x7fe028900648 'memcmp' 'int (const void *, const void *, size_t)'
|   |-UsingDecl ::strcmp
|   |-UsingShadowDecl implicit Function 0x7fe0289530c8 'strcmp' 'int (const char *, const char *)'
|   |-UsingDecl ::strncmp
|   |-UsingShadowDecl implicit Function 0x7fe0289540d8 'strncmp' 'int (const char *, const char *, size_t)'
|   |-UsingDecl ::strcoll
|   |-UsingShadowDecl implicit Function 0x7fe028953298 'strcoll' 'int (const char *, const char *)'
|   |-UsingDecl ::strxfrm
|   |-UsingShadowDecl implicit Function 0x7fe028955960 'strxfrm' 'size_t (char *, const char *, size_t)'
|   |-UsingDecl ::memchr
|   |-UsingShadowDecl implicit Function 0x7fe028900358 'memchr' 'void *(const void *, int, size_t)'
|   |-UsingShadowDecl implicit Function 0x7fe028961d48 'memchr' 'const void *(const void *, int, size_t)'
|   |-UsingShadowDecl implicit Function 0x7fe028962288 'memchr' 'void *(void *, int, size_t)'
|   |-UsingDecl ::strchr
|   |-UsingShadowDecl implicit Function 0x7fe028952eb8 'strchr' 'char *(const char *, int)'
|   |-UsingShadowDecl implicit Function 0x7fe02895f308 'strchr' 'const char *(const char *, int)'
|   |-UsingShadowDecl implicit Function 0x7fe02895f7c8 'strchr' 'char *(char *, int)'
|   |-UsingDecl ::strcspn
|   |-UsingShadowDecl implicit Function 0x7fe0289536b0 'strcspn' 'size_t (const char *, const char *)'
|   |-UsingDecl ::strpbrk
|   |-UsingShadowDecl implicit Function 0x7fe028954548 'strpbrk' 'char *(const char *, const char *)'
|   |-UsingShadowDecl implicit Function 0x7fe0289600c8 'strpbrk' 'const char *(const char *, const char *)'
|   |-UsingShadowDecl implicit Function 0x7fe028960540 'strpbrk' 'char *(char *, const char *)'
|   |-UsingDecl ::strrchr
|   |-UsingShadowDecl implicit Function 0x7fe028954718 'strrchr' 'char *(const char *, int)'
|   |-UsingShadowDecl implicit Function 0x7fe028960e00 'strrchr' 'const char *(const char *, int)'
|   |-UsingShadowDecl implicit Function 0x7fe028961278 'strrchr' 'char *(char *, int)'
|   |-UsingDecl ::strspn
|   |-UsingShadowDecl implicit Function 0x7fe0289548e0 'strspn' 'size_t (const char *, const char *)'
|   |-UsingDecl ::strstr
|   |-UsingShadowDecl implicit Function 0x7fe0289554b0 'strstr' 'char *(const char *, const char *)'
|   |-UsingShadowDecl implicit Function 0x7fe028962b70 'strstr' 'const char *(const char *, const char *)'
|   |-UsingShadowDecl implicit Function 0x7fe028962fe8 'strstr' 'char *(char *, const char *)'
|   |-UsingDecl ::strtok
|   |-UsingShadowDecl implicit Function 0x7fe028955680 'strtok' 'char *(char *, const char *)'
|   |-UsingDecl ::memset
|   |-UsingShadowDecl implicit Function 0x7fe028952a88 'memset' 'void *(void *, int, size_t)'
|   |-UsingDecl ::strerror
|   |-UsingShadowDecl implicit Function 0x7fe0289538f8 'strerror' 'char *(int)'
|   |-UsingDecl ::strlen
|   `-UsingShadowDecl implicit Function 0x7fe028953b10 'strlen' 'size_t (const char *)'
|-TypedefDecl </usr/include/sys/_types/_int8_t.h:30:1, > referenced int8_t 'signed char'
| `-BuiltinType 'signed char'
|-TypedefDecl </usr/include/sys/_types/_int16_t.h:30:1, > referenced int16_t 'short'
| `-BuiltinType 'short'
|-TypedefDecl </usr/include/sys/_types/_int32_t.h:30:1, > referenced int32_t 'int'
| `-BuiltinType 'int'
|-TypedefDecl </usr/include/sys/_types/_int64_t.h:30:1, > referenced int64_t 'long long'
| `-BuiltinType 'long long'
|-TypedefDecl </usr/include/_types/_uint8_t.h:31:1, > referenced uint8_t 'unsigned char'
| `-BuiltinType 'unsigned char'
|-TypedefDecl </usr/include/_types/_uint16_t.h:31:1, > referenced uint16_t 'unsigned short'
| `-BuiltinType 'unsigned short'
|-TypedefDecl </usr/include/_types/_uint32_t.h:31:1, > referenced uint32_t 'unsigned int'
| `-BuiltinType 'unsigned int'
|-TypedefDecl </usr/include/_types/_uint64_t.h:31:1, > referenced uint64_t 'unsigned long long'
| `-BuiltinType 'unsigned long long'
|-TypedefDecl </usr/include/stdint.h:29:1, > int_least8_t 'int8_t':'signed char'
| `-TypedefType 'int8_t' sugar
|   |-Typedef 'int8_t'
|   `-BuiltinType 'signed char'
|-TypedefDecl int_least16_t 'int16_t':'short'
| `-TypedefType 'int16_t' sugar
|   |-Typedef 'int16_t'
|   `-BuiltinType 'short'
|-TypedefDecl int_least32_t 'int32_t':'int'
| `-TypedefType 'int32_t' sugar
|   |-Typedef 'int32_t'
|   `-BuiltinType 'int'
|-TypedefDecl int_least64_t 'int64_t':'long long'
| `-TypedefType 'int64_t' sugar
|   |-Typedef 'int64_t'
|   `-BuiltinType 'long long'
|-TypedefDecl uint_least8_t 'uint8_t':'unsigned char'
| `-TypedefType 'uint8_t' sugar
|   |-Typedef 'uint8_t'
|   `-BuiltinType 'unsigned char'
|-TypedefDecl uint_least16_t 'uint16_t':'unsigned short'
| `-TypedefType 'uint16_t' sugar
|   |-Typedef 'uint16_t'
|   `-BuiltinType 'unsigned short'
|-TypedefDecl uint_least32_t 'uint32_t':'unsigned int'
| `-TypedefType 'uint32_t' sugar
|   |-Typedef 'uint32_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl uint_least64_t 'uint64_t':'unsigned long long'
| `-TypedefType 'uint64_t' sugar
|   |-Typedef 'uint64_t'
|   `-BuiltinType 'unsigned long long'
|-TypedefDecl int_fast8_t 'int8_t':'signed char'
| `-TypedefType 'int8_t' sugar
|   |-Typedef 'int8_t'
|   `-BuiltinType 'signed char'
|-TypedefDecl int_fast16_t 'int16_t':'short'
| `-TypedefType 'int16_t' sugar
|   |-Typedef 'int16_t'
|   `-BuiltinType 'short'
|-TypedefDecl int_fast32_t 'int32_t':'int'
| `-TypedefType 'int32_t' sugar
|   |-Typedef 'int32_t'
|   `-BuiltinType 'int'
|-TypedefDecl int_fast64_t 'int64_t':'long long'
| `-TypedefType 'int64_t' sugar
|   |-Typedef 'int64_t'
|   `-BuiltinType 'long long'
|-TypedefDecl uint_fast8_t 'uint8_t':'unsigned char'
| `-TypedefType 'uint8_t' sugar
|   |-Typedef 'uint8_t'
|   `-BuiltinType 'unsigned char'
|-TypedefDecl uint_fast16_t 'uint16_t':'unsigned short'
| `-TypedefType 'uint16_t' sugar
|   |-Typedef 'uint16_t'
|   `-BuiltinType 'unsigned short'
|-TypedefDecl uint_fast32_t 'uint32_t':'unsigned int'
| `-TypedefType 'uint32_t' sugar
|   |-Typedef 'uint32_t'
|   `-BuiltinType 'unsigned int'
|-TypedefDecl uint_fast64_t 'uint64_t':'unsigned long long'
| `-TypedefType 'uint64_t' sugar
|   |-Typedef 'uint64_t'
|   `-BuiltinType 'unsigned long long'
|-TypedefDecl </usr/include/sys/_types/_intptr_t.h:30:1, > intptr_t '__darwin_intptr_t':'long'
| `-TypedefType '__darwin_intptr_t' sugar
|   |-Typedef '__darwin_intptr_t'
|   `-BuiltinType 'long'
|-TypedefDecl </usr/include/sys/_types/_uintptr_t.h:30:1, > uintptr_t 'unsigned long'
| `-BuiltinType 'unsigned long'
|-TypedefDecl </usr/include/_types/_intmax_t.h:32:1, > intmax_t 'long'
| `-BuiltinType 'long'
|-TypedefDecl </usr/include/_types/_uintmax_t.h:32:1, > uintmax_t 'unsigned long'
| `-BuiltinType 'unsigned long'
|-NamespaceDecl prev 0x7fe0289632c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, > std
| |-original Namespace 0x7fe027866458 'std'
| `-NamespaceDecl prev 0x7fe028963330 <scratch space>:408:1 __1 inline
|   |-original Namespace 0x7fe0278664c0 '__1'
|   |-UsingDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstdint:153:1, > ::int8_t
|   |-UsingShadowDecl implicit Typedef 0x7fe0289644e0 'int8_t'
|   | `-TypedefType 'int8_t' sugar
|   |   |-Typedef 'int8_t'
|   |   `-BuiltinType 'signed char'
|   |-UsingDecl ::int16_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964550 'int16_t'
|   | `-TypedefType 'int16_t' sugar
|   |   |-Typedef 'int16_t'
|   |   `-BuiltinType 'short'
|   |-UsingDecl ::int32_t
|   |-UsingShadowDecl implicit Typedef 0x7fe0289645c0 'int32_t'
|   | `-TypedefType 'int32_t' sugar
|   |   |-Typedef 'int32_t'
|   |   `-BuiltinType 'int'
|   |-UsingDecl ::int64_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964630 'int64_t'
|   | `-TypedefType 'int64_t' sugar
|   |   |-Typedef 'int64_t'
|   |   `-BuiltinType 'long long'
|   |-UsingDecl ::uint8_t
|   |-UsingShadowDecl implicit Typedef 0x7fe0289646a0 'uint8_t'
|   | `-TypedefType 'uint8_t' sugar
|   |   |-Typedef 'uint8_t'
|   |   `-BuiltinType 'unsigned char'
|   |-UsingDecl ::uint16_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964710 'uint16_t'
|   | `-TypedefType 'uint16_t' sugar
|   |   |-Typedef 'uint16_t'
|   |   `-BuiltinType 'unsigned short'
|   |-UsingDecl ::uint32_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964780 'uint32_t'
|   | `-TypedefType 'uint32_t' sugar
|   |   |-Typedef 'uint32_t'
|   |   `-BuiltinType 'unsigned int'
|   |-UsingDecl ::uint64_t
|   |-UsingShadowDecl implicit Typedef 0x7fe0289647f0 'uint64_t'
|   | `-TypedefType 'uint64_t' sugar
|   |   |-Typedef 'uint64_t'
|   |   `-BuiltinType 'unsigned long long'
|   |-UsingDecl ::int_least8_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964880 'int_least8_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::int_least16_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964910 'int_least16_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::int_least32_t
|   |-UsingShadowDecl implicit Typedef 0x7fe0289649a0 'int_least32_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::int_least64_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964a30 'int_least64_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uint_least8_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964ac0 'uint_least8_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uint_least16_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964b50 'uint_least16_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uint_least32_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964be0 'uint_least32_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uint_least64_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964c70 'uint_least64_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::int_fast8_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964cd8 'int_fast8_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::int_fast16_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964d40 'int_fast16_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::int_fast32_t
|   |-UsingShadowDecl implicit Typedef 0x7fe028964da8 'int_fast32_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::int_fast64_t
|   |-UsingShadowDecl implicit Typedef 0x7fe02887ee10 'int_fast64_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uint_fast8_t
|   |-UsingShadowDecl implicit Typedef 0x7fe02887ee78 'uint_fast8_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uint_fast16_t
|   |-UsingShadowDecl implicit Typedef 0x7fe02887eee0 'uint_fast16_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uint_fast32_t
|   |-UsingShadowDecl implicit Typedef 0x7fe02887ef48 'uint_fast32_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uint_fast64_t
|   |-UsingShadowDecl implicit Typedef 0x7fe02887efb0 'uint_fast64_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::intptr_t
|   |-UsingShadowDecl implicit Typedef 0x7fe02887f040 'intptr_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uintptr_t
|   |-UsingShadowDecl implicit Typedef 0x7fe02887f0b0 'uintptr_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::intmax_t
|   |-UsingShadowDecl implicit Typedef 0x7fe02887f120 'intmax_t'
|   | `-<<<NULL>>>
|   |-UsingDecl ::uintmax_t
|   `-UsingShadowDecl implicit Typedef 0x7fe02887f190 'uintmax_t'
|     `-<<<NULL>>>
|-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:54:1, > class __libcpp_debug_exception
| `-VisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:701:47, > Default
|-NamespaceDecl prev 0x7fe02887f1e8 std
| |-original Namespace 0x7fe027866458 'std'
| `-NamespaceDecl prev 0x7fe02887f250 <scratch space>:409:1 __1 inline
|   |-original Namespace 0x7fe0278664c0 '__1'
|   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:59:1, > referenced struct __libcpp_debug_info definition
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:59:1, > implicit referenced struct __libcpp_debug_info
|   | |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:62:75> constexpr __libcpp_debug_info 'void (void)'
|   | | |-CXXCtorInitializer Field 0x7fe028988000 '__file_' 'const char *'
|   | | | `-ImplicitCastExpr 'const char *' <NullToPointer>
|   | | |   `-CXXNullPtrLiteralExpr 'nullptr_t'
|   | | |-CXXCtorInitializer Field 0x7fe028988060 '__line_' 'int'
|   | | | `-UnaryOperator 'int' prefix '-'
|   | | |   `-IntegerLiteral 'int' 1
|   | | |-CXXCtorInitializer Field 0x7fe0289880c0 '__pred_' 'const char *'
|   | | | `-ImplicitCastExpr 'const char *' <NullToPointer>
|   | | |   `-CXXNullPtrLiteralExpr 'nullptr_t'
|   | | |-CXXCtorInitializer Field 0x7fe028988120 '__msg_' 'const char *'
|   | | | `-ImplicitCastExpr 'const char *' <NullToPointer>
|   | | |   `-CXXNullPtrLiteralExpr 'nullptr_t'
|   | | |-CompoundStmt
|   | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr Hidden
|   | |-CXXConstructorDecl constexpr __libcpp_debug_info 'void (const char *, int, const char *, const char *)'
|   | | |-ParmVarDecl used __f 'const char *'
|   | | |-ParmVarDecl used __l 'int'
|   | | |-ParmVarDecl used __p 'const char *'
|   | | |-ParmVarDecl used __m 'const char *'
|   | | |-CXXCtorInitializer Field 0x7fe028988000 '__file_' 'const char *'
|   | | | `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028880a50 '__f' 'const char *'
|   | | |-CXXCtorInitializer Field 0x7fe028988060 '__line_' 'int'
|   | | | `-ImplicitCastExpr 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 'int' lvalue ParmVar 0x7fe028880ac8 '__l' 'int'
|   | | |-CXXCtorInitializer Field 0x7fe0289880c0 '__pred_' 'const char *'
|   | | | `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028880b40 '__p' 'const char *'
|   | | |-CXXCtorInitializer Field 0x7fe028988120 '__msg_' 'const char *'
|   | | | `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028880bb8 '__m' 'const char *'
|   | | |-CompoundStmt
|   | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr Hidden
|   | |-FieldDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:66:3, > __file_ 'const char *'
|   | |-FieldDecl __line_ 'int'
|   | |-FieldDecl __pred_ 'const char *'
|   | `-FieldDecl __msg_ 'const char *'
|   |-TypedefDecl referenced __libcpp_debug_function_type 'void (*)(const struct std::__1::__libcpp_debug_info &)'
|   | `-PointerType 'void (*)(const struct std::__1::__libcpp_debug_info &)'
|   |   `-ParenType 'void (const struct std::__1::__libcpp_debug_info &)' sugar
|   |     `-FunctionProtoType 'void (const struct std::__1::__libcpp_debug_info &)' cdecl
|   |       |-BuiltinType 'void'
|   |       `-LValueReferenceType 'const struct std::__1::__libcpp_debug_info &'
|   |         `-QualType 'const struct std::__1::__libcpp_debug_info' const
|   |           `-RecordType 'struct std::__1::__libcpp_debug_info'
|   |             `-CXXRecord '__libcpp_debug_info'
|   |-VarDecl __libcpp_debug_function 'std::__1::__libcpp_debug_function_type':'void (*)(const struct std::__1::__libcpp_debug_info &)' extern
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:661:26, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:81:62> __libcpp_abort_debug_function 'void (const struct std::__1::__libcpp_debug_info &)'
|   | |-ParmVarDecl 'const struct std::__1::__libcpp_debug_info &'
|   | |-CXX11NoReturnAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:341:30>
|   | `-VisibilityAttr Default
|   |-FunctionDecl __libcpp_throw_debug_function 'void (const struct std::__1::__libcpp_debug_info &)'
|   | |-ParmVarDecl 'const struct std::__1::__libcpp_debug_info &'
|   | |-CXX11NoReturnAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:341:30>
|   | `-VisibilityAttr Default
|   `-FunctionDecl __libcpp_set_debug_function '_Bool (std::__1::__libcpp_debug_function_type)'
|     |-ParmVarDecl __func 'std::__1::__libcpp_debug_function_type':'void (*)(const struct std::__1::__libcpp_debug_info &)'
|     `-VisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:661:42, > Default
|-NamespaceDecl prev 0x7fe028880568 std
| |-original Namespace 0x7fe027866458 'std'
| `-NamespaceDecl prev 0x7fe0288805d0 <scratch space>:410:1 __1 inline
|   |-original Namespace 0x7fe0278664c0 '__1'
|   |-NamespaceDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:212:1, > rel_ops
|   | |-FunctionTemplateDecl operator!=
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl operator!= '_Bool (const _Tp &, const _Tp &)' inline
|   | |   |-ParmVarDecl referenced __x 'const _Tp &'
|   | |   |-ParmVarDecl referenced __y 'const _Tp &'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-UnaryOperator '<dependent type>' prefix '!'
|   | |   |     `-ParenExpr '<dependent type>'
|   | |   |       `-BinaryOperator '<dependent type>' '=='
|   | |   |         |-DeclRefExpr 'const _Tp' lvalue ParmVar 0x7fe0289891b8 '__x' 'const _Tp &'
|   | |   |         `-DeclRefExpr 'const _Tp' lvalue ParmVar 0x7fe028989228 '__y' 'const _Tp &'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:223:1, > operator>
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl operator> '_Bool (const _Tp &, const _Tp &)' inline
|   | |   |-ParmVarDecl referenced __x 'const _Tp &'
|   | |   |-ParmVarDecl referenced __y 'const _Tp &'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-BinaryOperator '<dependent type>' '<'
|   | |   |     |-DeclRefExpr 'const _Tp' lvalue ParmVar 0x7fe0289896d8 '__y' 'const _Tp &'
|   | |   |     `-DeclRefExpr 'const _Tp' lvalue ParmVar 0x7fe028989668 '__x' 'const _Tp &'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:231:1, > operator<=
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl operator<= '_Bool (const _Tp &, const _Tp &)' inline
|   | |   |-ParmVarDecl referenced __x 'const _Tp &'
|   | |   |-ParmVarDecl referenced __y 'const _Tp &'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-UnaryOperator '<dependent type>' prefix '!'
|   | |   |     `-ParenExpr '<dependent type>'
|   | |   |       `-BinaryOperator '<dependent type>' '<'
|   | |   |         |-DeclRefExpr 'const _Tp' lvalue ParmVar 0x7fe028989b08 '__y' 'const _Tp &'
|   | |   |         `-DeclRefExpr 'const _Tp' lvalue ParmVar 0x7fe028989a98 '__x' 'const _Tp &'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | `-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:239:1, > operator>=
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   |   `-FunctionDecl operator>= '_Bool (const _Tp &, const _Tp &)' inline
|   |     |-ParmVarDecl referenced __x 'const _Tp &'
|   |     |-ParmVarDecl referenced __y 'const _Tp &'
|   |     |-CompoundStmt
|   |     | `-ReturnStmt
|   |     |   `-UnaryOperator '<dependent type>' prefix '!'
|   |     |     `-ParenExpr '<dependent type>'
|   |     |       `-BinaryOperator '<dependent type>' '<'
|   |     |         |-DeclRefExpr 'const _Tp' lvalue ParmVar 0x7fe028989f08 '__x' 'const _Tp &'
|   |     |         `-DeclRefExpr 'const _Tp' lvalue ParmVar 0x7fe028989f78 '__y' 'const _Tp &'
|   |     |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:252:1, > swap_ranges
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _ForwardIterator1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _ForwardIterator2
|   | `-FunctionDecl swap_ranges '_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2)' inline
|   |   |-ParmVarDecl referenced __first1 '_ForwardIterator1'
|   |   |-ParmVarDecl referenced __last1 '_ForwardIterator1'
|   |   |-ParmVarDecl referenced __first2 '_ForwardIterator2'
|   |   |-CompoundStmt
|   |   | |-ForStmt
|   |   | | |-<<<NULL>>>
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator '<dependent type>' '!='
|   |   | | | |-DeclRefExpr '_ForwardIterator1' lvalue ParmVar 0x7fe02898a3e8 '__first1' '_ForwardIterator1'
|   |   | | | `-DeclRefExpr '_ForwardIterator1' lvalue ParmVar 0x7fe02898a458 '__last1' '_ForwardIterator1'
|   |   | | |-BinaryOperator '<dependent type>' ','
|   |   | | | |-UnaryOperator '<dependent type>' prefix '++'
|   |   | | | | `-DeclRefExpr '_ForwardIterator1' lvalue ParmVar 0x7fe02898a3e8 '__first1' '_ForwardIterator1'
|   |   | | | `-CStyleCastExpr 'void' <ToVoid>
|   |   | | |   `-UnaryOperator '<dependent type>' prefix '++'
|   |   | | |     `-DeclRefExpr '_ForwardIterator2' lvalue ParmVar 0x7fe02898a4c8 '__first2' '_ForwardIterator2'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fe028896d38 0x7fe028897ba8
|   |   | |   |-UnaryOperator '<dependent type>' prefix '*'
|   |   | |   | `-DeclRefExpr '_ForwardIterator1' lvalue ParmVar 0x7fe02898a3e8 '__first1' '_ForwardIterator1'
|   |   | |   `-UnaryOperator '<dependent type>' prefix '*'
|   |   | |     `-DeclRefExpr '_ForwardIterator2' lvalue ParmVar 0x7fe02898a4c8 '__first2' '_ForwardIterator2'
|   |   | `-ReturnStmt
|   |   |   `-DeclRefExpr '_ForwardIterator2' lvalue ParmVar 0x7fe02898a4c8 '__first2' '_ForwardIterator2'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl prev 0x7fe028897ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:263:1, > swap
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | `-FunctionDecl prev 0x7fe028897b10 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
|   |   |-ParmVarDecl referenced __a '_Tp (&)[_Np]'
|   |   |-ParmVarDecl referenced __b '_Tp (&)[_Np]'
|   |   |-CompoundStmt
|   |   | `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:270:43> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:270:12> '<overloaded function type>' lvalue (no ADL) = 'swap_ranges' 0x7fe02898a698
|   |   |   |-DeclRefExpr '_Tp [_Np]':'_Tp [_Np]' lvalue ParmVar 0x7fe02898aeb8 '__a' '_Tp (&)[_Np]'
|   |   |   |-BinaryOperator '<dependent type>' '+'
|   |   |   | |-DeclRefExpr '_Tp [_Np]':'_Tp [_Np]' lvalue ParmVar 0x7fe02898aeb8 '__a' '_Tp (&)[_Np]'
|   |   |   | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe02898ab08 '_Np' 'size_t':'unsigned long'
|   |   |   `-DeclRefExpr '_Tp [_Np]':'_Tp [_Np]' lvalue ParmVar 0x7fe02898b008 '__b' '_Tp (&)[_Np]'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:273:1, > move_if_noexcept
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl constexpr move_if_noexcept 'typename conditional<!is_nothrow_move_constructible<_Tp>::value && is_copy_constructible<_Tp>::value, const _Tp &, _Tp &&>::type (_Tp &) noexcept' inline
|   |   |-ParmVarDecl referenced __x '_Tp &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:287:27> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:287:19> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   |   |     `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe02898bb28 '__x' '_Tp &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:295:1, > referenced struct piecewise_construct_t definition
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:295:1, > implicit struct piecewise_construct_t
|   | |-CXXConstructorDecl implicit referenced constexpr piecewise_construct_t 'void (void) noexcept' inline default trivial
|   | |-CXXConstructorDecl implicit constexpr piecewise_construct_t 'void (const struct std::__1::piecewise_construct_t &)' inline default trivial noexcept-unevaluated 0x7fe02898f0b8
|   | | `-ParmVarDecl 'const struct std::__1::piecewise_construct_t &'
|   | |-CXXConstructorDecl implicit used constexpr piecewise_construct_t 'void (struct std::__1::piecewise_construct_t &&) noexcept' inline default trivial
|   | | |-ParmVarDecl 'struct std::__1::piecewise_construct_t &&'
|   | | `-CompoundStmt
|   | `-CXXDestructorDecl implicit referenced ~piecewise_construct_t 'void (void) noexcept' inline default trivial
|   |-VarDecl piecewise_construct 'const struct std::__1::piecewise_construct_t' constexpr cinit
|   | `-ExprWithCleanups 'const struct std::__1::piecewise_construct_t'
|   |   `-CXXConstructExpr 'const struct std::__1::piecewise_construct_t' 'void (struct std::__1::piecewise_construct_t &&) noexcept' elidable
|   |     `-MaterializeTemporaryExpr 'struct std::__1::piecewise_construct_t' xvalue
|   |       `-CXXTemporaryObjectExpr 'struct std::__1::piecewise_construct_t' 'void (void) noexcept' zeroing
|   |-ClassTemplateDecl prev 0x7fe027866dd0 pair
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | |-CXXRecordDecl prev 0x7fe027866d38 struct pair definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:312:1, > implicit referenced struct pair
|   | | |-TypedefDecl referenced first_type '_T1'
|   | | | `-TemplateTypeParmType '_T1' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm '_T1'
|   | | |-TypedefDecl referenced second_type '_T2'
|   | | | `-TemplateTypeParmType '_T2' dependent depth 0 index 1
|   | | |   `-TemplateTypeParm '_T2'
|   | | |-FieldDecl referenced first '_T1'
|   | | |-FieldDecl referenced second '_T2'
|   | | |-CXXConstructorDecl pair<_T1, _T2> 'void (const pair<_T1, _T2> &)' default
|   | | | `-ParmVarDecl 'const pair<_T1, _T2> &'
|   | | |-CXXConstructorDecl pair<_T1, _T2> 'void (pair<_T1, _T2> &&)' default
|   | | | `-ParmVarDecl 'pair<_T1, _T2> &&'
|   | | |-TypeAliasTemplateDecl _EnableB
|   | | | |-NonTypeTemplateParmDecl referenced '_Bool' depth 1 index 0 _Val
|   | | | `-TypeAliasDecl _EnableB 'typename enable_if<_Val, _Bool>::type'
|   | | |   `-DependentNameType 'typename enable_if<_Val, _Bool>::type' dependent
|   | | |-CXXRecordDecl referenced struct _CheckArgs definition
|   | | | |-CXXRecordDecl implicit struct _CheckArgs
|   | | | |-FunctionTemplateDecl __enable_default
|   | | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | | | `-CXXMethodDecl constexpr __enable_default '_Bool (void)' static
|   | | | |   `-CompoundStmt
|   | | | |     `-ReturnStmt
|   | | | |       `-BinaryOperator '<dependent type>' '&&'
|   | | | |         |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | |         `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | |-FunctionTemplateDecl __enable_explicit
|   | | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | | | `-CXXMethodDecl constexpr __enable_explicit '_Bool (void)' static
|   | | | |   `-CompoundStmt
|   | | | |     `-ReturnStmt
|   | | | |       `-BinaryOperator '<dependent type>' '&&'
|   | | | |         |-BinaryOperator '<dependent type>' '&&'
|   | | | |         | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | |         | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | |         `-ParenExpr '<dependent type>'
|   | | | |           `-BinaryOperator '<dependent type>' '||'
|   | | | |             |-UnaryOperator '<dependent type>' prefix '!'
|   | | | |             | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | |             `-UnaryOperator '<dependent type>' prefix '!'
|   | | | |               `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | `-FunctionTemplateDecl __enable_implicit
|   | | |   |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | |   |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | |   `-CXXMethodDecl constexpr __enable_implicit '_Bool (void)' static
|   | | |     `-CompoundStmt
|   | | |       `-ReturnStmt
|   | | |         `-BinaryOperator '<dependent type>' '&&'
|   | | |           |-BinaryOperator '<dependent type>' '&&'
|   | | |           | |-BinaryOperator '<dependent type>' '&&'
|   | | |           | | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | |           | | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | |           | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | |           `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | |-TypeAliasTemplateDecl _CheckArgsDep
|   | | | |-NonTypeTemplateParmDecl referenced '_Bool' depth 1 index 0 _MaybeEnable
|   | | | `-TypeAliasDecl _CheckArgsDep 'typename conditional<_MaybeEnable, struct _CheckArgs, struct __check_tuple_constructor_fail>::type'
|   | | |   `-DependentNameType 'typename conditional<_MaybeEnable, struct _CheckArgs, struct __check_tuple_constructor_fail>::type' dependent
|   | | |-CXXRecordDecl referenced struct _CheckTupleLikeConstructor definition
|   | | | |-CXXRecordDecl implicit struct _CheckTupleLikeConstructor
|   | | | |-FunctionTemplateDecl __enable_implicit
|   | | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tuple
|   | | | | `-CXXMethodDecl constexpr __enable_implicit '_Bool (void)' static
|   | | | |   `-CompoundStmt
|   | | | |     `-ReturnStmt
|   | | | |       `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | |-FunctionTemplateDecl __enable_explicit
|   | | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tuple
|   | | | | `-CXXMethodDecl constexpr __enable_explicit '_Bool (void)' static
|   | | | |   `-CompoundStmt
|   | | | |     `-ReturnStmt
|   | | | |       `-BinaryOperator '<dependent type>' '&&'
|   | | | |         |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | |         `-UnaryOperator '<dependent type>' prefix '!'
|   | | | |           `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | | `-FunctionTemplateDecl __enable_assign
|   | | |   |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tuple
|   | | |   `-CXXMethodDecl constexpr __enable_assign '_Bool (void)' static
|   | | |     `-CompoundStmt
|   | | |       `-ReturnStmt
|   | | |         `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | | |-TypeAliasTemplateDecl _CheckTLC
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tuple
|   | | | `-TypeAliasDecl _CheckTLC 'typename conditional<__tuple_like_with_size<_Tuple, 2>::value && !is_same<typename decay<_Tuple>::type, pair<_T1, _T2> >::value, struct _CheckTupleLikeConstructor, struct __check_tuple_constructor_fail>::type'
|   | | |   `-DependentNameType 'typename conditional<__tuple_like_with_size<_Tuple, 2>::value && !is_same<typename decay<_Tuple>::type, pair<_T1, _T2> >::value, struct _CheckTupleLikeConstructor, struct __check_tuple_constructor_fail>::type' dependent
|   | | |-FunctionTemplateDecl pair<_T1, _T2>
|   | | | |-NonTypeTemplateParmDecl referenced '_Bool' depth 1 index 0 _Dummy
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' true
|   | | | |-NonTypeTemplateParmDecl '_EnableB<_CheckArgsDep<_Dummy>::template __enable_default<_T1, _T2>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_default<_T1, _T2>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:409:33> constexpr pair<_T1, _T2> 'void (void)'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:411:5, > pair<_T1, _T2>
|   | | | |-NonTypeTemplateParmDecl referenced '_Bool' depth 1 index 0 _Dummy
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' true
|   | | | |-NonTypeTemplateParmDecl '_EnableB<_CheckArgsDep<_Dummy>::template __enable_explicit<const _T1 &, const _T2 &>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_explicit<const _T1 &, const _T2 &>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:416:38> constexpr pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
|   | | |   |-ParmVarDecl referenced __t1 'const _T1 &'
|   | | |   |-ParmVarDecl referenced __t2 'const _T2 &'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-DeclRefExpr 'const _T1' lvalue ParmVar 0x7fe0280142d0 '__t1' 'const _T1 &'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-DeclRefExpr 'const _T2' lvalue ParmVar 0x7fe028014340 '__t2' 'const _T2 &'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:418:5, > pair<_T1, _T2>
|   | | | |-NonTypeTemplateParmDecl referenced '_Bool' depth 1 index 0 _Dummy
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' true
|   | | | |-NonTypeTemplateParmDecl '_EnableB<_CheckArgsDep<_Dummy>::template __enable_implicit<const _T1 &, const _T2 &>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_implicit<const _T1 &, const _T2 &>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:423:38> constexpr pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
|   | | |   |-ParmVarDecl referenced __t1 'const _T1 &'
|   | | |   |-ParmVarDecl referenced __t2 'const _T2 &'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-DeclRefExpr 'const _T1' lvalue ParmVar 0x7fe028022cf0 '__t1' 'const _T1 &'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-DeclRefExpr 'const _T2' lvalue ParmVar 0x7fe028022d60 '__t2' 'const _T2 &'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:425:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_explicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<_U1, _U2>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:80> constexpr pair<_T1, _T2> 'void (_U1 &&, _U2 &&)'
|   | | |   |-ParmVarDecl referenced __u1 '_U1 &&'
|   | | |   |-ParmVarDecl referenced __u2 '_U2 &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:41> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |     `-DeclRefExpr '_U1' lvalue ParmVar 0x7fe028023c48 '__u1' '_U1 &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:76> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:70> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |     `-DeclRefExpr '_U2' lvalue ParmVar 0x7fe028023d18 '__u2' '_U2 &&'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:432:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_implicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<_U1, _U2>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:80> constexpr pair<_T1, _T2> 'void (_U1 &&, _U2 &&)'
|   | | |   |-ParmVarDecl referenced __u1 '_U1 &&'
|   | | |   |-ParmVarDecl referenced __u2 '_U2 &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:41> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |     `-DeclRefExpr '_U1' lvalue ParmVar 0x7fe028024968 '__u1' '_U1 &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:76> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:70> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |     `-DeclRefExpr '_U2' lvalue ParmVar 0x7fe028024a10 '__u2' '_U2 &&'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:439:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_explicit<const _U1 &, const _U2 &>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<const _U1 &, const _U2 &>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:444:49> constexpr pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
|   | | |   |-ParmVarDecl referenced __p 'const pair<_U1, _U2> &'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | |   |     `-DeclRefExpr 'const pair<_U1, _U2>' lvalue ParmVar 0x7fe028025858 '__p' 'const pair<_U1, _U2> &'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | |   |     `-DeclRefExpr 'const pair<_U1, _U2>' lvalue ParmVar 0x7fe028025858 '__p' 'const pair<_U1, _U2> &'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:446:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_implicit<const _U1 &, const _U2 &>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<const _U1 &, const _U2 &>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:451:49> constexpr pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
|   | | |   |-ParmVarDecl referenced __p 'const pair<_U1, _U2> &'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | |   |     `-DeclRefExpr 'const pair<_U1, _U2>' lvalue ParmVar 0x7fe0280265d8 '__p' 'const pair<_U1, _U2> &'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | |   |     `-DeclRefExpr 'const pair<_U1, _U2>' lvalue ParmVar 0x7fe0280265d8 '__p' 'const pair<_U1, _U2> &'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:453:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_explicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<_U1, _U2>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:91> constexpr pair<_T1, _T2> 'void (pair<_U1, _U2> &&)'
|   | | |   |-ParmVarDecl referenced __p 'pair<_U1, _U2> &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:46> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | |   |       `-DeclRefExpr 'pair<_U1, _U2>' lvalue ParmVar 0x7fe028041038 '__p' 'pair<_U1, _U2> &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:87> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:75> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | |   |       `-DeclRefExpr 'pair<_U1, _U2>' lvalue ParmVar 0x7fe028041038 '__p' 'pair<_U1, _U2> &&'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:460:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl '_EnableB<struct _CheckArgs::template __enable_implicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<_U1, _U2>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:91> constexpr pair<_T1, _T2> 'void (pair<_U1, _U2> &&)'
|   | | |   |-ParmVarDecl referenced __p 'pair<_U1, _U2> &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:46> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | |   |       `-DeclRefExpr 'pair<_U1, _U2>' lvalue ParmVar 0x7fe028041ca8 '__p' 'pair<_U1, _U2> &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:87> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:75> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | |   |       `-DeclRefExpr 'pair<_U1, _U2>' lvalue ParmVar 0x7fe028041ca8 '__p' 'pair<_U1, _U2> &&'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:467:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tuple
|   | | | |-NonTypeTemplateParmDecl '_EnableB<_CheckTLC<_Tuple>::template __enable_explicit<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_explicit<_Tuple>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:63> constexpr pair<_T1, _T2> 'void (_Tuple &&)'
|   | | |   |-ParmVarDecl referenced __p '_Tuple &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:472:58> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:472:29> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe0288c2ed8 0x7fe0288c3698 0x7fe0288c3e58 0x7fe0288c4618 0x7fe0288c5600 0x7fe0288c5e48 0x7fe0288c6688 0x7fe0288c6ec8 0x7fe0288c7fa0 0x7fe0288c8550 0x7fe0288c8b00 0x7fe0288c90b0
|   | | |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:472:57> '<dependent type>'
|   | | |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:472:52> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |       `-DeclRefExpr '_Tuple' lvalue ParmVar 0x7fe028043308 '__p' '_Tuple &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:59> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:30> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe0288c2ed8 0x7fe0288c3698 0x7fe0288c3e58 0x7fe0288c4618 0x7fe0288c5600 0x7fe0288c5e48 0x7fe0288c6688 0x7fe0288c6ec8 0x7fe0288c7fa0 0x7fe0288c8550 0x7fe0288c8b00 0x7fe0288c90b0
|   | | |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:58> '<dependent type>'
|   | | |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:53> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |       `-DeclRefExpr '_Tuple' lvalue ParmVar 0x7fe028043308 '__p' '_Tuple &&'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:475:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tuple
|   | | | |-NonTypeTemplateParmDecl '_EnableB<_CheckTLC<_Tuple>::template __enable_implicit<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_implicit<_Tuple>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:63> constexpr pair<_T1, _T2> 'void (_Tuple &&)'
|   | | |   |-ParmVarDecl referenced __p '_Tuple &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb18 'first' '_T1'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:480:58> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:480:29> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe0288c2ed8 0x7fe0288c3698 0x7fe0288c3e58 0x7fe0288c4618 0x7fe0288c5600 0x7fe0288c5e48 0x7fe0288c6688 0x7fe0288c6ec8 0x7fe0288c7fa0 0x7fe0288c8550 0x7fe0288c8b00 0x7fe0288c90b0
|   | | |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:480:57> '<dependent type>'
|   | | |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:480:52> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |       `-DeclRefExpr '_Tuple' lvalue ParmVar 0x7fe0280453c8 '__p' '_Tuple &&'
|   | | |   |-CXXCtorInitializer Field 0x7fe02898fb70 'second' '_T2'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:59> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:30> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe0288c2ed8 0x7fe0288c3698 0x7fe0288c3e58 0x7fe0288c4618 0x7fe0288c5600 0x7fe0288c5e48 0x7fe0288c6688 0x7fe0288c6ec8 0x7fe0288c7fa0 0x7fe0288c8550 0x7fe0288c8b00 0x7fe0288c90b0
|   | | |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:58> '<dependent type>'
|   | | |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:53> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   |       `-DeclRefExpr '_Tuple' lvalue ParmVar 0x7fe0280453c8 '__p' '_Tuple &&'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:483:5, > pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 ... _Args1
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 1 ... _Args2
|   | | | `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:489:77> pair<_T1, _T2> 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>)'
|   | | |   |-ParmVarDecl referenced __pc 'struct std::__1::piecewise_construct_t'
|   | | |   |-ParmVarDecl referenced __first_args 'tuple<_Args1...>'
|   | | |   |-ParmVarDecl referenced __second_args 'tuple<_Args2...>'
|   | | |   |-CXXCtorInitializer 'pair<_T1, _T2>'
|   | | |   | `-ParenListExpr 'NULL TYPE'
|   | | |   |   |-DeclRefExpr 'struct std::__1::piecewise_construct_t' lvalue ParmVar 0x7fe0280464e8 '__pc' 'struct std::__1::piecewise_construct_t'
|   | | |   |   |-DeclRefExpr 'tuple<_Args1...>' lvalue ParmVar 0x7fe0280466f8 '__first_args' 'tuple<_Args1...>'
|   | | |   |   |-DeclRefExpr 'tuple<_Args2...>' lvalue ParmVar 0x7fe028046918 '__second_args' 'tuple<_Args2...>'
|   | | |   |   |-CXXUnresolvedConstructExpr 'typename __make_tuple_indices<sizeof...(_Args1)>::type'
|   | | |   |   `-CXXUnresolvedConstructExpr 'typename __make_tuple_indices<sizeof...(_Args2)>::type'
|   | | |   |-CompoundStmt
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-CXXMethodDecl operator= 'pair<_T1, _T2> &(const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &) noexcept(is_nothrow_copy_assignable<first_type>::value && is_nothrow_copy_assignable<second_type>::value)'
|   | | | |-ParmVarDecl referenced __p 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &'
|   | | | |-CompoundStmt
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-MemberExpr '_T1' lvalue ->first 0x7fe02898fb18
|   | | | | | | `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | | | | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | | | |   `-DeclRefExpr 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type' lvalue ParmVar 0x7fe0280471b0 '__p' 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &'
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-MemberExpr '_T2' lvalue ->second 0x7fe02898fb70
|   | | | | | | `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | | | | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | | | |   `-DeclRefExpr 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type' lvalue ParmVar 0x7fe0280471b0 '__p' 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &'
|   | | | | `-ReturnStmt
|   | | | |   `-UnaryOperator '<dependent type>' prefix '*'
|   | | | |     `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr Hidden
|   | | |-CXXMethodDecl operator= 'pair<_T1, _T2> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)'
|   | | | |-ParmVarDecl referenced __p 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &&'
|   | | | |-CompoundStmt
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-MemberExpr '_T1' lvalue ->first 0x7fe02898fb18
|   | | | | | | `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | | | | `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:53> '<dependent type>'
|   | | | | |   |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | | | |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | | | |     `-DeclRefExpr 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type' lvalue ParmVar 0x7fe028047980 '__p' 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &&'
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-MemberExpr '_T2' lvalue ->second 0x7fe02898fb70
|   | | | | | | `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | | | | `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:56> '<dependent type>'
|   | | | | |   |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | | | |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | | | |     `-DeclRefExpr 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type' lvalue ParmVar 0x7fe028047980 '__p' 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &&'
|   | | | | `-ReturnStmt
|   | | | |   `-UnaryOperator '<dependent type>' prefix '*'
|   | | | |     `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr Hidden
|   | | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:517:5, > operator=
|   | | | |-TemplateTypeParmDecl referenced class depth 1 index 0 _Tuple
|   | | | |-NonTypeTemplateParmDecl '_EnableB<_CheckTLC<_Tuple>::template __enable_assign<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_assign<_Tuple>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr '_Bool' false
|   | | | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:525:5> operator= 'pair<_T1, _T2> &(_Tuple &&)'
|   | | |   |-ParmVarDecl referenced __p '_Tuple &&'
|   | | |   |-CompoundStmt
|   | | |   | |-BinaryOperator '<dependent type>' '='
|   | | |   | | |-MemberExpr '_T1' lvalue ->first 0x7fe02898fb18
|   | | |   | | | `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | |   | | `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:522:58> '<dependent type>'
|   | | |   | |   |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:522:29> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe0288c2ed8 0x7fe0288c3698 0x7fe0288c3e58 0x7fe0288c4618 0x7fe0288c5600 0x7fe0288c5e48 0x7fe0288c6688 0x7fe0288c6ec8 0x7fe0288c7fa0 0x7fe0288c8550 0x7fe0288c8b00 0x7fe0288c90b0
|   | | |   | |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:522:57> '<dependent type>'
|   | | |   | |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:522:52> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   | |     `-DeclRefExpr '_Tuple' lvalue ParmVar 0x7fe028048c08 '__p' '_Tuple &&'
|   | | |   | |-BinaryOperator '<dependent type>' '='
|   | | |   | | |-MemberExpr '_T2' lvalue ->second 0x7fe02898fb70
|   | | |   | | | `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | |   | | `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:523:59> '<dependent type>'
|   | | |   | |   |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:523:30> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe0288c2ed8 0x7fe0288c3698 0x7fe0288c3e58 0x7fe0288c4618 0x7fe0288c5600 0x7fe0288c5e48 0x7fe0288c6688 0x7fe0288c6ec8 0x7fe0288c7fa0 0x7fe0288c8550 0x7fe0288c8b00 0x7fe0288c90b0
|   | | |   | |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:523:58> '<dependent type>'
|   | | |   | |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:523:53> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | | |   | |     `-DeclRefExpr '_Tuple' lvalue ParmVar 0x7fe028048c08 '__p' '_Tuple &&'
|   | | |   | `-ReturnStmt
|   | | |   |   `-UnaryOperator '<dependent type>' prefix '*'
|   | | |   |     `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr Hidden
|   | | |-CXXMethodDecl swap 'void (pair<_T1, _T2> &) noexcept(__is_nothrow_swappable<first_type>::value && __is_nothrow_swappable<second_type>::value)'
|   | | | |-ParmVarDecl referenced __p 'pair<_T1, _T2> &'
|   | | | |-CompoundStmt
|   | | | | |-DeclStmt
|   | | | | | `-UsingDecl std::__1::swap
|   | | | | |-CallExpr '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = 'swap' 0x7fe028051558 0x7fe028051510
|   | | | | | |-MemberExpr '_T1' lvalue ->first 0x7fe02898fb18
|   | | | | | | `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | | | | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | | | |   `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe028049c60 '__p' 'pair<_T1, _T2> &'
|   | | | | `-CallExpr '<dependent type>'
|   | | | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = 'swap' 0x7fe028051558 0x7fe028051510
|   | | | |   |-MemberExpr '_T2' lvalue ->second 0x7fe02898fb70
|   | | | |   | `-CXXThisExpr 'pair<_T1, _T2> *' this
|   | | | |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | | |     `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe028049c60 '__p' 'pair<_T1, _T2> &'
|   | | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr Hidden
|   | | |-AccessSpecDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:537:1, > private
|   | | `-FunctionTemplateDecl pair<_T1, _T2>
|   | |   |-TemplateTypeParmDecl referenced class depth 1 index 0 ... _Args1
|   | |   |-TemplateTypeParmDecl referenced class depth 1 index 1 ... _Args2
|   | |   |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 1 index 2 ... _I1
|   | |   |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 1 index 3 ... _I2
|   | |   `-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:544:62> pair<_T1, _T2> 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...> &, tuple<_Args2...> &, __tuple_indices<_I1...>, __tuple_indices<_I2...>)'
|   | |     |-ParmVarDecl 'struct std::__1::piecewise_construct_t'
|   | |     |-ParmVarDecl __first_args 'tuple<_Args1...> &'
|   | |     |-ParmVarDecl __second_args 'tuple<_Args2...> &'
|   | |     |-ParmVarDecl '__tuple_indices<_I1...>'
|   | |     |-ParmVarDecl '__tuple_indices<_I2...>'
|   | |     |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |     `-VisibilityAttr Hidden
|   | `-ClassTemplateSpecialization 'pair'
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:548:1, > operator==
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr operator== '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '&&'
|   |   |     |-CXXOperatorCallExpr '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator==' 0x7fe028051ec8
|   |   |     | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   |   |     | | `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028051b68 '__x' 'const pair<_T1, _T2> &'
|   |   |     | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   |   |     |   `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028051d18 '__y' 'const pair<_T1, _T2> &'
|   |   |     `-CXXOperatorCallExpr '<dependent type>'
|   |   |       |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator==' 0x7fe028051ec8
|   |   |       |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   |   |       | `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028051b68 '__x' 'const pair<_T1, _T2> &'
|   |   |       `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   |   |         `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028051d18 '__y' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:556:1, > operator!=
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr operator!= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-UnaryOperator '<dependent type>' prefix '!'
|   |   |     `-ParenExpr '<dependent type>'
|   |   |       `-CXXOperatorCallExpr '<dependent type>'
|   |   |         |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator==' 0x7fe028051ec8
|   |   |         |-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028052598 '__x' 'const pair<_T1, _T2> &'
|   |   |         `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028052748 '__y' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:564:1, > operator<
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr operator< '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '||'
|   |   |     |-CXXOperatorCallExpr '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fe028053088
|   |   |     | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   |   |     | | `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028052d68 '__x' 'const pair<_T1, _T2> &'
|   |   |     | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   |   |     |   `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028052f18 '__y' 'const pair<_T1, _T2> &'
|   |   |     `-ParenExpr '<dependent type>'
|   |   |       `-BinaryOperator '<dependent type>' '&&'
|   |   |         |-UnaryOperator '<dependent type>' prefix '!'
|   |   |         | `-ParenExpr '<dependent type>'
|   |   |         |   `-CXXOperatorCallExpr '<dependent type>'
|   |   |         |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fe028053088
|   |   |         |     |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   |   |         |     | `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028052f18 '__y' 'const pair<_T1, _T2> &'
|   |   |         |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   |   |         |       `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028052d68 '__x' 'const pair<_T1, _T2> &'
|   |   |         `-CXXOperatorCallExpr '<dependent type>'
|   |   |           |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fe028053088
|   |   |           |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   |   |           | `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028052d68 '__x' 'const pair<_T1, _T2> &'
|   |   |           `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   |   |             `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028052f18 '__y' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:572:1, > operator>
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr operator> '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXOperatorCallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fe028053088
|   |   |     |-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028053b38 '__y' 'const pair<_T1, _T2> &'
|   |   |     `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028053988 '__x' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:580:1, > operator>=
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr operator>= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-UnaryOperator '<dependent type>' prefix '!'
|   |   |     `-ParenExpr '<dependent type>'
|   |   |       `-CXXOperatorCallExpr '<dependent type>'
|   |   |         |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fe028053088
|   |   |         |-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028054108 '__x' 'const pair<_T1, _T2> &'
|   |   |         `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe0280542b8 '__y' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:588:1, > operator<=
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr operator<= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-UnaryOperator '<dependent type>' prefix '!'
|   |   |     `-ParenExpr '<dependent type>'
|   |   |       `-CXXOperatorCallExpr '<dependent type>'
|   |   |         |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fe028053088
|   |   |         |-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028054a78 '__y' 'const pair<_T1, _T2> &'
|   |   |         `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe0280548c8 '__x' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:596:1, > swap
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl swap 'typename enable_if<__is_swappable<_T1>::value && __is_swappable<_T2>::value, void>::type (pair<_T1, _T2> &, pair<_T1, _T2> &) noexcept((__is_nothrow_swappable<_T1>::value && __is_nothrow_swappable<_T2>::value))' inline
|   |   |-ParmVarDecl referenced __x 'pair<_T1, _T2> &'
|   |   |-ParmVarDecl referenced __y 'pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-CallExpr '<dependent type>'
|   |   |   |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .swap
|   |   |   | `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe028055548 '__x' 'pair<_T1, _T2> &'
|   |   |   `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe0280556f8 '__y' 'pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:613:1, > __make_pair_return_impl
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __make_pair_return_impl definition
|   |   |-CXXRecordDecl implicit struct __make_pair_return_impl
|   |   `-TypedefDecl type '_Tp'
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplatePartialSpecializationDecl struct __make_pair_return_impl definition
|   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __make_pair_return_impl
|   | `-TypedefDecl type '_Tp &'
|   |   `-LValueReferenceType '_Tp &' dependent
|   |     `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm '_Tp'
|   |-ClassTemplateDecl __make_pair_return
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl struct __make_pair_return definition
|   |   |-CXXRecordDecl implicit struct __make_pair_return
|   |   `-TypedefDecl type 'typename __make_pair_return_impl<typename decay<_Tp>::type>::type'
|   |     `-DependentNameType 'typename __make_pair_return_impl<typename decay<_Tp>::type>::type' dependent
|   |-FunctionTemplateDecl make_pair
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr make_pair 'pair<typename __make_pair_return<_T1>::type, typename __make_pair_return<_T2>::type> (_T1 &&, _T2 &&)' inline
|   |   |-ParmVarDecl referenced __t1 '_T1 &&'
|   |   |-ParmVarDecl referenced __t2 '_T2 &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXUnresolvedConstructExpr 'pair<typename __make_pair_return<_T1>::type, typename __make_pair_return<_T2>::type>'
|   |   |     |-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:637:41> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:637:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |     | `-DeclRefExpr '_T1' lvalue ParmVar 0x7fe028057478 '__t1' '_T1 &&'
|   |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:637:68> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:637:62> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   |       `-DeclRefExpr '_T2' lvalue ParmVar 0x7fe028057518 '__t2' '_T2 &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl parent 0x7fe0288aada0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:652:1, > class tuple_size definition
|   | |-public 'integral_constant<size_t, 2>':'struct std::__1::integral_constant<unsigned long, 2>'
|   | |-TemplateArgument type 'pair<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:653:3, > implicit class tuple_size
|   |-ClassTemplatePartialSpecializationDecl parent 0x7fe0288aada0 class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028058d08 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'pair<type-parameter-0-1, type-parameter-0-2>'
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:657:1, > implicit class tuple_element
|   | `-StaticAssertDecl
|   |   |-BinaryOperator '_Bool' '<'
|   |   | |-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028058d08 '_Ip' 'size_t':'unsigned long'
|   |   | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 'int' 2
|   |   `-StringLiteral 'const char [61]' lvalue "Index out of bounds in std::tuple_element<std::pair<T1, T2>>"
|   |-ClassTemplatePartialSpecializationDecl parent 0x7fe0288aada0 class tuple_element definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'pair<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:663:1, > implicit class tuple_element
|   | |-AccessSpecDecl public
|   | `-TypedefDecl type '_T1'
|   |   `-TemplateTypeParmType '_T1' dependent depth 0 index 0
|   |     `-TemplateTypeParm '_T1'
|   |-ClassTemplatePartialSpecializationDecl parent 0x7fe0288aada0 class tuple_element definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'pair<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:670:1, > implicit class tuple_element
|   | |-AccessSpecDecl public
|   | `-TypedefDecl type '_T2'
|   |   `-TemplateTypeParmType '_T2' dependent depth 0 index 1
|   |     `-TemplateTypeParm '_T2'
|   |-ClassTemplateDecl __get_pair
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-CXXRecordDecl struct __get_pair
|   | |-ClassTemplateSpecialization '__get_pair'
|   | `-ClassTemplateSpecialization '__get_pair'
|   |-ClassTemplateSpecializationDecl struct __get_pair definition
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl implicit struct __get_pair
|   | |-FunctionTemplateDecl get
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl constexpr get '_T1 &(pair<_T1, _T2> &) noexcept' static
|   | |   |-ParmVarDecl referenced __p 'pair<_T1, _T2> &'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | |   |     `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe02805afc8 '__p' 'pair<_T1, _T2> &'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:687:5, > get
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl constexpr get 'const _T1 &(const pair<_T1, _T2> &) noexcept' static
|   | |   |-ParmVarDecl referenced __p 'const pair<_T1, _T2> &'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | |   |     `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe02805b4f8 '__p' 'const pair<_T1, _T2> &'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:694:5, > get
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl constexpr get '_T1 &&(pair<_T1, _T2> &&) noexcept' static
|   | |   |-ParmVarDecl referenced __p 'pair<_T1, _T2> &&'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:698:78> '<dependent type>'
|   | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:698:67> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | |   |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | |   |       `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe02805ba28 '__p' 'pair<_T1, _T2> &&'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | `-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:700:5, > get
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   |   `-CXXMethodDecl constexpr get 'const _T1 &&(const pair<_T1, _T2> &&) noexcept' static
|   |     |-ParmVarDecl referenced __p 'const pair<_T1, _T2> &&'
|   |     |-CompoundStmt
|   |     | `-ReturnStmt
|   |     |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:704:90> '<dependent type>'
|   |     |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:704:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |     |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   |     |       `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe02805bf58 '__p' 'const pair<_T1, _T2> &&'
|   |     |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:708:1, > struct __get_pair definition
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl implicit struct __get_pair
|   | |-FunctionTemplateDecl get
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl constexpr get '_T2 &(pair<_T1, _T2> &) noexcept' static
|   | |   |-ParmVarDecl referenced __p 'pair<_T1, _T2> &'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | |   |     `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe02805cd48 '__p' 'pair<_T1, _T2> &'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:717:5, > get
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl constexpr get 'const _T2 &(const pair<_T1, _T2> &) noexcept' static
|   | |   |-ParmVarDecl referenced __p 'const pair<_T1, _T2> &'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | |   |     `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe02805d278 '__p' 'const pair<_T1, _T2> &'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:724:5, > get
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl constexpr get '_T2 &&(pair<_T1, _T2> &&) noexcept' static
|   | |   |-ParmVarDecl referenced __p 'pair<_T1, _T2> &&'
|   | |   |-CompoundStmt
|   | |   | `-ReturnStmt
|   | |   |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:728:79> '<dependent type>'
|   | |   |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:728:67> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   | |   |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | |   |       `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe02805d778 '__p' 'pair<_T1, _T2> &&'
|   | |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr Hidden
|   | `-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:730:5, > get
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   |   |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   |   `-CXXMethodDecl constexpr get 'const _T2 &&(const pair<_T1, _T2> &&) noexcept' static
|   |     |-ParmVarDecl referenced __p 'const pair<_T1, _T2> &&'
|   |     |-CompoundStmt
|   |     | `-ReturnStmt
|   |     |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:734:91> '<dependent type>'
|   |     |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:734:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |     |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   |     |       `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe02805dc78 '__p' 'const pair<_T1, _T2> &&'
|   |     |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl prev 0x7fe0288c5600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:738:1, > get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | `-FunctionDecl prev 0x7fe0288c5530 constexpr get 'typename tuple_element<_Ip, pair<_T1, _T2> >::type &(pair<_T1, _T2> &) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe02805e998 '__p' 'pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl prev 0x7fe0288c5e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:746:1, > get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | `-FunctionDecl prev 0x7fe0288c5db0 constexpr get 'const typename tuple_element<_Ip, pair<_T1, _T2> >::type &(const pair<_T1, _T2> &) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe02805f2e8 '__p' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl prev 0x7fe0288c6688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:755:1, > get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | `-FunctionDecl prev 0x7fe0288c65f0 constexpr get 'typename tuple_element<_Ip, pair<_T1, _T2> >::type &&(pair<_T1, _T2> &&) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'pair<_T1, _T2> &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:760:48> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:760:40> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   |   |       `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe02805fc38 '__p' 'pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl prev 0x7fe0288c6ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:763:1, > get
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 2 _T2
|   | `-FunctionDecl prev 0x7fe0288c6e30 constexpr get 'const typename tuple_element<_Ip, pair<_T1, _T2> >::type &&(const pair<_T1, _T2> &&) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'const pair<_T1, _T2> &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:768:48> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:768:40> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   |   |       `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028060648 '__p' 'const pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:773:1, > get
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr get '_T1 &(pair<_T1, _T2> &) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe02805b1d0 0x7fe02805b6d0 0x7fe02805bc00 0x7fe02805c130
|   |   |     `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe028060d98 '__p' 'pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:780:1, > get
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr get 'const _T1 &(const pair<_T1, _T2> &) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe02805b1d0 0x7fe02805b6d0 0x7fe02805bc00 0x7fe02805c130
|   |   |     `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028061458 '__p' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:787:1, > get
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr get '_T1 &&(pair<_T1, _T2> &&) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'pair<_T1, _T2> &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe02805b1d0 0x7fe02805b6d0 0x7fe02805bc00 0x7fe02805c130
|   |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:791:46> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:791:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   |   |       `-DeclRefExpr 'pair<_T1, _T2>' lvalue ParmVar 0x7fe028061b18 '__p' 'pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:794:1, > get
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr get 'const _T1 &&(const pair<_T1, _T2> &&) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'const pair<_T1, _T2> &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe02805b1d0 0x7fe02805b6d0 0x7fe02805bc00 0x7fe02805c130
|   |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:798:46> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:798:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   |   |       `-DeclRefExpr 'const pair<_T1, _T2>' lvalue ParmVar 0x7fe028062288 '__p' 'const pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:801:1, > get
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr get '_T1 &(pair<_T2, _T1> &) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'pair<_T2, _T1> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe02805cf50 0x7fe02805d450 0x7fe02805d950 0x7fe02805de50
|   |   |     `-DeclRefExpr 'pair<_T2, _T1>' lvalue ParmVar 0x7fe028062a98 '__p' 'pair<_T2, _T1> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:808:1, > get
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr get 'const _T1 &(const pair<_T2, _T1> &) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'const pair<_T2, _T1> &'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe02805cf50 0x7fe02805d450 0x7fe02805d950 0x7fe02805de50
|   |   |     `-DeclRefExpr 'const pair<_T2, _T1>' lvalue ParmVar 0x7fe0280631c8 '__p' 'const pair<_T2, _T1> &'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:815:1, > get
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr get '_T1 &&(pair<_T2, _T1> &&) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'pair<_T2, _T1> &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe02805cf50 0x7fe02805d450 0x7fe02805d950 0x7fe02805de50
|   |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:819:46> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:819:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   |   |       `-DeclRefExpr 'pair<_T2, _T1>' lvalue ParmVar 0x7fe0280638f8 '__p' 'pair<_T2, _T1> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-FunctionTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:822:1, > get
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | `-FunctionDecl constexpr get 'const _T1 &&(const pair<_T2, _T1> &&) noexcept' inline
|   |   |-ParmVarDecl referenced __p 'const pair<_T2, _T1> &&'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fe02805cf50 0x7fe02805d450 0x7fe02805d950 0x7fe02805de50
|   |   |     `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:826:46> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:826:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   |   |       `-DeclRefExpr 'const pair<_T2, _T1>' lvalue ParmVar 0x7fe0280640d8 '__p' 'const pair<_T2, _T1> &&'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:833:1, > integer_sequence
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced '_Tp' depth 0 index 1 ... _Ip
|   | `-CXXRecordDecl struct integer_sequence definition
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:834:1, > implicit struct integer_sequence
|   |   |-TypedefDecl value_type '_Tp'
|   |   | `-TemplateTypeParmType '_Tp' dependent depth 0 index 0
|   |   |   `-TemplateTypeParm '_Tp'
|   |   |-StaticAssertDecl
|   |   | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |   | `-StringLiteral 'const char [69]' lvalue "std::integer_sequence can only be instantiated with an integral type"
|   |   `-CXXMethodDecl constexpr size 'size_t (void) noexcept' static
|   |     |-CompoundStmt
|   |     | `-ReturnStmt
|   |     |   `-SizeOfPackExpr 'unsigned long' 0x7fe028064688 _Ip
|   |     |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr Hidden
|   |-TypeAliasTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:846:1, > index_sequence
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 ... _Ip
|   | `-TypeAliasDecl index_sequence 'integer_sequence<size_t, _Ip...>'
|   |   `-TemplateSpecializationType 'integer_sequence<size_t, _Ip...>' dependent integer_sequence
|   |     |-TemplateArgument type 'size_t':'unsigned long'
|   |     `-TemplateArgument expr
|   |       `-PackExpansionExpr '<dependent type>'
|   |         `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe0280650f8 '_Ip' 'size_t':'unsigned long'
|   |-TypeAliasTemplateDecl __make_integer_sequence
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced '_Tp' depth 0 index 1 _Ep
|   | `-TypeAliasDecl __make_integer_sequence '__make_integer_seq<integer_sequence, _Tp, _Ep>'
|   |   `-TemplateSpecializationType '__make_integer_seq<integer_sequence, _Tp, _Ep>' dependent __make_integer_seq
|   |     |-TemplateArgument template integer_sequence
|   |     |-TemplateArgument type '_Tp'
|   |     `-TemplateArgument expr
|   |       `-DeclRefExpr '_Tp' NonTypeTemplateParm 0x7fe0280654b8 '_Ep' '_Tp'
|   |-TypeAliasTemplateDecl make_integer_sequence
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl referenced '_Tp' depth 0 index 1 _Np
|   | `-TypeAliasDecl make_integer_sequence '__make_integer_sequence<_Tp, _Np>':'__make_integer_seq<integer_sequence, type-parameter-0-0, _Ep>'
|   |   `-TemplateSpecializationType '__make_integer_sequence<_Tp, _Np>' sugar dependent alias __make_integer_sequence
|   |     |-TemplateArgument type '_Tp'
|   |     |-TemplateArgument expr
|   |     | `-DeclRefExpr '_Tp' NonTypeTemplateParm 0x7fe0280659e8 '_Np' '_Tp'
|   |     |-TemplateSpecializationType '__make_integer_seq<integer_sequence, type-parameter-0-0, _Np>' dependent __make_integer_seq
|   |     | |-TemplateArgument template integer_sequence
|   |     | |-TemplateArgument type 'type-parameter-0-0':'type-parameter-0-0'
|   |     | `-TemplateArgument expr
|   |     |   `-SubstNonTypeTemplateParmExpr '_Tp'
|   |     |     `-DeclRefExpr '_Tp' NonTypeTemplateParm 0x7fe0280659e8 '_Np' '_Tp'
|   |     `-TemplateSpecializationType '__make_integer_seq<integer_sequence, type-parameter-0-0, _Ep>' dependent __make_integer_seq
|   |       |-TemplateArgument template integer_sequence
|   |       |-TemplateArgument type 'type-parameter-0-0'
|   |       `-TemplateArgument expr
|   |         `-DeclRefExpr '_Tp' NonTypeTemplateParm 0x7fe0280654b8 '_Ep' '_Tp'
|   |-TypeAliasTemplateDecl make_index_sequence
|   | |-NonTypeTemplateParmDecl referenced 'size_t':'unsigned long' depth 0 index 0 _Np
|   | `-TypeAliasDecl make_index_sequence 'make_integer_sequence<size_t, _Np>':'__make_integer_seq<integer_sequence, unsigned long, _Np>'
|   |   `-TemplateSpecializationType 'make_integer_sequence<size_t, _Np>' sugar dependent alias make_integer_sequence
|   |     |-TemplateArgument type 'size_t':'unsigned long'
|   |     |-TemplateArgument expr
|   |     | `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028065f88 '_Np' 'size_t':'unsigned long'
|   |     |-TemplateSpecializationType '__make_integer_sequence<unsigned long, _Np>' sugar dependent alias __make_integer_sequence
|   |     | |-TemplateArgument type 'unsigned long':'unsigned long'
|   |     | |-TemplateArgument expr
|   |     | | `-SubstNonTypeTemplateParmExpr 'size_t':'unsigned long'
|   |     | |   `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028065f88 '_Np' 'size_t':'unsigned long'
|   |     | |-TemplateSpecializationType '__make_integer_seq<integer_sequence, unsigned long, _Np>' dependent __make_integer_seq
|   |     | | |-TemplateArgument template integer_sequence
|   |     | | |-TemplateArgument type 'unsigned long':'unsigned long'
|   |     | | `-TemplateArgument expr
|   |     | |   `-SubstNonTypeTemplateParmExpr 'size_t':'unsigned long'
|   |     | |     `-SubstNonTypeTemplateParmExpr 'size_t':'unsigned long'
|   |     | |       `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028065f88 '_Np' 'size_t':'unsigned long'
|   |     | `-TemplateSpecializationType '__make_integer_seq<integer_sequence, unsigned long, _Np>' dependent __make_integer_seq
|   |     |   |-TemplateArgument template integer_sequence
|   |     |   |-TemplateArgument type 'unsigned long'
|   |     |   `-TemplateArgument expr
|   |     |     `-SubstNonTypeTemplateParmExpr 'size_t':'unsigned long'
|   |     |       `-SubstNonTypeTemplateParmExpr 'size_t':'unsigned long'
|   |     |         `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028065f88 '_Np' 'size_t':'unsigned long'
|   |     `-TemplateSpecializationType '__make_integer_seq<integer_sequence, unsigned long, _Np>' dependent __make_integer_seq
|   |       |-TemplateArgument template integer_sequence
|   |       |-TemplateArgument type 'unsigned long'
|   |       `-TemplateArgument expr
|   |         `-SubstNonTypeTemplateParmExpr 'size_t':'unsigned long'
|   |           `-SubstNonTypeTemplateParmExpr 'size_t':'unsigned long'
|   |             `-DeclRefExpr 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe028065f88 '_Np' 'size_t':'unsigned long'
|   |-TypeAliasTemplateDecl index_sequence_for
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 ... _Tp
|   | `-TypeAliasDecl index_sequence_for 'make_index_sequence<sizeof...(_Tp)>':'__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>'
|   |   `-TemplateSpecializationType 'make_index_sequence<sizeof...(_Tp)>' sugar dependent alias make_index_sequence
|   |     |-TemplateArgument expr
|   |     | `-SizeOfPackExpr 'unsigned long' 0x7fe028066718 _Tp
|   |     |-TemplateSpecializationType 'make_integer_sequence<size_t, sizeof...(_Tp)>' sugar dependent alias make_integer_sequence
|   |     | |-TemplateArgument type 'size_t':'unsigned long'
|   |     | |-TemplateArgument expr
|   |     | | `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | |   `-SizeOfPackExpr 'unsigned long' 0x7fe028066718 _Tp
|   |     | |-TemplateSpecializationType '__make_integer_sequence<unsigned long, sizeof...(_Tp)>' sugar dependent alias __make_integer_sequence
|   |     | | |-TemplateArgument type 'unsigned long':'unsigned long'
|   |     | | |-TemplateArgument expr
|   |     | | | `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | | |   `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | | |     `-SizeOfPackExpr 'unsigned long' 0x7fe028066718 _Tp
|   |     | | |-TemplateSpecializationType '__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>' dependent __make_integer_seq
|   |     | | | |-TemplateArgument template integer_sequence
|   |     | | | |-TemplateArgument type 'unsigned long':'unsigned long'
|   |     | | | `-TemplateArgument expr
|   |     | | |   `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | | |     `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | | |       `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | | |         `-SizeOfPackExpr 'unsigned long' 0x7fe028066718 _Tp
|   |     | | `-TemplateSpecializationType '__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>' dependent __make_integer_seq
|   |     | |   |-TemplateArgument template integer_sequence
|   |     | |   |-TemplateArgument type 'unsigned long'
|   |     | |   `-TemplateArgument expr
|   |     | |     `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | |       `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | |         `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     | |           `-SizeOfPackExpr 'unsigned long' 0x7fe028066718 _Tp
|   |     | `-TemplateSpecializationType '__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>' dependent __make_integer_seq
|   |     |   |-TemplateArgument template integer_sequence
|   |     |   |-TemplateArgument type 'unsigned long'
|   |     |   `-TemplateArgument expr
|   |     |     `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     |       `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     |         `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |     |           `-SizeOfPackExpr 'unsigned long' 0x7fe028066718 _Tp
|   |     `-TemplateSpecializationType '__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>' dependent __make_integer_seq
|   |       |-TemplateArgument template integer_sequence
|   |       |-TemplateArgument type 'unsigned long'
|   |       `-TemplateArgument expr
|   |         `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |           `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |             `-SubstNonTypeTemplateParmExpr 'unsigned long'
|   |               `-SizeOfPackExpr 'unsigned long' 0x7fe028066718 _Tp
|   |-FunctionTemplateDecl exchange
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _T2
|   | | `-TemplateArgument type '_T1'
|   | `-FunctionDecl exchange '_T1 (_T1 &, _T2 &&)' inline
|   |   |-ParmVarDecl referenced __obj '_T1 &'
|   |   |-ParmVarDecl referenced __new_value '_T2 &&'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __old_value '_T1' nrvo cinit
|   |   | |   `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:891:40> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:891:30> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe028821408
|   |   | |     `-DeclRefExpr '_T1' lvalue ParmVar 0x7fe0280670f8 '__obj' '_T1 &'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-DeclRefExpr '_T1' lvalue ParmVar 0x7fe0280670f8 '__obj' '_T1 &'
|   |   | | `-CallExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:892:44> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:892:31> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe028821b50 0x7fe028822070
|   |   | |   `-DeclRefExpr '_T2' lvalue ParmVar 0x7fe028067198 '__new_value' '_T2 &&'
|   |   | `-ReturnStmt
|   |   |   `-DeclRefExpr '_T1' lvalue Var 0x7fe028067410 '__old_value' '_T1'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:941:1, > unary_function
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Arg
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Result
|   | |-CXXRecordDecl struct unary_function definition
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:942:1, > implicit struct unary_function
|   | | |-TypedefDecl argument_type '_Arg'
|   | | | `-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm '_Arg'
|   | | `-TypedefDecl result_type '_Result'
|   | |   `-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     `-TemplateTypeParm '_Result'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'struct std::__1::_PairT'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe028084298 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'struct std::__1::_PairT':'struct std::__1::_PairT'
|   | | | `-SubstTemplateTypeParmType 'struct std::__1::_PairT' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-RecordType 'struct std::__1::_PairT'
|   | | |     `-CXXRecord '_PairT'
|   | | |-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | | | `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | | |   |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | | |   | `-TemplateTypeParm '_Result'
|   | | |   `-BuiltinType 'unsigned long'
|   | | |-CXXConstructorDecl implicit constexpr unary_function 'void (void) noexcept' inline default trivial
|   | | |-CXXDestructorDecl implicit ~unary_function 'void (void) noexcept' inline default trivial
|   | | |-CXXConstructorDecl implicit constexpr unary_function 'void (const struct std::__1::unary_function<struct std::__1::_PairT, unsigned long> &)' inline default trivial noexcept-unevaluated 0x7fe028085d68
|   | | | `-ParmVarDecl 'const struct std::__1::unary_function<struct std::__1::_PairT, unsigned long> &'
|   | | `-CXXConstructorDecl implicit constexpr unary_function 'void (struct std::__1::unary_function<struct std::__1::_PairT, unsigned long> &&)' inline default trivial noexcept-unevaluated 0x7fe028085f28
|   | |   `-ParmVarDecl 'struct std::__1::unary_function<struct std::__1::_PairT, unsigned long> &&'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type '_Bool'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe02808d9b0 implicit struct unary_function
|   | | |-TypedefDecl argument_type '_Bool':'_Bool'
|   | | | `-SubstTemplateTypeParmType '_Bool' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType '_Bool'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'char'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe02808e4d0 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'char':'char'
|   | | | `-SubstTemplateTypeParmType 'char' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'char'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'signed char'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe02808f018 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'signed char':'signed char'
|   | | | `-SubstTemplateTypeParmType 'signed char' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'signed char'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'unsigned char'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe02808fb68 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'unsigned char':'unsigned char'
|   | | | `-SubstTemplateTypeParmType 'unsigned char' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'unsigned char'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'char16_t'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe0280906a0 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'char16_t':'char16_t'
|   | | | `-SubstTemplateTypeParmType 'char16_t' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'char16_t'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'char32_t'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe0280911c0 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'char32_t':'char32_t'
|   | | | `-SubstTemplateTypeParmType 'char32_t' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'char32_t'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'wchar_t'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe028091ce0 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'wchar_t':'wchar_t'
|   | | | `-SubstTemplateTypeParmType 'wchar_t' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'wchar_t'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'short'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe028092818 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'short':'short'
|   | | | `-SubstTemplateTypeParmType 'short' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'short'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'unsigned short'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe028093378 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'unsigned short':'unsigned short'
|   | | | `-SubstTemplateTypeParmType 'unsigned short' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'unsigned short'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'int'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe028093ec8 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'int':'int'
|   | | | `-SubstTemplateTypeParmType 'int' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'int'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'unsigned int'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe028094a18 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'unsigned int':'unsigned int'
|   | | | `-SubstTemplateTypeParmType 'unsigned int' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'unsigned int'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'long'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe028095568 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'long':'long'
|   | | | `-SubstTemplateTypeParmType 'long' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'long'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe0280960b8 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'unsigned long':'unsigned long'
|   | | | `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'unsigned long'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'long long'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe02809c7f8 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'long long':'long long'
|   | | | `-SubstTemplateTypeParmType 'long long' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'long long'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'unsigned long long'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe02809d6e8 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'unsigned long long':'unsigned long long'
|   | | | `-SubstTemplateTypeParmType 'unsigned long long' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'unsigned long long'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type '__int128'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe02809e5b8 implicit struct unary_function
|   | | |-TypedefDecl argument_type '__int128':'__int128'
|   | | | `-SubstTemplateTypeParmType '__int128' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType '__int128'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'unsigned __int128'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe02809f488 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'unsigned __int128':'unsigned __int128'
|   | | | `-SubstTemplateTypeParmType 'unsigned __int128' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'unsigned __int128'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'float'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe0280a1a00 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'float':'float'
|   | | | `-SubstTemplateTypeParmType 'float' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'float'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | |-ClassTemplateSpecializationDecl struct unary_function definition
|   | | |-TemplateArgument type 'double'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl prev 0x7fe0280a2f48 implicit struct unary_function
|   | | |-TypedefDecl argument_type 'double':'double'
|   | | | `-SubstTemplateTypeParmType 'double' sugar
|   | | |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm '_Arg'
|   | | |   `-BuiltinType 'double'
|   | | `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 'unsigned long' sugar
|   | |     |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm '_Result'
|   | |     `-BuiltinType 'unsigned long'
|   | `-ClassTemplateSpecializationDecl struct unary_function definition
|   |   |-TemplateArgument type 'long double'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-CXXRecordDecl prev 0x7fe0280a4498 implicit struct unary_function
|   |   |-TypedefDecl argument_type 'long double':'long double'
|   |   | `-SubstTemplateTypeParmType 'long double' sugar
|   |   |   |-TemplateTypeParmType '_Arg' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm '_Arg'
|   |   |   `-BuiltinType 'long double'
|   |   `-TypedefDecl result_type 'unsigned long':'unsigned long'
|   |     `-SubstTemplateTypeParmType 'unsigned long' sugar
|   |       |-TemplateTypeParmType '_Result' dependent depth 0 index 1
|   |       | `-TemplateTypeParm '_Result'
|   |       `-BuiltinType 'unsigned long'
|   |-FunctionTemplateDecl __loadword
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Size
|   | |-FunctionDecl __loadword '_Size (const void *)' inline
|   | | |-ParmVarDecl referenced __p 'const void *'
|   | | |-CompoundStmt
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __r '_Size' nrvo
|   | | | |-CallExpr '<dependent type>'
|   | | | | |-DeclRefExpr 'void *(void *, const void *, size_t)' lvalue Function 0x7fe028900938 'memcpy' 'void *(void *, const void *, size_t)' (UsingShadow 0x7fe028963490 'memcpy')
|   | | | | |-UnaryOperator '<dependent type>' prefix '&'
|   | | | | | `-DeclRefExpr '_Size' lvalue Var 0x7fe0280680d8 '__r' '_Size'
|   | | | | |-DeclRefExpr 'const void *' lvalue ParmVar 0x7fe028067e78 '__p' 'const void *'
|   | | | | `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   | | | |   `-ParenExpr '_Size' lvalue
|   | | | |     `-DeclRefExpr '_Size' lvalue Var 0x7fe0280680d8 '__r' '_Size'
|   | | | `-ReturnStmt
|   | | |   `-DeclRefExpr '_Size' lvalue Var 0x7fe0280680d8 '__r' '_Size'
|   | | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr Hidden
|   | |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:949:1, > used __loadword 'unsigned int (const void *)' inline
|   | | |-TemplateArgument type 'unsigned int'
|   | | |-ParmVarDecl used __p 'const void *'
|   | | |-CompoundStmt
|   | | | |-DeclStmt
|   | | | | `-VarDecl used __r 'unsigned int':'unsigned int'
|   | | | |-CallExpr 'void *'
|   | | | | |-ImplicitCastExpr 'void *(*)(void *, const void *, size_t)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 'void *(void *, const void *, size_t)' lvalue Function 0x7fe028900938 'memcpy' 'void *(void *, const void *, size_t)' (UsingShadow 0x7fe028963490 'memcpy')
|   | | | | |-ImplicitCastExpr 'void *' <BitCast>
|   | | | | | `-UnaryOperator 'unsigned int *' prefix '&'
|   | | | | |   `-DeclRefExpr 'unsigned int':'unsigned int' lvalue Var 0x7fe02899b858 '__r' 'unsigned int':'unsigned int'
|   | | | | |-ImplicitCastExpr 'const void *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 'const void *' lvalue ParmVar 0x7fe028075c88 '__p' 'const void *'
|   | | | | `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   | | | |   `-ParenExpr 'unsigned int':'unsigned int' lvalue
|   | | | |     `-DeclRefExpr 'unsigned int':'unsigned int' lvalue Var 0x7fe02899b858 '__r' 'unsigned int':'unsigned int'
|   | | | `-ReturnStmt
|   | | |   `-ImplicitCastExpr 'unsigned int':'unsigned int' <LValueToRValue>
|   | | |     `-DeclRefExpr 'unsigned int':'unsigned int' lvalue Var 0x7fe02899b858 '__r' 'unsigned int':'unsigned int'
|   | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:949:1, > used __loadword 'unsigned long (const void *)' inline
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-ParmVarDecl used __p 'const void *'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-VarDecl used __r 'unsigned long':'unsigned long'
|   |   | |-CallExpr 'void *'
|   |   | | |-ImplicitCastExpr 'void *(*)(void *, const void *, size_t)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 'void *(void *, const void *, size_t)' lvalue Function 0x7fe028900938 'memcpy' 'void *(void *, const void *, size_t)' (UsingShadow 0x7fe028963490 'memcpy')
|   |   | | |-ImplicitCastExpr 'void *' <BitCast>
|   |   | | | `-UnaryOperator 'unsigned long *' prefix '&'
|   |   | | |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0700 '__r' 'unsigned long':'unsigned long'
|   |   | | |-ImplicitCastExpr 'const void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 'const void *' lvalue ParmVar 0x7fe0290038e0 '__p' 'const void *'
|   |   | | `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   |   | |   `-ParenExpr 'unsigned long':'unsigned long' lvalue
|   |   | |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0700 '__r' 'unsigned long':'unsigned long'
|   |   | `-ReturnStmt
|   |   |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0700 '__r' 'unsigned long':'unsigned long'
|   |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:961:1, > __murmur2_or_cityhash
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Size
|   | |-NonTypeTemplateParmDecl :66:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:961:31 'size_t':'unsigned long' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator :66:22> 'unsigned long' '*'
|   | |     |-UnaryExprOrTypeTraitExpr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:961:33, > 'unsigned long' sizeof '_Size'
|   | |     `-ImplicitCastExpr <<built-in>:66:22> 'unsigned long' <IntegralCast>
|   | |       `-IntegerLiteral 'int' 8
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:962:1, > struct __murmur2_or_cityhash
|   | `-ClassTemplateSpecializationDecl struct __murmur2_or_cityhash definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 64
|   |   |-CXXRecordDecl prev 0x7fe02807def8 implicit struct __murmur2_or_cityhash
|   |   |-CXXMethodDecl used operator() 'unsigned long (const void *, unsigned long)' inline
|   |   | |-ParmVarDecl used __key 'const void *'
|   |   | |-ParmVarDecl used __len 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __s 'const char *' cinit
|   |   | | |   `-CXXStaticCastExpr 'const char *' static_cast<const char *> <BitCast>
|   |   | | |     `-ImplicitCastExpr 'const void *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'const void *' lvalue ParmVar 0x7fe02807e2a0 '__key' 'const void *'
|   |   | | |-IfStmt
|   |   | | | |-<<<NULL>>>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-BinaryOperator '_Bool' '<='
|   |   | | | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | | | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |   `-IntegerLiteral 'int' 32
|   |   | | | |-CompoundStmt
|   |   | | | | `-IfStmt
|   |   | | | |   |-<<<NULL>>>
|   |   | | | |   |-<<<NULL>>>
|   |   | | | |   |-BinaryOperator '_Bool' '<='
|   |   | | | |   | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |   | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | | |   | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |   |   `-IntegerLiteral 'int' 16
|   |   | | | |   |-CompoundStmt
|   |   | | | |   | `-ReturnStmt
|   |   | | | |   |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | |   |     |-ImplicitCastExpr 'unsigned long (*)(const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | | | |   |     | `-DeclRefExpr 'unsigned long (const char *, unsigned long)' lvalue CXXMethod 0x7fe02807f2f0 '__hash_len_0_to_16' 'unsigned long (const char *, unsigned long)'
|   |   | | | |   |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | |   |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |   |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | | |   `-CompoundStmt
|   |   | | | |     `-ReturnStmt
|   |   | | | |       `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | |         |-ImplicitCastExpr 'unsigned long (*)(const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | | | |         | `-DeclRefExpr 'unsigned long (const char *, unsigned long)' lvalue CXXMethod 0x7fe02807f528 '__hash_len_17_to_32' 'unsigned long (const char *, unsigned long)'
|   |   | | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | |         | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | |         `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |           `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | | `-IfStmt
|   |   | | |   |-<<<NULL>>>
|   |   | | |   |-<<<NULL>>>
|   |   | | |   |-BinaryOperator '_Bool' '<='
|   |   | | |   | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |   | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | |   |   `-IntegerLiteral 'int' 64
|   |   | | |   |-CompoundStmt
|   |   | | |   | `-ReturnStmt
|   |   | | |   |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |     |-ImplicitCastExpr 'unsigned long (*)(const char *, size_t)' <FunctionToPointerDecay>
|   |   | | |   |     | `-DeclRefExpr 'unsigned long (const char *, size_t)' lvalue CXXMethod 0x7fe028080aa0 '__hash_len_33_to_64' 'unsigned long (const char *, size_t)'
|   |   | | |   |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |   |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |   `-<<<NULL>>>
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __x 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |       `-BinaryOperator 'const char *' '-'
|   |   | | |         |-BinaryOperator 'const char *' '+'
|   |   | | |         | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |         | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |         | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |         |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |         `-IntegerLiteral 'int' 40
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __y 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '+'
|   |   | | |     |-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     |   `-BinaryOperator 'const char *' '-'
|   |   | | |     |     |-BinaryOperator 'const char *' '+'
|   |   | | |     |     | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |     |     | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |     |     | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |     |     `-IntegerLiteral 'int' 16
|   |   | | |     `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |       |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |       | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |       `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |         `-BinaryOperator 'const char *' '-'
|   |   | | |           |-BinaryOperator 'const char *' '+'
|   |   | | |           | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |           | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |           | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |           `-IntegerLiteral 'int' 56
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __z 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fe02807f070 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | | |     |-BinaryOperator 'unsigned long' '+'
|   |   | | |     | |-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     | | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     | | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     | |   `-BinaryOperator 'const char *' '-'
|   |   | | |     | |     |-BinaryOperator 'const char *' '+'
|   |   | | |     | |     | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |     | |     | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |     | |     | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | |     |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |     | |     `-IntegerLiteral 'int' 48
|   |   | | |     | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |     `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |       |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |       | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |       `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |         `-BinaryOperator 'const char *' '-'
|   |   | | |           |-BinaryOperator 'const char *' '+'
|   |   | | |           | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |           | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |           | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |           `-IntegerLiteral 'int' 24
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __v 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' cinit
|   |   | | |   `-ExprWithCleanups 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | |     `-CXXConstructExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' elidable
|   |   | | |       `-MaterializeTemporaryExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | | |         `-CallExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | |           |-ImplicitCastExpr 'pair<unsigned long, unsigned long> (*)(const char *, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | |           | `-DeclRefExpr 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' lvalue CXXMethod 0x7fe028080828 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)'
|   |   | | |           |-BinaryOperator 'const char *' '-'
|   |   | | |           | |-BinaryOperator 'const char *' '+'
|   |   | | |           | | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |           | | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |           | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           | |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |           | `-IntegerLiteral 'int' 64
|   |   | | |           |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |           `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |             `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029004350 '__z' 'unsigned long':'unsigned long'
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __w 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' cinit
|   |   | | |   `-ExprWithCleanups 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | |     `-CXXConstructExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' elidable
|   |   | | |       `-MaterializeTemporaryExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | | |         `-CallExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | |           |-ImplicitCastExpr 'pair<unsigned long, unsigned long> (*)(const char *, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | |           | `-DeclRefExpr 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' lvalue CXXMethod 0x7fe028080828 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)'
|   |   | | |           |-BinaryOperator 'const char *' '-'
|   |   | | |           | |-BinaryOperator 'const char *' '+'
|   |   | | |           | | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |           | | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |           | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           | |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |           | `-IntegerLiteral 'int' 32
|   |   | | |           |-BinaryOperator 'unsigned long' '+'
|   |   | | |           | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003c70 '__y' 'unsigned long':'unsigned long'
|   |   | | |           | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e6b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | |           `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |             `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | | | `-BinaryOperator 'unsigned long' '+'
|   |   | | |   |-BinaryOperator 'unsigned long' '*'
|   |   | | |   | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | | |   | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e6b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |       `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | | `-BinaryOperator 'unsigned long' '&'
|   |   | | |   |-ParenExpr 'unsigned long'
|   |   | | |   | `-BinaryOperator 'unsigned long' '-'
|   |   | | |   |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |   |   `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | |   |     `-IntegerLiteral 'int' 1
|   |   | | |   `-UnaryOperator 'unsigned long':'unsigned long' prefix '~'
|   |   | | |     `-CXXStaticCastExpr 'unsigned long':'unsigned long' static_cast<unsigned long> <NoOp>
|   |   | | |       `-ImplicitCastExpr 'unsigned long':'unsigned long' <IntegralCast>
|   |   | | |         `-IntegerLiteral 'int' 63
|   |   | | |-DoStmt
|   |   | | | |-CompoundStmt
|   |   | | | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | | `-BinaryOperator 'unsigned long' '*'
|   |   | | | | |   |-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |   | |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | | | |   | | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | | | |   | |-BinaryOperator 'unsigned long' '+'
|   |   | | | | |   | | |-BinaryOperator 'unsigned long' '+'
|   |   | | | | |   | | | |-BinaryOperator 'unsigned long' '+'
|   |   | | | | |   | | | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | |   | | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | | |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | |   | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | |   `-MemberExpr 'unsigned long':'unsigned long' lvalue .first 0x7fe0290050e0
|   |   | | | | |   | | |     `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe029004bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |   | |   |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |   | |   | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | | | |   | |   `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | | | |   | |     `-BinaryOperator 'const char *' '+'
|   |   | | | | |   | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |   | |       | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | | |   | |       `-IntegerLiteral 'int' 8
|   |   | | | | |   | `-IntegerLiteral 'int' 37
|   |   | | | | |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |     `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e6b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | | `-BinaryOperator 'unsigned long' '*'
|   |   | | | | |   |-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |   | |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | | | |   | | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | | | |   | |-BinaryOperator 'unsigned long' '+'
|   |   | | | | |   | | |-BinaryOperator 'unsigned long' '+'
|   |   | | | | |   | | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | |   | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | |   `-MemberExpr 'unsigned long':'unsigned long' lvalue .second 0x7fe029005138
|   |   | | | | |   | | |     `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe029004bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |   | |   |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |   | |   | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | | | |   | |   `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | | | |   | |     `-BinaryOperator 'const char *' '+'
|   |   | | | | |   | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |   | |       | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | | |   | |       `-IntegerLiteral 'int' 48
|   |   | | | | |   | `-IntegerLiteral 'int' 42
|   |   | | | | |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |     `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e6b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   `-MemberExpr 'unsigned long':'unsigned long' lvalue .second 0x7fe029005138
|   |   | | | | |     `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe0280caa38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | | `-BinaryOperator 'unsigned long' '+'
|   |   | | | | |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | `-MemberExpr 'unsigned long':'unsigned long' lvalue .first 0x7fe0290050e0
|   |   | | | | |   |   `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe029004bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | | | |       `-BinaryOperator 'const char *' '+'
|   |   | | | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | | |         `-IntegerLiteral 'int' 40
|   |   | | | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029004350 '__z' 'unsigned long':'unsigned long'
|   |   | | | | | `-BinaryOperator 'unsigned long' '*'
|   |   | | | | |   |-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |   | |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | | | |   | | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | | | |   | |-BinaryOperator 'unsigned long' '+'
|   |   | | | | |   | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029004350 '__z' 'unsigned long':'unsigned long'
|   |   | | | | |   | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | |   `-MemberExpr 'unsigned long':'unsigned long' lvalue .first 0x7fe0290050e0
|   |   | | | | |   | |     `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe0280caa38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   | `-IntegerLiteral 'int' 33
|   |   | | | | |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |     `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e6b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | | | |-ExprWithCleanups 'struct std::__1::pair<unsigned long, unsigned long>' lvalue
|   |   | | | | | `-CXXOperatorCallExpr 'struct std::__1::pair<unsigned long, unsigned long>' lvalue
|   |   | | | | |   |-ImplicitCastExpr 'struct std::__1::pair<unsigned long, unsigned long> &(*)(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)' <FunctionToPointerDecay>
|   |   | | | | |   | `-DeclRefExpr 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)' lvalue CXXMethod 0x7fe0280b9a00 'operator=' 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)'
|   |   | | | | |   |-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe029004bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   `-MaterializeTemporaryExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | | | | |     `-CallExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |       |-ImplicitCastExpr 'pair<unsigned long, unsigned long> (*)(const char *, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | | | |       | `-DeclRefExpr 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' lvalue CXXMethod 0x7fe028080828 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)'
|   |   | | | | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |       | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | | |       |-BinaryOperator 'unsigned long' '*'
|   |   | | | | |       | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       | | `-MemberExpr 'unsigned long':'unsigned long' lvalue .second 0x7fe029005138
|   |   | | | | |       | |   `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe029004bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |       | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e6b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | | | |       `-BinaryOperator 'unsigned long' '+'
|   |   | | | | |         |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | |         `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |           `-MemberExpr 'unsigned long':'unsigned long' lvalue .first 0x7fe0290050e0
|   |   | | | | |             `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe0280caa38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |-ExprWithCleanups 'struct std::__1::pair<unsigned long, unsigned long>' lvalue
|   |   | | | | | `-CXXOperatorCallExpr 'struct std::__1::pair<unsigned long, unsigned long>' lvalue
|   |   | | | | |   |-ImplicitCastExpr 'struct std::__1::pair<unsigned long, unsigned long> &(*)(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)' <FunctionToPointerDecay>
|   |   | | | | |   | `-DeclRefExpr 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)' lvalue CXXMethod 0x7fe0280b9a00 'operator=' 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)'
|   |   | | | | |   |-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe0280caa38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   `-MaterializeTemporaryExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | | | | |     `-CallExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |       |-ImplicitCastExpr 'pair<unsigned long, unsigned long> (*)(const char *, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | | | |       | `-DeclRefExpr 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' lvalue CXXMethod 0x7fe028080828 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)'
|   |   | | | | |       |-BinaryOperator 'const char *' '+'
|   |   | | | | |       | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |       | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | | |       | `-IntegerLiteral 'int' 32
|   |   | | | | |       |-BinaryOperator 'unsigned long' '+'
|   |   | | | | |       | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029004350 '__z' 'unsigned long':'unsigned long'
|   |   | | | | |       | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       |   `-MemberExpr 'unsigned long':'unsigned long' lvalue .second 0x7fe029005138
|   |   | | | | |       |     `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe0280caa38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |       `-BinaryOperator 'unsigned long' '+'
|   |   | | | | |         |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | |         `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |           |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |           | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | | | |           `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | | | |             `-BinaryOperator 'const char *' '+'
|   |   | | | | |               |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |               | `-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | | |               `-IntegerLiteral 'int' 16
|   |   | | | | |-CallExpr 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type':'void'
|   |   | | | | | |-ImplicitCastExpr 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type (*)(unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)' <FunctionToPointerDecay>
|   |   | | | | | | `-DeclRefExpr 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type (unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)' lvalue Function 0x7fe028997020 'swap' 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type (unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)' (FunctionTemplate 0x7fe028896d38 'swap')
|   |   | | | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029004350 '__z' 'unsigned long':'unsigned long'
|   |   | | | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | |-CompoundAssignOperator 'const char *' lvalue '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | | | | | |-DeclRefExpr 'const char *' lvalue Var 0x7fe029002da8 '__s' 'const char *'
|   |   | | | | | `-IntegerLiteral 'int' 64
|   |   | | | | `-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |   |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | | |   `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |     `-IntegerLiteral 'int' 64
|   |   | | | `-BinaryOperator '_Bool' '!='
|   |   | | |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e310 '__len' 'unsigned long':'unsigned long'
|   |   | | |   `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 'int' 0
|   |   | | `-ReturnStmt
|   |   | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | |     |-ImplicitCastExpr 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fe02807f070 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | |     |-BinaryOperator 'unsigned long' '+'
|   |   | |     | |-BinaryOperator 'unsigned long' '+'
|   |   | |     | | |-CallExpr 'unsigned long':'unsigned long'
|   |   | |     | | | |-ImplicitCastExpr 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |     | | | | `-DeclRefExpr 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fe02807f070 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | |     | | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | | | | `-MemberExpr 'unsigned long':'unsigned long' lvalue .first 0x7fe0290050e0
|   |   | |     | | | |   `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe029004bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |     | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | | |   `-MemberExpr 'unsigned long':'unsigned long' lvalue .first 0x7fe0290050e0
|   |   | |     | | |     `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe0280caa38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |     | | `-BinaryOperator 'unsigned long' '*'
|   |   | |     | |   |-CallExpr 'unsigned long':'unsigned long'
|   |   | |     | |   | |-ImplicitCastExpr 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   | |     | |   | | `-DeclRefExpr 'unsigned long (unsigned long)' lvalue CXXMethod 0x7fe02807ee30 '__shift_mix' 'unsigned long (unsigned long)'
|   |   | |     | |   | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | |   |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003c70 '__y' 'unsigned long':'unsigned long'
|   |   | |     | |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | |     `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e6b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | |     | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029004350 '__z' 'unsigned long':'unsigned long'
|   |   | |     `-BinaryOperator 'unsigned long' '+'
|   |   | |       |-CallExpr 'unsigned long':'unsigned long'
|   |   | |       | |-ImplicitCastExpr 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |       | | `-DeclRefExpr 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fe02807f070 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | |       | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       | | `-MemberExpr 'unsigned long':'unsigned long' lvalue .second 0x7fe029005138
|   |   | |       | |   `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe029004bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |       | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       |   `-MemberExpr 'unsigned long':'unsigned long' lvalue .second 0x7fe029005138
|   |   | |       |     `-DeclRefExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fe0280caa38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |       `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |         `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe029003610 '__x' 'unsigned long':'unsigned long'
|   |   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> Inherited unsigned-integer-overflow
|   |   |-AccessSpecDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1010:2, > private
|   |   |-VarDecl referenced __k0 'const unsigned long':'const unsigned long' static cinit
|   |   | `-ImplicitCastExpr 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 'unsigned long long' 14097894508562428199
|   |   |-VarDecl referenced __k1 'const unsigned long':'const unsigned long' static cinit
|   |   | `-ImplicitCastExpr 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 'unsigned long long' 13011662864482103923
|   |   |-VarDecl referenced __k2 'const unsigned long':'const unsigned long' static cinit
|   |   | `-ImplicitCastExpr 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 'unsigned long long' 11160318154034397263
|   |   |-VarDecl referenced __k3 'const unsigned long':'const unsigned long' static cinit
|   |   | `-ImplicitCastExpr 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 'unsigned long long' 14504361325974414679
|   |   |-CXXMethodDecl used __rotate 'unsigned long (unsigned long, int)' static
|   |   | |-ParmVarDecl used __val 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __shift 'int'
|   |   | `-CompoundStmt
|   |   |   `-ReturnStmt
|   |   |     `-ConditionalOperator 'unsigned long':'unsigned long'
|   |   |       |-BinaryOperator '_Bool' '=='
|   |   |       | |-ImplicitCastExpr 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02807e9e0 '__shift' 'int'
|   |   |       | `-IntegerLiteral 'int' 0
|   |   |       |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |       | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e980 '__val' 'unsigned long':'unsigned long'
|   |   |       `-ParenExpr 'unsigned long'
|   |   |         `-BinaryOperator 'unsigned long' '|'
|   |   |           |-ParenExpr 'unsigned long':'unsigned long'
|   |   |           | `-BinaryOperator 'unsigned long':'unsigned long' '>>'
|   |   |           |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |           |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e980 '__val' 'unsigned long':'unsigned long'
|   |   |           |   `-ImplicitCastExpr 'int' <LValueToRValue>
|   |   |           |     `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02807e9e0 '__shift' 'int'
|   |   |           `-ParenExpr 'unsigned long':'unsigned long'
|   |   |             `-BinaryOperator 'unsigned long':'unsigned long' '<<'
|   |   |               |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |               | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807e980 '__val' 'unsigned long':'unsigned long'
|   |   |               `-ParenExpr 'int'
|   |   |                 `-BinaryOperator 'int' '-'
|   |   |                   |-IntegerLiteral 'int' 64
|   |   |                   `-ImplicitCastExpr 'int' <LValueToRValue>
|   |   |                     `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02807e9e0 '__shift' 'int'
|   |   |-CXXMethodDecl used __rotate_by_at_least_1 'unsigned long (unsigned long, int)' static
|   |   | |-ParmVarDecl used __val 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __shift 'int'
|   |   | `-CompoundStmt
|   |   |   `-ReturnStmt
|   |   |     `-BinaryOperator 'unsigned long' '|'
|   |   |       |-ParenExpr 'unsigned long':'unsigned long'
|   |   |       | `-BinaryOperator 'unsigned long':'unsigned long' '>>'
|   |   |       |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807ebb8 '__val' 'unsigned long':'unsigned long'
|   |   |       |   `-ImplicitCastExpr 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02807ec18 '__shift' 'int'
|   |   |       `-ParenExpr 'unsigned long':'unsigned long'
|   |   |         `-BinaryOperator 'unsigned long':'unsigned long' '<<'
|   |   |           |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |           | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807ebb8 '__val' 'unsigned long':'unsigned long'
|   |   |           `-ParenExpr 'int'
|   |   |             `-BinaryOperator 'int' '-'
|   |   |               |-IntegerLiteral 'int' 64
|   |   |               `-ImplicitCastExpr 'int' <LValueToRValue>
|   |   |                 `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02807ec18 '__shift' 'int'
|   |   |-CXXMethodDecl used __shift_mix 'unsigned long (unsigned long)' static
|   |   | |-ParmVarDecl used __val 'unsigned long':'unsigned long'
|   |   | `-CompoundStmt
|   |   |   `-ReturnStmt
|   |   |     `-BinaryOperator 'unsigned long' '^'
|   |   |       |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |       | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807ed70 '__val' 'unsigned long':'unsigned long'
|   |   |       `-ParenExpr 'unsigned long':'unsigned long'
|   |   |         `-BinaryOperator 'unsigned long':'unsigned long' '>>'
|   |   |           |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |           | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807ed70 '__val' 'unsigned long':'unsigned long'
|   |   |           `-IntegerLiteral 'int' 47
|   |   |-CXXMethodDecl used __hash_len_16 'unsigned long (unsigned long, unsigned long)' static
|   |   | |-ParmVarDecl used __u 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __v 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl referenced __mul 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-ImplicitCastExpr 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 'unsigned long long' 11376068507788127593
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __a 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '*'
|   |   | | |     |-ParenExpr 'unsigned long'
|   |   | | |     | `-BinaryOperator 'unsigned long' '^'
|   |   | | |     |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807eef0 '__u' 'unsigned long':'unsigned long'
|   |   | | |     |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807ef60 '__v' 'unsigned long':'unsigned long'
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe0289a09b0 '__mul' 'const unsigned long':'const unsigned long'
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0aa8 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-ParenExpr 'unsigned long':'unsigned long'
|   |   | | |   `-BinaryOperator 'unsigned long':'unsigned long' '>>'
|   |   | | |     |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0aa8 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-IntegerLiteral 'int' 47
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __b 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '*'
|   |   | | |     |-ParenExpr 'unsigned long'
|   |   | | |     | `-BinaryOperator 'unsigned long' '^'
|   |   | | |     |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807ef60 '__v' 'unsigned long':'unsigned long'
|   |   | | |     |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0aa8 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe0289a09b0 '__mul' 'const unsigned long':'const unsigned long'
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0d48 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-ParenExpr 'unsigned long':'unsigned long'
|   |   | | |   `-BinaryOperator 'unsigned long':'unsigned long' '>>'
|   |   | | |     |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0d48 '__b' 'unsigned long':'unsigned long'
|   |   | | |     `-IntegerLiteral 'int' 47
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '*=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0d48 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe0289a09b0 '__mul' 'const unsigned long':'const unsigned long'
|   |   | | `-ReturnStmt
|   |   | |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a0d48 '__b' 'unsigned long':'unsigned long'
|   |   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1041:3, > used __hash_len_0_to_16 'unsigned long (const char *, unsigned long)' static
|   |   | |-ParmVarDecl used __s 'const char *'
|   |   | |-ParmVarDecl used __len 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt
|   |   | | |-IfStmt
|   |   | | | |-<<<NULL>>>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-BinaryOperator '_Bool' '>'
|   |   | | | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |   `-IntegerLiteral 'int' 8
|   |   | | | |-CompoundStmt
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __a 'const unsigned long':'const unsigned long' cinit
|   |   | | | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | | | |       `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |         `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f1a8 '__s' 'const char *'
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __b 'const unsigned long':'const unsigned long' cinit
|   |   | | | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | | | |       `-BinaryOperator 'const char *' '-'
|   |   | | | | |         |-BinaryOperator 'const char *' '+'
|   |   | | | | |         | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |         | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f1a8 '__s' 'const char *'
|   |   | | | | |         | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |         |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |         `-IntegerLiteral 'int' 8
|   |   | | | | `-ReturnStmt
|   |   | | | |   `-BinaryOperator 'unsigned long' '^'
|   |   | | | |     |-CallExpr 'unsigned long':'unsigned long'
|   |   | | | |     | |-ImplicitCastExpr 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | | |     | | `-DeclRefExpr 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fe02807f070 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | | | |     | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     | | `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe0289994e0 '__a' 'const unsigned long':'const unsigned long'
|   |   | | | |     | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | |     |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | | |     |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eca8 '__rotate_by_at_least_1' 'unsigned long (unsigned long, int)'
|   |   | | | |     |   |-BinaryOperator 'unsigned long' '+'
|   |   | | | |     |   | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |   | | `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe028999848 '__b' 'const unsigned long':'const unsigned long'
|   |   | | | |     |   | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |   |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | |     |   `-ImplicitCastExpr 'int' <IntegralCast>
|   |   | | | |     |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe028999848 '__b' 'const unsigned long':'const unsigned long'
|   |   | | | `-<<<NULL>>>
|   |   | | |-IfStmt
|   |   | | | |-<<<NULL>>>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-BinaryOperator '_Bool' '>='
|   |   | | | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |   `-IntegerLiteral 'int' 4
|   |   | | | |-CompoundStmt
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __a 'const uint32_t':'const unsigned int' cinit
|   |   | | | | |   `-CallExpr 'unsigned int':'unsigned int'
|   |   | | | | |     |-ImplicitCastExpr 'unsigned int (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 'unsigned int (const void *)' lvalue Function 0x7fe028075d90 '__loadword' 'unsigned int (const void *)'
|   |   | | | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | | | |       `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |         `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f1a8 '__s' 'const char *'
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __b 'const uint32_t':'const unsigned int' cinit
|   |   | | | | |   `-CallExpr 'unsigned int':'unsigned int'
|   |   | | | | |     |-ImplicitCastExpr 'unsigned int (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 'unsigned int (const void *)' lvalue Function 0x7fe028075d90 '__loadword' 'unsigned int (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | | | |       `-BinaryOperator 'const char *' '-'
|   |   | | | | |         |-BinaryOperator 'const char *' '+'
|   |   | | | | |         | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |         | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f1a8 '__s' 'const char *'
|   |   | | | | |         | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |         |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |         `-IntegerLiteral 'int' 4
|   |   | | | | `-ReturnStmt
|   |   | | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | | |     |-ImplicitCastExpr 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | | |     | `-DeclRefExpr 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fe02807f070 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | | | |     |-BinaryOperator 'unsigned long' '+'
|   |   | | | |     | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | |     | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |     |   `-ParenExpr 'uint32_t':'unsigned int'
|   |   | | | |     |     `-BinaryOperator 'uint32_t':'unsigned int' '<<'
|   |   | | | |     |       |-ImplicitCastExpr 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | | | |     |       | `-DeclRefExpr 'const uint32_t':'const unsigned int' lvalue Var 0x7fe02899a020 '__a' 'const uint32_t':'const unsigned int'
|   |   | | | |     |       `-IntegerLiteral 'int' 3
|   |   | | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <IntegralCast>
|   |   | | | |       `-ImplicitCastExpr 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | | | |         `-DeclRefExpr 'const uint32_t':'const unsigned int' lvalue Var 0x7fe02899a1b8 '__b' 'const uint32_t':'const unsigned int'
|   |   | | | `-<<<NULL>>>
|   |   | | |-IfStmt
|   |   | | | |-<<<NULL>>>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-BinaryOperator '_Bool' '>'
|   |   | | | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | | `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |   `-IntegerLiteral 'int' 0
|   |   | | | |-CompoundStmt
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __a 'const unsigned char' cinit
|   |   | | | | |   `-ImplicitCastExpr 'const unsigned char' <IntegralCast>
|   |   | | | | |     `-ImplicitCastExpr 'char' <LValueToRValue>
|   |   | | | | |       `-ArraySubscriptExpr 'const char' lvalue
|   |   | | | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f1a8 '__s' 'const char *'
|   |   | | | | |         `-IntegerLiteral 'int' 0
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __b 'const unsigned char' cinit
|   |   | | | | |   `-ImplicitCastExpr 'const unsigned char' <IntegralCast>
|   |   | | | | |     `-ImplicitCastExpr 'char' <LValueToRValue>
|   |   | | | | |       `-ArraySubscriptExpr 'const char' lvalue
|   |   | | | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f1a8 '__s' 'const char *'
|   |   | | | | |         `-BinaryOperator 'unsigned long':'unsigned long' '>>'
|   |   | | | | |           |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |           | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |           `-IntegerLiteral 'int' 1
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __c 'const unsigned char' cinit
|   |   | | | | |   `-ImplicitCastExpr 'const unsigned char' <IntegralCast>
|   |   | | | | |     `-ImplicitCastExpr 'char' <LValueToRValue>
|   |   | | | | |       `-ArraySubscriptExpr 'const char' lvalue
|   |   | | | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f1a8 '__s' 'const char *'
|   |   | | | | |         `-BinaryOperator 'unsigned long' '-'
|   |   | | | | |           |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |           | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |           `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | | |             `-IntegerLiteral 'int' 1
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __y 'const uint32_t':'const unsigned int' cinit
|   |   | | | | |   `-BinaryOperator 'unsigned int' '+'
|   |   | | | | |     |-CXXStaticCastExpr 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   |   | | | | |     | `-ImplicitCastExpr 'uint32_t':'unsigned int' <IntegralCast>
|   |   | | | | |     |   `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   |   | | | | |     |     `-DeclRefExpr 'const unsigned char' lvalue Var 0x7fe02899a8c0 '__a' 'const unsigned char'
|   |   | | | | |     `-ParenExpr 'uint32_t':'unsigned int'
|   |   | | | | |       `-BinaryOperator 'uint32_t':'unsigned int' '<<'
|   |   | | | | |         |-CXXStaticCastExpr 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   |   | | | | |         | `-ImplicitCastExpr 'uint32_t':'unsigned int' <IntegralCast>
|   |   | | | | |         |   `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   |   | | | | |         |     `-DeclRefExpr 'const unsigned char' lvalue Var 0x7fe02899aa28 '__b' 'const unsigned char'
|   |   | | | | |         `-IntegerLiteral 'int' 8
|   |   | | | | |-DeclStmt
|   |   | | | | | `-VarDecl used __z 'const uint32_t':'const unsigned int' cinit
|   |   | | | | |   `-ImplicitCastExpr 'const uint32_t':'const unsigned int' <IntegralCast>
|   |   | | | | |     `-BinaryOperator 'unsigned long' '+'
|   |   | | | | |       |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f218 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |       `-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | | |         `-ParenExpr 'uint32_t':'unsigned int'
|   |   | | | | |           `-BinaryOperator 'uint32_t':'unsigned int' '<<'
|   |   | | | | |             |-CXXStaticCastExpr 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   |   | | | | |             | `-ImplicitCastExpr 'uint32_t':'unsigned int' <IntegralCast>
|   |   | | | | |             |   `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   |   | | | | |             |     `-DeclRefExpr 'const unsigned char' lvalue Var 0x7fe02899abf8 '__c' 'const unsigned char'
|   |   | | | | |             `-IntegerLiteral 'int' 2
|   |   | | | | `-ReturnStmt
|   |   | | | |   `-BinaryOperator 'unsigned long' '*'
|   |   | | | |     |-CallExpr 'unsigned long':'unsigned long'
|   |   | | | |     | |-ImplicitCastExpr 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   | | | |     | | `-DeclRefExpr 'unsigned long (unsigned long)' lvalue CXXMethod 0x7fe02807ee30 '__shift_mix' 'unsigned long (unsigned long)'
|   |   | | | |     | `-BinaryOperator 'unsigned long' '^'
|   |   | | | |     |   |-BinaryOperator 'unsigned long' '*'
|   |   | | | |     |   | |-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |     |   | | `-ImplicitCastExpr 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | | | |     |   | |   `-DeclRefExpr 'const uint32_t':'const unsigned int' lvalue Var 0x7fe02899ade0 '__y' 'const uint32_t':'const unsigned int'
|   |   | | | |     |   | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |   |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e7a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | | | |     |   `-BinaryOperator 'unsigned long' '*'
|   |   | | | |     |     |-ImplicitCastExpr 'unsigned long' <IntegralCast>
|   |   | | | |     |     | `-ImplicitCastExpr 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | | | |     |     |   `-DeclRefExpr 'const uint32_t':'const unsigned int' lvalue Var 0x7fe02899b030 '__z' 'const uint32_t':'const unsigned int'
|   |   | | | |     |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e890 '__k3' 'const unsigned long':'const unsigned long'
|   |   | | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e7a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | | | `-<<<NULL>>>
|   |   | | `-ReturnStmt
|   |   | |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e7a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1066:3, > used __hash_len_17_to_32 'unsigned long (const char *, unsigned long)' static
|   |   | |-ParmVarDecl used __s 'const char *'
|   |   | |-ParmVarDecl used __len 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __a 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '*'
|   |   | | |     |-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     |   `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |     |     `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f428 '__s' 'const char *'
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e6b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __b 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |       `-BinaryOperator 'const char *' '+'
|   |   | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |         | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f428 '__s' 'const char *'
|   |   | | |         `-IntegerLiteral 'int' 8
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __c 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '*'
|   |   | | |     |-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     |   `-BinaryOperator 'const char *' '-'
|   |   | | |     |     |-BinaryOperator 'const char *' '+'
|   |   | | |     |     | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |     |     | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f428 '__s' 'const char *'
|   |   | | |     |     | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f498 '__len' 'unsigned long':'unsigned long'
|   |   | | |     |     `-IntegerLiteral 'int' 8
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e7a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __d 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '*'
|   |   | | |     |-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     |   `-BinaryOperator 'const char *' '-'
|   |   | | |     |     |-BinaryOperator 'const char *' '+'
|   |   | | |     |     | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |     |     | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02807f428 '__s' 'const char *'
|   |   | | |     |     | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f498 '__len' 'unsigned long':'unsigned long'
|   |   | | |     |     `-IntegerLiteral 'int' 16
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e5c0 '__k0' 'const unsigned long':'const unsigned long'
|   |   | | `-ReturnStmt
|   |   | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | |     |-ImplicitCastExpr 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fe02807f070 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | |     |-BinaryOperator 'unsigned long' '+'
|   |   | |     | |-BinaryOperator 'unsigned long' '+'
|   |   | |     | | |-CallExpr 'unsigned long':'unsigned long'
|   |   | |     | | | |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | |     | | | | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | |     | | | |-BinaryOperator 'unsigned long' '-'
|   |   | |     | | | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | | | | | `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02899bbb8 '__a' 'const unsigned long':'const unsigned long'
|   |   | |     | | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | | | |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02899bf88 '__b' 'const unsigned long':'const unsigned long'
|   |   | |     | | | `-IntegerLiteral 'int' 43
|   |   | |     | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | |     | |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | |     | |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | |     | |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | |   | `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02899c318 '__c' 'const unsigned long':'const unsigned long'
|   |   | |     | |   `-IntegerLiteral 'int' 30
|   |   | |     | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02899c778 '__d' 'const unsigned long':'const unsigned long'
|   |   | |     `-BinaryOperator 'unsigned long' '+'
|   |   | |       |-BinaryOperator 'unsigned long' '-'
|   |   | |       | |-BinaryOperator 'unsigned long' '+'
|   |   | |       | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       | | | `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02899bbb8 '__a' 'const unsigned long':'const unsigned long'
|   |   | |       | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | |       | |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | |       | |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | |       | |   |-BinaryOperator 'unsigned long' '^'
|   |   | |       | |   | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       | |   | | `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02899bf88 '__b' 'const unsigned long':'const unsigned long'
|   |   | |       | |   | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       | |   |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e890 '__k3' 'const unsigned long':'const unsigned long'
|   |   | |       | |   `-IntegerLiteral 'int' 20
|   |   | |       | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02899c318 '__c' 'const unsigned long':'const unsigned long'
|   |   | |       `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |         `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f498 '__len' 'unsigned long':'unsigned long'
|   |   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1079:3, > used __weak_hash_len_32_with_seeds 'pair<unsigned long, unsigned long> (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)' static
|   |   | |-ParmVarDecl used __w 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __x 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __y 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __z 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __a 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __b 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f9e0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f820 '__w' 'unsigned long':'unsigned long'
|   |   | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807fa50 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-BinaryOperator 'unsigned long' '+'
|   |   | | |   | |-BinaryOperator 'unsigned long' '+'
|   |   | | |   | | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807fa50 '__b' 'unsigned long':'unsigned long'
|   |   | | |   | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f9e0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f970 '__z' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 'int' 21
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __c 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f9e0 '__a' 'unsigned long':'unsigned long'
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f9e0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f890 '__x' 'unsigned long':'unsigned long'
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f9e0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f900 '__y' 'unsigned long':'unsigned long'
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807fa50 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f9e0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 'int' 44
|   |   | | `-ReturnStmt
|   |   | |   `-ExprWithCleanups 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |     `-CXXConstructExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' elidable
|   |   | |       `-MaterializeTemporaryExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | |         `-CXXTemporaryObjectExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (unsigned long &&, unsigned long &&)'
|   |   | |           |-MaterializeTemporaryExpr 'unsigned long':'unsigned long' xvalue
|   |   | |           | `-BinaryOperator 'unsigned long' '+'
|   |   | |           |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |           |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f9e0 '__a' 'unsigned long':'unsigned long'
|   |   | |           |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |           |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807f970 '__z' 'unsigned long':'unsigned long'
|   |   | |           `-MaterializeTemporaryExpr 'unsigned long':'unsigned long' xvalue
|   |   | |             `-BinaryOperator 'unsigned long' '+'
|   |   | |               |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |               | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe02807fa50 '__b' 'unsigned long':'unsigned long'
|   |   | |               `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |                 `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe0289a3a50 '__c' 'const unsigned long':'const unsigned long'
|   |   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1093:3, > used __weak_hash_len_32_with_seeds 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' static
|   |   | |-ParmVarDecl used __s 'const char *'
|   |   | |-ParmVarDecl used __a 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl used __b 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt
|   |   | | `-ReturnStmt
|   |   | |   `-ExprWithCleanups 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |     `-CXXConstructExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' elidable
|   |   | |       `-MaterializeTemporaryExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | |         `-CallExpr 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |           |-ImplicitCastExpr 'pair<unsigned long, unsigned long> (*)(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |           | `-DeclRefExpr 'pair<unsigned long, unsigned long> (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)' lvalue CXXMethod 0x7fe028080400 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)'
|   |   | |           |-CallExpr 'unsigned long':'unsigned long'
|   |   | |           | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | |           | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | |           | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | |           |   `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |           |     `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe0280805e0 '__s' 'const char *'
|   |   | |           |-CallExpr 'unsigned long':'unsigned long'
|   |   | |           | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | |           | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | |           | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | |           |   `-BinaryOperator 'const char *' '+'
|   |   | |           |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |           |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe0280805e0 '__s' 'const char *'
|   |   | |           |     `-IntegerLiteral 'int' 8
|   |   | |           |-CallExpr 'unsigned long':'unsigned long'
|   |   | |           | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | |           | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | |           | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | |           |   `-BinaryOperator 'const char *' '+'
|   |   | |           |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |           |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe0280805e0 '__s' 'const char *'
|   |   | |           |     `-IntegerLiteral 'int' 16
|   |   | |           |-CallExpr 'unsigned long':'unsigned long'
|   |   | |           | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | |           | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | |           | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | |           |   `-BinaryOperator 'const char *' '+'
|   |   | |           |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |           |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe0280805e0 '__s' 'const char *'
|   |   | |           |     `-IntegerLiteral 'int' 24
|   |   | |           |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |           | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe028080650 '__a' 'unsigned long':'unsigned long'
|   |   | |           `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |             `-DeclRefExpr 'unsigned long':'unsigned long' lvalue ParmVar 0x7fe0280806c0 '__b' 'unsigned long':'unsigned long'
|   |   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1106:3, > used __hash_len_33_to_64 'unsigned long (const char *, size_t)' static
|   |   | |-ParmVarDecl used __s 'const char *'
|   |   | |-ParmVarDecl used __len 'size_t':'unsigned long'
|   |   | |-CompoundStmt
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __z 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |       `-BinaryOperator 'const char *' '+'
|   |   | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |         | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |         `-IntegerLiteral 'int' 24
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __a 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '+'
|   |   | | |     |-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     |   `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |     |     `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |     `-BinaryOperator 'unsigned long' '*'
|   |   | | |       |-ParenExpr 'unsigned long'
|   |   | | |       | `-BinaryOperator 'unsigned long' '+'
|   |   | | |       |   |-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |   | `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe0280809c8 '__len' 'size_t':'unsigned long'
|   |   | | |       |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |       |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |       |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |       |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |       |       `-BinaryOperator 'const char *' '-'
|   |   | | |       |         |-BinaryOperator 'const char *' '+'
|   |   | | |       |         | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |       |         | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |       |         | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |         |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe0280809c8 '__len' 'size_t':'unsigned long'
|   |   | | |       |         `-IntegerLiteral 'int' 16
|   |   | | |       `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e5c0 '__k0' 'const unsigned long':'const unsigned long'
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __b 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |     |-BinaryOperator 'unsigned long' '+'
|   |   | | |     | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d168 '__z' 'unsigned long':'unsigned long'
|   |   | | |     `-IntegerLiteral 'int' 52
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __c 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |     |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-IntegerLiteral 'int' 37
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 'const char *' '+'
|   |   | | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |       `-IntegerLiteral 'int' 8
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899dd88 '__c' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 'int' 7
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 'const char *' '+'
|   |   | | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |       `-IntegerLiteral 'int' 16
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __vf 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '+'
|   |   | | |     |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d168 '__z' 'unsigned long':'unsigned long'
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __vs 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '+'
|   |   | | |     |-BinaryOperator 'unsigned long' '+'
|   |   | | |     | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899dbe0 '__b' 'unsigned long':'unsigned long'
|   |   | | |     | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |     |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |     |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     |   `-IntegerLiteral 'int' 31
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899dd88 '__c' 'unsigned long':'unsigned long'
|   |   | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-BinaryOperator 'unsigned long' '+'
|   |   | | |   |-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   | |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |   | `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |   |   `-BinaryOperator 'const char *' '+'
|   |   | | |   |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |   |     `-IntegerLiteral 'int' 16
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |       `-BinaryOperator 'const char *' '-'
|   |   | | |         |-BinaryOperator 'const char *' '+'
|   |   | | |         | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |         | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |         | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |         |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe0280809c8 '__len' 'size_t':'unsigned long'
|   |   | | |         `-IntegerLiteral 'int' 32
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d168 '__z' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 'const char *' '-'
|   |   | | |       |-BinaryOperator 'const char *' '+'
|   |   | | |       | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |       | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |       | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe0280809c8 '__len' 'size_t':'unsigned long'
|   |   | | |       `-IntegerLiteral 'int' 8
|   |   | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899dbe0 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-BinaryOperator 'unsigned long' '+'
|   |   | | |   | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d168 '__z' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 'int' 52
|   |   | | |-BinaryOperator 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899dd88 '__c' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 'int' 37
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 'const char *' '-'
|   |   | | |       |-BinaryOperator 'const char *' '+'
|   |   | | |       | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |       | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |       | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe0280809c8 '__len' 'size_t':'unsigned long'
|   |   | | |       `-IntegerLiteral 'int' 24
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899dd88 '__c' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 'int' 7
|   |   | | |-CompoundAssignOperator 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 'unsigned long (const void *)' lvalue Function 0x7fe0290039e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 'const char *' '-'
|   |   | | |       |-BinaryOperator 'const char *' '+'
|   |   | | |       | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | | |       | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028080968 '__s' 'const char *'
|   |   | | |       | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe0280809c8 '__len' 'size_t':'unsigned long'
|   |   | | |       `-IntegerLiteral 'int' 16
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __wf 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '+'
|   |   | | |     |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d168 '__z' 'unsigned long':'unsigned long'
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __ws 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 'unsigned long' '+'
|   |   | | |     |-BinaryOperator 'unsigned long' '+'
|   |   | | |     | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899dbe0 '__b' 'unsigned long':'unsigned long'
|   |   | | |     | `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |   |-ImplicitCastExpr 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |     |   | `-DeclRefExpr 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fe02807eaf0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |     |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899d4a0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     |   `-IntegerLiteral 'int' 31
|   |   | | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899dd88 '__c' 'unsigned long':'unsigned long'
|   |   | | |-DeclStmt
|   |   | | | `-VarDecl used __r 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 'unsigned long (unsigned long)' lvalue CXXMethod 0x7fe02807ee30 '__shift_mix' 'unsigned long (unsigned long)'
|   |   | | |     `-BinaryOperator 'unsigned long' '+'
|   |   | | |       |-BinaryOperator 'unsigned long' '*'
|   |   | | |       | |-ParenExpr 'unsigned long'
|   |   | | |       | | `-BinaryOperator 'unsigned long' '+'
|   |   | | |       | |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       | |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899e600 '__vf' 'unsigned long':'unsigned long'
|   |   | | |       | |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       | |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899feb8 '__ws' 'unsigned long':'unsigned long'
|   |   | | |       | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e7a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | | |       `-BinaryOperator 'unsigned long' '*'
|   |   | | |         |-ParenExpr 'unsigned long'
|   |   | | |         | `-BinaryOperator 'unsigned long' '+'
|   |   | | |         |   |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |         |   | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899fd88 '__wf' 'unsigned long':'unsigned long'
|   |   | | |         |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |         |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899e730 '__vs' 'unsigned long':'unsigned long'
|   |   | | |         `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e5c0 '__k0' 'const unsigned long':'const unsigned long'
|   |   | | `-ReturnStmt
|   |   | |   `-BinaryOperator 'unsigned long' '*'
|   |   | |     |-CallExpr 'unsigned long':'unsigned long'
|   |   | |     | |-ImplicitCastExpr 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 'unsigned long (unsigned long)' lvalue CXXMethod 0x7fe02807ee30 '__shift_mix' 'unsigned long (unsigned long)'
|   |   | |     | `-BinaryOperator 'unsigned long' '+'
|   |   | |     |   |-BinaryOperator 'unsigned long' '*'
|   |   | |     |   | |-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |   | | `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe0289a00c8 '__r' 'unsigned long':'unsigned long'
|   |   | |     |   | `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e5c0 '__k0' 'const unsigned long':'const unsigned long'
|   |   | |     |   `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 'unsigned long':'unsigned long' lvalue Var 0x7fe02899e730 '__vs' 'unsigned long':'unsigned long'
|   |   | |     `-ImplicitCastExpr 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       `-DeclRefExpr 'const unsigned long':'const unsigned long' lvalue Var 0x7fe02807e7a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1006:8> implicit referenced constexpr __murmur2_or_cityhash 'void (void) noexcept' inline default trivial
|   |   |-CXXConstructorDecl implicit constexpr __murmur2_or_cityhash 'void (const struct std::__1::__murmur2_or_cityhash<unsigned long, 64> &)' inline default trivial noexcept-unevaluated 0x7fe028080d28
|   |   | `-ParmVarDecl 'const struct std::__1::__murmur2_or_cityhash<unsigned long, 64> &'
|   |   |-CXXConstructorDecl implicit constexpr __murmur2_or_cityhash 'void (struct std::__1::__murmur2_or_cityhash<unsigned long, 64> &&)' inline default trivial noexcept-unevaluated 0x7fe028080ee8
|   |   | `-ParmVarDecl 'struct std::__1::__murmur2_or_cityhash<unsigned long, 64> &&'
|   |   `-CXXDestructorDecl implicit referenced ~__murmur2_or_cityhash 'void (void) noexcept' inline default trivial
|   |-ClassTemplatePartialSpecializationDecl struct __murmur2_or_cityhash definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 32
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Size
|   | |-CXXRecordDecl implicit struct __murmur2_or_cityhash
|   | `-CXXMethodDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:967:18 operator() '_Size (const void *, _Size)' inline
|   |   |-ParmVarDecl __key 'const void *'
|   |   |-ParmVarDecl __len '_Size'
|   |   `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, > unsigned-integer-overflow
|   |-CXXMethodDecl parent 0x7fe0280689c0 prev 0x7fe028068f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:972:1, > operator() '_Size (const void *, _Size)'
|   | |-ParmVarDecl referenced __key 'const void *'
|   | |-ParmVarDecl referenced __len '_Size'
|   | |-CompoundStmt
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __m 'const _Size' cinit
|   | | |   `-IntegerLiteral 'int' 1540483477
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __r 'const _Size' cinit
|   | | |   `-IntegerLiteral 'int' 24
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __h '_Size' nrvo cinit
|   | | |   `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe0280693e8 '__len' '_Size'
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __data 'const unsigned char *' cinit
|   | | |   `-CXXStaticCastExpr 'const unsigned char *' static_cast<const unsigned char *> <BitCast>
|   | | |     `-ImplicitCastExpr 'const void *' <LValueToRValue>
|   | | |       `-DeclRefExpr 'const void *' lvalue ParmVar 0x7fe028069378 '__key' 'const void *'
|   | | |-ForStmt
|   | | | |-<<<NULL>>>
|   | | | |-<<<NULL>>>
|   | | | |-CXXOperatorCallExpr '<dependent type>'
|   | | | | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x7fe028054428
|   | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe0280693e8 '__len' '_Size'
|   | | | | `-IntegerLiteral 'int' 4
|   | | | |-BinaryOperator '<dependent type>' ','
|   | | | | |-CompoundAssignOperator 'const unsigned char *' lvalue '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | | | | | |-DeclRefExpr 'const unsigned char *' lvalue Var 0x7fe028069890 '__data' 'const unsigned char *'
|   | | | | | `-IntegerLiteral 'int' 4
|   | | | | `-CompoundAssignOperator '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe0280693e8 '__len' '_Size'
|   | | | |   `-IntegerLiteral 'int' 4
|   | | | `-CompoundStmt
|   | | |   |-DeclStmt
|   | | |   | `-VarDecl referenced __k '_Size' cinit
|   | | |   |   `-CallExpr '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |   |     `-DeclRefExpr 'const unsigned char *' lvalue Var 0x7fe028069890 '__data' 'const unsigned char *'
|   | | |   |-CompoundAssignOperator '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   | |-DeclRefExpr '_Size' lvalue Var 0x7fe028069bb0 '__k' '_Size'
|   | | |   | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028069660 '__m' 'const _Size'
|   | | |   |-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   | |-DeclRefExpr '_Size' lvalue Var 0x7fe028069bb0 '__k' '_Size'
|   | | |   | `-BinaryOperator '<dependent type>' '>>'
|   | | |   |   |-DeclRefExpr '_Size' lvalue Var 0x7fe028069bb0 '__k' '_Size'
|   | | |   |   `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028069708 '__r' 'const _Size'
|   | | |   |-CompoundAssignOperator '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   | |-DeclRefExpr '_Size' lvalue Var 0x7fe028069bb0 '__k' '_Size'
|   | | |   | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028069660 '__m' 'const _Size'
|   | | |   |-CompoundAssignOperator '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   | |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | |   | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028069660 '__m' 'const _Size'
|   | | |   `-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | |     `-DeclRefExpr '_Size' lvalue Var 0x7fe028069bb0 '__k' '_Size'
|   | | |-SwitchStmt
|   | | | |-<<<NULL>>>
|   | | | |-<<<NULL>>>
|   | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe0280693e8 '__len' '_Size'
|   | | | `-CompoundStmt
|   | | |   |-CaseStmt
|   | | |   | |-IntegerLiteral 'int' 3
|   | | |   | |-<<<NULL>>>
|   | | |   | `-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   |   |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | |   |   `-BinaryOperator 'int' '<<'
|   | | |   |     |-ImplicitCastExpr 'int' <IntegralCast>
|   | | |   |     | `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   | | |   |     |   `-ArraySubscriptExpr 'const unsigned char' lvalue
|   | | |   |     |     |-ImplicitCastExpr 'const unsigned char *' <LValueToRValue>
|   | | |   |     |     | `-DeclRefExpr 'const unsigned char *' lvalue Var 0x7fe028069890 '__data' 'const unsigned char *'
|   | | |   |     |     `-IntegerLiteral 'int' 2
|   | | |   |     `-IntegerLiteral 'int' 16
|   | | |   |-CaseStmt
|   | | |   | |-IntegerLiteral 'int' 2
|   | | |   | |-<<<NULL>>>
|   | | |   | `-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   |   |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | |   |   `-BinaryOperator 'int' '<<'
|   | | |   |     |-ImplicitCastExpr 'int' <IntegralCast>
|   | | |   |     | `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   | | |   |     |   `-ArraySubscriptExpr 'const unsigned char' lvalue
|   | | |   |     |     |-ImplicitCastExpr 'const unsigned char *' <LValueToRValue>
|   | | |   |     |     | `-DeclRefExpr 'const unsigned char *' lvalue Var 0x7fe028069890 '__data' 'const unsigned char *'
|   | | |   |     |     `-IntegerLiteral 'int' 1
|   | | |   |     `-IntegerLiteral 'int' 8
|   | | |   |-CaseStmt
|   | | |   | |-IntegerLiteral 'int' 1
|   | | |   | |-<<<NULL>>>
|   | | |   | `-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   |   |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | |   |   `-ArraySubscriptExpr 'const unsigned char' lvalue
|   | | |   |     |-ImplicitCastExpr 'const unsigned char *' <LValueToRValue>
|   | | |   |     | `-DeclRefExpr 'const unsigned char *' lvalue Var 0x7fe028069890 '__data' 'const unsigned char *'
|   | | |   |     `-IntegerLiteral 'int' 0
|   | | |   `-CompoundAssignOperator '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028069660 '__m' 'const _Size'
|   | | |-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | | `-BinaryOperator '<dependent type>' '>>'
|   | | |   |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | |   `-IntegerLiteral 'int' 13
|   | | |-CompoundAssignOperator '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028069660 '__m' 'const _Size'
|   | | |-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | | `-BinaryOperator '<dependent type>' '>>'
|   | | |   |-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | | |   `-IntegerLiteral 'int' 15
|   | | `-ReturnStmt
|   | |   `-DeclRefExpr '_Size' lvalue Var 0x7fe0280697b0 '__h' '_Size'
|   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> Inherited unsigned-integer-overflow
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1005:1, > struct __murmur2_or_cityhash definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 64
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Size
|   | |-CXXRecordDecl implicit struct __murmur2_or_cityhash
|   | |-CXXMethodDecl /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1008:18 operator() '_Size (const void *, _Size)' inline
|   | | |-ParmVarDecl __key 'const void *'
|   | | |-ParmVarDecl __len '_Size'
|   | | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, > unsigned-integer-overflow
|   | |-AccessSpecDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1010:2, > private
|   | |-VarDecl referenced __k0 'const _Size' static cinit
|   | | `-IntegerLiteral 'unsigned long long' 14097894508562428199
|   | |-VarDecl referenced __k1 'const _Size' static cinit
|   | | `-IntegerLiteral 'unsigned long long' 13011662864482103923
|   | |-VarDecl referenced __k2 'const _Size' static cinit
|   | | `-IntegerLiteral 'unsigned long long' 11160318154034397263
|   | |-VarDecl referenced __k3 'const _Size' static cinit
|   | | `-IntegerLiteral 'unsigned long long' 14504361325974414679
|   | |-CXXMethodDecl referenced __rotate '_Size (_Size, int)' static
|   | | |-ParmVarDecl referenced __val '_Size'
|   | | |-ParmVarDecl referenced __shift 'int'
|   | | `-CompoundStmt
|   | |   `-ReturnStmt
|   | |     `-ConditionalOperator '<dependent type>'
|   | |       |-BinaryOperator '_Bool' '=='
|   | |       | |-ImplicitCastExpr 'int' <LValueToRValue>
|   | |       | | `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02806b468 '__shift' 'int'
|   | |       | `-IntegerLiteral 'int' 0
|   | |       |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806b3f0 '__val' '_Size'
|   | |       `-ParenExpr '<dependent type>'
|   | |         `-BinaryOperator '<dependent type>' '|'
|   | |           |-ParenExpr '<dependent type>'
|   | |           | `-BinaryOperator '<dependent type>' '>>'
|   | |           |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806b3f0 '__val' '_Size'
|   | |           |   `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02806b468 '__shift' 'int'
|   | |           `-ParenExpr '<dependent type>'
|   | |             `-BinaryOperator '<dependent type>' '<<'
|   | |               |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806b3f0 '__val' '_Size'
|   | |               `-ParenExpr 'int'
|   | |                 `-BinaryOperator 'int' '-'
|   | |                   |-IntegerLiteral 'int' 64
|   | |                   `-ImplicitCastExpr 'int' <LValueToRValue>
|   | |                     `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02806b468 '__shift' 'int'
|   | |-CXXMethodDecl referenced __rotate_by_at_least_1 '_Size (_Size, int)' static
|   | | |-ParmVarDecl referenced __val '_Size'
|   | | |-ParmVarDecl referenced __shift 'int'
|   | | `-CompoundStmt
|   | |   `-ReturnStmt
|   | |     `-BinaryOperator '<dependent type>' '|'
|   | |       |-ParenExpr '<dependent type>'
|   | |       | `-BinaryOperator '<dependent type>' '>>'
|   | |       |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806b638 '__val' '_Size'
|   | |       |   `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02806b6b0 '__shift' 'int'
|   | |       `-ParenExpr '<dependent type>'
|   | |         `-BinaryOperator '<dependent type>' '<<'
|   | |           |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806b638 '__val' '_Size'
|   | |           `-ParenExpr 'int'
|   | |             `-BinaryOperator 'int' '-'
|   | |               |-IntegerLiteral 'int' 64
|   | |               `-ImplicitCastExpr 'int' <LValueToRValue>
|   | |                 `-DeclRefExpr 'int' lvalue ParmVar 0x7fe02806b6b0 '__shift' 'int'
|   | |-CXXMethodDecl referenced __shift_mix '_Size (_Size)' static
|   | | |-ParmVarDecl referenced __val '_Size'
|   | | `-CompoundStmt
|   | |   `-ReturnStmt
|   | |     `-BinaryOperator '<dependent type>' '^'
|   | |       |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806b7f8 '__val' '_Size'
|   | |       `-ParenExpr '<dependent type>'
|   | |         `-BinaryOperator '<dependent type>' '>>'
|   | |           |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806b7f8 '__val' '_Size'
|   | |           `-IntegerLiteral 'int' 47
|   | |-CXXMethodDecl referenced __hash_len_16 '_Size (_Size, _Size)' static
|   | | |-ParmVarDecl referenced __u '_Size'
|   | | |-ParmVarDecl referenced __v '_Size'
|   | | |-CompoundStmt
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __mul 'const _Size' cinit
|   | | | |   `-IntegerLiteral 'unsigned long long' 11376068507788127593
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __a '_Size' cinit
|   | | | |   `-BinaryOperator '<dependent type>' '*'
|   | | | |     |-ParenExpr '<dependent type>'
|   | | | |     | `-BinaryOperator '<dependent type>' '^'
|   | | | |     |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806b9b0 '__u' '_Size'
|   | | | |     |   `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806ba20 '__v' '_Size'
|   | | | |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028070d70 '__mul' 'const _Size'
|   | | | |-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028070e18 '__a' '_Size'
|   | | | | `-ParenExpr '<dependent type>'
|   | | | |   `-BinaryOperator '<dependent type>' '>>'
|   | | | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe028070e18 '__a' '_Size'
|   | | | |     `-IntegerLiteral 'int' 47
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __b '_Size' nrvo cinit
|   | | | |   `-BinaryOperator '<dependent type>' '*'
|   | | | |     |-ParenExpr '<dependent type>'
|   | | | |     | `-BinaryOperator '<dependent type>' '^'
|   | | | |     |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806ba20 '__v' '_Size'
|   | | | |     |   `-DeclRefExpr '_Size' lvalue Var 0x7fe028070e18 '__a' '_Size'
|   | | | |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028070d70 '__mul' 'const _Size'
|   | | | |-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028071078 '__b' '_Size'
|   | | | | `-ParenExpr '<dependent type>'
|   | | | |   `-BinaryOperator '<dependent type>' '>>'
|   | | | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe028071078 '__b' '_Size'
|   | | | |     `-IntegerLiteral 'int' 47
|   | | | |-CompoundAssignOperator '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028071078 '__b' '_Size'
|   | | | | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028070d70 '__mul' 'const _Size'
|   | | | `-ReturnStmt
|   | | |   `-DeclRefExpr '_Size' lvalue Var 0x7fe028071078 '__b' '_Size'
|   | | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, > unsigned-integer-overflow
|   | |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1041:3, > referenced __hash_len_0_to_16 '_Size (const char *, _Size)' static
|   | | |-ParmVarDecl referenced __s 'const char *'
|   | | |-ParmVarDecl referenced __len '_Size'
|   | | |-CompoundStmt
|   | | | |-IfStmt
|   | | | | |-<<<NULL>>>
|   | | | | |-<<<NULL>>>
|   | | | | |-CXXOperatorCallExpr '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator>' 0x7fe028053ca8
|   | | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | | `-IntegerLiteral 'int' 8
|   | | | | |-CompoundStmt
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __a 'const _Size' cinit
|   | | | | | |   `-CallExpr '<dependent type>'
|   | | | | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | | | |     `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bcc0 '__s' 'const char *'
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __b 'const _Size' cinit
|   | | | | | |   `-CallExpr '<dependent type>'
|   | | | | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | | | |     `-BinaryOperator '<dependent type>' '-'
|   | | | | | |       |-BinaryOperator '<dependent type>' '+'
|   | | | | | |       | |-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bcc0 '__s' 'const char *'
|   | | | | | |       | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | | |       `-IntegerLiteral 'int' 8
|   | | | | | `-ReturnStmt
|   | | | | |   `-BinaryOperator '<dependent type>' '^'
|   | | | | |     |-CallExpr '<dependent type>'
|   | | | | |     | |-DeclRefExpr '_Size (_Size, _Size)' lvalue CXXMethod 0x7fe02806bb80 '__hash_len_16' '_Size (_Size, _Size)'
|   | | | | |     | |-DeclRefExpr 'const _Size' lvalue Var 0x7fe0280714d8 '__a' 'const _Size'
|   | | | | |     | `-CallExpr '<dependent type>'
|   | | | | |     |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b740 '__rotate_by_at_least_1' '_Size (_Size, int)'
|   | | | | |     |   |-BinaryOperator '<dependent type>' '+'
|   | | | | |     |   | |-DeclRefExpr 'const _Size' lvalue Var 0x7fe028071660 '__b' 'const _Size'
|   | | | | |     |   | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | |     |   `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028071660 '__b' 'const _Size'
|   | | | | `-<<<NULL>>>
|   | | | |-IfStmt
|   | | | | |-<<<NULL>>>
|   | | | | |-<<<NULL>>>
|   | | | | |-CXXOperatorCallExpr '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x7fe028054428
|   | | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | | `-IntegerLiteral 'int' 4
|   | | | | |-CompoundStmt
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __a 'const uint32_t':'const unsigned int' cinit
|   | | | | | |   `-CallExpr 'unsigned int':'unsigned int'
|   | | | | | |     |-ImplicitCastExpr 'unsigned int (*)(const void *)' <FunctionToPointerDecay>
|   | | | | | |     | `-DeclRefExpr 'unsigned int (const void *)' lvalue Function 0x7fe028075d90 '__loadword' 'unsigned int (const void *)' (FunctionTemplate 0x7fe028068018 '__loadword')
|   | | | | | |     `-ImplicitCastExpr 'const void *' <BitCast>
|   | | | | | |       `-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | | | | |         `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bcc0 '__s' 'const char *'
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __b 'const uint32_t':'const unsigned int' cinit
|   | | | | | |   `-CallExpr '<dependent type>'
|   | | | | | |     |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | | | |     `-BinaryOperator '<dependent type>' '-'
|   | | | | | |       |-BinaryOperator '<dependent type>' '+'
|   | | | | | |       | |-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bcc0 '__s' 'const char *'
|   | | | | | |       | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | | |       `-IntegerLiteral 'int' 4
|   | | | | | `-ReturnStmt
|   | | | | |   `-CallExpr '<dependent type>'
|   | | | | |     |-DeclRefExpr '_Size (_Size, _Size)' lvalue CXXMethod 0x7fe02806bb80 '__hash_len_16' '_Size (_Size, _Size)'
|   | | | | |     |-BinaryOperator '<dependent type>' '+'
|   | | | | |     | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | |     | `-ParenExpr 'uint32_t':'unsigned int'
|   | | | | |     |   `-BinaryOperator 'uint32_t':'unsigned int' '<<'
|   | | | | |     |     |-ImplicitCastExpr 'uint32_t':'unsigned int' <LValueToRValue>
|   | | | | |     |     | `-DeclRefExpr 'const uint32_t':'const unsigned int' lvalue Var 0x7fe028071bc0 '__a' 'const uint32_t':'const unsigned int'
|   | | | | |     |     `-IntegerLiteral 'int' 3
|   | | | | |     `-DeclRefExpr 'const uint32_t':'const unsigned int' lvalue Var 0x7fe028076038 '__b' 'const uint32_t':'const unsigned int'
|   | | | | `-<<<NULL>>>
|   | | | |-IfStmt
|   | | | | |-<<<NULL>>>
|   | | | | |-<<<NULL>>>
|   | | | | |-CXXOperatorCallExpr '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator>' 0x7fe028053ca8
|   | | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | | `-IntegerLiteral 'int' 0
|   | | | | |-CompoundStmt
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __a 'const unsigned char' cinit
|   | | | | | |   `-ImplicitCastExpr 'const unsigned char' <IntegralCast>
|   | | | | | |     `-ImplicitCastExpr 'char' <LValueToRValue>
|   | | | | | |       `-ArraySubscriptExpr 'const char' lvalue
|   | | | | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | | | | |         | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bcc0 '__s' 'const char *'
|   | | | | | |         `-IntegerLiteral 'int' 0
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __b 'const unsigned char' cinit
|   | | | | | |   `-ArraySubscriptExpr '<dependent type>' lvalue
|   | | | | | |     |-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bcc0 '__s' 'const char *'
|   | | | | | |     `-BinaryOperator '<dependent type>' '>>'
|   | | | | | |       |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | | |       `-IntegerLiteral 'int' 1
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __c 'const unsigned char' cinit
|   | | | | | |   `-ArraySubscriptExpr '<dependent type>' lvalue
|   | | | | | |     |-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bcc0 '__s' 'const char *'
|   | | | | | |     `-BinaryOperator '<dependent type>' '-'
|   | | | | | |       |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | | |       `-IntegerLiteral 'int' 1
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __y 'const uint32_t':'const unsigned int' cinit
|   | | | | | |   `-BinaryOperator 'unsigned int' '+'
|   | | | | | |     |-CXXStaticCastExpr 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   | | | | | |     | `-ImplicitCastExpr 'uint32_t':'unsigned int' <IntegralCast>
|   | | | | | |     |   `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   | | | | | |     |     `-DeclRefExpr 'const unsigned char' lvalue Var 0x7fe028076548 '__a' 'const unsigned char'
|   | | | | | |     `-ParenExpr 'uint32_t':'unsigned int'
|   | | | | | |       `-BinaryOperator 'uint32_t':'unsigned int' '<<'
|   | | | | | |         |-CXXStaticCastExpr 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   | | | | | |         | `-ImplicitCastExpr 'uint32_t':'unsigned int' <IntegralCast>
|   | | | | | |         |   `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   | | | | | |         |     `-DeclRefExpr 'const unsigned char' lvalue Var 0x7fe028076690 '__b' 'const unsigned char'
|   | | | | | |         `-IntegerLiteral 'int' 8
|   | | | | | |-DeclStmt
|   | | | | | | `-VarDecl referenced __z 'const uint32_t':'const unsigned int' cinit
|   | | | | | |   `-BinaryOperator '<dependent type>' '+'
|   | | | | | |     |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806bd30 '__len' '_Size'
|   | | | | | |     `-ParenExpr 'uint32_t':'unsigned int'
|   | | | | | |       `-BinaryOperator 'uint32_t':'unsigned int' '<<'
|   | | | | | |         |-CXXStaticCastExpr 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   | | | | | |         | `-ImplicitCastExpr 'uint32_t':'unsigned int' <IntegralCast>
|   | | | | | |         |   `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   | | | | | |         |     `-DeclRefExpr 'const unsigned char' lvalue Var 0x7fe0280767e0 '__c' 'const unsigned char'
|   | | | | | |         `-IntegerLiteral 'int' 2
|   | | | | | `-ReturnStmt
|   | | | | |   `-BinaryOperator '<dependent type>' '*'
|   | | | | |     |-CallExpr '<dependent type>'
|   | | | | |     | |-DeclRefExpr '_Size (_Size)' lvalue CXXMethod 0x7fe02806b900 '__shift_mix' '_Size (_Size)'
|   | | | | |     | `-BinaryOperator '<dependent type>' '^'
|   | | | | |     |   |-BinaryOperator '<dependent type>' '*'
|   | | | | |     |   | |-DeclRefExpr 'const uint32_t':'const unsigned int' lvalue Var 0x7fe028076928 '__y' 'const uint32_t':'const unsigned int'
|   | | | | |     |   | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b2d0 '__k2' 'const _Size'
|   | | | | |     |   `-BinaryOperator '<dependent type>' '*'
|   | | | | |     |     |-DeclRefExpr 'const uint32_t':'const unsigned int' lvalue Var 0x7fe028076b70 '__z' 'const uint32_t':'const unsigned int'
|   | | | | |     |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b360 '__k3' 'const _Size'
|   | | | | |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b2d0 '__k2' 'const _Size'
|   | | | | `-<<<NULL>>>
|   | | | `-ReturnStmt
|   | | |   `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b2d0 '__k2' 'const _Size'
|   | | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, > unsigned-integer-overflow
|   | |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1066:3, > referenced __hash_len_17_to_32 '_Size (const char *, _Size)' static
|   | | |-ParmVarDecl referenced __s 'const char *'
|   | | |-ParmVarDecl referenced __len '_Size'
|   | | |-CompoundStmt
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __a 'const _Size' cinit
|   | | | |   `-BinaryOperator '<dependent type>' '*'
|   | | | |     |-CallExpr '<dependent type>'
|   | | | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bfd0 '__s' 'const char *'
|   | | | |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b240 '__k1' 'const _Size'
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __b 'const _Size' cinit
|   | | | |   `-CallExpr '<dependent type>'
|   | | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | |     `-BinaryOperator 'const char *' '+'
|   | | | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bfd0 '__s' 'const char *'
|   | | | |       `-IntegerLiteral 'int' 8
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __c 'const _Size' cinit
|   | | | |   `-BinaryOperator '<dependent type>' '*'
|   | | | |     |-CallExpr '<dependent type>'
|   | | | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | |     | `-BinaryOperator '<dependent type>' '-'
|   | | | |     |   |-BinaryOperator '<dependent type>' '+'
|   | | | |     |   | |-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bfd0 '__s' 'const char *'
|   | | | |     |   | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c040 '__len' '_Size'
|   | | | |     |   `-IntegerLiteral 'int' 8
|   | | | |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b2d0 '__k2' 'const _Size'
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __d 'const _Size' cinit
|   | | | |   `-BinaryOperator '<dependent type>' '*'
|   | | | |     |-CallExpr '<dependent type>'
|   | | | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | |     | `-BinaryOperator '<dependent type>' '-'
|   | | | |     |   |-BinaryOperator '<dependent type>' '+'
|   | | | |     |   | |-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe02806bfd0 '__s' 'const char *'
|   | | | |     |   | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c040 '__len' '_Size'
|   | | | |     |   `-IntegerLiteral 'int' 16
|   | | | |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b1b0 '__k0' 'const _Size'
|   | | | `-ReturnStmt
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-DeclRefExpr '_Size (_Size, _Size)' lvalue CXXMethod 0x7fe02806bb80 '__hash_len_16' '_Size (_Size, _Size)'
|   | | |     |-BinaryOperator '<dependent type>' '+'
|   | | |     | |-BinaryOperator '<dependent type>' '+'
|   | | |     | | |-CallExpr '<dependent type>'
|   | | |     | | | |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   | | |     | | | |-BinaryOperator '<dependent type>' '-'
|   | | |     | | | | |-DeclRefExpr 'const _Size' lvalue Var 0x7fe028077018 '__a' 'const _Size'
|   | | |     | | | | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe0280771f0 '__b' 'const _Size'
|   | | |     | | | `-IntegerLiteral 'int' 43
|   | | |     | | `-CallExpr '<dependent type>'
|   | | |     | |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   | | |     | |   |-DeclRefExpr 'const _Size' lvalue Var 0x7fe0280773d8 '__c' 'const _Size'
|   | | |     | |   `-IntegerLiteral 'int' 30
|   | | |     | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028077648 '__d' 'const _Size'
|   | | |     `-BinaryOperator '<dependent type>' '+'
|   | | |       |-BinaryOperator '<dependent type>' '-'
|   | | |       | |-BinaryOperator '<dependent type>' '+'
|   | | |       | | |-DeclRefExpr 'const _Size' lvalue Var 0x7fe028077018 '__a' 'const _Size'
|   | | |       | | `-CallExpr '<dependent type>'
|   | | |       | |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   | | |       | |   |-BinaryOperator '<dependent type>' '^'
|   | | |       | |   | |-DeclRefExpr 'const _Size' lvalue Var 0x7fe0280771f0 '__b' 'const _Size'
|   | | |       | |   | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b360 '__k3' 'const _Size'
|   | | |       | |   `-IntegerLiteral 'int' 20
|   | | |       | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe0280773d8 '__c' 'const _Size'
|   | | |       `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c040 '__len' '_Size'
|   | | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, > unsigned-integer-overflow
|   | |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1079:3, > __weak_hash_len_32_with_seeds 'pair<_Size, _Size> (_Size, _Size, _Size, _Size, _Size, _Size)' static
|   | | |-ParmVarDecl referenced __w '_Size'
|   | | |-ParmVarDecl referenced __x '_Size'
|   | | |-ParmVarDecl referenced __y '_Size'
|   | | |-ParmVarDecl referenced __z '_Size'
|   | | |-ParmVarDecl referenced __a '_Size'
|   | | |-ParmVarDecl referenced __b '_Size'
|   | | |-CompoundStmt
|   | | | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c548 '__a' '_Size'
|   | | | | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c388 '__w' '_Size'
|   | | | |-BinaryOperator '<dependent type>' '='
|   | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c5b8 '__b' '_Size'
|   | | | | `-CallExpr '<dependent type>'
|   | | | |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   | | | |   |-BinaryOperator '<dependent type>' '+'
|   | | | |   | |-BinaryOperator '<dependent type>' '+'
|   | | | |   | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c5b8 '__b' '_Size'
|   | | | |   | | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c548 '__a' '_Size'
|   | | | |   | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c4d8 '__z' '_Size'
|   | | | |   `-IntegerLiteral 'int' 21
|   | | | |-DeclStmt
|   | | | | `-VarDecl referenced __c 'const _Size' cinit
|   | | | |   `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c548 '__a' '_Size'
|   | | | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c548 '__a' '_Size'
|   | | | | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c3f8 '__x' '_Size'
|   | | | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c548 '__a' '_Size'
|   | | | | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c468 '__y' '_Size'
|   | | | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c5b8 '__b' '_Size'
|   | | | | `-CallExpr '<dependent type>'
|   | | | |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   | | | |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c548 '__a' '_Size'
|   | | | |   `-IntegerLiteral 'int' 44
|   | | | `-ReturnStmt
|   | | |   `-CXXUnresolvedConstructExpr 'pair<_Size, _Size>'
|   | | |     |-BinaryOperator '<dependent type>' '+'
|   | | |     | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c548 '__a' '_Size'
|   | | |     | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c4d8 '__z' '_Size'
|   | | |     `-BinaryOperator '<dependent type>' '+'
|   | | |       |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02806c5b8 '__b' '_Size'
|   | | |       `-DeclRefExpr 'const _Size' lvalue Var 0x7fe028077fa0 '__c' 'const _Size'
|   | | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, > unsigned-integer-overflow
|   | |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1093:3, > __weak_hash_len_32_with_seeds 'pair<_Size, _Size> (const char *, _Size, _Size)' static
|   | | |-ParmVarDecl referenced __s 'const char *'
|   | | |-ParmVarDecl referenced __a '_Size'
|   | | |-ParmVarDecl referenced __b '_Size'
|   | | |-CompoundStmt
|   | | | `-ReturnStmt
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fe0280702c8 0x7fe02806fe00
|   | | |     |-CallExpr '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070030 '__s' 'const char *'
|   | | |     |-CallExpr '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |     | `-BinaryOperator 'const char *' '+'
|   | | |     |   |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | |     |   | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070030 '__s' 'const char *'
|   | | |     |   `-IntegerLiteral 'int' 8
|   | | |     |-CallExpr '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |     | `-BinaryOperator 'const char *' '+'
|   | | |     |   |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | |     |   | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070030 '__s' 'const char *'
|   | | |     |   `-IntegerLiteral 'int' 16
|   | | |     |-CallExpr '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |     | `-BinaryOperator 'const char *' '+'
|   | | |     |   |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | |     |   | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070030 '__s' 'const char *'
|   | | |     |   `-IntegerLiteral 'int' 24
|   | | |     |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe0280700a0 '__a' '_Size'
|   | | |     `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe028070110 '__b' '_Size'
|   | | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, > unsigned-integer-overflow
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1106:3, > referenced __hash_len_33_to_64 '_Size (const char *, size_t)' static
|   |   |-ParmVarDecl referenced __s 'const char *'
|   |   |-ParmVarDecl referenced __len 'size_t':'unsigned long'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __z '_Size' cinit
|   |   | |   `-CallExpr '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |     `-BinaryOperator 'const char *' '+'
|   |   | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |       `-IntegerLiteral 'int' 24
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __a '_Size' cinit
|   |   | |   `-BinaryOperator '<dependent type>' '+'
|   |   | |     |-CallExpr '<dependent type>'
|   |   | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |     `-BinaryOperator '<dependent type>' '*'
|   |   | |       |-ParenExpr '<dependent type>'
|   |   | |       | `-BinaryOperator '<dependent type>' '+'
|   |   | |       |   |-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028070480 '__len' 'size_t':'unsigned long'
|   |   | |       |   `-CallExpr '<dependent type>'
|   |   | |       |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |       |     `-BinaryOperator 'const char *' '-'
|   |   | |       |       |-BinaryOperator 'const char *' '+'
|   |   | |       |       | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |       |       | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |       |       | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | |       |       |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028070480 '__len' 'size_t':'unsigned long'
|   |   | |       |       `-IntegerLiteral 'int' 16
|   |   | |       `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b1b0 '__k0' 'const _Size'
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __b '_Size' cinit
|   |   | |   `-CallExpr '<dependent type>'
|   |   | |     |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   |   | |     |-BinaryOperator '<dependent type>' '+'
|   |   | |     | |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |     | `-DeclRefExpr '_Size' lvalue Var 0x7fe028078b70 '__z' '_Size'
|   |   | |     `-IntegerLiteral 'int' 52
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __c '_Size' cinit
|   |   | |   `-CallExpr '<dependent type>'
|   |   | |     |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   |   | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |     `-IntegerLiteral 'int' 37
|   |   | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |   `-BinaryOperator 'const char *' '+'
|   |   | |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |     `-IntegerLiteral 'int' 8
|   |   | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028079310 '__c' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   |   | |   |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |   `-IntegerLiteral 'int' 7
|   |   | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |   `-BinaryOperator 'const char *' '+'
|   |   | |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |     `-IntegerLiteral 'int' 16
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __vf '_Size' cinit
|   |   | |   `-BinaryOperator '<dependent type>' '+'
|   |   | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |     `-DeclRefExpr '_Size' lvalue Var 0x7fe028078b70 '__z' '_Size'
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __vs '_Size' cinit
|   |   | |   `-BinaryOperator '<dependent type>' '+'
|   |   | |     |-BinaryOperator '<dependent type>' '+'
|   |   | |     | |-DeclRefExpr '_Size' lvalue Var 0x7fe028079190 '__b' '_Size'
|   |   | |     | `-CallExpr '<dependent type>'
|   |   | |     |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   |   | |     |   |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |     |   `-IntegerLiteral 'int' 31
|   |   | |     `-DeclRefExpr '_Size' lvalue Var 0x7fe028079310 '__c' '_Size'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | | `-BinaryOperator '<dependent type>' '+'
|   |   | |   |-CallExpr '<dependent type>'
|   |   | |   | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |   | `-BinaryOperator 'const char *' '+'
|   |   | |   |   |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |   |   `-IntegerLiteral 'int' 16
|   |   | |   `-CallExpr '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |     `-BinaryOperator 'const char *' '-'
|   |   | |       |-BinaryOperator 'const char *' '+'
|   |   | |       | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |       | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |       | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | |       |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028070480 '__len' 'size_t':'unsigned long'
|   |   | |       `-IntegerLiteral 'int' 32
|   |   | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028078b70 '__z' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |   `-BinaryOperator 'const char *' '-'
|   |   | |     |-BinaryOperator 'const char *' '+'
|   |   | |     | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |     | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028070480 '__len' 'size_t':'unsigned long'
|   |   | |     `-IntegerLiteral 'int' 8
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028079190 '__b' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   |   | |   |-BinaryOperator '<dependent type>' '+'
|   |   | |   | |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |   | `-DeclRefExpr '_Size' lvalue Var 0x7fe028078b70 '__z' '_Size'
|   |   | |   `-IntegerLiteral 'int' 52
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028079310 '__c' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   |   | |   |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |   `-IntegerLiteral 'int' 37
|   |   | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |   `-BinaryOperator 'const char *' '-'
|   |   | |     |-BinaryOperator 'const char *' '+'
|   |   | |     | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |     | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028070480 '__len' 'size_t':'unsigned long'
|   |   | |     `-IntegerLiteral 'int' 24
|   |   | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028079310 '__c' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   |   | |   |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |   `-IntegerLiteral 'int' 7
|   |   | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | | `-CallExpr '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   |   | |   `-BinaryOperator 'const char *' '-'
|   |   | |     |-BinaryOperator 'const char *' '+'
|   |   | |     | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 'const char *' lvalue ParmVar 0x7fe028070410 '__s' 'const char *'
|   |   | |     | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028070480 '__len' 'size_t':'unsigned long'
|   |   | |     `-IntegerLiteral 'int' 16
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __wf '_Size' cinit
|   |   | |   `-BinaryOperator '<dependent type>' '+'
|   |   | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |     `-DeclRefExpr '_Size' lvalue Var 0x7fe028078b70 '__z' '_Size'
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __ws '_Size' cinit
|   |   | |   `-BinaryOperator '<dependent type>' '+'
|   |   | |     |-BinaryOperator '<dependent type>' '+'
|   |   | |     | |-DeclRefExpr '_Size' lvalue Var 0x7fe028079190 '__b' '_Size'
|   |   | |     | `-CallExpr '<dependent type>'
|   |   | |     |   |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   |   | |     |   |-DeclRefExpr '_Size' lvalue Var 0x7fe028078d58 '__a' '_Size'
|   |   | |     |   `-IntegerLiteral 'int' 31
|   |   | |     `-DeclRefExpr '_Size' lvalue Var 0x7fe028079310 '__c' '_Size'
|   |   | |-DeclStmt
|   |   | | `-VarDecl referenced __r '_Size' cinit
|   |   | |   `-CallExpr '<dependent type>'
|   |   | |     |-DeclRefExpr '_Size (_Size)' lvalue CXXMethod 0x7fe02806b900 '__shift_mix' '_Size (_Size)'
|   |   | |     `-BinaryOperator '<dependent type>' '+'
|   |   | |       |-BinaryOperator '<dependent type>' '*'
|   |   | |       | |-ParenExpr '<dependent type>'
|   |   | |       | | `-BinaryOperator '<dependent type>' '+'
|   |   | |       | |   |-DeclRefExpr '_Size' lvalue Var 0x7fe0280798c8 '__vf' '_Size'
|   |   | |       | |   `-DeclRefExpr '_Size' lvalue Var 0x7fe02807aa38 '__ws' '_Size'
|   |   | |       | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b2d0 '__k2' 'const _Size'
|   |   | |       `-BinaryOperator '<dependent type>' '*'
|   |   | |         |-ParenExpr '<dependent type>'
|   |   | |         | `-BinaryOperator '<dependent type>' '+'
|   |   | |         |   |-DeclRefExpr '_Size' lvalue Var 0x7fe02807a938 '__wf' '_Size'
|   |   | |         |   `-DeclRefExpr '_Size' lvalue Var 0x7fe0280799c8 '__vs' '_Size'
|   |   | |         `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b1b0 '__k0' 'const _Size'
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator '<dependent type>' '*'
|   |   |     |-CallExpr '<dependent type>'
|   |   |     | |-DeclRefExpr '_Size (_Size)' lvalue CXXMethod 0x7fe02806b900 '__shift_mix' '_Size (_Size)'
|   |   |     | `-BinaryOperator '<dependent type>' '+'
|   |   |     |   |-BinaryOperator '<dependent type>' '*'
|   |   |     |   | |-DeclRefExpr '_Size' lvalue Var 0x7fe02807ac08 '__r' '_Size'
|   |   |     |   | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b1b0 '__k0' 'const _Size'
|   |   |     |   `-DeclRefExpr '_Size' lvalue Var 0x7fe0280799c8 '__vs' '_Size'
|   |   |     `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b2d0 '__k2' 'const _Size'
|   |   `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, > unsigned-integer-overflow
|   |-CXXMethodDecl parent 0x7fe02806ab50 prev 0x7fe02806b050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1134:1, > operator() '_Size (const void *, _Size)'
|   | |-ParmVarDecl referenced __key 'const void *'
|   | |-ParmVarDecl referenced __len '_Size'
|   | |-CompoundStmt
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __s 'const char *' cinit
|   | | |   `-CXXStaticCastExpr 'const char *' static_cast<const char *> <BitCast>
|   | | |     `-ImplicitCastExpr 'const void *' <LValueToRValue>
|   | | |       `-DeclRefExpr 'const void *' lvalue ParmVar 0x7fe02807b3b8 '__key' 'const void *'
|   | | |-IfStmt
|   | | | |-<<<NULL>>>
|   | | | |-<<<NULL>>>
|   | | | |-CXXOperatorCallExpr '<dependent type>'
|   | | | | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x7fe028054be8
|   | | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | | | `-IntegerLiteral 'int' 32
|   | | | |-CompoundStmt
|   | | | | `-IfStmt
|   | | | |   |-<<<NULL>>>
|   | | | |   |-<<<NULL>>>
|   | | | |   |-CXXOperatorCallExpr '<dependent type>'
|   | | | |   | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x7fe028054be8
|   | | | |   | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | | |   | `-IntegerLiteral 'int' 16
|   | | | |   |-CompoundStmt
|   | | | |   | `-ReturnStmt
|   | | | |   |   `-CallExpr '<dependent type>'
|   | | | |   |     |-DeclRefExpr '_Size (const char *, _Size)' lvalue CXXMethod 0x7fe02806be90 '__hash_len_0_to_16' '_Size (const char *, _Size)'
|   | | | |   |     |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | |   |     `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | | |   `-CompoundStmt
|   | | | |     `-ReturnStmt
|   | | | |       `-CallExpr '<dependent type>'
|   | | | |         |-DeclRefExpr '_Size (const char *, _Size)' lvalue CXXMethod 0x7fe02806c118 '__hash_len_17_to_32' '_Size (const char *, _Size)'
|   | | | |         |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | |         `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | | `-IfStmt
|   | | |   |-<<<NULL>>>
|   | | |   |-<<<NULL>>>
|   | | |   |-CXXOperatorCallExpr '<dependent type>'
|   | | |   | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x7fe028054be8
|   | | |   | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |   | `-IntegerLiteral 'int' 64
|   | | |   |-CompoundStmt
|   | | |   | `-ReturnStmt
|   | | |   |   `-CallExpr '<dependent type>'
|   | | |   |     |-DeclRefExpr '_Size (const char *, size_t)' lvalue CXXMethod 0x7fe0280705e0 '__hash_len_33_to_64' '_Size (const char *, size_t)'
|   | | |   |     |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |   |     `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |   `-<<<NULL>>>
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __x '_Size' cinit
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |     `-BinaryOperator '<dependent type>' '-'
|   | | |       |-BinaryOperator '<dependent type>' '+'
|   | | |       | |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |       | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |       `-IntegerLiteral 'int' 40
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __y '_Size' cinit
|   | | |   `-BinaryOperator '<dependent type>' '+'
|   | | |     |-CallExpr '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |     | `-BinaryOperator '<dependent type>' '-'
|   | | |     |   |-BinaryOperator '<dependent type>' '+'
|   | | |     |   | |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |     |   | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |     |   `-IntegerLiteral 'int' 16
|   | | |     `-CallExpr '<dependent type>'
|   | | |       |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |       `-BinaryOperator '<dependent type>' '-'
|   | | |         |-BinaryOperator '<dependent type>' '+'
|   | | |         | |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |         | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |         `-IntegerLiteral 'int' 56
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __z '_Size' cinit
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-DeclRefExpr '_Size (_Size, _Size)' lvalue CXXMethod 0x7fe02806bb80 '__hash_len_16' '_Size (_Size, _Size)'
|   | | |     |-BinaryOperator '<dependent type>' '+'
|   | | |     | |-CallExpr '<dependent type>'
|   | | |     | | |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |     | | `-BinaryOperator '<dependent type>' '-'
|   | | |     | |   |-BinaryOperator '<dependent type>' '+'
|   | | |     | |   | |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |     | |   | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |     | |   `-IntegerLiteral 'int' 48
|   | | |     | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |     `-CallExpr '<dependent type>'
|   | | |       |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |       `-BinaryOperator '<dependent type>' '-'
|   | | |         |-BinaryOperator '<dependent type>' '+'
|   | | |         | |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |         | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |         `-IntegerLiteral 'int' 24
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __v 'pair<_Size, _Size>' cinit
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fe02806fe00 0x7fe0280702c8
|   | | |     |-BinaryOperator '<dependent type>' '-'
|   | | |     | |-BinaryOperator '<dependent type>' '+'
|   | | |     | | |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |     | | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |     | `-IntegerLiteral 'int' 64
|   | | |     |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |     `-DeclRefExpr '_Size' lvalue Var 0x7fe028072608 '__z' '_Size'
|   | | |-DeclStmt
|   | | | `-VarDecl referenced __w 'pair<_Size, _Size>' cinit
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fe02806fe00 0x7fe0280702c8
|   | | |     |-BinaryOperator '<dependent type>' '-'
|   | | |     | |-BinaryOperator '<dependent type>' '+'
|   | | |     | | |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |     | | `-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |     | `-IntegerLiteral 'int' 32
|   | | |     |-BinaryOperator '<dependent type>' '+'
|   | | |     | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072228 '__y' '_Size'
|   | | |     | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b240 '__k1' 'const _Size'
|   | | |     `-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | | |-BinaryOperator '<dependent type>' '='
|   | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | | | `-BinaryOperator '<dependent type>' '+'
|   | | |   |-BinaryOperator '<dependent type>' '*'
|   | | |   | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | | |   | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b240 '__k1' 'const _Size'
|   | | |   `-CallExpr '<dependent type>'
|   | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | |     `-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | |-BinaryOperator '<dependent type>' '='
|   | | | |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | | `-BinaryOperator '<dependent type>' '&'
|   | | |   |-ParenExpr '<dependent type>'
|   | | |   | `-BinaryOperator '<dependent type>' '-'
|   | | |   |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |   |   `-IntegerLiteral 'int' 1
|   | | |   `-UnaryOperator '<dependent type>' prefix '~'
|   | | |     `-CXXStaticCastExpr '_Size' static_cast<_Size> <Dependent>
|   | | |       `-IntegerLiteral 'int' 63
|   | | |-DoStmt
|   | | | |-CompoundStmt
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | | | | | `-BinaryOperator '<dependent type>' '*'
|   | | | | |   |-CallExpr '<dependent type>'
|   | | | | |   | |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   | | | | |   | |-BinaryOperator '<dependent type>' '+'
|   | | | | |   | | |-BinaryOperator '<dependent type>' '+'
|   | | | | |   | | | |-BinaryOperator '<dependent type>' '+'
|   | | | | |   | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | | | | |   | | | | `-DeclRefExpr '_Size' lvalue Var 0x7fe028072228 '__y' '_Size'
|   | | | | |   | | | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | | | |   | | |   `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072b70 '__v' 'pair<_Size, _Size>'
|   | | | | |   | | `-CallExpr '<dependent type>'
|   | | | | |   | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | | |   | |   `-BinaryOperator 'const char *' '+'
|   | | | | |   | |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | | | |   | |     | `-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | | |   | |     `-IntegerLiteral 'int' 8
|   | | | | |   | `-IntegerLiteral 'int' 37
|   | | | | |   `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b240 '__k1' 'const _Size'
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072228 '__y' '_Size'
|   | | | | | `-BinaryOperator '<dependent type>' '*'
|   | | | | |   |-CallExpr '<dependent type>'
|   | | | | |   | |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   | | | | |   | |-BinaryOperator '<dependent type>' '+'
|   | | | | |   | | |-BinaryOperator '<dependent type>' '+'
|   | | | | |   | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072228 '__y' '_Size'
|   | | | | |   | | | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | | | |   | | |   `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072b70 '__v' 'pair<_Size, _Size>'
|   | | | | |   | | `-CallExpr '<dependent type>'
|   | | | | |   | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | | |   | |   `-BinaryOperator 'const char *' '+'
|   | | | | |   | |     |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | | | |   | |     | `-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | | |   | |     `-IntegerLiteral 'int' 48
|   | | | | |   | `-IntegerLiteral 'int' 42
|   | | | | |   `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b240 '__k1' 'const _Size'
|   | | | | |-CompoundAssignOperator '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | | | | | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | | | |   `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072eb0 '__w' 'pair<_Size, _Size>'
|   | | | | |-CompoundAssignOperator '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072228 '__y' '_Size'
|   | | | | | `-BinaryOperator '<dependent type>' '+'
|   | | | | |   |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | | | |   | `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072b70 '__v' 'pair<_Size, _Size>'
|   | | | | |   `-CallExpr '<dependent type>'
|   | | | | |     |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | | |     `-BinaryOperator 'const char *' '+'
|   | | | | |       |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | | | |       | `-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | | |       `-IntegerLiteral 'int' 40
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072608 '__z' '_Size'
|   | | | | | `-BinaryOperator '<dependent type>' '*'
|   | | | | |   |-CallExpr '<dependent type>'
|   | | | | |   | |-DeclRefExpr '_Size (_Size, int)' lvalue CXXMethod 0x7fe02806b580 '__rotate' '_Size (_Size, int)'
|   | | | | |   | |-BinaryOperator '<dependent type>' '+'
|   | | | | |   | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072608 '__z' '_Size'
|   | | | | |   | | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | | | |   | |   `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072eb0 '__w' 'pair<_Size, _Size>'
|   | | | | |   | `-IntegerLiteral 'int' 33
|   | | | | |   `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b240 '__k1' 'const _Size'
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072b70 '__v' 'pair<_Size, _Size>'
|   | | | | | `-CallExpr '<dependent type>'
|   | | | | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fe02806fe00 0x7fe0280702c8
|   | | | | |   |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | | |   |-BinaryOperator '<dependent type>' '*'
|   | | | | |   | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | | | |   | | `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072b70 '__v' 'pair<_Size, _Size>'
|   | | | | |   | `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b240 '__k1' 'const _Size'
|   | | | | |   `-BinaryOperator '<dependent type>' '+'
|   | | | | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | | | | |     `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | | | | |       `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072eb0 '__w' 'pair<_Size, _Size>'
|   | | | | |-BinaryOperator '<dependent type>' '='
|   | | | | | |-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072eb0 '__w' 'pair<_Size, _Size>'
|   | | | | | `-CallExpr '<dependent type>'
|   | | | | |   |-UnresolvedLookupExpr '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fe02806fe00 0x7fe0280702c8
|   | | | | |   |-BinaryOperator 'const char *' '+'
|   | | | | |   | |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | | | |   | | `-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | | |   | `-IntegerLiteral 'int' 32
|   | | | | |   |-BinaryOperator '<dependent type>' '+'
|   | | | | |   | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072608 '__z' '_Size'
|   | | | | |   | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | | | | |   |   `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072eb0 '__w' 'pair<_Size, _Size>'
|   | | | | |   `-BinaryOperator '<dependent type>' '+'
|   | | | | |     |-DeclRefExpr '_Size' lvalue Var 0x7fe028072228 '__y' '_Size'
|   | | | | |     `-CallExpr '<dependent type>'
|   | | | | |       |-UnresolvedLookupExpr '<dependent type>' lvalue (ADL) = '__loadword' 0x7fe028068018
|   | | | | |       `-BinaryOperator 'const char *' '+'
|   | | | | |         |-ImplicitCastExpr 'const char *' <LValueToRValue>
|   | | | | |         | `-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | | |         `-IntegerLiteral 'int' 16
|   | | | | |-CallExpr '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr '<overloaded function type>' lvalue (no ADL) = 'swap' 0x7fe028896d38 0x7fe02898b2a8 0x7fe028055b38
|   | | | | | |-DeclRefExpr '_Size' lvalue Var 0x7fe028072608 '__z' '_Size'
|   | | | | | `-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | | | | |-CompoundAssignOperator 'const char *' lvalue '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | | | |-DeclRefExpr 'const char *' lvalue Var 0x7fe02807b6a8 '__s' 'const char *'
|   | | | | | `-IntegerLiteral 'int' 64
|   | | | | `-CompoundAssignOperator '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | | |   `-IntegerLiteral 'int' 64
|   | | | `-CXXOperatorCallExpr '<dependent type>'
|   | | |   |-UnresolvedLookupExpr '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x7fe0280528c8
|   | | |   |-DeclRefExpr '_Size' lvalue ParmVar 0x7fe02807b428 '__len' '_Size'
|   | | |   `-IntegerLiteral 'int' 0
|   | | `-ReturnStmt
|   | |   `-CallExpr '<dependent type>'
|   | |     |-DeclRefExpr '_Size (_Size, _Size)' lvalue CXXMethod 0x7fe02806bb80 '__hash_len_16' '_Size (_Size, _Size)'
|   | |     |-BinaryOperator '<dependent type>' '+'
|   | |     | |-BinaryOperator '<dependent type>' '+'
|   | |     | | |-CallExpr '<dependent type>'
|   | |     | | | |-DeclRefExpr '_Size (_Size, _Size)' lvalue CXXMethod 0x7fe02806bb80 '__hash_len_16' '_Size (_Size, _Size)'
|   | |     | | | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | |     | | | | `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072b70 '__v' 'pair<_Size, _Size>'
|   | |     | | | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .first
|   | |     | | |   `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072eb0 '__w' 'pair<_Size, _Size>'
|   | |     | | `-BinaryOperator '<dependent type>' '*'
|   | |     | |   |-CallExpr '<dependent type>'
|   | |     | |   | |-DeclRefExpr '_Size (_Size)' lvalue CXXMethod 0x7fe02806b900 '__shift_mix' '_Size (_Size)'
|   | |     | |   | `-DeclRefExpr '_Size' lvalue Var 0x7fe028072228 '__y' '_Size'
|   | |     | |   `-DeclRefExpr 'const _Size' lvalue Var 0x7fe02806b240 '__k1' 'const _Size'
|   | |     | `-DeclRefExpr '_Size' lvalue Var 0x7fe028072608 '__z' '_Size'
|   | |     `-BinaryOperator '<dependent type>' '+'
|   | |       |-CallExpr '<dependent type>'
|   | |       | |-DeclRefExpr '_Size (_Size, _Size)' lvalue CXXMethod 0x7fe02806bb80 '__hash_len_16' '_Size (_Size, _Size)'
|   | |       | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | |       | | `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072b70 '__v' 'pair<_Size, _Size>'
|   | |       | `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .second
|   | |       |   `-DeclRefExpr 'pair<_Size, _Size>' lvalue Var 0x7fe028072eb0 '__w' 'pair<_Size, _Size>'
|   | |       `-DeclRefExpr '_Size' lvalue Var 0x7fe028072008 '__x' '_Size'
|   | `-NoSanitizeAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> Inherited unsigned-integer-overflow
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1180:1, > __scalar_hash
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 'size_t':'unsigned long' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 'unsigned long' '/'
|   | |     |-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof '_Tp'
|   | |     `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof 'size_t':'unsigned long'
|   | |-CXXRecordDecl struct __scalar_hash
|   | |-ClassTemplateSpecializationDecl struct __scalar_hash definition
|   | | |-public 'unary_function<struct std::__1::_PairT, size_t>':'struct std::__1::unary_function<struct std::__1::_PairT, unsigned long>'
|   | | |-TemplateArgument type 'struct std::__1::_PairT'
|   | | |-TemplateArgument integral 2
|   | | |-CXXRecordDecl prev 0x7fe028083ca8 implicit struct __scalar_hash
|   | | |-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> used operator() 'size_t (struct std::__1::_PairT) const noexcept'
|   | | | |-ParmVarDecl used __v 'struct std::__1::_PairT':'struct std::__1::_PairT'
|   | | | |-CompoundStmt
|   | | | | |-DeclStmt
|   | | | | | |-CXXRecordDecl union definition
|   | | | | | | |-FieldDecl referenced __t 'struct std::__1::_PairT':'struct std::__1::_PairT'
|   | | | | | | |-CXXRecordDecl struct definition
|   | | | | | | | |-FieldDecl __a 'size_t':'unsigned long'
|   | | | | | | | |-FieldDecl __b 'size_t':'unsigned long'
|   | | | | | | | |-CXXConstructorDecl implicit  'void (void) noexcept' inline default trivial
|   | | | | | | | |-CXXDestructorDecl implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fe0290017e8
|   | | | | | | | |-CXXConstructorDecl implicit constexpr  'void (const struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13) &)' inline default trivial noexcept-unevaluated 0x7fe029001ab8
|   | | | | | | | | `-ParmVarDecl 'const struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13) &'
|   | | | | | | | `-CXXConstructorDecl implicit constexpr  'void (struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13) &&)' inline default trivial noexcept-unevaluated 0x7fe029001c78
|   | | | | | | |   `-ParmVarDecl 'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13) &&'
|   | | | | | | |-FieldDecl __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13)'
|   | | | | | | |-CXXConstructorDecl implicit used  'void (void) noexcept' inline default trivial
|   | | | | | | | `-CompoundStmt
|   | | | | | | |-CXXConstructorDecl implicit constexpr  'void (const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) &)' inline default trivial noexcept-unevaluated 0x7fe0290018f8
|   | | | | | | | `-ParmVarDecl 'const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) &'
|   | | | | | | `-CXXConstructorDecl implicit constexpr  'void (union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) &&)' inline default trivial noexcept-unevaluated 0x7fe029001e38
|   | | | | | |   `-ParmVarDecl 'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) &&'
|   | | | | | `-VarDecl used __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' callinit
|   | | | | |   `-CXXConstructExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' 'void (void) noexcept'
|   | | | | |-CXXOperatorCallExpr 'struct std::__1::_PairT' lvalue
|   | | | | | |-ImplicitCastExpr 'struct std::__1::_PairT &(*)(const struct std::__1::_PairT &) noexcept' <FunctionToPointerDecay>
|   | | | | | | `-DeclRefExpr 'struct std::__1::_PairT &(const struct std::__1::_PairT &) noexcept' lvalue CXXMethod 0x7fe0290020f8 'operator=' 'struct std::__1::_PairT &(const struct std::__1::_PairT &) noexcept'
|   | | | | | |-MemberExpr 'struct std::__1::_PairT':'struct std::__1::_PairT' lvalue .__t 0x7fe0280b27e8
|   | | | | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fe0280b2b30 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   | | | | | `-ImplicitCastExpr 'const struct std::__1::_PairT':'const struct std::__1::_PairT' lvalue <NoOp>
|   | | | | |   `-DeclRefExpr 'struct std::__1::_PairT':'struct std::__1::_PairT' lvalue ParmVar 0x7fe0280857c8 '__v' 'struct std::__1::_PairT':'struct std::__1::_PairT'
|   | | | | `-ReturnStmt
|   | | | |   `-CXXOperatorCallExpr 'unsigned long':'unsigned long'
|   | | | |     |-ImplicitCastExpr 'unsigned long (*)(const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | |     | `-DeclRefExpr 'unsigned long (const void *, unsigned long)' lvalue CXXMethod 0x7fe02807e420 'operator()' 'unsigned long (const void *, unsigned long)'
|   | | | |     |-CXXTemporaryObjectExpr '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   | | | |     |-ImplicitCastExpr 'const void *' <BitCast>
|   | | | |     | `-UnaryOperator 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) *' prefix '&'
|   | | | |     |   `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fe0280b2b30 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   | | | |     `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   | | | |       `-ParenExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue
|   | | | |         `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fe0280b2b30 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   | | | `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |-CXXConstructorDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1219:8> implicit referenced constexpr __scalar_hash 'void (void) noexcept' inline default trivial
|   | | |-CXXConstructorDecl implicit constexpr __scalar_hash 'void (const struct std::__1::__scalar_hash<struct std::__1::_PairT, 2> &)' inline default trivial noexcept-unevaluated 0x7fe0280860b8
|   | | | `-ParmVarDecl 'const struct std::__1::__scalar_hash<struct std::__1::_PairT, 2> &'
|   | | |-CXXConstructorDecl implicit constexpr __scalar_hash 'void (struct std::__1::__scalar_hash<struct std::__1::_PairT, 2> &&)' inline default trivial noexcept-unevaluated 0x7fe028086278
|   | | | `-ParmVarDecl 'struct std::__1::__scalar_hash<struct std::__1::_PairT, 2> &&'
|   | | `-CXXDestructorDecl implicit referenced ~__scalar_hash 'void (void) noexcept' inline default trivial
|   | |-ClassTemplateSpecializationDecl struct __scalar_hash definition
|   | | |-public 'unary_function<long long, size_t>':'struct std::__1::unary_function<long long, unsigned long>'
|   | | |-TemplateArgument type 'long long'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl prev 0x7fe02809c480 implicit struct __scalar_hash
|   | | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1215:5> operator() 'size_t (long long) const noexcept'
|   | |   |-ParmVarDecl __v 'long long':'long long'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1201:1, > struct __scalar_hash definition
|   | | |-public 'unary_function<unsigned long long, size_t>':'struct std::__1::unary_function<unsigned long long, unsigned long>'
|   | | |-TemplateArgument type 'unsigned long long'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl prev 0x7fe02809d370 implicit struct __scalar_hash
|   | | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1215:5> operator() 'size_t (unsigned long long) const noexcept'
|   | |   |-ParmVarDecl __v 'unsigned long long':'unsigned long long'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1218:1, > struct __scalar_hash definition
|   | | |-public 'unary_function<__int128, size_t>':'struct std::__1::unary_function<__int128, unsigned long>'
|   | | |-TemplateArgument type '__int128'
|   | | |-TemplateArgument integral 2
|   | | |-CXXRecordDecl prev 0x7fe02809e240 implicit struct __scalar_hash
|   | | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> operator() 'size_t (__int128) const noexcept'
|   | |   |-ParmVarDecl __v '__int128':'__int128'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1218:1, > struct __scalar_hash definition
|   | | |-public 'unary_function<unsigned __int128, size_t>':'struct std::__1::unary_function<unsigned __int128, unsigned long>'
|   | | |-TemplateArgument type 'unsigned __int128'
|   | | |-TemplateArgument integral 2
|   | | |-CXXRecordDecl prev 0x7fe02809f110 implicit struct __scalar_hash
|   | | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> operator() 'size_t (unsigned __int128) const noexcept'
|   | |   |-ParmVarDecl __v 'unsigned __int128':'unsigned __int128'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1183:1, > struct __scalar_hash definition
|   | | |-public 'unary_function<float, size_t>':'struct std::__1::unary_function<float, unsigned long>'
|   | | |-TemplateArgument type 'float'
|   | | |-TemplateArgument integral 0
|   | | |-CXXRecordDecl prev 0x7fe0280a0000 implicit struct __scalar_hash
|   | | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1198:5> used operator() 'size_t (float) const noexcept'
|   | |   |-ParmVarDecl used __v 'float':'float'
|   | |   |-CompoundStmt
|   | |   | |-DeclStmt
|   | |   | | |-CXXRecordDecl union definition
|   | |   | | | |-FieldDecl referenced __t 'float':'float'
|   | |   | | | |-FieldDecl referenced __a 'size_t':'unsigned long'
|   | |   | | | |-CXXConstructorDecl implicit used  'void (void) noexcept' inline default trivial
|   | |   | | | | `-CompoundStmt
|   | |   | | | |-CXXConstructorDecl implicit constexpr  'void (const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9) &)' inline default trivial noexcept-unevaluated 0x7fe027905a68
|   | |   | | | | `-ParmVarDecl 'const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9) &'
|   | |   | | | `-CXXConstructorDecl implicit constexpr  'void (union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9) &&)' inline default trivial noexcept-unevaluated 0x7fe027905c28
|   | |   | | |   `-ParmVarDecl 'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9) &&'
|   | |   | | `-VarDecl used __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' callinit
|   | |   | |   `-CXXConstructExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' 'void (void) noexcept'
|   | |   | |-BinaryOperator 'size_t':'unsigned long' lvalue '='
|   | |   | | |-MemberExpr 'size_t':'unsigned long' lvalue .__a 0x7fe027905810
|   | |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fe0279058d0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   | |   | | `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   | |   | |   `-IntegerLiteral 'int' 0
|   | |   | |-BinaryOperator 'float':'float' lvalue '='
|   | |   | | |-MemberExpr 'float':'float' lvalue .__t 0x7fe0279057c8
|   | |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fe0279058d0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   | |   | | `-ImplicitCastExpr 'float':'float' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 'float':'float' lvalue ParmVar 0x7fe0280a1ec0 '__v' 'float':'float'
|   | |   | `-ReturnStmt
|   | |   |   `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   | |   |     `-MemberExpr 'size_t':'unsigned long' lvalue .__a 0x7fe027905810
|   | |   |       `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fe0279058d0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1201:1, > struct __scalar_hash definition
|   | | |-public 'unary_function<double, size_t>':'struct std::__1::unary_function<double, unsigned long>'
|   | | |-TemplateArgument type 'double'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl prev 0x7fe0280a2bd0 implicit struct __scalar_hash
|   | | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1215:5> used operator() 'size_t (double) const noexcept'
|   | |   |-ParmVarDecl used __v 'double':'double'
|   | |   |-CompoundStmt
|   | |   | |-DeclStmt
|   | |   | | |-CXXRecordDecl union definition
|   | |   | | | |-FieldDecl referenced __t 'double':'double'
|   | |   | | | |-FieldDecl referenced __a 'size_t':'unsigned long'
|   | |   | | | |-CXXConstructorDecl implicit used  'void (void) noexcept' inline default trivial
|   | |   | | | | `-CompoundStmt
|   | |   | | | |-CXXConstructorDecl implicit constexpr  'void (const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9) &)' inline default trivial noexcept-unevaluated 0x7fe027906508
|   | |   | | | | `-ParmVarDecl 'const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9) &'
|   | |   | | | `-CXXConstructorDecl implicit constexpr  'void (union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9) &&)' inline default trivial noexcept-unevaluated 0x7fe0279066c8
|   | |   | | |   `-ParmVarDecl 'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9) &&'
|   | |   | | `-VarDecl used __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' callinit
|   | |   | |   `-CXXConstructExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' 'void (void) noexcept'
|   | |   | |-BinaryOperator 'double':'double' lvalue '='
|   | |   | | |-MemberExpr 'double':'double' lvalue .__t 0x7fe027906268
|   | |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' lvalue Var 0x7fe027906370 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   | |   | | `-ImplicitCastExpr 'double':'double' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 'double':'double' lvalue ParmVar 0x7fe0280a3410 '__v' 'double':'double'
|   | |   | `-ReturnStmt
|   | |   |   `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   | |   |     `-MemberExpr 'size_t':'unsigned long' lvalue .__a 0x7fe0279062b0
|   | |   |       `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' lvalue Var 0x7fe027906370 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   | |   `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-ClassTemplateSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1218:1, > struct __scalar_hash definition
|   |   |-public 'unary_function<long double, size_t>':'struct std::__1::unary_function<long double, unsigned long>'
|   |   |-TemplateArgument type 'long double'
|   |   |-TemplateArgument integral 2
|   |   |-CXXRecordDecl prev 0x7fe0280a4120 implicit struct __scalar_hash
|   |   `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> operator() 'size_t (long double) const noexcept'
|   |     |-ParmVarDecl __v 'long double':'long double'
|   |     `-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1183:1, > struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __scalar_hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1198:5> operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl referenced __v '_Tp'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | |-CXXRecordDecl union definition
|   |   | | | |-FieldDecl __t '_Tp'
|   |   | | | `-FieldDecl __a 'size_t':'unsigned long'
|   |   | | `-VarDecl referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__a
|   |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fe02807bf90 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   |   | | `-IntegerLiteral 'int' 0
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fe02807bf90 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   |   | | `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe02806e650 '__v' '_Tp'
|   |   | `-ReturnStmt
|   |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__a
|   |   |     `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fe02807bf90 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1201:1, > struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __scalar_hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1215:5> operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl referenced __v '_Tp'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | |-CXXRecordDecl union definition
|   |   | | | |-FieldDecl __t '_Tp'
|   |   | | | `-FieldDecl __a 'size_t':'unsigned long'
|   |   | | `-VarDecl referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' lvalue Var 0x7fe02807cd80 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   |   | | `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe02807c900 '__v' '_Tp'
|   |   | `-ReturnStmt
|   |   |   `-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__a
|   |   |     `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' lvalue Var 0x7fe02807cd80 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1218:1, > struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 2
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __scalar_hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl referenced __v '_Tp'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | |-CXXRecordDecl union definition
|   |   | | | |-FieldDecl __t '_Tp'
|   |   | | | |-CXXRecordDecl struct definition
|   |   | | | | |-FieldDecl __a 'size_t':'unsigned long'
|   |   | | | | `-FieldDecl __b 'size_t':'unsigned long'
|   |   | | | `-FieldDecl __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13)'
|   |   | | `-VarDecl referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fe02807dcf0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   |   | | `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe02807d620 '__v' '_Tp'
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-CXXTemporaryObjectExpr '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   |   |     |-UnaryOperator '<dependent type>' prefix '&'
|   |   |     | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fe02807dcf0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   |   |     `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   |   |       `-ParenExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue
|   |   |         `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fe02807dcf0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1239:1, > struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 3
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __scalar_hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1258:5> operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl referenced __v '_Tp'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | |-CXXRecordDecl union definition
|   |   | | | |-FieldDecl __t '_Tp'
|   |   | | | |-CXXRecordDecl struct definition
|   |   | | | | |-FieldDecl __a 'size_t':'unsigned long'
|   |   | | | | |-FieldDecl __b 'size_t':'unsigned long'
|   |   | | | | `-FieldDecl __c 'size_t':'unsigned long'
|   |   | | | `-FieldDecl __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1249:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1249:13)'
|   |   | | `-VarDecl referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)' lvalue Var 0x7fe028082050 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)'
|   |   | | `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe028081930 '__v' '_Tp'
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-CXXTemporaryObjectExpr '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   |   |     |-UnaryOperator '<dependent type>' prefix '&'
|   |   |     | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)' lvalue Var 0x7fe028082050 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)'
|   |   |     `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   |   |       `-ParenExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)' lvalue
|   |   |         `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)' lvalue Var 0x7fe028082050 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1261:1, > struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 4
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl implicit struct __scalar_hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1281:5> operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl referenced __v '_Tp'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | |-CXXRecordDecl union definition
|   |   | | | |-FieldDecl __t '_Tp'
|   |   | | | |-CXXRecordDecl struct definition
|   |   | | | | |-FieldDecl __a 'size_t':'unsigned long'
|   |   | | | | |-FieldDecl __b 'size_t':'unsigned long'
|   |   | | | | |-FieldDecl __c 'size_t':'unsigned long'
|   |   | | | | `-FieldDecl __d 'size_t':'unsigned long'
|   |   | | | `-FieldDecl __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1271:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1271:13)'
|   |   | | `-VarDecl referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)' lvalue Var 0x7fe028083240 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)'
|   |   | | `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe028082ac0 '__v' '_Tp'
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-CXXTemporaryObjectExpr '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   |   |     |-UnaryOperator '<dependent type>' prefix '&'
|   |   |     | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)' lvalue Var 0x7fe028083240 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)'
|   |   |     `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   |   |       `-ParenExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)' lvalue
|   |   |         `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)' lvalue Var 0x7fe028083240 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1284:1, > referenced struct _PairT definition
|   | |-CXXRecordDecl implicit struct _PairT
|   | |-FieldDecl referenced first 'size_t':'unsigned long'
|   | |-FieldDecl referenced second 'size_t':'unsigned long'
|   | |-CXXConstructorDecl implicit _PairT 'void (void) noexcept' inline default trivial
|   | |-CXXConstructorDecl implicit used constexpr _PairT 'void (const struct std::__1::_PairT &) noexcept' inline default trivial
|   | | |-ParmVarDecl used 'const struct std::__1::_PairT &'
|   | | |-CXXCtorInitializer Field 0x7fe028083800 'first' 'size_t':'unsigned long'
|   | | | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   | | |   `-MemberExpr 'const size_t':'const unsigned long' lvalue .first 0x7fe028083800
|   | | |     `-DeclRefExpr 'const struct std::__1::_PairT' lvalue ParmVar 0x7fe0280868d0 '' 'const struct std::__1::_PairT &'
|   | | |-CXXCtorInitializer Field 0x7fe028083858 'second' 'size_t':'unsigned long'
|   | | | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   | | |   `-MemberExpr 'const size_t':'const unsigned long' lvalue .second 0x7fe028083858
|   | | |     `-DeclRefExpr 'const struct std::__1::_PairT' lvalue ParmVar 0x7fe0280868d0 '' 'const struct std::__1::_PairT &'
|   | | `-CompoundStmt
|   | |-CXXConstructorDecl implicit constexpr _PairT 'void (struct std::__1::_PairT &&)' inline default trivial noexcept-unevaluated 0x7fe028086968
|   | | `-ParmVarDecl 'struct std::__1::_PairT &&'
|   | |-CXXDestructorDecl implicit referenced ~_PairT 'void (void) noexcept' inline default trivial
|   | |-CXXMethodDecl implicit used constexpr operator= 'struct std::__1::_PairT &(const struct std::__1::_PairT &) noexcept' inline default trivial
|   | | |-ParmVarDecl used 'const struct std::__1::_PairT &'
|   | | `-CompoundStmt
|   | |   |-BinaryOperator 'size_t':'unsigned long' lvalue '='
|   | |   | |-MemberExpr 'size_t':'unsigned long' lvalue ->first 0x7fe028083800
|   | |   | | `-CXXThisExpr 'struct std::__1::_PairT *' this
|   | |   | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   | |   |   `-MemberExpr 'const size_t':'const unsigned long' lvalue .first 0x7fe028083800
|   | |   |     `-DeclRefExpr 'const struct std::__1::_PairT' lvalue ParmVar 0x7fe029002210 '' 'const struct std::__1::_PairT &'
|   | |   |-BinaryOperator 'size_t':'unsigned long' lvalue '='
|   | |   | |-MemberExpr 'size_t':'unsigned long' lvalue ->second 0x7fe028083858
|   | |   | | `-CXXThisExpr 'struct std::__1::_PairT *' this
|   | |   | `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   | |   |   `-MemberExpr 'const size_t':'const unsigned long' lvalue .second 0x7fe028083858
|   | |   |     `-DeclRefExpr 'const struct std::__1::_PairT' lvalue ParmVar 0x7fe029002210 '' 'const struct std::__1::_PairT &'
|   | |   `-ReturnStmt
|   | |     `-UnaryOperator 'struct std::__1::_PairT' lvalue prefix '*'
|   | |       `-CXXThisExpr 'struct std::__1::_PairT *' this
|   | `-CXXMethodDecl > implicit constexpr operator= 'struct std::__1::_PairT &(struct std::__1::_PairT &&)' inline default trivial noexcept-unevaluated 0x7fe029002278
|   |   `-ParmVarDecl 'struct std::__1::_PairT &&'
|   |-FunctionDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1294:1> __hash_combine 'size_t (size_t, size_t) noexcept' inline
|   | |-ParmVarDecl used __lhs 'size_t':'unsigned long'
|   | |-ParmVarDecl used __rhs 'size_t':'unsigned long'
|   | |-CompoundStmt
|   | | |-DeclStmt
|   | | | `-TypedefDecl referenced _HashT '__scalar_hash<struct std::__1::_PairT>':'struct std::__1::__scalar_hash<struct std::__1::_PairT, 2>'
|   | | |   `-TemplateSpecializationType '__scalar_hash<struct std::__1::_PairT>' sugar __scalar_hash
|   | | |     |-TemplateArgument type 'struct std::__1::_PairT'
|   | | |     `-RecordType 'struct std::__1::__scalar_hash<struct std::__1::_PairT, 2>'
|   | | |       `-ClassTemplateSpecialization '__scalar_hash'
|   | | |-DeclStmt
|   | | | `-VarDecl used __p 'const struct std::__1::_PairT' cinit
|   | | |   `-InitListExpr 'const struct std::__1::_PairT'
|   | | |     |-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   | | |     | `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028083900 '__lhs' 'size_t':'unsigned long'
|   | | |     `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   | | |       `-DeclRefExpr 'size_t':'unsigned long' lvalue ParmVar 0x7fe028083970 '__rhs' 'size_t':'unsigned long'
|   | | `-ReturnStmt
|   | |   `-CXXOperatorCallExpr 'size_t':'unsigned long'
|   | |     |-ImplicitCastExpr 'size_t (*)(struct std::__1::_PairT) const noexcept' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 'size_t (struct std::__1::_PairT) const noexcept' lvalue CXXMethod 0x7fe0280858d8 'operator()' 'size_t (struct std::__1::_PairT) const noexcept'
|   | |     |-ImplicitCastExpr 'const struct std::__1::__scalar_hash<struct std::__1::_PairT, 2>' <NoOp>
|   | |     | `-CXXTemporaryObjectExpr '_HashT':'struct std::__1::__scalar_hash<struct std::__1::_PairT, 2>' 'void (void) noexcept' zeroing
|   | |     `-CXXConstructExpr 'struct std::__1::_PairT':'struct std::__1::_PairT' 'void (const struct std::__1::_PairT &) noexcept'
|   | |       `-DeclRefExpr 'const struct std::__1::_PairT' lvalue Var 0x7fe028083ef8 '__p' 'const struct std::__1::_PairT'
|   | |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1296:1, > struct hash definition
|   | |-public 'unary_function<_Tp *, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1297:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1310:5> operator() 'size_t (_Tp *) const noexcept'
|   |   |-ParmVarDecl referenced __v '_Tp *'
|   |   |-CompoundStmt
|   |   | |-DeclStmt
|   |   | | |-CXXRecordDecl union definition
|   |   | | | |-FieldDecl __t '_Tp *'
|   |   | | | `-FieldDecl __a 'size_t':'unsigned long'
|   |   | | `-VarDecl referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)'
|   |   | |-BinaryOperator '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)' lvalue Var 0x7fe02808d2d0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)'
|   |   | | `-DeclRefExpr '_Tp *' lvalue ParmVar 0x7fe02808ce10 '__v' '_Tp *'
|   |   | `-ReturnStmt
|   |   |   `-CallExpr '<dependent type>'
|   |   |     |-CXXTemporaryObjectExpr '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   |   |     |-UnaryOperator '<dependent type>' prefix '&'
|   |   |     | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)' lvalue Var 0x7fe02808d2d0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)'
|   |   |     `-UnaryExprOrTypeTraitExpr 'unsigned long' sizeof
|   |   |       `-ParenExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)' lvalue
|   |   |         `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)' lvalue Var 0x7fe02808d2d0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1314:1, > struct hash definition
|   | |-public 'unary_function<_Bool, size_t>':'struct std::__1::unary_function<_Bool, unsigned long>'
|   | |-TemplateArgument type '_Bool'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1315:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1319:82> operator() 'size_t (_Bool) const noexcept'
|   |   |-ParmVarDecl used __v '_Bool'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr '_Bool' <LValueToRValue>
|   |   |         `-DeclRefExpr '_Bool' lvalue ParmVar 0x7fe02808dea0 '__v' '_Bool'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1322:1, > struct hash definition
|   | |-public 'unary_function<char, size_t>':'struct std::__1::unary_function<char, unsigned long>'
|   | |-TemplateArgument type 'char'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1323:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1327:82> operator() 'size_t (char) const noexcept'
|   |   |-ParmVarDecl used __v 'char'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'char' <LValueToRValue>
|   |   |         `-DeclRefExpr 'char' lvalue ParmVar 0x7fe02808e9c0 '__v' 'char'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1330:1, > struct hash definition
|   | |-public 'unary_function<signed char, size_t>':'struct std::__1::unary_function<signed char, unsigned long>'
|   | |-TemplateArgument type 'signed char'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1331:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1335:89> operator() 'size_t (signed char) const noexcept'
|   |   |-ParmVarDecl used __v 'signed char'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'signed char' <LValueToRValue>
|   |   |         `-DeclRefExpr 'signed char' lvalue ParmVar 0x7fe02808f518 '__v' 'signed char'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1338:1, > struct hash definition
|   | |-public 'unary_function<unsigned char, size_t>':'struct std::__1::unary_function<unsigned char, unsigned long>'
|   | |-TemplateArgument type 'unsigned char'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1339:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1343:91> operator() 'size_t (unsigned char) const noexcept'
|   |   |-ParmVarDecl used __v 'unsigned char'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'unsigned char' <LValueToRValue>
|   |   |         `-DeclRefExpr 'unsigned char' lvalue ParmVar 0x7fe028090068 '__v' 'unsigned char'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1348:1, > struct hash definition
|   | |-public 'unary_function<char16_t, size_t>':'struct std::__1::unary_function<char16_t, unsigned long>'
|   | |-TemplateArgument type 'char16_t'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1349:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1353:86> operator() 'size_t (char16_t) const noexcept'
|   |   |-ParmVarDecl used __v 'char16_t'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'char16_t' <LValueToRValue>
|   |   |         `-DeclRefExpr 'char16_t' lvalue ParmVar 0x7fe028090b90 '__v' 'char16_t'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1356:1, > struct hash definition
|   | |-public 'unary_function<char32_t, size_t>':'struct std::__1::unary_function<char32_t, unsigned long>'
|   | |-TemplateArgument type 'char32_t'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1357:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1361:86> operator() 'size_t (char32_t) const noexcept'
|   |   |-ParmVarDecl used __v 'char32_t'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'char32_t' <LValueToRValue>
|   |   |         `-DeclRefExpr 'char32_t' lvalue ParmVar 0x7fe0280916b0 '__v' 'char32_t'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1366:1, > struct hash definition
|   | |-public 'unary_function<wchar_t, size_t>':'struct std::__1::unary_function<wchar_t, unsigned long>'
|   | |-TemplateArgument type 'wchar_t'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1367:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1371:85> operator() 'size_t (wchar_t) const noexcept'
|   |   |-ParmVarDecl used __v 'wchar_t'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'wchar_t' <LValueToRValue>
|   |   |         `-DeclRefExpr 'wchar_t' lvalue ParmVar 0x7fe0280921d0 '__v' 'wchar_t'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1374:1, > struct hash definition
|   | |-public 'unary_function<short, size_t>':'struct std::__1::unary_function<short, unsigned long>'
|   | |-TemplateArgument type 'short'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1375:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1379:83> operator() 'size_t (short) const noexcept'
|   |   |-ParmVarDecl used __v 'short'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'short' <LValueToRValue>
|   |   |         `-DeclRefExpr 'short' lvalue ParmVar 0x7fe028092d30 '__v' 'short'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1382:1, > struct hash definition
|   | |-public 'unary_function<unsigned short, size_t>':'struct std::__1::unary_function<unsigned short, unsigned long>'
|   | |-TemplateArgument type 'unsigned short'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1383:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1387:92> operator() 'size_t (unsigned short) const noexcept'
|   |   |-ParmVarDecl used __v 'unsigned short'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'unsigned short' <LValueToRValue>
|   |   |         `-DeclRefExpr 'unsigned short' lvalue ParmVar 0x7fe028093878 '__v' 'unsigned short'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1390:1, > struct hash definition
|   | |-public 'unary_function<int, size_t>':'struct std::__1::unary_function<int, unsigned long>'
|   | |-TemplateArgument type 'int'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1391:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1395:81> operator() 'size_t (int) const noexcept'
|   |   |-ParmVarDecl used __v 'int'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 'int' lvalue ParmVar 0x7fe0280943c8 '__v' 'int'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1398:1, > struct hash definition
|   | |-public 'unary_function<unsigned int, size_t>':'struct std::__1::unary_function<unsigned int, unsigned long>'
|   | |-TemplateArgument type 'unsigned int'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1399:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1403:90> operator() 'size_t (unsigned int) const noexcept'
|   |   |-ParmVarDecl used __v 'unsigned int'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'unsigned int' <LValueToRValue>
|   |   |         `-DeclRefExpr 'unsigned int' lvalue ParmVar 0x7fe028094f18 '__v' 'unsigned int'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1406:1, > struct hash definition
|   | |-public 'unary_function<long, size_t>':'struct std::__1::unary_function<long, unsigned long>'
|   | |-TemplateArgument type 'long'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1407:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1411:82> operator() 'size_t (long) const noexcept'
|   |   |-ParmVarDecl used __v 'long'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 'long' <LValueToRValue>
|   |   |         `-DeclRefExpr 'long' lvalue ParmVar 0x7fe028095a68 '__v' 'long'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1414:1, > struct hash definition
|   | |-public 'unary_function<unsigned long, size_t>':'struct std::__1::unary_function<unsigned long, unsigned long>'
|   | |-TemplateArgument type 'unsigned long'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1415:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1419:91> operator() 'size_t (unsigned long) const noexcept'
|   |   |-ParmVarDecl used __v 'unsigned long'
|   |   |-CompoundStmt
|   |   | `-ReturnStmt
|   |   |   `-CXXStaticCastExpr 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 'unsigned long' <LValueToRValue>
|   |   |       `-DeclRefExpr 'unsigned long' lvalue ParmVar 0x7fe0280965b8 '__v' 'unsigned long'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1422:1, > struct hash definition
|   | |-public '__scalar_hash<long long>':'struct std::__1::__scalar_hash<long long, 1>'
|   | |-TemplateArgument type 'long long'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1423:1, > implicit struct hash
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 struct hash definition
|   | |-public '__scalar_hash<unsigned long long>':'struct std::__1::__scalar_hash<unsigned long long, 1>'
|   | |-TemplateArgument type 'unsigned long long'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1429:1, > implicit struct hash
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 struct hash definition
|   | |-public '__scalar_hash<__int128_t>':'struct std::__1::__scalar_hash<__int128, 2>'
|   | |-TemplateArgument type '__int128'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1437:1, > implicit struct hash
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 struct hash definition
|   | |-public '__scalar_hash<__uint128_t>':'struct std::__1::__scalar_hash<unsigned __int128, 2>'
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1443:1, > implicit struct hash
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 struct hash definition
|   | |-public '__scalar_hash<float>':'struct std::__1::__scalar_hash<float, 0>'
|   | |-TemplateArgument type 'float'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1451:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1461:5> operator() 'size_t (float) const noexcept'
|   |   |-ParmVarDecl used __v 'float'
|   |   |-CompoundStmt
|   |   | |-IfStmt
|   |   | | |-<<<NULL>>>
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator '_Bool' '=='
|   |   | | | |-ImplicitCastExpr 'float' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 'float' lvalue ParmVar 0x7fe0280a2220 '__v' 'float'
|   |   | | | `-ImplicitCastExpr 'float' <IntegralToFloating>
|   |   | | |   `-IntegerLiteral 'int' 0
|   |   | | |-ReturnStmt
|   |   | | | `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 'int' 0
|   |   | | `-<<<NULL>>>
|   |   | `-ReturnStmt
|   |   |   `-CXXMemberCallExpr 'size_t':'unsigned long'
|   |   |     |-MemberExpr '<bound member function type>' ->operator() 0x7fe0280a1fc8
|   |   |     | `-ImplicitCastExpr 'const struct std::__1::__scalar_hash<float, 0> *' <NoOp>
|   |   |     |   `-ImplicitCastExpr '__scalar_hash<float> *' <UncheckedDerivedToBase (__scalar_hash)>
|   |   |     |     `-CXXThisExpr 'const struct std::__1::hash<float> *' this
|   |   |     `-ImplicitCastExpr 'float' <LValueToRValue>
|   |   |       `-DeclRefExpr 'float' lvalue ParmVar 0x7fe0280a2220 '__v' 'float'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1464:1, > struct hash definition
|   | |-public '__scalar_hash<double>':'struct std::__1::__scalar_hash<double, 1>'
|   | |-TemplateArgument type 'double'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1465:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1475:5> operator() 'size_t (double) const noexcept'
|   |   |-ParmVarDecl used __v 'double'
|   |   |-CompoundStmt
|   |   | |-IfStmt
|   |   | | |-<<<NULL>>>
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator '_Bool' '=='
|   |   | | | |-ImplicitCastExpr 'double' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 'double' lvalue ParmVar 0x7fe0280a3770 '__v' 'double'
|   |   | | | `-ImplicitCastExpr 'double' <IntegralToFloating>
|   |   | | |   `-IntegerLiteral 'int' 0
|   |   | | |-ReturnStmt
|   |   | | | `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 'int' 0
|   |   | | `-<<<NULL>>>
|   |   | `-ReturnStmt
|   |   |   `-CXXMemberCallExpr 'size_t':'unsigned long'
|   |   |     |-MemberExpr '<bound member function type>' ->operator() 0x7fe0280a3518
|   |   |     | `-ImplicitCastExpr 'const struct std::__1::__scalar_hash<double, 1> *' <NoOp>
|   |   |     |   `-ImplicitCastExpr '__scalar_hash<double> *' <UncheckedDerivedToBase (__scalar_hash)>
|   |   |     |     `-CXXThisExpr 'const struct std::__1::hash<double> *' this
|   |   |     `-ImplicitCastExpr 'double' <LValueToRValue>
|   |   |       `-DeclRefExpr 'double' lvalue ParmVar 0x7fe0280a3770 '__v' 'double'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateSpecializationDecl parent 0x7fe027866ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1478:1, > struct hash definition
|   | |-public '__scalar_hash<long double>':'struct std::__1::__scalar_hash<long double, 2>'
|   | |-TemplateArgument type 'long double'
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1479:1, > implicit struct hash
|   | `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1525:5> operator() 'size_t (long double) const noexcept'
|   |   |-ParmVarDecl used __v 'long double'
|   |   |-CompoundStmt
|   |   | |-IfStmt
|   |   | | |-<<<NULL>>>
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator '_Bool' '=='
|   |   | | | |-ImplicitCastExpr 'long double' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 'long double' lvalue ParmVar 0x7fe0280a4cc0 '__v' 'long double'
|   |   | | | `-ImplicitCastExpr 'long double' <IntegralToFloating>
|   |   | | |   `-IntegerLiteral 'int' 0
|   |   | | |-ReturnStmt
|   |   | | | `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 'int' 0
|   |   | | `-<<<NULL>>>
|   |   | |-DeclStmt
|   |   | | |-CXXRecordDecl union definition
|   |   | | | |-FieldDecl referenced __t 'long double'
|   |   | | | |-CXXRecordDecl struct definition
|   |   | | | | |-FieldDecl referenced __a 'size_t':'unsigned long'
|   |   | | | | |-FieldDecl referenced __b 'size_t':'unsigned long'
|   |   | | | | |-CXXConstructorDecl implicit  'void (void) noexcept' inline default trivial
|   |   | | | | |-CXXDestructorDecl implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fe0280a5728
|   |   | | | | |-CXXConstructorDecl implicit constexpr  'void (const struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13) &)' inline default trivial noexcept-unevaluated 0x7fe0280a9200
|   |   | | | | | `-ParmVarDecl 'const struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13) &'
|   |   | | | | `-CXXConstructorDecl implicit constexpr  'void (struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13) &&)' inline default trivial noexcept-unevaluated 0x7fe0280a93c8
|   |   | | | |   `-ParmVarDecl 'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13) &&'
|   |   | | | |-FieldDecl referenced __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)'
|   |   | | | |-CXXConstructorDecl implicit used  'void (void) noexcept' inline default trivial
|   |   | | | | `-CompoundStmt
|   |   | | | |-CXXConstructorDecl implicit constexpr  'void (const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9) &)' inline default trivial noexcept-unevaluated 0x7fe0280a5838
|   |   | | | | `-ParmVarDecl 'const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9) &'
|   |   | | | `-CXXConstructorDecl implicit constexpr  'void (union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9) &&)' inline default trivial noexcept-unevaluated 0x7fe0280a9588
|   |   | | |   `-ParmVarDecl 'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9) &&'
|   |   | | `-VarDecl used __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' callinit
|   |   | |   `-CXXConstructExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' 'void (void) noexcept'
|   |   | |-BinaryOperator 'size_t':'unsigned long' lvalue '='
|   |   | | |-MemberExpr 'size_t':'unsigned long' lvalue .__a 0x7fe0280a52d8
|   |   | | | `-MemberExpr 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)' lvalue .__s 0x7fe0280a53f0
|   |   | | |   `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fe0280a54c0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   | | `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 'int' 0
|   |   | |-BinaryOperator 'size_t':'unsigned long' lvalue '='
|   |   | | |-MemberExpr 'size_t':'unsigned long' lvalue .__b 0x7fe0280a5330
|   |   | | | `-MemberExpr 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)' lvalue .__s 0x7fe0280a53f0
|   |   | | |   `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fe0280a54c0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   | | `-ImplicitCastExpr 'size_t':'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 'int' 0
|   |   | |-BinaryOperator 'long double' lvalue '='
|   |   | | |-MemberExpr 'long double' lvalue .__t 0x7fe0280a5160
|   |   | | | `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fe0280a54c0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   | | `-ImplicitCastExpr 'long double' <LValueToRValue>
|   |   | |   `-DeclRefExpr 'long double' lvalue ParmVar 0x7fe0280a4cc0 '__v' 'long double'
|   |   | `-ReturnStmt
|   |   |   `-BinaryOperator 'unsigned long' '^'
|   |   |     |-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-MemberExpr 'size_t':'unsigned long' lvalue .__a 0x7fe0280a52d8
|   |   |     |   `-MemberExpr 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)' lvalue .__s 0x7fe0280a53f0
|   |   |     |     `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fe0280a54c0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   |     `-ImplicitCastExpr 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 'size_t':'unsigned long' lvalue .__b 0x7fe0280a5330
|   |   |         `-MemberExpr 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)' lvalue .__s 0x7fe0280a53f0
|   |   |           `-DeclRefExpr 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fe0280a54c0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr Hidden
|   |-ClassTemplateDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1530:1, > __enum_hash
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   | `-CXXRecordDecl struct __enum_hash definition
|   |   |-public 'unary_function<_Tp, size_t>'
|   |   |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   |   |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1531:1, > implicit struct __enum_hash
|   |   `-CXXMethodDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1539:5> operator() 'size_t (_Tp) const noexcept'
|   |     |-ParmVarDecl referenced __v '_Tp'
|   |     |-CompoundStmt
|   |     | |-DeclStmt
|   |     | | `-TypedefDecl referenced type 'typename underlying_type<_Tp>::type'
|   |     | |   `-DependentNameType 'typename underlying_type<_Tp>::type' dependent
|   |     | `-ReturnStmt
|   |     |   `-CallExpr '<dependent type>'
|   |     |     |-CXXUnresolvedConstructExpr 'hash<type>'
|   |     |     | `-InitListExpr 'void'
|   |     |     `-CXXStaticCastExpr 'type':'typename underlying_type<_Tp>::type' static_cast<type> <Dependent>
|   |     |       `-DeclRefExpr '_Tp' lvalue ParmVar 0x7fe0280aa570 '__v' '_Tp'
|   |     |-AlwaysInlineAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr Hidden
|   |-ClassTemplatePartialSpecializationDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1541:1, > struct __enum_hash definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | |-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1542:1, > implicit referenced struct __enum_hash
|   | |-CXXConstructorDecl __enum_hash<type-parameter-0-0, false> 'void (void)' delete
|   | |-CXXConstructorDecl __enum_hash<type-parameter-0-0, false> 'void (const __enum_hash<type-parameter-0-0, false> &)' delete
|   | | `-ParmVarDecl 'const __enum_hash<type-parameter-0-0, false> &'
|   | `-CXXMethodDecl operator= '__enum_hash<type-parameter-0-0, false> &(const __enum_hash<type-parameter-0-0, false> &)' delete
|   |   `-ParmVarDecl 'const __enum_hash<type-parameter-0-0, false> &'
|   |-ClassTemplateDecl prev 0x7fe0278a6948 hash
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl prev 0x7fe0278a68b0 struct hash definition
|   | | |-public '__enum_hash<_Tp>'
|   | | |-TypeVisibilityAttr </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, > Default
|   | | `-CXXRecordDecl </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1549:1, > implicit struct hash
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | |-ClassTemplateSpecialization 'hash'
|   | `-ClassTemplateSpecialization 'hash'
|   |-TypeAliasTemplateDecl __check_hash_requirements
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Hash
|   | `-TypeAliasDecl __check_hash_requirements 'integral_constant<_Bool, is_copy_constructible<_Hash>::value && is_move_constructible<_Hash>::value && __invokable_r<size_t, _Hash, const _Key &>::value>'
|   |   `-TemplateSpecializationType 'integral_constant<_Bool, is_copy_constructible<_Hash>::value && is_move_constructible<_Hash>::value && __invokable_r<size_t, _Hash, const _Key &>::value>' dependent integral_constant
|   |     |-TemplateArgument type '_Bool'
|   |     `-TemplateArgument expr
|   |       `-BinaryOperator '<dependent type>' '&&'
|   |         |-BinaryOperator '<dependent type>' '&&'
|   |         | |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |         | `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |         `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |-TypeAliasTemplateDecl __has_enabled_hash
|   | |-TemplateTypeParmDecl referenced class depth 0 index 0 _Key
|   | |-TemplateTypeParmDecl referenced class depth 0 index 1 _Hash
|   | | `-TemplateArgument type 'std::hash<_Key>':'hash<_Key>'
|   | `-TypeAliasDecl __has_enabled_hash 'integral_constant<_Bool, __check_hash_requirements<_Key, _Hash>::value && is_default_constructible<_Hash>::value>'
|   |   `-TemplateSpecializationType 'integral_constant<_Bool, __check_hash_requirements<_Key, _Hash>::value && is_default_constructible<_Hash>::value>' dependent integral_constant
|   |     |-TemplateArgument type '_Bool'
|   |     `-TemplateArgument expr
|   |       `-BinaryOperator '<dependent type>' '&&'
|   |         |-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   |         `-DependentScopeDeclRefExpr '<dependent type>' lvalue
|   `-TypeAliasTemplateDecl __enable_hash_helper
|     |-TemplateTypeParmDecl referenced class depth 0 index 0 _Type
|     |-TemplateTypeParmDecl class depth 0 index 1 ...
|     `-TypeAliasDecl __enable_hash_helper '_Type'
|       `-TemplateTypeParmType '_Type' dependent depth 0 index 0
|         `-TemplateTypeParm '_Type'
|-CXXRecordDecl referenced struct A definition
| |-CXXRecordDecl implicit referenced struct A
| |-CXXConstructorDecl used A 'void (void)'
| | `-CompoundStmt
| |-CXXConstructorDecl used A 'void (const struct A &)'
| | |-ParmVarDecl rhs 'const struct A &'
| | `-CompoundStmt
| |-CXXConstructorDecl used A 'void (struct A &&) noexcept'
| | |-ParmVarDecl o 'struct A &&'
| | `-CompoundStmt
| |-CXXMethodDecl operator= 'struct A &(const struct A &)'
| | |-ParmVarDecl rhs 'const struct A &'
| | `-CompoundStmt
| |   `-ReturnStmt
| |     `-UnaryOperator 'struct A' lvalue prefix '*'
| |       `-CXXThisExpr 'struct A *' this
| |-CXXMethodDecl used operator= 'struct A &(struct A &&) noexcept'
| | |-ParmVarDecl rhs 'struct A &&'
| | `-CompoundStmt
| |   `-ReturnStmt
| |     `-UnaryOperator 'struct A' lvalue prefix '*'
| |       `-CXXThisExpr 'struct A *' this
| `-CXXDestructorDecl referenced ~A 'void (void) noexcept' default trivial
|-FunctionDecl used func1 'struct A (struct A)'
| |-ParmVarDecl used a 'struct A'
| `-CompoundStmt
|   `-ReturnStmt
|     `-CXXConstructExpr 'struct A' 'void (struct A &&) noexcept'
|       `-ImplicitCastExpr 'struct A' xvalue <NoOp>
|         `-DeclRefExpr 'struct A' lvalue ParmVar 0x7fe0280af920 'a' 'struct A'
|-FunctionDecl used func2 'struct A (struct A &&)'
| |-ParmVarDecl used a 'struct A &&'
| `-CompoundStmt
|   `-ReturnStmt
|     `-CXXConstructExpr 'struct A' 'void (struct A &&) noexcept'
|       `-CallExpr 'typename remove_reference<struct A &>::type':'struct A' xvalue
|         |-ImplicitCastExpr 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fe0280b0430 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fe028821408 'move')
|         `-DeclRefExpr 'struct A' lvalue ParmVar 0x7fe0280afb40 'a' 'struct A &&'
|-FunctionDecl used func3 'struct A (struct A &&)'
| |-ParmVarDecl used a 'struct A &&'
| `-CompoundStmt
|   `-ReturnStmt
|     `-CXXConstructExpr 'struct A' 'void (const struct A &)'
|       `-ImplicitCastExpr 'const struct A' lvalue <NoOp>
|         `-DeclRefExpr 'struct A' lvalue ParmVar 0x7fe0280b0930 'a' 'struct A &&'
`-FunctionDecl main 'int (void)'
  `-CompoundStmt
    |-DeclStmt
    | `-VarDecl used a1 'struct A' listinit
    |   `-CXXConstructExpr 'struct A' 'void (void)'
    |-DeclStmt
    | `-VarDecl a2 'struct A':'struct A' cinit
    |   `-CXXConstructExpr 'struct A':'struct A' 'void (struct A &&) noexcept'
    |     `-CallExpr 'typename remove_reference<struct A &>::type':'struct A' xvalue
    |       |-ImplicitCastExpr 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fe0280b0430 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fe028821408 'move')
    |       `-DeclRefExpr 'struct A' lvalue Var 0x7fe0280b0c10 'a1' 'struct A'
    |-DeclStmt
    | `-VarDecl used a3 'struct A' listinit
    |   `-CXXConstructExpr 'struct A' 'void (void)'
    |-CXXOperatorCallExpr 'struct A' lvalue
    | |-ImplicitCastExpr 'struct A &(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    | | `-DeclRefExpr 'struct A &(struct A &&) noexcept' lvalue CXXMethod 0x7fe0280af618 'operator=' 'struct A &(struct A &&) noexcept'
    | |-DeclRefExpr 'struct A' lvalue Var 0x7fe0280b0fc0 'a3' 'struct A'
    | `-CallExpr 'typename remove_reference<struct A &>::type':'struct A' xvalue
    |   |-ImplicitCastExpr 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fe0280b0430 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fe028821408 'move')
    |   `-DeclRefExpr 'struct A' lvalue Var 0x7fe0280b0c10 'a1' 'struct A'
    |-DeclStmt
    | `-VarDecl a4 'struct A':'struct A' cinit
    |   `-ExprWithCleanups 'struct A':'struct A'
    |     `-CXXConstructExpr 'struct A':'struct A' 'void (struct A &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 'struct A' xvalue
    |         `-CallExpr 'struct A'
    |           |-ImplicitCastExpr 'struct A (*)(struct A)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 'struct A (struct A)' lvalue Function 0x7fe0280af9e0 'func1' 'struct A (struct A)'
    |           `-CXXConstructExpr 'struct A' 'void (const struct A &)'
    |             `-ImplicitCastExpr 'const struct A' lvalue <NoOp>
    |               `-DeclRefExpr 'struct A' lvalue Var 0x7fe0280b0c10 'a1' 'struct A'
    |-DeclStmt
    | `-VarDecl a5 'struct A':'struct A' cinit
    |   `-ExprWithCleanups 'struct A':'struct A'
    |     `-CXXConstructExpr 'struct A':'struct A' 'void (struct A &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 'struct A' xvalue
    |         `-CallExpr 'struct A'
    |           |-ImplicitCastExpr 'struct A (*)(struct A)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 'struct A (struct A)' lvalue Function 0x7fe0280af9e0 'func1' 'struct A (struct A)'
    |           `-CXXConstructExpr 'struct A' 'void (void)'
    |-DeclStmt
    | `-VarDecl a6 'struct A':'struct A' cinit
    |   `-ExprWithCleanups 'struct A':'struct A'
    |     `-CXXConstructExpr 'struct A':'struct A' 'void (struct A &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 'struct A' xvalue
    |         `-CallExpr 'struct A'
    |           |-ImplicitCastExpr 'struct A (*)(struct A &&)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 'struct A (struct A &&)' lvalue Function 0x7fe0280afc00 'func2' 'struct A (struct A &&)'
    |           `-CallExpr 'typename remove_reference<struct A &>::type':'struct A' xvalue
    |             |-ImplicitCastExpr 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fe0280b0430 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fe028821408 'move')
    |             `-DeclRefExpr 'struct A' lvalue Var 0x7fe0280b0c10 'a1' 'struct A'
    |-DeclStmt
    | `-VarDecl used a7 'struct A' listinit
    |   `-CXXConstructExpr 'struct A' 'void (void)'
    |-ExprWithCleanups 'struct A' lvalue
    | `-CXXOperatorCallExpr 'struct A' lvalue
    |   |-ImplicitCastExpr 'struct A &(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'struct A &(struct A &&) noexcept' lvalue CXXMethod 0x7fe0280af618 'operator=' 'struct A &(struct A &&) noexcept'
    |   |-DeclRefExpr 'struct A' lvalue Var 0x7fe0280b1c28 'a7' 'struct A'
    |   `-MaterializeTemporaryExpr 'struct A' xvalue
    |     `-CallExpr 'struct A'
    |       |-ImplicitCastExpr 'struct A (*)(struct A &&)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 'struct A (struct A &&)' lvalue Function 0x7fe0280afc00 'func2' 'struct A (struct A &&)'
    |       `-MaterializeTemporaryExpr 'struct A' xvalue
    |         `-CXXConstructExpr 'struct A' 'void (void)'
    |-DeclStmt
    | `-VarDecl a8 'struct A':'struct A' cinit
    |   `-ExprWithCleanups 'struct A':'struct A'
    |     `-CXXConstructExpr 'struct A':'struct A' 'void (struct A &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 'struct A' xvalue
    |         `-CallExpr 'struct A'
    |           |-ImplicitCastExpr 'struct A (*)(struct A &&)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 'struct A (struct A &&)' lvalue Function 0x7fe0280b09b8 'func3' 'struct A (struct A &&)'
    |           `-CallExpr 'typename remove_reference<struct A &>::type':'struct A' xvalue
    |             |-ImplicitCastExpr 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fe0280b0430 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fe028821408 'move')
    |             `-DeclRefExpr 'struct A' lvalue Var 0x7fe0280b0c10 'a1' 'struct A'
    |-DeclStmt
    | `-VarDecl used a9 'struct A' listinit
    |   `-CXXConstructExpr 'struct A' 'void (void)'
    |-ExprWithCleanups 'struct A' lvalue
    | `-CXXOperatorCallExpr 'struct A' lvalue
    |   |-ImplicitCastExpr 'struct A &(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'struct A &(struct A &&) noexcept' lvalue CXXMethod 0x7fe0280af618 'operator=' 'struct A &(struct A &&) noexcept'
    |   |-DeclRefExpr 'struct A' lvalue Var 0x7fe0280b22d8 'a9' 'struct A'
    |   `-MaterializeTemporaryExpr 'struct A' xvalue
    |     `-CallExpr 'struct A'
    |       |-ImplicitCastExpr 'struct A (*)(struct A &&)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 'struct A (struct A &&)' lvalue Function 0x7fe0280b09b8 'func3' 'struct A (struct A &&)'
    |       `-MaterializeTemporaryExpr 'struct A' xvalue
    |         `-CXXConstructExpr 'struct A' 'void (void)'
    `-ReturnStmt
      `-IntegerLiteral 'int' 0
