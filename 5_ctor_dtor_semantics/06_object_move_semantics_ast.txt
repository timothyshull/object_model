TranslationUnitDecl 0x7fa81c0326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fa81c032c60 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fa81c032940 '__int128'
|-TypedefDecl 0x7fa81c032cd0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fa81c032960 'unsigned __int128'
|-TypedefDecl 0x7fa81c033018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fa81c032dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fa81c032d28 '__NSConstantString_tag'
|-TypedefDecl 0x7fa81c0330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fa81c033070 'char *'
|   `-BuiltinType 0x7fa81c032760 'char'
|-TypedefDecl 0x7fa81c066400 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fa81c033390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fa81c0331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fa81c033108 '__va_list_tag'
|-NamespaceDecl 0x7fa81c066458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7fa81c0664c0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-TypedefDecl 0x7fa81c066540 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0x7fa81c0327e0 'long'
|-TypedefDecl 0x7fa81c0665b0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x7fa81c032880 'unsigned long'
|-TypedefDecl 0x7fa81c066620 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| `-BuiltinType 0x7fa81c032900 'long double'
|-NamespaceDecl 0x7fa81c066678 prev 0x7fa81c066458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| |-original Namespace 0x7fa81c066458 'std'
| `-TypedefDecl 0x7fa81c066738 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
|   `-DecltypeType 0x7fa81c066700 'decltype(nullptr)' sugar
|     |-CXXNullPtrLiteralExpr 0x7fa81c0666e0 <col:22> 'nullptr_t'
|     `-BuiltinType 0x7fa81c032c10 'nullptr_t'
|-NamespaceDecl 0x7fa81c066790 prev 0x7fa81c066678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fa81c066458 'std'
| `-NamespaceDecl 0x7fa81c0667f8 prev 0x7fa81c0664c0 <col:52, line:439:36> <scratch space>:53:1 __1 inline
|   |-original Namespace 0x7fa81c0664c0 '__1'
|   |-UsingDecl 0x7fa81c066880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
|   |-UsingShadowDecl 0x7fa81c0668d0 <col:9> col:9 implicit Typedef 0x7fa81c066540 'ptrdiff_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81c066920 <line:50:1, col:9> col:9 ::size_t
|   |-UsingShadowDecl 0x7fa81c066970 <col:9> col:9 implicit Typedef 0x7fa81c0665b0 'size_t'
|   | `-TypedefType 0x7fa81c0ce3d0 'size_t' sugar
|   |   |-Typedef 0x7fa81c0665b0 'size_t'
|   |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-UsingDecl 0x7fa81c0669c0 <line:55:1, col:9> col:9 ::max_align_t
|   `-UsingShadowDecl 0x7fa81c066a10 <col:9> col:9 implicit Typedef 0x7fa81c066620 'max_align_t'
|     `-<<<NULL>>>
|-NamespaceDecl 0x7fa81c066a58 prev 0x7fa81c066790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fa81c066458 'std'
| `-NamespaceDecl 0x7fa81c066ac0 prev 0x7fa81c0667f8 <col:52, line:439:36> <scratch space>:54:1 __1 inline
|   |-original Namespace 0x7fa81c0664c0 '__1'
|   |-ClassTemplateDecl 0x7fa81c066dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
|   | |-TemplateTypeParmDecl 0x7fa81c066b28 <col:11, col:17> col:17 class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81c066bc8 <col:22, col:28> col:28 class depth 0 index 1 _T2
|   | |-CXXRecordDecl 0x7fa81c066d38 <col:33, col:61> col:61 struct pair
|   | | `-TypeVisibilityAttr 0x7fa81c067008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-ClassTemplateSpecializationDecl 0x7fa81c811488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:311:1, line:546:1> line:312:29 struct pair definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-CXXRecordDecl 0x7fa81d1b4f18 prev 0x7fa81c811488 <col:1, col:29> col:29 implicit struct pair
|   |   |-TypedefDecl 0x7fa81d1b4fe8 <line:317:5, col:17> col:17 first_type 'unsigned long':'unsigned long'
|   |   | `-SubstTemplateTypeParmType 0x7fa81d1b4fb0 'unsigned long' sugar
|   |   |   |-TemplateTypeParmType 0x7fa81d14c320 '_T1' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm 0x7fa81d14c2e0 '_T1'
|   |   |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |   |-TypedefDecl 0x7fa81d1b5078 <line:318:5, col:17> col:17 second_type 'unsigned long':'unsigned long'
|   |   | `-SubstTemplateTypeParmType 0x7fa81d1b5040 'unsigned long' sugar
|   |   |   |-TemplateTypeParmType 0x7fa81d14c390 '_T2' dependent depth 0 index 1
|   |   |   | `-TemplateTypeParm 0x7fa81d14c348 '_T2'
|   |   |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |   |-FieldDecl 0x7fa81d1b50e0 <line:320:5, col:9> col:9 referenced first 'unsigned long':'unsigned long'
|   |   |-FieldDecl 0x7fa81d1b5138 <line:321:5, col:9> col:9 referenced second 'unsigned long':'unsigned long'
|   |   |-CXXConstructorDecl 0x7fa81d1b52c0 <line:324:5, col:31> col:5 constexpr pair 'void (const struct std::__1::pair<unsigned long, unsigned long> &)' default trivial noexcept-unevaluated 0x7fa81d1b52c0
|   |   | `-ParmVarDecl 0x7fa81d1b51b8 <col:10, col:20> col:21 'const struct std::__1::pair<unsigned long, unsigned long> &'
|   |   |-CXXConstructorDecl 0x7fa81d1b54a0 <line:325:5, col:26> col:5 used constexpr pair 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' default trivial
|   |   | |-ParmVarDecl 0x7fa81d1b53b8 <col:10, col:14> col:16 used 'struct std::__1::pair<unsigned long, unsigned long> &&'
|   |   | |-CXXCtorInitializer Field 0x7fa81d1b50e0 'first' 'unsigned long':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x7fa81d1eabb8 <col:5> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |   `-MemberExpr 0x7fa81d1eab80 <col:5> 'unsigned long':'unsigned long' xvalue .first 0x7fa81d1b50e0
|   |   | |     `-CXXStaticCastExpr 0x7fa81d1eab50 <col:5> 'struct std::__1::pair<unsigned long, unsigned long>' xvalue static_cast<struct std::__1::pair<unsigned long, unsigned long> &&> <NoOp>
|   |   | |       `-DeclRefExpr 0x7fa81d1eab18 <col:5> 'struct std::__1::pair<unsigned long, unsigned long>' lvalue ParmVar 0x7fa81d1b53b8 '' 'struct std::__1::pair<unsigned long, unsigned long> &&'
|   |   | |-CXXCtorInitializer Field 0x7fa81d1b5138 'second' 'unsigned long':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x7fa81d1eac98 <col:5> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |   `-MemberExpr 0x7fa81d1eac60 <col:5> 'unsigned long':'unsigned long' xvalue .second 0x7fa81d1b5138
|   |   | |     `-CXXStaticCastExpr 0x7fa81d1eac30 <col:5> 'struct std::__1::pair<unsigned long, unsigned long>' xvalue static_cast<struct std::__1::pair<unsigned long, unsigned long> &&> <NoOp>
|   |   | |       `-DeclRefExpr 0x7fa81d1eabf8 <col:5> 'struct std::__1::pair<unsigned long, unsigned long>' lvalue ParmVar 0x7fa81d1b53b8 '' 'struct std::__1::pair<unsigned long, unsigned long> &&'
|   |   | `-CompoundStmt 0x7fa81d1eace8 <col:26>
|   |   |-TypeAliasTemplateDecl 0x7fa81d1b7830 <line:348:5, line:349:54> col:5 _EnableB
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1b5560 <line:348:15, col:20> col:20 referenced '_Bool' depth 0 index 0 _Val
|   |   | `-TypeAliasDecl 0x7fa81d1b77d0 <line:349:5, col:54> col:11 _EnableB 'typename enable_if<_Val, _Bool>::type'
|   |   |   `-DependentNameType 0x7fa81d1b7780 'typename enable_if<_Val, _Bool>::type' dependent
|   |   |-CXXRecordDecl 0x7fa81d1b7888 <line:351:5, line:373:5> line:351:12 struct _CheckArgs definition
|   |   | |-CXXRecordDecl 0x7fa81d1bad68 prev 0x7fa81d1b7888 <col:5, col:12> col:12 implicit struct _CheckArgs
|   |   | |-FunctionTemplateDecl 0x7fa81d1baf90 <line:352:7, line:356:7> line:353:29 __enable_default
|   |   | | |-TemplateTypeParmDecl 0x7fa81d1bae00 <line:352:17, col:23> col:23 class depth 0 index 0 _U1
|   |   | | |-TemplateTypeParmDecl 0x7fa81d1bae68 <col:28, col:34> col:34 class depth 0 index 1 _U2
|   |   | | `-CXXMethodDecl 0x7fa81d1baef8 <line:353:7, line:356:7> line:353:29 constexpr __enable_default '_Bool (void)' static
|   |   | |-FunctionTemplateDecl 0x7fa81d1bb200 <line:358:7, line:364:7> line:359:29 __enable_explicit
|   |   | | |-TemplateTypeParmDecl 0x7fa81d1bb068 <line:358:17, col:23> col:23 class depth 0 index 0 _U1
|   |   | | |-TemplateTypeParmDecl 0x7fa81d1bb0d8 <col:28, col:34> col:34 class depth 0 index 1 _U2
|   |   | | |-CXXMethodDecl 0x7fa81d1bb168 <line:359:7, line:364:7> line:359:29 constexpr __enable_explicit '_Bool (void)' static
|   |   | | |-CXXMethodDecl 0x7fa81d202db0 <col:7, line:364:7> line:359:29 referenced constexpr __enable_explicit '_Bool (void)' static
|   |   | | | |-TemplateArgument type 'const unsigned long &'
|   |   | | | |-TemplateArgument type 'const unsigned long &'
|   |   | | | `-CompoundStmt 0x7fa81d203668 <col:49, line:364:7>
|   |   | | |   `-ReturnStmt 0x7fa81d203650 <line:360:11, line:363:62>
|   |   | | |     `-BinaryOperator 0x7fa81d203628 <line:360:18, line:363:62> '_Bool' '&&'
|   |   | | |       |-BinaryOperator 0x7fa81d2032f8 <line:360:18, line:361:54> '_Bool' '&&'
|   |   | | |       | |-ImplicitCastExpr 0x7fa81d2032c8 <line:360:18, col:53> '_Bool':'_Bool' <LValueToRValue>
|   |   | | |       | | `-DeclRefExpr 0x7fa81d203120 <col:18, col:53> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   | | |       | `-ImplicitCastExpr 0x7fa81d2032e0 <line:361:18, col:54> '_Bool':'_Bool' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 0x7fa81d203290 <col:18, col:54> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   | | |       `-ParenExpr 0x7fa81d203608 <line:362:18, line:363:62> '_Bool'
|   |   | | |         `-BinaryOperator 0x7fa81d2035e0 <line:362:19, line:363:57> '_Bool' '||'
|   |   | | |           |-UnaryOperator 0x7fa81d203460 <line:362:19, col:53> '_Bool' prefix '!'
|   |   | | |           | `-ImplicitCastExpr 0x7fa81d203448 <col:20, col:53> '_Bool':'_Bool' <LValueToRValue>
|   |   | | |           |   `-DeclRefExpr 0x7fa81d203410 <col:20, col:53> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   | | |           `-UnaryOperator 0x7fa81d2035c0 <line:363:22, col:57> '_Bool' prefix '!'
|   |   | | |             `-ImplicitCastExpr 0x7fa81d2035a8 <col:23, col:57> '_Bool':'_Bool' <LValueToRValue>
|   |   | | |               `-DeclRefExpr 0x7fa81d203570 <col:23, col:57> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   | | `-CXXMethodDecl 0x7fa81d204550 <line:359:7, line:364:7> line:359:29 referenced constexpr __enable_explicit '_Bool (void)' static
|   |   | |   |-TemplateArgument type 'unsigned long'
|   |   | |   |-TemplateArgument type 'unsigned long'
|   |   | |   `-CompoundStmt 0x7fa81d204d88 <col:49, line:364:7>
|   |   | |     `-ReturnStmt 0x7fa81d204d70 <line:360:11, line:363:62>
|   |   | |       `-BinaryOperator 0x7fa81d204d48 <line:360:18, line:363:62> '_Bool' '&&'
|   |   | |         |-BinaryOperator 0x7fa81d204a18 <line:360:18, line:361:54> '_Bool' '&&'
|   |   | |         | |-ImplicitCastExpr 0x7fa81d2049e8 <line:360:18, col:53> '_Bool':'_Bool' <LValueToRValue>
|   |   | |         | | `-DeclRefExpr 0x7fa81d204840 <col:18, col:53> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   | |         | `-ImplicitCastExpr 0x7fa81d204a00 <line:361:18, col:54> '_Bool':'_Bool' <LValueToRValue>
|   |   | |         |   `-DeclRefExpr 0x7fa81d2049b0 <col:18, col:54> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   | |         `-ParenExpr 0x7fa81d204d28 <line:362:18, line:363:62> '_Bool'
|   |   | |           `-BinaryOperator 0x7fa81d204d00 <line:362:19, line:363:57> '_Bool' '||'
|   |   | |             |-UnaryOperator 0x7fa81d204b80 <line:362:19, col:53> '_Bool' prefix '!'
|   |   | |             | `-ImplicitCastExpr 0x7fa81d204b68 <col:20, col:53> '_Bool':'_Bool' <LValueToRValue>
|   |   | |             |   `-DeclRefExpr 0x7fa81d204b30 <col:20, col:53> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   | |             `-UnaryOperator 0x7fa81d204ce0 <line:363:22, col:57> '_Bool' prefix '!'
|   |   | |               `-ImplicitCastExpr 0x7fa81d204cc8 <col:23, col:57> '_Bool':'_Bool' <LValueToRValue>
|   |   | |                 `-DeclRefExpr 0x7fa81d204c90 <col:23, col:57> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   | `-FunctionTemplateDecl 0x7fa81d1bb470 <line:366:7, line:372:7> line:367:29 __enable_implicit
|   |   |   |-TemplateTypeParmDecl 0x7fa81d1bb2d8 <line:366:17, col:23> col:23 class depth 0 index 0 _U1
|   |   |   |-TemplateTypeParmDecl 0x7fa81d1bb348 <col:28, col:34> col:34 class depth 0 index 1 _U2
|   |   |   |-CXXMethodDecl 0x7fa81d1bb3d8 <line:367:7, line:372:7> line:367:29 constexpr __enable_implicit '_Bool (void)' static
|   |   |   |-CXXMethodDecl 0x7fa81d1dc248 <col:7, line:372:7> line:367:29 referenced constexpr __enable_implicit '_Bool (void)' static
|   |   |   | |-TemplateArgument type 'const unsigned long &'
|   |   |   | |-TemplateArgument type 'const unsigned long &'
|   |   |   | `-CompoundStmt 0x7fa81d1dd780 <col:49, line:372:7>
|   |   |   |   `-ReturnStmt 0x7fa81d1dd768 <line:368:11, line:371:52>
|   |   |   |     `-BinaryOperator 0x7fa81d1dd740 <line:368:18, line:371:52> '_Bool' '&&'
|   |   |   |       |-BinaryOperator 0x7fa81d1dd5d0 <line:368:18, line:370:51> '_Bool' '&&'
|   |   |   |       | |-BinaryOperator 0x7fa81d1dcb98 <line:368:18, line:369:54> '_Bool' '&&'
|   |   |   |       | | |-ImplicitCastExpr 0x7fa81d1dcb68 <line:368:18, col:53> '_Bool':'_Bool' <LValueToRValue>
|   |   |   |       | | | `-DeclRefExpr 0x7fa81d1dc9c0 <col:18, col:53> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   |   |       | | `-ImplicitCastExpr 0x7fa81d1dcb80 <line:369:18, col:54> '_Bool':'_Bool' <LValueToRValue>
|   |   |   |       | |   `-DeclRefExpr 0x7fa81d1dcb30 <col:18, col:54> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   |   |       | `-ImplicitCastExpr 0x7fa81d1dd5b8 <line:370:18, col:51> '_Bool':'_Bool' <LValueToRValue>
|   |   |   |       |   `-DeclRefExpr 0x7fa81d1dd580 <col:18, col:51> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   |   |       `-ImplicitCastExpr 0x7fa81d1dd728 <line:371:18, col:52> '_Bool':'_Bool' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x7fa81d1dd6f0 <col:18, col:52> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   |   `-CXXMethodDecl 0x7fa81d1de380 <line:367:7, line:372:7> line:367:29 referenced constexpr __enable_implicit '_Bool (void)' static
|   |   |     |-TemplateArgument type 'unsigned long'
|   |   |     |-TemplateArgument type 'unsigned long'
|   |   |     `-CompoundStmt 0x7fa81d1e0100 <col:49, line:372:7>
|   |   |       `-ReturnStmt 0x7fa81d1e00e8 <line:368:11, line:371:52>
|   |   |         `-BinaryOperator 0x7fa81d1e00c0 <line:368:18, line:371:52> '_Bool' '&&'
|   |   |           |-BinaryOperator 0x7fa81d1dff50 <line:368:18, line:370:51> '_Bool' '&&'
|   |   |           | |-BinaryOperator 0x7fa81d1dec48 <line:368:18, line:369:54> '_Bool' '&&'
|   |   |           | | |-ImplicitCastExpr 0x7fa81d1dec18 <line:368:18, col:53> '_Bool':'_Bool' <LValueToRValue>
|   |   |           | | | `-DeclRefExpr 0x7fa81d1dea70 <col:18, col:53> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   |           | | `-ImplicitCastExpr 0x7fa81d1dec30 <line:369:18, col:54> '_Bool':'_Bool' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 0x7fa81d1debe0 <col:18, col:54> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   |           | `-ImplicitCastExpr 0x7fa81d1dff38 <line:370:18, col:51> '_Bool':'_Bool' <LValueToRValue>
|   |   |           |   `-DeclRefExpr 0x7fa81d1dff00 <col:18, col:51> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   |           `-ImplicitCastExpr 0x7fa81d1e00a8 <line:371:18, col:52> '_Bool':'_Bool' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x7fa81d1e0070 <col:18, col:52> 'const _Bool':'const _Bool' lvalue Var 0x7fa81d1c6898 'value' 'const _Bool':'const _Bool'
|   |   |-TypeAliasTemplateDecl 0x7fa81d1b7c80 <line:375:5, line:377:66> line:376:5 _CheckArgsDep
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1b7950 <line:375:15, col:20> col:20 referenced '_Bool' depth 0 index 0 _MaybeEnable
|   |   | `-TypeAliasDecl 0x7fa81d1b7c20 <line:376:5, line:377:66> line:376:11 _CheckArgsDep 'typename conditional<_MaybeEnable, struct _CheckArgs, struct __check_tuple_constructor_fail>::type'
|   |   |   `-DependentNameType 0x7fa81d1b7bd0 'typename conditional<_MaybeEnable, struct _CheckArgs, struct __check_tuple_constructor_fail>::type' dependent
|   |   |-CXXRecordDecl 0x7fa81d1b7cd8 <line:379:5, col:12> col:12 struct _CheckTupleLikeConstructor
|   |   |-TypeAliasTemplateDecl 0x7fa81d1b8ae0 <line:397:5, line:403:8> line:398:5 _CheckTLC
|   |   | |-TemplateTypeParmDecl 0x7fa81d1b7da0 <line:397:15, col:21> col:21 class depth 0 index 0 _Tuple
|   |   | `-TypeAliasDecl 0x7fa81d1b8a80 <line:398:5, line:403:8> line:398:11 _CheckTLC 'typename conditional<__tuple_like_with_size<_Tuple, 2>::value && !is_same<typename decay<_Tuple>::type, struct pair<unsigned long, unsigned long> >::value, struct _CheckTupleLikeConstructor, struct __check_tuple_constructor_fail>::type'
|   |   |   `-DependentNameType 0x7fa81d1b8a30 'typename conditional<__tuple_like_with_size<_Tuple, 2>::value && !is_same<typename decay<_Tuple>::type, struct pair<unsigned long, unsigned long> >::value, struct _CheckTupleLikeConstructor, struct __check_tuple_constructor_fail>::type' dependent
|   |   |-FunctionTemplateDecl 0x7fa81d1b93e0 <line:405:5, line:409:33> col:5 pair
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1b8b38 <line:405:14, col:28> col:19 referenced '_Bool' depth 0 index 0 _Dummy
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d14f8c0 <col:28> '_Bool' true
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1b92a0 <col:34, line:407:9> col:7 '_EnableB<_CheckArgsDep<_Dummy>::template __enable_default<unsigned long, unsigned long>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_default<unsigned long, unsigned long>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d1500d0 <col:9> '_Bool' false
|   |   | `-CXXConstructorDecl 0x7fa81d1b9338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:409:33> col:5 constexpr pair 'void (void)'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1b9458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1b9fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:411:5, line:416:38> line:415:14 pair
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1b9528 <line:411:15, col:29> col:20 referenced '_Bool' depth 0 index 0 _Dummy
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d150d78 <col:29> '_Bool' true
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1b9d00 <col:35, line:413:9> col:7 '_EnableB<_CheckArgsDep<_Dummy>::template __enable_explicit<const unsigned long &, const unsigned long &>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_explicit<const unsigned long &, const unsigned long &>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d1515d0 <col:9> '_Bool' false
|   |   | `-CXXConstructorDecl 0x7fa81d1b9f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:416:38> line:415:14 constexpr pair 'void (const unsigned long &, const unsigned long &)'
|   |   |   |-ParmVarDecl 0x7fa81d1b9d88 <col:19, col:30> col:30 __t1 'const unsigned long &'
|   |   |   |-ParmVarDecl 0x7fa81d1b9df8 <col:36, col:47> col:47 __t2 'const unsigned long &'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1ba038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1baaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:418:5, line:423:38> line:422:5 pair
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1ba108 <line:418:14, col:28> col:19 referenced '_Bool' depth 0 index 0 _Dummy
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d151fd8 <col:28> '_Bool' true
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1ba850 <col:34, line:420:9> col:7 '_EnableB<_CheckArgsDep<_Dummy>::template __enable_implicit<const unsigned long &, const unsigned long &>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_implicit<const unsigned long &, const unsigned long &>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d1527f0 <col:9> '_Bool' false
|   |   | |-CXXConstructorDecl 0x7fa81d1ba9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:423:38> line:422:5 constexpr pair 'void (const unsigned long &, const unsigned long &)'
|   |   | | |-ParmVarDecl 0x7fa81d1ba8d8 <col:10, col:21> col:21 __t1 'const unsigned long &'
|   |   | | |-ParmVarDecl 0x7fa81d1ba948 <col:27, col:38> col:38 __t2 'const unsigned long &'
|   |   | | `-AlwaysInlineAttr 0x7fa81d1bab00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   | `-CXXConstructorDecl 0x7fa81d2041c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:423:38> line:422:5 constexpr pair 'void (const unsigned long &, const unsigned long &)'
|   |   |   |-TemplateArgument integral 1
|   |   |   |-TemplateArgument integral 0
|   |   |   |-ParmVarDecl 0x7fa81d2040d0 <col:10, col:21> col:21 __t1 'const unsigned long &'
|   |   |   |-ParmVarDecl 0x7fa81d204130 <col:27, col:38> col:38 __t2 'const unsigned long &'
|   |   |   `-AlwaysInlineAttr 0x7fa81d2042e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1bdf28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:425:5, line:430:80> line:429:14 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1babd0 <line:425:14, col:20> col:20 class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl 0x7fa81d1bac38 <col:25, col:31> col:31 class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1bdbf0 <col:36, line:427:9> col:7 '_EnableB<struct _CheckArgs::template __enable_explicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<_U1, _U2>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d1536e0 <col:9> '_Bool' false
|   |   | `-CXXConstructorDecl 0x7fa81d1bde80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:80> line:429:14 constexpr pair 'void (_U1 &&, _U2 &&)'
|   |   |   |-ParmVarDecl 0x7fa81d1bdca8 <col:19, col:25> col:25 __u1 '_U1 &&'
|   |   |   |-ParmVarDecl 0x7fa81d1bdd48 <col:31, col:37> col:37 __u2 '_U2 &&'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1bdf88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1be868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:432:5, line:437:80> line:436:5 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1be058 <line:432:14, col:20> col:20 class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl 0x7fa81d1be0c8 <col:25, col:31> col:31 class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1be570 <col:36, line:434:9> col:7 '_EnableB<struct _CheckArgs::template __enable_implicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<_U1, _U2>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d154430 <col:9> '_Bool' false
|   |   | |-CXXConstructorDecl 0x7fa81d1be7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:80> line:436:5 constexpr pair 'void (_U1 &&, _U2 &&)'
|   |   | | |-ParmVarDecl 0x7fa81d1be628 <col:10, col:16> col:16 __u1 '_U1 &&'
|   |   | | |-ParmVarDecl 0x7fa81d1be6c8 <col:22, col:28> col:28 __u2 '_U2 &&'
|   |   | | `-AlwaysInlineAttr 0x7fa81d1be8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   | `-CXXConstructorDecl 0x7fa81d205790 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:80> line:436:5 used constexpr pair 'void (unsigned long &&, unsigned long &&)'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument integral 0
|   |   |   |-ParmVarDecl 0x7fa81d2055d8 <col:10, col:16> col:16 used __u1 'unsigned long &&'
|   |   |   |-ParmVarDecl 0x7fa81d205678 <col:22, col:28> col:28 used __u2 'unsigned long &&'
|   |   |   |-CXXCtorInitializer Field 0x7fa81d1b50e0 'first' 'unsigned long':'unsigned long'
|   |   |   | `-ImplicitCastExpr 0x7fa81d206cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:41> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |   |   `-CallExpr 0x7fa81d206c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:41> 'unsigned long':'unsigned long' xvalue
|   |   |   |     |-ImplicitCastExpr 0x7fa81d206c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:35> 'unsigned long &&(*)(typename remove_reference<unsigned long>::type &) noexcept' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x7fa81d206ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:35> 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' lvalue Function 0x7fa81d206748 'forward' 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' (FunctionTemplate 0x7fa81c10ab50 'forward')
|   |   |   |     `-DeclRefExpr 0x7fa81d205aa8 <col:37> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81d2055d8 '__u1' 'unsigned long &&'
|   |   |   |-CXXCtorInitializer Field 0x7fa81d1b5138 'second' 'unsigned long':'unsigned long'
|   |   |   | `-ImplicitCastExpr 0x7fa81d2072c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:76> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |   |   `-CallExpr 0x7fa81d207268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:76> 'unsigned long':'unsigned long' xvalue
|   |   |   |     |-ImplicitCastExpr 0x7fa81d207250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:70> 'unsigned long &&(*)(typename remove_reference<unsigned long>::type &) noexcept' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x7fa81d2071d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:70> 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' lvalue Function 0x7fa81d206748 'forward' 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' (FunctionTemplate 0x7fa81c10ab50 'forward')
|   |   |   |     `-DeclRefExpr 0x7fa81d206dc8 <col:72> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81d205678 '__u2' 'unsigned long &&'
|   |   |   |-CompoundStmt 0x7fa81d167da0 <col:79, col:80>
|   |   |   `-AlwaysInlineAttr 0x7fa81d2058d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1bf258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:439:5, line:444:49> line:443:14 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1be998 <line:439:14, col:20> col:20 class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl 0x7fa81d1bea08 <col:25, col:31> col:31 class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1bef10 <col:36, line:441:9> col:7 '_EnableB<struct _CheckArgs::template __enable_explicit<const _U1 &, const _U2 &>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<const _U1 &, const _U2 &>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d155180 <col:9> '_Bool' false
|   |   | `-CXXConstructorDecl 0x7fa81d1bf1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:444:49> line:443:14 constexpr pair 'void (const pair<_U1, _U2> &)'
|   |   |   |-ParmVarDecl 0x7fa81d1bf088 <col:19, col:41> col:41 __p 'const pair<_U1, _U2> &'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1bf2b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1bfbf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:446:5, line:451:49> line:450:5 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1bf380 <line:446:14, col:20> col:20 class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl 0x7fa81d1bf3e8 <col:25, col:31> col:31 class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1bf8f0 <col:36, line:448:9> col:7 '_EnableB<struct _CheckArgs::template __enable_implicit<const _U1 &, const _U2 &>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<const _U1 &, const _U2 &>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d155f90 <col:9> '_Bool' false
|   |   | |-CXXConstructorDecl 0x7fa81d1bfb50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:451:49> line:450:5 constexpr pair 'void (const pair<_U1, _U2> &)'
|   |   | | |-ParmVarDecl 0x7fa81d1bfa68 <col:10, col:32> col:32 __p 'const pair<_U1, _U2> &'
|   |   | | `-AlwaysInlineAttr 0x7fa81d1bfc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   | `-CXXConstructorDecl 0x7fa81d1ddfe0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:451:49> line:450:5 constexpr pair 'void (const pair<unsigned long, unsigned long> &)'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument integral 0
|   |   |   |-ParmVarDecl 0x7fa81d1ddf18 <col:10, col:32> col:32 __p 'const pair<unsigned long, unsigned long> &'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1de118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1c04c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:453:5, line:458:91> line:457:14 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1bfd20 <line:453:14, col:20> col:20 class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl 0x7fa81d1bfd88 <col:25, col:31> col:31 class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1c0180 <col:36, line:455:9> col:7 '_EnableB<struct _CheckArgs::template __enable_explicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<_U1, _U2>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d156bc0 <col:9> '_Bool' false
|   |   | `-CXXConstructorDecl 0x7fa81d1c0420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:91> line:457:14 constexpr pair 'void (pair<_U1, _U2> &&)'
|   |   |   |-ParmVarDecl 0x7fa81d1c02f8 <col:19, col:35> col:35 __p 'pair<_U1, _U2> &&'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1c0520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1c0d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:460:5, line:465:91> line:464:5 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1c05f0 <line:460:14, col:20> col:20 class depth 0 index 0 _U1
|   |   | |-TemplateTypeParmDecl 0x7fa81d1c0658 <col:25, col:31> col:31 class depth 0 index 1 _U2
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1c0a50 <col:36, line:462:9> col:7 '_EnableB<struct _CheckArgs::template __enable_implicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<_U1, _U2>(), _Bool>::type' depth 0 index 2
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d157860 <col:9> '_Bool' false
|   |   | |-CXXConstructorDecl 0x7fa81d1c0cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:91> line:464:5 constexpr pair 'void (pair<_U1, _U2> &&)'
|   |   | | |-ParmVarDecl 0x7fa81d1c0bc8 <col:10, col:27> col:27 __p 'pair<_U1, _U2> &&'
|   |   | | `-AlwaysInlineAttr 0x7fa81d1c0db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   | `-CXXConstructorDecl 0x7fa81d1e05f0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:91> line:464:5 constexpr pair 'void (pair<unsigned long, unsigned long> &&)'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument type 'unsigned long'
|   |   |   |-TemplateArgument integral 0
|   |   |   |-ParmVarDecl 0x7fa81d1e0528 <col:10, col:27> col:27 __p 'pair<unsigned long, unsigned long> &&'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1e0728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1c3658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:467:5, line:473:63> line:471:14 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1c0e80 <line:467:14, col:20> col:20 class depth 0 index 0 _Tuple
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1c33d0 <col:28, line:469:9> col:7 '_EnableB<_CheckTLC<_Tuple>::template __enable_explicit<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_explicit<_Tuple>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d158fe0 <col:9> '_Bool' false
|   |   | `-CXXConstructorDecl 0x7fa81d1c35b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:63> line:471:14 constexpr pair 'void (_Tuple &&)'
|   |   |   |-ParmVarDecl 0x7fa81d1c3488 <col:19, col:28> col:28 __p '_Tuple &&'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1c36b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1c4888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:475:5, line:481:63> line:479:5 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1c3780 <line:475:14, col:20> col:20 class depth 0 index 0 _Tuple
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1c4640 <col:28, line:477:9> col:7 '_EnableB<_CheckTLC<_Tuple>::template __enable_implicit<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_implicit<_Tuple>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d15b8a0 <col:9> '_Bool' false
|   |   | `-CXXConstructorDecl 0x7fa81d1c47e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:63> line:479:5 constexpr pair 'void (_Tuple &&)'
|   |   |   |-ParmVarDecl 0x7fa81d1c46f8 <col:10, col:19> col:19 __p '_Tuple &&'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1c48e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1c4f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:483:5, line:489:77> line:485:5 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1c49b0 <line:483:15, col:24> col:24 class depth 0 index 0 ... _Args1
|   |   | |-TemplateTypeParmDecl 0x7fa81d1c4a18 <col:32, col:41> col:41 class depth 0 index 1 ... _Args2
|   |   | `-CXXConstructorDecl 0x7fa81d1c4ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:489:77> line:485:5 pair 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>)'
|   |   |   |-ParmVarDecl 0x7fa81d1c4aa8 <col:10, col:32> col:32 __pc 'struct std::__1::piecewise_construct_t'
|   |   |   |-ParmVarDecl 0x7fa81d1c4c18 <line:486:10, col:27> col:27 __first_args 'tuple<_Args1...>'
|   |   |   |-ParmVarDecl 0x7fa81d1c4d88 <col:41, col:58> col:58 __second_args 'tuple<_Args2...>'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1c4ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-CXXMethodDecl 0x7fa81d1d4440 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:502:5> line:492:11 operator= 'struct std::__1::pair<unsigned long, unsigned long> &(const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &)' noexcept-uninstantiated 0x7fa81d15e4e8
|   |   | |-ParmVarDecl 0x7fa81d1d4330 <col:21, line:495:47> col:47 __p 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &'
|   |   | `-AlwaysInlineAttr 0x7fa81d1d4538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-CXXMethodDecl 0x7fa81d1d9c00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:515:5> line:505:11 used operator= 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)'
|   |   | |-ParmVarDecl 0x7fa81d1d9af0 <col:21, line:508:42> col:42 used __p 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&'
|   |   | |-CompoundStmt 0x7fa81d209dc8 <line:511:5, line:515:5>
|   |   | | |-BinaryOperator 0x7fa81d209710 <line:512:9, col:53> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-MemberExpr 0x7fa81d209110 <col:9> 'unsigned long':'unsigned long' lvalue ->first 0x7fa81d1b50e0
|   |   | | | | `-CXXThisExpr 0x7fa81d2090f8 <col:9> 'struct std::__1::pair<unsigned long, unsigned long> *' this
|   |   | | | `-ImplicitCastExpr 0x7fa81d2096f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:53> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-CallExpr 0x7fa81d2096c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:53> 'unsigned long':'unsigned long' xvalue
|   |   | | |     |-ImplicitCastExpr 0x7fa81d2096b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:42> 'unsigned long &&(*)(typename remove_reference<unsigned long>::type &) noexcept' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d209630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:42> 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' lvalue Function 0x7fa81d206748 'forward' 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' (FunctionTemplate 0x7fa81c10ab50 'forward')
|   |   | | |     `-MemberExpr 0x7fa81d209220 <col:44, col:48> 'unsigned long':'unsigned long' lvalue .first 0x7fa81d1b50e0
|   |   | | |       `-DeclRefExpr 0x7fa81d2091f8 <col:44> 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type':'struct std::__1::pair<unsigned long, unsigned long>' lvalue ParmVar 0x7fa81d1d9af0 '__p' 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&'
|   |   | | |-BinaryOperator 0x7fa81d209d50 <line:513:9, col:56> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-MemberExpr 0x7fa81d209750 <col:9> 'unsigned long':'unsigned long' lvalue ->second 0x7fa81d1b5138
|   |   | | | | `-CXXThisExpr 0x7fa81d209738 <col:9> 'struct std::__1::pair<unsigned long, unsigned long> *' this
|   |   | | | `-ImplicitCastExpr 0x7fa81d209d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:56> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-CallExpr 0x7fa81d209d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:56> 'unsigned long':'unsigned long' xvalue
|   |   | | |     |-ImplicitCastExpr 0x7fa81d209cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:44> 'unsigned long &&(*)(typename remove_reference<unsigned long>::type &) noexcept' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d209c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:44> 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' lvalue Function 0x7fa81d206748 'forward' 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' (FunctionTemplate 0x7fa81c10ab50 'forward')
|   |   | | |     `-MemberExpr 0x7fa81d209860 <col:46, col:50> 'unsigned long':'unsigned long' lvalue .second 0x7fa81d1b5138
|   |   | | |       `-DeclRefExpr 0x7fa81d209838 <col:46> 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type':'struct std::__1::pair<unsigned long, unsigned long>' lvalue ParmVar 0x7fa81d1d9af0 '__p' 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&'
|   |   | | `-ReturnStmt 0x7fa81d209db0 <line:514:9, col:17>
|   |   | |   `-UnaryOperator 0x7fa81d209d90 <col:16, col:17> 'struct std::__1::pair<unsigned long, unsigned long>' lvalue prefix '*'
|   |   | |     `-CXXThisExpr 0x7fa81d209d78 <col:17> 'struct std::__1::pair<unsigned long, unsigned long> *' this
|   |   | `-AlwaysInlineAttr 0x7fa81d1d9cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-FunctionTemplateDecl 0x7fa81d1dae98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:517:5, line:525:5> line:521:11 operator=
|   |   | |-TemplateTypeParmDecl 0x7fa81d1d9d40 <line:517:15, col:21> col:21 class depth 0 index 0 _Tuple
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1dac00 <col:29, line:519:10> col:8 '_EnableB<_CheckTLC<_Tuple>::template __enable_assign<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_assign<_Tuple>(), _Bool>::type' depth 0 index 1
|   |   | | `-TemplateArgument expr
|   |   | |   `-CXXBoolLiteralExpr 0x7fa81d15fce0 <col:10> '_Bool' false
|   |   | `-CXXMethodDecl 0x7fa81d1dae00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:525:5> line:521:11 operator= 'struct std::__1::pair<unsigned long, unsigned long> &(_Tuple &&)'
|   |   |   |-ParmVarDecl 0x7fa81d1dacb8 <col:21, col:30> col:30 __p '_Tuple &&'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1daef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-CXXMethodDecl 0x7fa81d1db0e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:536:5> line:530:5 swap 'void (struct std::__1::pair<unsigned long, unsigned long> &)' noexcept-uninstantiated 0x7fa81d160f68
|   |   | |-ParmVarDecl 0x7fa81d1dafd0 <col:10, col:16> col:16 __p 'struct std::__1::pair<unsigned long, unsigned long> &'
|   |   | `-AlwaysInlineAttr 0x7fa81d1db1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-AccessSpecDecl 0x7fa81d1db220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:537:1, col:8> col:1 private
|   |   |-FunctionTemplateDecl 0x7fa81d1dbca8 <line:540:5, line:544:62> line:542:9 pair
|   |   | |-TemplateTypeParmDecl 0x7fa81d1db248 <line:540:15, col:24> col:24 class depth 0 index 0 ... _Args1
|   |   | |-TemplateTypeParmDecl 0x7fa81d1db2b8 <col:32, col:41> col:41 class depth 0 index 1 ... _Args2
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1db328 <col:49, col:59> col:59 referenced 'size_t':'unsigned long' depth 0 index 2 ... _I1
|   |   | |-NonTypeTemplateParmDecl 0x7fa81d1db380 <col:64, col:74> col:74 referenced 'size_t':'unsigned long' depth 0 index 3 ... _I2
|   |   | `-CXXConstructorDecl 0x7fa81d1dbc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:544:62> line:542:9 pair 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...> &, tuple<_Args2...> &, __tuple_indices<_I1...>, __tuple_indices<_I2...>)'
|   |   |   |-ParmVarDecl 0x7fa81d1db408 <col:14> col:35 'struct std::__1::piecewise_construct_t'
|   |   |   |-ParmVarDecl 0x7fa81d1db5e0 <line:543:14, col:32> col:32 __first_args 'tuple<_Args1...> &'
|   |   |   |-ParmVarDecl 0x7fa81d1db780 <col:46, col:64> col:64 __second_args 'tuple<_Args2...> &'
|   |   |   |-ParmVarDecl 0x7fa81d1db8d8 <line:544:14, col:36> col:37 '__tuple_indices<_I1...>'
|   |   |   |-ParmVarDecl 0x7fa81d1dba78 <col:39, col:61> col:62 '__tuple_indices<_I2...>'
|   |   |   `-AlwaysInlineAttr 0x7fa81d1dbd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-CXXDestructorDecl 0x7fa81d1dbec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:312:29> col:29 implicit referenced ~pair 'void (void) noexcept' inline default trivial
|   |-ClassTemplateDecl 0x7fa81c067198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
|   | |-TemplateTypeParmDecl 0x7fa81c067050 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c067100 <col:22, col:49> col:49 class reference_wrapper
|   |   `-TypeVisibilityAttr 0x7fa81c0673a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |-ClassTemplateDecl 0x7fa81c0a6948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
|   | |-TemplateTypeParmDecl 0x7fa81c0a6800 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0a68b0 <col:22, col:50> col:50 struct hash
|   | | `-TypeVisibilityAttr 0x7fa81c0a6b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-ClassTemplateSpecialization 0x7fa81d84a310 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d84ae38 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e800d70 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e8018c0 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e802408 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e802f28 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e803a48 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e804570 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1988d0 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d199420 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d199f70 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d19aac0 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d19b610 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d19c148 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a1050 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a1f38 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a2e08 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a3ce0 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a52b0 'hash'
|   | `-ClassTemplateSpecialization 0x7fa81d1a6800 'hash'
|   |-ClassTemplateDecl 0x7fa81c0a6cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
|   | |-TemplateTypeParmDecl 0x7fa81c0a6ba0 <line:402:11> col:11 class depth 0 index 0
|   | `-CXXRecordDecl 0x7fa81c0a6c20 <line:403:1, col:38> col:8 struct __void_t definition
|   |   |-CXXRecordDecl 0x7fa81c0a6f30 <col:1, col:8> col:8 implicit struct __void_t
|   |   `-TypedefDecl 0x7fa81c0a6fd8 <col:19, col:32> col:32 type 'void'
|   |     `-BuiltinType 0x7fa81c032720 'void'
|   |-ClassTemplateDecl 0x7fa81c0a7168 <line:405:1, line:406:39> col:8 __identity
|   | |-TemplateTypeParmDecl 0x7fa81c0a7050 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0a70d0 <line:406:1, col:39> col:8 struct __identity definition
|   |   |-CXXRecordDecl 0x7fa81c0a73e0 <col:1, col:8> col:8 implicit struct __identity
|   |   `-TypedefDecl 0x7fa81c0a7488 <col:21, col:33> col:33 type '_Tp'
|   |     `-TemplateTypeParmType 0x7fa81c0a7090 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81c0a7050 '_Tp'
|   |-ClassTemplateDecl 0x7fa81c0a76b8 <line:408:1, line:409:60> col:29 __dependent_type
|   | |-TemplateTypeParmDecl 0x7fa81c0a7500 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c0a7578 <col:22> col:26 '_Bool' depth 0 index 1
|   | `-CXXRecordDecl 0x7fa81c0a7620 <line:409:1, col:60> col:29 struct __dependent_type definition
|   |   |-public '_Tp'
|   |   |-TypeVisibilityAttr 0x7fa81c0a8980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0a8a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
|   |-ClassTemplateDecl 0x7fa81c0a8d28 <line:411:1, line:412:63> col:33 conditional
|   | |-NonTypeTemplateParmDecl 0x7fa81c0a8ad0 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl 0x7fa81c0a8b28 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
|   | |-TemplateTypeParmDecl 0x7fa81c0a8b98 <col:32, col:38> col:38 class depth 0 index 2 _Then
|   | |-CXXRecordDecl 0x7fa81c0a8c90 <line:412:5, col:63> col:33 struct conditional definition
|   | | |-TypeVisibilityAttr 0x7fa81c0a9030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81c0a9078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
|   | | `-TypedefDecl 0x7fa81c0a9120 <col:46, col:58> col:58 type '_If'
|   | |   `-TemplateTypeParmType 0x7fa81c0a8b70 '_If' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c0a8b28 '_If'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1d3e70 <line:411:1, line:412:63> col:33 struct conditional definition
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | | |-TemplateArgument type 'struct std::__1::__nat'
|   | | |-CXXRecordDecl 0x7fa81d1d4148 prev 0x7fa81d1d3e70 <col:5, col:33> col:33 implicit struct conditional
|   | | `-TypedefDecl 0x7fa81d1d4218 <col:46, col:58> col:58 referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1d41e0 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0a8b70 '_If' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81c0a8b28 '_If'
|   | |     `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   | |       `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1e9068 <line:413:1, line:414:84> col:33 struct conditional definition
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long> *'
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | | |-CXXRecordDecl 0x7fa81d1e93f0 prev 0x7fa81d1e9068 <col:5, col:33> col:33 implicit struct conditional
|   | | `-TypedefDecl 0x7fa81d1e9498 <col:65, col:79> col:79 referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1e9340 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0a9250 '_Then' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81c0a9208 '_Then'
|   | |     `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   | |       `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1e9d58 <line:413:1, line:414:84> col:33 struct conditional definition
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>::_CheckTupleLikeConstructor'
|   | | |-TemplateArgument type 'struct std::__1::__check_tuple_constructor_fail'
|   | | |-CXXRecordDecl 0x7fa81d1ea0e0 prev 0x7fa81d1e9d58 <col:5, col:33> col:33 implicit struct conditional
|   | | `-TypedefDecl 0x7fa81d1ea188 <col:65, col:79> col:79 referenced type 'struct std::__1::__check_tuple_constructor_fail':'struct std::__1::__check_tuple_constructor_fail'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1ea030 'struct std::__1::__check_tuple_constructor_fail' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0a9250 '_Then' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81c0a9208 '_Then'
|   | |     `-RecordType 0x7fa81d08d560 'struct std::__1::__check_tuple_constructor_fail'
|   | |       `-CXXRecord 0x7fa81d08d4c8 '__check_tuple_constructor_fail'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d202738 <line:411:1, line:412:63> col:33 struct conditional definition
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs'
|   |   |-TemplateArgument type 'struct std::__1::__check_tuple_constructor_fail'
|   |   |-CXXRecordDecl 0x7fa81d202a08 prev 0x7fa81d202738 <col:5, col:33> col:33 implicit struct conditional
|   |   `-TypedefDecl 0x7fa81d202ad8 <col:46, col:58> col:58 referenced type 'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs':'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs'
|   |     `-SubstTemplateTypeParmType 0x7fa81d202aa0 'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs' sugar
|   |       |-TemplateTypeParmType 0x7fa81c0a8b70 '_If' dependent depth 0 index 1
|   |       | `-TemplateTypeParm 0x7fa81c0a8b28 '_If'
|   |       `-RecordType 0x7fa81d1b7920 'struct std::__1::pair<unsigned long, unsigned long>::_CheckArgs'
|   |         `-CXXRecord 0x7fa81d1b7888 '_CheckArgs'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0a9498 <line:413:1, line:414:84> col:33 struct conditional definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x7fa81c0a9198 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
|   | |-TemplateTypeParmDecl 0x7fa81c0a9208 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
|   | |-TypeVisibilityAttr 0x7fa81c0a9630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81c0aa800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
|   | `-TypedefDecl 0x7fa81c0aa8a8 <col:65, col:79> col:79 type '_Then'
|   |   `-TemplateTypeParmType 0x7fa81c0a9250 '_Then' dependent depth 0 index 1
|   |     `-TemplateTypeParm 0x7fa81c0a9208 '_Then'
|   |-TypeAliasTemplateDecl 0x7fa81c0aacf0 <line:417:1, col:106> col:45 conditional_t
|   | |-NonTypeTemplateParmDecl 0x7fa81c0aa930 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl 0x7fa81c0aa988 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
|   | |-TemplateTypeParmDecl 0x7fa81c0aa9f8 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
|   | `-TypeAliasDecl 0x7fa81c0aac90 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
|   |   `-DependentNameType 0x7fa81c0aac20 'typename conditional<_Bp, _If, _Then>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c0aaf00 <line:420:1, col:74> col:56 __lazy_enable_if
|   | |-NonTypeTemplateParmDecl 0x7fa81c0aad50 <col:11> col:15 '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl 0x7fa81c0aada8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
|   | `-CXXRecordDecl 0x7fa81c0aae68 <col:28, col:74> col:56 struct __lazy_enable_if definition
|   |   |-TypeVisibilityAttr 0x7fa81c0ab1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0ab208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0ab4d0 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0ab2c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0ab640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81c0ab800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
|   | `-TypedefDecl 0x7fa81c0ab980 <col:79, col:106> col:106 type 'typename _Tp::type'
|   |   `-DependentNameType 0x7fa81c0ab910 'typename _Tp::type' dependent
|   |-ClassTemplateDecl 0x7fa81c0abbc0 <line:423:1, col:74> col:63 enable_if
|   | |-NonTypeTemplateParmDecl 0x7fa81c0aba08 <col:11> col:15 '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl 0x7fa81c0aba70 <col:17, col:29> col:23 class depth 0 index 1 _Tp
|   | | `-TemplateArgument type 'void'
|   | |-CXXRecordDecl 0x7fa81c0abb28 <col:35, col:74> col:63 struct enable_if definition
|   | | |-TypeVisibilityAttr 0x7fa81c0abe80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0abec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1dd8d0 <line:424:1, col:89> col:50 struct enable_if definition
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type '_Bool'
|   | | |-CXXRecordDecl 0x7fa81d1ddbb0 prev 0x7fa81d1dd8d0 <col:22, col:50> col:50 implicit struct enable_if
|   | | `-TypedefDecl 0x7fa81d1ddc58 <col:72, col:84> col:84 referenced type '_Bool':'_Bool'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1ddb00 '_Bool' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0abfc0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0abf80 '_Tp'
|   | |     `-BuiltinType 0x7fa81c032740 '_Bool'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1ea760 <line:423:1, col:74> col:63 struct enable_if definition
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type '_Bool'
|   | | `-CXXRecordDecl 0x7fa81d1ea9e8 prev 0x7fa81d1ea760 <col:35, col:63> col:63 implicit struct enable_if
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1f3420 <line:424:1, col:89> col:50 struct enable_if definition
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type 'void'
|   |   |-CXXRecordDecl 0x7fa81d1f36d0 prev 0x7fa81d1f3420 <col:22, col:50> col:50 implicit struct enable_if
|   |   `-TypedefDecl 0x7fa81d1f3778 <col:72, col:84> col:84 referenced type 'void':'void'
|   |     `-SubstTemplateTypeParmType 0x7fa81d1f3620 'void' sugar
|   |       |-TemplateTypeParmType 0x7fa81c0abfc0 '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c0abf80 '_Tp'
|   |       `-BuiltinType 0x7fa81c032720 'void'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0ac190 <col:1, col:89> col:50 struct enable_if definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0abf80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0ac300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81c0ac470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
|   | `-TypedefDecl 0x7fa81c0ac518 <col:72, col:84> col:84 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81c0abfc0 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81c0abf80 '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81c0ac8d0 <line:427:1, col:89> col:39 enable_if_t
|   | |-NonTypeTemplateParmDecl 0x7fa81c0ac5a0 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl 0x7fa81c0ac608 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
|   | | `-TemplateArgument type 'void'
|   | `-TypeAliasDecl 0x7fa81c0ac870 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
|   |   `-DependentNameType 0x7fa81c0ac800 'typename enable_if<_Bp, _Tp>::type' dependent
|   |-FunctionTemplateDecl 0x7fa81c0acd70 <line:433:1, line:440:1> line:437:1 addressof
|   | |-TemplateTypeParmDecl 0x7fa81c0ac920 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl 0x7fa81c0accd8 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81c0acb68 <col:11, col:16> col:16 referenced __x '_Tp &'
|   |   |-CompoundStmt 0x7fa81c0ad188 <line:438:1, line:440:1>
|   |   | `-ReturnStmt 0x7fa81c0ad170 <line:439:5, col:35>
|   |   |   `-CallExpr 0x7fa81c0ad140 <col:12, col:35> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fa81c0ad0f0 <col:12> '<builtin fn type>' Function 0x7fa81c0acf58 '__builtin_addressof' 'void *(void &) noexcept'
|   |   |     `-DeclRefExpr 0x7fa81c0ad118 <col:32> '_Tp' lvalue ParmVar 0x7fa81c0acb68 '__x' '_Tp &'
|   |   |-AlwaysInlineAttr 0x7fa81c0acdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   |-VisibilityAttr 0x7fa81c0ace10 <col:51, col:74> Hidden
|   |   `-NoSanitizeAttr 0x7fa81c0ace20 <line:296:39, col:60> cfi
|   |-FunctionTemplateDecl 0x7fa81c0ad470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
|   | |-TemplateTypeParmDecl 0x7fa81c0ad1a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl 0x7fa81c0ad3d8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
|   |   `-ParmVarDecl 0x7fa81c0ad298 <col:37, col:46> col:48 'const _Tp &&'
|   |-CXXRecordDecl 0x7fa81c0ad4c8 <line:499:1, col:28> col:8 referenced struct __two definition
|   | |-CXXRecordDecl 0x7fa81c0ad5e8 <col:1, col:8> col:8 implicit struct __two
|   | |-FieldDecl 0x7fa81c0ad6f8 <col:15, col:26> col:20 __lx 'char [2]'
|   | `-CXXDestructorDecl 0x7fa81d1cb0d8 <col:8> col:8 implicit referenced ~__two 'void (void) noexcept' inline default trivial
|   |-ClassTemplateDecl 0x7fa81c0ae140 <line:503:1, line:515:1> line:504:29 integral_constant
|   | |-TemplateTypeParmDecl 0x7fa81c0ad760 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c0ae000 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
|   | |-CXXRecordDecl 0x7fa81c0ae0a8 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
|   | | |-TypeVisibilityAttr 0x7fa81c0ae400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81c0ae448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
|   | | |-VarDecl 0x7fa81c0ae4f0 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
|   | | | `-DeclRefExpr 0x7fa81c0ae550 <col:53> '_Tp' NonTypeTemplateParm 0x7fa81c0ae000 '__v' '_Tp'
|   | | |-TypedefDecl 0x7fa81c0ae588 <line:507:5, col:31> col:31 referenced value_type '_Tp'
|   | | | `-TemplateTypeParmType 0x7fa81c0ad7a0 '_Tp' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm 0x7fa81c0ad760 '_Tp'
|   | | |-TypedefDecl 0x7fa81c0ae5f0 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
|   | | | `-InjectedClassNameType 0x7fa81c0ae370 'integral_constant<_Tp, __v>' dependent
|   | | |   `-CXXRecord 0x7fa81c0ae0a8 'integral_constant'
|   | | |-CXXConversionDecl 0x7fa81c0ae788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
|   | | | |-CompoundStmt 0x7fa81c0aea58 <col:65, col:79>
|   | | | | `-ReturnStmt 0x7fa81c0aea40 <col:66, col:73>
|   | | | |   `-DeclRefExpr 0x7fa81c0aea18 <col:73> 'const _Tp' lvalue Var 0x7fa81c0ae4f0 'value' 'const _Tp'
|   | | | |-AlwaysInlineAttr 0x7fa81c0ae820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr 0x7fa81c0ae868 <col:51, col:74> Hidden
|   | | `-CXXMethodDecl 0x7fa81c0ae8d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
|   | |   |-CompoundStmt 0x7fa81c0aeab8 <col:61, col:75>
|   | |   | `-ReturnStmt 0x7fa81c0aeaa0 <col:62, col:69>
|   | |   |   `-DeclRefExpr 0x7fa81c0aea78 <col:69> 'const _Tp' lvalue Var 0x7fa81c0ae4f0 'value' 'const _Tp'
|   | |   |-AlwaysInlineAttr 0x7fa81c0ae970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81c0ae9b8 <col:51, col:74> Hidden
|   | |-ClassTemplateSpecializationDecl 0x7fa81c0af000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
|   | | |-TemplateArgument type '_Bool'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl 0x7fa81c0b0998 prev 0x7fa81c0af000 <col:1, col:29> col:29 implicit struct integral_constant
|   | | |-VarDecl 0x7fa81c0b0a40 <line:506:5, col:53> col:45 used value 'const _Bool':'const _Bool' static constexpr cinit
|   | | | `-SubstNonTypeTemplateParmExpr 0x7fa81c0b0ac8 <col:53> '_Bool'
|   | | |   `-CXXBoolLiteralExpr 0x7fa81c0b0ab0 <col:53> '_Bool' true
|   | | |-TypedefDecl 0x7fa81c0b0b58 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
|   | | | `-SubstTemplateTypeParmType 0x7fa81c0aef60 '_Bool' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81c0ad7a0 '_Tp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81c0ad760 '_Tp'
|   | | |   `-BuiltinType 0x7fa81c032740 '_Bool'
|   | | |-TypedefDecl 0x7fa81c0b0bc0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
|   | | | `-RecordType 0x7fa81c0af100 'struct std::__1::integral_constant<_Bool, true>'
|   | | |   `-ClassTemplateSpecialization 0x7fa81c0af000 'integral_constant'
|   | | |-CXXConversionDecl 0x7fa81c0b0ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
|   | | | `-AlwaysInlineAttr 0x7fa81c0b0d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-CXXMethodDecl 0x7fa81c0b0df0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
|   | |   `-AlwaysInlineAttr 0x7fa81c0b0e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl 0x7fa81c0af2d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
|   | | |-TemplateArgument type '_Bool'
|   | | |-TemplateArgument integral 0
|   | | |-CXXRecordDecl 0x7fa81c0b0000 prev 0x7fa81c0af2d0 <col:1, col:29> col:29 implicit struct integral_constant
|   | | |-VarDecl 0x7fa81c0b00a8 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
|   | | | `-SubstNonTypeTemplateParmExpr 0x7fa81c0b0130 <col:53> '_Bool'
|   | | |   `-CXXBoolLiteralExpr 0x7fa81c0b0118 <col:53> '_Bool' false
|   | | |-TypedefDecl 0x7fa81c0b01c0 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
|   | | | `-SubstTemplateTypeParmType 0x7fa81c0aef60 '_Bool' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81c0ad7a0 '_Tp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81c0ad760 '_Tp'
|   | | |   `-BuiltinType 0x7fa81c032740 '_Bool'
|   | | |-TypedefDecl 0x7fa81c0b0228 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
|   | | | `-RecordType 0x7fa81c0af3d0 'struct std::__1::integral_constant<_Bool, false>'
|   | | |   `-ClassTemplateSpecialization 0x7fa81c0af2d0 'integral_constant'
|   | | |-CXXConversionDecl 0x7fa81c0b0358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
|   | | | `-AlwaysInlineAttr 0x7fa81c0b0428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-CXXMethodDecl 0x7fa81c0b04a0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
|   | |   `-AlwaysInlineAttr 0x7fa81c0b0548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl 0x7fa81d015ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument integral 0
|   | | |-CXXRecordDecl 0x7fa81d015ed0 prev 0x7fa81d015ca0 <col:1, col:29> col:29 implicit struct integral_constant
|   | | |-VarDecl 0x7fa81d015f78 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
|   | | | `-SubstNonTypeTemplateParmExpr 0x7fa81d016008 <col:53> 'unsigned long'
|   | | |   `-IntegerLiteral 0x7fa81d015fe8 <col:53> 'unsigned long' 0
|   | | |-TypedefDecl 0x7fa81d016098 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d015c50 'unsigned long' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81c0ad7a0 '_Tp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81c0ad760 '_Tp'
|   | | |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | | |-TypedefDecl 0x7fa81d016100 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
|   | | | `-RecordType 0x7fa81d015da0 'struct std::__1::integral_constant<unsigned long, 0>'
|   | | |   `-ClassTemplateSpecialization 0x7fa81d015ca0 'integral_constant'
|   | | |-CXXConversionDecl 0x7fa81d016238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
|   | | | `-AlwaysInlineAttr 0x7fa81d016308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-CXXMethodDecl 0x7fa81d016380 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
|   | |   `-AlwaysInlineAttr 0x7fa81d016428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-ClassTemplateSpecializationDecl 0x7fa81d173468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 2
|   |   |-CXXRecordDecl 0x7fa81d1736a0 prev 0x7fa81d173468 <col:1, col:29> col:29 implicit struct integral_constant
|   |   |-VarDecl 0x7fa81d173748 <line:506:5, col:53> col:45 referenced value 'const unsigned long':'const unsigned long' static constexpr cinit
|   |   | `-SubstNonTypeTemplateParmExpr 0x7fa81d1737d8 <col:53> 'unsigned long'
|   |   |   `-IntegerLiteral 0x7fa81d1737b8 <col:53> 'unsigned long' 2
|   |   |-TypedefDecl 0x7fa81d174868 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
|   |   | `-SubstTemplateTypeParmType 0x7fa81d015c50 'unsigned long' sugar
|   |   |   |-TemplateTypeParmType 0x7fa81c0ad7a0 '_Tp' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm 0x7fa81c0ad760 '_Tp'
|   |   |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |   |-TypedefDecl 0x7fa81d1748d0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 2>'
|   |   | `-RecordType 0x7fa81d173570 'struct std::__1::integral_constant<unsigned long, 2>'
|   |   |   `-ClassTemplateSpecialization 0x7fa81d173468 'integral_constant'
|   |   |-CXXConversionDecl 0x7fa81d1749b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 2>::value_type (void) const noexcept'
|   |   | `-AlwaysInlineAttr 0x7fa81d174a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-CXXMethodDecl 0x7fa81d174b00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 2>::value_type (void) const noexcept'
|   |     `-AlwaysInlineAttr 0x7fa81d174ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-VarDecl 0x7fa81c0aee60 parent 0x7fa81c0ae0a8 prev 0x7fa81c0ae4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
|   |-TypedefDecl 0x7fa81c0af210 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
|   | `-TemplateSpecializationType 0x7fa81c0af120 'integral_constant<_Bool, (true)>' sugar integral_constant
|   |   |-TemplateArgument type '_Bool'
|   |   |-TemplateArgument expr
|   |   | `-ParenExpr 0x7fa81c0aef28 <line:525:59, col:63> '_Bool'
|   |   |   `-CXXBoolLiteralExpr 0x7fa81c0aef10 <line:528:31> '_Bool' true
|   |   `-RecordType 0x7fa81c0af100 'struct std::__1::integral_constant<_Bool, true>'
|   |     `-ClassTemplateSpecialization 0x7fa81c0af000 'integral_constant'
|   |-TypedefDecl 0x7fa81c0af4e0 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
|   | `-TemplateSpecializationType 0x7fa81c0af3f0 'integral_constant<_Bool, (false)>' sugar integral_constant
|   |   |-TemplateArgument type '_Bool'
|   |   |-TemplateArgument expr
|   |   | `-ParenExpr 0x7fa81c0af290 <line:525:59, col:63> '_Bool'
|   |   |   `-CXXBoolLiteralExpr 0x7fa81c0af278 <line:529:31> '_Bool' false
|   |   `-RecordType 0x7fa81c0af3d0 'struct std::__1::integral_constant<_Bool, false>'
|   |     `-ClassTemplateSpecialization 0x7fa81c0af2d0 'integral_constant'
|   |-ClassTemplateDecl 0x7fa81c0af6f0 <line:535:1, line:536:8> col:8 __lazy_and_impl
|   | |-NonTypeTemplateParmDecl 0x7fa81c0af548 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
|   | |-TemplateTypeParmDecl 0x7fa81c0af5a0 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
|   | |-CXXRecordDecl 0x7fa81c0af658 <line:536:1, col:8> col:8 struct __lazy_and_impl
|   | `-ClassTemplateSpecialization 0x7fa81c0b06c0 '__lazy_and_impl'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0afc90 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0...'
|   | |-TemplateTypeParmDecl 0x7fa81c0af9d8 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
|   | `-CXXRecordDecl 0x7fa81c0b05e0 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
|   |-ClassTemplateSpecializationDecl 0x7fa81c0b06c0 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl 0x7fa81c0b0f30 <col:1, col:8> col:8 implicit struct __lazy_and_impl
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0b1210 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
|   | |-public 'integral_constant<_Bool, _Pred::type::value>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0b1000 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
|   | `-CXXRecordDecl 0x7fa81c0b1728 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0b1b10 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
|   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl 0x7fa81c0b17e0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl 0x7fa81c0b1848 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
|   | `-CXXRecordDecl 0x7fa81c0b20d8 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
|   |-ClassTemplateDecl 0x7fa81c0b2320 <line:550:1, line:551:64> col:8 __lazy_and
|   | |-TemplateTypeParmDecl 0x7fa81c0b2190 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
|   | |-TemplateTypeParmDecl 0x7fa81c0b21f8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
|   | `-CXXRecordDecl 0x7fa81c0b2288 <line:551:1, col:64> col:8 struct __lazy_and definition
|   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
|   |   `-CXXRecordDecl 0x7fa81c0b2828 <col:1, col:8> col:8 implicit struct __lazy_and
|   |-ClassTemplateDecl 0x7fa81c0b2a70 <line:555:1, line:556:8> col:8 __lazy_or_impl
|   | |-NonTypeTemplateParmDecl 0x7fa81c0b28f0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
|   | |-TemplateTypeParmDecl 0x7fa81c0b2948 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
|   | |-CXXRecordDecl 0x7fa81c0b29d8 <line:556:1, col:8> col:8 struct __lazy_or_impl
|   | `-ClassTemplateSpecialization 0x7fa81c0b33e0 '__lazy_or_impl'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0b3000 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0...'
|   | |-TemplateTypeParmDecl 0x7fa81c0b2d28 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
|   | `-CXXRecordDecl 0x7fa81c0b3300 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
|   |-ClassTemplateSpecializationDecl 0x7fa81c0b33e0 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl 0x7fa81c0b3660 <col:1, col:8> col:8 implicit struct __lazy_or_impl
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0b3a50 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
|   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl 0x7fa81c0b3718 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl 0x7fa81c0b3788 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
|   | `-CXXRecordDecl 0x7fa81c0b8e00 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
|   |-ClassTemplateDecl 0x7fa81c0b9050 <line:568:1, line:569:62> col:8 __lazy_or
|   | |-TemplateTypeParmDecl 0x7fa81c0b8eb8 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
|   | |-TemplateTypeParmDecl 0x7fa81c0b8f28 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
|   | `-CXXRecordDecl 0x7fa81c0b8fb8 <line:569:1, col:62> col:8 struct __lazy_or definition
|   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
|   |   `-CXXRecordDecl 0x7fa81c0b9558 <col:1, col:8> col:8 implicit struct __lazy_or
|   |-ClassTemplateDecl 0x7fa81c0b9728 <line:573:1, line:574:67> col:8 __lazy_not
|   | |-TemplateTypeParmDecl 0x7fa81c0b9610 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
|   | `-CXXRecordDecl 0x7fa81c0b9690 <line:574:1, col:67> col:8 struct __lazy_not definition
|   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
|   |   `-CXXRecordDecl 0x7fa81c0b9be8 <col:1, col:8> col:8 implicit struct __lazy_not
|   |-ClassTemplateDecl 0x7fa81c0b9e00 <line:577:1, col:27> col:27 __and_
|   | |-TemplateTypeParmDecl 0x7fa81c0b9ca0 <col:10> col:10 class depth 0 index 0 ...
|   | |-CXXRecordDecl 0x7fa81c0b9d20 <col:20, col:27> col:27 struct __and_
|   | `-ClassTemplateSpecialization 0x7fa81c0ba088 '__and_'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0ba088 <line:578:1, col:41> col:19 struct __and_ definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl 0x7fa81c0ba2c0 <col:12, col:19> col:19 implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0ba518 <line:580:1, col:47> col:28 struct __and_ definition
|   | |-public '_B0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0ba378 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
|   | `-CXXRecordDecl 0x7fa81c0ba7c0 <col:21, col:28> col:28 implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0bab08 <line:582:1, line:583:68> col:8 struct __and_ definition
|   | |-public 'conditional<_B0::value, _B1, _B0>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x7fa81c0ba878 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl 0x7fa81c0ba8e8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
|   | `-CXXRecordDecl 0x7fa81c0bc110 <line:583:1, col:8> col:8 implicit struct __and_
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0bc6c8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
|   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument type 'type-parameter-0-2'
|   | | `-TemplateArgument type 'type-parameter-0-3...'
|   | |-TemplateTypeParmDecl 0x7fa81c0bc1c8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl 0x7fa81c0bc238 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
|   | |-TemplateTypeParmDecl 0x7fa81c0bc2a8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
|   | |-TemplateTypeParmDecl 0x7fa81c0bc318 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
|   | `-CXXRecordDecl 0x7fa81c0bd060 <line:586:1, col:8> col:8 implicit struct __and_
|   |-ClassTemplateDecl 0x7fa81c0bd238 <line:590:1, col:27> col:27 __or_
|   | |-TemplateTypeParmDecl 0x7fa81c0bd118 <col:10> col:10 class depth 0 index 0 ...
|   | |-CXXRecordDecl 0x7fa81c0bd1a0 <col:20, col:27> col:27 struct __or_
|   | `-ClassTemplateSpecialization 0x7fa81c0bd4b8 '__or_'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0bd4b8 <line:591:1, col:41> col:19 struct __or_ definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl 0x7fa81c0bd6f0 <col:12, col:19> col:19 implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0bd948 <line:593:1, col:46> col:28 struct __or_ definition
|   | |-public '_B0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0bd7a8 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
|   | `-CXXRecordDecl 0x7fa81c0bdbf0 <col:21, col:28> col:28 implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0bdf38 <line:595:1, line:596:67> col:8 struct __or_ definition
|   | |-public 'conditional<_B0::value, _B0, _B1>::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x7fa81c0bdca8 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl 0x7fa81c0bdd18 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
|   | `-CXXRecordDecl 0x7fa81c0be540 <line:596:1, col:8> col:8 implicit struct __or_
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0bea98 <line:598:1, line:600:73> line:599:8 struct __or_ definition
|   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument type 'type-parameter-0-2'
|   | | `-TemplateArgument type 'type-parameter-0-3...'
|   | |-TemplateTypeParmDecl 0x7fa81c0be5f8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
|   | |-TemplateTypeParmDecl 0x7fa81c0be668 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
|   | |-TemplateTypeParmDecl 0x7fa81c0be6d8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
|   | |-TemplateTypeParmDecl 0x7fa81c0be748 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
|   | `-CXXRecordDecl 0x7fa81c0bf3e0 <line:599:1, col:8> col:8 implicit struct __or_
|   |-ClassTemplateDecl 0x7fa81c0bf5b8 <line:603:1, line:604:71> col:8 __not_
|   | |-TemplateTypeParmDecl 0x7fa81c0bf498 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0bf520 <line:604:1, col:71> col:8 struct __not_ definition
|   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
|   |   `-CXXRecordDecl 0x7fa81c0bfb60 <col:1, col:8> col:8 implicit struct __not_
|   |-ClassTemplateDecl 0x7fa81c0bfd68 <line:610:1, col:91> col:50 is_const
|   | |-TemplateTypeParmDecl 0x7fa81c0bfc18 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0bfcd0 <col:22, col:91> col:50 struct is_const definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TypeVisibilityAttr 0x7fa81c0c0030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0c00b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1cb638 <col:1, col:91> col:50 struct is_const definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl 0x7fa81d1cb8b0 prev 0x7fa81d1cb638 <col:22, col:50> col:50 implicit struct is_const
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0c0308 <line:611:1, col:90> col:50 struct is_const definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0c0170 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0c0448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0c05c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
|   |-ClassTemplateDecl 0x7fa81c0c07c8 <line:620:1, col:97> col:50 is_volatile
|   | |-TemplateTypeParmDecl 0x7fa81c0c0678 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0c0730 <col:22, col:97> col:50 struct is_volatile definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr 0x7fa81c0c0a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0c0ac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0c0d18 <line:621:1, col:96> col:50 struct is_volatile definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0c0b80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0c0e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0c0fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
|   |-ClassTemplateDecl 0x7fa81c0c11e8 <line:630:1, col:92> col:50 remove_const
|   | |-TemplateTypeParmDecl 0x7fa81c0c1098 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0c1150 <col:22, col:92> col:50 struct remove_const definition
|   | | |-TypeVisibilityAttr 0x7fa81c0c1460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81c0c14a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
|   | | `-TypedefDecl 0x7fa81c0c1550 <col:75, col:87> col:87 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81c0c10e0 '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81c0c1098 '_Tp'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c87e8 <col:1, col:92> col:50 struct remove_const definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1c8a30 prev 0x7fa81d1c87e8 <col:22, col:50> col:50 implicit struct remove_const
|   | | `-TypedefDecl 0x7fa81d1c8b08 <col:75, col:87> col:87 referenced type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1c8ad0 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0c10e0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0c1098 '_Tp'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cde58 <col:1, col:92> col:50 struct remove_const definition
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-CXXRecordDecl 0x7fa81d1ce0a0 prev 0x7fa81d1cde58 <col:22, col:50> col:50 implicit struct remove_const
|   | | `-TypedefDecl 0x7fa81d1ce178 <col:75, col:87> col:87 referenced type 'unsigned long &':'unsigned long &'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1ce140 'unsigned long &' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0c10e0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0c1098 '_Tp'
|   | |     `-LValueReferenceType 0x7fa81d1c59f0 'unsigned long &'
|   | |       `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cf0e8 <col:1, col:92> col:50 struct remove_const definition
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-CXXRecordDecl 0x7fa81d1cf330 prev 0x7fa81d1cf0e8 <col:22, col:50> col:50 implicit struct remove_const
|   | | `-TypedefDecl 0x7fa81d1cf408 <col:75, col:87> col:87 referenced type 'const unsigned long &':'const unsigned long &'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1cf3d0 'const unsigned long &' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0c10e0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0c1098 '_Tp'
|   | |     `-LValueReferenceType 0x7fa81d1b9880 'const unsigned long &'
|   | |       `-QualType 0x7fa81c032881 'const unsigned long' const
|   | |         `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1d5b78 <col:1, col:92> col:50 struct remove_const definition
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | |-CXXRecordDecl 0x7fa81d1d5dc0 prev 0x7fa81d1d5b78 <col:22, col:50> col:50 implicit struct remove_const
|   | | `-TypedefDecl 0x7fa81d1d5e98 <col:75, col:87> col:87 referenced type 'unsigned long &&':'unsigned long &&'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1d5e60 'unsigned long &&' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0c10e0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0c1098 '_Tp'
|   | |     `-RValueReferenceType 0x7fa81d1d5060 'unsigned long &&'
|   | |       `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e1318 <col:1, col:92> col:50 struct remove_const definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl 0x7fa81d1e1560 prev 0x7fa81d1e1318 <col:22, col:50> col:50 implicit struct remove_const
|   |   `-TypedefDecl 0x7fa81d1e1638 <col:75, col:87> col:87 referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-SubstTemplateTypeParmType 0x7fa81d1e1600 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |       |-TemplateTypeParmType 0x7fa81c0c10e0 '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c0c1098 '_Tp'
|   |       `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |         `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0c1768 <line:631:1, col:92> col:50 struct remove_const definition
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0c15c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0c18a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81c0c19e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
|   | `-TypedefDecl 0x7fa81c0c1a88 <col:75, col:87> col:87 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81c0c1610 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81c0c15c8 '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81c0c1d40 <line:633:1, col:73> col:22 remove_const_t
|   | |-TemplateTypeParmDecl 0x7fa81c0c1b00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c0c1ce0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c0c1c70 'typename remove_const<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c0c1ee0 <line:638:1, col:98> col:50 remove_volatile
|   | |-TemplateTypeParmDecl 0x7fa81c0c1d90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0c1e48 <col:22, col:98> col:50 struct remove_volatile definition
|   | | |-TypeVisibilityAttr 0x7fa81c0c2160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81c0c21a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
|   | | `-TypedefDecl 0x7fa81c0c2250 <col:81, col:93> col:93 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c8bf0 <col:1, col:98> col:50 struct remove_volatile definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1c8e40 prev 0x7fa81d1c8bf0 <col:22, col:50> col:50 implicit struct remove_volatile
|   | | `-TypedefDecl 0x7fa81d1c8f18 <col:81, col:93> col:93 referenced type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1c8ee0 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1ce260 <col:1, col:98> col:50 struct remove_volatile definition
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-CXXRecordDecl 0x7fa81d1ce4b0 prev 0x7fa81d1ce260 <col:22, col:50> col:50 implicit struct remove_volatile
|   | | `-TypedefDecl 0x7fa81d1ce588 <col:81, col:93> col:93 referenced type 'unsigned long &':'unsigned long &'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1ce550 'unsigned long &' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |     `-LValueReferenceType 0x7fa81d1c59f0 'unsigned long &'
|   | |       `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cf4f0 <col:1, col:98> col:50 struct remove_volatile definition
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-CXXRecordDecl 0x7fa81d1cf740 prev 0x7fa81d1cf4f0 <col:22, col:50> col:50 implicit struct remove_volatile
|   | | `-TypedefDecl 0x7fa81d1cf818 <col:81, col:93> col:93 referenced type 'const unsigned long &':'const unsigned long &'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1cf7e0 'const unsigned long &' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |     `-LValueReferenceType 0x7fa81d1b9880 'const unsigned long &'
|   | |       `-QualType 0x7fa81c032881 'const unsigned long' const
|   | |         `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1d5f80 <col:1, col:98> col:50 struct remove_volatile definition
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | |-CXXRecordDecl 0x7fa81d1d61d0 prev 0x7fa81d1d5f80 <col:22, col:50> col:50 implicit struct remove_volatile
|   | | `-TypedefDecl 0x7fa81d1d62a8 <col:81, col:93> col:93 referenced type 'unsigned long &&':'unsigned long &&'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1d6270 'unsigned long &&' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |     `-RValueReferenceType 0x7fa81d1d5060 'unsigned long &&'
|   | |       `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e1720 <col:1, col:98> col:50 struct remove_volatile definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl 0x7fa81d1e1970 prev 0x7fa81d1e1720 <col:22, col:50> col:50 implicit struct remove_volatile
|   |   `-TypedefDecl 0x7fa81d1e1a48 <col:81, col:93> col:93 referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-SubstTemplateTypeParmType 0x7fa81d1e1a10 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |       |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   |       `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |         `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0c2468 <line:639:1, col:98> col:50 struct remove_volatile definition
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0c22c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0c25a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81c0c26e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
|   | `-TypedefDecl 0x7fa81c0c2788 <col:81, col:93> col:93 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81c0c2310 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81c0c22c8 '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81c0c2a40 <line:641:1, col:79> col:22 remove_volatile_t
|   | |-TemplateTypeParmDecl 0x7fa81c0c2800 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c0c29e0 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c0c2970 'typename remove_volatile<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c0c2bd8 <line:646:1, line:647:80> line:646:50 remove_cv
|   | |-TemplateTypeParmDecl 0x7fa81c0c2a90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0c2b40 <col:22, line:647:80> line:646:50 struct remove_cv definition
|   | | |-TypeVisibilityAttr 0x7fa81c0c2e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81c0c2eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
|   | | `-TypedefDecl 0x7fa81c0c3210 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
|   | |   `-DependentNameType 0x7fa81c0c31a0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c8508 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1c8718 prev 0x7fa81d1c8508 <col:22, col:50> col:50 implicit struct remove_cv
|   | | `-TypedefDecl 0x7fa81d1c9000 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<unsigned long>::type>::type':'unsigned long'
|   | |   `-ElaboratedType 0x7fa81d1c8fb0 'typename remove_volatile<typename remove_const<unsigned long>::type>::type' sugar
|   | |     `-TypedefType 0x7fa81d1c8f90 'std::__1::remove_volatile<unsigned long>::type' sugar
|   | |       |-Typedef 0x7fa81d1c8f18 'type'
|   | |       `-SubstTemplateTypeParmType 0x7fa81d1c8ee0 'unsigned long' sugar
|   | |         |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |         | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |         `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cdb78 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-CXXRecordDecl 0x7fa81d1cdd88 prev 0x7fa81d1cdb78 <col:22, col:50> col:50 implicit struct remove_cv
|   | | `-TypedefDecl 0x7fa81d1ce670 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<unsigned long &>::type>::type':'unsigned long &'
|   | |   `-ElaboratedType 0x7fa81d1ce620 'typename remove_volatile<typename remove_const<unsigned long &>::type>::type' sugar
|   | |     `-TypedefType 0x7fa81d1ce600 'std::__1::remove_volatile<unsigned long &>::type' sugar
|   | |       |-Typedef 0x7fa81d1ce588 'type'
|   | |       `-SubstTemplateTypeParmType 0x7fa81d1ce550 'unsigned long &' sugar
|   | |         |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |         | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |         `-LValueReferenceType 0x7fa81d1c59f0 'unsigned long &'
|   | |           `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cee00 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-CXXRecordDecl 0x7fa81d1cf018 prev 0x7fa81d1cee00 <col:22, col:50> col:50 implicit struct remove_cv
|   | | `-TypedefDecl 0x7fa81d1cf900 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<const unsigned long &>::type>::type':'const unsigned long &'
|   | |   `-ElaboratedType 0x7fa81d1cf8b0 'typename remove_volatile<typename remove_const<const unsigned long &>::type>::type' sugar
|   | |     `-TypedefType 0x7fa81d1cf890 'std::__1::remove_volatile<const unsigned long &>::type' sugar
|   | |       |-Typedef 0x7fa81d1cf818 'type'
|   | |       `-SubstTemplateTypeParmType 0x7fa81d1cf7e0 'const unsigned long &' sugar
|   | |         |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |         | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |         `-LValueReferenceType 0x7fa81d1b9880 'const unsigned long &'
|   | |           `-QualType 0x7fa81c032881 'const unsigned long' const
|   | |             `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1d5898 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | |-CXXRecordDecl 0x7fa81d1d5aa8 prev 0x7fa81d1d5898 <col:22, col:50> col:50 implicit struct remove_cv
|   | | `-TypedefDecl 0x7fa81d1d6390 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<unsigned long &&>::type>::type':'unsigned long &&'
|   | |   `-ElaboratedType 0x7fa81d1d6340 'typename remove_volatile<typename remove_const<unsigned long &&>::type>::type' sugar
|   | |     `-TypedefType 0x7fa81d1d6320 'std::__1::remove_volatile<unsigned long &&>::type' sugar
|   | |       |-Typedef 0x7fa81d1d62a8 'type'
|   | |       `-SubstTemplateTypeParmType 0x7fa81d1d6270 'unsigned long &&' sugar
|   | |         |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   | |         | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   | |         `-RValueReferenceType 0x7fa81d1d5060 'unsigned long &&'
|   | |           `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e1030 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl 0x7fa81d1e1248 prev 0x7fa81d1e1030 <col:22, col:50> col:50 implicit struct remove_cv
|   |   `-TypedefDecl 0x7fa81d1e1b30 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<struct pair<unsigned long, unsigned long> >::type>::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-ElaboratedType 0x7fa81d1e1ae0 'typename remove_volatile<typename remove_const<struct pair<unsigned long, unsigned long> >::type>::type' sugar
|   |       `-TypedefType 0x7fa81d1e1ac0 'std::__1::remove_volatile<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |         |-Typedef 0x7fa81d1e1a48 'type'
|   |         `-SubstTemplateTypeParmType 0x7fa81d1e1a10 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |           |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   |           | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   |           `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |             `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-TypeAliasTemplateDecl 0x7fa81c0c34d0 <line:649:1, col:67> col:22 remove_cv_t
|   | |-TemplateTypeParmDecl 0x7fa81c0c3288 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c0c3470 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c0c3400 'typename remove_cv<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c0c3638 <line:654:1, col:73> col:29 __libcpp_is_void
|   | |-TemplateTypeParmDecl 0x7fa81c0c3520 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0c35a0 <col:22, col:73> col:29 struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl 0x7fa81c0c38f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
|   | |-ClassTemplateSpecialization 0x7fa81c0c39c8 '__libcpp_is_void'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c90f0 <col:1, col:73> col:29 struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1c9310 prev 0x7fa81d1c90f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1ce760 <col:1, col:73> col:29 struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-CXXRecordDecl 0x7fa81d1ce980 prev 0x7fa81d1ce760 <col:22, col:29> col:29 implicit struct __libcpp_is_void
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cf9f0 <col:1, col:73> col:29 struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-CXXRecordDecl 0x7fa81d1cfc10 prev 0x7fa81d1cf9f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1d6480 <col:1, col:73> col:29 struct __libcpp_is_void definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | `-CXXRecordDecl 0x7fa81d1d66a0 prev 0x7fa81d1d6480 <col:22, col:29> col:29 implicit struct __libcpp_is_void
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e61e0 <col:1, col:73> col:29 struct __libcpp_is_void definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e6400 prev 0x7fa81d1e61e0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c39c8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'void'
|   | `-CXXRecordDecl 0x7fa81c0c3c30 <col:22, col:29> col:29 implicit struct __libcpp_is_void
|   |-ClassTemplateDecl 0x7fa81c0c5298 <line:657:1, line:658:63> line:657:50 is_void
|   | |-TemplateTypeParmDecl 0x7fa81c0c3ce8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0c5200 <col:22, line:658:63> line:657:50 struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
|   | | |-TypeVisibilityAttr 0x7fa81c0c5510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0c5778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c82b0 <col:1, line:658:63> line:657:50 struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<unsigned long>::type>':'struct std::__1::__libcpp_is_void<unsigned long>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1c93f8 prev 0x7fa81d1c82b0 <col:22, col:50> col:50 implicit struct is_void
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cd928 <col:1, line:658:63> line:657:50 struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<unsigned long &>::type>':'struct std::__1::__libcpp_is_void<unsigned long &>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-CXXRecordDecl 0x7fa81d1cea68 prev 0x7fa81d1cd928 <col:22, col:50> col:50 implicit struct is_void
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1ceb98 <col:1, line:658:63> line:657:50 struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<const unsigned long &>::type>':'struct std::__1::__libcpp_is_void<const unsigned long &>'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-CXXRecordDecl 0x7fa81d1cfcf8 prev 0x7fa81d1ceb98 <col:22, col:50> col:50 implicit struct is_void
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1d5648 <col:1, line:658:63> line:657:50 struct is_void definition
|   | | |-public '__libcpp_is_void<typename remove_cv<unsigned long &&>::type>':'struct std::__1::__libcpp_is_void<unsigned long &&>'
|   | | |-TemplateArgument type 'unsigned long &&'
|   | | `-CXXRecordDecl 0x7fa81d1d6788 prev 0x7fa81d1d5648 <col:22, col:50> col:50 implicit struct is_void
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e5e90 <col:1, line:658:63> line:657:50 struct is_void definition
|   |   |-public '__libcpp_is_void<typename remove_cv<struct pair<unsigned long, unsigned long> >::type>':'struct std::__1::__libcpp_is_void<struct std::__1::pair<unsigned long, unsigned long> >'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e64e8 prev 0x7fa81d1e5e90 <col:22, col:50> col:50 implicit struct is_void
|   |-ClassTemplateDecl 0x7fa81c0c5948 <line:667:1, col:76> col:29 __is_nullptr_t_impl
|   | |-TemplateTypeParmDecl 0x7fa81c0c5830 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0c58b0 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl 0x7fa81c0c5c00 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
|   | |-ClassTemplateSpecialization 0x7fa81c0c5d00 '__is_nullptr_t_impl'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c99b0 <col:1, col:76> col:29 struct __is_nullptr_t_impl definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1c9bd0 prev 0x7fa81d1c99b0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e6d50 <col:1, col:76> col:29 struct __is_nullptr_t_impl definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e6f70 prev 0x7fa81d1e6d50 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c5d00 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'nullptr_t'
|   | `-CXXRecordDecl 0x7fa81c0c5f70 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
|   |-ClassTemplateDecl 0x7fa81c0c6178 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
|   | |-TemplateTypeParmDecl 0x7fa81c0c6028 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0c60e0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
|   | | |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
|   | | |-TypeVisibilityAttr 0x7fa81c0c7430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0c7698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c9668 <col:1, line:671:66> line:670:50 struct __is_nullptr_t definition
|   | | |-public '__is_nullptr_t_impl<typename remove_cv<unsigned long>::type>':'struct std::__1::__is_nullptr_t_impl<unsigned long>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1c9cb8 prev 0x7fa81d1c9668 <col:22, col:50> col:50 implicit struct __is_nullptr_t
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e6a08 <col:1, line:671:66> line:670:50 struct __is_nullptr_t definition
|   |   |-public '__is_nullptr_t_impl<typename remove_cv<struct pair<unsigned long, unsigned long> >::type>':'struct std::__1::__is_nullptr_t_impl<struct std::__1::pair<unsigned long, unsigned long> >'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e7058 prev 0x7fa81d1e6a08 <col:22, col:50> col:50 implicit struct __is_nullptr_t
|   |-ClassTemplateDecl 0x7fa81c0c7898 <line:674:1, line:675:66> line:674:50 is_null_pointer
|   | |-TemplateTypeParmDecl 0x7fa81c0c7750 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0c7800 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
|   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81c0c7b10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0c7d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
|   |-ClassTemplateDecl 0x7fa81c0c7ef8 <line:685:1, col:91> col:29 __libcpp_is_integral
|   | |-TemplateTypeParmDecl 0x7fa81c0c7de0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0c7e60 <col:22, col:91> col:29 struct __libcpp_is_integral definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl 0x7fa81c0c8200 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   | |-ClassTemplateSpecialization 0x7fa81c0c82d8 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0c8618 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0c8960 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0c8cb0 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0c8ff8 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0c9380 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0c96c8 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0c9a10 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0c9d60 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0ca0b0 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0ca410 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0ca760 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0caab0 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0cae00 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0cb200 '__libcpp_is_integral'
|   | |-ClassTemplateSpecialization 0x7fa81c0cb570 '__libcpp_is_integral'
|   | `-ClassTemplateSpecialization 0x7fa81c0cb8e0 '__libcpp_is_integral'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c82d8 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type '_Bool'
|   | `-CXXRecordDecl 0x7fa81c0c8540 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c8618 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char'
|   | `-CXXRecordDecl 0x7fa81c0c8880 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c8960 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'signed char'
|   | `-CXXRecordDecl 0x7fa81c0c8bd0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c8cb0 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned char'
|   | `-CXXRecordDecl 0x7fa81c0c8f20 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c8ff8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'wchar_t'
|   | `-CXXRecordDecl 0x7fa81c0c92a8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c9380 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char16_t'
|   | `-CXXRecordDecl 0x7fa81c0c95f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c96c8 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'char32_t'
|   | `-CXXRecordDecl 0x7fa81c0c9930 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c9a10 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'short'
|   | `-CXXRecordDecl 0x7fa81c0c9c80 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0c9d60 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned short'
|   | `-CXXRecordDecl 0x7fa81c0c9fd0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0ca0b0 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'int'
|   | `-CXXRecordDecl 0x7fa81c0ca330 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0ca410 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned int'
|   | `-CXXRecordDecl 0x7fa81c0ca680 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0ca760 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long'
|   | `-CXXRecordDecl 0x7fa81c0ca9d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0caab0 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned long'
|   | `-CXXRecordDecl 0x7fa81c0cad20 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cae00 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long long'
|   | `-CXXRecordDecl 0x7fa81c0cb070 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cb200 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned long long'
|   | `-CXXRecordDecl 0x7fa81c0cb470 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cb570 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type '__int128'
|   | `-CXXRecordDecl 0x7fa81c0cb7e0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cb8e0 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'unsigned __int128'
|   | `-CXXRecordDecl 0x7fa81c0cbb50 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
|   |-ClassTemplateDecl 0x7fa81c0cbd58 <line:708:1, line:709:67> line:708:50 is_integral
|   | |-TemplateTypeParmDecl 0x7fa81c0cbc08 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0cbcc0 <col:22, line:709:67> line:708:50 struct is_integral definition
|   |   |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81c0cbfd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0cc260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
|   |-ClassTemplateDecl 0x7fa81c0cc438 <line:718:1, col:90> col:29 __libcpp_is_floating_point
|   | |-TemplateTypeParmDecl 0x7fa81c0cc318 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0cc3a0 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl 0x7fa81c0cc6f0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
|   | |-ClassTemplateSpecialization 0x7fa81c0cc7d0 '__libcpp_is_floating_point'
|   | |-ClassTemplateSpecialization 0x7fa81c0ccb20 '__libcpp_is_floating_point'
|   | `-ClassTemplateSpecialization 0x7fa81c0cce70 '__libcpp_is_floating_point'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cc7d0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'float'
|   | `-CXXRecordDecl 0x7fa81c0cca40 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
|   |-ClassTemplateSpecializationDecl 0x7fa81c0ccb20 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'double'
|   | `-CXXRecordDecl 0x7fa81c0ccd90 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cce70 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'long double'
|   | `-CXXRecordDecl 0x7fa81c0cd0e0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
|   |-ClassTemplateDecl 0x7fa81c0cd308 <line:723:1, line:724:73> line:723:50 is_floating_point
|   | |-TemplateTypeParmDecl 0x7fa81c0cd198 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0cd270 <col:22, line:724:73> line:723:50 struct is_floating_point definition
|   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81c0cd580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0cd7e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
|   |-ClassTemplateDecl 0x7fa81c0cd9e8 <line:733:1, line:734:26> line:733:50 is_array
|   | |-TemplateTypeParmDecl 0x7fa81c0cd8a0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0cd950 <col:22, line:734:26> line:733:50 struct is_array definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TypeVisibilityAttr 0x7fa81c0cdc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0cdce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e4ab0 <col:1, line:734:26> line:733:50 struct is_array definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e4d58 prev 0x7fa81d1e4ab0 <col:22, col:50> col:50 implicit struct is_array
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0cdfa8 <line:735:1, line:736:25> line:735:50 struct is_array definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl 0x7fa81c0cdda0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0ce0f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0ce2a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0ce648 <line:737:1, line:738:25> line:737:62 struct is_array definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl 0x7fa81c0ce360 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c0ce400 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr 0x7fa81c0ce798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0ce910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
|   |-ClassTemplateDecl 0x7fa81c0ceae8 <line:747:1, col:76> col:29 __libcpp_is_pointer
|   | |-TemplateTypeParmDecl 0x7fa81c0ce9c8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0cea50 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl 0x7fa81c0ceda0 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0ceff8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl 0x7fa81c0cee58 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0baea8 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
|   |-ClassTemplateDecl 0x7fa81c0bb0a8 <line:750:1, line:751:66> line:750:50 is_pointer
|   | |-TemplateTypeParmDecl 0x7fa81c0baf60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0bb010 <col:22, line:751:66> line:750:50 struct is_pointer definition
|   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81c0bb320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0bb588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
|   |-ClassTemplateDecl 0x7fa81c0bb788 <line:760:1, col:97> col:50 is_lvalue_reference
|   | |-TemplateTypeParmDecl 0x7fa81c0bb640 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0bb6f0 <col:22, col:97> col:50 struct is_lvalue_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr 0x7fa81c0bba00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0bba88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0bbd08 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl 0x7fa81c0bbb40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0d2068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0d21e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
|   |-ClassTemplateDecl 0x7fa81c0d23e8 <line:763:1, col:98> col:50 is_rvalue_reference
|   | |-TemplateTypeParmDecl 0x7fa81c0d2298 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0d2350 <col:22, col:98> col:50 struct is_rvalue_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TypeVisibilityAttr 0x7fa81c0d2660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0d26e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0d2998 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl 0x7fa81c0d27a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0d2ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0d2c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
|   |-ClassTemplateDecl 0x7fa81c0d2e58 <line:768:1, col:91> col:50 is_reference
|   | |-TemplateTypeParmDecl 0x7fa81c0d2d08 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0d2dc0 <col:22, col:91> col:50 struct is_reference definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TypeVisibilityAttr 0x7fa81c0d30e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0d3168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c7348 <col:1, col:91> col:50 struct is_reference definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1c75e8 prev 0x7fa81d1c7348 <col:22, col:50> col:50 implicit struct is_reference
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e6628 <col:1, col:91> col:50 struct is_reference definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e68c8 prev 0x7fa81d1e6628 <col:22, col:50> col:50 implicit struct is_reference
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0d33e8 <line:769:1, col:90> col:50 struct is_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl 0x7fa81c0d3220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0d3528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0d36a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0d3928 <line:771:1, col:90> col:50 struct is_reference definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl 0x7fa81c0d3758 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0d3a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0d3be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
|   |-ClassTemplateDecl 0x7fa81c0d3de8 <line:788:1, line:789:56> line:788:50 is_union
|   | |-TemplateTypeParmDecl 0x7fa81c0d3c98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0d3d50 <col:22, line:789:56> line:788:50 struct is_union definition
|   | | |-public 'integral_constant<_Bool, __is_union(_Tp)>'
|   | | |-TypeVisibilityAttr 0x7fa81c0d4068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0d4248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c7de8 <col:1, line:789:56> line:788:50 struct is_union definition
|   | | |-public 'integral_constant<_Bool, __is_union(unsigned long)>':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1c8158 prev 0x7fa81d1c7de8 <col:22, col:50> col:50 implicit struct is_union
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e59c8 <col:1, line:789:56> line:788:50 struct is_union definition
|   |   |-public 'integral_constant<_Bool, __is_union(struct std::__1::pair<unsigned long, unsigned long>)>':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e5d38 prev 0x7fa81d1e59c8 <col:22, col:50> col:50 implicit struct is_union
|   |-ClassTemplateDecl 0x7fa81c0d4448 <line:808:1, line:809:56> line:808:50 is_class
|   | |-TemplateTypeParmDecl 0x7fa81c0d4300 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0d43b0 <col:22, line:809:56> line:808:50 struct is_class definition
|   | | |-public 'integral_constant<_Bool, __is_class(_Tp)>'
|   | | |-TypeVisibilityAttr 0x7fa81c0d46c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0d48a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c7978 <col:1, line:809:56> line:808:50 struct is_class definition
|   | | |-public 'integral_constant<_Bool, __is_class(unsigned long)>':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1c7ce8 prev 0x7fa81d1c7978 <col:22, col:50> col:50 implicit struct is_class
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e5558 <col:1, line:809:56> line:808:50 struct is_class definition
|   |   |-public 'integral_constant<_Bool, __is_class(struct std::__1::pair<unsigned long, unsigned long>)>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e58c8 prev 0x7fa81d1e5558 <col:22, col:50> col:50 implicit struct is_class
|   |-ClassTemplateDecl 0x7fa81c0d4b20 <line:831:1, col:100> col:61 is_same
|   | |-TemplateTypeParmDecl 0x7fa81c0d4960 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0d49c8 <col:22, col:28> col:28 class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81c0d4a88 <col:33, col:100> col:61 struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TypeVisibilityAttr 0x7fa81c0d4dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0d4e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c6088 <col:1, col:100> col:61 struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-TemplateArgument type 'struct std::__1::__two'
|   | | `-CXXRecordDecl 0x7fa81d1c6350 prev 0x7fa81d1c6088 <col:33, col:61> col:61 implicit struct is_same
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1ccae8 <col:1, col:100> col:61 struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-TemplateArgument type 'struct std::__1::__two'
|   | | `-CXXRecordDecl 0x7fa81d1ccdb0 prev 0x7fa81d1ccae8 <col:33, col:61> col:61 implicit struct is_same
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1e4108 <col:1, col:100> col:61 struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long> &'
|   | | |-TemplateArgument type 'struct std::__1::__two'
|   | | `-CXXRecordDecl 0x7fa81d1e43d0 prev 0x7fa81d1e4108 <col:33, col:61> col:61 implicit struct is_same
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1e8540 <col:1, col:100> col:61 struct is_same definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | | |-TemplateArgument type 'void'
|   | | `-CXXRecordDecl 0x7fa81d1e8800 prev 0x7fa81d1e8540 <col:33, col:61> col:61 implicit struct is_same
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e98d0 <line:832:1, col:99> col:61 struct is_same definition
|   |   |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e9bf0 prev 0x7fa81d1e98d0 <col:33, col:61> col:61 implicit struct is_same
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0d5930 <col:1, col:99> col:61 struct is_same definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0d4f00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0d5a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0d5c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
|   |-NamespaceDecl 0x7fa81c0d5cf8 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
|   | |-CXXRecordDecl 0x7fa81c0d5d60 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
|   | | |-CXXRecordDecl 0x7fa81c0d5e88 <col:1, col:8> col:8 implicit struct __dummy_type
|   | | |-CXXConstructorDecl 0x7fa81d1ca980 <col:8> col:8 implicit constexpr __dummy_type 'void (void)' inline default trivial noexcept-unevaluated 0x7fa81d1ca980
|   | | |-CXXConstructorDecl 0x7fa81d1caa98 <col:8> col:8 implicit constexpr __dummy_type 'void (const struct std::__1::__libcpp_is_function_imp::__dummy_type &)' inline default trivial noexcept-unevaluated 0x7fa81d1caa98
|   | | | `-ParmVarDecl 0x7fa81d1cabc0 <col:8> col:8 'const struct std::__1::__libcpp_is_function_imp::__dummy_type &'
|   | | `-CXXConstructorDecl 0x7fa81d1cac58 <col:8> col:8 implicit constexpr __dummy_type 'void (struct std::__1::__libcpp_is_function_imp::__dummy_type &&)' inline default trivial noexcept-unevaluated 0x7fa81d1cac58
|   | |   `-ParmVarDecl 0x7fa81d1cad80 <col:8> col:8 'struct std::__1::__libcpp_is_function_imp::__dummy_type &&'
|   | |-FunctionTemplateDecl 0x7fa81c0d6198 <line:844:1, col:39> col:28 __test
|   | | |-TemplateTypeParmDecl 0x7fa81c0d5f40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl 0x7fa81c0d6100 <col:22, col:39> col:28 __test 'char (_Tp *)'
|   | |   `-ParmVarDecl 0x7fa81c0d5ff8 <col:35, col:38> col:39 '_Tp *'
|   | |-FunctionTemplateDecl 0x7fa81c0d63d8 <line:845:1, col:46> col:27 __test
|   | | |-TemplateTypeParmDecl 0x7fa81c0d61f0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | | `-FunctionDecl 0x7fa81c0d6340 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
|   | |   `-ParmVarDecl 0x7fa81c0d6280 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
|   | |-FunctionTemplateDecl 0x7fa81c0d6598 <line:846:1, col:38> col:28 __test
|   | | |-TemplateTypeParmDecl 0x7fa81c0d6430 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | | |-FunctionDecl 0x7fa81c0d6500 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
|   | | `-FunctionDecl 0x7fa81d1caed8 <col:22, col:38> col:28 referenced __test 'struct std::__1::__two (...)'
|   | |   `-TemplateArgument type 'unsigned long'
|   | |-FunctionTemplateDecl 0x7fa81c0d6898 <line:847:1, col:40> col:28 __source
|   | | |-TemplateTypeParmDecl 0x7fa81c0d65e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | | |-FunctionDecl 0x7fa81c0d6800 <col:22, col:40> col:28 __source '_Tp &(int)'
|   | | | `-ParmVarDecl 0x7fa81c0d6688 <col:37> col:40 'int'
|   | | `-FunctionDecl 0x7fa81d1ca400 <col:22, col:40> col:28 referenced __source 'unsigned long &(int)'
|   | |   |-TemplateArgument type 'unsigned long'
|   | |   `-ParmVarDecl 0x7fa81d1ca338 <col:37> col:40 'int'
|   | `-FunctionTemplateDecl 0x7fa81c0d6a58 <line:848:1, col:47> col:35 __source
|   |   |-TemplateTypeParmDecl 0x7fa81c0d68f0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   |   |-FunctionDecl 0x7fa81c0d69c0 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
|   |   `-FunctionDecl 0x7fa81d1ca5d0 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
|   |     `-TemplateArgument type 'unsigned long'
|   |-ClassTemplateDecl 0x7fa81c0d7210 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
|   | |-TemplateTypeParmDecl 0x7fa81c0d6aa8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c0d7100 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81c0d70c8 <col:29, line:855:50> '<dependent type>' '||'
|   | |     |-BinaryOperator 0x7fa81c0d6f98 <line:851:29, line:854:48> '<dependent type>' '||'
|   | |     | |-BinaryOperator 0x7fa81c0d6e68 <line:851:29, line:853:43> '<dependent type>' '||'
|   | |     | | |-BinaryOperator 0x7fa81c0d6d38 <line:851:29, line:852:44> '<dependent type>' '||'
|   | |     | | | |-DependentScopeDeclRefExpr 0x7fa81c0d6be8 <line:851:29, col:44> '<dependent type>' lvalue
|   | |     | | | `-DependentScopeDeclRefExpr 0x7fa81c0d6cf8 <line:852:29, col:44> '<dependent type>' lvalue
|   | |     | | `-DependentScopeDeclRefExpr 0x7fa81c0d6e28 <line:853:29, col:43> '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr 0x7fa81c0d6f58 <line:854:29, col:48> '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr 0x7fa81c0d7088 <line:855:29, col:50> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x7fa81c0d7178 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
|   | | |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
|   | | `-CXXRecordDecl 0x7fa81c0d7988 <col:1, col:8> col:8 implicit struct __libcpp_is_function
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c9de8 <line:851:1, line:858:6> line:856:8 struct __libcpp_is_function definition
|   | | |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<unsigned long>(__libcpp_is_function_imp::__source<unsigned long>(0))) == 1>':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument integral 0
|   | | `-CXXRecordDecl 0x7fa81d1cb3f8 prev 0x7fa81d1c9de8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e7188 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-TemplateArgument integral 1
|   |   `-CXXRecordDecl 0x7fa81d1e7440 prev 0x7fa81d1e7188 <col:22, col:29> col:29 implicit struct __libcpp_is_function
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0d7c20 <col:1, col:82> col:29 struct __libcpp_is_function definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81c0d7a40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0d7ef0 <col:22, col:29> col:29 implicit struct __libcpp_is_function
|   |-ClassTemplateDecl 0x7fa81c0d80f8 <line:861:1, line:862:41> line:861:50 is_function
|   | |-TemplateTypeParmDecl 0x7fa81c0d7fa8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0d8060 <col:22, line:862:41> line:861:50 struct is_function definition
|   | | |-public '__libcpp_is_function<_Tp>'
|   | | |-TypeVisibilityAttr 0x7fa81c0d8370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0d8b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c76e8 <col:1, line:862:41> line:861:50 struct is_function definition
|   | | |-public '__libcpp_is_function<unsigned long>':'struct std::__1::__libcpp_is_function<unsigned long, false>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1cb4e0 prev 0x7fa81d1c76e8 <col:22, col:50> col:50 implicit struct is_function
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e52c0 <col:1, line:862:41> line:861:50 struct is_function definition
|   |   |-public '__libcpp_is_function<struct std::__1::pair<unsigned long, unsigned long> >':'struct std::__1::__libcpp_is_function<struct std::__1::pair<unsigned long, unsigned long>, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e7528 prev 0x7fa81d1e52c0 <col:22, col:50> col:50 implicit struct is_function
|   |-ClassTemplateDecl 0x7fa81c0d8db8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
|   | |-TemplateTypeParmDecl 0x7fa81c0d8bc0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
|   | |-NonTypeTemplateParmDecl 0x7fa81c0d8c38 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
|   | |-NonTypeTemplateParmDecl 0x7fa81c0d8ca0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
|   | `-CXXRecordDecl 0x7fa81c0d8d20 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
|   |   `-CXXRecordDecl 0x7fa81c0d90e0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   |-ClassTemplateDecl 0x7fa81c0d92b8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
|   | |-TemplateTypeParmDecl 0x7fa81c0d9198 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0d9220 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl 0x7fa81c0d9570 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0d98d8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
|   | |-public 'is_function<_Ret>'
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl 0x7fa81c0d9628 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl 0x7fa81c0d9698 <col:23, col:29> col:29 class depth 0 index 1 _Class
|   | `-CXXRecordDecl 0x7fa81c0d9bd8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
|   |-ClassTemplateDecl 0x7fa81c0d9dd8 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
|   | |-TemplateTypeParmDecl 0x7fa81c0d9c90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0d9d40 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
|   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
|   |   |-TypeVisibilityAttr 0x7fa81c0da050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0da390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
|   |-ClassTemplateDecl 0x7fa81c0da568 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
|   | |-TemplateTypeParmDecl 0x7fa81c0da448 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0da4d0 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl 0x7fa81c0da830 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0dab58 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl 0x7fa81c0da8e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0da958 <col:22, col:28> col:28 class depth 0 index 1 _Up
|   | `-CXXRecordDecl 0x7fa81c0dade0 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
|   |-ClassTemplateDecl 0x7fa81c0dafe8 <line:901:1, line:902:73> line:901:50 is_member_pointer
|   | |-TemplateTypeParmDecl 0x7fa81c0dae98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0daf50 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
|   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81c0db260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0db4c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
|   |-ClassTemplateDecl 0x7fa81c0db6c8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
|   | |-TemplateTypeParmDecl 0x7fa81c0db580 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0db630 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
|   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
|   |   |-TypeVisibilityAttr 0x7fa81c0dba30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0dbe88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
|   |-ClassTemplateDecl 0x7fa81c0dc088 <line:924:1, line:925:55> line:924:50 is_enum
|   | |-TemplateTypeParmDecl 0x7fa81c0dbf40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0dbff0 <col:22, line:925:55> line:924:50 struct is_enum definition
|   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81c0dc300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0dc4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
|   |-ClassTemplateDecl 0x7fa81c0dc6e8 <line:950:1, line:952:70> line:950:50 is_arithmetic
|   | |-TemplateTypeParmDecl 0x7fa81c0dc5a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0dc650 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
|   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
|   |   |-TypeVisibilityAttr 0x7fa81c0dda30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0dde68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
|   |-ClassTemplateDecl 0x7fa81c0de068 <line:961:1, line:964:66> line:961:50 is_fundamental
|   | |-TemplateTypeParmDecl 0x7fa81c0ddf20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0ddfd0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
|   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
|   |   |-TypeVisibilityAttr 0x7fa81c0de2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0de878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
|   |-ClassTemplateDecl 0x7fa81c0dea78 <line:973:1, line:978:71> line:973:50 is_scalar
|   | |-TemplateTypeParmDecl 0x7fa81c0de930 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0de9e0 <col:22, line:978:71> line:973:50 struct is_scalar definition
|   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
|   | | |-TypeVisibilityAttr 0x7fa81c0decf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c0df4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
|   | `-ClassTemplateSpecialization 0x7fa81c0df5c0 'is_scalar'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0df5c0 <line:980:1, col:82> col:41 struct is_scalar definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'nullptr_t'
|   | |-TypeVisibilityAttr 0x7fa81c0df6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0df8a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
|   |-ClassTemplateDecl 0x7fa81c0dfaa8 <line:989:1, line:993:63> line:989:50 is_object
|   | |-TemplateTypeParmDecl 0x7fa81c0df960 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0dfa10 <col:22, line:993:63> line:989:50 struct is_object definition
|   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
|   |   |-TypeVisibilityAttr 0x7fa81c0dfd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0e03b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
|   |-ClassTemplateDecl 0x7fa81c0e05b8 <line:1002:1, line:1003:68> line:1002:50 is_compound
|   | |-TemplateTypeParmDecl 0x7fa81c0e0470 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0e0520 <col:22, line:1003:68> line:1002:50 struct is_compound definition
|   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
|   |   |-TypeVisibilityAttr 0x7fa81c0e0868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0e0b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
|   |-CXXRecordDecl 0x7fa81c0e0c10 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
|   | |-CXXRecordDecl 0x7fa81c0e0d38 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
|   | |-FunctionTemplateDecl 0x7fa81c0e1028 <line:1014:5, col:48> col:38 __test
|   | | |-TemplateTypeParmDecl 0x7fa81c0e0dd0 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
|   | | |-CXXMethodDecl 0x7fa81c0e0f90 <col:26, col:48> col:38 __test '_Tp &(int)' static
|   | | | `-ParmVarDecl 0x7fa81c0e0e68 <col:45> col:48 'int'
|   | | |-CXXMethodDecl 0x7fa81d1c5c70 <col:26, col:48> col:38 referenced __test 'unsigned long &(int)' static
|   | | | |-TemplateArgument type 'unsigned long'
|   | | | `-ParmVarDecl 0x7fa81d1c5b68 <col:45> col:48 'int'
|   | | |-CXXMethodDecl 0x7fa81d1cc750 <col:26, col:48> col:38 referenced __test 'const unsigned long &(int)' static
|   | | | |-TemplateArgument type 'const unsigned long'
|   | | | `-ParmVarDecl 0x7fa81d1cc650 <col:45> col:48 'int'
|   | | `-CXXMethodDecl 0x7fa81d1e3d70 <col:26, col:48> col:38 referenced __test 'struct std::__1::pair<unsigned long, unsigned long> &(int)' static
|   | |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | |   `-ParmVarDecl 0x7fa81d1e3c70 <col:45> col:48 'int'
|   | `-FunctionTemplateDecl 0x7fa81c0e11b8 <line:1015:5, col:49> col:39 __test
|   |   |-TemplateTypeParmDecl 0x7fa81c0e1080 <col:15, col:21> col:21 class depth 0 index 0 _Tp
|   |   |-CXXMethodDecl 0x7fa81c0e1120 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
|   |   |-CXXMethodDecl 0x7fa81d1c5e40 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
|   |   | `-TemplateArgument type 'unsigned long'
|   |   |-CXXMethodDecl 0x7fa81d1cc898 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
|   |   | `-TemplateArgument type 'const unsigned long'
|   |   `-CXXMethodDecl 0x7fa81d1e3eb8 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
|   |     `-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |-ClassTemplateDecl 0x7fa81c0e1348 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
|   | |-TemplateTypeParmDecl 0x7fa81c0e1228 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0e12b0 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
|   | | |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
|   | | `-CXXRecordDecl 0x7fa81c0e1b18 <col:1, col:8> col:8 implicit struct __is_referenceable
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c5698 <line:1018:1, line:1020:81> line:1019:8 struct __is_referenceable definition
|   | | |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<unsigned long>(0)), struct __two>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1c6798 prev 0x7fa81d1c5698 <col:1, col:8> col:8 implicit struct __is_referenceable
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cc238 <line:1018:1, line:1020:81> line:1019:8 struct __is_referenceable definition
|   | | |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<const unsigned long>(0)), struct __two>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'const unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1ccfd8 prev 0x7fa81d1cc238 <col:1, col:8> col:8 implicit struct __is_referenceable
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e3840 <line:1018:1, line:1020:81> line:1019:8 struct __is_referenceable definition
|   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<struct pair<unsigned long, unsigned long> >(0)), struct __two>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e45f8 prev 0x7fa81d1e3840 <col:1, col:8> col:8 implicit struct __is_referenceable
|   |-ClassTemplateDecl 0x7fa81c0e20d0 <line:1025:1, line:1028:50> col:8 __add_const
|   | |-TemplateTypeParmDecl 0x7fa81c0e1bd0 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c0e1fc0 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81c0e1f88 <col:29, line:1027:44> '<dependent type>' '||'
|   | |     |-BinaryOperator 0x7fa81c0e1e58 <line:1025:29, line:1026:47> '<dependent type>' '||'
|   | |     | |-DependentScopeDeclRefExpr 0x7fa81c0e1d08 <line:1025:29, col:48> '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr 0x7fa81c0e1e18 <line:1026:29, col:47> '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr 0x7fa81c0e1f48 <line:1027:29, col:44> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x7fa81c0e2038 <line:1028:1, col:50> col:8 struct __add_const definition
|   | | |-CXXRecordDecl 0x7fa81c0e2390 <col:1, col:8> col:8 implicit struct __add_const
|   | | `-TypedefDecl 0x7fa81c0e2438 <col:33, col:45> col:45 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81c0e1c10 '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81c0e1bd0 '_Tp'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1cb9e0 <line:1030:1, line:1031:56> col:8 struct __add_const definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 0
|   |   |-CXXRecordDecl 0x7fa81d1cbc90 prev 0x7fa81d1cb9e0 <col:1, col:8> col:8 implicit struct __add_const
|   |   `-TypedefDecl 0x7fa81d1cbd38 <col:33, col:51> col:51 referenced type 'const unsigned long':'const unsigned long'
|   |     `-QualType 0x7fa81d1cbbe1 'const unsigned long' const
|   |       `-SubstTemplateTypeParmType 0x7fa81d1cbbe0 'unsigned long' sugar
|   |         |-TemplateTypeParmType 0x7fa81c0e24f0 '_Tp' dependent depth 0 index 0
|   |         | `-TemplateTypeParm 0x7fa81c0e24b0 '_Tp'
|   |         `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0e2690 <line:1030:1, line:1031:56> col:8 struct __add_const definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c0e24b0 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0e2920 <line:1031:1, col:8> col:8 implicit struct __add_const
|   | `-TypedefDecl 0x7fa81c0e29c8 <col:33, col:51> col:51 type 'const _Tp'
|   |   `-QualType 0x7fa81c0e24f1 'const _Tp' const
|   |     `-TemplateTypeParmType 0x7fa81c0e24f0 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81c0e24b0 '_Tp'
|   |-ClassTemplateDecl 0x7fa81c0e2b88 <line:1033:1, line:1034:51> line:1033:50 add_const
|   | |-TemplateTypeParmDecl 0x7fa81c0e2a40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0e2af0 <col:22, line:1034:51> line:1033:50 struct add_const definition
|   | | |-TypeVisibilityAttr 0x7fa81c0e2e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81c0e2e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
|   | | `-TypedefDecl 0x7fa81c0e3430 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
|   | |   `-DependentNameType 0x7fa81c0e33c0 'typename __add_const<_Tp>::type' dependent
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1c7020 <line:1033:1, line:1034:51> line:1033:50 struct add_const definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-CXXRecordDecl 0x7fa81d1c7238 prev 0x7fa81d1c7020 <col:22, col:50> col:50 implicit struct add_const
|   |   `-TypedefDecl 0x7fa81d1cbe20 <line:1034:6, col:46> col:46 referenced type 'typename __add_const<unsigned long>::type':'const unsigned long'
|   |     `-ElaboratedType 0x7fa81d1cbdd0 'typename __add_const<unsigned long>::type' sugar
|   |       `-TypedefType 0x7fa81d1cbdb0 'std::__1::__add_const<unsigned long, false>::type' sugar
|   |         |-Typedef 0x7fa81d1cbd38 'type'
|   |         `-QualType 0x7fa81d1cbbe1 'const unsigned long' const
|   |           `-SubstTemplateTypeParmType 0x7fa81d1cbbe0 'unsigned long' sugar
|   |             |-TemplateTypeParmType 0x7fa81c0e24f0 '_Tp' dependent depth 0 index 0
|   |             | `-TemplateTypeParm 0x7fa81c0e24b0 '_Tp'
|   |             `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-TypeAliasTemplateDecl 0x7fa81c0e36f0 <line:1037:1, col:67> col:22 add_const_t
|   | |-TemplateTypeParmDecl 0x7fa81c0e34a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c0e3690 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c0e3620 'typename add_const<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c800a80 <line:1042:1, line:1045:53> col:8 __add_volatile
|   | |-TemplateTypeParmDecl 0x7fa81c0e3740 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c800970 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81c800938 <col:29, line:1044:47> '<dependent type>' '||'
|   | |     |-BinaryOperator 0x7fa81c800808 <line:1042:29, line:1043:47> '<dependent type>' '||'
|   | |     | |-DependentScopeDeclRefExpr 0x7fa81c8006b8 <line:1042:29, col:48> '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr 0x7fa81c8007c8 <line:1043:29, col:47> '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr 0x7fa81c8008f8 <line:1044:29, col:47> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81c8009e8 <line:1045:1, col:53> col:8 struct __add_volatile definition
|   |   |-CXXRecordDecl 0x7fa81c800d40 <col:1, col:8> col:8 implicit struct __add_volatile
|   |   `-TypedefDecl 0x7fa81c800de8 <col:36, col:48> col:48 type '_Tp'
|   |     `-TemplateTypeParmType 0x7fa81c0e3780 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81c0e3740 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c801040 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c800e60 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c8012d0 <line:1048:1, col:8> col:8 implicit struct __add_volatile
|   | `-TypedefDecl 0x7fa81c801378 <col:36, col:57> col:57 type 'volatile _Tp'
|   |   `-QualType 0x7fa81c800ea4 'volatile _Tp' volatile
|   |     `-TemplateTypeParmType 0x7fa81c800ea0 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81c800e60 '_Tp'
|   |-ClassTemplateDecl 0x7fa81c801538 <line:1050:1, line:1051:54> line:1050:50 add_volatile
|   | |-TemplateTypeParmDecl 0x7fa81c8013f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c8014a0 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
|   |   |-TypeVisibilityAttr 0x7fa81c801830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81c801878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
|   |   `-TypedefDecl 0x7fa81c801e40 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
|   |     `-DependentNameType 0x7fa81c801dd0 'typename __add_volatile<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81c802100 <line:1054:1, col:73> col:22 add_volatile_t
|   | |-TemplateTypeParmDecl 0x7fa81c801eb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c8020a0 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c802030 'typename add_volatile<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c802298 <line:1059:1, line:1060:78> line:1059:50 add_cv
|   | |-TemplateTypeParmDecl 0x7fa81c802150 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c802200 <col:22, line:1060:78> line:1059:50 struct add_cv definition
|   |   |-TypeVisibilityAttr 0x7fa81c802510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81c802558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
|   |   `-TypedefDecl 0x7fa81c8028b0 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
|   |     `-DependentNameType 0x7fa81c802840 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81c802b70 <line:1063:1, col:61> col:22 add_cv_t
|   | |-TemplateTypeParmDecl 0x7fa81c802928 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c802b10 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c802aa0 'typename add_cv<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c802d08 <line:1068:1, col:92> col:50 remove_reference
|   | |-TemplateTypeParmDecl 0x7fa81c802bc0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c802c70 <col:22, col:92> col:50 struct remove_reference definition
|   | | |-TypeVisibilityAttr 0x7fa81c802f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81c802fc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
|   | | `-TypedefDecl 0x7fa81c803070 <col:75, col:87> col:87 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81c802c00 '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81c802bc0 '_Tp'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1ae838 <line:1069:1, col:92> col:50 struct remove_reference definition
|   | | |-TemplateArgument type 'struct A &'
|   | | |-CXXRecordDecl 0x7fa81d1aeb30 prev 0x7fa81d1ae838 <col:22, col:50> col:50 implicit struct remove_reference
|   | | `-TypedefDecl 0x7fa81d1aebd8 <col:75, col:87> col:87 referenced type 'struct A':'struct A'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1aea20 'struct A' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c803130 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c8030e8 '_Tp'
|   | |     `-RecordType 0x7fa81d1ad780 'struct A'
|   | |       `-CXXRecord 0x7fa81d1ad6e0 'A'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1e0c08 <line:1068:1, col:92> col:50 struct remove_reference definition
|   | | |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   | | |-CXXRecordDecl 0x7fa81d1e0e78 prev 0x7fa81d1e0c08 <col:22, col:50> col:50 implicit struct remove_reference
|   | | `-TypedefDecl 0x7fa81d1e0f48 <col:75, col:87> col:87 referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d1e0f10 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c802c00 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c802bc0 '_Tp'
|   | |     `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   | |       `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d205b88 <col:1, col:92> col:50 struct remove_reference definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d205df8 prev 0x7fa81d205b88 <col:22, col:50> col:50 implicit struct remove_reference
|   | | `-TypedefDecl 0x7fa81d205ec8 <col:75, col:87> col:87 referenced type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81d205e90 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81c802c00 '_Tp' dependent depth 0 index 0
|   | |     | `-TemplateTypeParm 0x7fa81c802bc0 '_Tp'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d209f68 <line:1069:1, col:92> col:50 struct remove_reference definition
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-CXXRecordDecl 0x7fa81d20a260 prev 0x7fa81d209f68 <col:22, col:50> col:50 implicit struct remove_reference
|   |   `-TypedefDecl 0x7fa81d20a308 <col:75, col:87> col:87 referenced type 'unsigned long':'unsigned long'
|   |     `-SubstTemplateTypeParmType 0x7fa81d20a150 'unsigned long' sugar
|   |       |-TemplateTypeParmType 0x7fa81c803130 '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c8030e8 '_Tp'
|   |       `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c8032b8 <col:1, col:92> col:50 struct remove_reference definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl 0x7fa81c8030e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c8033f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81c803530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
|   | `-TypedefDecl 0x7fa81c804200 <col:75, col:87> col:87 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81c803130 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81c8030e8 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c804448 <line:1071:1, col:92> col:50 struct remove_reference definition
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl 0x7fa81c804278 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c804588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81c8046c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
|   | `-TypedefDecl 0x7fa81c804768 <col:75, col:87> col:87 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81c8042c0 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81c804278 '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81c804a20 <line:1075:1, col:81> col:22 remove_reference_t
|   | |-TemplateTypeParmDecl 0x7fa81c8047e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c8049c0 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c804950 'typename remove_reference<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c804d08 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
|   | |-TemplateTypeParmDecl 0x7fa81c804a70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c804bf8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81c804ba8 <col:29, col:54> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x7fa81c804c70 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
|   | | |-CXXRecordDecl 0x7fa81c804fd0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
|   | | `-TypedefDecl 0x7fa81c805078 <col:109, col:122> col:122 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81c804ab0 '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81c804a70 '_Tp'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c6aa0 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl 0x7fa81d1c6d50 prev 0x7fa81d1c6aa0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
|   | | `-TypedefDecl 0x7fa81d1c6e38 <col:109, col:122> col:122 referenced type 'unsigned long &'
|   | |   `-LValueReferenceType 0x7fa81d1c6e00 'unsigned long &'
|   | |     `-SubstTemplateTypeParmType 0x7fa81d1c6ca0 'unsigned long' sugar
|   | |       |-TemplateTypeParmType 0x7fa81c805130 '_Tp' dependent depth 0 index 0
|   | |       | `-TemplateTypeParm 0x7fa81c8050f0 '_Tp'
|   | |       `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1cd0e0 <col:1, col:128> col:68 struct __add_lvalue_reference_impl definition
|   |   |-TemplateArgument type 'const unsigned long'
|   |   |-TemplateArgument integral 1
|   |   |-CXXRecordDecl 0x7fa81d1cd390 prev 0x7fa81d1cd0e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
|   |   `-TypedefDecl 0x7fa81d1cd468 <col:109, col:122> col:122 referenced type 'const unsigned long &'
|   |     `-LValueReferenceType 0x7fa81d1cd430 'const unsigned long &'
|   |       `-SubstTemplateTypeParmType 0x7fa81d1cd2e0 'const unsigned long' sugar
|   |         |-TemplateTypeParmType 0x7fa81c805130 '_Tp' dependent depth 0 index 0
|   |         | `-TemplateTypeParm 0x7fa81c8050f0 '_Tp'
|   |         `-QualType 0x7fa81c032881 'const unsigned long' const
|   |           `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c8052d0 <col:1, col:128> col:68 struct __add_lvalue_reference_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81c8050f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c805560 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
|   | `-TypedefDecl 0x7fa81c805638 <col:109, col:122> col:122 type '_Tp &'
|   |   `-LValueReferenceType 0x7fa81c805600 '_Tp &' dependent
|   |     `-TemplateTypeParmType 0x7fa81c805130 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81c8050f0 '_Tp'
|   |-ClassTemplateDecl 0x7fa81c8057f8 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
|   | |-TemplateTypeParmDecl 0x7fa81c8056b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c805760 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
|   | | |-TypeVisibilityAttr 0x7fa81c805a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81c805ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
|   | | `-TypedefDecl 0x7fa81c805e50 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
|   | |   `-DependentNameType 0x7fa81c805de0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1c5378 <line:1083:1, line:1084:63> line:1083:50 struct add_lvalue_reference definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1c5588 prev 0x7fa81d1c5378 <col:22, col:50> col:50 implicit struct add_lvalue_reference
|   | | `-TypedefDecl 0x7fa81d1c6f20 <line:1084:2, col:58> col:58 referenced type 'typename __add_lvalue_reference_impl<unsigned long>::type':'unsigned long &'
|   | |   `-ElaboratedType 0x7fa81d1c6ed0 'typename __add_lvalue_reference_impl<unsigned long>::type' sugar
|   | |     `-TypedefType 0x7fa81d1c6eb0 'std::__1::__add_lvalue_reference_impl<unsigned long, true>::type' sugar
|   | |       |-Typedef 0x7fa81d1c6e38 'type'
|   | |       `-LValueReferenceType 0x7fa81d1c6e00 'unsigned long &'
|   | |         `-SubstTemplateTypeParmType 0x7fa81d1c6ca0 'unsigned long' sugar
|   | |           |-TemplateTypeParmType 0x7fa81c805130 '_Tp' dependent depth 0 index 0
|   | |           | `-TemplateTypeParm 0x7fa81c8050f0 '_Tp'
|   | |           `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1cbf10 <line:1083:1, line:1084:63> line:1083:50 struct add_lvalue_reference definition
|   |   |-TemplateArgument type 'const unsigned long'
|   |   |-CXXRecordDecl 0x7fa81d1cc128 prev 0x7fa81d1cbf10 <col:22, col:50> col:50 implicit struct add_lvalue_reference
|   |   `-TypedefDecl 0x7fa81d1cd550 <line:1084:2, col:58> col:58 referenced type 'typename __add_lvalue_reference_impl<const unsigned long>::type':'const unsigned long &'
|   |     `-ElaboratedType 0x7fa81d1cd500 'typename __add_lvalue_reference_impl<const unsigned long>::type' sugar
|   |       `-TypedefType 0x7fa81d1cd4e0 'std::__1::__add_lvalue_reference_impl<const unsigned long, true>::type' sugar
|   |         |-Typedef 0x7fa81d1cd468 'type'
|   |         `-LValueReferenceType 0x7fa81d1cd430 'const unsigned long &'
|   |           `-SubstTemplateTypeParmType 0x7fa81d1cd2e0 'const unsigned long' sugar
|   |             |-TemplateTypeParmType 0x7fa81c805130 '_Tp' dependent depth 0 index 0
|   |             | `-TemplateTypeParm 0x7fa81c8050f0 '_Tp'
|   |             `-QualType 0x7fa81c032881 'const unsigned long' const
|   |               `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-TypeAliasTemplateDecl 0x7fa81c806110 <line:1087:1, col:89> col:22 add_lvalue_reference_t
|   | |-TemplateTypeParmDecl 0x7fa81c805ec8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c8060b0 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c806040 'typename add_lvalue_reference<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d000218 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
|   | |-TemplateTypeParmDecl 0x7fa81c806160 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d000108 <col:22, col:54> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d0000b8 <col:29, col:54> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x7fa81d000180 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
|   | | |-CXXRecordDecl 0x7fa81d0004e0 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
|   | | `-TypedefDecl 0x7fa81d000588 <col:109, col:123> col:123 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81c8061a0 '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81c806160 '_Tp'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1d4d10 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 1
|   |   |-CXXRecordDecl 0x7fa81d1d4fc0 prev 0x7fa81d1d4d10 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
|   |   `-TypedefDecl 0x7fa81d1d50c8 <col:109, col:123> col:123 referenced type 'unsigned long &&'
|   |     `-RValueReferenceType 0x7fa81d1d5090 'unsigned long &&'
|   |       `-SubstTemplateTypeParmType 0x7fa81d1d4f10 'unsigned long' sugar
|   |         |-TemplateTypeParmType 0x7fa81d000640 '_Tp' dependent depth 0 index 0
|   |         | `-TemplateTypeParm 0x7fa81d000600 '_Tp'
|   |         `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0007e0 <col:1, col:129> col:68 struct __add_rvalue_reference_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d000600 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d000a70 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
|   | `-TypedefDecl 0x7fa81d000b48 <col:109, col:123> col:123 type '_Tp &&'
|   |   `-RValueReferenceType 0x7fa81d000b10 '_Tp &&' dependent
|   |     `-TemplateTypeParmType 0x7fa81d000640 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81d000600 '_Tp'
|   |-ClassTemplateDecl 0x7fa81d000d08 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
|   | |-TemplateTypeParmDecl 0x7fa81d000bc0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d000c70 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
|   | | |-TypeVisibilityAttr 0x7fa81d000f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81d001000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
|   | | `-TypedefDecl 0x7fa81d001380 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
|   | |   `-DependentNameType 0x7fa81d001310 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1d48f0 <line:1095:1, line:1096:63> line:1095:50 struct add_rvalue_reference definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-CXXRecordDecl 0x7fa81d1d4b08 prev 0x7fa81d1d48f0 <col:22, col:50> col:50 implicit struct add_rvalue_reference
|   |   `-TypedefDecl 0x7fa81d1d51b0 <line:1096:2, col:58> col:58 referenced type 'typename __add_rvalue_reference_impl<unsigned long>::type':'unsigned long &&'
|   |     `-ElaboratedType 0x7fa81d1d5160 'typename __add_rvalue_reference_impl<unsigned long>::type' sugar
|   |       `-TypedefType 0x7fa81d1d5140 'std::__1::__add_rvalue_reference_impl<unsigned long, true>::type' sugar
|   |         |-Typedef 0x7fa81d1d50c8 'type'
|   |         `-RValueReferenceType 0x7fa81d1d5090 'unsigned long &&'
|   |           `-SubstTemplateTypeParmType 0x7fa81d1d4f10 'unsigned long' sugar
|   |             |-TemplateTypeParmType 0x7fa81d000640 '_Tp' dependent depth 0 index 0
|   |             | `-TemplateTypeParm 0x7fa81d000600 '_Tp'
|   |             `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-TypeAliasTemplateDecl 0x7fa81d001640 <line:1099:1, col:89> col:22 add_rvalue_reference_t
|   | |-TemplateTypeParmDecl 0x7fa81d0013f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d0015e0 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d001570 'typename add_rvalue_reference<_Tp>::type' dependent
|   |-FunctionTemplateDecl 0x7fa81d0018f8 <line:1106:1, col:41> col:28 __declval
|   | |-TemplateTypeParmDecl 0x7fa81d001690 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl 0x7fa81d001860 <col:22, col:41> col:28 __declval '_Tp &&(int)'
|   | | `-ParmVarDecl 0x7fa81d001728 <col:38> col:41 'int'
|   | |-FunctionDecl 0x7fa81d1d06f0 <col:22, col:41> col:28 referenced __declval 'unsigned long &&(int)'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-ParmVarDecl 0x7fa81d1d0628 <col:38> col:41 'int'
|   | |-FunctionDecl 0x7fa81d1d1700 <col:22, col:41> col:28 referenced __declval 'const unsigned long &&(int)'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-ParmVarDecl 0x7fa81d1d1640 <col:38> col:41 'int'
|   | `-FunctionDecl 0x7fa81d1d7650 <col:22, col:41> col:28 referenced __declval 'unsigned long &&&&(int)'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-ParmVarDecl 0x7fa81d1d7550 <col:38> col:41 'int'
|   |-FunctionTemplateDecl 0x7fa81d001b88 <line:1107:1, col:42> col:28 __declval
|   | |-TemplateTypeParmDecl 0x7fa81d001950 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl 0x7fa81d001af0 <col:22, col:42> col:28 __declval '_Tp (long)'
|   | | `-ParmVarDecl 0x7fa81d0019e8 <col:38> col:42 'long'
|   | |-FunctionDecl 0x7fa81d1d0a70 <col:22, col:42> col:28 __declval 'unsigned long &(long)'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-ParmVarDecl 0x7fa81d1d0968 <col:38> col:42 'long'
|   | |-FunctionDecl 0x7fa81d1d19f0 <col:22, col:42> col:28 __declval 'const unsigned long &(long)'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-ParmVarDecl 0x7fa81d1d18f0 <col:38> col:42 'long'
|   | `-FunctionDecl 0x7fa81d1d7940 <col:22, col:42> col:28 __declval 'unsigned long &&(long)'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-ParmVarDecl 0x7fa81d1d7840 <col:38> col:42 'long'
|   |-FunctionTemplateDecl 0x7fa81d001f80 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
|   | |-TemplateTypeParmDecl 0x7fa81d001be0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl 0x7fa81d001ee8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
|   | |-FunctionDecl 0x7fa81d1d1118 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 referenced declval 'decltype(std::__1::__declval<unsigned long &>(0)) (void) noexcept'
|   | | `-TemplateArgument type 'unsigned long &'
|   | |-FunctionDecl 0x7fa81d1d2018 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 referenced declval 'decltype(std::__1::__declval<const unsigned long &>(0)) (void) noexcept'
|   | | `-TemplateArgument type 'const unsigned long &'
|   | `-FunctionDecl 0x7fa81d1d7f98 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 referenced declval 'decltype(std::__1::__declval<unsigned long &&>(0)) (void) noexcept'
|   |   `-TemplateArgument type 'unsigned long &&'
|   |-ClassTemplateDecl 0x7fa81d002118 <line:1123:1, line:1126:1> line:1124:8 __uncvref
|   | |-TemplateTypeParmDecl 0x7fa81d002000 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d002080 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
|   | | |-CXXRecordDecl 0x7fa81d002390 <col:1, col:8> col:8 implicit struct __uncvref
|   | | `-TypedefDecl 0x7fa81d0026f0 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
|   | |   `-DependentNameType 0x7fa81d002680 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e0928 <line:1123:1, line:1126:1> line:1124:8 struct __uncvref definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl 0x7fa81d1e0b38 prev 0x7fa81d1e0928 <col:1, col:8> col:8 implicit struct __uncvref
|   |   `-TypedefDecl 0x7fa81d1e1c20 <line:1125:5, col:76> col:76 referenced type 'typename remove_cv<typename remove_reference<struct pair<unsigned long, unsigned long> >::type>::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-ElaboratedType 0x7fa81d1e1bd0 'typename remove_cv<typename remove_reference<struct pair<unsigned long, unsigned long> >::type>::type' sugar
|   |       `-TypedefType 0x7fa81d1e1bb0 'std::__1::remove_cv<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |         |-Typedef 0x7fa81d1e1b30 'type'
|   |         `-ElaboratedType 0x7fa81d1e1ae0 'typename remove_volatile<typename remove_const<struct pair<unsigned long, unsigned long> >::type>::type' sugar
|   |           `-TypedefType 0x7fa81d1e1ac0 'std::__1::remove_volatile<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |             |-Typedef 0x7fa81d1e1a48 'type'
|   |             `-SubstTemplateTypeParmType 0x7fa81d1e1a10 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |               |-TemplateTypeParmType 0x7fa81c0c1dd0 '_Tp' dependent depth 0 index 0
|   |               | `-TemplateTypeParm 0x7fa81c0c1d90 '_Tp'
|   |               `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |                 `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-ClassTemplateDecl 0x7fa81d002888 <line:1128:1, line:1131:1> line:1129:8 __unconstref
|   | |-TemplateTypeParmDecl 0x7fa81d002768 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d0027f0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
|   |   |-CXXRecordDecl 0x7fa81d002b00 <col:1, col:8> col:8 implicit struct __unconstref
|   |   `-TypedefDecl 0x7fa81d002e60 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
|   |     `-DependentNameType 0x7fa81d002df0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d004130 <line:1134:1, line:1135:46> col:1 __uncvref_t
|   | |-TemplateTypeParmDecl 0x7fa81d002ed8 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d0040d0 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d004060 'typename __uncvref<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d004310 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
|   | |-TemplateTypeParmDecl 0x7fa81d004180 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d0041e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl 0x7fa81d004278 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
|   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
|   |   `-CXXRecordDecl 0x7fa81d0049b8 <col:1, col:8> col:8 implicit struct __is_same_uncvref
|   |-CXXRecordDecl 0x7fa81d004a70 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
|   | |-CXXRecordDecl 0x7fa81d004b98 <col:1, col:8> col:8 implicit referenced struct __any
|   | `-CXXConstructorDecl 0x7fa81d004cd0 <line:1146:5, col:14> col:5 __any 'void (...)'
|   |-ClassTemplateDecl 0x7fa81d004ee8 <line:1151:1, col:104> col:50 remove_pointer
|   | |-TemplateTypeParmDecl 0x7fa81d004d98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d004e50 <col:22, col:104> col:50 struct remove_pointer definition
|   |   |-TypeVisibilityAttr 0x7fa81d006230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81d006278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
|   |   `-TypedefDecl 0x7fa81d006320 <col:87, col:99> col:99 type '_Tp'
|   |     `-TemplateTypeParmType 0x7fa81d004de0 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81d004d98 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d006568 <line:1152:1, col:104> col:50 struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl 0x7fa81d006398 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d0066a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d0067e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
|   | `-TypedefDecl 0x7fa81d006888 <col:87, col:99> col:99 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81d0063e0 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d006398 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d006ac8 <line:1153:1, col:104> col:50 struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *const'
|   | |-TemplateTypeParmDecl 0x7fa81d006900 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d006c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d006d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
|   | `-TypedefDecl 0x7fa81d006de8 <col:87, col:99> col:99 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81d006940 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d006900 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d008040 <line:1154:1, col:104> col:50 struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
|   | |-TemplateTypeParmDecl 0x7fa81d006e60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d008178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d0082b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
|   | `-TypedefDecl 0x7fa81d008358 <col:87, col:99> col:99 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81d006ea0 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d006e60 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d008598 <line:1155:1, col:104> col:50 struct remove_pointer definition
|   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
|   | |-TemplateTypeParmDecl 0x7fa81d0083d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d0086d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d008810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
|   | `-TypedefDecl 0x7fa81d0088b8 <col:87, col:99> col:99 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81d008410 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d0083d0 '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81d008b70 <line:1158:1, col:77> col:22 remove_pointer_t
|   | |-TemplateTypeParmDecl 0x7fa81d008930 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d008b10 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d008aa0 'typename remove_pointer<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d009148 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
|   | |-TemplateTypeParmDecl 0x7fa81d008bc0 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d009038 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81d009000 <col:16, line:1165:63> '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr 0x7fa81d008cf8 <line:1164:16, col:41> '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr 0x7fa81d008fb8 <line:1165:17, col:63> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x7fa81d0090b0 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
|   | | |-CXXRecordDecl 0x7fa81d009410 <col:1, col:8> col:8 implicit struct __add_pointer_impl
|   | | `-TypedefDecl 0x7fa81d009630 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
|   | |   `-PointerType 0x7fa81d0095e0 'typename remove_reference<_Tp>::type *' dependent
|   | |     `-DependentNameType 0x7fa81d009560 'typename remove_reference<_Tp>::type' dependent
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e8948 <line:1163:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-TemplateArgument integral 1
|   |   |-CXXRecordDecl 0x7fa81d1e8ba8 prev 0x7fa81d1e8948 <col:1, col:8> col:8 implicit struct __add_pointer_impl
|   |   `-TypedefDecl 0x7fa81d1e8d70 <line:1167:6, col:52> col:52 referenced type 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type *'
|   |     `-PointerType 0x7fa81d1e8d20 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type *'
|   |       `-ElaboratedType 0x7fa81d1e8cf0 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type' sugar
|   |         `-TypedefType 0x7fa81d1e0fc0 'std::__1::remove_reference<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |           |-Typedef 0x7fa81d1e0f48 'type'
|   |           `-SubstTemplateTypeParmType 0x7fa81d1e0f10 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |             |-TemplateTypeParmType 0x7fa81c802c00 '_Tp' dependent depth 0 index 0
|   |             | `-TemplateTypeParm 0x7fa81c802bc0 '_Tp'
|   |             `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |               `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d009890 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d0096a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d009b20 <col:22, col:29> col:29 implicit struct __add_pointer_impl
|   | `-TypedefDecl 0x7fa81d009bc8 <line:1169:6, col:18> col:18 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81d0096f0 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d0096a8 '_Tp'
|   |-ClassTemplateDecl 0x7fa81d009d88 <line:1171:1, line:1172:58> line:1171:50 add_pointer
|   | |-TemplateTypeParmDecl 0x7fa81d009c40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d009cf0 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
|   | | |-TypeVisibilityAttr 0x7fa81d00b000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81d00b048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
|   | | `-TypedefDecl 0x7fa81d00b610 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
|   | |   `-DependentNameType 0x7fa81d00b5a0 'typename __add_pointer_impl<_Tp>::type' dependent
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e7628 <line:1171:1, line:1172:58> line:1171:50 struct add_pointer definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl 0x7fa81d1e7838 prev 0x7fa81d1e7628 <col:22, col:50> col:50 implicit struct add_pointer
|   |   `-TypedefDecl 0x7fa81d1e8e60 <line:1172:6, col:53> col:53 referenced type 'typename __add_pointer_impl<struct pair<unsigned long, unsigned long> >::type':'typename remove_reference<struct pair<unsigned long, unsigned long> >::type *'
|   |     `-ElaboratedType 0x7fa81d1e8e10 'typename __add_pointer_impl<struct pair<unsigned long, unsigned long> >::type' sugar
|   |       `-TypedefType 0x7fa81d1e8df0 'std::__1::__add_pointer_impl<struct std::__1::pair<unsigned long, unsigned long>, true>::type' sugar
|   |         |-Typedef 0x7fa81d1e8d70 'type'
|   |         `-PointerType 0x7fa81d1e8d20 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type *'
|   |           `-ElaboratedType 0x7fa81d1e8cf0 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type' sugar
|   |             `-TypedefType 0x7fa81d1e0fc0 'std::__1::remove_reference<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |               |-Typedef 0x7fa81d1e0f48 'type'
|   |               `-SubstTemplateTypeParmType 0x7fa81d1e0f10 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |                 |-TemplateTypeParmType 0x7fa81c802c00 '_Tp' dependent depth 0 index 0
|   |                 | `-TemplateTypeParm 0x7fa81c802bc0 '_Tp'
|   |                 `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |                   `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-TypeAliasTemplateDecl 0x7fa81d00b8d0 <line:1175:1, col:71> col:22 add_pointer_t
|   | |-TemplateTypeParmDecl 0x7fa81d00b688 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d00b870 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d00b800 'typename add_pointer<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d00bbb8 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
|   | |-TemplateTypeParmDecl 0x7fa81d00b920 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d00baa8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d00ba58 <col:29, col:47> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d00bb20 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
|   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
|   |   `-CXXRecordDecl 0x7fa81d00c938 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d00cbd0 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d00c9f0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d00cea0 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
|   |-ClassTemplateDecl 0x7fa81d00d1f8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
|   | |-TemplateTypeParmDecl 0x7fa81d00cf58 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d00d0e8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d00d098 <col:29, col:49> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d00d160 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
|   |   |-public '__libcpp_is_signed_impl<_Tp>'
|   |   `-CXXRecordDecl 0x7fa81d00d6f8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0129a0 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d00d7b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d012c70 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
|   |-ClassTemplateDecl 0x7fa81d012e78 <line:1191:1, col:94> col:50 is_signed
|   | |-TemplateTypeParmDecl 0x7fa81d012d28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d012de0 <col:22, col:94> col:50 struct is_signed definition
|   |   |-public '__libcpp_is_signed<_Tp>'
|   |   |-TypeVisibilityAttr 0x7fa81d0130f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d013378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
|   |-ClassTemplateDecl 0x7fa81d0136c8 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
|   | |-TemplateTypeParmDecl 0x7fa81d013430 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d0135b8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d013568 <col:29, col:47> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d013630 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
|   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
|   |   `-CXXRecordDecl 0x7fa81d013d08 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d013fa0 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d013dc0 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d014270 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
|   |-ClassTemplateDecl 0x7fa81d0145c8 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
|   | |-TemplateTypeParmDecl 0x7fa81d014328 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d0144b8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d014468 <col:29, col:49> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d014530 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
|   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
|   |   `-CXXRecordDecl 0x7fa81d014ac8 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d014d60 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d014b80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d015030 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
|   |-ClassTemplateDecl 0x7fa81d015238 <line:1211:1, col:98> col:50 is_unsigned
|   | |-TemplateTypeParmDecl 0x7fa81d0150e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d0151a0 <col:22, col:98> col:50 struct is_unsigned definition
|   |   |-public '__libcpp_is_unsigned<_Tp>'
|   |   |-TypeVisibilityAttr 0x7fa81d0154b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d015738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
|   |-ClassTemplateDecl 0x7fa81d015948 <line:1220:1, line:1221:44> line:1220:50 rank
|   | |-TemplateTypeParmDecl 0x7fa81d015800 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d0158b0 <col:22, line:1221:44> line:1220:50 struct rank definition
|   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   |   |-TypeVisibilityAttr 0x7fa81d015bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d0164c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d016c00 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
|   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl 0x7fa81d016578 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d016d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d017168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0174a8 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
|   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl 0x7fa81d017220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d017298 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr 0x7fa81d0175f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d0179a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
|   |-ClassTemplateDecl 0x7fa81d017c98 <line:1234:1, line:1235:44> line:1234:68 extent
|   | |-TemplateTypeParmDecl 0x7fa81d017a60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d017b00 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 0x7fa81d017b58 <col:37> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x7fa81d017ac8 <col:37> 'int' 0
|   | `-CXXRecordDecl 0x7fa81d017c00 <col:40, line:1235:44> line:1234:68 struct extent definition
|   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   |   |-TypeVisibilityAttr 0x7fa81d017f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d0180e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d018400 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
|   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d0181a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d018588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d018838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d018c00 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
|   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d018a68 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fa81d018970 '_Ip' 'unsigned int'
|   | |-TemplateTypeParmDecl 0x7fa81d0188f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d018970 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
|   | |-TypeVisibilityAttr 0x7fa81d018d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d019298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d019670 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
|   | |-public 'integral_constant<size_t, _Np>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d019350 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d0193c8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr 0x7fa81d0197f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d019af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d019f40 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
|   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d019de0 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fa81d019ca8 '_Ip' 'unsigned int'
|   | |-TemplateTypeParmDecl 0x7fa81d019bb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d019c38 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-NonTypeTemplateParmDecl 0x7fa81d019ca8 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
|   | |-TypeVisibilityAttr 0x7fa81d01a0a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d01a5d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
|   |-ClassTemplateDecl 0x7fa81d01a7d8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
|   | |-TemplateTypeParmDecl 0x7fa81d01a690 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d01a740 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
|   | | |-TypeVisibilityAttr 0x7fa81d01aa50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81d01aa98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
|   | | `-TypedefDecl 0x7fa81d01ab40 <line:1253:6, col:18> col:18 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81d01a6d0 '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81d01a690 '_Tp'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e4e58 <line:1252:1, line:1253:23> line:1252:50 struct remove_extent definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl 0x7fa81d1e50c8 prev 0x7fa81d1e4e58 <col:22, col:50> col:50 implicit struct remove_extent
|   |   `-TypedefDecl 0x7fa81d1e5198 <line:1253:6, col:18> col:18 referenced type 'struct std::__1::pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-SubstTemplateTypeParmType 0x7fa81d1e5160 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |       |-TemplateTypeParmType 0x7fa81d01a6d0 '_Tp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81d01a690 '_Tp'
|   |       `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |         `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d01ad98 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl 0x7fa81d01abb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d01aee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d01b020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
|   | `-TypedefDecl 0x7fa81d01b0c8 <line:1255:6, col:18> col:18 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81d01ac00 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d01abb8 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d01b3c8 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl 0x7fa81d01b140 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d01b1b8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr 0x7fa81d01b518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d01b650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
|   | `-TypedefDecl 0x7fa81d01b6f8 <line:1257:6, col:18> col:18 type '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81d01b180 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d01b140 '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81d01b9b0 <line:1260:1, col:75> col:22 remove_extent_t
|   | |-TemplateTypeParmDecl 0x7fa81d01b770 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d01b950 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d01b8e0 'typename remove_extent<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d01bb48 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
|   | |-TemplateTypeParmDecl 0x7fa81d01ba00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d01bab0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
|   |   |-TypeVisibilityAttr 0x7fa81d01be30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81d01be78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
|   |   `-TypedefDecl 0x7fa81d01bf20 <line:1266:6, col:18> col:18 type '_Tp'
|   |     `-TemplateTypeParmType 0x7fa81d01ba40 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81d01ba00 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d01c178 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl 0x7fa81d01bf98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d01c2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d01c400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
|   | `-TypedefDecl 0x7fa81d01c600 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d01c590 'typename remove_all_extents<_Tp>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d01c908 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl 0x7fa81d01c678 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d01c6f8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-TypeVisibilityAttr 0x7fa81d01ca58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d01cc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
|   | `-TypedefDecl 0x7fa81d01cdc0 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d01cd50 'typename remove_all_extents<_Tp>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d01d040 <line:1273:1, col:85> col:22 remove_all_extents_t
|   | |-TemplateTypeParmDecl 0x7fa81d01ce38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d01cfe0 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d01cf70 'typename remove_all_extents<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d01d218 <line:1278:1, line:1281:1> line:1279:8 __decay
|   | |-TemplateTypeParmDecl 0x7fa81d01d090 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
|   | |-NonTypeTemplateParmDecl 0x7fa81d01d108 <col:22> col:26 '_Bool' depth 0 index 1
|   | |-CXXRecordDecl 0x7fa81d01d180 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
|   | | |-CXXRecordDecl 0x7fa81d01d4e0 <col:1, col:8> col:8 implicit struct __decay
|   | | `-TypedefDecl 0x7fa81d01d6a0 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
|   | |   `-DependentNameType 0x7fa81d01d630 'typename remove_cv<_Up>::type' dependent
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e4700 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-TemplateArgument integral 1
|   |   |-CXXRecordDecl 0x7fa81d1e49e0 prev 0x7fa81d1e4700 <col:1, col:8> col:8 implicit struct __decay
|   |   |-AccessSpecDecl 0x7fa81d1e4a78 <line:1285:1, col:7> col:1 public
|   |   `-TypedefDecl 0x7fa81d1e96f0 <line:1286:5, line:1296:30> col:30 referenced type 'typename conditional<is_array<struct pair<unsigned long, unsigned long> >::value, typename remove_extent<struct pair<unsigned long, unsigned long> >::type *, typename conditional<is_function<struct pair<unsigned long, unsigned long> >::value, typename add_pointer<struct pair<unsigned long, unsigned long> >::type, typename remove_cv<struct pair<unsigned long, unsigned long> >::type>::type>::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-ElaboratedType 0x7fa81d1e96a0 'typename conditional<is_array<struct pair<unsigned long, unsigned long> >::value, typename remove_extent<struct pair<unsigned long, unsigned long> >::type *, typename conditional<is_function<struct pair<unsigned long, unsigned long> >::value, typename add_pointer<struct pair<unsigned long, unsigned long> >::type, typename remove_cv<struct pair<unsigned long, unsigned long> >::type>::type>::type' sugar
|   |       `-TypedefType 0x7fa81d1e9510 'std::__1::conditional<false, struct std::__1::pair<unsigned long, unsigned long> *, struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |         |-Typedef 0x7fa81d1e9498 'type'
|   |         `-SubstTemplateTypeParmType 0x7fa81d1e9340 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |           |-TemplateTypeParmType 0x7fa81c0a9250 '_Then' dependent depth 0 index 1
|   |           | `-TemplateTypeParm 0x7fa81c0a9208 '_Then'
|   |           `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |             `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d01d900 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d01d718 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
|   | |-CXXRecordDecl 0x7fa81d01dc00 <line:1284:1, col:8> col:8 implicit struct __decay
|   | |-AccessSpecDecl 0x7fa81d01dc98 <line:1285:1, col:7> col:1 public
|   | `-TypedefDecl 0x7fa81d01e720 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
|   |   `-DependentNameType 0x7fa81d01e6b0 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d01e8e8 <line:1299:1, line:1306:1> line:1300:29 decay
|   | |-TemplateTypeParmDecl 0x7fa81d01e798 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d01e850 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
|   | | |-TypeVisibilityAttr 0x7fa81d01eb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81d01ec00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
|   | | |-AccessSpecDecl 0x7fa81d01ec98 <line:1302:1, col:8> col:1 private
|   | | |-TypedefDecl 0x7fa81d01ede0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
|   | | | `-DependentNameType 0x7fa81d01ed70 'typename remove_reference<_Tp>::type' dependent
|   | | |-AccessSpecDecl 0x7fa81d01ee38 <line:1304:1, col:7> col:1 public
|   | | `-TypedefDecl 0x7fa81d01f200 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
|   | |   `-DependentNameType 0x7fa81d01f190 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e3378 <line:1299:1, line:1306:1> line:1300:29 struct decay definition
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |-CXXRecordDecl 0x7fa81d1e3588 prev 0x7fa81d1e3378 <col:1, col:29> col:29 implicit struct decay
|   |   |-AccessSpecDecl 0x7fa81d1e3620 <line:1302:1, col:8> col:1 private
|   |   |-TypedefDecl 0x7fa81d1e3780 <line:1303:5, col:50> col:50 _Up 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | `-ElaboratedType 0x7fa81d1e3730 'typename remove_reference<struct pair<unsigned long, unsigned long> >::type' sugar
|   |   |   `-TypedefType 0x7fa81d1e0fc0 'std::__1::remove_reference<struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |   |     |-Typedef 0x7fa81d1e0f48 'type'
|   |   |     `-SubstTemplateTypeParmType 0x7fa81d1e0f10 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |   |       |-TemplateTypeParmType 0x7fa81c802c00 '_Tp' dependent depth 0 index 0
|   |   |       | `-TemplateTypeParm 0x7fa81c802bc0 '_Tp'
|   |   |       `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   |         `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |   |-AccessSpecDecl 0x7fa81d1e37d8 <line:1304:1, col:7> col:1 public
|   |   `-TypedefDecl 0x7fa81d1e97e0 <line:1305:5, col:73> col:73 referenced type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type':'struct std::__1::pair<unsigned long, unsigned long>'
|   |     `-ElaboratedType 0x7fa81d1e9790 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' sugar
|   |       `-TypedefType 0x7fa81d1e9770 'std::__1::__decay<struct std::__1::pair<unsigned long, unsigned long>, true>::type' sugar
|   |         |-Typedef 0x7fa81d1e96f0 'type'
|   |         `-ElaboratedType 0x7fa81d1e96a0 'typename conditional<is_array<struct pair<unsigned long, unsigned long> >::value, typename remove_extent<struct pair<unsigned long, unsigned long> >::type *, typename conditional<is_function<struct pair<unsigned long, unsigned long> >::value, typename add_pointer<struct pair<unsigned long, unsigned long> >::type, typename remove_cv<struct pair<unsigned long, unsigned long> >::type>::type>::type' sugar
|   |           `-TypedefType 0x7fa81d1e9510 'std::__1::conditional<false, struct std::__1::pair<unsigned long, unsigned long> *, struct std::__1::pair<unsigned long, unsigned long> >::type' sugar
|   |             |-Typedef 0x7fa81d1e9498 'type'
|   |             `-SubstTemplateTypeParmType 0x7fa81d1e9340 'struct std::__1::pair<unsigned long, unsigned long>' sugar
|   |               |-TemplateTypeParmType 0x7fa81c0a9250 '_Then' dependent depth 0 index 1
|   |               | `-TemplateTypeParm 0x7fa81c0a9208 '_Then'
|   |               `-RecordType 0x7fa81c811590 'struct std::__1::pair<unsigned long, unsigned long>'
|   |                 `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-TypeAliasTemplateDecl 0x7fa81d01f4c0 <line:1309:1, col:59> col:22 decay_t
|   | |-TemplateTypeParmDecl 0x7fa81d01f278 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d01f460 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d01f3f0 'typename decay<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d01f658 <line:1314:1, line:1315:59> line:1314:50 is_abstract
|   | |-TemplateTypeParmDecl 0x7fa81d01f510 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d01f5c0 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
|   | | |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
|   | | |-TypeVisibilityAttr 0x7fa81d01f8d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d01fab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1dcf08 <col:1, line:1315:59> line:1314:50 struct is_abstract definition
|   |   |-public 'integral_constant<_Bool, __is_abstract(unsigned long)>':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl 0x7fa81d1dd278 prev 0x7fa81d1dcf08 <col:22, col:50> col:50 implicit struct is_abstract
|   |-ClassTemplateDecl 0x7fa81d0200c8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
|   | |-TemplateTypeParmDecl 0x7fa81d01fb70 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d020030 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
|   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d020340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d020528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
|   |-ClassTemplateDecl 0x7fa81d020728 <line:1333:1, line:1334:61> col:1 is_final
|   | |-TemplateTypeParmDecl 0x7fa81d0205e0 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d020690 <col:22, line:1334:61> col:1 struct is_final definition
|   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d0209a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d020b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
|   |-ClassTemplateDecl 0x7fa81d020da0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
|   | |-TemplateTypeParmDecl 0x7fa81d020be0 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
|   | |-TemplateTypeParmDecl 0x7fa81d020c48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
|   | `-CXXRecordDecl 0x7fa81d020d08 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
|   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d022068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d022268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
|   |-ClassTemplateDecl 0x7fa81d0224e0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
|   | |-TemplateTypeParmDecl 0x7fa81d022320 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d022388 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | |-CXXRecordDecl 0x7fa81d022448 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
|   | | |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
|   | | |-TypeVisibilityAttr 0x7fa81d022780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d022b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1dcbe0 <col:1, line:1401:65> line:1399:61 struct is_convertible definition
|   | | |-public 'integral_constant<_Bool, __is_convertible_to(const unsigned long &, unsigned long) && !is_abstract<unsigned long>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1dd4c8 prev 0x7fa81d1dcbe0 <col:33, col:61> col:61 implicit struct is_convertible
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1dec90 <col:1, line:1401:65> line:1399:61 struct is_convertible definition
|   |   |-public 'integral_constant<_Bool, __is_convertible_to(unsigned long, unsigned long) && !is_abstract<unsigned long>::value>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl 0x7fa81d1dfe48 prev 0x7fa81d1dec90 <col:33, col:61> col:61 implicit struct is_convertible
|   |-ClassTemplateDecl 0x7fa81d022d38 <line:1489:1, line:1491:56> line:1490:29 is_empty
|   | |-TemplateTypeParmDecl 0x7fa81d022bf0 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d022ca0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
|   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d022fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d023198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
|   |-ClassTemplateDecl 0x7fa81d023398 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
|   | |-TemplateTypeParmDecl 0x7fa81d023250 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d023300 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
|   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d023610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d0237f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
|   |-ClassTemplateDecl 0x7fa81d0239f8 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
|   | |-TemplateTypeParmDecl 0x7fa81d0238b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d023960 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
|   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d023c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d023e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
|   |-ClassTemplateDecl 0x7fa81d024098 <line:1567:1, line:1568:59> line:1567:50 alignment_of
|   | |-TemplateTypeParmDecl 0x7fa81d023f10 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d024000 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
|   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d024310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d0244f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
|   |-ClassTemplateDecl 0x7fa81d024740 <line:1577:1, line:1582:1> line:1578:8 __type_list
|   | |-TemplateTypeParmDecl 0x7fa81d0245b0 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl 0x7fa81d024618 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
|   | |-CXXRecordDecl 0x7fa81d0246a8 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
|   | | |-CXXRecordDecl 0x7fa81d0249e0 <col:1, col:8> col:8 implicit struct __type_list
|   | | |-TypedefDecl 0x7fa81d024a88 <line:1580:5, col:17> col:17 _Head '_Hp'
|   | | | `-TemplateTypeParmType 0x7fa81d0245f0 '_Hp' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm 0x7fa81d0245b0 '_Hp'
|   | | `-TypedefDecl 0x7fa81d024af0 <line:1581:5, col:17> col:17 _Tail '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81d024660 '_Tp' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81d024618 '_Tp'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02a7c8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02a9e0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02abf0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02ae00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02b010 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02b220 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02b430 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02b648 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02b860 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d02ba70 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04a138 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type '__int128'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04a350 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'long long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04a560 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04a770 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'int'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04ba00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'short'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04bc10 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
|   | | |-TemplateArgument type 'signed char'
|   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | | |-CXXRecordDecl 0x7fa81c0a3c68 prev 0x7fa81d04bc10 <col:1, col:8> col:8 implicit struct __type_list
|   | | |-TypedefDecl 0x7fa81c0a3d38 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
|   | | | `-SubstTemplateTypeParmType 0x7fa81c0a3d00 'signed char' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d0245f0 '_Hp' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d0245b0 '_Hp'
|   | | |   `-BuiltinType 0x7fa81c032780 'signed char'
|   | | `-TypedefDecl 0x7fa81c0a3dc8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c0a3d90 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d024660 '_Tp' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d024618 '_Tp'
|   | |     `-RecordType 0x7fa81d04bb00 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   | |       `-ClassTemplateSpecialization 0x7fa81d04ba00 '__type_list'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04bf10 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'unsigned __int128'
|   | | `-TemplateArgument type 'struct std::__1::__nat'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04c120 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'unsigned long long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04c330 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'unsigned long'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04c540 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'unsigned int'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d04c750 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
|   | | |-TemplateArgument type 'unsigned short'
|   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d04ca00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
|   |   |-TemplateArgument type 'unsigned char'
|   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |   |-CXXRecordDecl 0x7fa81c0e5a58 prev 0x7fa81d04ca00 <col:1, col:8> col:8 implicit struct __type_list
|   |   |-TypedefDecl 0x7fa81c0e5b28 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
|   |   | `-SubstTemplateTypeParmType 0x7fa81c0e5af0 'unsigned char' sugar
|   |   |   |-TemplateTypeParmType 0x7fa81d0245f0 '_Hp' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm 0x7fa81d0245b0 '_Hp'
|   |   |   `-BuiltinType 0x7fa81c032820 'unsigned char'
|   |   `-TypedefDecl 0x7fa81c0e5bb8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |     `-SubstTemplateTypeParmType 0x7fa81c0e5b80 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
|   |       |-TemplateTypeParmType 0x7fa81d024660 '_Tp' dependent depth 0 index 1
|   |       | `-TemplateTypeParm 0x7fa81d024618 '_Tp'
|   |       `-RecordType 0x7fa81d04c850 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |         `-ClassTemplateSpecialization 0x7fa81d04c750 '__type_list'
|   |-CXXRecordDecl 0x7fa81d024b68 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
|   | |-CXXRecordDecl 0x7fa81d024c88 <col:1, col:8> col:8 implicit referenced struct __nat
|   | |-CXXConstructorDecl 0x7fa81d024dc0 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
|   | |-CXXConstructorDecl 0x7fa81d025a00 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
|   | | `-ParmVarDecl 0x7fa81d024ea8 <col:11, col:22> col:23 'const struct std::__1::__nat &'
|   | |-CXXMethodDecl 0x7fa81d025bb0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
|   | | `-ParmVarDecl 0x7fa81d025ac0 <col:22, col:33> col:34 'const struct std::__1::__nat &'
|   | `-CXXDestructorDecl 0x7fa81d025ca0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fa81d025ca0
|   |-ClassTemplateDecl 0x7fa81d025e98 <line:1594:1, line:1599:1> line:1595:8 __align_type
|   | |-TemplateTypeParmDecl 0x7fa81d025d78 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d025e00 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
|   | | |-CXXRecordDecl 0x7fa81d026110 <col:1, col:8> col:8 implicit struct __align_type
|   | | |-VarDecl 0x7fa81d0261b8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
|   | | | `-DependentScopeDeclRefExpr 0x7fa81d0262e8 <col:33, col:52> '<dependent type>' lvalue
|   | | `-TypedefDecl 0x7fa81d026338 <line:1598:5, col:17> col:17 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81d025dc0 '_Tp' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81d025d78 '_Tp'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d0268b0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'unsigned char'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d0272c0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'unsigned short'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d027490 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'unsigned int'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d027660 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d027830 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'unsigned long long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d027a00 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'double'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d027bd0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'long double'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d027d98 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'struct std::__1::__struct_double'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d027f58 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d02a600 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
|   |   `-TemplateArgument type 'int *'
|   |-CXXRecordDecl 0x7fa81d0263b0 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
|   | |-CXXRecordDecl 0x7fa81d0264d8 <col:1, col:8> col:8 implicit struct __struct_double
|   | `-FieldDecl 0x7fa81d026588 <col:25, col:37> col:37 __lx 'long double'
|   |-CXXRecordDecl 0x7fa81d0265f0 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
|   | |-CXXRecordDecl 0x7fa81d026718 <col:1, col:8> col:8 implicit struct __struct_double4
|   | `-FieldDecl 0x7fa81d026830 <col:26, col:39> col:33 __lx 'double [4]'
|   |-TypedefDecl 0x7fa81d02bc80 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
|   | `-TemplateSpecializationType 0x7fa81d02bb90 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
|   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
|   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
|   |   `-RecordType 0x7fa81d02bb70 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
|   |     `-ClassTemplateSpecialization 0x7fa81d02ba70 '__type_list'
|   |-ClassTemplateDecl 0x7fa81d02be68 <line:1618:1, col:44> col:44 __find_pod
|   | |-TemplateTypeParmDecl 0x7fa81d02bcd8 <col:11, col:17> col:17 class depth 0 index 0 _TL
|   | |-NonTypeTemplateParmDecl 0x7fa81d02bd58 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
|   | `-CXXRecordDecl 0x7fa81d02bdd0 <col:37, col:44> col:44 struct __find_pod
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d02c490 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d02c330 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02c148 '_Align' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl 0x7fa81d02c0c8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-NonTypeTemplateParmDecl 0x7fa81d02c148 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | |-CXXRecordDecl 0x7fa81d02c790 <line:1621:1, col:8> col:8 implicit struct __find_pod
|   | `-TypedefDecl 0x7fa81d02cbd0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
|   |   `-DependentNameType 0x7fa81d02cb60 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d02d030 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d02ced0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02cd38 '_Align' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl 0x7fa81d02cc48 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl 0x7fa81d02ccb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d02cd38 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
|   | |-CXXRecordDecl 0x7fa81d02d300 <line:1631:1, col:8> col:8 implicit struct __find_pod
|   | `-TypedefDecl 0x7fa81d02d950 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
|   |   `-DependentNameType 0x7fa81d02d8e0 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d02db58 <line:1640:1, col:42> col:42 __find_max_align
|   | |-TemplateTypeParmDecl 0x7fa81d02d9c8 <col:11, col:17> col:17 class depth 0 index 0 _TL
|   | |-NonTypeTemplateParmDecl 0x7fa81d02da48 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
|   | `-CXXRecordDecl 0x7fa81d02dac0 <col:35, col:42> col:42 struct __find_max_align
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d02e120 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
|   | |-public 'integral_constant<size_t, _Hp::value>'
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d02dfc0 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02de38 '_Len' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl 0x7fa81d02ddb8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-NonTypeTemplateParmDecl 0x7fa81d02de38 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
|   | `-CXXRecordDecl 0x7fa81d02e618 <line:1643:1, col:8> col:8 implicit struct __find_max_align
|   |-ClassTemplateDecl 0x7fa81d02e8c8 <line:1645:1, line:1653:1> line:1646:8 __select_align
|   | |-NonTypeTemplateParmDecl 0x7fa81d02e6e0 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl 0x7fa81d02e748 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
|   | |-NonTypeTemplateParmDecl 0x7fa81d02e7b0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
|   | `-CXXRecordDecl 0x7fa81d02e830 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
|   |   |-CXXRecordDecl 0x7fa81d02ec20 <col:1, col:8> col:8 implicit struct __select_align
|   |   |-AccessSpecDecl 0x7fa81d02ecb8 <line:1648:1, col:8> col:1 private
|   |   |-VarDecl 0x7fa81d02ecf0 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
|   |   | `-ConditionalOperator 0x7fa81d02ee18 <col:33, col:51> 'size_t':'unsigned long'
|   |   |   |-BinaryOperator 0x7fa81d02eda0 <col:33, col:39> '_Bool' '<'
|   |   |   | |-DeclRefExpr 0x7fa81d02ed50 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e7b0 '_A2' 'size_t':'unsigned long'
|   |   |   | `-DeclRefExpr 0x7fa81d02ed78 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e748 '_A1' 'size_t':'unsigned long'
|   |   |   |-DeclRefExpr 0x7fa81d02edc8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e7b0 '_A2' 'size_t':'unsigned long'
|   |   |   `-DeclRefExpr 0x7fa81d02edf0 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e748 '_A1' 'size_t':'unsigned long'
|   |   |-VarDecl 0x7fa81d02ee58 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
|   |   | `-ConditionalOperator 0x7fa81d02ef80 <col:33, col:51> 'size_t':'unsigned long'
|   |   |   |-BinaryOperator 0x7fa81d02ef08 <col:33, col:39> '_Bool' '<'
|   |   |   | |-DeclRefExpr 0x7fa81d02eeb8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e748 '_A1' 'size_t':'unsigned long'
|   |   |   | `-DeclRefExpr 0x7fa81d02eee0 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e7b0 '_A2' 'size_t':'unsigned long'
|   |   |   |-DeclRefExpr 0x7fa81d02ef30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e7b0 '_A2' 'size_t':'unsigned long'
|   |   |   `-DeclRefExpr 0x7fa81d02ef58 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e748 '_A1' 'size_t':'unsigned long'
|   |   |-AccessSpecDecl 0x7fa81d02efb0 <line:1651:1, col:7> col:1 public
|   |   `-VarDecl 0x7fa81d02efe8 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
|   |     `-ImplicitCastExpr 0x7fa81d02f158 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
|   |       `-ConditionalOperator 0x7fa81d02f128 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
|   |         |-BinaryOperator 0x7fa81d02f0b0 <col:33, col:40> '_Bool' '<'
|   |         | |-DeclRefExpr 0x7fa81d02f048 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02e6e0 '_Len' 'size_t':'unsigned long'
|   |         | `-ImplicitCastExpr 0x7fa81d02f098 <col:40> 'size_t':'unsigned long' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x7fa81d02f070 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fa81d02ee58 '__max' 'const size_t':'const unsigned long'
|   |         |-DeclRefExpr 0x7fa81d02f0d8 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fa81d02ecf0 '__min' 'const size_t':'const unsigned long'
|   |         `-DeclRefExpr 0x7fa81d02f100 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fa81d02ee58 '__max' 'const size_t':'const unsigned long'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d02fa00 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
|   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d02f410 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d02f278 '_Len' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl 0x7fa81d02f190 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl 0x7fa81d02f1f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d02f278 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
|   | `-CXXRecordDecl 0x7fa81d030318 <line:1656:1, col:8> col:8 implicit struct __find_max_align
|   |-ClassTemplateDecl 0x7fa81d030778 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
|   | |-NonTypeTemplateParmDecl 0x7fa81d0303e0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl 0x7fa81d030638 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d0305e8 <col:40, col:77> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d0306e0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
|   |   |-TypeVisibilityAttr 0x7fa81d030a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81d030ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
|   |   |-TypedefDecl 0x7fa81d030d60 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
|   |   | `-DependentNameType 0x7fa81d030cf0 'typename __find_pod<__all_types, _Align>::type' dependent
|   |   |-StaticAssertDecl 0x7fa81d031000 <line:1663:5, col:48> col:5
|   |   | |-UnaryOperator 0x7fa81d030f38 <col:19, col:39> '<dependent type>' prefix '!'
|   |   | | `-DependentScopeDeclRefExpr 0x7fa81d030ef8 <col:20, col:39> '<dependent type>' lvalue
|   |   | `-StringLiteral 0x7fa81d030fd8 <col:46> 'const char [1]' lvalue ""
|   |   `-CXXRecordDecl 0x7fa81d031038 <line:1664:5, line:1668:5> line:1664:11 union type definition
|   |     |-CXXRecordDecl 0x7fa81d031158 <col:5, col:11> col:11 implicit union type
|   |     |-FieldDecl 0x7fa81d031200 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
|   |     `-FieldDecl 0x7fa81d031448 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
|   |-TypeAliasTemplateDecl 0x7fa81d031950 <line:1672:1, line:1673:71> col:5 aligned_storage_t
|   | |-NonTypeTemplateParmDecl 0x7fa81d0314e0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-NonTypeTemplateParmDecl 0x7fa81d0316a8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d031658 <col:40, col:77> '<dependent type>' lvalue
|   | `-TypeAliasDecl 0x7fa81d0318f0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
|   |   `-DependentNameType 0x7fa81d031880 'typename aligned_storage<_Len, _Align>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d033430 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d0332a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d033200 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-NonTypeTemplateParmDecl 0x7fa81d033200 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d033598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d033700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d0337b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d0338d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d033798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
|   |   |-CXXRecordDecl 0x7fa81d033928 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d033bf8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d033ec0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d033d30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d033c90 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 2
|   | |-NonTypeTemplateParmDecl 0x7fa81d033c90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d034028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d034200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d0342b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d0343d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d034298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
|   |   |-CXXRecordDecl 0x7fa81d034428 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d0346f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0349c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d034830 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d034790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 4
|   | |-NonTypeTemplateParmDecl 0x7fa81d034790 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d034b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d034c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d034d48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d034e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d034d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
|   |   |-CXXRecordDecl 0x7fa81d034eb8 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d035188 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d035460 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d0352d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d035230 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 8
|   | |-NonTypeTemplateParmDecl 0x7fa81d035230 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d0355c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d035730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d0357e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d035908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d0357c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
|   |   |-CXXRecordDecl 0x7fa81d035958 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d035c28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d035ef0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d035d60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d035cc0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 16
|   | |-NonTypeTemplateParmDecl 0x7fa81d035cc0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d036058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d036200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d0362b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d0363d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d036298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
|   |   |-CXXRecordDecl 0x7fa81d036428 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d0366f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0369c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d036830 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d036790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 32
|   | |-NonTypeTemplateParmDecl 0x7fa81d036790 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d036b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d036c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d036d48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d036e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d036d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
|   |   |-CXXRecordDecl 0x7fa81d036eb8 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d037188 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d037460 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d0372d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d037230 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 64
|   | |-NonTypeTemplateParmDecl 0x7fa81d037230 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d0375c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d037730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d0377e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d037908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d0377c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
|   |   |-CXXRecordDecl 0x7fa81d037958 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d037c28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d037ef0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d037d60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d037cc0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 128
|   | |-NonTypeTemplateParmDecl 0x7fa81d037cc0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d038058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d038200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d0382b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d0383d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d038298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
|   |   |-CXXRecordDecl 0x7fa81d038428 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d0386f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0389c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d038830 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d038790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 256
|   | |-NonTypeTemplateParmDecl 0x7fa81d038790 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d038b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d038c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d038d48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d038e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d038d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
|   |   |-CXXRecordDecl 0x7fa81d038eb8 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d039188 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d039460 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d0392d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d039230 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 512
|   | |-NonTypeTemplateParmDecl 0x7fa81d039230 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d0395c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d039730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d0397e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d039908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d0397c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
|   |   |-CXXRecordDecl 0x7fa81d039958 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d039c28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d039ef0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d039d60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d039cc0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1024
|   | |-NonTypeTemplateParmDecl 0x7fa81d039cc0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d03a058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d03a200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d03a2b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d03a3d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d03a298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
|   |   |-CXXRecordDecl 0x7fa81d03a428 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d03a6f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d03a9c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d03a830 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03a790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 2048
|   | |-NonTypeTemplateParmDecl 0x7fa81d03a790 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d03ab28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d03ac90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d03ad48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d03ae68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d03ad28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
|   |   |-CXXRecordDecl 0x7fa81d03aeb8 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d03b188 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d03b460 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d03b2d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03b230 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 4096
|   | |-NonTypeTemplateParmDecl 0x7fa81d03b230 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d03b5c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d03b730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d03b7e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d03b908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d03b7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
|   |   |-CXXRecordDecl 0x7fa81d03b958 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d03bc28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d03bef0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d03bd60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03bcc0 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 8192
|   | |-NonTypeTemplateParmDecl 0x7fa81d03bcc0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d03c058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d03c200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d03c2b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d03c3d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d03c298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
|   |   |-CXXRecordDecl 0x7fa81d03c428 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d03c6f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d03c9c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d03c830 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03c790 '_Len' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 16384
|   | |-NonTypeTemplateParmDecl 0x7fa81d03c790 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TypeVisibilityAttr 0x7fa81d03cb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d03cc90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
|   | `-CXXRecordDecl 0x7fa81d03cd48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
|   |   |-AlignedAttr 0x7fa81d03ce68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
|   |   | `-IntegerLiteral 0x7fa81d03cd28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
|   |   |-CXXRecordDecl 0x7fa81d03ceb8 <line:1680:5, col:24> col:24 implicit struct type
|   |   `-FieldDecl 0x7fa81d03d188 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
|   |-ClassTemplateDecl 0x7fa81d03d3a8 <line:1711:1, line:1712:8> col:8 __static_max
|   | |-NonTypeTemplateParmDecl 0x7fa81d03d230 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-NonTypeTemplateParmDecl 0x7fa81d03d298 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
|   | `-CXXRecordDecl 0x7fa81d03d310 <line:1712:1, col:8> col:8 struct __static_max
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d03d820 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d03d6f8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03d688 '_I0' 'size_t':'unsigned long'
|   | |-TemplateArgument pack
|   | |-NonTypeTemplateParmDecl 0x7fa81d03d688 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-CXXRecordDecl 0x7fa81d03dab0 <line:1715:1, col:8> col:8 implicit struct __static_max
|   | `-VarDecl 0x7fa81d03db58 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
|   |   `-DeclRefExpr 0x7fa81d03dbb8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03d688 '_I0' 'size_t':'unsigned long'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d03dfc0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d03dd60 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03dc10 '_I0' 'size_t':'unsigned long'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument expr
|   | | | `-DeclRefExpr 0x7fa81d03dd88 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03dc78 '_I1' 'size_t':'unsigned long'
|   | | `-TemplateArgument expr
|   | |   `-PackExpansionExpr 0x7fa81d03ddd8 <col:31, col:34> '<dependent type>'
|   | |     `-DeclRefExpr 0x7fa81d03ddb0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03dce0 '_In' 'size_t':'unsigned long'
|   | |-NonTypeTemplateParmDecl 0x7fa81d03dc10 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
|   | |-NonTypeTemplateParmDecl 0x7fa81d03dc78 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
|   | |-NonTypeTemplateParmDecl 0x7fa81d03dce0 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
|   | |-CXXRecordDecl 0x7fa81d03e2d8 <line:1721:1, col:8> col:8 implicit struct __static_max
|   | `-VarDecl 0x7fa81d03e380 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
|   |   `-ConditionalOperator 0x7fa81d03e8b8 <col:33, line:1724:73> '<dependent type>'
|   |     |-BinaryOperator 0x7fa81d03e430 <line:1723:33, col:40> '_Bool' '>='
|   |     | |-DeclRefExpr 0x7fa81d03e3e0 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03dc10 '_I0' 'size_t':'unsigned long'
|   |     | `-DeclRefExpr 0x7fa81d03e408 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d03dc78 '_I1' 'size_t':'unsigned long'
|   |     |-DependentScopeDeclRefExpr 0x7fa81d03e648 <col:46, col:73> '<dependent type>' lvalue
|   |     `-DependentScopeDeclRefExpr 0x7fa81d03e878 <line:1724:46, col:73> '<dependent type>' lvalue
|   |-ClassTemplateDecl 0x7fa81d03eb38 <line:1727:1, line:1735:1> line:1728:8 aligned_union
|   | |-NonTypeTemplateParmDecl 0x7fa81d03e918 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TemplateTypeParmDecl 0x7fa81d03e970 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
|   | |-TemplateTypeParmDecl 0x7fa81d03e9d8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
|   | `-CXXRecordDecl 0x7fa81d03eaa0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
|   |   |-CXXRecordDecl 0x7fa81d03eed0 <col:1, col:8> col:8 implicit struct aligned_union
|   |   |-VarDecl 0x7fa81d03ef78 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
|   |   | `-DependentScopeDeclRefExpr 0x7fa81d03fc00 <col:43, line:1731:81> '<dependent type>' lvalue
|   |   |-VarDecl 0x7fa81d03fc50 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
|   |   | `-DependentScopeDeclRefExpr 0x7fa81d03ff38 <col:33, line:1733:66> '<dependent type>' lvalue
|   |   `-TypedefDecl 0x7fa81d0401e0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
|   |     `-DependentNameType 0x7fa81d040170 'typename aligned_storage<__len, alignment_value>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d040600 <line:1738:1, col:106> col:41 aligned_union_t
|   | |-NonTypeTemplateParmDecl 0x7fa81d040268 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
|   | |-TemplateTypeParmDecl 0x7fa81d0402c0 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
|   | `-TypeAliasDecl 0x7fa81d0405a0 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
|   |   `-DependentNameType 0x7fa81d040530 'typename aligned_union<_Len, _Types...>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d040768 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
|   | |-TemplateTypeParmDecl 0x7fa81d040650 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d0406d0 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
|   | | |-CXXRecordDecl 0x7fa81d0409e0 <col:1, col:8> col:8 implicit struct __numeric_type
|   | | |-CXXMethodDecl 0x7fa81d040ac8 <line:1746:4, col:26> col:16 __test 'void (...)' static
|   | | |-CXXMethodDecl 0x7fa81d041068 <line:1747:4, col:29> col:17 __test 'float (float)' static
|   | | | `-ParmVarDecl 0x7fa81d040b78 <col:24> col:29 'float'
|   | | |-CXXMethodDecl 0x7fa81d0411e8 <line:1748:4, col:29> col:18 __test 'double (char)' static
|   | | | `-ParmVarDecl 0x7fa81d041118 <col:25> col:29 'char'
|   | | |-CXXMethodDecl 0x7fa81d041368 <line:1749:4, col:28> col:18 __test 'double (int)' static
|   | | | `-ParmVarDecl 0x7fa81d0412a0 <col:25> col:28 'int'
|   | | |-CXXMethodDecl 0x7fa81d0414e8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
|   | | | `-ParmVarDecl 0x7fa81d041420 <col:25> col:33 'unsigned int'
|   | | |-CXXMethodDecl 0x7fa81d041668 <line:1751:4, col:29> col:18 __test 'double (long)' static
|   | | | `-ParmVarDecl 0x7fa81d0415a0 <col:25> col:29 'long'
|   | | |-CXXMethodDecl 0x7fa81d0417e8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
|   | | | `-ParmVarDecl 0x7fa81d041720 <col:25, col:34> col:38 'unsigned long'
|   | | |-CXXMethodDecl 0x7fa81d041968 <line:1753:4, col:34> col:18 __test 'double (long long)' static
|   | | | `-ParmVarDecl 0x7fa81d0418a0 <col:25, col:30> col:34 'long long'
|   | | |-CXXMethodDecl 0x7fa81d041ae8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
|   | | | `-ParmVarDecl 0x7fa81d041a20 <col:25, col:39> col:43 'unsigned long long'
|   | | |-CXXMethodDecl 0x7fa81d041c68 <line:1755:4, col:31> col:18 __test 'double (double)' static
|   | | | `-ParmVarDecl 0x7fa81d041ba0 <col:25> col:31 'double'
|   | | |-CXXMethodDecl 0x7fa81d041de8 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
|   | | | `-ParmVarDecl 0x7fa81d041d20 <col:30, col:35> col:41 'long double'
|   | | |-TypedefDecl 0x7fa81d0420a8 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
|   | | | `-DecltypeType 0x7fa81d042070 'decltype(__test(declval<_Tp>()))' dependent
|   | | |   `-CallExpr 0x7fa81d042000 <col:21, col:42> '<dependent type>'
|   | | |     |-UnresolvedLookupExpr 0x7fa81d041e88 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fa81d041de8 0x7fa81d041c68 0x7fa81d041ae8 0x7fa81d041968 0x7fa81d0417e8 0x7fa81d041668 0x7fa81d0414e8 0x7fa81d041368 0x7fa81d0411e8 0x7fa81d041068 0x7fa81d040ac8
|   | | |     `-CallExpr 0x7fa81d041fd8 <col:28, col:41> '<dependent type>'
|   | | |       `-UnresolvedLookupExpr 0x7fa81d041f40 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fa81d001f80
|   | | `-VarDecl 0x7fa81d042110 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
|   | |   `-UnaryOperator 0x7fa81d042338 <col:30, col:52> '<dependent type>' prefix '!'
|   | |     `-DependentScopeDeclRefExpr 0x7fa81d0422f8 <col:31, col:52> '<dependent type>' lvalue
|   | `-ClassTemplateSpecialization 0x7fa81d042398 '__numeric_type'
|   |-ClassTemplateSpecializationDecl 0x7fa81d042398 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
|   | |-TemplateArgument type 'void'
|   | |-CXXRecordDecl 0x7fa81d0425c0 <col:1, col:8> col:8 implicit struct __numeric_type
|   | `-VarDecl 0x7fa81d042668 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr 0x7fa81d0426c8 <col:30> '_Bool' true
|   |-ClassTemplateDecl 0x7fa81d042e10 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
|   | |-TemplateTypeParmDecl 0x7fa81d042758 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl 0x7fa81d0427d8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
|   | | `-TemplateArgument type 'void'
|   | |-TemplateTypeParmDecl 0x7fa81d042858 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
|   | | `-TemplateArgument type 'void'
|   | |-NonTypeTemplateParmDecl 0x7fa81d042cf0 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81d042cb8 <col:18, line:1773:39> '<dependent type>' '&&'
|   | |     |-BinaryOperator 0x7fa81d042b38 <line:1771:18, line:1772:39> '<dependent type>' '&&'
|   | |     | |-DependentScopeDeclRefExpr 0x7fa81d042998 <line:1771:18, col:39> '<dependent type>' lvalue
|   | |     | `-DependentScopeDeclRefExpr 0x7fa81d042af8 <line:1772:18, col:39> '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr 0x7fa81d042c78 <line:1773:18, col:39> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d042d78 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
|   |   |-CXXRecordDecl 0x7fa81d0435b0 <col:1, col:7> col:7 implicit class __promote_imp
|   |   |-AccessSpecDecl 0x7fa81d043648 <line:1776:1, col:7> col:1 public
|   |   `-VarDecl 0x7fa81d043680 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
|   |     `-CXXBoolLiteralExpr 0x7fa81d0436e0 <col:31> '_Bool' false
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d043ad0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-2'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d043718 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl 0x7fa81d043788 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
|   | |-TemplateTypeParmDecl 0x7fa81d0437f8 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
|   | |-CXXRecordDecl 0x7fa81d043e10 <line:1781:1, col:7> col:7 implicit class __promote_imp
|   | |-AccessSpecDecl 0x7fa81d043ea8 <line:1783:1, col:8> col:1 private
|   | |-TypedefDecl 0x7fa81d0444a0 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
|   | | `-DependentNameType 0x7fa81d044430 'typename __promote_imp<_A1>::type' dependent
|   | |-TypedefDecl 0x7fa81d044a50 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
|   | | `-DependentNameType 0x7fa81d0449e0 'typename __promote_imp<_A2>::type' dependent
|   | |-TypedefDecl 0x7fa81d045000 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
|   | | `-DependentNameType 0x7fa81d044f90 'typename __promote_imp<_A3>::type' dependent
|   | |-AccessSpecDecl 0x7fa81d045058 <line:1787:1, col:7> col:1 public
|   | |-TypedefDecl 0x7fa81d045258 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
|   | | `-DecltypeType 0x7fa81d045220 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
|   | |   `-BinaryOperator 0x7fa81d0451b8 <col:22, col:54> '<dependent type>' '+'
|   | |     |-BinaryOperator 0x7fa81d045138 <col:22, col:42> '<dependent type>' '+'
|   | |     | |-CXXUnresolvedConstructExpr 0x7fa81d0450b0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
|   | |     | `-CXXUnresolvedConstructExpr 0x7fa81d045110 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
|   | |     `-CXXUnresolvedConstructExpr 0x7fa81d045190 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
|   | `-VarDecl 0x7fa81d0452c0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr 0x7fa81d045320 <col:31> '_Bool' true
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0474c0 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d045358 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl 0x7fa81d047200 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
|   | |-CXXRecordDecl 0x7fa81d047800 <line:1793:1, col:7> col:7 implicit class __promote_imp
|   | |-AccessSpecDecl 0x7fa81d047898 <line:1795:1, col:8> col:1 private
|   | |-TypedefDecl 0x7fa81d047cf0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
|   | | `-DependentNameType 0x7fa81d047c80 'typename __promote_imp<_A1>::type' dependent
|   | |-TypedefDecl 0x7fa81d048180 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
|   | | `-DependentNameType 0x7fa81d048110 'typename __promote_imp<_A2>::type' dependent
|   | |-AccessSpecDecl 0x7fa81d0481d8 <line:1798:1, col:7> col:1 public
|   | |-TypedefDecl 0x7fa81d048758 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
|   | | `-DecltypeType 0x7fa81d048720 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
|   | |   `-BinaryOperator 0x7fa81d0486b8 <col:22, col:42> '<dependent type>' '+'
|   | |     |-CXXUnresolvedConstructExpr 0x7fa81d048630 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
|   | |     `-CXXUnresolvedConstructExpr 0x7fa81d048690 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
|   | `-VarDecl 0x7fa81d0487c0 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr 0x7fa81d048820 <col:31> '_Bool' true
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d048b20 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument type 'void'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d048858 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | |-CXXRecordDecl 0x7fa81d048e60 <line:1804:1, col:7> col:7 implicit class __promote_imp
|   | |-AccessSpecDecl 0x7fa81d048ef8 <line:1806:1, col:7> col:1 public
|   | |-TypedefDecl 0x7fa81d049070 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
|   | | `-DependentNameType 0x7fa81d049000 'typename __numeric_type<_A1>::type' dependent
|   | `-VarDecl 0x7fa81d0490d8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
|   |   `-CXXBoolLiteralExpr 0x7fa81d049138 <col:31> '_Bool' true
|   |-ClassTemplateDecl 0x7fa81d049398 <line:1811:1, line:1812:56> col:7 __promote
|   | |-TemplateTypeParmDecl 0x7fa81d049170 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | |-TemplateTypeParmDecl 0x7fa81d0491e8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
|   | | `-TemplateArgument type 'void'
|   | |-TemplateTypeParmDecl 0x7fa81d049268 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl 0x7fa81d049300 <line:1812:1, col:56> col:7 class __promote definition
|   |   |-public '__promote_imp<_A1, _A2, _A3>'
|   |   `-CXXRecordDecl 0x7fa81d049fe8 <col:1, col:7> col:7 implicit class __promote
|   |-TypedefDecl 0x7fa81d04be20 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
|   | `-TemplateSpecializationType 0x7fa81d04bd30 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
|   |   |-TemplateArgument type 'signed char'
|   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
|   |   `-RecordType 0x7fa81d04bd10 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
|   |     `-ClassTemplateSpecialization 0x7fa81d04bc10 '__type_list'
|   |-TypedefDecl 0x7fa81d04cc10 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
|   | `-TemplateSpecializationType 0x7fa81d04cb20 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
|   |   |-TemplateArgument type 'unsigned char'
|   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
|   |   `-RecordType 0x7fa81d04cb00 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
|   |     `-ClassTemplateSpecialization 0x7fa81d04ca00 '__type_list'
|   |-ClassTemplateDecl 0x7fa81d04cfb0 <line:1846:1, col:100> col:100 __find_first
|   | |-TemplateTypeParmDecl 0x7fa81d04cc68 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
|   | |-NonTypeTemplateParmDecl 0x7fa81d04cce8 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
|   | |-NonTypeTemplateParmDecl 0x7fa81d04ce98 <col:42, col:90> col:47 '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81d04ce60 <col:49, col:90> '_Bool' '<='
|   | |     |-DeclRefExpr 0x7fa81d04cd40 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d04cce8 '_Size' 'size_t':'unsigned long'
|   | |     `-UnaryExprOrTypeTraitExpr 0x7fa81d04ce40 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
|   | `-CXXRecordDecl 0x7fa81d04cf18 <col:93, col:100> col:100 struct __find_first
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d04d6d8 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d04d500 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d04d368 '_Size' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d04d278 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl 0x7fa81d04d2e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d04d368 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | |-CXXRecordDecl 0x7fa81d04da68 <line:1849:1, col:8> col:8 implicit struct __find_first
|   | `-TypedefDecl 0x7fa81d04db10 <line:1851:5, col:17> col:17 type '_Hp'
|   |   `-TemplateTypeParmType 0x7fa81d04d2c0 '_Hp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d04d278 '_Hp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d04dfe8 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
|   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d04de10 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d04dc78 '_Size' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d04db88 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl 0x7fa81d04dbf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d04dc78 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | |-CXXRecordDecl 0x7fa81d04e320 <line:1855:1, col:8> col:8 implicit struct __find_first
|   | `-TypedefDecl 0x7fa81d04e770 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
|   |   `-DependentNameType 0x7fa81d04e700 'typename __find_first<_Tp, _Size>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d04f548 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
|   | |-TemplateTypeParmDecl 0x7fa81d04e7e8 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d04e858 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl 0x7fa81d04f158 <col:33, col:88> col:38 '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d04f108 <col:40, col:88> '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl 0x7fa81d04f428 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d04f3d8 <col:37, col:88> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d04f4b0 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
|   |   |-CXXRecordDecl 0x7fa81d04f890 <col:1, col:8> col:8 implicit struct __apply_cv
|   |   `-TypedefDecl 0x7fa81d04f938 <line:1864:5, col:17> col:17 type '_Up'
|   |     `-TemplateTypeParmType 0x7fa81d04e8a0 '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm 0x7fa81d04e858 '_Up'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d04fcf0 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d04f9b0 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d04fa18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81d050068 <line:1868:1, col:8> col:8 implicit struct __apply_cv
|   | `-TypedefDecl 0x7fa81d050110 <line:1870:5, col:23> col:23 type 'const _Up'
|   |   `-QualType 0x7fa81d04fa61 'const _Up' const
|   |     `-TemplateTypeParmType 0x7fa81d04fa60 '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm 0x7fa81d04fa18 '_Up'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0504d0 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d050188 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d0501f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81d050820 <line:1874:1, col:8> col:8 implicit struct __apply_cv
|   | `-TypedefDecl 0x7fa81d0508c8 <line:1876:5, col:26> col:26 type 'volatile _Up'
|   |   `-QualType 0x7fa81d050244 'volatile _Up' volatile
|   |     `-TemplateTypeParmType 0x7fa81d050240 '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm 0x7fa81d0501f8 '_Up'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d050c80 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d050940 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d0509a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81d051000 <line:1880:1, col:8> col:8 implicit struct __apply_cv
|   | `-TypedefDecl 0x7fa81d0510a8 <line:1882:5, col:32> col:32 type 'const volatile _Up'
|   |   `-QualType 0x7fa81d0509f5 'const volatile _Up' const volatile
|   |     `-TemplateTypeParmType 0x7fa81d0509f0 '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm 0x7fa81d0509a8 '_Up'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d051490 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d051120 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d051188 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81d0517e0 <line:1886:1, col:8> col:8 implicit struct __apply_cv
|   | `-TypedefDecl 0x7fa81d0518e8 <line:1888:5, col:18> col:18 type '_Up &'
|   |   `-LValueReferenceType 0x7fa81d0518b0 '_Up &' dependent
|   |     `-TemplateTypeParmType 0x7fa81d0511d0 '_Up' dependent depth 0 index 1
|   |       `-TemplateTypeParm 0x7fa81d051188 '_Up'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d051cd0 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d051960 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d0519c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81d052068 <line:1892:1, col:8> col:8 implicit struct __apply_cv
|   | `-TypedefDecl 0x7fa81d052168 <line:1894:5, col:24> col:24 type 'const _Up &'
|   |   `-LValueReferenceType 0x7fa81d052130 'const _Up &' dependent
|   |     `-QualType 0x7fa81d051a11 'const _Up' const
|   |       `-TemplateTypeParmType 0x7fa81d051a10 '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm 0x7fa81d0519c8 '_Up'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d052550 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d0521e0 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d052248 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81d0528a0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
|   | `-TypedefDecl 0x7fa81d0529a8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
|   |   `-LValueReferenceType 0x7fa81d052970 'volatile _Up &' dependent
|   |     `-QualType 0x7fa81d052294 'volatile _Up' volatile
|   |       `-TemplateTypeParmType 0x7fa81d052290 '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm 0x7fa81d052248 '_Up'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d052d90 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d052a20 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d052a88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81d0530f0 <line:1904:1, col:8> col:8 implicit struct __apply_cv
|   | `-TypedefDecl 0x7fa81d0531f8 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
|   |   `-LValueReferenceType 0x7fa81d0531c0 'const volatile _Up &' dependent
|   |     `-QualType 0x7fa81d052ad5 'const volatile _Up' const volatile
|   |       `-TemplateTypeParmType 0x7fa81d052ad0 '_Up' dependent depth 0 index 1
|   |         `-TemplateTypeParm 0x7fa81d052a88 '_Up'
|   |-ClassTemplateDecl 0x7fa81d053640 <line:1909:1, line:1910:23> col:8 __make_signed
|   | |-TemplateTypeParmDecl 0x7fa81d053270 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d053530 <col:22, col:70> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81d0534f8 <col:29, col:70> '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr 0x7fa81d0533a8 <col:29, col:47> '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr 0x7fa81d0534b8 <col:56, col:70> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x7fa81d0535a8 <line:1910:1, col:23> col:8 struct __make_signed definition
|   | | `-CXXRecordDecl 0x7fa81d053900 <col:1, col:8> col:8 implicit struct __make_signed
|   | |-ClassTemplateSpecialization 0x7fa81c0a41b0 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0a4518 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0a48f8 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0cf368 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0cf748 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0cfb28 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0cff08 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0d0368 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0d0748 '__make_signed'
|   | |-ClassTemplateSpecialization 0x7fa81c0d0b20 '__make_signed'
|   | `-ClassTemplateSpecialization 0x7fa81c0d0ee8 '__make_signed'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d053ba0 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d0539b8 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d053e30 <line:1913:1, col:8> col:8 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0a4100 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
|   |   `-DependentNameType 0x7fa81c0a4090 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
|   |-ClassTemplateSpecializationDecl 0x7fa81c0a41b0 <line:1918:1, col:61> col:20 struct __make_signed definition
|   | |-TemplateArgument type '_Bool'
|   | |-TemplateArgument integral 1
|   | `-CXXRecordDecl 0x7fa81c0a4420 <col:13, col:20> col:20 implicit struct __make_signed
|   |-ClassTemplateSpecializationDecl 0x7fa81c0a4518 <line:1919:1, col:84> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0a4790 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0a4840 <col:61, col:79> col:79 type 'short'
|   |   `-BuiltinType 0x7fa81c0327a0 'short'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0a48f8 <line:1920:1, col:84> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'unsigned short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0cf200 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0cf2b0 <col:61, col:79> col:79 type 'short'
|   |   `-BuiltinType 0x7fa81c0327a0 'short'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cf368 <line:1921:1, col:84> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0cf5e0 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0cf690 <col:61, col:79> col:79 type 'int'
|   |   `-BuiltinType 0x7fa81c0327c0 'int'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cf748 <line:1922:1, col:84> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'unsigned int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0cf9c0 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0cfa70 <col:61, col:79> col:79 type 'int'
|   |   `-BuiltinType 0x7fa81c0327c0 'int'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cfb28 <line:1923:1, col:84> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0cfda0 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0cfe50 <col:61, col:79> col:79 type 'long'
|   |   `-BuiltinType 0x7fa81c0327e0 'long'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0cff08 <line:1924:1, col:84> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0d0200 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0d02b0 <col:61, col:79> col:79 type 'long'
|   |   `-BuiltinType 0x7fa81c0327e0 'long'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0d0368 <line:1925:1, col:84> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0d05e0 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0d0690 <col:61, col:79> col:79 type 'long long'
|   |   `-BuiltinType 0x7fa81c032800 'long long'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0d0748 <line:1926:1, col:84> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'unsigned long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0d09c0 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0d0a70 <col:61, col:79> col:79 type 'long long'
|   |   `-BuiltinType 0x7fa81c032800 'long long'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0d0b20 <line:1928:1, col:85> col:20 struct __make_signed definition
|   | |-TemplateArgument type '__int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0d0d90 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0d0e38 <col:61, col:80> col:80 type '__int128_t':'__int128'
|   |   `-TypedefType 0x7fa81c0cb540 '__int128_t' sugar
|   |     |-Typedef 0x7fa81c032c60 '__int128_t'
|   |     `-BuiltinType 0x7fa81c032940 '__int128'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0d0ee8 <line:1929:1, col:85> col:20 struct __make_signed definition
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0d1160 <col:13, col:20> col:20 implicit struct __make_signed
|   | `-TypedefDecl 0x7fa81c0e3810 <col:61, col:80> col:80 type '__int128_t':'__int128'
|   |   `-TypedefType 0x7fa81c0cb540 '__int128_t' sugar
|   |     |-Typedef 0x7fa81c032c60 '__int128_t'
|   |     `-BuiltinType 0x7fa81c032940 '__int128'
|   |-ClassTemplateDecl 0x7fa81c0e39d8 <line:1932:1, line:1936:1> line:1933:29 make_signed
|   | |-TemplateTypeParmDecl 0x7fa81c0e3888 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0e3940 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
|   |   |-TypeVisibilityAttr 0x7fa81c0e3c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81c0e3c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
|   |   `-TypedefDecl 0x7fa81c0e4980 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
|   |     `-DependentNameType 0x7fa81c0e4910 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81c0e4c40 <line:1939:1, col:71> col:22 make_signed_t
|   | |-TemplateTypeParmDecl 0x7fa81c0e49f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c0e4be0 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c0e4b70 'typename make_signed<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c0e5060 <line:1942:1, line:1943:25> col:8 __make_unsigned
|   | |-TemplateTypeParmDecl 0x7fa81c0e4c90 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c0e4f50 <col:22, col:70> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81c0e4f18 <col:29, col:70> '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr 0x7fa81c0e4dc8 <col:29, col:47> '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr 0x7fa81c0e4ed8 <col:56, col:70> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x7fa81c0e4fc8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
|   | | `-CXXRecordDecl 0x7fa81c0e5320 <col:1, col:8> col:8 implicit struct __make_unsigned
|   | |-ClassTemplateSpecialization 0x7fa81c0e5fa0 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e6308 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e66e8 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e6ad8 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e6eb8 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e7298 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e7678 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e7a88 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e7e68 '__make_unsigned'
|   | |-ClassTemplateSpecialization 0x7fa81c0e8240 '__make_unsigned'
|   | `-ClassTemplateSpecialization 0x7fa81c0e8608 '__make_unsigned'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0e55c0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81c0e53d8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c0e5868 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e5ef0 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
|   |   `-DependentNameType 0x7fa81c0e5e80 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e5fa0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type '_Bool'
|   | |-TemplateArgument integral 1
|   | `-CXXRecordDecl 0x7fa81c0e6210 <col:13, col:20> col:20 implicit struct __make_unsigned
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e6308 <line:1952:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e6580 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e6630 <col:63, col:90> col:90 type 'unsigned short'
|   |   `-BuiltinType 0x7fa81c032840 'unsigned short'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e66e8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned short'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e6970 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e6a20 <col:63, col:90> col:90 type 'unsigned short'
|   |   `-BuiltinType 0x7fa81c032840 'unsigned short'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e6ad8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e6d50 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e6e00 <col:63, col:90> col:90 type 'unsigned int'
|   |   `-BuiltinType 0x7fa81c032860 'unsigned int'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e6eb8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned int'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e7130 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e71e0 <col:63, col:90> col:90 type 'unsigned int'
|   |   `-BuiltinType 0x7fa81c032860 'unsigned int'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e7298 <line:1956:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e7510 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e75c0 <col:63, col:90> col:90 type 'unsigned long'
|   |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e7678 <line:1957:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e7920 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e79d0 <col:63, col:90> col:90 type 'unsigned long'
|   |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e7a88 <line:1958:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e7d00 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e7db0 <col:63, col:90> col:90 type 'unsigned long long'
|   |   `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e7e68 <line:1959:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned long long'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e80e0 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e8190 <col:63, col:90> col:90 type 'unsigned long long'
|   |   `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e8240 <line:1961:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type '__int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e84b0 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e8558 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
|   |   `-TypedefType 0x7fa81c0cb8b0 '__uint128_t' sugar
|   |     |-Typedef 0x7fa81c032cd0 '__uint128_t'
|   |     `-BuiltinType 0x7fa81c032960 'unsigned __int128'
|   |-ClassTemplateSpecializationDecl 0x7fa81c0e8608 <line:1962:1, col:95> col:20 struct __make_unsigned definition
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81c0e88c0 <col:13, col:20> col:20 implicit struct __make_unsigned
|   | `-TypedefDecl 0x7fa81c0e8968 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
|   |   `-TypedefType 0x7fa81c0cb8b0 '__uint128_t' sugar
|   |     |-Typedef 0x7fa81c032cd0 '__uint128_t'
|   |     `-BuiltinType 0x7fa81c032960 'unsigned __int128'
|   |-ClassTemplateDecl 0x7fa81c0e8b28 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
|   | |-TemplateTypeParmDecl 0x7fa81c0e89e0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c0e8a90 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
|   |   |-TypeVisibilityAttr 0x7fa81c0e8da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81c0e8de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
|   |   `-TypedefDecl 0x7fa81c0e9980 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
|   |     `-DependentNameType 0x7fa81c0e9910 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81c0e9c40 <line:1972:1, col:75> col:22 make_unsigned_t
|   | |-TemplateTypeParmDecl 0x7fa81c0e99f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81c0e9be0 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
|   |   `-DependentNameType 0x7fa81c0e9b70 'typename make_unsigned<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c0e9dd8 <line:2010:1, line:2011:42> col:29 common_type
|   | |-TemplateTypeParmDecl 0x7fa81c0e9c90 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl 0x7fa81c0e9d40 <line:2011:1, col:42> col:29 struct common_type definition
|   |   |-TypeVisibilityAttr 0x7fa81c0ea0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81c0ea0f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0ea378 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
|   | |-public 'common_type<_Tp, _Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81c0ea1b0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c0ea4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0ea800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
|   |-ClassTemplateDecl 0x7fa81c0eaad8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
|   | |-TemplateTypeParmDecl 0x7fa81c0ea8b8 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0ea928 <col:22, col:28> col:28 class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0x7fa81c0ea9a8 <col:33, col:41> col:33 class depth 0 index 2
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl 0x7fa81c0eaa40 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
|   |   `-CXXRecordDecl 0x7fa81c0eadb0 <col:1, col:8> col:8 implicit struct __common_type2_imp
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0eb5a8 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
|   | |-TemplateTypeParmDecl 0x7fa81c0eae68 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0eaed8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81c0eccd0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
|   | `-TypedefDecl 0x7fa81c0ed190 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
|   |   `-DependentNameType 0x7fa81c0ed120 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81c0ee0a0 <line:2035:1, line:2043:6> line:2038:1 __common_type2
|   | |-TemplateTypeParmDecl 0x7fa81c0ed208 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0ed278 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0x7fa81c0ed410 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
|   | | `-TemplateArgument type 'typename decay<_Tp>::type'
|   | |-TemplateTypeParmDecl 0x7fa81c0ed630 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
|   | | `-TemplateArgument type 'typename decay<_Up>::type'
|   | `-TypeAliasDecl 0x7fa81c0ee040 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
|   |   `-DependentNameType 0x7fa81c0edfd0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0ee3a8 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
|   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x7fa81c0ee0f0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0ee158 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-TypeVisibilityAttr 0x7fa81c0ee558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0f53e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
|   |-ClassTemplateDecl 0x7fa81c0f55b8 <line:2051:1, col:31> col:31 __common_types
|   | |-TemplateTypeParmDecl 0x7fa81c0f5498 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
|   | `-CXXRecordDecl 0x7fa81c0f5520 <col:24, col:31> col:31 struct __common_types
|   |-ClassTemplateDecl 0x7fa81c0f59d0 <line:2053:1, line:2054:28> col:8 __common_type_impl
|   | |-TemplateTypeParmDecl 0x7fa81c0f5828 <line:2053:11> col:11 class depth 0 index 0
|   | |-TemplateTypeParmDecl 0x7fa81c0f58a8 <col:18, col:26> col:18 class depth 0 index 1
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl 0x7fa81c0f5938 <line:2054:1, col:28> col:8 struct __common_type_impl definition
|   |   `-CXXRecordDecl 0x7fa81c0f5c70 <col:1, col:8> col:8 implicit struct __common_type_impl
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0f64c0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
|   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
|   | |-TemplateTypeParmDecl 0x7fa81c0f5d28 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0f5d98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-CXXRecordDecl 0x7fa81c0f6868 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
|   | `-TypedefDecl 0x7fa81c0f6ac0 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
|   |   `-DependentNameType 0x7fa81c0f6a50 'typename common_type<_Tp, _Up>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0f7340 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
|   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
|   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
|   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
|   | |-TemplateTypeParmDecl 0x7fa81c0f6b38 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0f6ba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0x7fa81c0f6c18 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
|   | `-CXXRecordDecl 0x7fa81c0f7b28 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c0f7fb8 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
|   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl 0x7fa81c0f7be0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c0f7c48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0x7fa81c0f7cb8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
|   | |-TypeVisibilityAttr 0x7fa81c0f81a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81c0f8658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
|   |-TypeAliasTemplateDecl 0x7fa81c1009d0 <line:2078:1, col:77> col:25 common_type_t
|   | |-TemplateTypeParmDecl 0x7fa81c0f8710 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
|   | `-TypeAliasDecl 0x7fa81c100970 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
|   |   `-DependentNameType 0x7fa81c100900 'typename common_type<_Tp...>::type' dependent
|   |-ClassTemplateDecl 0x7fa81c100bb0 <line:2085:1, col:74> col:41 __select_2nd
|   | |-TemplateTypeParmDecl 0x7fa81c100a20 <col:10> col:10 typename depth 0 index 0
|   | |-TemplateTypeParmDecl 0x7fa81c100a88 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
|   | |-CXXRecordDecl 0x7fa81c100b18 <col:34, col:74> col:41 struct __select_2nd definition
|   | | |-CXXRecordDecl 0x7fa81c100e50 <col:34, col:41> col:41 implicit struct __select_2nd
|   | | `-TypedefDecl 0x7fa81c100ef8 <col:56, col:68> col:68 type '_Tp'
|   | |   `-TemplateTypeParmType 0x7fa81c100ad0 '_Tp' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c100a88 '_Tp'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1d22c8 <col:1, col:74> col:41 struct __select_2nd definition
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'struct std::__1::integral_constant<_Bool, true>'
|   |   |-CXXRecordDecl 0x7fa81d1d2528 prev 0x7fa81d1d22c8 <col:34, col:41> col:41 implicit struct __select_2nd
|   |   `-TypedefDecl 0x7fa81d1d25f8 <col:56, col:68> col:68 referenced type 'struct std::__1::integral_constant<_Bool, true>':'struct std::__1::integral_constant<_Bool, true>'
|   |     `-SubstTemplateTypeParmType 0x7fa81d1d25c0 'struct std::__1::integral_constant<_Bool, true>' sugar
|   |       |-TemplateTypeParmType 0x7fa81c100ad0 '_Tp' dependent depth 0 index 1
|   |       | `-TemplateTypeParm 0x7fa81c100a88 '_Tp'
|   |       `-RecordType 0x7fa81c0af100 'struct std::__1::integral_constant<_Bool, true>'
|   |         `-ClassTemplateSpecialization 0x7fa81c0af000 'integral_constant'
|   |-FunctionTemplateDecl 0x7fa81c1016e8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
|   | |-TemplateTypeParmDecl 0x7fa81c100f70 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c100fd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | |-FunctionDecl 0x7fa81c101650 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
|   | | `-ParmVarDecl 0x7fa81c101538 <col:22> col:25 'int'
|   | |-FunctionDecl 0x7fa81d1d34f0 <line:2088:1, line:2089:25> col:1 referenced __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<unsigned long &>() = std::__1::declval<const unsigned long &>())), true_type>::type (int)'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-ParmVarDecl 0x7fa81d1d33e0 <col:22> col:25 'int'
|   | `-FunctionDecl 0x7fa81d1d90c0 <line:2088:1, line:2089:25> col:1 referenced __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<unsigned long &>() = std::__1::declval<unsigned long &&>())), true_type>::type (int)'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-ParmVarDecl 0x7fa81d1d8ff0 <col:22> col:25 'int'
|   |-FunctionTemplateDecl 0x7fa81c101958 <line:2091:1, line:2092:36> col:12 __is_assignable_test
|   | |-TemplateTypeParmDecl 0x7fa81c101740 <line:2091:11> col:11 class depth 0 index 0
|   | |-TemplateTypeParmDecl 0x7fa81c1017a8 <col:18> col:18 class depth 0 index 1
|   | |-FunctionDecl 0x7fa81c1018c0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
|   | |-FunctionDecl 0x7fa81d1d3708 <col:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | `-TemplateArgument type 'const unsigned long &'
|   | `-FunctionDecl 0x7fa81d1d9250 <col:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   `-TemplateArgument type 'unsigned long &&'
|   |-ClassTemplateDecl 0x7fa81c101e48 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
|   | |-TemplateTypeParmDecl 0x7fa81c1019a8 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c101a18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | |-NonTypeTemplateParmDecl 0x7fa81c101d30 <col:34, col:79> col:39 '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81c101cf8 <col:41, col:79> '<dependent type>' '||'
|   | |     |-DependentScopeDeclRefExpr 0x7fa81c101b58 <col:41, col:55> '<dependent type>' lvalue
|   | |     `-DependentScopeDeclRefExpr 0x7fa81c101cb8 <col:64, col:79> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x7fa81c101db0 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
|   | | |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
|   | | `-CXXRecordDecl 0x7fa81c1023b8 <col:1, col:8> col:8 implicit struct __is_assignable_imp
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cfe40 <line:2095:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
|   | | |-public 'decltype((std::__1::__is_assignable_test<unsigned long &, const unsigned long &>(0)))':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | |-TemplateArgument integral 0
|   | | `-CXXRecordDecl 0x7fa81d1d3a38 prev 0x7fa81d1cfe40 <col:1, col:8> col:8 implicit struct __is_assignable_imp
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1d68d0 <line:2095:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
|   |   |-public 'decltype((std::__1::__is_assignable_test<unsigned long &, unsigned long &&>(0)))':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   |-TemplateArgument integral 0
|   |   `-CXXRecordDecl 0x7fa81d1d9558 prev 0x7fa81d1d68d0 <col:1, col:8> col:8 implicit struct __is_assignable_imp
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c102800 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81c102470 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c1024d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl 0x7fa81c102b20 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
|   |-ClassTemplateDecl 0x7fa81c102d70 <line:2105:1, line:2107:46> line:2106:8 is_assignable
|   | |-TemplateTypeParmDecl 0x7fa81c102bd8 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81c102c48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | |-CXXRecordDecl 0x7fa81c102cd8 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
|   | | |-public '__is_assignable_imp<_Tp, _Arg>'
|   | | `-CXXRecordDecl 0x7fa81c103408 <col:1, col:8> col:8 implicit struct is_assignable
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1cd640 <line:2105:1, line:2107:46> line:2106:8 struct is_assignable definition
|   | | |-public '__is_assignable_imp<unsigned long &, const unsigned long &>':'struct std::__1::__is_assignable_imp<unsigned long &, const unsigned long &, false>'
|   | | |-TemplateArgument type 'unsigned long &'
|   | | |-TemplateArgument type 'const unsigned long &'
|   | | `-CXXRecordDecl 0x7fa81d1d3b20 prev 0x7fa81d1cd640 <col:1, col:8> col:8 implicit struct is_assignable
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1d52a0 <line:2105:1, line:2107:46> line:2106:8 struct is_assignable definition
|   |   |-public '__is_assignable_imp<unsigned long &, unsigned long &&>':'struct std::__1::__is_assignable_imp<unsigned long &, unsigned long &&, false>'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl 0x7fa81d1d9640 prev 0x7fa81d1d52a0 <col:1, col:8> col:8 implicit struct is_assignable
|   |-ClassTemplateDecl 0x7fa81c103608 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
|   | |-TemplateTypeParmDecl 0x7fa81c1034c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c103570 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
|   | | |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   | | |-TypeVisibilityAttr 0x7fa81c103880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c103de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1c5120 <col:1, line:2118:88> line:2116:50 struct is_copy_assignable definition
|   |   |-public 'is_assignable<typename add_lvalue_reference<unsigned long>::type, typename add_lvalue_reference<typename add_const<unsigned long>::type>::type>':'struct std::__1::is_assignable<unsigned long &, const unsigned long &>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl 0x7fa81d1d3c08 prev 0x7fa81d1c5120 <col:22, col:50> col:50 implicit struct is_copy_assignable
|   |-ClassTemplateDecl 0x7fa81c103fe8 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
|   | |-TemplateTypeParmDecl 0x7fa81c103ea0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c103f50 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
|   | | |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   | | |-TypeVisibilityAttr 0x7fa81c104260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81c104628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1d4590 <col:1, line:2130:71> line:2127:50 struct is_move_assignable definition
|   |   |-public 'is_assignable<typename add_lvalue_reference<unsigned long>::type, typename add_rvalue_reference<unsigned long>::type>':'struct std::__1::is_assignable<unsigned long &, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl 0x7fa81d1d9728 prev 0x7fa81d1d4590 <col:22, col:50> col:50 implicit struct is_move_assignable
|   |-ClassTemplateDecl 0x7fa81c104800 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
|   | |-TemplateTypeParmDecl 0x7fa81c1046e0 <line:2149:11> col:11 class depth 0 index 0
|   | `-CXXRecordDecl 0x7fa81c104760 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
|   |   |-CXXRecordDecl 0x7fa81c104a80 <col:1, col:8> col:8 implicit struct __is_destructible_apply
|   |   `-TypedefDecl 0x7fa81c104b30 <col:34, col:46> col:46 type 'int'
|   |     `-BuiltinType 0x7fa81c0327c0 'int'
|   |-ClassTemplateDecl 0x7fa81c104cc8 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
|   | |-TemplateTypeParmDecl 0x7fa81c104ba8 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c104c30 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
|   |   |-CXXRecordDecl 0x7fa81c104f40 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
|   |   |-FunctionTemplateDecl 0x7fa81c105658 <line:2154:5, line:2157:5> line:2155:18 __test
|   |   | |-TemplateTypeParmDecl 0x7fa81c104fd8 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
|   |   | `-CXXMethodDecl 0x7fa81c1055c0 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
|   |   |   `-ParmVarDecl 0x7fa81c105490 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
|   |   |-FunctionTemplateDecl 0x7fa81c1057e8 <line:2159:5, line:2160:29> col:18 __test
|   |   | |-TemplateTypeParmDecl 0x7fa81c1056b0 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
|   |   | `-CXXMethodDecl 0x7fa81c105750 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
|   |   `-VarDecl 0x7fa81c105848 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
|   |     `-BinaryOperator 0x7fa81c105a30 <col:31, col:69> '_Bool' '=='
|   |       |-UnaryExprOrTypeTraitExpr 0x7fa81c1059e0 <col:31, col:53> 'unsigned long' sizeof
|   |       | `-ParenExpr 0x7fa81c1059c0 <col:37, col:53> '<dependent type>'
|   |       |   `-CallExpr 0x7fa81c105990 <col:38, col:52> '<dependent type>'
|   |       |     |-UnresolvedLookupExpr 0x7fa81c1058d0 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fa81c1057e8 0x7fa81c105658
|   |       |     `-IntegerLiteral 0x7fa81c105970 <col:50> 'int' 12
|   |       `-UnaryExprOrTypeTraitExpr 0x7fa81c105a10 <col:58, col:69> 'unsigned long' sizeof 'char'
|   |-ClassTemplateDecl 0x7fa81c105c08 <line:2165:1, line:2166:8> col:8 __destructible_imp
|   | |-TemplateTypeParmDecl 0x7fa81c105a78 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c105af8 <col:22> col:26 '_Bool' depth 0 index 1
|   | `-CXXRecordDecl 0x7fa81c105b70 <line:2166:1, col:8> col:8 struct __destructible_imp
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c106050 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
|   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c105e68 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c106800 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c106aa0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81c1068b8 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c106de0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
|   |-ClassTemplateDecl 0x7fa81c107028 <line:2177:1, line:2178:8> col:8 __destructible_false
|   | |-TemplateTypeParmDecl 0x7fa81c106e98 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c106f18 <col:22> col:26 '_Bool' depth 0 index 1
|   | `-CXXRecordDecl 0x7fa81c106f90 <line:2178:1, col:8> col:8 struct __destructible_false
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c107470 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
|   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c107288 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c1079b8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c107c50 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81c107a70 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c107f90 <line:2184:1, col:8> col:8 implicit struct __destructible_false
|   |-ClassTemplateDecl 0x7fa81c108168 <line:2186:1, line:2188:73> line:2187:8 is_destructible
|   | |-TemplateTypeParmDecl 0x7fa81c108048 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c1080d0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
|   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
|   | | `-CXXRecordDecl 0x7fa81c108698 <col:1, col:8> col:8 implicit struct is_destructible
|   | `-ClassTemplateSpecialization 0x7fa81c109c98 'is_destructible'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c1098f8 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0 []'
|   | |-TemplateTypeParmDecl 0x7fa81c108750 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81c109bc0 <line:2191:1, col:8> col:8 implicit struct is_destructible
|   |-ClassTemplateSpecializationDecl 0x7fa81c109c98 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'void'
|   | `-CXXRecordDecl 0x7fa81c109f40 <col:1, col:8> col:8 implicit struct is_destructible
|   |-FunctionTemplateDecl 0x7fa81c10a408 <line:2207:1, line:2214:1> line:2210:1 move
|   | |-TemplateTypeParmDecl 0x7fa81c109ff8 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl 0x7fa81c10a370 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
|   | | |-ParmVarDecl 0x7fa81c10a1e8 <col:6, col:12> col:12 referenced __t '_Tp &&'
|   | | |-CompoundStmt 0x7fa81c10a720 <line:2211:1, line:2214:1>
|   | | | |-DeclStmt 0x7fa81c10a638 <line:2212:5, col:53>
|   | | | | `-TypedefDecl 0x7fa81c10a5e0 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
|   | | | |   `-DependentNameType 0x7fa81c10a570 'typename remove_reference<_Tp>::type' dependent
|   | | | `-ReturnStmt 0x7fa81c10a708 <line:2213:5, col:34>
|   | | |   `-CXXStaticCastExpr 0x7fa81c10a6d8 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
|   | | |     `-DeclRefExpr 0x7fa81c10a670 <col:31> '_Tp' lvalue ParmVar 0x7fa81c10a1e8 '__t' '_Tp &&'
|   | | |-AlwaysInlineAttr 0x7fa81c10a460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr 0x7fa81c10a4a8 <col:51, col:74> Hidden
|   | |-FunctionDecl 0x7fa81d1aee30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2208:1, line:2214:1> line:2210:1 used constexpr move 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' inline
|   | | |-TemplateArgument type 'struct A &'
|   | | |-ParmVarDecl 0x7fa81d1aed08 <col:6, col:12> col:12 used __t 'struct A &&'
|   | | |-CompoundStmt 0x7fa81d1af1e8 <line:2211:1, line:2214:1>
|   | | | |-DeclStmt 0x7fa81d1af108 <line:2212:5, col:53>
|   | | | | `-TypedefDecl 0x7fa81d1af0b0 <col:5, col:50> col:50 _Up 'typename remove_reference<struct A &>::type':'struct A'
|   | | | |   `-ElaboratedType 0x7fa81d1af060 'typename remove_reference<struct A &>::type' sugar
|   | | | |     `-TypedefType 0x7fa81d1aec50 'std::__1::remove_reference<struct A &>::type' sugar
|   | | | |       |-Typedef 0x7fa81d1aebd8 'type'
|   | | | |       `-SubstTemplateTypeParmType 0x7fa81d1aea20 'struct A' sugar
|   | | | |         |-TemplateTypeParmType 0x7fa81c803130 '_Tp' dependent depth 0 index 0
|   | | | |         | `-TemplateTypeParm 0x7fa81c8030e8 '_Tp'
|   | | | |         `-RecordType 0x7fa81d1ad780 'struct A'
|   | | | |           `-CXXRecord 0x7fa81d1ad6e0 'A'
|   | | | `-ReturnStmt 0x7fa81d1af1d0 <line:2213:5, col:34>
|   | | |   `-CXXStaticCastExpr 0x7fa81d1af1a0 <col:12, col:34> '_Up':'struct A' xvalue static_cast<_Up &&> <NoOp>
|   | | |     `-DeclRefExpr 0x7fa81d1af178 <col:31> 'struct A' lvalue ParmVar 0x7fa81d1aed08 '__t' 'struct A &&'
|   | | `-AlwaysInlineAttr 0x7fa81d1aef28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-FunctionDecl 0x7fa81d20b320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2208:1, line:2214:1> line:2210:1 used constexpr move 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' inline
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-ParmVarDecl 0x7fa81d20b238 <col:6, col:12> col:12 used __t 'unsigned long &&'
|   |   |-CompoundStmt 0x7fa81d20b6d8 <line:2211:1, line:2214:1>
|   |   | |-DeclStmt 0x7fa81d20b5f8 <line:2212:5, col:53>
|   |   | | `-TypedefDecl 0x7fa81d20b5a0 <col:5, col:50> col:50 _Up 'typename remove_reference<unsigned long &>::type':'unsigned long'
|   |   | |   `-ElaboratedType 0x7fa81d20b550 'typename remove_reference<unsigned long &>::type' sugar
|   |   | |     `-TypedefType 0x7fa81d20a380 'std::__1::remove_reference<unsigned long &>::type' sugar
|   |   | |       |-Typedef 0x7fa81d20a308 'type'
|   |   | |       `-SubstTemplateTypeParmType 0x7fa81d20a150 'unsigned long' sugar
|   |   | |         |-TemplateTypeParmType 0x7fa81c803130 '_Tp' dependent depth 0 index 0
|   |   | |         | `-TemplateTypeParm 0x7fa81c8030e8 '_Tp'
|   |   | |         `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |   | `-ReturnStmt 0x7fa81d20b6c0 <line:2213:5, col:34>
|   |   |   `-CXXStaticCastExpr 0x7fa81d20b690 <col:12, col:34> '_Up':'unsigned long' xvalue static_cast<_Up &&> <NoOp>
|   |   |     `-DeclRefExpr 0x7fa81d20b668 <col:31> 'unsigned long' lvalue ParmVar 0x7fa81d20b238 '__t' 'unsigned long &&'
|   |   `-AlwaysInlineAttr 0x7fa81d20b418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-FunctionTemplateDecl 0x7fa81c10ab50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
|   | |-TemplateTypeParmDecl 0x7fa81c10a748 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl 0x7fa81c10aab8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
|   | | |-ParmVarDecl 0x7fa81c10a980 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
|   | | |-CompoundStmt 0x7fa81c10ac80 <line:2220:1, line:2222:1>
|   | | | `-ReturnStmt 0x7fa81c10ac68 <line:2221:5, col:34>
|   | | |   `-CXXStaticCastExpr 0x7fa81c10ac38 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
|   | | |     `-DeclRefExpr 0x7fa81c10ac00 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fa81c10a980 '__t' 'typename remove_reference<_Tp>::type &'
|   | | |-AlwaysInlineAttr 0x7fa81c10aba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr 0x7fa81c10abf0 <col:51, col:74> Hidden
|   | `-FunctionDecl 0x7fa81d206748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2217:1, line:2222:1> line:2219:1 used constexpr forward 'unsigned long &&(typename remove_reference<unsigned long>::type &) noexcept' inline
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-ParmVarDecl 0x7fa81d206640 <col:9, col:47> col:47 used __t 'typename remove_reference<unsigned long>::type &'
|   |   |-CompoundStmt 0x7fa81d206bc0 <line:2220:1, line:2222:1>
|   |   | `-ReturnStmt 0x7fa81d206ba8 <line:2221:5, col:34>
|   |   |   `-CXXStaticCastExpr 0x7fa81d206b78 <col:12, col:34> 'unsigned long':'unsigned long' xvalue static_cast<unsigned long &&> <NoOp>
|   |   |     `-DeclRefExpr 0x7fa81d206b50 <col:31> 'typename remove_reference<unsigned long>::type':'unsigned long' lvalue ParmVar 0x7fa81d206640 '__t' 'typename remove_reference<unsigned long>::type &'
|   |   `-AlwaysInlineAttr 0x7fa81d206840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-FunctionTemplateDecl 0x7fa81c10b070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
|   | |-TemplateTypeParmDecl 0x7fa81c10aca0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl 0x7fa81c10afd8 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81c10aea0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
|   |   |-CompoundStmt 0x7fa81c10b3e8 <line:2228:1, line:2232:1>
|   |   | |-DeclStmt 0x7fa81c10b350 <line:2229:5, line:2230:60>
|   |   | | `-StaticAssertDecl 0x7fa81c10b318 <line:2229:5, line:2230:59> line:2229:5
|   |   | |   |-UnaryOperator 0x7fa81c10b228 <col:19, col:46> '<dependent type>' prefix '!'
|   |   | |   | `-DependentScopeDeclRefExpr 0x7fa81c10b1e8 <col:20, col:46> '<dependent type>' lvalue
|   |   | |   `-StringLiteral 0x7fa81c10b2c8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
|   |   | `-ReturnStmt 0x7fa81c10b3d0 <line:2231:5, col:34>
|   |   |   `-CXXStaticCastExpr 0x7fa81c10b3a0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
|   |   |     `-DeclRefExpr 0x7fa81c10b368 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fa81c10aea0 '__t' 'typename remove_reference<_Tp>::type &&'
|   |   |-AlwaysInlineAttr 0x7fa81c10b0c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81c10b110 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81c10b7a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
|   | |-TemplateTypeParmDecl 0x7fa81c10b410 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl 0x7fa81c10b710 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
|   |   |-ParmVarDecl 0x7fa81c10b5f8 <col:14, col:20> col:20 referenced __t '_Tp &&'
|   |   |-CompoundStmt 0x7fa81c10b9c0 <line:2281:1, line:2283:1>
|   |   | `-ReturnStmt 0x7fa81c10b9a8 <line:2282:5, col:35>
|   |   |   `-CallExpr 0x7fa81c10b978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81c10b8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     `-DeclRefExpr 0x7fa81c10b950 <col:32> '_Tp' lvalue ParmVar 0x7fa81c10b5f8 '__t' '_Tp &&'
|   |   |-AlwaysInlineAttr 0x7fa81c10b800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81c10b848 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c10bf58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c10b9e0 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c10ba48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c10bab8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c10c270 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c10c318 <line:2302:5, col:20> col:20 _ClassType '_Class'
|   | | `-TemplateTypeParmType 0x7fa81c10ba90 '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm 0x7fa81c10ba48 '_Class'
|   | |-TypedefDecl 0x7fa81c10c380 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c10ba20 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c10b9e0 '_Rp'
|   | `-TypedefDecl 0x7fa81c10c478 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81c10bcb0 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c10bc70 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c10ba20 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c10b9e0 '_Rp'
|   |       `-PackExpansionType 0x7fa81c10bb90 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c10bb00 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c10bab8 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c10ca68 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c10c4f0 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c10c558 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c10c5c8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c10cd80 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c10ce28 <line:2310:5, col:20> col:20 _ClassType '_Class'
|   | | `-TemplateTypeParmType 0x7fa81c10c5a0 '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm 0x7fa81c10c558 '_Class'
|   | |-TypedefDecl 0x7fa81c10ce90 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c10c530 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c10c4f0 '_Rp'
|   | `-TypedefDecl 0x7fa81c10cf88 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81c10c7c0 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c10c780 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c10c530 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c10c4f0 '_Rp'
|   |       |-PackExpansionType 0x7fa81c10c6a0 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81c10c610 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81c10c5c8 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c10d578 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c10d000 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c10d068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c10d0d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c10d8d8 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c10d980 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
|   | | `-QualType 0x7fa81c10d0b1 'const _Class' const
|   | |   `-TemplateTypeParmType 0x7fa81c10d0b0 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c10d068 '_Class'
|   | |-TypedefDecl 0x7fa81c10d9e8 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c10d040 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c10d000 '_Rp'
|   | `-TypedefDecl 0x7fa81c10db48 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81c10daf0 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c10dab0 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c10d040 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c10d000 '_Rp'
|   |       `-PackExpansionType 0x7fa81c10d1b0 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c10d120 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c10d0d8 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c10e138 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c10dbc0 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c10dc28 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c10dc98 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c10e450 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c10e4f8 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
|   | | `-QualType 0x7fa81c10dc71 'const _Class' const
|   | |   `-TemplateTypeParmType 0x7fa81c10dc70 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c10dc28 '_Class'
|   | |-TypedefDecl 0x7fa81c10e560 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c10dc00 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c10dbc0 '_Rp'
|   | `-TypedefDecl 0x7fa81c10e6c8 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81c10e670 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c10e630 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c10dc00 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c10dbc0 '_Rp'
|   |       |-PackExpansionType 0x7fa81c10dd70 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81c10dce0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81c10dc98 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c10ecb8 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c10e740 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c10e7a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c10e818 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c10efd0 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c10f078 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
|   | | `-QualType 0x7fa81c10e7f4 'volatile _Class' volatile
|   | |   `-TemplateTypeParmType 0x7fa81c10e7f0 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c10e7a8 '_Class'
|   | |-TypedefDecl 0x7fa81c10f0e0 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c10e780 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c10e740 '_Rp'
|   | `-TypedefDecl 0x7fa81c10f248 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81c10f1f0 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c10f1b0 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c10e780 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c10e740 '_Rp'
|   |       `-PackExpansionType 0x7fa81c10e8f0 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c10e860 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c10e818 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c10fca0 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c10f2c0 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c10f328 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c10f398 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c10ffb0 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c110058 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
|   | | `-QualType 0x7fa81c10f374 'volatile _Class' volatile
|   | |   `-TemplateTypeParmType 0x7fa81c10f370 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c10f328 '_Class'
|   | |-TypedefDecl 0x7fa81c1100c0 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c10f300 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c10f2c0 '_Rp'
|   | `-TypedefDecl 0x7fa81c110228 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81c1101d0 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c110190 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c10f300 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c10f2c0 '_Rp'
|   |       |-PackExpansionType 0x7fa81c10f470 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81c10f3e0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81c10f398 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c110818 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c1102a0 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c110308 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c110378 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c110b30 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c110bd8 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
|   | | `-QualType 0x7fa81c110355 'const volatile _Class' const volatile
|   | |   `-TemplateTypeParmType 0x7fa81c110350 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c110308 '_Class'
|   | |-TypedefDecl 0x7fa81c110c40 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c1102e0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c1102a0 '_Rp'
|   | `-TypedefDecl 0x7fa81c110da8 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81c110d50 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c110d10 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c1102e0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c1102a0 '_Rp'
|   |       `-PackExpansionType 0x7fa81c110450 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c1103c0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c110378 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c111398 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c110e20 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c110e88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c110ef8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c1116b0 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c111758 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
|   | | `-QualType 0x7fa81c110ed5 'const volatile _Class' const volatile
|   | |   `-TemplateTypeParmType 0x7fa81c110ed0 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c110e88 '_Class'
|   | |-TypedefDecl 0x7fa81c1117c0 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c110e60 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c110e20 '_Rp'
|   | `-TypedefDecl 0x7fa81c111928 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81c1118d0 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c111890 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c110e60 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c110e20 '_Rp'
|   |       |-PackExpansionType 0x7fa81c110fd0 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81c110f40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81c110ef8 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c112b28 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c1119a0 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c111a08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c111a78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c112e40 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c112f18 <line:2369:5, col:21> col:21 _ClassType '_Class &'
|   | | `-LValueReferenceType 0x7fa81c112ee0 '_Class &' dependent
|   | |   `-TemplateTypeParmType 0x7fa81c111a50 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c111a08 '_Class'
|   | |-TypedefDecl 0x7fa81c112f80 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c1119e0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c1119a0 '_Rp'
|   | `-TypedefDecl 0x7fa81c1130e8 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81c113090 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c113050 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c1119e0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c1119a0 '_Rp'
|   |       `-PackExpansionType 0x7fa81c111b50 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c111ac0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c111a78 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c1136d8 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c113160 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c1131c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c113238 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c1139f0 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c113ac8 <line:2377:5, col:21> col:21 _ClassType '_Class &'
|   | | `-LValueReferenceType 0x7fa81c113a90 '_Class &' dependent
|   | |   `-TemplateTypeParmType 0x7fa81c113210 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c1131c8 '_Class'
|   | |-TypedefDecl 0x7fa81c113b30 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c1131a0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c113160 '_Rp'
|   | `-TypedefDecl 0x7fa81c113c98 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81c113c40 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c113c00 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c1131a0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c113160 '_Rp'
|   |       |-PackExpansionType 0x7fa81c113310 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81c113280 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81c113238 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c114288 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c113d10 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c113d78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c113de8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c1145a0 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c114678 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
|   | | `-LValueReferenceType 0x7fa81c114640 'const _Class &' dependent
|   | |   `-QualType 0x7fa81c113dc1 'const _Class' const
|   | |     `-TemplateTypeParmType 0x7fa81c113dc0 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81c113d78 '_Class'
|   | |-TypedefDecl 0x7fa81c1146e0 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c113d50 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c113d10 '_Rp'
|   | `-TypedefDecl 0x7fa81c115458 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81c115400 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c1147b0 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c113d50 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c113d10 '_Rp'
|   |       `-PackExpansionType 0x7fa81c113ec0 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c113e30 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c113de8 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c115a48 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c1154d0 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c115538 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c1155a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c115d60 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c115e38 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
|   | | `-LValueReferenceType 0x7fa81c115e00 'const _Class &' dependent
|   | |   `-QualType 0x7fa81c115581 'const _Class' const
|   | |     `-TemplateTypeParmType 0x7fa81c115580 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81c115538 '_Class'
|   | |-TypedefDecl 0x7fa81c115ea0 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c115510 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c1154d0 '_Rp'
|   | `-TypedefDecl 0x7fa81c116008 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81c115fb0 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c115f70 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c115510 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c1154d0 '_Rp'
|   |       |-PackExpansionType 0x7fa81c115680 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81c1155f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81c1155a8 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c1165f8 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c116080 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c1160e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c116158 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c116910 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c1169e8 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
|   | | `-LValueReferenceType 0x7fa81c1169b0 'volatile _Class &' dependent
|   | |   `-QualType 0x7fa81c116134 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType 0x7fa81c116130 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81c1160e8 '_Class'
|   | |-TypedefDecl 0x7fa81c116a50 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c1160c0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c116080 '_Rp'
|   | `-TypedefDecl 0x7fa81c116bb8 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81c116b60 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c116b20 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c1160c0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c116080 '_Rp'
|   |       `-PackExpansionType 0x7fa81c116230 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c1161a0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c116158 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c1171a8 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c116c30 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c116c98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c116d08 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c117cd8 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c117da8 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
|   | | `-LValueReferenceType 0x7fa81c117d70 'volatile _Class &' dependent
|   | |   `-QualType 0x7fa81c116ce4 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType 0x7fa81c116ce0 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81c116c98 '_Class'
|   | |-TypedefDecl 0x7fa81c117e10 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c116c70 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c116c30 '_Rp'
|   | `-TypedefDecl 0x7fa81c117f78 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81c117f20 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c117ee0 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c116c70 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c116c30 '_Rp'
|   |       |-PackExpansionType 0x7fa81c116de0 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81c116d50 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81c116d08 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c118568 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c117ff0 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c118058 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c1180c8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c118880 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c118958 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
|   | | `-LValueReferenceType 0x7fa81c118920 'const volatile _Class &' dependent
|   | |   `-QualType 0x7fa81c1180a5 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType 0x7fa81c1180a0 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81c118058 '_Class'
|   | |-TypedefDecl 0x7fa81c1189c0 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c118030 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c117ff0 '_Rp'
|   | `-TypedefDecl 0x7fa81c118b28 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81c118ad0 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c118a90 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c118030 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c117ff0 '_Rp'
|   |       `-PackExpansionType 0x7fa81c1181a0 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c118110 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c1180c8 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c119118 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c118ba0 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c118c08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c118c78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81c119430 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81c119508 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
|   | | `-LValueReferenceType 0x7fa81c1194d0 'const volatile _Class &' dependent
|   | |   `-QualType 0x7fa81c118c55 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType 0x7fa81c118c50 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81c118c08 '_Class'
|   | |-TypedefDecl 0x7fa81c119570 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c118be0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c118ba0 '_Rp'
|   | `-TypedefDecl 0x7fa81c1196d8 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81c119680 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81c119640 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c118be0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c118ba0 '_Rp'
|   |       |-PackExpansionType 0x7fa81c118d50 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81c118cc0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81c118c78 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d800518 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c119750 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81c1197b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81c119828 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81d800830 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d800938 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
|   | | `-RValueReferenceType 0x7fa81d800900 '_Class &&' dependent
|   | |   `-TemplateTypeParmType 0x7fa81c119800 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81c1197b8 '_Class'
|   | |-TypedefDecl 0x7fa81d8009a0 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81c119790 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81c119750 '_Rp'
|   | `-TypedefDecl 0x7fa81d800b08 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81d800ab0 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81d800a70 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81c119790 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81c119750 '_Rp'
|   |       `-PackExpansionType 0x7fa81c119900 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81c119870 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81c119828 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d8010f8 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d800b80 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d800be8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d800c58 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81d801410 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d8014e8 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
|   | | `-RValueReferenceType 0x7fa81d8014b0 '_Class &&' dependent
|   | |   `-TemplateTypeParmType 0x7fa81d800c30 '_Class' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81d800be8 '_Class'
|   | |-TypedefDecl 0x7fa81d801550 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81d800bc0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81d800b80 '_Rp'
|   | `-TypedefDecl 0x7fa81d8016b8 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81d801660 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81d801620 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81d800bc0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81d800b80 '_Rp'
|   |       |-PackExpansionType 0x7fa81d800d30 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81d800ca0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81d800c58 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d801ca8 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d801730 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d801798 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d801808 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81d801fc0 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d8020c8 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
|   | | `-RValueReferenceType 0x7fa81d802090 'const _Class &&' dependent
|   | |   `-QualType 0x7fa81d8017e1 'const _Class' const
|   | |     `-TemplateTypeParmType 0x7fa81d8017e0 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81d801798 '_Class'
|   | |-TypedefDecl 0x7fa81d802130 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81d801770 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81d801730 '_Rp'
|   | `-TypedefDecl 0x7fa81d802298 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81d802240 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81d802200 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81d801770 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81d801730 '_Rp'
|   |       `-PackExpansionType 0x7fa81d8018e0 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81d801850 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81d801808 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d803498 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d802310 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d802378 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d803000 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81d8037b0 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d803888 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
|   | | `-RValueReferenceType 0x7fa81d803850 'const _Class &&' dependent
|   | |   `-QualType 0x7fa81d8023c1 'const _Class' const
|   | |     `-TemplateTypeParmType 0x7fa81d8023c0 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81d802378 '_Class'
|   | |-TypedefDecl 0x7fa81d8038f0 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81d802350 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81d802310 '_Rp'
|   | `-TypedefDecl 0x7fa81d803a58 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81d803a00 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81d8039c0 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81d802350 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81d802310 '_Rp'
|   |       |-PackExpansionType 0x7fa81d8030d0 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81d803040 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81d803000 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d804048 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d803ad0 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d803b38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d803ba8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81d804360 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d804468 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
|   | | `-RValueReferenceType 0x7fa81d804430 'volatile _Class &&' dependent
|   | |   `-QualType 0x7fa81d803b84 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType 0x7fa81d803b80 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81d803b38 '_Class'
|   | |-TypedefDecl 0x7fa81d8044d0 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81d803b10 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81d803ad0 '_Rp'
|   | `-TypedefDecl 0x7fa81d804638 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81d8045e0 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81d8045a0 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81d803b10 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81d803ad0 '_Rp'
|   |       `-PackExpansionType 0x7fa81d803c80 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81d803bf0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81d803ba8 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d804c28 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d8046b0 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d804718 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d804788 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81d804f40 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d805838 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
|   | | `-RValueReferenceType 0x7fa81d805800 'volatile _Class &&' dependent
|   | |   `-QualType 0x7fa81d804764 'volatile _Class' volatile
|   | |     `-TemplateTypeParmType 0x7fa81d804760 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81d804718 '_Class'
|   | |-TypedefDecl 0x7fa81d8058a0 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81d8046f0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81d8046b0 '_Rp'
|   | `-TypedefDecl 0x7fa81d805a08 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81d8059b0 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81d805970 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81d8046f0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81d8046b0 '_Rp'
|   |       |-PackExpansionType 0x7fa81d804860 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81d8047d0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81d804788 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d805ff8 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d805a80 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d805ae8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d805b58 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81d806310 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d806418 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
|   | | `-RValueReferenceType 0x7fa81d8063e0 'const volatile _Class &&' dependent
|   | |   `-QualType 0x7fa81d805b35 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType 0x7fa81d805b30 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81d805ae8 '_Class'
|   | |-TypedefDecl 0x7fa81d806480 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81d805ac0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81d805a80 '_Rp'
|   | `-TypedefDecl 0x7fa81d8065e8 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
|   |   `-ParenType 0x7fa81d806590 '_Rp (_Param...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81d806550 '_Rp (_Param...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81d805ac0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81d805a80 '_Rp'
|   |       `-PackExpansionType 0x7fa81d805c30 '_Param...' dependent
|   |         `-TemplateTypeParmType 0x7fa81d805ba0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |           `-TemplateTypeParm 0x7fa81d805b58 '_Param'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d806bd8 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d806660 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d8066c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d806738 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | |-CXXRecordDecl 0x7fa81d806ef0 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d806fc8 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
|   | | `-RValueReferenceType 0x7fa81d806f90 'const volatile _Class &&' dependent
|   | |   `-QualType 0x7fa81d806715 'const volatile _Class' const volatile
|   | |     `-TemplateTypeParmType 0x7fa81d806710 '_Class' dependent depth 0 index 1
|   | |       `-TemplateTypeParm 0x7fa81d8066c8 '_Class'
|   | |-TypedefDecl 0x7fa81d807030 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
|   | | `-TemplateTypeParmType 0x7fa81d8066a0 '_Rp' dependent depth 0 index 0
|   | |   `-TemplateTypeParm 0x7fa81d806660 '_Rp'
|   | `-TypedefDecl 0x7fa81d807198 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
|   |   `-ParenType 0x7fa81d807140 '_Rp (_Param..., ...)' sugar dependent
|   |     `-FunctionProtoType 0x7fa81d807100 '_Rp (_Param..., ...)' dependent cdecl
|   |       |-TemplateTypeParmType 0x7fa81d8066a0 '_Rp' dependent depth 0 index 0
|   |       | `-TemplateTypeParm 0x7fa81d806660 '_Rp'
|   |       |-PackExpansionType 0x7fa81d806810 '_Param...' dependent
|   |       | `-TemplateTypeParmType 0x7fa81d806780 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
|   |       |   `-TemplateTypeParm 0x7fa81d806738 '_Param'
|   |       `-...
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d807568 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d807210 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d807278 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-CXXRecordDecl 0x7fa81d808478 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
|   | |-TypedefDecl 0x7fa81d808520 <line:2759:5, col:20> col:20 _ClassType '_Class'
|   | | `-TemplateTypeParmType 0x7fa81d8072c0 '_Class' dependent depth 0 index 1
|   | |   `-TemplateTypeParm 0x7fa81d807278 '_Class'
|   | `-TypedefDecl 0x7fa81d808588 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
|   |   `-TemplateTypeParmType 0x7fa81d807250 '_Rp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d807210 '_Rp'
|   |-ClassTemplateDecl 0x7fa81d808718 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
|   | |-TemplateTypeParmDecl 0x7fa81d808600 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
|   | `-CXXRecordDecl 0x7fa81d808680 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
|   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
|   |   `-CXXRecordDecl 0x7fa81d808e98 <col:1, col:8> col:8 implicit struct __member_pointer_traits
|   |-ClassTemplateDecl 0x7fa81d809068 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
|   | |-TemplateTypeParmDecl 0x7fa81d808f50 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
|   | `-CXXRecordDecl 0x7fa81d808fd0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
|   |   `-CXXRecordDecl 0x7fa81d8092e0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d809608 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
|   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl 0x7fa81d809398 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl 0x7fa81d809408 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
|   | |-CXXRecordDecl 0x7fa81d809850 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
|   | `-TypedefDecl 0x7fa81d8098f8 <line:2780:3, col:22> col:22 type '_ClassType'
|   |   `-TemplateTypeParmType 0x7fa81d809450 '_ClassType' dependent depth 0 index 1
|   |     `-TemplateTypeParm 0x7fa81d809408 '_ClassType'
|   |-ClassTemplateDecl 0x7fa81d809a88 <line:2785:1, col:34> col:34 result_of
|   | |-TemplateTypeParmDecl 0x7fa81d809970 <col:11, col:17> col:17 class depth 0 index 0 _Callable
|   | `-CXXRecordDecl 0x7fa81d8099f0 <col:28, col:34> col:34 class result_of
|   |-NamespaceDecl 0x7fa81d809c98 <line:2937:1, line:2940:1> line:2937:11 __is_construct
|   | `-CXXRecordDecl 0x7fa81d809d00 <line:2939:1, col:15> col:8 struct __nat definition
|   |   `-CXXRecordDecl 0x7fa81d809e28 <col:1, col:8> col:8 implicit struct __nat
|   |-ClassTemplateDecl 0x7fa81d80a0a0 <line:3059:1, line:3062:6> line:3060:29 is_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d809ee0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d809f48 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | |-CXXRecordDecl 0x7fa81d80a008 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
|   | | |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
|   | | |-TypeVisibilityAttr 0x7fa81d80a3a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d80a9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1dc4f0 <line:3059:1, line:3062:6> line:3060:29 struct is_constructible definition
|   | | |-public 'integral_constant<_Bool, __is_constructible(unsigned long, const unsigned long &)>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument pack
|   | | | `-TemplateArgument type 'const unsigned long &'
|   | | `-CXXRecordDecl 0x7fa81d1dc908 prev 0x7fa81d1dc4f0 <col:1, col:29> col:29 implicit struct is_constructible
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1de5a0 <line:3059:1, line:3062:6> line:3060:29 struct is_constructible definition
|   | | |-public 'integral_constant<_Bool, __is_constructible(unsigned long, unsigned long)>':'struct std::__1::integral_constant<_Bool, true>'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument pack
|   | | | `-TemplateArgument type 'unsigned long'
|   | | `-CXXRecordDecl 0x7fa81d1de9b8 prev 0x7fa81d1de5a0 <col:1, col:29> col:29 implicit struct is_constructible
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1f2d48 <line:3059:1, line:3062:6> line:3060:29 struct is_constructible definition
|   |   |-public 'integral_constant<_Bool, __is_constructible(unsigned long, unsigned long &&)>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument pack
|   |   | `-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl 0x7fa81d1f3108 prev 0x7fa81d1f2d48 <col:1, col:29> col:29 implicit struct is_constructible
|   |-ClassTemplateDecl 0x7fa81d80abb8 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d80aa70 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d80ab20 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
|   |   |-public 'is_constructible<_Tp>'
|   |   |-TypeVisibilityAttr 0x7fa81d80ae30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d80af98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
|   |-ClassTemplateDecl 0x7fa81d80b198 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d80b050 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d80b100 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
|   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81d80b410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d80b808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
|   |-ClassTemplateDecl 0x7fa81d80ba08 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d80b8c0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d80b970 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
|   | | |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   | | |-TypeVisibilityAttr 0x7fa81d80bc80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d80bf68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1f29d8 <line:3274:1, line:3281:6> line:3275:29 struct is_move_constructible definition
|   |   |-public 'is_constructible<unsigned long, typename add_rvalue_reference<unsigned long>::type>':'struct std::__1::is_constructible<unsigned long, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl 0x7fa81d1f31f0 prev 0x7fa81d1f29d8 <col:1, col:29> col:29 implicit struct is_move_constructible
|   |-ClassTemplateDecl 0x7fa81d80c1e0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d80c020 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d80c088 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl 0x7fa81d80c148 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
|   |   |-TypeVisibilityAttr 0x7fa81d80c4e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d80c6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
|   |-ClassTemplateDecl 0x7fa81d80c908 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d80c7a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d80c870 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp>'
|   |   |-TypeVisibilityAttr 0x7fa81d80cb80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d80cce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
|   |-ClassTemplateDecl 0x7fa81d80cee8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d80cda0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d80ce50 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81d80d160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d80d4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
|   |-ClassTemplateDecl 0x7fa81d80d6d8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d80d590 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d80d640 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
|   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81d80d950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d80dc38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
|   |-ClassTemplateDecl 0x7fa81d80de80 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
|   | |-TemplateTypeParmDecl 0x7fa81d80dcf0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d80dd58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl 0x7fa81d80dde8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
|   |   `-CXXRecordDecl 0x7fa81d80e2d8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
|   |-ClassTemplateDecl 0x7fa81d80e4d8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
|   | |-TemplateTypeParmDecl 0x7fa81d80e390 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d80e440 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
|   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81d80e750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d80fe28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
|   |-ClassTemplateDecl 0x7fa81d810028 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
|   | |-TemplateTypeParmDecl 0x7fa81d80fee0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d80ff90 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
|   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81d8102a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d810668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
|   |-ClassTemplateDecl 0x7fa81d810868 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
|   | |-TemplateTypeParmDecl 0x7fa81d810720 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d8107d0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
|   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d810ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d810e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
|   |-ClassTemplateDecl 0x7fa81d811150 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
|   | |-NonTypeTemplateParmDecl 0x7fa81d810ef0 <col:11> col:15 '_Bool' depth 0 index 0
|   | |-NonTypeTemplateParmDecl 0x7fa81d810f58 <col:17> col:21 '_Bool' depth 0 index 1
|   | |-TemplateTypeParmDecl 0x7fa81d810fb0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d811018 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
|   | |-CXXRecordDecl 0x7fa81d8110b8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1f4550 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
|   |   |-public 'integral_constant<_Bool, noexcept(unsigned long(declval<unsigned long &&>()))>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument integral 0
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument pack
|   |   | `-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl 0x7fa81d1f5048 prev 0x7fa81d1f4550 <col:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d811850 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
|   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-1...'
|   | |-TemplateTypeParmDecl 0x7fa81d811498 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d811508 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl 0x7fa81d812e98 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
|   |-FunctionTemplateDecl 0x7fa81d813180 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
|   | |-TemplateTypeParmDecl 0x7fa81d812f50 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl 0x7fa81d8130e8 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
|   |   |-ParmVarDecl 0x7fa81d812fe0 <col:31> col:34 '_Tp'
|   |   `-CompoundStmt 0x7fa81d8131d8 <col:45, col:47>
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d813560 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
|   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x7fa81d8131f0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d813258 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl 0x7fa81d813c18 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d8140f0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d813e48 <col:69> '_Bool' NonTypeTemplateParm 0x7fa81d813d48 '_IsReference' '_Bool'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl 0x7fa81d813cd0 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d813d48 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
|   | |-TemplateTypeParmDecl 0x7fa81d813da0 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
|   | `-CXXRecordDecl 0x7fa81d814490 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
|   |-ClassTemplateDecl 0x7fa81d814710 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d814548 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d8145b8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | |-CXXRecordDecl 0x7fa81d814678 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
|   | | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
|   | | |-TypeVisibilityAttr 0x7fa81d815a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d815fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1f3f98 <line:3591:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
|   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<unsigned long, unsigned long &&>::value, is_reference<unsigned long>::value, unsigned long, unsigned long &&>':'struct std::__1::__libcpp_is_nothrow_constructible<true, false, unsigned long, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument pack
|   |   | `-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl 0x7fa81d1f5130 prev 0x7fa81d1f3f98 <col:1, col:29> col:29 implicit struct is_nothrow_constructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d816320 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
|   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateArgument pack
|   | |-TemplateTypeParmDecl 0x7fa81d816070 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d8160e8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
|   | |-TypeVisibilityAttr 0x7fa81d816488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d8169c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
|   |-ClassTemplateDecl 0x7fa81d816bc8 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d816a80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d816b30 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
|   |   |-public 'is_nothrow_constructible<_Tp>'
|   |   |-TypeVisibilityAttr 0x7fa81d816e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d816fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
|   |-ClassTemplateDecl 0x7fa81d8171a8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d817060 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d817110 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
|   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81d817420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d817818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
|   |-ClassTemplateDecl 0x7fa81d819a98 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d8178d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d819a00 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
|   | | |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
|   | | |-TypeVisibilityAttr 0x7fa81d819d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d819ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1f3c28 <col:1, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
|   |   |-public 'is_nothrow_constructible<unsigned long, typename add_rvalue_reference<unsigned long>::type>':'struct std::__1::is_nothrow_constructible<unsigned long, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl 0x7fa81d1f5218 prev 0x7fa81d1f3c28 <col:22, col:50> col:50 implicit struct is_nothrow_move_constructible
|   |-ClassTemplateDecl 0x7fa81d81a2b8 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
|   | |-NonTypeTemplateParmDecl 0x7fa81d81a0c0 <col:11> col:15 '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl 0x7fa81d81a118 <col:17, col:23> col:23 class depth 0 index 1 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d81a188 <col:28, col:34> col:34 class depth 0 index 2 _Arg
|   | |-CXXRecordDecl 0x7fa81d81a220 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1efea0 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
|   |   |-public 'integral_constant<_Bool, noexcept(std::__1::declval<unsigned long &>() = std::__1::declval<unsigned long &&>())>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl 0x7fa81d1f0e18 prev 0x7fa81d1efea0 <col:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d81a828 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x7fa81d81a558 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d81a5c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl 0x7fa81d81ab50 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d81aed8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
|   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x7fa81d81ac08 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d81ac78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | `-CXXRecordDecl 0x7fa81d81b578 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
|   |-ClassTemplateDecl 0x7fa81d81b7f0 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
|   | |-TemplateTypeParmDecl 0x7fa81d81b630 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d81b698 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
|   | |-CXXRecordDecl 0x7fa81d81b758 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
|   | | |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
|   | | |-TypeVisibilityAttr 0x7fa81d81ea90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d81ee08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1efab0 <line:3773:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
|   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<unsigned long &, unsigned long &&>::value, unsigned long &, unsigned long &&>':'struct std::__1::__libcpp_is_nothrow_assignable<true, unsigned long &, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long &'
|   |   |-TemplateArgument type 'unsigned long &&'
|   |   `-CXXRecordDecl 0x7fa81d1f0f00 prev 0x7fa81d1efab0 <col:1, col:29> col:29 implicit struct is_nothrow_assignable
|   |-ClassTemplateDecl 0x7fa81d81f008 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
|   | |-TemplateTypeParmDecl 0x7fa81d81eec0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d81ef70 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
|   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
|   |   |-TypeVisibilityAttr 0x7fa81d81f280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d81f758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
|   |-ClassTemplateDecl 0x7fa81d81f958 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
|   | |-TemplateTypeParmDecl 0x7fa81d81f810 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d81f8c0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
|   | | |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
|   | | |-TypeVisibilityAttr 0x7fa81d81fbd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d81ff98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1ef660 <col:1, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
|   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<unsigned long>::type, typename add_rvalue_reference<unsigned long>::type>':'struct std::__1::is_nothrow_assignable<unsigned long &, unsigned long &&>'
|   |   |-TemplateArgument type 'unsigned long'
|   |   `-CXXRecordDecl 0x7fa81d1f0fe8 prev 0x7fa81d1ef660 <col:22, col:50> col:50 implicit struct is_nothrow_move_assignable
|   |-ClassTemplateDecl 0x7fa81d8201e0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
|   | |-NonTypeTemplateParmDecl 0x7fa81d820060 <col:11> col:15 '_Bool' depth 0 index 0
|   | |-TemplateTypeParmDecl 0x7fa81d8200b8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
|   | `-CXXRecordDecl 0x7fa81d820148 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d820620 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d820438 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d8208f0 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d820ba0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
|   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d8209a8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d821148 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
|   |-ClassTemplateDecl 0x7fa81d821348 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
|   | |-TemplateTypeParmDecl 0x7fa81d821200 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d8212b0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
|   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
|   |   |-TypeVisibilityAttr 0x7fa81d8215c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d821878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d821bb8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
|   | |-public 'is_nothrow_destructible<_Tp>'
|   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
|   | |-TemplateTypeParmDecl 0x7fa81d821930 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d8219a8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
|   | |-TypeVisibilityAttr 0x7fa81d821d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d821ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d822178 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl 0x7fa81d821fb0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d8222b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d822430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d8226b8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl 0x7fa81d8224e8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d8227f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d822a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
|   |-ClassTemplateDecl 0x7fa81d822c08 <line:3925:1, line:3926:54> line:3925:50 is_pod
|   | |-TemplateTypeParmDecl 0x7fa81d822ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d822b70 <col:22, line:3926:54> line:3925:50 struct is_pod definition
|   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d822e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d823068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
|   |-ClassTemplateDecl 0x7fa81d823268 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
|   | |-TemplateTypeParmDecl 0x7fa81d823120 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d8231d0 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
|   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d8234e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d8236c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
|   |-ClassTemplateDecl 0x7fa81d8238c8 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
|   | |-TemplateTypeParmDecl 0x7fa81d823780 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d823830 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
|   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d823b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d823d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
|   |-ClassTemplateDecl 0x7fa81d823f28 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
|   | |-TemplateTypeParmDecl 0x7fa81d823de0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d823e90 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
|   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d8241a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d824388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
|   |-ClassTemplateDecl 0x7fa81d824588 <line:3993:1, line:4000:6> line:3993:50 is_trivial
|   | |-TemplateTypeParmDecl 0x7fa81d824440 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d8244f0 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
|   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
|   |   |-TypeVisibilityAttr 0x7fa81d824800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   `-CXXRecordDecl 0x7fa81d824a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
|   |-ClassTemplateDecl 0x7fa81d824bd8 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
|   | |-TemplateTypeParmDecl 0x7fa81d824ab8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d824b40 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl 0x7fa81d824e90 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d825168 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
|   | |-TemplateTypeParmDecl 0x7fa81d824f48 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d825410 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
|   |-ClassTemplateDecl 0x7fa81d8255e8 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
|   | |-TemplateTypeParmDecl 0x7fa81d8254c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d825550 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
|   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
|   |   `-CXXRecordDecl 0x7fa81d825a78 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
|   |-ClassTemplateDecl 0x7fa81d825c48 <line:4016:1, col:32> col:32 __check_complete
|   | |-TemplateTypeParmDecl 0x7fa81d825b30 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
|   | |-CXXRecordDecl 0x7fa81d825bb0 <col:25, col:32> col:32 struct __check_complete
|   | `-ClassTemplateSpecialization 0x7fa81d825ec8 '__check_complete'
|   |-ClassTemplateSpecializationDecl 0x7fa81d825ec8 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
|   | |-TemplateArgument pack
|   | `-CXXRecordDecl 0x7fa81d8260c0 <col:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d826528 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
|   | |-private '__check_complete<_Hp>'
|   | |-private '__check_complete<_T0, _Tp...>'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl 0x7fa81d826178 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | |-TemplateTypeParmDecl 0x7fa81d8261e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
|   | |-TemplateTypeParmDecl 0x7fa81d826258 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
|   | `-CXXRecordDecl 0x7fa81d826b70 <line:4024:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d826e38 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
|   | |-private '__check_complete<_Hp>'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d826c28 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
|   | `-CXXRecordDecl 0x7fa81d8271f8 <line:4031:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d8273f8 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d8272b0 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d827660 <line:4037:1, col:8> col:8 implicit struct __check_complete
|   | `-StaticAssertDecl 0x7fa81d827848 <line:4039:5, col:60> col:5
|   |   |-BinaryOperator 0x7fa81d827760 <col:19, col:33> '_Bool' '>'
|   |   | |-UnaryExprOrTypeTraitExpr 0x7fa81d827708 <col:19, col:29> 'unsigned long' sizeof '_Tp'
|   |   | `-ImplicitCastExpr 0x7fa81d827748 <col:33> 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x7fa81d827728 <col:33> 'int' 0
|   |   `-StringLiteral 0x7fa81d827808 <col:36> 'const char [23]' lvalue "Type must be complete."
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d827a68 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
|   | |-private '__check_complete<_Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 &'
|   | |-TemplateTypeParmDecl 0x7fa81d8278a0 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d827db8 <line:4043:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d828038 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
|   | |-private '__check_complete<_Tp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 &&'
|   | |-TemplateTypeParmDecl 0x7fa81d827e70 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d828388 <line:4049:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d828828 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
|   | |-private '__check_complete<_Rp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl 0x7fa81d828440 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d8284a8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82a1d8 <line:4055:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82a5f8 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
|   | |-TemplateTypeParmDecl 0x7fa81d82a290 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82a880 <line:4061:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82ac48 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
|   | |-private '__check_complete<_Rp>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl 0x7fa81d82a938 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82a9a8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82afa8 <line:4066:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82b2e8 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
|   | |-TemplateTypeParmDecl 0x7fa81d82b060 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82b560 <line:4072:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82ba68 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
|   | |-TemplateTypeParmDecl 0x7fa81d82b618 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82b688 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82b6f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82be28 <line:4077:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82c328 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
|   | |-TemplateTypeParmDecl 0x7fa81d82bee0 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82bf48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82bfb8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82c698 <line:4083:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82cb98 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
|   | |-TemplateTypeParmDecl 0x7fa81d82c750 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82c7b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82c828 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82cf08 <line:4089:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82d408 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
|   | |-TemplateTypeParmDecl 0x7fa81d82cfc0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82d028 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82d098 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82d778 <line:4095:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82dc78 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
|   | |-TemplateTypeParmDecl 0x7fa81d82d830 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82d898 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82d908 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82e000 <line:4101:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82e508 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
|   | |-TemplateTypeParmDecl 0x7fa81d82e0b8 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82e128 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82e198 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82e878 <line:4107:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82ed78 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
|   | |-TemplateTypeParmDecl 0x7fa81d82e930 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82e998 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82ea08 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82f0e8 <line:4113:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82f5e8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
|   | |-TemplateTypeParmDecl 0x7fa81d82f1a0 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82f208 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82f278 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d82f958 <line:4119:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d82fe58 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
|   | |-TemplateTypeParmDecl 0x7fa81d82fa10 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d82fa78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d82fae8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d830bd8 <line:4125:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d8310d8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
|   | |-TemplateTypeParmDecl 0x7fa81d830c90 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d830cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d830d68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d831448 <line:4131:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d831948 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
|   | |-TemplateTypeParmDecl 0x7fa81d831500 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d831568 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d8315d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d831cb8 <line:4137:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d8321b8 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
|   | |-TemplateTypeParmDecl 0x7fa81d831d70 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d831dd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | |-TemplateTypeParmDecl 0x7fa81d831e48 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
|   | `-CXXRecordDecl 0x7fa81d832528 <line:4143:1, col:8> col:8 implicit struct __check_complete
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d832878 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
|   | |-private '__check_complete<_Class>'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
|   | |-TemplateTypeParmDecl 0x7fa81d8325e0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
|   | |-TemplateTypeParmDecl 0x7fa81d832648 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
|   | `-CXXRecordDecl 0x7fa81d832bd8 <line:4149:1, col:8> col:8 implicit struct __check_complete
|   |-TypeAliasTemplateDecl 0x7fa81d833890 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
|   | |-TemplateTypeParmDecl 0x7fa81d832c90 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d832cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d832e90 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d833020 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d833240 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl 0x7fa81d833830 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
|   |   `-DependentNameType 0x7fa81d8337c0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d8341e0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
|   | |-TemplateTypeParmDecl 0x7fa81d8338e0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d833948 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d833ae0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d833c70 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | `-TypeAliasDecl 0x7fa81d834180 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 0x7fa81d834110 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d836000 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
|   | |-TemplateTypeParmDecl 0x7fa81d834230 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d834298 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d834430 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d8345c0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d834750 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl 0x7fa81d835fa0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 0x7fa81d835f30 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d836b20 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
|   | |-TemplateTypeParmDecl 0x7fa81d836050 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d8360b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d836250 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d8363e0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d836570 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl 0x7fa81d836ac0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
|   |   `-DependentNameType 0x7fa81d836a50 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d837400 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
|   | |-TemplateTypeParmDecl 0x7fa81d836b70 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d836bd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d836d70 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d836f00 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | `-TypeAliasDecl 0x7fa81d8373a0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 0x7fa81d837330 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d838030 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
|   | |-TemplateTypeParmDecl 0x7fa81d837450 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d8374b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d837650 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
|   | | `-TemplateArgument type 'typename decay<_Fp>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d8377e0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
|   | | `-TemplateArgument type 'typename decay<_A0>::type'
|   | |-TemplateTypeParmDecl 0x7fa81d837970 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
|   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
|   | `-TypeAliasDecl 0x7fa81d837fd0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
|   |   `-DependentNameType 0x7fa81d837f60 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
|   |-FunctionTemplateDecl 0x7fa81d838428 <line:4223:1, line:4224:44> col:6 __invoke
|   | |-TemplateTypeParmDecl 0x7fa81d838080 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
|   | `-FunctionDecl 0x7fa81d838390 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
|   |   |-ParmVarDecl 0x7fa81d838110 <col:15> col:20 'struct std::__1::__any'
|   |   `-ParmVarDecl 0x7fa81d838248 <col:22, col:33> col:33 __args '_Args &&...'
|   |-FunctionTemplateDecl 0x7fa81d838778 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
|   | |-TemplateTypeParmDecl 0x7fa81d838488 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
|   | `-FunctionDecl 0x7fa81d8386e0 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
|   |   |-ParmVarDecl 0x7fa81d838520 <col:25> col:30 'struct std::__1::__any'
|   |   `-ParmVarDecl 0x7fa81d8385f8 <col:32, col:43> col:43 __args '_Args &&...'
|   |-FunctionTemplateDecl 0x7fa81d83d078 <line:4231:1, line:4221:27> line:4235:1 __invoke
|   | |-TemplateTypeParmDecl 0x7fa81d8387d8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d838848 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d8388b8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl 0x7fa81d839408 <line:4232:11, col:47> col:11 class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d83cfe0 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl 0x7fa81d839518 <col:10, col:16> col:16 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d8395b8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl 0x7fa81d8396f8 <col:33, col:44> col:44 referenced __args '_Args &&...'
|   |   |-CompoundStmt 0x7fa81d83d4c8 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d83d4b0 <col:7, line:4236:88>
|   |   |   `-CallExpr 0x7fa81d83d480 <col:23, col:88> '<dependent type>'
|   |   |     |-ParenExpr 0x7fa81d83d2f0 <col:23, col:54> '<dependent type>'
|   |   |     | `-BinaryOperator 0x7fa81d83d2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
|   |   |     |   |-CallExpr 0x7fa81d83d270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
|   |   |     |   | |-UnresolvedLookupExpr 0x7fa81d83d1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     |   | `-DeclRefExpr 0x7fa81d83d248 <col:44> '_A0' lvalue ParmVar 0x7fa81d8395b8 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr 0x7fa81d83d2a0 <col:51> '_Fp' lvalue ParmVar 0x7fa81d839518 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr 0x7fa81d83d460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d83d430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d83d368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |         `-DeclRefExpr 0x7fa81d83d408 <col:78> '_Args &&...' lvalue ParmVar 0x7fa81d8396f8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr 0x7fa81d83d0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d83d128 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d83e968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
|   | |-TemplateTypeParmDecl 0x7fa81d83d4e8 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d83d558 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d83d5c8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl 0x7fa81d83ddf8 <line:4239:11, col:47> col:11 class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d83e8d0 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl 0x7fa81d83df08 <col:20, col:26> col:26 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d83dfa8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl 0x7fa81d83e088 <col:43, col:54> col:54 referenced __args '_Args &&...'
|   |   |-CompoundStmt 0x7fa81d83edb8 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d83eda0 <col:7, line:4243:88>
|   |   |   `-CallExpr 0x7fa81d83ed70 <col:23, col:88> '<dependent type>'
|   |   |     |-ParenExpr 0x7fa81d83ebe0 <col:23, col:54> '<dependent type>'
|   |   |     | `-BinaryOperator 0x7fa81d83ebb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
|   |   |     |   |-CallExpr 0x7fa81d83eb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
|   |   |     |   | |-UnresolvedLookupExpr 0x7fa81d83ea98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     |   | `-DeclRefExpr 0x7fa81d83eb38 <col:44> '_A0' lvalue ParmVar 0x7fa81d83dfa8 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr 0x7fa81d83eb90 <col:51> '_Fp' lvalue ParmVar 0x7fa81d83df08 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr 0x7fa81d83ed50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d83ed20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d83ec58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |         `-DeclRefExpr 0x7fa81d83ecf8 <col:78> '_Args &&...' lvalue ParmVar 0x7fa81d83e088 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr 0x7fa81d83e9d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d83ea18 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d8401f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
|   | |-TemplateTypeParmDecl 0x7fa81d83edd8 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d83ee48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d83eeb8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl 0x7fa81d83f778 <line:4246:11, col:47> col:11 class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d840160 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl 0x7fa81d83f888 <col:10, col:16> col:16 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d83f928 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl 0x7fa81d83fa08 <col:33, col:44> col:44 referenced __args '_Args &&...'
|   |   |-CompoundStmt 0x7fa81d840588 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d840570 <col:7, line:4250:73>
|   |   |   `-CallExpr 0x7fa81d840540 <col:23, col:73> '<dependent type>'
|   |   |     |-ParenExpr 0x7fa81d8403b0 <col:23, col:39> '<dependent type>'
|   |   |     | `-BinaryOperator 0x7fa81d840388 <col:24, col:36> '<dependent type>' '.*'
|   |   |     |   |-CallExpr 0x7fa81d840338 <col:24, col:33> '<dependent type>'
|   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fa81d8402e0 <col:24, col:29> '<dependent type>' lvalue .get
|   |   |     |   |   `-DeclRefExpr 0x7fa81d8402b8 <col:24> '_A0' lvalue ParmVar 0x7fa81d83f928 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr 0x7fa81d840360 <col:36> '_Fp' lvalue ParmVar 0x7fa81d83f888 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr 0x7fa81d840520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d8404f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d840428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |         `-DeclRefExpr 0x7fa81d8404c8 <col:63> '_Args &&...' lvalue ParmVar 0x7fa81d83fa08 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr 0x7fa81d840260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d8402a8 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d842598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
|   | |-TemplateTypeParmDecl 0x7fa81d8405a8 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d840618 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d840688 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl 0x7fa81d841ba8 <line:4253:11, col:47> col:11 class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d842500 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl 0x7fa81d841cb8 <col:20, col:26> col:26 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d841d58 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl 0x7fa81d841e38 <col:43, col:54> col:54 referenced __args '_Args &&...'
|   |   |-CompoundStmt 0x7fa81d842928 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d842910 <col:7, line:4257:73>
|   |   |   `-CallExpr 0x7fa81d8428e0 <col:23, col:73> '<dependent type>'
|   |   |     |-ParenExpr 0x7fa81d842750 <col:23, col:39> '<dependent type>'
|   |   |     | `-BinaryOperator 0x7fa81d842728 <col:24, col:36> '<dependent type>' '.*'
|   |   |     |   |-CallExpr 0x7fa81d8426d8 <col:24, col:33> '<dependent type>'
|   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fa81d842680 <col:24, col:29> '<dependent type>' lvalue .get
|   |   |     |   |   `-DeclRefExpr 0x7fa81d842658 <col:24> '_A0' lvalue ParmVar 0x7fa81d841d58 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr 0x7fa81d842700 <col:36> '_Fp' lvalue ParmVar 0x7fa81d841cb8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr 0x7fa81d8428c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d842890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d8427c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |         `-DeclRefExpr 0x7fa81d842868 <col:63> '_Args &&...' lvalue ParmVar 0x7fa81d841e38 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr 0x7fa81d842600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d842648 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d8447a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
|   | |-TemplateTypeParmDecl 0x7fa81d842948 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d8429b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d842a28 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl 0x7fa81d843558 <line:4260:11, col:47> col:11 class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d844710 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl 0x7fa81d843668 <col:10, col:16> col:16 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d843708 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl 0x7fa81d8437e8 <col:33, col:44> col:44 referenced __args '_Args &&...'
|   |   |-CompoundStmt 0x7fa81d844c20 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d844c08 <col:7, line:4264:91>
|   |   |   `-CallExpr 0x7fa81d844bd8 <col:23, col:91> '<dependent type>'
|   |   |     |-ParenExpr 0x7fa81d844a48 <col:23, col:57> '<dependent type>'
|   |   |     | `-BinaryOperator 0x7fa81d844a20 <col:24, col:54> '<dependent type>' '.*'
|   |   |     |   |-ParenExpr 0x7fa81d8449d8 <col:24, col:51> '<dependent type>'
|   |   |     |   | `-UnaryOperator 0x7fa81d8449b8 <col:25, col:50> '<dependent type>' prefix '*'
|   |   |     |   |   `-CallExpr 0x7fa81d844988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
|   |   |     |   |     |-UnresolvedLookupExpr 0x7fa81d8448c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     |   |     `-DeclRefExpr 0x7fa81d844960 <col:46> '_A0' lvalue ParmVar 0x7fa81d843708 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr 0x7fa81d8449f8 <col:54> '_Fp' lvalue ParmVar 0x7fa81d843668 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr 0x7fa81d844bb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d844b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d844ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |         `-DeclRefExpr 0x7fa81d844b60 <col:81> '_Args &&...' lvalue ParmVar 0x7fa81d8437e8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr 0x7fa81d844810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d844858 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d8462b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
|   | |-TemplateTypeParmDecl 0x7fa81d844c40 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d844ca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d844d18 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
|   | |-TemplateTypeParmDecl 0x7fa81d8456a8 <line:4267:11, col:47> col:11 class depth 0 index 3
|   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d846220 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl 0x7fa81d8457b8 <col:20, col:26> col:26 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d845858 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
|   |   |-ParmVarDecl 0x7fa81d845938 <col:43, col:54> col:54 referenced __args '_Args &&...'
|   |   |-CompoundStmt 0x7fa81d846730 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d846718 <col:7, line:4271:91>
|   |   |   `-CallExpr 0x7fa81d8466e8 <col:23, col:91> '<dependent type>'
|   |   |     |-ParenExpr 0x7fa81d846558 <col:23, col:57> '<dependent type>'
|   |   |     | `-BinaryOperator 0x7fa81d846530 <col:24, col:54> '<dependent type>' '.*'
|   |   |     |   |-ParenExpr 0x7fa81d8464e8 <col:24, col:51> '<dependent type>'
|   |   |     |   | `-UnaryOperator 0x7fa81d8464c8 <col:25, col:50> '<dependent type>' prefix '*'
|   |   |     |   |   `-CallExpr 0x7fa81d846498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
|   |   |     |   |     |-UnresolvedLookupExpr 0x7fa81d8463d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     |   |     `-DeclRefExpr 0x7fa81d846470 <col:46> '_A0' lvalue ParmVar 0x7fa81d845858 '__a0' '_A0 &&'
|   |   |     |   `-DeclRefExpr 0x7fa81d846508 <col:54> '_Fp' lvalue ParmVar 0x7fa81d8457b8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr 0x7fa81d8466c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d846698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d8465d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |         `-DeclRefExpr 0x7fa81d846670 <col:81> '_Args &&...' lvalue ParmVar 0x7fa81d845938 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr 0x7fa81d846320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d846368 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d847928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
|   | |-TemplateTypeParmDecl 0x7fa81d846750 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d8467b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d8471e8 <line:4276:11, col:47> col:11 class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d847890 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
|   |   |-ParmVarDecl 0x7fa81d8472e8 <col:10, col:16> col:16 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d847388 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
|   |   |-CompoundStmt 0x7fa81d847b98 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d847b80 <col:7, line:4280:50>
|   |   |   `-BinaryOperator 0x7fa81d847b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
|   |   |     |-CallExpr 0x7fa81d847b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr 0x7fa81d847a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     | `-DeclRefExpr 0x7fa81d847ad8 <col:43> '_A0' lvalue ParmVar 0x7fa81d847388 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr 0x7fa81d847b30 <col:50> '_Fp' lvalue ParmVar 0x7fa81d8472e8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr 0x7fa81d847988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d8479d0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d854b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
|   | |-TemplateTypeParmDecl 0x7fa81d847bb8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d847c28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d854478 <line:4283:11, col:47> col:11 class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d854aa0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
|   |   |-ParmVarDecl 0x7fa81d854578 <col:20, col:26> col:26 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d854618 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
|   |   |-CompoundStmt 0x7fa81d854da8 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d854d90 <col:7, line:4287:50>
|   |   |   `-BinaryOperator 0x7fa81d854d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
|   |   |     |-CallExpr 0x7fa81d854d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr 0x7fa81d854c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     | `-DeclRefExpr 0x7fa81d854ce8 <col:43> '_A0' lvalue ParmVar 0x7fa81d854618 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr 0x7fa81d854d40 <col:50> '_Fp' lvalue ParmVar 0x7fa81d854578 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr 0x7fa81d854b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d854be0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d855c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
|   | |-TemplateTypeParmDecl 0x7fa81d854dc8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d854e38 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d855698 <line:4290:11, col:47> col:11 class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d855bf0 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
|   |   |-ParmVarDecl 0x7fa81d855798 <col:10, col:16> col:16 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d855838 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
|   |   |-CompoundStmt 0x7fa81d855e50 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d855e38 <col:7, line:4294:35>
|   |   |   `-BinaryOperator 0x7fa81d855e10 <col:23, col:35> '<dependent type>' '.*'
|   |   |     |-CallExpr 0x7fa81d855dc0 <col:23, col:32> '<dependent type>'
|   |   |     | `-CXXDependentScopeMemberExpr 0x7fa81d855d68 <col:23, col:28> '<dependent type>' lvalue .get
|   |   |     |   `-DeclRefExpr 0x7fa81d855d40 <col:23> '_A0' lvalue ParmVar 0x7fa81d855838 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr 0x7fa81d855de8 <col:35> '_Fp' lvalue ParmVar 0x7fa81d855798 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr 0x7fa81d855ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d855d30 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d856b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
|   | |-TemplateTypeParmDecl 0x7fa81d855e70 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d855ed8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d8565d8 <line:4297:11, col:47> col:11 class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d856ab0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
|   |   |-ParmVarDecl 0x7fa81d8566d8 <col:20, col:26> col:26 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d856778 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
|   |   |-CompoundStmt 0x7fa81d856d10 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d856cf8 <col:7, line:4301:35>
|   |   |   `-BinaryOperator 0x7fa81d856cd0 <col:23, col:35> '<dependent type>' '.*'
|   |   |     |-CallExpr 0x7fa81d856c80 <col:23, col:32> '<dependent type>'
|   |   |     | `-CXXDependentScopeMemberExpr 0x7fa81d856c28 <col:23, col:28> '<dependent type>' lvalue .get
|   |   |     |   `-DeclRefExpr 0x7fa81d856c00 <col:23> '_A0' lvalue ParmVar 0x7fa81d856778 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr 0x7fa81d856ca8 <col:35> '_Fp' lvalue ParmVar 0x7fa81d8566d8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr 0x7fa81d856ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d856bf0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d858098 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
|   | |-TemplateTypeParmDecl 0x7fa81d856d30 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d856d98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d8578c8 <line:4304:11, col:47> col:11 class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d858000 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
|   |   |-ParmVarDecl 0x7fa81d8579c8 <col:10, col:16> col:16 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d857a68 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
|   |   |-CompoundStmt 0x7fa81d858348 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d858330 <col:7, line:4308:53>
|   |   |   `-BinaryOperator 0x7fa81d858308 <col:23, col:53> '<dependent type>' '.*'
|   |   |     |-ParenExpr 0x7fa81d8582c0 <col:23, col:50> '<dependent type>'
|   |   |     | `-UnaryOperator 0x7fa81d8582a0 <col:24, col:49> '<dependent type>' prefix '*'
|   |   |     |   `-CallExpr 0x7fa81d858270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
|   |   |     |     |-UnresolvedLookupExpr 0x7fa81d8581a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     |     `-DeclRefExpr 0x7fa81d858248 <col:45> '_A0' lvalue ParmVar 0x7fa81d857a68 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr 0x7fa81d8582e0 <col:53> '_Fp' lvalue ParmVar 0x7fa81d8579c8 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr 0x7fa81d8580f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d858140 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d8594a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
|   | |-TemplateTypeParmDecl 0x7fa81d858368 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d8583d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
|   | |-TemplateTypeParmDecl 0x7fa81d858d68 <line:4311:11, col:47> col:11 class depth 0 index 2
|   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
|   | `-FunctionDecl 0x7fa81d859410 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
|   |   |-ParmVarDecl 0x7fa81d858e68 <col:20, col:26> col:26 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d858f08 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
|   |   |-CompoundStmt 0x7fa81d859758 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d859740 <col:7, line:4315:53>
|   |   |   `-BinaryOperator 0x7fa81d859718 <col:23, col:53> '<dependent type>' '.*'
|   |   |     |-ParenExpr 0x7fa81d8596d0 <col:23, col:50> '<dependent type>'
|   |   |     | `-UnaryOperator 0x7fa81d8596b0 <col:24, col:49> '<dependent type>' prefix '*'
|   |   |     |   `-CallExpr 0x7fa81d859680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
|   |   |     |     |-UnresolvedLookupExpr 0x7fa81d8595b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     |     `-DeclRefExpr 0x7fa81d859658 <col:45> '_A0' lvalue ParmVar 0x7fa81d858f08 '__a0' '_A0 &&'
|   |   |     `-DeclRefExpr 0x7fa81d8596f0 <col:53> '_Fp' lvalue ParmVar 0x7fa81d858e68 '__f' '_Fp &&'
|   |   |-AlwaysInlineAttr 0x7fa81d859508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d859550 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d85a288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
|   | |-TemplateTypeParmDecl 0x7fa81d859778 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d8597e8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | `-FunctionDecl 0x7fa81d85a1f0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl 0x7fa81d8598e8 <col:10, col:16> col:16 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d859a28 <col:21, col:32> col:32 referenced __args '_Args &&...'
|   |   |-CompoundStmt 0x7fa81d85a648 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d85a630 <col:7, line:4323:80>
|   |   |   `-CallExpr 0x7fa81d85a600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
|   |   |     |-CallExpr 0x7fa81d85a460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr 0x7fa81d85a398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     | `-DeclRefExpr 0x7fa81d85a438 <col:43> '_Fp' lvalue ParmVar 0x7fa81d8598e8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr 0x7fa81d85a5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d85a5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d85a4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |         `-DeclRefExpr 0x7fa81d85a588 <col:70> '_Args &&...' lvalue ParmVar 0x7fa81d859a28 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr 0x7fa81d85a2e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d85a330 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d85b078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
|   | |-TemplateTypeParmDecl 0x7fa81d85a668 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d85a6d8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | `-FunctionDecl 0x7fa81d85afe0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
|   |   |-ParmVarDecl 0x7fa81d85a7d8 <col:20, col:26> col:26 referenced __f '_Fp &&'
|   |   |-ParmVarDecl 0x7fa81d85a8b8 <col:31, col:42> col:42 referenced __args '_Args &&...'
|   |   |-CompoundStmt 0x7fa81d85b438 <line:4221:5, col:27>
|   |   | `-ReturnStmt 0x7fa81d85b420 <col:7, line:4329:80>
|   |   |   `-CallExpr 0x7fa81d85b3f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
|   |   |     |-CallExpr 0x7fa81d85b250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr 0x7fa81d85b188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     | `-DeclRefExpr 0x7fa81d85b228 <col:43> '_Fp' lvalue ParmVar 0x7fa81d85a7d8 '__f' '_Fp &&'
|   |   |     `-PackExpansionExpr 0x7fa81d85b3d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d85b3a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d85b2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |         `-DeclRefExpr 0x7fa81d85b378 <col:70> '_Args &&...' lvalue ParmVar 0x7fa81d85a8b8 '__args' '_Args &&...'
|   |   |-AlwaysInlineAttr 0x7fa81d85b0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d85b120 <col:51, col:74> Hidden
|   |-ClassTemplateDecl 0x7fa81d85b668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
|   | |-TemplateTypeParmDecl 0x7fa81d85b458 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl 0x7fa81d85b4c8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d85b538 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
|   | `-CXXRecordDecl 0x7fa81d85b5d0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
|   |   |-private '__check_complete<_Fp>'
|   |   |-CXXRecordDecl 0x7fa81d85ba88 <col:1, col:8> col:8 implicit struct __invokable_r
|   |   |-TypeAliasDecl 0x7fa81d85beb8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
|   |   | `-DecltypeType 0x7fa81d85be80 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
|   |   |   `-CallExpr 0x7fa81d85be00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d85bb50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fa81d838428 0x7fa81d83d078 0x7fa81d8401f8 0x7fa81d8447a8 0x7fa81d847928 0x7fa81d855c88 0x7fa81d858098 0x7fa81d85a288
|   |   |     |-CallExpr 0x7fa81d85bcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
|   |   |     | `-UnresolvedLookupExpr 0x7fa81d85bc20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   |   |     `-PackExpansionExpr 0x7fa81d85bde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
|   |   |       `-CallExpr 0x7fa81d85bdb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
|   |   |         `-UnresolvedLookupExpr 0x7fa81d85bd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   |   `-VarDecl 0x7fa81d85bf28 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr 0x7fa81d85cc70 <line:4343:9, line:4351:18> '<dependent type>' lvalue
|   |-TypeAliasTemplateDecl 0x7fa81d85d088 <line:4354:1, line:4355:54> col:1 __invokable
|   | |-TemplateTypeParmDecl 0x7fa81d85ccd0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d85cd38 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | `-TypeAliasDecl 0x7fa81d85d028 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
|   |   `-TemplateSpecializationType 0x7fa81d85cef0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
|   |     |-TemplateArgument type 'void'
|   |     |-TemplateArgument type '_Fp'
|   |     `-TemplateArgument type '_Args...'
|   |-ClassTemplateDecl 0x7fa81d85d3f8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
|   | |-NonTypeTemplateParmDecl 0x7fa81d85d0e8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
|   | |-NonTypeTemplateParmDecl 0x7fa81d85d150 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
|   | |-TemplateTypeParmDecl 0x7fa81d85d1a8 <col:46, col:52> col:52 class depth 0 index 2 _Ret
|   | |-TemplateTypeParmDecl 0x7fa81d85d218 <col:58, col:64> col:64 class depth 0 index 3 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d85d288 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
|   | `-CXXRecordDecl 0x7fa81d85d360 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
|   |   |-CXXRecordDecl 0x7fa81d85d810 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
|   |   `-VarDecl 0x7fa81d85d8b8 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
|   |     `-CXXBoolLiteralExpr 0x7fa81d85d918 <col:29> '_Bool' false
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d85dde8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl 0x7fa81d85d950 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl 0x7fa81d85d9b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d85da28 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
|   | |-CXXRecordDecl 0x7fa81d85e1c0 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
|   | |-TypedefDecl 0x7fa81d85e268 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
|   | | `-InjectedClassNameType 0x7fa81d85df50 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
|   | |   `-ClassTemplatePartialSpecialization 0x7fa81d85dde8 '__nothrow_invokable_r_imp'
|   | |-FunctionTemplateDecl 0x7fa81d860740 <line:4367:5, line:4368:38> col:17 __test_noexcept
|   | | |-TemplateTypeParmDecl 0x7fa81d85e2c0 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
|   | | `-CXXMethodDecl 0x7fa81d8606a8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
|   | |   `-ParmVarDecl 0x7fa81d85e350 <col:33> col:36 '_Tp'
|   | `-VarDecl 0x7fa81d8607a8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
|   |   `-CXXNoexceptExpr 0x7fa81d860c88 <col:31, line:4371:76> '_Bool'
|   |     `-CallExpr 0x7fa81d860c58 <line:4370:40, line:4371:75> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x7fa81d8608a8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fa81d860740
|   |       `-CallExpr 0x7fa81d860c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x7fa81d860970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fa81d838428 0x7fa81d83d078 0x7fa81d8401f8 0x7fa81d8447a8 0x7fa81d847928 0x7fa81d855c88 0x7fa81d858098 0x7fa81d85a288
|   |         |-CallExpr 0x7fa81d860ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
|   |         | `-UnresolvedLookupExpr 0x7fa81d860a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   |         `-PackExpansionExpr 0x7fa81d860c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
|   |           `-CallExpr 0x7fa81d860bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
|   |             `-UnresolvedLookupExpr 0x7fa81d860b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d861168 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument pack
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-TemplateTypeParmDecl 0x7fa81d860cd0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl 0x7fa81d860d38 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d860da8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
|   | |-CXXRecordDecl 0x7fa81d861540 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
|   | `-VarDecl 0x7fa81d8615e8 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
|   |   `-CXXNoexceptExpr 0x7fa81d861960 <col:31, line:4378:75> '_Bool'
|   |     `-CallExpr 0x7fa81d861928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x7fa81d861678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fa81d838428 0x7fa81d83d078 0x7fa81d8401f8 0x7fa81d8447a8 0x7fa81d847928 0x7fa81d855c88 0x7fa81d858098 0x7fa81d85a288
|   |       |-CallExpr 0x7fa81d8617e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
|   |       | `-UnresolvedLookupExpr 0x7fa81d861748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   |       `-PackExpansionExpr 0x7fa81d861908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
|   |         `-CallExpr 0x7fa81d8618e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
|   |           `-UnresolvedLookupExpr 0x7fa81d861848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   |-TypeAliasTemplateDecl 0x7fa81d8621b8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
|   | |-TemplateTypeParmDecl 0x7fa81d8619a8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
|   | |-TemplateTypeParmDecl 0x7fa81d861a18 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d861a88 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
|   | `-TypeAliasDecl 0x7fa81d862158 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
|   |   `-TemplateSpecializationType 0x7fa81d861f90 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr 0x7fa81d861cf0 <line:4384:13, col:49> '<dependent type>' lvalue
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr 0x7fa81d861e10 <line:4385:13, col:28> '<dependent type>' lvalue
|   |     |-TemplateArgument type '_Ret'
|   |     |-TemplateArgument type '_Fp'
|   |     `-TemplateArgument type '_Args...'
|   |-ClassTemplateDecl 0x7fa81d8623a0 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
|   | |-TemplateTypeParmDecl 0x7fa81d862208 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d862278 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | `-CXXRecordDecl 0x7fa81d862308 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
|   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
|   |   `-CXXRecordDecl 0x7fa81d863258 <col:1, col:8> col:8 implicit struct __invoke_of
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d863618 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
|   | |-public '__invoke_of<_Fp, _Args...>'
|   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
|   | |-TemplateTypeParmDecl 0x7fa81d863310 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
|   | |-TemplateTypeParmDecl 0x7fa81d863378 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
|   | |-TypeVisibilityAttr 0x7fa81d863770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d8639e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
|   |-TypeAliasTemplateDecl 0x7fa81d863ce0 <line:4406:1, col:67> col:22 result_of_t
|   | |-TemplateTypeParmDecl 0x7fa81d863aa0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d863c80 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d863c10 'typename result_of<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d863e48 <line:4440:1, col:29> col:29 __is_swappable
|   | |-TemplateTypeParmDecl 0x7fa81d863d30 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d863db0 <col:22, col:29> col:29 struct __is_swappable
|   |-ClassTemplateDecl 0x7fa81d864178 <line:4441:1, col:29> col:29 __is_nothrow_swappable
|   | |-TemplateTypeParmDecl 0x7fa81d864058 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d8640e0 <col:22, col:29> col:29 struct __is_nothrow_swappable
|   |-FunctionTemplateDecl 0x7fa81d864d38 <line:4443:1, line:4460:1> line:4454:1 swap
|   | |-TemplateTypeParmDecl 0x7fa81d864388 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-FunctionDecl 0x7fa81d864ca0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
|   | | |-ParmVarDecl 0x7fa81d864888 <col:6, col:11> col:11 referenced __x '_Tp &'
|   | | |-ParmVarDecl 0x7fa81d8648f8 <col:16, col:21> col:21 referenced __y '_Tp &'
|   | | |-CompoundStmt 0x7fa81d865218 <line:4456:1, line:4460:1>
|   | | | |-DeclStmt 0x7fa81d864fa0 <line:4457:5, col:30>
|   | | | | `-VarDecl 0x7fa81d864e88 <col:5, col:29> col:9 referenced __t '_Tp' callinit
|   | | | |   `-ParenListExpr 0x7fa81d864f70 <col:12, col:29> 'NULL TYPE'
|   | | | |     `-CallExpr 0x7fa81d864f10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
|   | | | |       |-UnresolvedLookupExpr 0x7fa81d864e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   | | | |       `-DeclRefExpr 0x7fa81d864ee8 <col:25> '_Tp' lvalue ParmVar 0x7fa81d864888 '__x' '_Tp &'
|   | | | |-BinaryOperator 0x7fa81d8650c0 <line:4458:5, col:26> '<dependent type>' '='
|   | | | | |-DeclRefExpr 0x7fa81d864fb8 <col:5> '_Tp' lvalue ParmVar 0x7fa81d864888 '__x' '_Tp &'
|   | | | | `-CallExpr 0x7fa81d865090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
|   | | | |   |-UnresolvedLookupExpr 0x7fa81d865010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   | | | |   `-DeclRefExpr 0x7fa81d865068 <col:23> '_Tp' lvalue ParmVar 0x7fa81d8648f8 '__y' '_Tp &'
|   | | | `-BinaryOperator 0x7fa81d8651f0 <line:4459:5, col:26> '<dependent type>' '='
|   | | |   |-DeclRefExpr 0x7fa81d8650e8 <col:5> '_Tp' lvalue ParmVar 0x7fa81d8648f8 '__y' '_Tp &'
|   | | |   `-CallExpr 0x7fa81d8651c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
|   | | |     |-UnresolvedLookupExpr 0x7fa81d865140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   | | |     `-DeclRefExpr 0x7fa81d865198 <col:23> '_Tp' lvalue Var 0x7fa81d864e88 '__t' '_Tp'
|   | | |-AlwaysInlineAttr 0x7fa81d864d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr 0x7fa81d864de0 <col:51, col:74> Hidden
|   | `-FunctionDecl 0x7fa81d1f3a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4444:1, line:4460:1> line:4454:1 used swap 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type (unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)' inline
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-ParmVarDecl 0x7fa81d1f3878 <col:6, col:11> col:11 used __x 'unsigned long &'
|   |   |-ParmVarDecl 0x7fa81d1f38e8 <col:16, col:21> col:21 used __y 'unsigned long &'
|   |   |-CompoundStmt 0x7fa81d20bb30 <line:4456:1, line:4460:1>
|   |   | |-DeclStmt 0x7fa81d20b7b8 <line:4457:5, col:30>
|   |   | | `-VarDecl 0x7fa81d209e08 <col:5, col:28> col:9 used __t 'unsigned long':'unsigned long' callinit
|   |   | |   `-ImplicitCastExpr 0x7fa81d20b7a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> 'typename remove_reference<unsigned long &>::type':'unsigned long' <LValueToRValue>
|   |   | |     `-CallExpr 0x7fa81d20b740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> 'typename remove_reference<unsigned long &>::type':'unsigned long' xvalue
|   |   | |       |-ImplicitCastExpr 0x7fa81d20b728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> 'typename remove_reference<unsigned long &>::type &&(*)(unsigned long &&) noexcept' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x7fa81d20b460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' lvalue Function 0x7fa81d20b320 'move' 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' (FunctionTemplate 0x7fa81c10a408 'move')
|   |   | |       `-DeclRefExpr 0x7fa81d209ec0 <col:25> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81d1f3878 '__x' 'unsigned long &'
|   |   | |-BinaryOperator 0x7fa81d20b958 <line:4458:5, col:26> 'unsigned long':'unsigned long' lvalue '='
|   |   | | |-DeclRefExpr 0x7fa81d20b7d0 <col:5> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81d1f3878 '__x' 'unsigned long &'
|   |   | | `-ImplicitCastExpr 0x7fa81d20b940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> 'typename remove_reference<unsigned long &>::type':'unsigned long' <LValueToRValue>
|   |   | |   `-CallExpr 0x7fa81d20b910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> 'typename remove_reference<unsigned long &>::type':'unsigned long' xvalue
|   |   | |     |-ImplicitCastExpr 0x7fa81d20b8f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> 'typename remove_reference<unsigned long &>::type &&(*)(unsigned long &&) noexcept' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x7fa81d20b8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' lvalue Function 0x7fa81d20b320 'move' 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' (FunctionTemplate 0x7fa81c10a408 'move')
|   |   | |     `-DeclRefExpr 0x7fa81d20b850 <col:23> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81d1f38e8 '__y' 'unsigned long &'
|   |   | `-BinaryOperator 0x7fa81d20bb08 <line:4459:5, col:26> 'unsigned long':'unsigned long' lvalue '='
|   |   |   |-DeclRefExpr 0x7fa81d20b980 <col:5> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81d1f38e8 '__y' 'unsigned long &'
|   |   |   `-ImplicitCastExpr 0x7fa81d20baf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> 'typename remove_reference<unsigned long &>::type':'unsigned long' <LValueToRValue>
|   |   |     `-CallExpr 0x7fa81d20bac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> 'typename remove_reference<unsigned long &>::type':'unsigned long' xvalue
|   |   |       |-ImplicitCastExpr 0x7fa81d20baa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> 'typename remove_reference<unsigned long &>::type &&(*)(unsigned long &&) noexcept' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x7fa81d20ba68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' lvalue Function 0x7fa81d20b320 'move' 'typename remove_reference<unsigned long &>::type &&(unsigned long &&) noexcept' (FunctionTemplate 0x7fa81c10a408 'move')
|   |   |       `-DeclRefExpr 0x7fa81d20ba00 <col:23> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d209e08 '__t' 'unsigned long':'unsigned long'
|   |   `-AlwaysInlineAttr 0x7fa81d1f3b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-FunctionTemplateDecl 0x7fa81d865ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
|   | |-TemplateTypeParmDecl 0x7fa81d865248 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d8652c8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | `-FunctionDecl 0x7fa81d865b10 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
|   |   |-ParmVarDecl 0x7fa81d865768 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
|   |   |-ParmVarDecl 0x7fa81d8658b8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
|   |   |-AlwaysInlineAttr 0x7fa81d865c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d865c50 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d8662c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
|   | |-TemplateTypeParmDecl 0x7fa81d865c60 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
|   | |-TemplateTypeParmDecl 0x7fa81d865cc8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
|   | `-FunctionDecl 0x7fa81d866230 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
|   |   |-ParmVarDecl 0x7fa81d865d98 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
|   |   |-ParmVarDecl 0x7fa81d865e08 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
|   |   |-CompoundStmt 0x7fa81d8664a8 <line:4476:1, line:4478:1>
|   |   | `-CallExpr 0x7fa81d866470 <line:4477:5, col:20> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr 0x7fa81d866380 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fa81d865ba8 0x7fa81d864d38
|   |   |   |-UnaryOperator 0x7fa81d866408 <col:10, col:11> '<dependent type>' prefix '*'
|   |   |   | `-DeclRefExpr 0x7fa81d8663e0 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fa81d865d98 '__a' '_ForwardIterator1'
|   |   |   `-UnaryOperator 0x7fa81d866450 <col:16, col:17> '<dependent type>' prefix '*'
|   |   |     `-DeclRefExpr 0x7fa81d866428 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fa81d865e08 '__b' '_ForwardIterator2'
|   |   |-AlwaysInlineAttr 0x7fa81d866328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d866370 <col:51, col:74> Hidden
|   |-NamespaceDecl 0x7fa81d8664c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
|   | |-ClassTemplateDecl 0x7fa81d868a00 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
|   | | |-TemplateTypeParmDecl 0x7fa81d866530 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl 0x7fa81d8665a8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
|   | | | `-TemplateArgument type '_Tp'
|   | | |-NonTypeTemplateParmDecl 0x7fa81d8668b0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
|   | | | `-TemplateArgument expr
|   | | |   `-BinaryOperator 0x7fa81d866878 <col:27, col:66> '<dependent type>' '&&'
|   | | |     |-UnaryOperator 0x7fa81d866728 <col:27, col:42> '<dependent type>' prefix '!'
|   | | |     | `-DependentScopeDeclRefExpr 0x7fa81d8666e8 <col:28, col:42> '<dependent type>' lvalue
|   | | |     `-UnaryOperator 0x7fa81d866858 <col:51, col:66> '<dependent type>' prefix '!'
|   | | |       `-DependentScopeDeclRefExpr 0x7fa81d866818 <col:52, col:66> '<dependent type>' lvalue
|   | | `-CXXRecordDecl 0x7fa81d866930 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
|   | |   |-CXXRecordDecl 0x7fa81d868d00 <col:1, col:8> col:8 implicit struct __swappable_with
|   | |   |-FunctionTemplateDecl 0x7fa81d8693b8 <line:4490:5, line:4492:20> col:5 __test_swap
|   | |   | |-TemplateTypeParmDecl 0x7fa81d868d98 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
|   | |   | |-TemplateTypeParmDecl 0x7fa81d868e08 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
|   | |   | `-CXXMethodDecl 0x7fa81d869320 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
|   | |   |   `-ParmVarDecl 0x7fa81d869178 <col:17> col:20 'int'
|   | |   |-FunctionTemplateDecl 0x7fa81d869678 <line:4493:5, line:4494:34> col:18 __test_swap
|   | |   | |-TemplateTypeParmDecl 0x7fa81d869410 <line:4493:15> col:15 class depth 1 index 0
|   | |   | |-TemplateTypeParmDecl 0x7fa81d869478 <col:22> col:22 class depth 1 index 1
|   | |   | `-CXXMethodDecl 0x7fa81d8695e0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
|   | |   |   `-ParmVarDecl 0x7fa81d869520 <col:30> col:34 'long'
|   | |   |-TypedefDecl 0x7fa81d8698c8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
|   | |   | `-DecltypeType 0x7fa81d869890 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
|   | |   |   `-ParenExpr 0x7fa81d869828 <col:22, col:47> '<dependent type>'
|   | |   |     `-CallExpr 0x7fa81d8697f8 <col:23, col:46> '<dependent type>'
|   | |   |       |-UnresolvedLookupExpr 0x7fa81d869708 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fa81d869678 0x7fa81d8693b8
|   | |   |       `-IntegerLiteral 0x7fa81d8697d8 <col:45> 'int' 0
|   | |   |-TypedefDecl 0x7fa81d869b18 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
|   | |   | `-DecltypeType 0x7fa81d869ae0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
|   | |   |   `-ParenExpr 0x7fa81d869a78 <col:22, col:47> '<dependent type>'
|   | |   |     `-CallExpr 0x7fa81d869a48 <col:23, col:46> '<dependent type>'
|   | |   |       |-UnresolvedLookupExpr 0x7fa81d869958 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fa81d869678 0x7fa81d8693b8
|   | |   |       `-IntegerLiteral 0x7fa81d869a28 <col:45> 'int' 0
|   | |   `-VarDecl 0x7fa81d869b80 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
|   | |     `-BinaryOperator 0x7fa81d869fb8 <col:31, line:4501:57> '<dependent type>' '&&'
|   | |       |-UnaryOperator 0x7fa81d869da8 <line:4500:31, col:57> '<dependent type>' prefix '!'
|   | |       | `-DependentScopeDeclRefExpr 0x7fa81d869d68 <col:32, col:57> '<dependent type>' lvalue
|   | |       `-UnaryOperator 0x7fa81d869f98 <line:4501:31, col:57> '<dependent type>' prefix '!'
|   | |         `-DependentScopeDeclRefExpr 0x7fa81d869f58 <col:32, col:57> '<dependent type>' lvalue
|   | |-ClassTemplatePartialSpecializationDecl 0x7fa81d86a2c8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | |-TemplateArgument type 'type-parameter-0-0'
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | |-TemplateArgument integral 0
|   | | |-TemplateTypeParmDecl 0x7fa81d86a000 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl 0x7fa81d86a068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | | `-CXXRecordDecl 0x7fa81d86a5f0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
|   | |-ClassTemplateDecl 0x7fa81d86b160 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
|   | | |-TemplateTypeParmDecl 0x7fa81d86a6a8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl 0x7fa81d86a728 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
|   | | | `-TemplateArgument type '_Tp'
|   | | |-NonTypeTemplateParmDecl 0x7fa81d86b048 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
|   | | | `-TemplateArgument expr
|   | | |   `-DependentScopeDeclRefExpr 0x7fa81d86aff8 <col:57, col:85> '<dependent type>' lvalue
|   | | `-CXXRecordDecl 0x7fa81d86b0c8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
|   | |   |-CXXRecordDecl 0x7fa81d86b460 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
|   | |   `-VarDecl 0x7fa81d86b508 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
|   | |     `-BinaryOperator 0x7fa81d86bae8 <line:4511:7, line:4512:66> '_Bool' '&&'
|   | |       |-CXXNoexceptExpr 0x7fa81d86b800 <line:4511:7, col:66> '_Bool'
|   | |       | `-CallExpr 0x7fa81d86b7c8 <col:16, col:65> '<dependent type>'
|   | |       |   |-UnresolvedLookupExpr 0x7fa81d86b568 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fa81d865ba8 0x7fa81d864d38
|   | |       |   |-CallExpr 0x7fa81d86b6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
|   | |       |   | `-UnresolvedLookupExpr 0x7fa81d86b608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   | |       |   `-CallExpr 0x7fa81d86b7a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
|   | |       |     `-UnresolvedLookupExpr 0x7fa81d86b708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   | |       `-CXXNoexceptExpr 0x7fa81d86bac0 <line:4512:7, col:66> '_Bool'
|   | |         `-CallExpr 0x7fa81d86ba88 <col:16, col:65> '<dependent type>'
|   | |           |-UnresolvedLookupExpr 0x7fa81d86b828 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fa81d865ba8 0x7fa81d864d38
|   | |           |-CallExpr 0x7fa81d86b960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
|   | |           | `-UnresolvedLookupExpr 0x7fa81d86b8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   | |           `-CallExpr 0x7fa81d86ba60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
|   | |             `-UnresolvedLookupExpr 0x7fa81d86b9c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa81d001f80
|   | `-ClassTemplatePartialSpecializationDecl 0x7fa81d86bdf8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   |-TemplateArgument type 'type-parameter-0-0'
|   |   |-TemplateArgument type 'type-parameter-0-1'
|   |   |-TemplateArgument integral 0
|   |   |-TemplateTypeParmDecl 0x7fa81d86bb30 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   |   |-TemplateTypeParmDecl 0x7fa81d86bb98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   |   `-CXXRecordDecl 0x7fa81d86c120 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
|   |-ClassTemplateDecl 0x7fa81d86c2f8 prev 0x7fa81d863e48 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
|   | |-TemplateTypeParmDecl 0x7fa81d86c1d8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d86c260 prev 0x7fa81d863db0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
|   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
|   |   `-CXXRecordDecl 0x7fa81d86ca68 <col:1, col:8> col:8 implicit struct __is_swappable
|   |-ClassTemplateDecl 0x7fa81d86cc38 prev 0x7fa81d864178 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
|   | |-TemplateTypeParmDecl 0x7fa81d86cb20 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d86cba0 prev 0x7fa81d8640e0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
|   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
|   |   `-CXXRecordDecl 0x7fa81d86e468 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
|   |-ClassTemplateDecl 0x7fa81d86e638 <line:4589:1, line:4593:1> line:4590:8 underlying_type
|   | |-TemplateTypeParmDecl 0x7fa81d86e520 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d86e5a0 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
|   |   |-CXXRecordDecl 0x7fa81d86e8b0 <col:1, col:8> col:8 implicit struct underlying_type
|   |   `-TypedefDecl 0x7fa81d86e9f0 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
|   |     `-UnaryTransformType 0x7fa81d86e9a0 '__underlying_type(_Tp)' dependent underlying_type
|   |       `-TemplateTypeParmType 0x7fa81d86e560 '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm 0x7fa81d86e520 '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81d86ecb0 <line:4596:1, col:79> col:22 underlying_type_t
|   | |-TemplateTypeParmDecl 0x7fa81d86ea68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x7fa81d86ec50 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
|   |   `-DependentNameType 0x7fa81d86ebe0 'typename underlying_type<_Tp>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d86ef98 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
|   | |-TemplateTypeParmDecl 0x7fa81d86ed00 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d86ee88 <col:22, col:43> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d86ee38 <col:29, col:43> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d86ef00 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
|   |   |-CXXRecordDecl 0x7fa81d86f260 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
|   |   |-TypedefDecl 0x7fa81d86f420 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
|   |   | `-DependentNameType 0x7fa81d86f3b0 'typename underlying_type<_Tp>::type' dependent
|   |   `-TypedefDecl 0x7fa81d86f5d8 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
|   |     `-DecltypeType 0x7fa81d86f5a0 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
|   |       `-BinaryOperator 0x7fa81d86f538 <col:22, col:34> '<dependent type>' '+'
|   |         |-ParenExpr 0x7fa81d86f4f8 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
|   |         | `-CStyleCastExpr 0x7fa81d86f4d0 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
|   |         |   `-IntegerLiteral 0x7fa81d86f4a0 <col:29> 'int' 1
|   |         `-IntegerLiteral 0x7fa81d86f518 <col:34> 'int' 0
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d86f830 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d86f650 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d86fac0 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
|   |-FunctionDecl 0x7fa81d86fc88 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
|   | |-ParmVarDecl 0x7fa81d86fbc0 <col:27, col:31> col:31 used __val 'int'
|   | |-CompoundStmt 0x7fa81d86fdd8 <col:38, col:54>
|   | | `-ReturnStmt 0x7fa81d86fdc0 <col:40, col:47>
|   | |   `-ImplicitCastExpr 0x7fa81d86fda8 <col:47> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x7fa81d86fd80 <col:47> 'int' lvalue ParmVar 0x7fa81d86fbc0 '__val' 'int'
|   | |-AlwaysInlineAttr 0x7fa81d86fd28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81d86fd70 <col:51, col:74> Hidden
|   |-FunctionDecl 0x7fa81d870318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
|   | |-ParmVarDecl 0x7fa81d870248 <col:32, col:41> col:41 used __val 'unsigned int'
|   | |-CompoundStmt 0x7fa81d870468 <col:48, col:64>
|   | | `-ReturnStmt 0x7fa81d870450 <col:50, col:57>
|   | |   `-ImplicitCastExpr 0x7fa81d870438 <col:57> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x7fa81d870410 <col:57> 'unsigned int' lvalue ParmVar 0x7fa81d870248 '__val' 'unsigned int'
|   | |-AlwaysInlineAttr 0x7fa81d8703b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81d870400 <col:51, col:74> Hidden
|   |-FunctionDecl 0x7fa81d870598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
|   | |-ParmVarDecl 0x7fa81d8704d0 <col:28, col:33> col:33 used __val 'long'
|   | |-CompoundStmt 0x7fa81d8706e8 <col:40, col:56>
|   | | `-ReturnStmt 0x7fa81d8706d0 <col:42, col:49>
|   | |   `-ImplicitCastExpr 0x7fa81d8706b8 <col:49> 'long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x7fa81d870690 <col:49> 'long' lvalue ParmVar 0x7fa81d8704d0 '__val' 'long'
|   | |-AlwaysInlineAttr 0x7fa81d870638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81d870680 <col:51, col:74> Hidden
|   |-FunctionDecl 0x7fa81d870818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
|   | |-ParmVarDecl 0x7fa81d870750 <col:37, col:51> col:51 used __val 'unsigned long'
|   | |-CompoundStmt 0x7fa81d870968 <col:58, col:74>
|   | | `-ReturnStmt 0x7fa81d870950 <col:60, col:67>
|   | |   `-ImplicitCastExpr 0x7fa81d870938 <col:67> 'unsigned long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x7fa81d870910 <col:67> 'unsigned long' lvalue ParmVar 0x7fa81d870750 '__val' 'unsigned long'
|   | |-AlwaysInlineAttr 0x7fa81d8708b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81d870900 <col:51, col:74> Hidden
|   |-FunctionDecl 0x7fa81d870a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
|   | |-ParmVarDecl 0x7fa81d8709d0 <col:33, col:43> col:43 used __val 'long long'
|   | |-CompoundStmt 0x7fa81d870be8 <col:50, col:66>
|   | | `-ReturnStmt 0x7fa81d870bd0 <col:52, col:59>
|   | |   `-ImplicitCastExpr 0x7fa81d870bb8 <col:59> 'long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x7fa81d870b90 <col:59> 'long long' lvalue ParmVar 0x7fa81d8709d0 '__val' 'long long'
|   | |-AlwaysInlineAttr 0x7fa81d870b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81d870b80 <col:51, col:74> Hidden
|   |-FunctionDecl 0x7fa81d870d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
|   | |-ParmVarDecl 0x7fa81d870c50 <col:42, col:61> col:61 used __val 'unsigned long long'
|   | |-CompoundStmt 0x7fa81d870e68 <col:68, col:83>
|   | | `-ReturnStmt 0x7fa81d870e50 <col:69, col:76>
|   | |   `-ImplicitCastExpr 0x7fa81d870e38 <col:76> 'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x7fa81d870e10 <col:76> 'unsigned long long' lvalue ParmVar 0x7fa81d870c50 '__val' 'unsigned long long'
|   | |-AlwaysInlineAttr 0x7fa81d870db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81d870e00 <col:51, col:74> Hidden
|   |-FunctionDecl 0x7fa81d870fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
|   | |-ParmVarDecl 0x7fa81d870ec8 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
|   | |-CompoundStmt 0x7fa81d871120 <col:52, col:68>
|   | | `-ReturnStmt 0x7fa81d871108 <col:54, col:61>
|   | |   `-ImplicitCastExpr 0x7fa81d8710f0 <col:61> '__int128_t':'__int128' <LValueToRValue>
|   | |     `-DeclRefExpr 0x7fa81d8710c8 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fa81d870ec8 '__val' '__int128_t':'__int128'
|   | |-AlwaysInlineAttr 0x7fa81d871070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81d8710b8 <col:51, col:74> Hidden
|   |-FunctionDecl 0x7fa81d871280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
|   | |-ParmVarDecl 0x7fa81d871180 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
|   | |-CompoundStmt 0x7fa81d8713d0 <col:54, col:70>
|   | | `-ReturnStmt 0x7fa81d8713b8 <col:56, col:63>
|   | |   `-ImplicitCastExpr 0x7fa81d8713a0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
|   | |     `-DeclRefExpr 0x7fa81d871378 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fa81d871180 '__val' '__uint128_t':'unsigned __int128'
|   | |-AlwaysInlineAttr 0x7fa81d871320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81d871368 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d871918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
|   | |-TemplateTypeParmDecl 0x7fa81d8713f0 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl 0x7fa81d871880 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
|   |   |-ParmVarDecl 0x7fa81d871770 <col:23, col:27> col:27 referenced __val '_Tp'
|   |   |-CompoundStmt 0x7fa81d871a08 <col:34, col:50>
|   |   | `-ReturnStmt 0x7fa81d8719f0 <col:36, col:43>
|   |   |   `-DeclRefExpr 0x7fa81d8719c8 <col:43> '_Tp' lvalue ParmVar 0x7fa81d871770 '__val' '_Tp'
|   |   |-AlwaysInlineAttr 0x7fa81d871970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d8719b8 <col:51, col:74> Hidden
|   |-ClassTemplateDecl 0x7fa81d871b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
|   | |-TemplateTypeParmDecl 0x7fa81d871a28 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d871ab0 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
|   |   |-CXXRecordDecl 0x7fa81d871dc0 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
|   |   |-FunctionTemplateDecl 0x7fa81d8724c8 <line:4658:5, line:4660:95> line:4659:21 __test
|   |   | |-TemplateTypeParmDecl 0x7fa81d871e58 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
|   |   | `-CXXMethodDecl 0x7fa81d872430 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
|   |   |   `-ParmVarDecl 0x7fa81d871ef8 <col:28> col:31 'int'
|   |   |-FunctionTemplateDecl 0x7fa81d872768 <line:4661:5, line:4662:37> col:21 __test
|   |   | |-TemplateTypeParmDecl 0x7fa81d872520 <line:4661:15> col:15 class depth 1 index 0
|   |   | `-CXXMethodDecl 0x7fa81d8726d0 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
|   |   |   `-ParmVarDecl 0x7fa81d8725b8 <col:28> col:32 'long'
|   |   `-VarDecl 0x7fa81d8727d0 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr 0x7fa81d872a08 <col:31, col:57> '<dependent type>' lvalue
|   |-ClassTemplateDecl 0x7fa81d872b88 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
|   | |-TemplateTypeParmDecl 0x7fa81d872a68 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d872af0 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
|   |   |-CXXRecordDecl 0x7fa81d872e00 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
|   |   |-FunctionTemplateDecl 0x7fa81d873508 <line:4670:5, line:4672:94> line:4671:21 __test
|   |   | |-TemplateTypeParmDecl 0x7fa81d872e98 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
|   |   | `-CXXMethodDecl 0x7fa81d873470 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
|   |   |   `-ParmVarDecl 0x7fa81d872f38 <col:28> col:31 'int'
|   |   |-FunctionTemplateDecl 0x7fa81d873728 <line:4673:5, line:4674:37> col:21 __test
|   |   | |-TemplateTypeParmDecl 0x7fa81d873560 <line:4673:15> col:15 class depth 1 index 0
|   |   | `-CXXMethodDecl 0x7fa81d873690 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
|   |   |   `-ParmVarDecl 0x7fa81d8735f8 <col:28> col:32 'long'
|   |   `-VarDecl 0x7fa81d873790 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
|   |     `-DependentScopeDeclRefExpr 0x7fa81d873988 <col:31, col:57> '<dependent type>' lvalue
|   |-ClassTemplateDecl 0x7fa81d873b08 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
|   | |-TemplateTypeParmDecl 0x7fa81d8739e8 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d873a70 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
|   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
|   |   `-CXXRecordDecl 0x7fa81d874168 <col:1, col:8> col:8 implicit struct __has_operator_addressof
|   |-CXXRecordDecl 0x7fa81d00e820 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
|   | `-CXXRecordDecl 0x7fa81d00e948 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
|   |-CXXRecordDecl 0x7fa81d00ea00 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
|   | `-CXXRecordDecl 0x7fa81d00eb28 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
|   |-CXXRecordDecl 0x7fa81d00ebe0 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
|   | `-CXXRecordDecl 0x7fa81d00ed08 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
|   |-ClassTemplateDecl 0x7fa81d00f128 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
|   | |-TemplateTypeParmDecl 0x7fa81d00edc0 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl 0x7fa81d00ee28 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl 0x7fa81d00f000 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
|   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
|   | `-CXXRecordDecl 0x7fa81d00f090 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
|   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
|   |   `-CXXRecordDecl 0x7fa81d00f860 <col:1, col:8> col:8 implicit struct __can_extract_key
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d00fe38 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
|   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
|   | |-TemplateTypeParmDecl 0x7fa81d00f918 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
|   | |-TemplateTypeParmDecl 0x7fa81d00f988 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl 0x7fa81d00f9f8 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
|   | |-TemplateTypeParmDecl 0x7fa81d00fa68 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
|   | `-CXXRecordDecl 0x7fa81d010800 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
|   |-ClassTemplateDecl 0x7fa81d010c60 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
|   | |-TemplateTypeParmDecl 0x7fa81d0108b8 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl 0x7fa81d010928 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl 0x7fa81d010998 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
|   | |-TemplateTypeParmDecl 0x7fa81d010b30 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
|   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
|   | `-CXXRecordDecl 0x7fa81d010bc8 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
|   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
|   |   `-CXXRecordDecl 0x7fa81d0112a8 <col:1, col:8> col:8 implicit struct __can_extract_map_key
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d011700 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
|   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument type 'type-parameter-0-2'
|   | |-TemplateTypeParmDecl 0x7fa81d011360 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
|   | |-TemplateTypeParmDecl 0x7fa81d0113c8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
|   | |-TemplateTypeParmDecl 0x7fa81d011438 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
|   | `-CXXRecordDecl 0x7fa81d011a80 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
|   |-VarDecl 0x7fa81d1c6478 parent 0x7fa81c0af2d0 prev 0x7fa81c0b00a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
|   |-VarDecl 0x7fa81d1c6898 parent 0x7fa81c0af000 prev 0x7fa81c0b0a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 used value 'const _Bool':'const _Bool' constexpr
|   `-VarDecl 0x7fa81d1e2f08 parent 0x7fa81d173468 prev 0x7fa81d173748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 value 'const unsigned long':'const unsigned long' constexpr
|-LinkageSpecDecl 0x7fa81c0acf08 <line:439:12> col:12 implicit C
| `-FunctionDecl 0x7fa81c0acf58 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fa81c0acff0 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fa81c0ad058 <col:12> Implicit
|   `-ConstAttr 0x7fa81c0ad0a0 <col:12> Implicit
|-NamespaceDecl 0x7fa81d011b38 prev 0x7fa81c066a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fa81c066458 'std'
| `-NamespaceDecl 0x7fa81d011ba0 prev 0x7fa81c066ac0 <col:52, line:439:36> <scratch space>:136:1 __1 inline
|   |-original Namespace 0x7fa81c0664c0 '__1'
|   |-ClassTemplateDecl 0x7fa81d011d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:25:1, col:49> col:49 tuple_size
|   | |-TemplateTypeParmDecl 0x7fa81d011c08 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d011cc0 <col:22, col:49> col:49 class tuple_size
|   | | `-TypeVisibilityAttr 0x7fa81d011f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e2410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:652:1, line:654:44> line:653:30 class tuple_size definition
|   |   |-public 'integral_constant<size_t, 2>':'struct std::__1::integral_constant<unsigned long, 2>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e2de0 prev 0x7fa81d1e2410 <col:3, col:30> col:30 implicit class tuple_size
|   |-TypeAliasTemplateDecl 0x7fa81d012118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:28:1, line:29:36> col:1 __enable_if_tuple_size_imp
|   | |-TemplateTypeParmDecl 0x7fa81d011fb0 <line:28:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d012018 <col:22> col:22 class depth 0 index 1 ...
|   | `-TypeAliasDecl 0x7fa81d0120b8 <line:29:1, col:36> col:7 __enable_if_tuple_size_imp '_Tp'
|   |   `-TemplateTypeParmType 0x7fa81d011ff0 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d011fb0 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d055e18 <line:31:1, line:36:65> line:32:28 class tuple_size definition
|   | |-public 'integral_constant<size_t, tuple_size<_Tp>::value>'
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d012168 <line:31:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d055f58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d056338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:32:1, col:28> col:28 implicit class tuple_size
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d056c28 <line:38:1, line:43:65> line:39:28 class tuple_size definition
|   | |-public 'integral_constant<size_t, tuple_size<_Tp>::value>'
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d0563f0 <line:38:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d056d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d0570c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:39:1, col:28> col:28 implicit class tuple_size
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d057688 <line:45:1, line:49:65> line:46:28 class tuple_size definition
|   | |-public 'integral_constant<size_t, tuple_size<_Tp>::value>'
|   | |-TemplateArgument type 'const volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d057180 <line:45:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d0577c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d057b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:46:1, col:28> col:28 implicit class tuple_size
|   |-ClassTemplateDecl 0x7fa81d057db0 <line:57:1, col:61> col:61 tuple_element
|   | |-NonTypeTemplateParmDecl 0x7fa81d057c00 <col:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d057c58 <col:23, col:29> col:29 class depth 0 index 1 _Tp
|   | `-CXXRecordDecl 0x7fa81d057d18 <col:34, col:61> col:61 class tuple_element
|   |   `-TypeVisibilityAttr 0x7fa81d058008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0582e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:59:1, line:64:1> line:60:28 class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d058178 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d058060 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'const type-parameter-0-1'
|   | |-NonTypeTemplateParmDecl 0x7fa81d058060 <line:59:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d0580b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d058438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d0585a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:60:1, col:28> col:28 implicit class tuple_element
|   | |-AccessSpecDecl 0x7fa81d058638 <line:62:1, col:7> col:1 public
|   | `-TypedefDecl 0x7fa81d0589c0 <line:63:5, col:78> col:78 type 'typename add_const<typename tuple_element<_Ip, _Tp>::type>::type'
|   |   `-DependentNameType 0x7fa81d058950 'typename add_const<typename tuple_element<_Ip, _Tp>::type>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d058cc0 <line:66:1, line:71:1> line:67:28 class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d058b58 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d058a48 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'volatile type-parameter-0-1'
|   | |-NonTypeTemplateParmDecl 0x7fa81d058a48 <line:66:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d058aa0 <col:23, col:29> col:29 referenced class depth 0 index 1 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d058e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d058f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:67:1, col:28> col:28 implicit class tuple_element
|   | |-AccessSpecDecl 0x7fa81d059018 <line:69:1, col:7> col:1 public
|   | `-TypedefDecl 0x7fa81d059360 <line:70:5, col:81> col:81 type 'typename add_volatile<typename tuple_element<_Ip, _Tp>::type>::type'
|   |   `-DependentNameType 0x7fa81d0592f0 'typename add_volatile<typename tuple_element<_Ip, _Tp>::type>::type' dependent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d059660 <line:73:1, line:78:1> line:74:28 class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d0594f8 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d0593e8 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'const volatile type-parameter-0-1'
|   | |-NonTypeTemplateParmDecl 0x7fa81d0593e8 <line:73:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d059440 <col:23, col:29> col:29 referenced class depth 0 index 1 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d0597b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d059920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:74:1, col:28> col:28 implicit class tuple_element
|   | |-AccessSpecDecl 0x7fa81d0599b8 <line:76:1, col:7> col:1 public
|   | `-TypedefDecl 0x7fa81d059d10 <line:77:5, col:75> col:75 type 'typename add_cv<typename tuple_element<_Ip, _Tp>::type>::type'
|   |   `-DependentNameType 0x7fa81d059ca0 'typename add_cv<typename tuple_element<_Ip, _Tp>::type>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d059ea8 <line:80:1, col:56> col:29 __tuple_like
|   | |-TemplateTypeParmDecl 0x7fa81d059d88 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d059e10 <col:22, col:56> col:29 struct __tuple_like definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl 0x7fa81d05a160 <col:22, col:29> col:29 implicit struct __tuple_like
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e1de8 <line:197:1, col:83> col:40 struct __tuple_like definition
|   |   |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|   |   `-CXXRecordDecl 0x7fa81d1e2310 prev 0x7fa81d1e1de8 <col:33, col:40> col:40 implicit struct __tuple_like
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d05a388 <line:82:1, col:81> col:29 struct __tuple_like definition
|   | |-public '__tuple_like<_Tp>'
|   | |-TemplateArgument type 'const type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d05a218 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d05a678 <col:22, col:29> col:29 implicit struct __tuple_like
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d05a898 <line:83:1, col:84> col:29 struct __tuple_like definition
|   | |-public '__tuple_like<_Tp>'
|   | |-TemplateArgument type 'volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d05a730 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d05ab88 <col:22, col:29> col:29 implicit struct __tuple_like
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d05ada8 <line:84:1, col:90> col:29 struct __tuple_like definition
|   | |-public '__tuple_like<_Tp>'
|   | |-TemplateArgument type 'const volatile type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x7fa81d05ac40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d05b098 <col:22, col:29> col:29 implicit struct __tuple_like
|   |-ClassTemplateDecl 0x7fa81d05b268 <line:90:1, col:46> col:29 __tuple_indices
|   | |-NonTypeTemplateParmDecl 0x7fa81d05b160 <col:11> col:20 'size_t':'unsigned long' depth 0 index 0 ...
|   | `-CXXRecordDecl 0x7fa81d05b1d0 <col:22, col:46> col:29 struct __tuple_indices definition
|   |   `-CXXRecordDecl 0x7fa81d05b560 <col:22, col:29> col:29 implicit struct __tuple_indices
|   |-ClassTemplateDecl 0x7fa81d05b7a8 <line:92:1, line:99:1> line:93:8 __integer_sequence
|   | |-TemplateTypeParmDecl 0x7fa81d05b618 <line:92:11, col:17> col:17 referenced class depth 0 index 0 _IdxType
|   | |-NonTypeTemplateParmDecl 0x7fa81d05b698 <col:27, col:39> col:39 referenced '_IdxType' depth 0 index 1 ... _Values
|   | `-CXXRecordDecl 0x7fa81d05b710 <line:93:1, line:99:1> line:93:8 struct __integer_sequence definition
|   |   |-CXXRecordDecl 0x7fa81d05bac0 <col:1, col:8> col:8 implicit struct __integer_sequence
|   |   |-TypeAliasTemplateDecl 0x7fa81d06c100 <line:94:3, line:95:57> col:3 __convert
|   |   | |-TemplateTemplateParmDecl 0x7fa81d06bc88 <line:94:13, col:60> col:60 depth 1 index 0 _ToIndexSeq
|   |   | | |-TemplateTypeParmDecl 0x7fa81d05bb58 <col:23, col:29> col:29 referenced class depth 2 index 0 _OIdxType
|   |   | | `-NonTypeTemplateParmDecl 0x7fa81d06bc10 <col:40> col:52 '_OIdxType' depth 2 index 1 ...
|   |   | |-TemplateTypeParmDecl 0x7fa81d06bcd8 <col:73, col:79> col:79 referenced class depth 1 index 1 _ToIndexType
|   |   | `-TypeAliasDecl 0x7fa81d06c0a0 <line:95:3, col:57> col:9 __convert '_ToIndexSeq<_ToIndexType, _Values...>'
|   |   |   `-TemplateSpecializationType 0x7fa81d06bfb0 '_ToIndexSeq<_ToIndexType, _Values...>' dependent _ToIndexSeq
|   |   |     |-TemplateArgument type '_ToIndexType'
|   |   |     `-TemplateArgument expr
|   |   |       `-PackExpansionExpr 0x7fa81d06bda0 <col:47, col:54> '<dependent type>'
|   |   |         `-DeclRefExpr 0x7fa81d06bd78 <col:47> '_IdxType' NonTypeTemplateParm 0x7fa81d05b698 '_Values' '_IdxType'
|   |   `-TypeAliasTemplateDecl 0x7fa81d06c418 <line:97:3, line:98:64> col:3 __to_tuple_indices
|   |     |-NonTypeTemplateParmDecl 0x7fa81d06c160 <line:97:13, col:20> col:20 referenced 'size_t':'unsigned long' depth 1 index 0 _Sp
|   |     `-TypeAliasDecl 0x7fa81d06c3b8 <line:98:3, col:64> col:9 __to_tuple_indices '__tuple_indices<(_Values + _Sp)...>'
|   |       `-TemplateSpecializationType 0x7fa81d06c310 '__tuple_indices<(_Values + _Sp)...>' dependent __tuple_indices
|   |         `-TemplateArgument expr
|   |           `-PackExpansionExpr 0x7fa81d06c268 <col:46, col:61> '<dependent type>'
|   |             `-ParenExpr 0x7fa81d06c248 <col:46, col:60> '<dependent type>'
|   |               `-BinaryOperator 0x7fa81d06c220 <col:47, col:57> '<dependent type>' '+'
|   |                 |-DeclRefExpr 0x7fa81d06c1d0 <col:47> '_IdxType' NonTypeTemplateParm 0x7fa81d05b698 '_Values' '_IdxType'
|   |                 `-DeclRefExpr 0x7fa81d06c1f8 <col:57> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d06c160 '_Sp' 'size_t':'unsigned long'
|   |-TypeAliasTemplateDecl 0x7fa81d06cd90 <line:144:1, line:147:27> line:145:1 __make_indices_imp
|   | |-NonTypeTemplateParmDecl 0x7fa81d06c498 <line:144:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ep
|   | |-NonTypeTemplateParmDecl 0x7fa81d06c500 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _Sp
|   | `-TypeAliasDecl 0x7fa81d06cd30 <line:145:1, line:147:27> line:145:7 __make_indices_imp 'typename __make_integer_seq<__integer_sequence, size_t, _Ep - _Sp>::__to_tuple_indices<_Sp>'
|   |   `-DependentTemplateSpecializationType 0x7fa81d06cc50 'typename __make_integer_seq<__integer_sequence, size_t, _Ep - _Sp>::__to_tuple_indices<_Sp>' dependent
|   |-ClassTemplateDecl 0x7fa81d06cfa0 <line:155:1, line:160:1> line:156:8 __make_tuple_indices
|   | |-NonTypeTemplateParmDecl 0x7fa81d06cdf0 <line:155:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ep
|   | |-NonTypeTemplateParmDecl 0x7fa81d06ce78 <col:23, col:36> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _Sp
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 0x7fa81d06ced0 <col:36> 'size_t':'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x7fa81d06ce48 <col:36> 'int' 0
|   | `-CXXRecordDecl 0x7fa81d06cf08 <line:156:1, line:160:1> line:156:8 struct __make_tuple_indices definition
|   |   |-CXXRecordDecl 0x7fa81d06d290 <col:1, col:8> col:8 implicit struct __make_tuple_indices
|   |   |-StaticAssertDecl 0x7fa81d06d460 <line:158:5, col:65> col:5
|   |   | |-BinaryOperator 0x7fa81d06d378 <col:19, col:26> '_Bool' '<='
|   |   | | |-DeclRefExpr 0x7fa81d06d328 <col:19> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d06ce78 '_Sp' 'size_t':'unsigned long'
|   |   | | `-DeclRefExpr 0x7fa81d06d350 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d06cdf0 '_Ep' 'size_t':'unsigned long'
|   |   | `-StringLiteral 0x7fa81d06d418 <col:31> 'const char [33]' lvalue "__make_tuple_indices input error"
|   |   `-TypedefDecl 0x7fa81d06da58 <line:159:5, col:42> col:42 type '__make_indices_imp<_Ep, _Sp>':'typename __make_integer_seq<__integer_sequence, unsigned long, _Ep - _Sp>::__to_tuple_indices<_Sp>'
|   |     `-TemplateSpecializationType 0x7fa81d06d960 '__make_indices_imp<_Ep, _Sp>' sugar dependent alias __make_indices_imp
|   |       |-TemplateArgument expr
|   |       | `-DeclRefExpr 0x7fa81d06d498 <col:32> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d06cdf0 '_Ep' 'size_t':'unsigned long'
|   |       |-TemplateArgument expr
|   |       | `-DeclRefExpr 0x7fa81d06d4c0 <col:37> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d06ce78 '_Sp' 'size_t':'unsigned long'
|   |       |-DependentTemplateSpecializationType 0x7fa81d06d8d0 'typename __make_integer_seq<__integer_sequence, size_t, _Ep - _Sp>::__to_tuple_indices<_Sp>' dependent
|   |       `-DependentTemplateSpecializationType 0x7fa81d06cc00 'typename __make_integer_seq<__integer_sequence, unsigned long, _Ep - _Sp>::__to_tuple_indices<_Sp>' dependent
|   |-ClassTemplateDecl 0x7fa81d06dc98 <line:163:1, col:52> col:52 tuple
|   | |-TemplateTypeParmDecl 0x7fa81d06dad0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl 0x7fa81d06dc00 <col:25, col:52> col:52 class tuple
|   |   `-TypeVisibilityAttr 0x7fa81d06df08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d06e1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:165:1, col:74> col:32 struct __tuple_like definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'tuple<type-parameter-0-0...>'
|   | |-TemplateTypeParmDecl 0x7fa81d06df50 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl 0x7fa81d06e470 <col:25, col:32> col:32 implicit struct __tuple_like
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d06e7e8 <line:167:1, line:171:1> line:168:28 class tuple_size definition
|   | |-public 'integral_constant<size_t, sizeof...(_Tp)>'
|   | |-TemplateArgument type 'tuple<type-parameter-0-0...>'
|   | |-TemplateTypeParmDecl 0x7fa81d06e528 <line:167:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
|   | |-TypeVisibilityAttr 0x7fa81d06e948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d06ec18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:168:1, col:28> col:28 implicit class tuple_size
|   |-FunctionTemplateDecl 0x7fa81d06f4d8 <line:173:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:176:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d06ece0 <line:173:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d06ed38 <col:23, col:32> col:32 referenced class depth 0 index 1 ... _Tp
|   | `-FunctionDecl 0x7fa81d06f440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:176:1 constexpr get 'typename tuple_element<_Ip, tuple<_Tp...> >::type &(tuple<_Tp...> &) noexcept'
|   |   |-ParmVarDecl 0x7fa81d06f2c0 <col:5, col:18> col:19 'tuple<_Tp...> &'
|   |   |-AlwaysInlineAttr 0x7fa81d06f530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d06f578 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d06fc98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:178:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:181:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d06f598 <line:178:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d06f5f0 <col:23, col:32> col:32 referenced class depth 0 index 1 ... _Tp
|   | `-FunctionDecl 0x7fa81d06fc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:181:1 constexpr get 'const typename tuple_element<_Ip, tuple<_Tp...> >::type &(const tuple<_Tp...> &) noexcept'
|   |   |-ParmVarDecl 0x7fa81d06fa80 <col:5, col:24> col:25 'const tuple<_Tp...> &'
|   |   |-AlwaysInlineAttr 0x7fa81d06fcf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d06fd38 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d070458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:183:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:186:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d06fd58 <line:183:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d06fdb0 <col:23, col:32> col:32 referenced class depth 0 index 1 ... _Tp
|   | `-FunctionDecl 0x7fa81d0703c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:186:1 constexpr get 'typename tuple_element<_Ip, tuple<_Tp...> >::type &&(tuple<_Tp...> &&) noexcept'
|   |   |-ParmVarDecl 0x7fa81d070240 <col:5, col:18> col:20 'tuple<_Tp...> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d0704b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d0704f8 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d070c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:188:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:191:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d070518 <line:188:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d070570 <col:23, col:32> col:32 referenced class depth 0 index 1 ... _Tp
|   | `-FunctionDecl 0x7fa81d070b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:191:1 constexpr get 'const typename tuple_element<_Ip, tuple<_Tp...> >::type &&(const tuple<_Tp...> &&) noexcept'
|   |   |-ParmVarDecl 0x7fa81d070a00 <col:5, col:24> col:26 'const tuple<_Tp...> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d070c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d070cb8 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d070fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:197:1, col:83> col:40 struct __tuple_like definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'pair<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateTypeParmDecl 0x7fa81d070cc8 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d070d38 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-CXXRecordDecl 0x7fa81d071280 <col:33, col:40> col:40 implicit struct __tuple_like
|   |-FunctionTemplateDecl 0x7fa81d071c00 <line:199:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:202:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d071348 <line:199:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d0713a0 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d071408 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | `-FunctionDecl 0x7fa81d071b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:202:1 constexpr get 'typename tuple_element<_Ip, pair<_T1, _T2> >::type &(pair<_T1, _T2> &) noexcept'
|   |   |-ParmVarDecl 0x7fa81d0719a8 <col:5, col:19> col:20 'pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d071c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d071ca0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d072448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:204:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:207:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d071cc0 <line:204:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d071d18 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d071d88 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | `-FunctionDecl 0x7fa81d0723b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:207:1 constexpr get 'const typename tuple_element<_Ip, pair<_T1, _T2> >::type &(const pair<_T1, _T2> &) noexcept'
|   |   |-ParmVarDecl 0x7fa81d072228 <col:5, col:25> col:26 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d0724a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d0724e8 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d072c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:210:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:213:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d072508 <line:210:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d072560 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d0725c8 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | `-FunctionDecl 0x7fa81d072bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:213:1 constexpr get 'typename tuple_element<_Ip, pair<_T1, _T2> >::type &&(pair<_T1, _T2> &&) noexcept'
|   |   |-ParmVarDecl 0x7fa81d072a68 <col:5, col:19> col:21 'pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d072ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d072d28 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d0734c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:215:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:218:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d072d48 <line:215:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d072da0 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d072e08 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | `-FunctionDecl 0x7fa81d073430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:218:1 constexpr get 'const typename tuple_element<_Ip, pair<_T1, _T2> >::type &&(const pair<_T1, _T2> &&) noexcept'
|   |   |-ParmVarDecl 0x7fa81d0732a8 <col:5, col:25> col:27 'const pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d073520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d073568 <col:51, col:74> Hidden
|   |-ClassTemplateDecl 0x7fa81d073738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:223:1, col:64> col:64 array
|   | |-TemplateTypeParmDecl 0x7fa81d073578 <col:11, col:17> col:17 class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d0735f8 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Size
|   | `-CXXRecordDecl 0x7fa81d0736a0 <col:36, col:64> col:64 struct array
|   |   `-TypeVisibilityAttr 0x7fa81d073998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d073cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:225:1, col:89> col:43 struct __tuple_like definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type 'array<type-parameter-0-0, _Size>'
|   | |-TemplateTypeParmDecl 0x7fa81d0739e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d073a58 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
|   | `-CXXRecordDecl 0x7fa81d073f90 <col:36, col:43> col:43 implicit struct __tuple_like
|   |-FunctionTemplateDecl 0x7fa81d0745a0 <line:227:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:230:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d074058 <line:227:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d0740b0 <col:23, col:29> col:29 referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d074128 <col:34, col:41> col:41 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | `-FunctionDecl 0x7fa81d074508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:230:1 constexpr get '_Tp &(array<_Tp, _Size> &) noexcept'
|   |   |-ParmVarDecl 0x7fa81d0743c8 <col:5, col:22> col:23 'array<_Tp, _Size> &'
|   |   |-AlwaysInlineAttr 0x7fa81d0745f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d074640 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d074b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:232:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:235:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d074660 <line:232:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d0746b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d074738 <col:34, col:41> col:41 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | `-FunctionDecl 0x7fa81d074ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:235:1 constexpr get 'const _Tp &(const array<_Tp, _Size> &) noexcept'
|   |   |-ParmVarDecl 0x7fa81d074978 <col:5, col:28> col:29 'const array<_Tp, _Size> &'
|   |   |-AlwaysInlineAttr 0x7fa81d074ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d074bf0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d075100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:238:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:241:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d074c10 <line:238:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d074c68 <col:23, col:29> col:29 referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d074ce8 <col:34, col:41> col:41 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | `-FunctionDecl 0x7fa81d075068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:241:1 constexpr get '_Tp &&(array<_Tp, _Size> &&) noexcept'
|   |   |-ParmVarDecl 0x7fa81d074f28 <col:5, col:22> col:24 'array<_Tp, _Size> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d075158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d0751a0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d0756b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:243:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:246:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d0751c0 <line:243:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d075218 <col:23, col:29> col:29 referenced class depth 0 index 1 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d075298 <col:34, col:41> col:41 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
|   | `-FunctionDecl 0x7fa81d075618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, line:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:246:1 constexpr get 'const _Tp &&(const array<_Tp, _Size> &&) noexcept'
|   |   |-ParmVarDecl 0x7fa81d0754d8 <col:5, col:28> col:30 'const array<_Tp, _Size> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d075708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d075750 <col:51, col:74> Hidden
|   |-ClassTemplateDecl 0x7fa81d075878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:253:1, col:47> col:32 __tuple_types
|   | |-TemplateTypeParmDecl 0x7fa81d075760 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl 0x7fa81d0757e0 <col:25, col:47> col:32 struct __tuple_types definition
|   |   `-CXXRecordDecl 0x7fa81d075b50 <col:25, col:32> col:32 implicit struct __tuple_types
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d076020 <line:284:1, line:290:1> line:285:28 class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d075d48 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d075c30 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type '__tuple_types<type-parameter-0-1...>'
|   | |-NonTypeTemplateParmDecl 0x7fa81d075c30 <line:284:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d075c88 <col:23, col:32> col:32 referenced class depth 0 index 1 ... _Types
|   | |-TypeVisibilityAttr 0x7fa81d076198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d076300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:285:1, col:28> col:28 implicit class tuple_element
|   | |-AccessSpecDecl 0x7fa81d076398 <line:287:1, col:7> col:1 public
|   | |-StaticAssertDecl 0x7fa81d076480 <line:288:5, col:78> col:5
|   | | |-BinaryOperator 0x7fa81d076410 <col:19, col:41> '_Bool' '<'
|   | | | |-DeclRefExpr 0x7fa81d0763c0 <col:19> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d075c30 '_Ip' 'size_t':'unsigned long'
|   | | | `-SizeOfPackExpr 0x7fa81d0763e8 <col:25, col:41> 'unsigned long' 0x7fa81d075c88 _Types
|   | | `-StringLiteral 0x7fa81d076438 <col:44> 'const char [33]' lvalue "tuple_element index out of range"
|   | `-TypedefDecl 0x7fa81d0767c0 <line:289:5, col:49> col:49 type '__type_pack_element<_Ip, _Types...>'
|   |   `-TemplateSpecializationType 0x7fa81d0766d0 '__type_pack_element<_Ip, _Types...>' dependent __type_pack_element
|   |     |-TemplateArgument expr
|   |     | `-DeclRefExpr 0x7fa81d0765f8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d075c30 '_Ip' 'size_t':'unsigned long'
|   |     `-TemplateArgument type '_Types...'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d076af8 <line:293:1, line:297:1> line:294:28 class tuple_size definition
|   | |-public 'integral_constant<size_t, sizeof...(_Tp)>'
|   | |-TemplateArgument type '__tuple_types<type-parameter-0-0...>'
|   | |-TemplateTypeParmDecl 0x7fa81d076838 <line:293:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
|   | |-TypeVisibilityAttr 0x7fa81d076c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d076ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:294:1, col:28> col:28 implicit class tuple_size
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d077208 <line:299:1, col:82> col:32 struct __tuple_like definition
|   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
|   | |-TemplateArgument type '__tuple_types<type-parameter-0-0...>'
|   | |-TemplateTypeParmDecl 0x7fa81d076f80 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
|   | `-CXXRecordDecl 0x7fa81d0774a0 <col:25, col:32> col:32 implicit struct __tuple_like
|   |-ClassTemplateDecl 0x7fa81d077750 <line:301:1, line:302:8> col:8 __apply_cv_mf
|   | |-NonTypeTemplateParmDecl 0x7fa81d077568 <line:301:11, col:16> col:16 '_Bool' depth 0 index 0 _ApplyLV
|   | |-NonTypeTemplateParmDecl 0x7fa81d0775d0 <col:26, col:31> col:31 '_Bool' depth 0 index 1 _ApplyConst
|   | |-NonTypeTemplateParmDecl 0x7fa81d077638 <col:44, col:49> col:49 '_Bool' depth 0 index 2 _ApplyVolatile
|   | |-CXXRecordDecl 0x7fa81d0776b8 <line:302:1, col:8> col:8 struct __apply_cv_mf
|   | |-ClassTemplateSpecialization 0x7fa81d077a90 '__apply_cv_mf'
|   | |-ClassTemplateSpecialization 0x7fa81d077fa8 '__apply_cv_mf'
|   | |-ClassTemplateSpecialization 0x7fa81d0784b8 '__apply_cv_mf'
|   | |-ClassTemplateSpecialization 0x7fa81d0789c8 '__apply_cv_mf'
|   | |-ClassTemplateSpecialization 0x7fa81d078ed8 '__apply_cv_mf'
|   | |-ClassTemplateSpecialization 0x7fa81d079410 '__apply_cv_mf'
|   | |-ClassTemplateSpecialization 0x7fa81d079980 '__apply_cv_mf'
|   | `-ClassTemplateSpecialization 0x7fa81d079f10 '__apply_cv_mf'
|   |-ClassTemplateSpecializationDecl 0x7fa81d077a90 <line:303:1, line:306:1> line:304:8 struct __apply_cv_mf definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x7fa81d077d50 <col:1, col:8> col:8 implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl 0x7fa81d077ee0 <line:305:3, col:40> col:24 __apply
|   |   |-TemplateTypeParmDecl 0x7fa81d077de8 <col:13, col:19> col:19 referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl 0x7fa81d077e80 <col:24, col:40> col:30 __apply '_Tp'
|   |     `-TemplateTypeParmType 0x7fa81d077e30 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81d077de8 '_Tp'
|   |-ClassTemplateSpecializationDecl 0x7fa81d077fa8 <line:307:1, line:310:1> line:308:8 struct __apply_cv_mf definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x7fa81d078260 <col:1, col:8> col:8 implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl 0x7fa81d0783f0 <line:309:3, col:46> col:24 __apply
|   |   |-TemplateTypeParmDecl 0x7fa81d0782f8 <col:13, col:19> col:19 referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl 0x7fa81d078390 <col:24, col:46> col:30 __apply 'const _Tp'
|   |     `-QualType 0x7fa81d078341 'const _Tp' const
|   |       `-TemplateTypeParmType 0x7fa81d078340 '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm 0x7fa81d0782f8 '_Tp'
|   |-ClassTemplateSpecializationDecl 0x7fa81d0784b8 <line:311:1, line:314:1> line:312:8 struct __apply_cv_mf definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81d078770 <col:1, col:8> col:8 implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl 0x7fa81d078900 <line:313:3, col:49> col:24 __apply
|   |   |-TemplateTypeParmDecl 0x7fa81d078808 <col:13, col:19> col:19 referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl 0x7fa81d0788a0 <col:24, col:49> col:30 __apply 'volatile _Tp'
|   |     `-QualType 0x7fa81d078854 'volatile _Tp' volatile
|   |       `-TemplateTypeParmType 0x7fa81d078850 '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm 0x7fa81d078808 '_Tp'
|   |-ClassTemplateSpecializationDecl 0x7fa81d0789c8 <line:315:1, line:318:1> line:316:8 struct __apply_cv_mf definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81d078c80 <col:1, col:8> col:8 implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl 0x7fa81d078e10 <line:317:3, col:55> col:24 __apply
|   |   |-TemplateTypeParmDecl 0x7fa81d078d18 <col:13, col:19> col:19 referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl 0x7fa81d078db0 <col:24, col:55> col:30 __apply 'const volatile _Tp'
|   |     `-QualType 0x7fa81d078d65 'const volatile _Tp' const volatile
|   |       `-TemplateTypeParmType 0x7fa81d078d60 '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm 0x7fa81d078d18 '_Tp'
|   |-ClassTemplateSpecializationDecl 0x7fa81d078ed8 <line:319:1, line:322:1> line:320:8 struct __apply_cv_mf definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x7fa81d079190 <col:1, col:8> col:8 implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl 0x7fa81d079348 <line:321:3, col:43> col:24 __apply
|   |   |-TemplateTypeParmDecl 0x7fa81d079228 <col:13, col:19> col:19 referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl 0x7fa81d0792e8 <col:24, col:43> col:30 __apply '_Tp &'
|   |     `-LValueReferenceType 0x7fa81d0792b0 '_Tp &' dependent
|   |       `-TemplateTypeParmType 0x7fa81d079270 '_Tp' dependent depth 0 index 0
|   |         `-TemplateTypeParm 0x7fa81d079228 '_Tp'
|   |-ClassTemplateSpecializationDecl 0x7fa81d079410 <line:323:1, line:326:1> line:324:8 struct __apply_cv_mf definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x7fa81d0796d0 <col:1, col:8> col:8 implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl 0x7fa81d0798b8 <line:325:3, col:49> col:24 __apply
|   |   |-TemplateTypeParmDecl 0x7fa81d079768 <col:13, col:19> col:19 referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl 0x7fa81d079858 <col:24, col:49> col:30 __apply 'const _Tp &'
|   |     `-LValueReferenceType 0x7fa81d079820 'const _Tp &' dependent
|   |       `-QualType 0x7fa81d0797b1 'const _Tp' const
|   |         `-TemplateTypeParmType 0x7fa81d0797b0 '_Tp' dependent depth 0 index 0
|   |           `-TemplateTypeParm 0x7fa81d079768 '_Tp'
|   |-ClassTemplateSpecializationDecl 0x7fa81d079980 <line:327:1, line:330:1> line:328:8 struct __apply_cv_mf definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81d079c68 <col:1, col:8> col:8 implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl 0x7fa81d079e48 <line:329:3, col:52> col:24 __apply
|   |   |-TemplateTypeParmDecl 0x7fa81d079d00 <col:13, col:19> col:19 referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl 0x7fa81d079de8 <col:24, col:52> col:30 __apply 'volatile _Tp &'
|   |     `-LValueReferenceType 0x7fa81d079db0 'volatile _Tp &' dependent
|   |       `-QualType 0x7fa81d079d44 'volatile _Tp' volatile
|   |         `-TemplateTypeParmType 0x7fa81d079d40 '_Tp' dependent depth 0 index 0
|   |           `-TemplateTypeParm 0x7fa81d079d00 '_Tp'
|   |-ClassTemplateSpecializationDecl 0x7fa81d079f10 <line:331:1, line:334:1> line:332:8 struct __apply_cv_mf definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81d07a1d0 <col:1, col:8> col:8 implicit struct __apply_cv_mf
|   | `-TypeAliasTemplateDecl 0x7fa81d07a3b8 <line:333:3, col:58> col:24 __apply
|   |   |-TemplateTypeParmDecl 0x7fa81d07a268 <col:13, col:19> col:19 referenced class depth 0 index 0 _Tp
|   |   `-TypeAliasDecl 0x7fa81d07a358 <col:24, col:58> col:30 __apply 'const volatile _Tp &'
|   |     `-LValueReferenceType 0x7fa81d07a320 'const volatile _Tp &' dependent
|   |       `-QualType 0x7fa81d07a2b5 'const volatile _Tp' const volatile
|   |         `-TemplateTypeParmType 0x7fa81d07a2b0 '_Tp' dependent depth 0 index 0
|   |           `-TemplateTypeParm 0x7fa81d07a268 '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81d07acb8 <line:335:1, line:339:31> line:336:1 __apply_cv_t
|   | |-TemplateTypeParmDecl 0x7fa81d07a428 <line:335:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d07a5c0 <col:22, col:69> col:28 referenced class depth 0 index 1 _RawTp
|   | | `-TemplateArgument type 'typename remove_reference<_Tp>::type'
|   | `-TypeAliasDecl 0x7fa81d07ac58 <line:336:1, line:339:31> line:336:7 __apply_cv_t '__apply_cv_mf<is_lvalue_reference<_Tp>::value, is_const<_RawTp>::value, is_volatile<_RawTp>::value>'
|   |   `-TemplateSpecializationType 0x7fa81d07ab20 '__apply_cv_mf<is_lvalue_reference<_Tp>::value, is_const<_RawTp>::value, is_volatile<_RawTp>::value>' dependent __apply_cv_mf
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr 0x7fa81d07a730 <line:337:5, col:31> '<dependent type>' lvalue
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr 0x7fa81d07a8a0 <line:338:5, col:23> '<dependent type>' lvalue
|   |     `-TemplateArgument expr
|   |       `-DependentScopeDeclRefExpr 0x7fa81d07aa10 <line:339:5, col:26> '<dependent type>' lvalue
|   |-ClassTemplateDecl 0x7fa81d07aea0 <line:348:1, line:349:8> col:8 __make_tuple_types_flat
|   | |-TemplateTypeParmDecl 0x7fa81d07ad08 <line:348:11, col:17> col:17 class depth 0 index 0 _TupleTypes
|   | |-TemplateTypeParmDecl 0x7fa81d07ad78 <col:30, col:36> col:36 class depth 0 index 1 _TupleIndices
|   | `-CXXRecordDecl 0x7fa81d07ae08 <line:349:1, col:8> col:8 struct __make_tuple_types_flat
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d07b7f0 <line:351:1, line:358:1> line:352:8 struct __make_tuple_types_flat definition
|   | |-TemplateArgument type '<type-parameter-0-1...>'
|   | |-TemplateArgument type '__tuple_indices<_Idx...>'
|   | |-TemplateTemplateParmDecl 0x7fa81d07b190 <line:351:11, col:37> col:37 depth 0 index 0 _Tuple
|   | | `-TemplateTypeParmDecl 0x7fa81d07b0d8 <col:21> col:21 class depth 1 index 0 ...
|   | |-TemplateTypeParmDecl 0x7fa81d07b1e0 <col:45, col:54> col:54 referenced class depth 0 index 1 ... _Types
|   | |-NonTypeTemplateParmDecl 0x7fa81d07b258 <col:62, col:72> col:72 referenced 'size_t':'unsigned long' depth 0 index 2 ... _Idx
|   | |-CXXRecordDecl 0x7fa81d07bac0 <line:352:1, col:8> col:8 implicit struct __make_tuple_types_flat
|   | `-TypeAliasTemplateDecl 0x7fa81d07cab8 <line:354:3, line:357:5> line:355:3 __apply_quals
|   |   |-TemplateTypeParmDecl 0x7fa81d07bb58 <line:354:13, col:19> col:19 referenced class depth 1 index 0 _Tp
|   |   |-TemplateTypeParmDecl 0x7fa81d07c480 <col:24, col:57> col:30 class depth 1 index 1 _ApplyFn
|   |   | `-TemplateArgument type '__apply_cv_t<_Tp>':'__apply_cv_mf<is_lvalue_reference<type-parameter-1-0>::value, is_const<typename remove_reference<type-parameter-1-0>::type>::value, is_volatile<typename remove_reference<type-parameter-1-0>::type>::value>'
|   |   `-TypeAliasDecl 0x7fa81d07ca58 <line:355:3, line:357:5> line:355:9 __apply_quals '__tuple_types<typename _ApplyFn::__apply<__type_pack_element<_Idx, _Types...> >...>'
|   |     `-TemplateSpecializationType 0x7fa81d07c9b0 '__tuple_types<typename _ApplyFn::__apply<__type_pack_element<_Idx, _Types...> >...>' dependent __tuple_types
|   |       `-TemplateArgument type 'typename _ApplyFn::__apply<__type_pack_element<_Idx, _Types...> >...'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d07d020 <line:360:1, line:368:1> line:361:8 struct __make_tuple_types_flat definition
|   | |-TemplateArgument type 'array<type-parameter-0-0, _Size>'
|   | |-TemplateArgument type '__tuple_indices<_Idx...>'
|   | |-TemplateTypeParmDecl 0x7fa81d07cb28 <line:360:11, col:17> col:17 referenced class depth 0 index 0 _Vt
|   | |-NonTypeTemplateParmDecl 0x7fa81d07cba8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | |-NonTypeTemplateParmDecl 0x7fa81d07cc10 <col:34, col:44> col:44 referenced 'size_t':'unsigned long' depth 0 index 2 ... _Idx
|   | |-CXXRecordDecl 0x7fa81d07d310 <line:361:1, col:8> col:8 implicit struct __make_tuple_types_flat
|   | |-TypeAliasTemplateDecl 0x7fa81d07d498 <line:362:3, line:363:24> col:3 __value_type
|   | | |-NonTypeTemplateParmDecl 0x7fa81d07d3b8 <line:362:13> col:19 'size_t':'unsigned long' depth 1 index 0
|   | | `-TypeAliasDecl 0x7fa81d07d438 <line:363:3, col:24> col:9 __value_type '_Vt'
|   | |   `-TemplateTypeParmType 0x7fa81d07cb70 '_Vt' dependent depth 0 index 0
|   | |     `-TemplateTypeParm 0x7fa81d07cb28 '_Vt'
|   | `-TypeAliasTemplateDecl 0x7fa81d07e038 <line:364:3, line:367:5> line:365:3 __apply_quals
|   |   |-TemplateTypeParmDecl 0x7fa81d07d4e8 <line:364:13, col:19> col:19 referenced class depth 1 index 0 _Tp
|   |   |-TemplateTypeParmDecl 0x7fa81d07db30 <col:24, col:57> col:30 class depth 1 index 1 _ApplyFn
|   |   | `-TemplateArgument type '__apply_cv_t<_Tp>':'__apply_cv_mf<is_lvalue_reference<type-parameter-1-0>::value, is_const<typename remove_reference<type-parameter-1-0>::type>::value, is_volatile<typename remove_reference<type-parameter-1-0>::type>::value>'
|   |   `-TypeAliasDecl 0x7fa81d07dfd8 <line:365:3, line:367:5> line:365:9 __apply_quals '__tuple_types<typename _ApplyFn::__apply<__value_type<_Idx> >...>'
|   |     `-TemplateSpecializationType 0x7fa81d07df30 '__tuple_types<typename _ApplyFn::__apply<__value_type<_Idx> >...>' dependent __tuple_types
|   |       `-TemplateArgument type 'typename _ApplyFn::__apply<__value_type<_Idx> >...'
|   |-ClassTemplateDecl 0x7fa81d07e850 <line:370:1, line:379:1> line:373:8 __make_tuple_types
|   | |-TemplateTypeParmDecl 0x7fa81d07e0a8 <line:370:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d07e398 <col:22, col:85> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ep
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d07e348 <col:35, col:85> '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl 0x7fa81d07e420 <line:371:11, col:24> col:18 referenced 'size_t':'unsigned long' depth 0 index 2 _Sp
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 0x7fa81d07e478 <col:24> 'size_t':'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x7fa81d07e3f0 <col:24> 'int' 0
|   | |-NonTypeTemplateParmDecl 0x7fa81d07e730 <line:372:11, col:91> col:16 '_Bool' depth 0 index 3 _SameSize
|   | | `-TemplateArgument expr
|   | |   `-ParenExpr 0x7fa81d07e700 <col:28, col:91> '<dependent type>'
|   | |     `-BinaryOperator 0x7fa81d07e6d8 <col:29, col:86> '<dependent type>' '=='
|   | |       |-DeclRefExpr 0x7fa81d07e490 <col:29> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d07e398 '_Ep' 'size_t':'unsigned long'
|   | |       `-DependentScopeDeclRefExpr 0x7fa81d07e698 <col:36, col:86> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d07e7b8 <line:373:1, line:379:1> line:373:8 struct __make_tuple_types definition
|   |   |-CXXRecordDecl 0x7fa81d07ebc0 <col:1, col:8> col:8 implicit struct __make_tuple_types
|   |   |-StaticAssertDecl 0x7fa81d07ed90 <line:375:5, col:63> col:5
|   |   | |-BinaryOperator 0x7fa81d07eca8 <col:19, col:26> '_Bool' '<='
|   |   | | |-DeclRefExpr 0x7fa81d07ec58 <col:19> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d07e420 '_Sp' 'size_t':'unsigned long'
|   |   | | `-DeclRefExpr 0x7fa81d07ec80 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d07e398 '_Ep' 'size_t':'unsigned long'
|   |   | `-StringLiteral 0x7fa81d07ed48 <col:31> 'const char [31]' lvalue "__make_tuple_types input error"
|   |   |-TypeAliasDecl 0x7fa81d07f000 <line:376:5, col:78> col:11 referenced _RawTp 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
|   |   | `-DependentNameType 0x7fa81d07ef90 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
|   |   |-TypeAliasDecl 0x7fa81d07f410 <line:377:5, col:97> col:11 referenced _Maker '__make_tuple_types_flat<std::__1::__make_tuple_types::_RawTp, typename __make_tuple_indices<_Ep, _Sp>::type>'
|   |   | `-TemplateSpecializationType 0x7fa81d07f320 '__make_tuple_types_flat<std::__1::__make_tuple_types::_RawTp, typename __make_tuple_indices<_Ep, _Sp>::type>' dependent __make_tuple_types_flat
|   |   |   |-TemplateArgument type 'std::__1::__make_tuple_types::_RawTp':'typename remove_cv<typename remove_reference<_Tp>::type>::type'
|   |   |   `-TemplateArgument type 'typename __make_tuple_indices<_Ep, _Sp>::type'
|   |   `-TypeAliasDecl 0x7fa81d07f650 <line:378:5, col:61> col:11 type 'typename _Maker::__apply_quals<_Tp>'
|   |     `-DependentTemplateSpecializationType 0x7fa81d07f570 'typename _Maker::__apply_quals<_Tp>' dependent
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d07fc00 <line:381:1, line:384:1> line:382:8 struct __make_tuple_types definition
|   | |-TemplateArgument type 'tuple<type-parameter-0-0...>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d07f8e8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d07f748 '_Ep' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d07f6d0 <line:381:11, col:20> col:20 referenced class depth 0 index 0 ... _Types
|   | |-NonTypeTemplateParmDecl 0x7fa81d07f748 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Ep
|   | |-CXXRecordDecl 0x7fa81d07ff60 <line:382:1, col:8> col:8 implicit struct __make_tuple_types
|   | `-TypedefDecl 0x7fa81d0800f8 <line:383:3, col:36> col:36 type '__tuple_types<_Types...>'
|   |   `-TemplateSpecializationType 0x7fa81d080050 '__tuple_types<_Types...>' dependent __tuple_types
|   |     `-TemplateArgument type '_Types...'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0805f0 <line:386:1, line:389:1> line:387:8 struct __make_tuple_types definition
|   | |-TemplateArgument type '__tuple_types<type-parameter-0-0...>'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d080388 <col:53> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d0801e8 '_Ep' 'size_t':'unsigned long'
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d080170 <line:386:11, col:20> col:20 referenced class depth 0 index 0 ... _Types
|   | |-NonTypeTemplateParmDecl 0x7fa81d0801e8 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Ep
|   | |-CXXRecordDecl 0x7fa81d080950 <line:387:1, col:8> col:8 implicit struct __make_tuple_types
|   | `-TypedefDecl 0x7fa81d080ae8 <line:388:3, col:36> col:36 type '__tuple_types<_Types...>'
|   |   `-TemplateSpecializationType 0x7fa81d080a40 '__tuple_types<_Types...>' dependent __tuple_types
|   |     `-TemplateArgument type '_Types...'
|   |-ClassTemplateDecl 0x7fa81d080c78 <line:391:1, line:392:8> col:8 __all_dummy
|   | |-NonTypeTemplateParmDecl 0x7fa81d080b70 <line:391:11, col:19> col:19 '_Bool' depth 0 index 0 ... _Preds
|   | `-CXXRecordDecl 0x7fa81d080be0 <line:392:1, col:8> col:8 struct __all_dummy
|   |-TypeAliasTemplateDecl 0x7fa81d081470 <line:394:1, line:395:81> col:1 __all
|   | |-NonTypeTemplateParmDecl 0x7fa81d080f18 <line:394:11, col:19> col:19 referenced '_Bool' depth 0 index 0 ... _Pred
|   | `-TypeAliasDecl 0x7fa81d081410 <line:395:1, col:81> col:7 __all 'is_same<__all_dummy<_Pred...>, __all_dummy<((void)_Pred , true)...> >'
|   |   `-TemplateSpecializationType 0x7fa81d081320 'is_same<__all_dummy<_Pred...>, __all_dummy<((void)_Pred , true)...> >' dependent is_same
|   |     |-TemplateArgument type '__all_dummy<_Pred...>'
|   |     `-TemplateArgument type '__all_dummy<((void)_Pred , true)...>'
|   |-CXXRecordDecl 0x7fa81d0814c0 <line:397:1, line:411:1> line:397:8 struct __tuple_sfinae_base definition
|   | |-CXXRecordDecl 0x7fa81d0815e8 <col:1, col:8> col:8 implicit struct __tuple_sfinae_base
|   | |-FunctionTemplateDecl 0x7fa81d0829a8 <line:398:3, line:401:84> line:400:15 __do_test
|   | | |-TemplateTemplateParmDecl 0x7fa81d0817a8 <line:398:13, col:46> col:46 depth 0 index 0 _Trait
|   | | | |-TemplateTypeParmDecl 0x7fa81d081680 <col:23> col:23 class depth 1 index 0
|   | | | `-TemplateTypeParmDecl 0x7fa81d0816e8 <col:30> col:30 class depth 1 index 1 ...
|   | | |-TemplateTypeParmDecl 0x7fa81d0817f8 <line:399:13, col:22> col:22 referenced class depth 0 index 1 ... _LArgs
|   | | |-TemplateTypeParmDecl 0x7fa81d081868 <col:30, col:39> col:39 referenced class depth 0 index 2 ... _RArgs
|   | | `-CXXMethodDecl 0x7fa81d082910 <line:400:3, line:401:84> line:400:15 __do_test 'auto (__tuple_types<_LArgs...>, __tuple_types<_RArgs...>) -> __all<typename enable_if<_Trait<_LArgs, _RArgs>::value, _Bool>::type({true})...>' static
|   | |   |-ParmVarDecl 0x7fa81d081a28 <col:25, col:48> col:49 '__tuple_types<_LArgs...>'
|   | |   `-ParmVarDecl 0x7fa81d081c30 <col:51, col:74> col:75 '__tuple_types<_RArgs...>'
|   | |-FunctionTemplateDecl 0x7fa81d082bf8 <line:402:3, line:403:33> col:15 __do_test
|   | | |-TemplateTemplateParmDecl 0x7fa81d082a90 <line:402:13> col:13 depth 0 index 0
|   | | | `-TemplateTypeParmDecl 0x7fa81d082a08 <col:23> col:23 class depth 1 index 0 ...
|   | | `-CXXMethodDecl 0x7fa81d082b60 <line:403:3, col:33> col:15 __do_test 'auto (...) -> std::__1::false_type' static
|   | |-TypeAliasTemplateDecl 0x7fa81d083018 <line:405:3, line:406:27> col:3 __constructible
|   | | |-TemplateTypeParmDecl 0x7fa81d082c48 <line:405:13, col:19> col:19 referenced class depth 0 index 0 _FromArgs
|   | | |-TemplateTypeParmDecl 0x7fa81d082cb8 <col:30, col:36> col:36 referenced class depth 0 index 1 _ToArgs
|   | | `-TypeAliasDecl 0x7fa81d082fb8 <line:406:3, col:27> col:9 __constructible 'decltype(__do_test<is_constructible>(_ToArgs({}), _FromArgs({})))'
|   | |   `-DecltypeType 0x7fa81d082f80 'decltype(__do_test<is_constructible>(_ToArgs({}), _FromArgs({})))' dependent
|   | |     `-CallExpr 0x7fa81d082f00 <col:36, col:86> '<dependent type>'
|   | |       |-UnresolvedLookupExpr 0x7fa81d082d60 <col:36, col:62> '<overloaded function type>' lvalue (no ADL) = '__do_test' 0x7fa81d082bf8 0x7fa81d0829a8
|   | |       |-CXXUnresolvedConstructExpr 0x7fa81d082e50 <col:64, col:72> '_ToArgs'
|   | |       | `-InitListExpr 0x7fa81d082e10 <col:71, col:72> 'void'
|   | |       `-CXXUnresolvedConstructExpr 0x7fa81d082ed0 <col:75, col:85> '_FromArgs'
|   | |         `-InitListExpr 0x7fa81d082e90 <col:84, col:85> 'void'
|   | |-TypeAliasTemplateDecl 0x7fa81d083438 <line:407:3, line:408:25> col:3 __convertible
|   | | |-TemplateTypeParmDecl 0x7fa81d083068 <line:407:13, col:19> col:19 referenced class depth 0 index 0 _FromArgs
|   | | |-TemplateTypeParmDecl 0x7fa81d0830d8 <col:30, col:36> col:36 referenced class depth 0 index 1 _ToArgs
|   | | `-TypeAliasDecl 0x7fa81d0833d8 <line:408:3, col:25> col:9 __convertible 'decltype(__do_test<is_convertible>(_FromArgs({}), _ToArgs({})))'
|   | |   `-DecltypeType 0x7fa81d0833a0 'decltype(__do_test<is_convertible>(_FromArgs({}), _ToArgs({})))' dependent
|   | |     `-CallExpr 0x7fa81d083320 <col:34, col:82> '<dependent type>'
|   | |       |-UnresolvedLookupExpr 0x7fa81d083180 <col:34, col:58> '<overloaded function type>' lvalue (no ADL) = '__do_test' 0x7fa81d082bf8 0x7fa81d0829a8
|   | |       |-CXXUnresolvedConstructExpr 0x7fa81d083270 <col:60, col:70> '_FromArgs'
|   | |       | `-InitListExpr 0x7fa81d083230 <col:69, col:70> 'void'
|   | |       `-CXXUnresolvedConstructExpr 0x7fa81d0832f0 <col:73, col:81> '_ToArgs'
|   | |         `-InitListExpr 0x7fa81d0832b0 <col:80, col:81> 'void'
|   | `-TypeAliasTemplateDecl 0x7fa81d083858 <line:409:3, line:410:24> col:3 __assignable
|   |   |-TemplateTypeParmDecl 0x7fa81d083488 <line:409:13, col:19> col:19 referenced class depth 0 index 0 _FromArgs
|   |   |-TemplateTypeParmDecl 0x7fa81d0834f8 <col:30, col:36> col:36 referenced class depth 0 index 1 _ToArgs
|   |   `-TypeAliasDecl 0x7fa81d0837f8 <line:410:3, col:24> col:9 __assignable 'decltype(__do_test<is_assignable>(_ToArgs({}), _FromArgs({})))'
|   |     `-DecltypeType 0x7fa81d0837c0 'decltype(__do_test<is_assignable>(_ToArgs({}), _FromArgs({})))' dependent
|   |       `-CallExpr 0x7fa81d083740 <col:33, col:80> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x7fa81d0835a0 <col:33, col:56> '<overloaded function type>' lvalue (no ADL) = '__do_test' 0x7fa81d082bf8 0x7fa81d0829a8
|   |         |-CXXUnresolvedConstructExpr 0x7fa81d083690 <col:58, col:66> '_ToArgs'
|   |         | `-InitListExpr 0x7fa81d083650 <col:65, col:66> 'void'
|   |         `-CXXUnresolvedConstructExpr 0x7fa81d083710 <col:69, col:79> '_FromArgs'
|   |           `-InitListExpr 0x7fa81d0836d0 <col:78, col:79> 'void'
|   |-ClassTemplateDecl 0x7fa81d083f38 <line:415:1, line:418:26> line:417:8 __tuple_convertible
|   | |-TemplateTypeParmDecl 0x7fa81d0838c8 <line:415:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d083938 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl 0x7fa81d083c50 <col:33, col:92> col:38 '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d083c00 <col:40, col:92> '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl 0x7fa81d083e18 <line:416:33, col:59> col:38 '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d083dc8 <col:40, col:59> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d083ea0 <line:417:1, line:418:26> line:417:8 struct __tuple_convertible definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl 0x7fa81d0842c0 <col:1, col:8> col:8 implicit struct __tuple_convertible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d0846c0 <line:420:1, line:426:2> line:421:8 struct __tuple_convertible definition
|   | |-public 'struct __tuple_sfinae_base::__convertible<typename __make_tuple_types<_Tp>::type, typename __make_tuple_types<_Up>::type>':'decltype(__do_test<is_convertible>(typename __make_tuple_types<type-parameter-0-0, tuple_size<typename remove_reference<type-parameter-0-0>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-0>::type>::value == tuple_size<typename remove_reference<type-parameter-0-0>::type>::value)>::type({}), typename __make_tuple_types<type-parameter-0-1, tuple_size<typename remove_reference<type-parameter-0-1>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-1>::type>::value == tuple_size<typename remove_reference<type-parameter-0-1>::type>::value)>::type({})))'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d084378 <line:420:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d0843e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl 0x7fa81d085c88 <line:421:1, col:8> col:8 implicit struct __tuple_convertible
|   |-ClassTemplateDecl 0x7fa81d0862d8 <line:430:1, line:433:26> line:432:8 __tuple_constructible
|   | |-TemplateTypeParmDecl 0x7fa81d085d40 <line:430:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d085da8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl 0x7fa81d086048 <col:33, col:92> col:38 '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d085ff8 <col:40, col:92> '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl 0x7fa81d0861b8 <line:431:33, col:59> col:38 '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d086168 <col:40, col:59> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d086240 <line:432:1, line:433:26> line:432:8 struct __tuple_constructible definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl 0x7fa81d086660 <col:1, col:8> col:8 implicit struct __tuple_constructible
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d086a60 <line:435:1, line:441:2> line:436:8 struct __tuple_constructible definition
|   | |-public 'struct __tuple_sfinae_base::__constructible<typename __make_tuple_types<_Tp>::type, typename __make_tuple_types<_Up>::type>':'decltype(__do_test<is_constructible>(typename __make_tuple_types<type-parameter-0-1, tuple_size<typename remove_reference<type-parameter-0-1>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-1>::type>::value == tuple_size<typename remove_reference<type-parameter-0-1>::type>::value)>::type({}), typename __make_tuple_types<type-parameter-0-0, tuple_size<typename remove_reference<type-parameter-0-0>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-0>::type>::value == tuple_size<typename remove_reference<type-parameter-0-0>::type>::value)>::type({})))'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d086718 <line:435:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d086788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl 0x7fa81d087cc8 <line:436:1, col:8> col:8 implicit struct __tuple_constructible
|   |-ClassTemplateDecl 0x7fa81d088318 <line:445:1, line:448:26> line:447:8 __tuple_assignable
|   | |-TemplateTypeParmDecl 0x7fa81d087d80 <line:445:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d087de8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | |-NonTypeTemplateParmDecl 0x7fa81d088088 <col:33, col:92> col:38 '_Bool' depth 0 index 2
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d088038 <col:40, col:92> '<dependent type>' lvalue
|   | |-NonTypeTemplateParmDecl 0x7fa81d0881f8 <line:446:33, col:59> col:38 '_Bool' depth 0 index 3
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d0881a8 <col:40, col:59> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d088280 <line:447:1, line:448:26> line:447:8 struct __tuple_assignable definition
|   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   |   `-CXXRecordDecl 0x7fa81d0886a0 <col:1, col:8> col:8 implicit struct __tuple_assignable
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d088aa0 <line:450:1, line:456:2> line:451:8 struct __tuple_assignable definition
|   | |-public 'struct __tuple_sfinae_base::__assignable<typename __make_tuple_types<_Tp>::type, typename __make_tuple_types<_Up &>::type>':'decltype(__do_test<is_assignable>(typename __make_tuple_types<type-parameter-0-1 &, tuple_size<typename remove_reference<type-parameter-0-1 &>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-1 &>::type>::value == tuple_size<typename remove_reference<type-parameter-0-1 &>::type>::value)>::type({}), typename __make_tuple_types<type-parameter-0-0, tuple_size<typename remove_reference<type-parameter-0-0>::type>::value, 0, (tuple_size<typename remove_reference<type-parameter-0-0>::type>::value == tuple_size<typename remove_reference<type-parameter-0-0>::type>::value)>::type({})))'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81d088758 <line:450:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x7fa81d0887c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
|   | `-CXXRecordDecl 0x7fa81d089f18 <line:451:1, col:8> col:8 implicit struct __tuple_assignable
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d08a320 <line:459:1, line:464:1> line:460:28 class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d08a0f8 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d089fe0 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'tuple<type-parameter-0-1...>'
|   | |-NonTypeTemplateParmDecl 0x7fa81d089fe0 <line:459:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d08a038 <col:23, col:32> col:32 referenced class depth 0 index 1 ... _Tp
|   | |-TypeVisibilityAttr 0x7fa81d08a498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d08a600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:460:1, col:28> col:28 implicit class tuple_element
|   | |-AccessSpecDecl 0x7fa81d08a698 <line:462:1, col:7> col:1 public
|   | `-TypedefDecl 0x7fa81d08a970 <line:463:5, col:71> col:71 type 'typename tuple_element<_Ip, __tuple_types<_Tp...> >::type'
|   |   `-DependentNameType 0x7fa81d08a900 'typename tuple_element<_Ip, __tuple_types<_Tp...> >::type' dependent
|   |-TypeAliasTemplateDecl 0x7fa81d08ad90 <line:467:1, line:468:63> col:1 tuple_element_t
|   | |-NonTypeTemplateParmDecl 0x7fa81d08a9f8 <line:467:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d08aa50 <col:23, col:32> col:32 referenced class depth 0 index 1 ... _Tp
|   | `-TypeAliasDecl 0x7fa81d08ad30 <line:468:1, col:63> col:7 tuple_element_t 'typename tuple_element<_Ip, _Tp...>::type'
|   |   `-DependentNameType 0x7fa81d08acc0 'typename tuple_element<_Ip, _Tp...>::type' dependent
|   |-ClassTemplateDecl 0x7fa81d08afe0 <line:471:1, line:472:49> col:8 __tuple_like_with_size_imp
|   | |-NonTypeTemplateParmDecl 0x7fa81d08adf0 <line:471:11, col:16> col:16 '_Bool' depth 0 index 0 _IsTuple
|   | |-TemplateTypeParmDecl 0x7fa81d08ae48 <col:26, col:32> col:32 class depth 0 index 1 _SizeTrait
|   | |-NonTypeTemplateParmDecl 0x7fa81d08aec8 <col:44, col:51> col:51 'size_t':'unsigned long' depth 0 index 2 _Expected
|   | |-CXXRecordDecl 0x7fa81d08af48 <line:472:1, col:49> col:8 struct __tuple_like_with_size_imp definition
|   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
|   | | `-CXXRecordDecl 0x7fa81d08b350 <col:1, col:8> col:8 implicit struct __tuple_like_with_size_imp
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1e25f8 <line:474:1, line:476:64> line:475:8 struct __tuple_like_with_size_imp definition
|   |   |-public 'integral_constant<_Bool, class tuple_size<struct pair<unsigned long, unsigned long> >::value == 2UL>':'struct std::__1::integral_constant<_Bool, true>'
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type 'class std::__1::tuple_size<struct std::__1::pair<unsigned long, unsigned long> >'
|   |   |-TemplateArgument integral 2
|   |   `-CXXRecordDecl 0x7fa81d1e3278 prev 0x7fa81d1e25f8 <col:1, col:8> col:8 implicit struct __tuple_like_with_size_imp
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d08b6e8 <line:474:1, line:476:64> line:475:8 struct __tuple_like_with_size_imp definition
|   | |-public 'integral_constant<_Bool, _SizeTrait::value == _Expected>'
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d08b528 <col:53> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d08b488 '_Expected' 'size_t':'unsigned long'
|   | |-TemplateTypeParmDecl 0x7fa81d08b408 <line:474:11, col:17> col:17 referenced class depth 0 index 0 _SizeTrait
|   | |-NonTypeTemplateParmDecl 0x7fa81d08b488 <col:29, col:36> col:36 referenced 'size_t':'unsigned long' depth 0 index 1 _Expected
|   | `-CXXRecordDecl 0x7fa81d08cc30 <line:475:1, col:8> col:8 implicit struct __tuple_like_with_size_imp
|   |-TypeAliasTemplateDecl 0x7fa81d08d448 <line:478:1, line:483:31> line:480:1 __tuple_like_with_size
|   | |-TemplateTypeParmDecl 0x7fa81d08cce8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _Tuple
|   | |-NonTypeTemplateParmDecl 0x7fa81d08cd68 <col:25, col:32> col:32 referenced 'size_t':'unsigned long' depth 0 index 1 _ExpectedSize
|   | |-TemplateTypeParmDecl 0x7fa81d08cee0 <line:479:11, col:57> col:17 referenced class depth 0 index 2 _RawTuple
|   | | `-TemplateArgument type 'typename __uncvref<_Tuple>::type'
|   | `-TypeAliasDecl 0x7fa81d08d3e8 <line:480:1, line:483:31> line:480:7 __tuple_like_with_size '__tuple_like_with_size_imp<__tuple_like<_RawTuple>::value, tuple_size<_RawTuple>, _ExpectedSize>'
|   |   `-TemplateSpecializationType 0x7fa81d08d2b0 '__tuple_like_with_size_imp<__tuple_like<_RawTuple>::value, tuple_size<_RawTuple>, _ExpectedSize>' dependent __tuple_like_with_size_imp
|   |     |-TemplateArgument expr
|   |     | `-DependentScopeDeclRefExpr 0x7fa81d08d0a0 <line:481:36, col:61> '<dependent type>' lvalue
|   |     |-TemplateArgument type 'tuple_size<_RawTuple>'
|   |     `-TemplateArgument expr
|   |       `-DeclRefExpr 0x7fa81d08d1e8 <line:482:59> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d08cd68 '_ExpectedSize' 'size_t':'unsigned long'
|   `-CXXRecordDecl 0x7fa81d08d4c8 <line:485:1, line:494:1> line:485:25 referenced struct __check_tuple_constructor_fail definition
|     |-VisibilityAttr 0x7fa81d08d5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:669:46, col:70> Default
|     |-CXXRecordDecl 0x7fa81d08d630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__tuple:485:1, col:25> col:25 implicit struct __check_tuple_constructor_fail
|     |-FunctionTemplateDecl 0x7fa81d08d868 <line:486:5, line:487:62> col:27 __enable_default
|     | |-TemplateTypeParmDecl 0x7fa81d08d6c8 <line:486:15> col:15 class depth 0 index 0 ...
|     | `-CXXMethodDecl 0x7fa81d08d7d0 <line:487:5, col:62> col:27 constexpr __enable_default '_Bool (void)' static
|     |   `-CompoundStmt 0x7fa81d08ddb8 <col:46, col:62>
|     |     `-ReturnStmt 0x7fa81d08dda0 <col:48, col:55>
|     |       `-CXXBoolLiteralExpr 0x7fa81d08dd88 <col:55> '_Bool' false
|     |-FunctionTemplateDecl 0x7fa81d08d9f8 <line:488:5, line:489:63> col:27 __enable_explicit
|     | |-TemplateTypeParmDecl 0x7fa81d08d8b8 <line:488:15> col:15 class depth 0 index 0 ...
|     | `-CXXMethodDecl 0x7fa81d08d960 <line:489:5, col:63> col:27 constexpr __enable_explicit '_Bool (void)' static
|     |   `-CompoundStmt 0x7fa81d08de08 <col:47, col:63>
|     |     `-ReturnStmt 0x7fa81d08ddf0 <col:49, col:56>
|     |       `-CXXBoolLiteralExpr 0x7fa81d08ddd8 <col:56> '_Bool' false
|     |-FunctionTemplateDecl 0x7fa81d08db88 <line:490:5, line:491:63> col:27 __enable_implicit
|     | |-TemplateTypeParmDecl 0x7fa81d08da48 <line:490:15> col:15 class depth 0 index 0 ...
|     | |-CXXMethodDecl 0x7fa81d08daf0 <line:491:5, col:63> col:27 constexpr __enable_implicit '_Bool (void)' static
|     | | `-CompoundStmt 0x7fa81d08de58 <col:47, col:63>
|     | |   `-ReturnStmt 0x7fa81d08de40 <col:49, col:56>
|     | |     `-CXXBoolLiteralExpr 0x7fa81d08de28 <col:56> '_Bool' false
|     | `-CXXMethodDecl 0x7fa81d1ea4b0 <col:5, col:63> col:27 referenced constexpr __enable_implicit '_Bool (void)' static
|     |   |-TemplateArgument pack
|     |   | `-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|     |   `-CompoundStmt 0x7fa81d1ea638 <col:47, col:63>
|     |     `-ReturnStmt 0x7fa81d1ea620 <col:49, col:56>
|     |       `-CXXBoolLiteralExpr 0x7fa81d08de28 <col:56> '_Bool' false
|     `-FunctionTemplateDecl 0x7fa81d08dd18 <line:492:5, line:493:61> col:27 __enable_assign
|       |-TemplateTypeParmDecl 0x7fa81d08dbd8 <line:492:15> col:15 class depth 0 index 0 ...
|       |-CXXMethodDecl 0x7fa81d08dc80 <line:493:5, col:61> col:27 constexpr __enable_assign '_Bool (void)' static
|       | `-CompoundStmt 0x7fa81d08dea8 <col:45, col:61>
|       |   `-ReturnStmt 0x7fa81d08de90 <col:47, col:54>
|       |     `-CXXBoolLiteralExpr 0x7fa81d08de78 <col:54> '_Bool' false
|       `-CXXMethodDecl 0x7fa81d1ef290 <col:5, col:61> col:27 referenced constexpr __enable_assign '_Bool (void)' static
|         |-TemplateArgument pack
|         | `-TemplateArgument type 'struct std::__1::pair<unsigned long, unsigned long>'
|         `-CompoundStmt 0x7fa81d1ef418 <col:45, col:61>
|           `-ReturnStmt 0x7fa81d1ef400 <col:47, col:54>
|             `-CXXBoolLiteralExpr 0x7fa81d08de78 <col:54> '_Bool' false
|-BuiltinTemplateDecl 0x7fa81d06c578 <<invalid sloc>> <invalid sloc> implicit __make_integer_seq
| |-TemplateTemplateParmDecl 0x7fa81d06c6b0 <<invalid sloc>> <invalid sloc> implicit depth 0 index 0
| | |-TemplateTypeParmDecl 0x7fa81d06c5b8 <<invalid sloc>> <invalid sloc> implicit typename depth 1 index 0
| | `-NonTypeTemplateParmDecl 0x7fa81d06c638 <<invalid sloc>> <invalid sloc> implicit 'type-parameter-1-0' depth 0 index 1 ...
| |-TemplateTypeParmDecl 0x7fa81d06c700 <<invalid sloc>> <invalid sloc> implicit typename depth 0 index 1
| `-NonTypeTemplateParmDecl 0x7fa81d06c778 <<invalid sloc>> <invalid sloc> 'type-parameter-0-1' depth 0 index 2
|-BuiltinTemplateDecl 0x7fa81d0764b8 <<invalid sloc>> <invalid sloc> implicit __type_pack_element
| |-NonTypeTemplateParmDecl 0x7fa81d076510 <<invalid sloc>> <invalid sloc> 'unsigned long' depth 0 index 0
| `-TemplateTypeParmDecl 0x7fa81d076568 <<invalid sloc>> <invalid sloc> implicit typename depth 0 index 1 ...
|-NamespaceDecl 0x7fa81d08dec8 prev 0x7fa81d011b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:53:1, line:116:1> line:53:11 std
| |-original Namespace 0x7fa81c066458 'std'
| |-ClassTemplateDecl 0x7fa81d08e078 <line:58:1, line:94:1> line:59:28 initializer_list
| | |-TemplateTypeParmDecl 0x7fa81d08df30 <line:58:10, col:16> col:16 referenced class depth 0 index 0 _Ep
| | `-CXXRecordDecl 0x7fa81d08dfe0 <line:59:1, line:94:1> line:59:28 class initializer_list definition
| |   |-TypeVisibilityAttr 0x7fa81d08e2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-CXXRecordDecl 0x7fa81d08e338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:59:1, col:28> col:28 implicit referenced class initializer_list
| |   |-FieldDecl 0x7fa81d08e438 <line:61:5, col:16> col:16 referenced __begin_ 'const _Ep *'
| |   |-FieldDecl 0x7fa81d08e490 <line:62:5, col:15> col:15 referenced __size_ 'size_t':'unsigned long'
| |   |-CXXConstructorDecl 0x7fa81d08e6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:69:10> line:66:5 constexpr initializer_list<_Ep> 'void (const _Ep *, size_t) noexcept'
| |   | |-ParmVarDecl 0x7fa81d08e518 <col:22, col:33> col:33 referenced __b 'const _Ep *'
| |   | |-ParmVarDecl 0x7fa81d08e588 <col:38, col:45> col:45 referenced __s 'size_t':'unsigned long'
| |   | |-CXXCtorInitializer Field 0x7fa81d08e438 '__begin_' 'const _Ep *'
| |   | | `-ParenListExpr 0x7fa81d090d48 <line:67:19, col:23> 'NULL TYPE'
| |   | |   `-DeclRefExpr 0x7fa81d090d20 <col:20> 'const _Ep *' lvalue ParmVar 0x7fa81d08e518 '__b' 'const _Ep *'
| |   | |-CXXCtorInitializer Field 0x7fa81d08e490 '__size_' 'size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x7fa81d090df8 <line:68:19> 'size_t':'unsigned long' <LValueToRValue>
| |   | |   `-DeclRefExpr 0x7fa81d090da0 <col:19> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d08e588 '__s' 'size_t':'unsigned long'
| |   | |-CompoundStmt 0x7fa81d090e48 <line:69:9, col:10>
| |   | |-AlwaysInlineAttr 0x7fa81d08e7b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   | `-VisibilityAttr 0x7fa81d08e7f8 <col:48, col:71> Hidden
| |   |-AccessSpecDecl 0x7fa81d08e808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:70:1, col:7> col:1 public
| |   |-TypedefDecl 0x7fa81d08e840 <line:71:5, col:24> col:24 value_type '_Ep'
| |   | `-TemplateTypeParmType 0x7fa81d08df70 '_Ep' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x7fa81d08df30 '_Ep'
| |   |-TypedefDecl 0x7fa81d08e8d8 <line:72:5, col:24> col:24 reference 'const _Ep &'
| |   | `-LValueReferenceType 0x7fa81d08e8a0 'const _Ep &' dependent
| |   |   `-QualType 0x7fa81d08df71 'const _Ep' const
| |   |     `-TemplateTypeParmType 0x7fa81d08df70 '_Ep' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa81d08df30 '_Ep'
| |   |-TypedefDecl 0x7fa81d08e940 <line:73:5, col:24> col:24 const_reference 'const _Ep &'
| |   | `-LValueReferenceType 0x7fa81d08e8a0 'const _Ep &' dependent
| |   |   `-QualType 0x7fa81d08df71 'const _Ep' const
| |   |     `-TemplateTypeParmType 0x7fa81d08df70 '_Ep' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa81d08df30 '_Ep'
| |   |-TypedefDecl 0x7fa81d08e9a8 <line:74:5, col:23> col:23 size_type 'size_t':'unsigned long'
| |   | `-TypedefType 0x7fa81c0ce3d0 'size_t' sugar
| |   |   |-Typedef 0x7fa81c0665b0 'size_t'
| |   |   `-BuiltinType 0x7fa81c032880 'unsigned long'
| |   |-TypedefDecl 0x7fa81d08ea10 <line:76:5, col:24> col:24 iterator 'const _Ep *'
| |   | `-PointerType 0x7fa81d08e400 'const _Ep *' dependent
| |   |   `-QualType 0x7fa81d08df71 'const _Ep' const
| |   |     `-TemplateTypeParmType 0x7fa81d08df70 '_Ep' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa81d08df30 '_Ep'
| |   |-TypedefDecl 0x7fa81d08ea78 <line:77:5, col:24> col:24 const_iterator 'const _Ep *'
| |   | `-PointerType 0x7fa81d08e400 'const _Ep *' dependent
| |   |   `-QualType 0x7fa81d08df71 'const _Ep' const
| |   |     `-TemplateTypeParmType 0x7fa81d08df70 '_Ep' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa81d08df30 '_Ep'
| |   |-CXXConstructorDecl 0x7fa81d08eb58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:81:67> col:5 constexpr initializer_list<_Ep> 'void (void) noexcept'
| |   | |-CXXCtorInitializer Field 0x7fa81d08e438 '__begin_' 'const _Ep *'
| |   | | `-ParenListExpr 0x7fa81d090e78 <col:44, col:52> 'NULL TYPE'
| |   | |   `-CXXNullPtrLiteralExpr 0x7fa81d090e60 <col:45> 'nullptr_t'
| |   | |-CXXCtorInitializer Field 0x7fa81d08e490 '__size_' 'size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x7fa81d090f20 <col:63> 'size_t':'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x7fa81d090ed0 <col:63> 'int' 0
| |   | |-CompoundStmt 0x7fa81d090f70 <col:66, col:67>
| |   | |-AlwaysInlineAttr 0x7fa81d090800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   | `-VisibilityAttr 0x7fa81d090848 <col:48, col:71> Hidden
| |   |-CXXMethodDecl 0x7fa81d090918 <col:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:85:55> col:15 constexpr size 'size_t (void) const noexcept'
| |   | |-CompoundStmt 0x7fa81d090ff0 <col:39, col:55>
| |   | | `-ReturnStmt 0x7fa81d090fd8 <col:40, col:47>
| |   | |   `-MemberExpr 0x7fa81d090fa0 <col:47> 'const size_t':'const unsigned long' lvalue ->__size_ 0x7fa81d08e490
| |   | |     `-CXXThisExpr 0x7fa81d090f88 <col:47> 'const initializer_list<_Ep> *' this
| |   | |-AlwaysInlineAttr 0x7fa81d0909b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   | `-VisibilityAttr 0x7fa81d0909f8 <col:48, col:71> Hidden
| |   |-CXXMethodDecl 0x7fa81d090ac8 <col:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:89:57> col:16 constexpr begin 'const _Ep *(void) const noexcept'
| |   | |-CompoundStmt 0x7fa81d091078 <col:40, col:57>
| |   | | `-ReturnStmt 0x7fa81d091060 <col:41, col:48>
| |   | |   `-MemberExpr 0x7fa81d091028 <col:48> 'const _Ep *const' lvalue ->__begin_ 0x7fa81d08e438
| |   | |     `-CXXThisExpr 0x7fa81d091010 <col:48> 'const initializer_list<_Ep> *' this
| |   | |-AlwaysInlineAttr 0x7fa81d090b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   | `-VisibilityAttr 0x7fa81d090ba8 <col:48, col:71> Hidden
| |   `-CXXMethodDecl 0x7fa81d090c10 <col:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:93:67> col:16 constexpr end 'const _Ep *(void) const noexcept'
| |     |-CompoundStmt 0x7fa81d091178 <col:40, col:67>
| |     | `-ReturnStmt 0x7fa81d091160 <col:41, col:59>
| |     |   `-BinaryOperator 0x7fa81d091138 <col:48, col:59> '<dependent type>' '+'
| |     |     |-MemberExpr 0x7fa81d0910b0 <col:48> 'const _Ep *const' lvalue ->__begin_ 0x7fa81d08e438
| |     |     | `-CXXThisExpr 0x7fa81d091098 <col:48> 'const initializer_list<_Ep> *' this
| |     |     `-MemberExpr 0x7fa81d091100 <col:59> 'const size_t':'const unsigned long' lvalue ->__size_ 0x7fa81d08e490
| |     |       `-CXXThisExpr 0x7fa81d0910e8 <col:59> 'const initializer_list<_Ep> *' this
| |     |-AlwaysInlineAttr 0x7fa81d090ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |     `-VisibilityAttr 0x7fa81d090cf0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa81d0914e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:96:1, line:103:1> line:100:1 begin
| | |-TemplateTypeParmDecl 0x7fa81d091198 <line:96:10, col:16> col:16 referenced class depth 0 index 0 _Ep
| | `-FunctionDecl 0x7fa81d091448 <line:97:1, line:103:1> line:100:1 constexpr begin 'const _Ep *(initializer_list<_Ep>) noexcept' inline
| |   |-ParmVarDecl 0x7fa81d091308 <col:7, col:29> col:29 referenced __il 'initializer_list<_Ep>'
| |   |-CompoundStmt 0x7fa81d091650 <line:101:1, line:103:1>
| |   | `-ReturnStmt 0x7fa81d091638 <line:102:5, col:23>
| |   |   `-CallExpr 0x7fa81d091610 <col:12, col:23> '<dependent type>'
| |   |     `-CXXDependentScopeMemberExpr 0x7fa81d0915b8 <col:12, col:17> '<dependent type>' lvalue .begin
| |   |       `-DeclRefExpr 0x7fa81d091590 <col:12> 'initializer_list<_Ep>' lvalue ParmVar 0x7fa81d091308 '__il' 'initializer_list<_Ep>'
| |   |-AlwaysInlineAttr 0x7fa81d091538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa81d091580 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fa81d091970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/initializer_list:105:1, line:112:1> line:109:1 end
|   |-TemplateTypeParmDecl 0x7fa81d091670 <line:105:10, col:16> col:16 referenced class depth 0 index 0 _Ep
|   `-FunctionDecl 0x7fa81d0918d8 <line:106:1, line:112:1> line:109:1 constexpr end 'const _Ep *(initializer_list<_Ep>) noexcept' inline
|     |-ParmVarDecl 0x7fa81d0917d8 <col:5, col:27> col:27 referenced __il 'initializer_list<_Ep>'
|     |-CompoundStmt 0x7fa81d091ae0 <line:110:1, line:112:1>
|     | `-ReturnStmt 0x7fa81d091ac8 <line:111:5, col:21>
|     |   `-CallExpr 0x7fa81d091aa0 <col:12, col:21> '<dependent type>'
|     |     `-CXXDependentScopeMemberExpr 0x7fa81d091a48 <col:12, col:17> '<dependent type>' lvalue .end
|     |       `-DeclRefExpr 0x7fa81d091a20 <col:12> 'initializer_list<_Ep>' lvalue ParmVar 0x7fa81d0917d8 '__il' 'initializer_list<_Ep>'
|     |-AlwaysInlineAttr 0x7fa81d0919c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7fa81d091a10 <col:51, col:74> Hidden
|-TypedefDecl 0x7fa81d091b18 </usr/include/i386/_types.h:37:1, col:24> col:24 __int8_t 'signed char'
| `-BuiltinType 0x7fa81c032780 'signed char'
|-TypedefDecl 0x7fa81d091b88 <line:41:1, col:24> col:24 __uint8_t 'unsigned char'
| `-BuiltinType 0x7fa81c032820 'unsigned char'
|-TypedefDecl 0x7fa81d091bf8 <line:42:1, col:17> col:17 __int16_t 'short'
| `-BuiltinType 0x7fa81c0327a0 'short'
|-TypedefDecl 0x7fa81d091c68 <line:43:1, col:25> col:25 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x7fa81c032840 'unsigned short'
|-TypedefDecl 0x7fa81d091cd8 <line:44:1, col:15> col:15 referenced __int32_t 'int'
| `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d091d48 <line:45:1, col:23> col:23 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d091db8 <line:46:1, col:20> col:20 referenced __int64_t 'long long'
| `-BuiltinType 0x7fa81c032800 'long long'
|-TypedefDecl 0x7fa81d091e28 <line:47:1, col:28> col:28 referenced __uint64_t 'unsigned long long'
| `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|-TypedefDecl 0x7fa81d091e98 <line:49:1, col:16> col:16 referenced __darwin_intptr_t 'long'
| `-BuiltinType 0x7fa81c0327e0 'long'
|-TypedefDecl 0x7fa81d091f08 <line:50:1, col:23> col:23 referenced __darwin_natural_t 'unsigned int'
| `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d091f78 <line:70:1, col:15> col:15 __darwin_ct_rune_t 'int'
| `-BuiltinType 0x7fa81c0327c0 'int'
|-CXXRecordDecl 0x7fa81d091fd0 <line:76:9, line:79:1> line:76:9 union definition
| |-FieldDecl 0x7fa81d092178 <line:77:2, col:22> col:8 __mbstate8 'char [128]'
| `-FieldDecl 0x7fa81d0921d8 <line:78:2, col:12> col:12 _mbstateL 'long long'
|-TypedefDecl 0x7fa81d092290 <line:76:1, line:79:3> col:3 referenced __mbstate_t 'union __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0x7fa81d092240 'union __mbstate_t' sugar
|   `-RecordType 0x7fa81d092070 '__mbstate_t'
|     `-CXXRecord 0x7fa81d091fd0 ''
|-TypedefDecl 0x7fa81d092330 <line:81:1, col:22> col:22 __darwin_mbstate_t '__mbstate_t':'__mbstate_t'
| `-TypedefType 0x7fa81d092300 '__mbstate_t' sugar
|   |-Typedef 0x7fa81d092290 '__mbstate_t'
|   `-ElaboratedType 0x7fa81d092240 'union __mbstate_t' sugar
|     `-RecordType 0x7fa81d092070 '__mbstate_t'
|       `-CXXRecord 0x7fa81d091fd0 ''
|-TypedefDecl 0x7fa81d0923a0 <line:84:1, col:26> col:26 __darwin_ptrdiff_t 'long'
| `-BuiltinType 0x7fa81c0327e0 'long'
|-TypedefDecl 0x7fa81d092410 <line:92:1, col:24> col:24 __darwin_size_t 'unsigned long'
| `-BuiltinType 0x7fa81c032880 'unsigned long'
|-TypedefDecl 0x7fa81d0924a0 <line:98:1, col:27> col:27 __darwin_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x7fa81d092470 '__builtin_va_list' sugar
|   |-Typedef 0x7fa81c066400 '__builtin_va_list'
|   `-ConstantArrayType 0x7fa81c033390 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x7fa81c0331a0 'struct __va_list_tag'
|       `-CXXRecord 0x7fa81c033108 '__va_list_tag'
|-TypedefDecl 0x7fa81d092510 <line:104:1, col:25> col:25 referenced __darwin_wchar_t 'int'
| `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d0925a0 <line:109:1, col:26> col:26 __darwin_rune_t '__darwin_wchar_t':'int'
| `-TypedefType 0x7fa81d092570 '__darwin_wchar_t' sugar
|   |-Typedef 0x7fa81d092510 '__darwin_wchar_t'
|   `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d092610 <line:112:1, col:24> col:24 __darwin_wint_t 'int'
| `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d092680 <line:117:1, col:24> col:24 __darwin_clock_t 'unsigned long'
| `-BuiltinType 0x7fa81c032880 'unsigned long'
|-TypedefDecl 0x7fa81d092710 <line:118:1, col:21> col:21 __darwin_socklen_t '__uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d0926e0 '__uint32_t' sugar
|   |-Typedef 0x7fa81d091d48 '__uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d092780 <line:119:1, col:16> col:16 referenced __darwin_ssize_t 'long'
| `-BuiltinType 0x7fa81c0327e0 'long'
|-TypedefDecl 0x7fa81d0a8800 <line:120:1, col:16> col:16 __darwin_time_t 'long'
| `-BuiltinType 0x7fa81c0327e0 'long'
|-TypedefDecl 0x7fa81d0a8890 </usr/include/sys/_types.h:55:1, col:19> col:19 __darwin_blkcnt_t '__int64_t':'long long'
| `-TypedefType 0x7fa81d0a8860 '__int64_t' sugar
|   |-Typedef 0x7fa81d091db8 '__int64_t'
|   `-BuiltinType 0x7fa81c032800 'long long'
|-TypedefDecl 0x7fa81d0a8920 <line:56:1, col:19> col:19 __darwin_blksize_t '__int32_t':'int'
| `-TypedefType 0x7fa81d0a88f0 '__int32_t' sugar
|   |-Typedef 0x7fa81d091cd8 '__int32_t'
|   `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d0a8988 <line:57:1, col:19> col:19 __darwin_dev_t '__int32_t':'int'
| `-TypedefType 0x7fa81d0a88f0 '__int32_t' sugar
|   |-Typedef 0x7fa81d091cd8 '__int32_t'
|   `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d0a89f8 <line:58:1, col:22> col:22 __darwin_fsblkcnt_t 'unsigned int'
| `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a8a68 <line:59:1, col:22> col:22 __darwin_fsfilcnt_t 'unsigned int'
| `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a8ad0 <line:60:1, col:20> col:20 __darwin_gid_t '__uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d0926e0 '__uint32_t' sugar
|   |-Typedef 0x7fa81d091d48 '__uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a8b38 <line:61:1, col:20> col:20 __darwin_id_t '__uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d0926e0 '__uint32_t' sugar
|   |-Typedef 0x7fa81d091d48 '__uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a8bc0 <line:62:1, col:20> col:20 referenced __darwin_ino64_t '__uint64_t':'unsigned long long'
| `-TypedefType 0x7fa81d0a8b90 '__uint64_t' sugar
|   |-Typedef 0x7fa81d091e28 '__uint64_t'
|   `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|-TypedefDecl 0x7fa81d0a8c50 <line:64:1, col:26> col:26 __darwin_ino_t '__darwin_ino64_t':'unsigned long long'
| `-TypedefType 0x7fa81d0a8c20 '__darwin_ino64_t' sugar
|   |-Typedef 0x7fa81d0a8bc0 '__darwin_ino64_t'
|   `-TypedefType 0x7fa81d0a8b90 '__uint64_t' sugar
|     |-Typedef 0x7fa81d091e28 '__uint64_t'
|     `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|-TypedefDecl 0x7fa81d0a8ce0 <line:68:1, col:28> col:28 referenced __darwin_mach_port_name_t '__darwin_natural_t':'unsigned int'
| `-TypedefType 0x7fa81d0a8cb0 '__darwin_natural_t' sugar
|   |-Typedef 0x7fa81d091f08 '__darwin_natural_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a8d70 <line:69:1, col:35> col:35 __darwin_mach_port_t '__darwin_mach_port_name_t':'unsigned int'
| `-TypedefType 0x7fa81d0a8d40 '__darwin_mach_port_name_t' sugar
|   |-Typedef 0x7fa81d0a8ce0 '__darwin_mach_port_name_t'
|   `-TypedefType 0x7fa81d0a8cb0 '__darwin_natural_t' sugar
|     |-Typedef 0x7fa81d091f08 '__darwin_natural_t'
|     `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a8e00 <line:70:1, col:20> col:20 __darwin_mode_t '__uint16_t':'unsigned short'
| `-TypedefType 0x7fa81d0a8dd0 '__uint16_t' sugar
|   |-Typedef 0x7fa81d091c68 '__uint16_t'
|   `-BuiltinType 0x7fa81c032840 'unsigned short'
|-TypedefDecl 0x7fa81d0a8e68 <line:71:1, col:19> col:19 __darwin_off_t '__int64_t':'long long'
| `-TypedefType 0x7fa81d0a8860 '__int64_t' sugar
|   |-Typedef 0x7fa81d091db8 '__int64_t'
|   `-BuiltinType 0x7fa81c032800 'long long'
|-TypedefDecl 0x7fa81d0a8ed0 <line:72:1, col:19> col:19 __darwin_pid_t '__int32_t':'int'
| `-TypedefType 0x7fa81d0a88f0 '__int32_t' sugar
|   |-Typedef 0x7fa81d091cd8 '__int32_t'
|   `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d0a8f38 <line:73:1, col:20> col:20 __darwin_sigset_t '__uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d0926e0 '__uint32_t' sugar
|   |-Typedef 0x7fa81d091d48 '__uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a8fa0 <line:74:1, col:19> col:19 __darwin_suseconds_t '__int32_t':'int'
| `-TypedefType 0x7fa81d0a88f0 '__int32_t' sugar
|   |-Typedef 0x7fa81d091cd8 '__int32_t'
|   `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d0a9008 <line:75:1, col:20> col:20 __darwin_uid_t '__uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d0926e0 '__uint32_t' sugar
|   |-Typedef 0x7fa81d091d48 '__uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a9070 <line:76:1, col:20> col:20 __darwin_useconds_t '__uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d0926e0 '__uint32_t' sugar
|   |-Typedef 0x7fa81d091d48 '__uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d0a9150 <line:77:1, col:41> col:23 __darwin_uuid_t 'unsigned char [16]'
| `-ConstantArrayType 0x7fa81d0a90f0 'unsigned char [16]' 16 
|   `-BuiltinType 0x7fa81c032820 'unsigned char'
|-TypedefDecl 0x7fa81d0a9228 <line:78:1, col:39> col:14 __darwin_uuid_string_t 'char [37]'
| `-ConstantArrayType 0x7fa81d0a91d0 'char [37]' 37 
|   `-BuiltinType 0x7fa81c032760 'char'
|-CXXRecordDecl 0x7fa81d0a9280 </usr/include/sys/_pthread/_pthread_types.h:57:1, line:61:1> line:57:8 struct __darwin_pthread_handler_rec definition
| |-CXXRecordDecl 0x7fa81d0a93a8 <col:1, col:8> col:8 implicit struct __darwin_pthread_handler_rec
| |-FieldDecl 0x7fa81d0a95f0 <line:58:2, col:26> col:9 __routine 'void (*)(void *)'
| |-FieldDecl 0x7fa81d0a9650 <line:59:2, col:8> col:8 __arg 'void *'
| `-FieldDecl 0x7fa81d0a9720 <line:60:2, col:39> col:39 __next 'struct __darwin_pthread_handler_rec *'
|-CXXRecordDecl 0x7fa81d0a9788 <line:63:1, line:66:1> line:63:8 struct _opaque_pthread_attr_t definition
| |-CXXRecordDecl 0x7fa81d0a98a8 <col:1, col:8> col:8 implicit struct _opaque_pthread_attr_t
| |-FieldDecl 0x7fa81d0a9958 <line:64:2, col:7> col:7 __sig 'long'
| `-FieldDecl 0x7fa81d0a9a18 <line:65:2, col:37> col:7 __opaque 'char [56]'
|-CXXRecordDecl 0x7fa81d0a9a80 <line:68:1, line:71:1> line:68:8 struct _opaque_pthread_cond_t definition
| |-CXXRecordDecl 0x7fa81d0a9ba8 <col:1, col:8> col:8 implicit struct _opaque_pthread_cond_t
| |-FieldDecl 0x7fa81d0a9c58 <line:69:2, col:7> col:7 __sig 'long'
| `-FieldDecl 0x7fa81d0a9d18 <line:70:2, col:37> col:7 __opaque 'char [40]'
|-CXXRecordDecl 0x7fa81d0a9d80 <line:73:1, line:76:1> line:73:8 struct _opaque_pthread_condattr_t definition
| |-CXXRecordDecl 0x7fa81d0a9ea8 <col:1, col:8> col:8 implicit struct _opaque_pthread_condattr_t
| |-FieldDecl 0x7fa81d0a9f58 <line:74:2, col:7> col:7 __sig 'long'
| `-FieldDecl 0x7fa81d0a9fe0 <line:75:2, col:41> col:7 __opaque 'char [8]'
|-CXXRecordDecl 0x7fa81d0aa048 <line:78:1, line:81:1> line:78:8 struct _opaque_pthread_mutex_t definition
| |-CXXRecordDecl 0x7fa81d0aa168 <col:1, col:8> col:8 implicit struct _opaque_pthread_mutex_t
| |-FieldDecl 0x7fa81d0aa218 <line:79:2, col:7> col:7 __sig 'long'
| `-FieldDecl 0x7fa81d0aa2a0 <line:80:2, col:38> col:7 __opaque 'char [56]'
|-CXXRecordDecl 0x7fa81d0aa308 <line:83:1, line:86:1> line:83:8 struct _opaque_pthread_mutexattr_t definition
| |-CXXRecordDecl 0x7fa81d0aa428 <col:1, col:8> col:8 implicit struct _opaque_pthread_mutexattr_t
| |-FieldDecl 0x7fa81d0aa4d8 <line:84:2, col:7> col:7 __sig 'long'
| `-FieldDecl 0x7fa81d0aa560 <line:85:2, col:42> col:7 __opaque 'char [8]'
|-CXXRecordDecl 0x7fa81d0aa5c8 <line:88:1, line:91:1> line:88:8 struct _opaque_pthread_once_t definition
| |-CXXRecordDecl 0x7fa81d0aa6e8 <col:1, col:8> col:8 implicit struct _opaque_pthread_once_t
| |-FieldDecl 0x7fa81d0aa798 <line:89:2, col:7> col:7 __sig 'long'
| `-FieldDecl 0x7fa81d0af820 <line:90:2, col:37> col:7 __opaque 'char [8]'
|-CXXRecordDecl 0x7fa81d0af888 <line:93:1, line:96:1> line:93:8 struct _opaque_pthread_rwlock_t definition
| |-CXXRecordDecl 0x7fa81d0af9a8 <col:1, col:8> col:8 implicit struct _opaque_pthread_rwlock_t
| |-FieldDecl 0x7fa81d0afa58 <line:94:2, col:7> col:7 __sig 'long'
| `-FieldDecl 0x7fa81d0afb18 <line:95:2, col:39> col:7 __opaque 'char [192]'
|-CXXRecordDecl 0x7fa81d0afb80 <line:98:1, line:101:1> line:98:8 struct _opaque_pthread_rwlockattr_t definition
| |-CXXRecordDecl 0x7fa81d0afca8 <col:1, col:8> col:8 implicit struct _opaque_pthread_rwlockattr_t
| |-FieldDecl 0x7fa81d0afd58 <line:99:2, col:7> col:7 __sig 'long'
| `-FieldDecl 0x7fa81d0afe18 <line:100:2, col:43> col:7 __opaque 'char [16]'
|-CXXRecordDecl 0x7fa81d0afe80 <line:103:1, line:107:1> line:103:8 struct _opaque_pthread_t definition
| |-CXXRecordDecl 0x7fa81d0affa8 <col:1, col:8> col:8 implicit struct _opaque_pthread_t
| |-FieldDecl 0x7fa81d0b0058 <line:104:2, col:7> col:7 __sig 'long'
| |-FieldDecl 0x7fa81d0b00c8 <line:105:2, col:40> col:40 __cleanup_stack 'struct __darwin_pthread_handler_rec *'
| `-FieldDecl 0x7fa81d0b0188 <line:106:2, col:32> col:7 __opaque 'char [8176]'
|-TypedefDecl 0x7fa81d0b0240 <line:109:1, col:39> col:39 __darwin_pthread_attr_t 'struct _opaque_pthread_attr_t':'struct _opaque_pthread_attr_t'
| `-ElaboratedType 0x7fa81d0b01f0 'struct _opaque_pthread_attr_t' sugar
|   `-RecordType 0x7fa81d0a9820 'struct _opaque_pthread_attr_t'
|     `-CXXRecord 0x7fa81d0a9788 '_opaque_pthread_attr_t'
|-TypedefDecl 0x7fa81d0b02f0 <line:110:1, col:39> col:39 __darwin_pthread_cond_t 'struct _opaque_pthread_cond_t':'struct _opaque_pthread_cond_t'
| `-ElaboratedType 0x7fa81d0b02a0 'struct _opaque_pthread_cond_t' sugar
|   `-RecordType 0x7fa81d0a9b20 'struct _opaque_pthread_cond_t'
|     `-CXXRecord 0x7fa81d0a9a80 '_opaque_pthread_cond_t'
|-TypedefDecl 0x7fa81d0b03a0 <line:111:1, col:43> col:43 __darwin_pthread_condattr_t 'struct _opaque_pthread_condattr_t':'struct _opaque_pthread_condattr_t'
| `-ElaboratedType 0x7fa81d0b0350 'struct _opaque_pthread_condattr_t' sugar
|   `-RecordType 0x7fa81d0a9e20 'struct _opaque_pthread_condattr_t'
|     `-CXXRecord 0x7fa81d0a9d80 '_opaque_pthread_condattr_t'
|-TypedefDecl 0x7fa81d0b0410 <line:112:1, col:23> col:23 __darwin_pthread_key_t 'unsigned long'
| `-BuiltinType 0x7fa81c032880 'unsigned long'
|-TypedefDecl 0x7fa81d0b04c0 <line:113:1, col:40> col:40 __darwin_pthread_mutex_t 'struct _opaque_pthread_mutex_t':'struct _opaque_pthread_mutex_t'
| `-ElaboratedType 0x7fa81d0b0470 'struct _opaque_pthread_mutex_t' sugar
|   `-RecordType 0x7fa81d0aa0e0 'struct _opaque_pthread_mutex_t'
|     `-CXXRecord 0x7fa81d0aa048 '_opaque_pthread_mutex_t'
|-TypedefDecl 0x7fa81d0b0570 <line:114:1, col:44> col:44 __darwin_pthread_mutexattr_t 'struct _opaque_pthread_mutexattr_t':'struct _opaque_pthread_mutexattr_t'
| `-ElaboratedType 0x7fa81d0b0520 'struct _opaque_pthread_mutexattr_t' sugar
|   `-RecordType 0x7fa81d0aa3a0 'struct _opaque_pthread_mutexattr_t'
|     `-CXXRecord 0x7fa81d0aa308 '_opaque_pthread_mutexattr_t'
|-TypedefDecl 0x7fa81d0b0620 <line:115:1, col:39> col:39 __darwin_pthread_once_t 'struct _opaque_pthread_once_t':'struct _opaque_pthread_once_t'
| `-ElaboratedType 0x7fa81d0b05d0 'struct _opaque_pthread_once_t' sugar
|   `-RecordType 0x7fa81d0aa660 'struct _opaque_pthread_once_t'
|     `-CXXRecord 0x7fa81d0aa5c8 '_opaque_pthread_once_t'
|-TypedefDecl 0x7fa81d0b06d0 <line:116:1, col:41> col:41 __darwin_pthread_rwlock_t 'struct _opaque_pthread_rwlock_t':'struct _opaque_pthread_rwlock_t'
| `-ElaboratedType 0x7fa81d0b0680 'struct _opaque_pthread_rwlock_t' sugar
|   `-RecordType 0x7fa81d0af920 'struct _opaque_pthread_rwlock_t'
|     `-CXXRecord 0x7fa81d0af888 '_opaque_pthread_rwlock_t'
|-TypedefDecl 0x7fa81d0b0780 <line:117:1, col:45> col:45 __darwin_pthread_rwlockattr_t 'struct _opaque_pthread_rwlockattr_t':'struct _opaque_pthread_rwlockattr_t'
| `-ElaboratedType 0x7fa81d0b0730 'struct _opaque_pthread_rwlockattr_t' sugar
|   `-RecordType 0x7fa81d0afc20 'struct _opaque_pthread_rwlockattr_t'
|     `-CXXRecord 0x7fa81d0afb80 '_opaque_pthread_rwlockattr_t'
|-TypedefDecl 0x7fa81d0b0890 <line:118:1, col:35> col:35 __darwin_pthread_t 'struct _opaque_pthread_t *'
| `-PointerType 0x7fa81d0b0840 'struct _opaque_pthread_t *'
|   `-ElaboratedType 0x7fa81d0b07e0 'struct _opaque_pthread_t' sugar
|     `-RecordType 0x7fa81d0aff20 'struct _opaque_pthread_t'
|       `-CXXRecord 0x7fa81d0afe80 '_opaque_pthread_t'
|-TypedefDecl 0x7fa81d0b0900 </usr/include/_types.h:39:1, col:14> col:14 __darwin_nl_item 'int'
| `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d0b0970 <line:40:1, col:14> col:14 __darwin_wctrans_t 'int'
| `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d0b09d8 <line:42:1, col:20> col:20 __darwin_wctype_t '__uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d0926e0 '__uint32_t' sugar
|   |-Typedef 0x7fa81d091d48 '__uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-LinkageSpecDecl 0x7fa81d0b0a98 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-FunctionDecl 0x7fa81d0b0d58 </usr/include/string.h:70:1, col:50> col:7 used memchr 'void *(const void *, int, size_t)'
| | |-ParmVarDecl 0x7fa81d0b0b30 <col:14, col:26> col:26 __s 'const void *'
| | |-ParmVarDecl 0x7fa81d0b0ba8 <col:31, col:35> col:35 __c 'int'
| | `-ParmVarDecl 0x7fa81d0b0c18 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d0b1048 <line:71:1, col:59> col:6 memcmp 'int (const void *, const void *, size_t)'
| | |-ParmVarDecl 0x7fa81d0b0e20 <col:13, col:25> col:25 __s1 'const void *'
| | |-ParmVarDecl 0x7fa81d0b0e98 <col:31, col:43> col:43 __s2 'const void *'
| | `-ParmVarDecl 0x7fa81d0b0f08 <col:49, col:56> col:56 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d0b1338 <line:72:1, col:56> col:7 used memcpy 'void *(void *, const void *, size_t)'
| | |-ParmVarDecl 0x7fa81d0b1110 <col:14, col:20> col:20 __dst 'void *'
| | |-ParmVarDecl 0x7fa81d0b1188 <col:27, col:39> col:39 __src 'const void *'
| | `-ParmVarDecl 0x7fa81d0b11f8 <col:46, col:53> col:53 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d0b1588 <line:73:1, col:59> col:7 memmove 'void *(void *, const void *, size_t)'
| | |-ParmVarDecl 0x7fa81d0b1400 <col:15, col:21> col:21 __dst 'void *'
| | |-ParmVarDecl 0x7fa81d0b1478 <col:28, col:40> col:40 __src 'const void *'
| | `-ParmVarDecl 0x7fa81d0b14e8 <col:47, col:54> col:54 __len 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d103488 <line:74:1, col:46> col:7 memset 'void *(void *, int, size_t)'
| | |-ParmVarDecl 0x7fa81d0b1650 <col:14, col:20> col:20 __b 'void *'
| | |-ParmVarDecl 0x7fa81d0b16c8 <col:25, col:29> col:29 __c 'int'
| | `-ParmVarDecl 0x7fa81d0b1738 <col:34, col:41> col:41 __len 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d1036a8 <line:75:1, col:42> col:7 strcat 'char *(char *, const char *)'
| | |-ParmVarDecl 0x7fa81d103550 <col:14, col:20> col:20 __s1 'char *'
| | `-ParmVarDecl 0x7fa81d1035c8 <col:26, col:38> col:38 __s2 'const char *'
| |-FunctionDecl 0x7fa81d1038b8 <line:76:1, col:38> col:7 used strchr 'char *(const char *, int)'
| | |-ParmVarDecl 0x7fa81d103768 <col:14, col:26> col:26 __s 'const char *'
| | `-ParmVarDecl 0x7fa81d1037e0 <col:31, col:35> col:35 __c 'int'
| |-FunctionDecl 0x7fa81d103ac8 <line:77:1, col:47> col:6 strcmp 'int (const char *, const char *)'
| | |-ParmVarDecl 0x7fa81d103978 <col:13, col:25> col:25 __s1 'const char *'
| | `-ParmVarDecl 0x7fa81d1039f0 <col:31, col:43> col:43 __s2 'const char *'
| |-FunctionDecl 0x7fa81d103c98 <line:78:1, col:48> col:6 strcoll 'int (const char *, const char *)'
| | |-ParmVarDecl 0x7fa81d103b88 <col:14, col:26> col:26 __s1 'const char *'
| | `-ParmVarDecl 0x7fa81d103c00 <col:32, col:44> col:44 __s2 'const char *'
| |-FunctionDecl 0x7fa81d103e68 <line:79:1, col:44> col:7 strcpy 'char *(char *, const char *)'
| | |-ParmVarDecl 0x7fa81d103d58 <col:14, col:20> col:20 __dst 'char *'
| | `-ParmVarDecl 0x7fa81d103dd0 <col:27, col:39> col:39 __src 'const char *'
| |-FunctionDecl 0x7fa81d1040b0 <line:80:1, col:55> col:9 strcspn 'size_t (const char *, const char *)'
| | |-ParmVarDecl 0x7fa81d103f28 <col:17, col:29> col:29 __s 'const char *'
| | `-ParmVarDecl 0x7fa81d103fa0 <col:34, col:46> col:46 __charset 'const char *'
| |-FunctionDecl 0x7fa81d1042f8 <line:81:1, /usr/include/sys/cdefs.h:569:73> /usr/include/string.h:81:7 strerror 'char *(int)'
| | |-ParmVarDecl 0x7fa81d104170 <col:16, col:20> col:20 __errnum 'int'
| | `-AsmLabelAttr 0x7fa81d104390 </usr/include/sys/cdefs.h:569:36> "_strerror"
| |-FunctionDecl 0x7fa81d104510 </usr/include/string.h:82:1, col:31> col:9 strlen 'size_t (const char *)'
| | `-ParmVarDecl 0x7fa81d104410 <col:16, col:28> col:28 __s 'const char *'
| |-FunctionDecl 0x7fa81d1047e8 <line:83:1, col:55> col:7 strncat 'char *(char *, const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d1045c8 <col:15, col:21> col:21 __s1 'char *'
| | |-ParmVarDecl 0x7fa81d104640 <col:27, col:39> col:39 __s2 'const char *'
| | `-ParmVarDecl 0x7fa81d1046b0 <col:45, col:52> col:52 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d104ad8 <line:84:1, col:60> col:6 strncmp 'int (const char *, const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d1048b0 <col:14, col:26> col:26 __s1 'const char *'
| | |-ParmVarDecl 0x7fa81d104928 <col:32, col:44> col:44 __s2 'const char *'
| | `-ParmVarDecl 0x7fa81d104998 <col:50, col:57> col:57 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d104d28 <line:85:1, col:57> col:7 strncpy 'char *(char *, const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d104ba0 <col:15, col:21> col:21 __dst 'char *'
| | |-ParmVarDecl 0x7fa81d104c18 <col:28, col:40> col:40 __src 'const char *'
| | `-ParmVarDecl 0x7fa81d104c88 <col:47, col:54> col:54 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d104f48 <line:86:1, col:53> col:7 used strpbrk 'char *(const char *, const char *)'
| | |-ParmVarDecl 0x7fa81d104df0 <col:15, col:27> col:27 __s 'const char *'
| | `-ParmVarDecl 0x7fa81d104e68 <col:32, col:44> col:44 __charset 'const char *'
| |-FunctionDecl 0x7fa81d105118 <line:87:1, col:39> col:7 used strrchr 'char *(const char *, int)'
| | |-ParmVarDecl 0x7fa81d105008 <col:15, col:27> col:27 __s 'const char *'
| | `-ParmVarDecl 0x7fa81d105080 <col:32, col:36> col:36 __c 'int'
| |-FunctionDecl 0x7fa81d1052e0 <line:88:1, col:54> col:9 strspn 'size_t (const char *, const char *)'
| | |-ParmVarDecl 0x7fa81d1051d8 <col:16, col:28> col:28 __s 'const char *'
| | `-ParmVarDecl 0x7fa81d105250 <col:33, col:45> col:45 __charset 'const char *'
| |-FunctionDecl 0x7fa81d105eb0 <line:89:1, col:53> col:7 used strstr 'char *(const char *, const char *)'
| | |-ParmVarDecl 0x7fa81d1053a0 <col:14, col:26> col:26 __big 'const char *'
| | `-ParmVarDecl 0x7fa81d105e18 <col:33, col:45> col:45 __little 'const char *'
| |-FunctionDecl 0x7fa81d106080 <line:90:1, col:44> col:7 strtok 'char *(char *, const char *)'
| | |-ParmVarDecl 0x7fa81d105f70 <col:14, col:20> col:20 __str 'char *'
| | `-ParmVarDecl 0x7fa81d105fe8 <col:27, col:39> col:39 __sep 'const char *'
| `-FunctionDecl 0x7fa81d106360 <line:91:1, col:57> col:9 strxfrm 'size_t (char *, const char *, size_t)'
|   |-ParmVarDecl 0x7fa81d106140 <col:17, col:23> col:23 __s1 'char *'
|   |-ParmVarDecl 0x7fa81d1061b8 <col:29, col:41> col:41 __s2 'const char *'
|   `-ParmVarDecl 0x7fa81d106228 <col:47, col:54> col:54 __n 'size_t':'unsigned long'
|-LinkageSpecDecl 0x7fa81d106440 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| `-FunctionDecl 0x7fa81d1066a8 </usr/include/string.h:104:1, col:62> col:7 strtok_r 'char *(char *, const char *, char **)'
|   |-ParmVarDecl 0x7fa81d1064a8 <col:16, col:22> col:22 __str 'char *'
|   |-ParmVarDecl 0x7fa81d106520 <col:29, col:41> col:41 __sep 'const char *'
|   `-ParmVarDecl 0x7fa81d1065c0 <col:48, col:55> col:55 __lasts 'char **'
|-LinkageSpecDecl 0x7fa81d106788 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-FunctionDecl 0x7fa81d106a18 </usr/include/string.h:116:1, col:65> col:6 strerror_r 'int (int, char *, size_t)'
| | |-ParmVarDecl 0x7fa81d1067f0 <col:17, col:21> col:21 __errnum 'int'
| | |-ParmVarDecl 0x7fa81d106868 <col:31, col:37> col:37 __strerrbuf 'char *'
| | `-ParmVarDecl 0x7fa81d1068d8 <col:50, col:57> col:57 __buflen 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d106ba8 <line:117:1, col:30> col:7 strdup 'char *(const char *)'
| | `-ParmVarDecl 0x7fa81d106ae0 <col:14, col:26> col:26 __s1 'const char *'
| `-FunctionDecl 0x7fa81d106f08 <line:118:1, col:66> col:7 memccpy 'void *(void *, const void *, int, size_t)'
|   |-ParmVarDecl 0x7fa81d106c60 <col:15, col:21> col:21 __dst 'void *'
|   |-ParmVarDecl 0x7fa81d106cd8 <col:28, col:40> col:40 __src 'const void *'
|   |-ParmVarDecl 0x7fa81d106d50 <col:47, col:51> col:51 __c 'int'
|   `-ParmVarDecl 0x7fa81d106dc0 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
|-LinkageSpecDecl 0x7fa81d106ff0 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-FunctionDecl 0x7fa81d107168 </usr/include/string.h:130:1, col:44> col:7 stpcpy 'char *(char *, const char *)'
| | |-ParmVarDecl 0x7fa81d107058 <col:14, col:20> col:20 __dst 'char *'
| | `-ParmVarDecl 0x7fa81d1070d0 <col:27, col:39> col:39 __src 'const char *'
| |-FunctionDecl 0x7fa81d1073c0 <line:131:1, /usr/include/AvailabilityInternal.h:21454:124> /usr/include/string.h:131:10 stpncpy 'char *(char *, const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d107228 <col:18, col:24> col:24 __dst 'char *'
| | |-ParmVarDecl 0x7fa81d1072a0 <col:31, col:43> col:43 __src 'const char *'
| | |-ParmVarDecl 0x7fa81d107310 <col:50, col:57> col:57 __n 'size_t':'unsigned long'
| | `-AvailabilityAttr 0x7fa81d107470 </usr/include/AvailabilityInternal.h:21454:87, col:122> macos 10.7 0 0 "" ""
| |-FunctionDecl 0x7fa81d1076c8 </usr/include/string.h:132:1, /usr/include/AvailabilityInternal.h:21454:124> /usr/include/string.h:132:7 strndup 'char *(const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d107528 <col:15, col:27> col:27 __s1 'const char *'
| | |-ParmVarDecl 0x7fa81d107598 <col:33, col:40> col:40 __n 'size_t':'unsigned long'
| | `-AvailabilityAttr 0x7fa81d107770 </usr/include/AvailabilityInternal.h:21454:87, col:122> macos 10.7 0 0 "" ""
| |-FunctionDecl 0x7fa81d1079c0 </usr/include/string.h:133:1, /usr/include/AvailabilityInternal.h:21454:124> /usr/include/string.h:133:10 strnlen 'size_t (const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d107828 <col:18, col:30> col:30 __s1 'const char *'
| | |-ParmVarDecl 0x7fa81d107898 <col:36, col:43> col:43 __n 'size_t':'unsigned long'
| | `-AvailabilityAttr 0x7fa81d107a68 </usr/include/AvailabilityInternal.h:21454:87, col:122> macos 10.7 0 0 "" ""
| `-FunctionDecl 0x7fa81d107bb0 </usr/include/string.h:134:1, col:26> col:7 strsignal 'char *(int)'
|   `-ParmVarDecl 0x7fa81d107b20 <col:17, col:21> col:21 __sig 'int'
|-TypedefDecl 0x7fa81d107c80 </usr/include/sys/_types/_ssize_t.h:30:1, col:33> col:33 referenced ssize_t '__darwin_ssize_t':'long'
| `-TypedefType 0x7fa81d107c50 '__darwin_ssize_t' sugar
|   |-Typedef 0x7fa81d092780 '__darwin_ssize_t'
|   `-BuiltinType 0x7fa81c0327e0 'long'
|-LinkageSpecDecl 0x7fa81d107d08 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-FunctionDecl 0x7fa81d109648 </usr/include/string.h:155:1, /usr/include/AvailabilityInternal.h:21454:124> /usr/include/string.h:155:7 memmem 'void *(const void *, size_t, const void *, size_t)'
| | |-ParmVarDecl 0x7fa81d107d70 <col:14, col:26> col:26 __big 'const void *'
| | |-ParmVarDecl 0x7fa81d109400 <col:33, col:40> col:40 __big_len 'size_t':'unsigned long'
| | |-ParmVarDecl 0x7fa81d109478 <col:51, col:63> col:63 __little 'const void *'
| | |-ParmVarDecl 0x7fa81d1094e8 <col:73, col:80> col:80 __little_len 'size_t':'unsigned long'
| | `-AvailabilityAttr 0x7fa81d109700 </usr/include/AvailabilityInternal.h:21454:87, col:122> macos 10.7 0 0 "" ""
| |-FunctionDecl 0x7fa81d1099e0 </usr/include/string.h:156:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/string.h:156:10 memset_pattern4 'void (void *, const void *, size_t)'
| | |-ParmVarDecl 0x7fa81d1097b8 <col:26, col:32> col:32 __b 'void *'
| | |-ParmVarDecl 0x7fa81d109830 <col:37, col:49> col:49 __pattern4 'const void *'
| | |-ParmVarDecl 0x7fa81d1098a0 <col:61, col:68> col:68 __len 'size_t':'unsigned long'
| | `-AvailabilityAttr 0x7fa81d109a90 </usr/include/AvailabilityInternal.h:21262:87, col:122> macos 10.5 0 0 "" ""
| |-FunctionDecl 0x7fa81d109cd8 </usr/include/string.h:157:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/string.h:157:10 memset_pattern8 'void (void *, const void *, size_t)'
| | |-ParmVarDecl 0x7fa81d109b48 <col:26, col:32> col:32 __b 'void *'
| | |-ParmVarDecl 0x7fa81d109bc0 <col:37, col:49> col:49 __pattern8 'const void *'
| | |-ParmVarDecl 0x7fa81d109c30 <col:61, col:68> col:68 __len 'size_t':'unsigned long'
| | `-AvailabilityAttr 0x7fa81d109d88 </usr/include/AvailabilityInternal.h:21262:87, col:122> macos 10.5 0 0 "" ""
| |-FunctionDecl 0x7fa81d109fd0 </usr/include/string.h:158:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/string.h:158:10 memset_pattern16 'void (void *, const void *, size_t)'
| | |-ParmVarDecl 0x7fa81d109e40 <col:27, col:33> col:33 __b 'void *'
| | |-ParmVarDecl 0x7fa81d109eb8 <col:38, col:50> col:50 __pattern16 'const void *'
| | |-ParmVarDecl 0x7fa81d109f28 <col:63, col:70> col:70 __len 'size_t':'unsigned long'
| | `-AvailabilityAttr 0x7fa81d10a080 </usr/include/AvailabilityInternal.h:21262:87, col:122> macos 10.5 0 0 "" ""
| |-FunctionDecl 0x7fa81d10a248 </usr/include/string.h:160:1, col:57> col:7 strcasestr 'char *(const char *, const char *)'
| | |-ParmVarDecl 0x7fa81d10a138 <col:18, col:30> col:30 __big 'const char *'
| | `-ParmVarDecl 0x7fa81d10a1b0 <col:37, col:49> col:49 __little 'const char *'
| |-FunctionDecl 0x7fa81d10a528 <line:161:1, col:68> col:7 strnstr 'char *(const char *, const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d10a308 <col:15, col:27> col:27 __big 'const char *'
| | |-ParmVarDecl 0x7fa81d10a380 <col:34, col:46> col:46 __little 'const char *'
| | `-ParmVarDecl 0x7fa81d10a3f0 <col:56, col:63> col:63 __len 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d10a770 <line:162:1, col:65> col:9 strlcat 'size_t (char *, const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d10a5f0 <col:17, col:23> col:23 __dst 'char *'
| | |-ParmVarDecl 0x7fa81d10a668 <col:30, col:42> col:42 __source 'const char *'
| | `-ParmVarDecl 0x7fa81d10a6d8 <col:52, col:59> col:59 __size 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d10a9b8 <line:163:1, col:65> col:9 strlcpy 'size_t (char *, const char *, size_t)'
| | |-ParmVarDecl 0x7fa81d10a838 <col:17, col:23> col:23 __dst 'char *'
| | |-ParmVarDecl 0x7fa81d10a8b0 <col:30, col:42> col:42 __source 'const char *'
| | `-ParmVarDecl 0x7fa81d10a920 <col:52, col:59> col:59 __size 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d10abd0 <line:164:1, col:37> col:7 strmode 'void (int, char *)'
| | |-ParmVarDecl 0x7fa81d10aa80 <col:15, col:19> col:19 __mode 'int'
| | `-ParmVarDecl 0x7fa81d10aaf8 <col:27, col:33> col:33 __bp 'char *'
| |-FunctionDecl 0x7fa81d10ade8 <line:165:1, col:51> col:7 strsep 'char *(char **, const char *)'
| | |-ParmVarDecl 0x7fa81d10ac90 <col:14, col:21> col:21 __stringp 'char **'
| | `-ParmVarDecl 0x7fa81d10ad08 <col:32, col:44> col:44 __delim 'const char *'
| |-FunctionDecl 0x7fa81d10b0e0 <line:168:1, col:63> col:7 swab 'void (const void *, void *, ssize_t)'
| | |-ParmVarDecl 0x7fa81d10aea8 <col:12, col:23> col:35 'const void *'
| | |-ParmVarDecl 0x7fa81d10af20 <col:37, col:42> col:54 'void *'
| | `-ParmVarDecl 0x7fa81d10afb0 <col:56> col:63 'ssize_t':'long'
| `-FunctionDecl 0x7fa81d10b400 </usr/include/Availability.h:215:66, /usr/include/string.h:174:69> col:5 timingsafe_bcmp 'int (const void *, const void *, size_t)'
|   |-ParmVarDecl 0x7fa81d10b1e8 <col:21, col:33> col:33 __b1 'const void *'
|   |-ParmVarDecl 0x7fa81d10b260 <col:39, col:51> col:51 __b2 'const void *'
|   |-ParmVarDecl 0x7fa81d10b2d0 <col:57, col:64> col:64 __len 'size_t':'unsigned long'
|   |-AvailabilityAttr 0x7fa81d10b4b0 </usr/include/Availability.h:215:81, col:115> watchos 3.1 0 0 "" ""
|   |-AvailabilityAttr 0x7fa81d10b550 <col:81, col:115> tvos 10.0.1 0 0 "" ""
|   |-AvailabilityAttr 0x7fa81d10b5b8 <col:81, col:115> ios 10.1 0 0 "" ""
|   `-AvailabilityAttr 0x7fa81d10b620 <col:81, col:115> macos 10.12.1 0 0 "" ""
|-LinkageSpecDecl 0x7fa81d10b6b8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-FunctionDecl 0x7fa81d10b8a8 </usr/include/strings.h:70:1, col:45> col:6 bcmp 'int (const void *, const void *, size_t)'
| | |-ParmVarDecl 0x7fa81d10b720 <col:11, col:22> col:23 'const void *'
| | |-ParmVarDecl 0x7fa81d10b798 <col:25, col:36> col:37 'const void *'
| | `-ParmVarDecl 0x7fa81d10b808 <col:39> col:45 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d10bb90 <line:71:1, col:41> col:7 bcopy 'void (const void *, void *, size_t)'
| | |-ParmVarDecl 0x7fa81d10b970 <col:13, col:24> col:25 'const void *'
| | |-ParmVarDecl 0x7fa81d10b9e8 <col:27, col:32> col:33 'void *'
| | `-ParmVarDecl 0x7fa81d10ba58 <col:35> col:41 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d10bde0 <line:72:1, col:27> col:7 bzero 'void (void *, size_t)'
| | |-ParmVarDecl 0x7fa81d10bc58 <col:13, col:18> col:19 'void *'
| | `-ParmVarDecl 0x7fa81d10bcc8 <col:21> col:27 'size_t':'unsigned long'
| |-FunctionDecl 0x7fa81d10bfb0 <line:73:1, col:30> col:7 index 'char *(const char *, int)'
| | |-ParmVarDecl 0x7fa81d10bea0 <col:13, col:24> col:25 'const char *'
| | `-ParmVarDecl 0x7fa81d10bf18 <col:27> col:30 'int'
| |-FunctionDecl 0x7fa81d10c180 <line:74:1, col:31> col:7 rindex 'char *(const char *, int)'
| | |-ParmVarDecl 0x7fa81d10c070 <col:14, col:25> col:26 'const char *'
| | `-ParmVarDecl 0x7fa81d10c0e8 <col:28> col:31 'int'
| |-FunctionDecl 0x7fa81d10c2d0 <line:77:1, col:13> col:6 ffs 'int (int)'
| | `-ParmVarDecl 0x7fa81d10c240 <col:10> col:13 'int'
| |-FunctionDecl 0x7fa81d10c498 <line:78:1, col:43> col:6 strcasecmp 'int (const char *, const char *)'
| | |-ParmVarDecl 0x7fa81d10c388 <col:17, col:28> col:29 'const char *'
| | `-ParmVarDecl 0x7fa81d10c400 <col:31, col:42> col:43 'const char *'
| `-FunctionDecl 0x7fa81d10c6e0 <line:79:1, col:52> col:6 strncasecmp 'int (const char *, const char *, size_t)'
|   |-ParmVarDecl 0x7fa81d10c558 <col:18, col:29> col:30 'const char *'
|   |-ParmVarDecl 0x7fa81d10c5d0 <col:32, col:43> col:44 'const char *'
|   `-ParmVarDecl 0x7fa81d10c640 <col:46> col:52 'size_t':'unsigned long'
|-LinkageSpecDecl 0x7fa81d10c7c0 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-FunctionDecl 0x7fa81d10c908 </usr/include/strings.h:85:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/strings.h:85:6 ffsl 'int (long)'
| | |-ParmVarDecl 0x7fa81d10c828 <col:11> col:15 'long'
| | `-AvailabilityAttr 0x7fa81d10c9a8 </usr/include/AvailabilityInternal.h:21262:87, col:122> macos 10.5 0 0 "" ""
| |-FunctionDecl 0x7fa81d10cb38 </usr/include/strings.h:86:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/strings.h:86:6 ffsll 'int (long long)'
| | |-ParmVarDecl 0x7fa81d10ca60 <col:12, col:17> col:21 'long long'
| | `-AvailabilityAttr 0x7fa81d10cbd8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| |-FunctionDecl 0x7fa81d10cd30 </usr/include/strings.h:87:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/strings.h:87:6 fls 'int (int)'
| | |-ParmVarDecl 0x7fa81d10cc90 <col:10> col:13 'int'
| | `-AvailabilityAttr 0x7fa81d10cdd0 </usr/include/AvailabilityInternal.h:21262:87, col:122> macos 10.5 0 0 "" ""
| |-FunctionDecl 0x7fa81d10cf28 </usr/include/strings.h:88:1, /usr/include/AvailabilityInternal.h:21262:124> /usr/include/strings.h:88:6 flsl 'int (long)'
| | |-ParmVarDecl 0x7fa81d10ce88 <col:11> col:15 'long'
| | `-AvailabilityAttr 0x7fa81d10cfc8 </usr/include/AvailabilityInternal.h:21262:87, col:122> macos 10.5 0 0 "" ""
| `-FunctionDecl 0x7fa81d10d120 </usr/include/strings.h:89:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/strings.h:89:6 flsll 'int (long long)'
|   |-ParmVarDecl 0x7fa81d10d080 <col:12, col:17> col:21 'long long'
|   `-AvailabilityAttr 0x7fa81d10d1c0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
|-LinkageSpecDecl 0x7fa81d10d290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:72:1, line:107:1> line:72:8 C++
| |-FunctionDecl 0x7fa81d10fe38 <line:73:1, line:74:81> col:7 used __libcpp_strchr 'char *(const char *, int)' inline
| | |-ParmVarDecl 0x7fa81d10d328 <col:23, col:35> col:35 used __s 'const char *'
| | |-ParmVarDecl 0x7fa81d10d3a0 <col:40, col:44> col:44 used __c 'int'
| | |-CompoundStmt 0x7fa81d110110 <col:49, col:81>
| | | `-ReturnStmt 0x7fa81d1100f8 <col:50, col:79>
| | |   `-CStyleCastExpr 0x7fa81d1100d0 <col:57, col:79> 'char *' <NoOp>
| | |     `-CallExpr 0x7fa81d110050 <col:64, col:79> 'char *'
| | |       |-ImplicitCastExpr 0x7fa81d110038 <col:64> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d10ffe0 <col:64> 'char *(const char *, int)' lvalue Function 0x7fa81d1038b8 'strchr' 'char *(const char *, int)'
| | |       |-ImplicitCastExpr 0x7fa81d110088 <col:71> 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d10ff90 <col:71> 'const char *' lvalue ParmVar 0x7fa81d10d328 '__s' 'const char *'
| | |       `-ImplicitCastExpr 0x7fa81d1100a0 <col:76> 'int' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d10ffb8 <col:76> 'int' lvalue ParmVar 0x7fa81d10d3a0 '__c' 'int'
| | |-AlwaysInlineAttr 0x7fa81d10fee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d10ff28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d110308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:75:1, line:76:80> col:13 strchr 'const char *(const char *, int)' inline
| | |-ParmVarDecl 0x7fa81d1101b8 <col:20, col:32> col:32 used __s 'const char *'
| | |-ParmVarDecl 0x7fa81d110230 <col:37, col:41> col:41 used __c 'int'
| | |-CompoundStmt 0x7fa81d1105c8 <col:46, col:80>
| | | `-ReturnStmt 0x7fa81d1105b0 <col:47, col:78>
| | |   `-ImplicitCastExpr 0x7fa81d110598 <col:54, col:78> 'const char *' <NoOp>
| | |     `-CallExpr 0x7fa81d110530 <col:54, col:78> 'char *'
| | |       |-ImplicitCastExpr 0x7fa81d110518 <col:54> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d1104f0 <col:54> 'char *(const char *, int)' lvalue Function 0x7fa81d10fe38 '__libcpp_strchr' 'char *(const char *, int)'
| | |       |-ImplicitCastExpr 0x7fa81d110568 <col:70> 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d1104a0 <col:70> 'const char *' lvalue ParmVar 0x7fa81d1101b8 '__s' 'const char *'
| | |       `-ImplicitCastExpr 0x7fa81d110580 <col:75> 'int' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d1104c8 <col:75> 'int' lvalue ParmVar 0x7fa81d110230 '__c' 'int'
| | |-EnableIfAttr 0x7fa81d1103b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d110160 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d110428 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d110438 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d1107c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:77:1, line:78:80> col:13 strchr 'char *(char *, int)' inline
| | |-ParmVarDecl 0x7fa81d110670 <col:26, col:32> col:32 used __s 'char *'
| | |-ParmVarDecl 0x7fa81d1106e8 <col:37, col:41> col:41 used __c 'int'
| | |-CompoundStmt 0x7fa81d110a88 <col:46, col:80>
| | | `-ReturnStmt 0x7fa81d110a70 <col:47, col:78>
| | |   `-CallExpr 0x7fa81d1109f0 <col:54, col:78> 'char *'
| | |     |-ImplicitCastExpr 0x7fa81d1109d8 <col:54> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa81d1109b0 <col:54> 'char *(const char *, int)' lvalue Function 0x7fa81d10fe38 '__libcpp_strchr' 'char *(const char *, int)'
| | |     |-ImplicitCastExpr 0x7fa81d110a40 <col:70> 'const char *' <NoOp>
| | |     | `-ImplicitCastExpr 0x7fa81d110a28 <col:70> 'char *' <LValueToRValue>
| | |     |   `-DeclRefExpr 0x7fa81d110960 <col:70> 'char *' lvalue ParmVar 0x7fa81d110670 '__s' 'char *'
| | |     `-ImplicitCastExpr 0x7fa81d110a58 <col:75> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa81d110988 <col:75> 'int' lvalue ParmVar 0x7fa81d1106e8 '__c' 'int'
| | |-EnableIfAttr 0x7fa81d110870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d110618 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d1108e8 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d1108f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d110c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:80:1, line:81:95> col:7 used __libcpp_strpbrk 'char *(const char *, const char *)' inline
| | |-ParmVarDecl 0x7fa81d110af0 <col:24, col:36> col:36 used __s1 'const char *'
| | |-ParmVarDecl 0x7fa81d110b68 <col:42, col:54> col:54 used __s2 'const char *'
| | |-CompoundStmt 0x7fa81d110ed0 <col:60, col:95>
| | | `-ReturnStmt 0x7fa81d110eb8 <col:61, col:93>
| | |   `-CStyleCastExpr 0x7fa81d110e90 <col:68, col:93> 'char *' <NoOp>
| | |     `-CallExpr 0x7fa81d110e10 <col:75, col:93> 'char *'
| | |       |-ImplicitCastExpr 0x7fa81d110df8 <col:75> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d110da8 <col:75> 'char *(const char *, const char *)' lvalue Function 0x7fa81d104f48 'strpbrk' 'char *(const char *, const char *)'
| | |       |-ImplicitCastExpr 0x7fa81d110e48 <col:83> 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d110d58 <col:83> 'const char *' lvalue ParmVar 0x7fa81d110af0 '__s1' 'const char *'
| | |       `-ImplicitCastExpr 0x7fa81d110e60 <col:89> 'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d110d80 <col:89> 'const char *' lvalue ParmVar 0x7fa81d110b68 '__s2' 'const char *'
| | |-AlwaysInlineAttr 0x7fa81d110ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d110cf0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d1110c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:82:1, line:83:94> col:13 strpbrk 'const char *(const char *, const char *)' inline
| | |-ParmVarDecl 0x7fa81d110f78 <col:21, col:33> col:33 used __s1 'const char *'
| | |-ParmVarDecl 0x7fa81d110ff0 <col:39, col:51> col:51 used __s2 'const char *'
| | |-CompoundStmt 0x7fa81d111388 <col:57, col:94>
| | | `-ReturnStmt 0x7fa81d111370 <col:58, col:92>
| | |   `-ImplicitCastExpr 0x7fa81d111358 <col:65, col:92> 'const char *' <NoOp>
| | |     `-CallExpr 0x7fa81d1112f0 <col:65, col:92> 'char *'
| | |       |-ImplicitCastExpr 0x7fa81d1112d8 <col:65> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d1112b0 <col:65> 'char *(const char *, const char *)' lvalue Function 0x7fa81d110c00 '__libcpp_strpbrk' 'char *(const char *, const char *)'
| | |       |-ImplicitCastExpr 0x7fa81d111328 <col:82> 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d111260 <col:82> 'const char *' lvalue ParmVar 0x7fa81d110f78 '__s1' 'const char *'
| | |       `-ImplicitCastExpr 0x7fa81d111340 <col:88> 'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d111288 <col:88> 'const char *' lvalue ParmVar 0x7fa81d110ff0 '__s2' 'const char *'
| | |-EnableIfAttr 0x7fa81d111170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d110f20 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d1111e8 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d1111f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d111540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:84:1, line:85:94> col:13 strpbrk 'char *(char *, const char *)' inline
| | |-ParmVarDecl 0x7fa81d111430 <col:27, col:33> col:33 used __s1 'char *'
| | |-ParmVarDecl 0x7fa81d1114a8 <col:39, col:51> col:51 used __s2 'const char *'
| | |-CompoundStmt 0x7fa81d111800 <col:57, col:94>
| | | `-ReturnStmt 0x7fa81d1117e8 <col:58, col:92>
| | |   `-CallExpr 0x7fa81d111768 <col:65, col:92> 'char *'
| | |     |-ImplicitCastExpr 0x7fa81d111750 <col:65> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa81d111728 <col:65> 'char *(const char *, const char *)' lvalue Function 0x7fa81d110c00 '__libcpp_strpbrk' 'char *(const char *, const char *)'
| | |     |-ImplicitCastExpr 0x7fa81d1117b8 <col:82> 'const char *' <NoOp>
| | |     | `-ImplicitCastExpr 0x7fa81d1117a0 <col:82> 'char *' <LValueToRValue>
| | |     |   `-DeclRefExpr 0x7fa81d1116d8 <col:82> 'char *' lvalue ParmVar 0x7fa81d111430 '__s1' 'char *'
| | |     `-ImplicitCastExpr 0x7fa81d1117d0 <col:88> 'const char *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa81d111700 <col:88> 'const char *' lvalue ParmVar 0x7fa81d1114a8 '__s2' 'const char *'
| | |-EnableIfAttr 0x7fa81d1115e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d1113d8 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d111660 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d111670 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d111978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:87:1, line:88:83> col:7 used __libcpp_strrchr 'char *(const char *, int)' inline
| | |-ParmVarDecl 0x7fa81d111868 <col:24, col:36> col:36 used __s 'const char *'
| | |-ParmVarDecl 0x7fa81d1118e0 <col:41, col:45> col:45 used __c 'int'
| | |-CompoundStmt 0x7fa81d111c20 <col:50, col:83>
| | | `-ReturnStmt 0x7fa81d111c08 <col:51, col:81>
| | |   `-CStyleCastExpr 0x7fa81d111be0 <col:58, col:81> 'char *' <NoOp>
| | |     `-CallExpr 0x7fa81d111b60 <col:65, col:81> 'char *'
| | |       |-ImplicitCastExpr 0x7fa81d111b48 <col:65> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d111b20 <col:65> 'char *(const char *, int)' lvalue Function 0x7fa81d105118 'strrchr' 'char *(const char *, int)'
| | |       |-ImplicitCastExpr 0x7fa81d111b98 <col:73> 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d111ad0 <col:73> 'const char *' lvalue ParmVar 0x7fa81d111868 '__s' 'const char *'
| | |       `-ImplicitCastExpr 0x7fa81d111bb0 <col:78> 'int' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d111af8 <col:78> 'int' lvalue ParmVar 0x7fa81d1118e0 '__c' 'int'
| | |-AlwaysInlineAttr 0x7fa81d111a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d111a68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d111e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:89:1, line:90:82> col:13 strrchr 'const char *(const char *, int)' inline
| | |-ParmVarDecl 0x7fa81d111cc8 <col:21, col:33> col:33 used __s 'const char *'
| | |-ParmVarDecl 0x7fa81d111d40 <col:38, col:42> col:42 used __c 'int'
| | |-CompoundStmt 0x7fa81d1120c0 <col:47, col:82>
| | | `-ReturnStmt 0x7fa81d1120a8 <col:48, col:80>
| | |   `-ImplicitCastExpr 0x7fa81d112090 <col:55, col:80> 'const char *' <NoOp>
| | |     `-CallExpr 0x7fa81d112028 <col:55, col:80> 'char *'
| | |       |-ImplicitCastExpr 0x7fa81d112010 <col:55> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d111fe8 <col:55> 'char *(const char *, int)' lvalue Function 0x7fa81d111978 '__libcpp_strrchr' 'char *(const char *, int)'
| | |       |-ImplicitCastExpr 0x7fa81d112060 <col:72> 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d111f98 <col:72> 'const char *' lvalue ParmVar 0x7fa81d111cc8 '__s' 'const char *'
| | |       `-ImplicitCastExpr 0x7fa81d112078 <col:77> 'int' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d111fc0 <col:77> 'int' lvalue ParmVar 0x7fa81d111d40 '__c' 'int'
| | |-EnableIfAttr 0x7fa81d111ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d111c70 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d111f20 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d111f30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d112278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:91:1, line:92:82> col:13 strrchr 'char *(char *, int)' inline
| | |-ParmVarDecl 0x7fa81d112168 <col:27, col:33> col:33 used __s 'char *'
| | |-ParmVarDecl 0x7fa81d1121e0 <col:38, col:42> col:42 used __c 'int'
| | |-CompoundStmt 0x7fa81d112538 <col:47, col:82>
| | | `-ReturnStmt 0x7fa81d112520 <col:48, col:80>
| | |   `-CallExpr 0x7fa81d1124a0 <col:55, col:80> 'char *'
| | |     |-ImplicitCastExpr 0x7fa81d112488 <col:55> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa81d112460 <col:55> 'char *(const char *, int)' lvalue Function 0x7fa81d111978 '__libcpp_strrchr' 'char *(const char *, int)'
| | |     |-ImplicitCastExpr 0x7fa81d1124f0 <col:72> 'const char *' <NoOp>
| | |     | `-ImplicitCastExpr 0x7fa81d1124d8 <col:72> 'char *' <LValueToRValue>
| | |     |   `-DeclRefExpr 0x7fa81d112410 <col:72> 'char *' lvalue ParmVar 0x7fa81d112168 '__s' 'char *'
| | |     `-ImplicitCastExpr 0x7fa81d112508 <col:77> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa81d112438 <col:77> 'int' lvalue ParmVar 0x7fa81d1121e0 '__c' 'int'
| | |-EnableIfAttr 0x7fa81d112320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d112110 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d112398 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d1123a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d112728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:94:1, line:95:98> col:7 used __libcpp_memchr 'void *(const void *, int, size_t)' inline
| | |-ParmVarDecl 0x7fa81d1125a0 <col:23, col:35> col:35 used __s 'const void *'
| | |-ParmVarDecl 0x7fa81d112618 <col:40, col:44> col:44 used __c 'int'
| | |-ParmVarDecl 0x7fa81d112688 <col:49, col:56> col:56 used __n 'size_t':'unsigned long'
| | |-CompoundStmt 0x7fa81d112a80 <col:61, col:98>
| | | `-ReturnStmt 0x7fa81d112a68 <col:62, col:96>
| | |   `-CStyleCastExpr 0x7fa81d112a40 <col:69, col:96> 'void *' <NoOp>
| | |     `-CallExpr 0x7fa81d1129a0 <col:76, col:96> 'void *'
| | |       |-ImplicitCastExpr 0x7fa81d112988 <col:76> 'void *(*)(const void *, int, size_t)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d112900 <col:76> 'void *(const void *, int, size_t)' lvalue Function 0x7fa81d0b0d58 'memchr' 'void *(const void *, int, size_t)'
| | |       |-ImplicitCastExpr 0x7fa81d1129e0 <col:83> 'const void *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d112888 <col:83> 'const void *' lvalue ParmVar 0x7fa81d1125a0 '__s' 'const void *'
| | |       |-ImplicitCastExpr 0x7fa81d1129f8 <col:88> 'int' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d1128b0 <col:88> 'int' lvalue ParmVar 0x7fa81d112618 '__c' 'int'
| | |       `-ImplicitCastExpr 0x7fa81d112a10 <col:93> 'size_t':'unsigned long' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d1128d8 <col:93> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d112688 '__n' 'size_t':'unsigned long'
| | |-AlwaysInlineAttr 0x7fa81d1127d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d112820 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d112d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:96:1, line:97:97> col:13 memchr 'const void *(const void *, int, size_t)' inline
| | |-ParmVarDecl 0x7fa81d112b28 <col:20, col:32> col:32 used __s 'const void *'
| | |-ParmVarDecl 0x7fa81d112ba0 <col:37, col:41> col:41 used __c 'int'
| | |-ParmVarDecl 0x7fa81d112c10 <col:46, col:53> col:53 used __n 'size_t':'unsigned long'
| | |-CompoundStmt 0x7fa81d113058 <col:58, col:97>
| | | `-ReturnStmt 0x7fa81d113040 <col:59, col:95>
| | |   `-ImplicitCastExpr 0x7fa81d113028 <col:66, col:95> 'const void *' <NoOp>
| | |     `-CallExpr 0x7fa81d112fa0 <col:66, col:95> 'void *'
| | |       |-ImplicitCastExpr 0x7fa81d112f88 <col:66> 'void *(*)(const void *, int, size_t)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d112f60 <col:66> 'void *(const void *, int, size_t)' lvalue Function 0x7fa81d112728 '__libcpp_memchr' 'void *(const void *, int, size_t)'
| | |       |-ImplicitCastExpr 0x7fa81d112fe0 <col:82> 'const void *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d112ee8 <col:82> 'const void *' lvalue ParmVar 0x7fa81d112b28 '__s' 'const void *'
| | |       |-ImplicitCastExpr 0x7fa81d112ff8 <col:87> 'int' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d112f10 <col:87> 'int' lvalue ParmVar 0x7fa81d112ba0 '__c' 'int'
| | |       `-ImplicitCastExpr 0x7fa81d113010 <col:92> 'size_t':'unsigned long' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d112f38 <col:92> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d112c10 '__n' 'size_t':'unsigned long'
| | |-EnableIfAttr 0x7fa81d112df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d112ad0 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d112e70 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d112e80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d113288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:98:1, line:99:97> col:13 memchr 'void *(void *, int, size_t)' inline
| | |-ParmVarDecl 0x7fa81d113100 <col:26, col:32> col:32 used __s 'void *'
| | |-ParmVarDecl 0x7fa81d113178 <col:37, col:41> col:41 used __c 'int'
| | |-ParmVarDecl 0x7fa81d1131e8 <col:46, col:53> col:53 used __n 'size_t':'unsigned long'
| | |-CompoundStmt 0x7fa81d113598 <col:58, col:97>
| | | `-ReturnStmt 0x7fa81d113580 <col:59, col:95>
| | |   `-CallExpr 0x7fa81d1134e0 <col:66, col:95> 'void *'
| | |     |-ImplicitCastExpr 0x7fa81d1134c8 <col:66> 'void *(*)(const void *, int, size_t)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa81d1134a0 <col:66> 'void *(const void *, int, size_t)' lvalue Function 0x7fa81d112728 '__libcpp_memchr' 'void *(const void *, int, size_t)'
| | |     |-ImplicitCastExpr 0x7fa81d113538 <col:82> 'const void *' <NoOp>
| | |     | `-ImplicitCastExpr 0x7fa81d113520 <col:82> 'void *' <LValueToRValue>
| | |     |   `-DeclRefExpr 0x7fa81d113428 <col:82> 'void *' lvalue ParmVar 0x7fa81d113100 '__s' 'void *'
| | |     |-ImplicitCastExpr 0x7fa81d113550 <col:87> 'int' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa81d113450 <col:87> 'int' lvalue ParmVar 0x7fa81d113178 '__c' 'int'
| | |     `-ImplicitCastExpr 0x7fa81d113568 <col:92> 'size_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa81d113478 <col:92> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d1131e8 '__n' 'size_t':'unsigned long'
| | |-EnableIfAttr 0x7fa81d113338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d1130a8 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d1133b0 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d1133c0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d113710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:101:1, line:102:93> col:7 used __libcpp_strstr 'char *(const char *, const char *)' inline
| | |-ParmVarDecl 0x7fa81d113600 <col:23, col:35> col:35 used __s1 'const char *'
| | |-ParmVarDecl 0x7fa81d113678 <col:41, col:53> col:53 used __s2 'const char *'
| | |-CompoundStmt 0x7fa81d1139b8 <col:59, col:93>
| | | `-ReturnStmt 0x7fa81d1139a0 <col:60, col:91>
| | |   `-CStyleCastExpr 0x7fa81d113978 <col:67, col:91> 'char *' <NoOp>
| | |     `-CallExpr 0x7fa81d1138f8 <col:74, col:91> 'char *'
| | |       |-ImplicitCastExpr 0x7fa81d1138e0 <col:74> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d1138b8 <col:74> 'char *(const char *, const char *)' lvalue Function 0x7fa81d105eb0 'strstr' 'char *(const char *, const char *)'
| | |       |-ImplicitCastExpr 0x7fa81d113930 <col:81> 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d113868 <col:81> 'const char *' lvalue ParmVar 0x7fa81d113600 '__s1' 'const char *'
| | |       `-ImplicitCastExpr 0x7fa81d113948 <col:87> 'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d113890 <col:87> 'const char *' lvalue ParmVar 0x7fa81d113678 '__s2' 'const char *'
| | |-AlwaysInlineAttr 0x7fa81d1137b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d113800 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa81d113b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:103:1, line:104:92> col:13 strstr 'const char *(const char *, const char *)' inline
| | |-ParmVarDecl 0x7fa81d113a60 <col:20, col:32> col:32 used __s1 'const char *'
| | |-ParmVarDecl 0x7fa81d113ad8 <col:38, col:50> col:50 used __s2 'const char *'
| | |-CompoundStmt 0x7fa81d113e30 <col:56, col:92>
| | | `-ReturnStmt 0x7fa81d113e18 <col:57, col:90>
| | |   `-ImplicitCastExpr 0x7fa81d113e00 <col:64, col:90> 'const char *' <NoOp>
| | |     `-CallExpr 0x7fa81d113d98 <col:64, col:90> 'char *'
| | |       |-ImplicitCastExpr 0x7fa81d113d80 <col:64> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x7fa81d113d58 <col:64> 'char *(const char *, const char *)' lvalue Function 0x7fa81d113710 '__libcpp_strstr' 'char *(const char *, const char *)'
| | |       |-ImplicitCastExpr 0x7fa81d113dd0 <col:80> 'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa81d113d08 <col:80> 'const char *' lvalue ParmVar 0x7fa81d113a60 '__s1' 'const char *'
| | |       `-ImplicitCastExpr 0x7fa81d113de8 <col:86> 'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa81d113d30 <col:86> 'const char *' lvalue ParmVar 0x7fa81d113ad8 '__s2' 'const char *'
| | |-EnableIfAttr 0x7fa81d113c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
| | | `-CXXBoolLiteralExpr 0x7fa81d113a08 <col:70> '_Bool' true
| | |-AlwaysInlineAttr 0x7fa81d113c90 <line:729:77> always_inline
| | `-VisibilityAttr 0x7fa81d113ca0 <col:51, col:74> Hidden
| `-FunctionDecl 0x7fa81d113fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/string.h:105:1, line:106:92> col:13 strstr 'char *(char *, const char *)' inline
|   |-ParmVarDecl 0x7fa81d113ed8 <col:26, col:32> col:32 used __s1 'char *'
|   |-ParmVarDecl 0x7fa81d113f50 <col:38, col:50> col:50 used __s2 'const char *'
|   |-CompoundStmt 0x7fa81d1142a8 <col:56, col:92>
|   | `-ReturnStmt 0x7fa81d114290 <col:57, col:90>
|   |   `-CallExpr 0x7fa81d114210 <col:64, col:90> 'char *'
|   |     |-ImplicitCastExpr 0x7fa81d1141f8 <col:64> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x7fa81d1141d0 <col:64> 'char *(const char *, const char *)' lvalue Function 0x7fa81d113710 '__libcpp_strstr' 'char *(const char *, const char *)'
|   |     |-ImplicitCastExpr 0x7fa81d114260 <col:80> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x7fa81d114248 <col:80> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x7fa81d114180 <col:80> 'char *' lvalue ParmVar 0x7fa81d113ed8 '__s1' 'char *'
|   |     `-ImplicitCastExpr 0x7fa81d114278 <col:86> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x7fa81d1141a8 <col:86> 'const char *' lvalue ParmVar 0x7fa81d113f50 '__s2' 'const char *'
|   |-EnableIfAttr 0x7fa81d114090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:753:56, col:78> "<no message provided>"
|   | `-CXXBoolLiteralExpr 0x7fa81d113e80 <col:70> '_Bool' true
|   |-AlwaysInlineAttr 0x7fa81d114108 <line:729:77> always_inline
|   `-VisibilityAttr 0x7fa81d114118 <col:51, col:74> Hidden
|-NamespaceDecl 0x7fa81d1142c8 prev 0x7fa81d08dec8 <line:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fa81c066458 'std'
| `-NamespaceDecl 0x7fa81d114330 prev 0x7fa81d011ba0 <col:52, line:439:36> <scratch space>:406:1 __1 inline
|   |-original Namespace 0x7fa81c0664c0 '__1'
|   |-UsingDecl 0x7fa81d1143a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstring:69:1, col:9> col:9 ::size_t
|   |-UsingShadowDecl 0x7fa81d1143f0 prev 0x7fa81c066970 <col:9> col:9 implicit Typedef 0x7fa81c0665b0 'size_t'
|   | `-TypedefType 0x7fa81c0ce3d0 'size_t' sugar
|   |   |-Typedef 0x7fa81c0665b0 'size_t'
|   |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-UsingDecl 0x7fa81d114440 <line:70:1, col:9> col:9 ::memcpy
|   |-UsingShadowDecl 0x7fa81d114490 <col:9> col:9 implicit Function 0x7fa81d0b1338 'memcpy' 'void *(void *, const void *, size_t)'
|   |-UsingDecl 0x7fa81d1144e0 <line:71:1, col:9> col:9 ::memmove
|   |-UsingShadowDecl 0x7fa81d114530 <col:9> col:9 implicit Function 0x7fa81d0b1588 'memmove' 'void *(void *, const void *, size_t)'
|   |-UsingDecl 0x7fa81d114580 <line:72:1, col:9> col:9 ::strcpy
|   |-UsingShadowDecl 0x7fa81d1145d0 <col:9> col:9 implicit Function 0x7fa81d103e68 'strcpy' 'char *(char *, const char *)'
|   |-UsingDecl 0x7fa81d114620 <line:73:1, col:9> col:9 ::strncpy
|   |-UsingShadowDecl 0x7fa81d114670 <col:9> col:9 implicit Function 0x7fa81d104d28 'strncpy' 'char *(char *, const char *, size_t)'
|   |-UsingDecl 0x7fa81d1146c0 <line:74:1, col:9> col:9 ::strcat
|   |-UsingShadowDecl 0x7fa81d114710 <col:9> col:9 implicit Function 0x7fa81d1036a8 'strcat' 'char *(char *, const char *)'
|   |-UsingDecl 0x7fa81d114760 <line:75:1, col:9> col:9 ::strncat
|   |-UsingShadowDecl 0x7fa81d1147b0 <col:9> col:9 implicit Function 0x7fa81d1047e8 'strncat' 'char *(char *, const char *, size_t)'
|   |-UsingDecl 0x7fa81d114800 <line:76:1, col:9> col:9 ::memcmp
|   |-UsingShadowDecl 0x7fa81d114850 <col:9> col:9 implicit Function 0x7fa81d0b1048 'memcmp' 'int (const void *, const void *, size_t)'
|   |-UsingDecl 0x7fa81d1148a0 <line:77:1, col:9> col:9 ::strcmp
|   |-UsingShadowDecl 0x7fa81d1148f0 <col:9> col:9 implicit Function 0x7fa81d103ac8 'strcmp' 'int (const char *, const char *)'
|   |-UsingDecl 0x7fa81d114940 <line:78:1, col:9> col:9 ::strncmp
|   |-UsingShadowDecl 0x7fa81d114990 <col:9> col:9 implicit Function 0x7fa81d104ad8 'strncmp' 'int (const char *, const char *, size_t)'
|   |-UsingDecl 0x7fa81d1149e0 <line:79:1, col:9> col:9 ::strcoll
|   |-UsingShadowDecl 0x7fa81d114a30 <col:9> col:9 implicit Function 0x7fa81d103c98 'strcoll' 'int (const char *, const char *)'
|   |-UsingDecl 0x7fa81d114a80 <line:80:1, col:9> col:9 ::strxfrm
|   |-UsingShadowDecl 0x7fa81d114ad0 <col:9> col:9 implicit Function 0x7fa81d106360 'strxfrm' 'size_t (char *, const char *, size_t)'
|   |-UsingDecl 0x7fa81d114b20 <line:81:1, col:9> col:9 ::memchr
|   |-UsingShadowDecl 0x7fa81d114b70 <col:9> col:9 implicit Function 0x7fa81d0b0d58 'memchr' 'void *(const void *, int, size_t)'
|   |-UsingShadowDecl 0x7fa81d114bb8 <col:9> col:9 implicit Function 0x7fa81d112d48 'memchr' 'const void *(const void *, int, size_t)'
|   |-UsingShadowDecl 0x7fa81d114c00 <col:9> col:9 implicit Function 0x7fa81d113288 'memchr' 'void *(void *, int, size_t)'
|   |-UsingDecl 0x7fa81d114c50 <line:82:1, col:9> col:9 ::strchr
|   |-UsingShadowDecl 0x7fa81d114ca0 <col:9> col:9 implicit Function 0x7fa81d1038b8 'strchr' 'char *(const char *, int)'
|   |-UsingShadowDecl 0x7fa81d114ce8 <col:9> col:9 implicit Function 0x7fa81d110308 'strchr' 'const char *(const char *, int)'
|   |-UsingShadowDecl 0x7fa81d114d30 <col:9> col:9 implicit Function 0x7fa81d1107c8 'strchr' 'char *(char *, int)'
|   |-UsingDecl 0x7fa81d114d80 <line:83:1, col:9> col:9 ::strcspn
|   |-UsingShadowDecl 0x7fa81d114dd0 <col:9> col:9 implicit Function 0x7fa81d1040b0 'strcspn' 'size_t (const char *, const char *)'
|   |-UsingDecl 0x7fa81d114e20 <line:84:1, col:9> col:9 ::strpbrk
|   |-UsingShadowDecl 0x7fa81d114e70 <col:9> col:9 implicit Function 0x7fa81d104f48 'strpbrk' 'char *(const char *, const char *)'
|   |-UsingShadowDecl 0x7fa81d114eb8 <col:9> col:9 implicit Function 0x7fa81d1110c8 'strpbrk' 'const char *(const char *, const char *)'
|   |-UsingShadowDecl 0x7fa81d114f00 <col:9> col:9 implicit Function 0x7fa81d111540 'strpbrk' 'char *(char *, const char *)'
|   |-UsingDecl 0x7fa81d114f50 <line:85:1, col:9> col:9 ::strrchr
|   |-UsingShadowDecl 0x7fa81d114fa0 <col:9> col:9 implicit Function 0x7fa81d105118 'strrchr' 'char *(const char *, int)'
|   |-UsingShadowDecl 0x7fa81d114fe8 <col:9> col:9 implicit Function 0x7fa81d111e00 'strrchr' 'const char *(const char *, int)'
|   |-UsingShadowDecl 0x7fa81d115030 <col:9> col:9 implicit Function 0x7fa81d112278 'strrchr' 'char *(char *, int)'
|   |-UsingDecl 0x7fa81d115080 <line:86:1, col:9> col:9 ::strspn
|   |-UsingShadowDecl 0x7fa81d1150d0 <col:9> col:9 implicit Function 0x7fa81d1052e0 'strspn' 'size_t (const char *, const char *)'
|   |-UsingDecl 0x7fa81d115120 <line:87:1, col:9> col:9 ::strstr
|   |-UsingShadowDecl 0x7fa81d115170 <col:9> col:9 implicit Function 0x7fa81d105eb0 'strstr' 'char *(const char *, const char *)'
|   |-UsingShadowDecl 0x7fa81d1151b8 <col:9> col:9 implicit Function 0x7fa81d113b70 'strstr' 'const char *(const char *, const char *)'
|   |-UsingShadowDecl 0x7fa81d115200 <col:9> col:9 implicit Function 0x7fa81d113fe8 'strstr' 'char *(char *, const char *)'
|   |-UsingDecl 0x7fa81d115250 <line:89:1, col:9> col:9 ::strtok
|   |-UsingShadowDecl 0x7fa81d1152a0 <col:9> col:9 implicit Function 0x7fa81d106080 'strtok' 'char *(char *, const char *)'
|   |-UsingDecl 0x7fa81d1152f0 <line:91:1, col:9> col:9 ::memset
|   |-UsingShadowDecl 0x7fa81d115340 <col:9> col:9 implicit Function 0x7fa81d103488 'memset' 'void *(void *, int, size_t)'
|   |-UsingDecl 0x7fa81d115390 <line:92:1, col:9> col:9 ::strerror
|   |-UsingShadowDecl 0x7fa81d1153e0 <col:9> col:9 implicit Function 0x7fa81d1042f8 'strerror' 'char *(int)'
|   |-UsingDecl 0x7fa81d115430 <line:93:1, col:9> col:9 ::strlen
|   `-UsingShadowDecl 0x7fa81d115480 <col:9> col:9 implicit Function 0x7fa81d104510 'strlen' 'size_t (const char *)'
|-TypedefDecl 0x7fa81d1154e0 </usr/include/sys/_types/_int8_t.h:30:1, col:24> col:24 referenced int8_t 'signed char'
| `-BuiltinType 0x7fa81c032780 'signed char'
|-TypedefDecl 0x7fa81d115550 </usr/include/sys/_types/_int16_t.h:30:1, col:17> col:17 referenced int16_t 'short'
| `-BuiltinType 0x7fa81c0327a0 'short'
|-TypedefDecl 0x7fa81d1155c0 </usr/include/sys/_types/_int32_t.h:30:1, col:15> col:15 referenced int32_t 'int'
| `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d115630 </usr/include/sys/_types/_int64_t.h:30:1, col:20> col:20 referenced int64_t 'long long'
| `-BuiltinType 0x7fa81c032800 'long long'
|-TypedefDecl 0x7fa81d1156a0 </usr/include/_types/_uint8_t.h:31:1, col:23> col:23 referenced uint8_t 'unsigned char'
| `-BuiltinType 0x7fa81c032820 'unsigned char'
|-TypedefDecl 0x7fa81d115710 </usr/include/_types/_uint16_t.h:31:1, col:24> col:24 referenced uint16_t 'unsigned short'
| `-BuiltinType 0x7fa81c032840 'unsigned short'
|-TypedefDecl 0x7fa81d115780 </usr/include/_types/_uint32_t.h:31:1, col:22> col:22 referenced uint32_t 'unsigned int'
| `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d1157f0 </usr/include/_types/_uint64_t.h:31:1, col:28> col:28 referenced uint64_t 'unsigned long long'
| `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|-TypedefDecl 0x7fa81d115880 </usr/include/stdint.h:29:1, col:26> col:26 int_least8_t 'int8_t':'signed char'
| `-TypedefType 0x7fa81d115850 'int8_t' sugar
|   |-Typedef 0x7fa81d1154e0 'int8_t'
|   `-BuiltinType 0x7fa81c032780 'signed char'
|-TypedefDecl 0x7fa81d115910 <line:30:1, col:25> col:25 int_least16_t 'int16_t':'short'
| `-TypedefType 0x7fa81d1158e0 'int16_t' sugar
|   |-Typedef 0x7fa81d115550 'int16_t'
|   `-BuiltinType 0x7fa81c0327a0 'short'
|-TypedefDecl 0x7fa81d1159a0 <line:31:1, col:25> col:25 int_least32_t 'int32_t':'int'
| `-TypedefType 0x7fa81d115970 'int32_t' sugar
|   |-Typedef 0x7fa81d1155c0 'int32_t'
|   `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d115a30 <line:32:1, col:25> col:25 int_least64_t 'int64_t':'long long'
| `-TypedefType 0x7fa81d115a00 'int64_t' sugar
|   |-Typedef 0x7fa81d115630 'int64_t'
|   `-BuiltinType 0x7fa81c032800 'long long'
|-TypedefDecl 0x7fa81d115ac0 <line:33:1, col:25> col:25 uint_least8_t 'uint8_t':'unsigned char'
| `-TypedefType 0x7fa81d115a90 'uint8_t' sugar
|   |-Typedef 0x7fa81d1156a0 'uint8_t'
|   `-BuiltinType 0x7fa81c032820 'unsigned char'
|-TypedefDecl 0x7fa81d115b50 <line:34:1, col:24> col:24 uint_least16_t 'uint16_t':'unsigned short'
| `-TypedefType 0x7fa81d115b20 'uint16_t' sugar
|   |-Typedef 0x7fa81d115710 'uint16_t'
|   `-BuiltinType 0x7fa81c032840 'unsigned short'
|-TypedefDecl 0x7fa81d115be0 <line:35:1, col:24> col:24 uint_least32_t 'uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d115bb0 'uint32_t' sugar
|   |-Typedef 0x7fa81d115780 'uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d115c70 <line:36:1, col:24> col:24 uint_least64_t 'uint64_t':'unsigned long long'
| `-TypedefType 0x7fa81d115c40 'uint64_t' sugar
|   |-Typedef 0x7fa81d1157f0 'uint64_t'
|   `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|-TypedefDecl 0x7fa81d115cd8 <line:40:1, col:27> col:27 int_fast8_t 'int8_t':'signed char'
| `-TypedefType 0x7fa81d115850 'int8_t' sugar
|   |-Typedef 0x7fa81d1154e0 'int8_t'
|   `-BuiltinType 0x7fa81c032780 'signed char'
|-TypedefDecl 0x7fa81d115d40 <line:41:1, col:26> col:26 int_fast16_t 'int16_t':'short'
| `-TypedefType 0x7fa81d1158e0 'int16_t' sugar
|   |-Typedef 0x7fa81d115550 'int16_t'
|   `-BuiltinType 0x7fa81c0327a0 'short'
|-TypedefDecl 0x7fa81d115da8 <line:42:1, col:26> col:26 int_fast32_t 'int32_t':'int'
| `-TypedefType 0x7fa81d115970 'int32_t' sugar
|   |-Typedef 0x7fa81d1155c0 'int32_t'
|   `-BuiltinType 0x7fa81c0327c0 'int'
|-TypedefDecl 0x7fa81d137a10 <line:43:1, col:26> col:26 int_fast64_t 'int64_t':'long long'
| `-TypedefType 0x7fa81d115a00 'int64_t' sugar
|   |-Typedef 0x7fa81d115630 'int64_t'
|   `-BuiltinType 0x7fa81c032800 'long long'
|-TypedefDecl 0x7fa81d137a78 <line:44:1, col:26> col:26 uint_fast8_t 'uint8_t':'unsigned char'
| `-TypedefType 0x7fa81d115a90 'uint8_t' sugar
|   |-Typedef 0x7fa81d1156a0 'uint8_t'
|   `-BuiltinType 0x7fa81c032820 'unsigned char'
|-TypedefDecl 0x7fa81d137ae0 <line:45:1, col:25> col:25 uint_fast16_t 'uint16_t':'unsigned short'
| `-TypedefType 0x7fa81d115b20 'uint16_t' sugar
|   |-Typedef 0x7fa81d115710 'uint16_t'
|   `-BuiltinType 0x7fa81c032840 'unsigned short'
|-TypedefDecl 0x7fa81d137b48 <line:46:1, col:25> col:25 uint_fast32_t 'uint32_t':'unsigned int'
| `-TypedefType 0x7fa81d115bb0 'uint32_t' sugar
|   |-Typedef 0x7fa81d115780 'uint32_t'
|   `-BuiltinType 0x7fa81c032860 'unsigned int'
|-TypedefDecl 0x7fa81d137bb0 <line:47:1, col:25> col:25 uint_fast64_t 'uint64_t':'unsigned long long'
| `-TypedefType 0x7fa81d115c40 'uint64_t' sugar
|   |-Typedef 0x7fa81d1157f0 'uint64_t'
|   `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|-TypedefDecl 0x7fa81d137c40 </usr/include/sys/_types/_intptr_t.h:30:1, col:27> col:27 intptr_t '__darwin_intptr_t':'long'
| `-TypedefType 0x7fa81d137c10 '__darwin_intptr_t' sugar
|   |-Typedef 0x7fa81d091e98 '__darwin_intptr_t'
|   `-BuiltinType 0x7fa81c0327e0 'long'
|-TypedefDecl 0x7fa81d137cb0 </usr/include/sys/_types/_uintptr_t.h:30:1, col:24> col:24 uintptr_t 'unsigned long'
| `-BuiltinType 0x7fa81c032880 'unsigned long'
|-TypedefDecl 0x7fa81d137d20 </usr/include/_types/_intmax_t.h:32:1, col:25> col:25 intmax_t 'long'
| `-BuiltinType 0x7fa81c0327e0 'long'
|-TypedefDecl 0x7fa81d137d90 </usr/include/_types/_uintmax_t.h:32:1, col:26> col:26 uintmax_t 'unsigned long'
| `-BuiltinType 0x7fa81c032880 'unsigned long'
|-NamespaceDecl 0x7fa81d137de8 prev 0x7fa81d1142c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fa81c066458 'std'
| `-NamespaceDecl 0x7fa81d137e50 prev 0x7fa81d114330 <col:52, line:439:36> <scratch space>:408:1 __1 inline
|   |-original Namespace 0x7fa81c0664c0 '__1'
|   |-UsingDecl 0x7fa81d137ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstdint:153:1, col:8> col:8 ::int8_t
|   |-UsingShadowDecl 0x7fa81d137f10 <col:8> col:8 implicit Typedef 0x7fa81d1154e0 'int8_t'
|   | `-TypedefType 0x7fa81d115850 'int8_t' sugar
|   |   |-Typedef 0x7fa81d1154e0 'int8_t'
|   |   `-BuiltinType 0x7fa81c032780 'signed char'
|   |-UsingDecl 0x7fa81d137f60 <line:154:1, col:8> col:8 ::int16_t
|   |-UsingShadowDecl 0x7fa81d137fb0 <col:8> col:8 implicit Typedef 0x7fa81d115550 'int16_t'
|   | `-TypedefType 0x7fa81d1158e0 'int16_t' sugar
|   |   |-Typedef 0x7fa81d115550 'int16_t'
|   |   `-BuiltinType 0x7fa81c0327a0 'short'
|   |-UsingDecl 0x7fa81d138000 <line:155:1, col:8> col:8 ::int32_t
|   |-UsingShadowDecl 0x7fa81d138050 <col:8> col:8 implicit Typedef 0x7fa81d1155c0 'int32_t'
|   | `-TypedefType 0x7fa81d115970 'int32_t' sugar
|   |   |-Typedef 0x7fa81d1155c0 'int32_t'
|   |   `-BuiltinType 0x7fa81c0327c0 'int'
|   |-UsingDecl 0x7fa81d1380a0 <line:156:1, col:8> col:8 ::int64_t
|   |-UsingShadowDecl 0x7fa81d1380f0 <col:8> col:8 implicit Typedef 0x7fa81d115630 'int64_t'
|   | `-TypedefType 0x7fa81d115a00 'int64_t' sugar
|   |   |-Typedef 0x7fa81d115630 'int64_t'
|   |   `-BuiltinType 0x7fa81c032800 'long long'
|   |-UsingDecl 0x7fa81d138140 <line:158:1, col:8> col:8 ::uint8_t
|   |-UsingShadowDecl 0x7fa81d138190 <col:8> col:8 implicit Typedef 0x7fa81d1156a0 'uint8_t'
|   | `-TypedefType 0x7fa81d115a90 'uint8_t' sugar
|   |   |-Typedef 0x7fa81d1156a0 'uint8_t'
|   |   `-BuiltinType 0x7fa81c032820 'unsigned char'
|   |-UsingDecl 0x7fa81d1381e0 <line:159:1, col:8> col:8 ::uint16_t
|   |-UsingShadowDecl 0x7fa81d138230 <col:8> col:8 implicit Typedef 0x7fa81d115710 'uint16_t'
|   | `-TypedefType 0x7fa81d115b20 'uint16_t' sugar
|   |   |-Typedef 0x7fa81d115710 'uint16_t'
|   |   `-BuiltinType 0x7fa81c032840 'unsigned short'
|   |-UsingDecl 0x7fa81d138280 <line:160:1, col:8> col:8 ::uint32_t
|   |-UsingShadowDecl 0x7fa81d1382d0 <col:8> col:8 implicit Typedef 0x7fa81d115780 'uint32_t'
|   | `-TypedefType 0x7fa81d115bb0 'uint32_t' sugar
|   |   |-Typedef 0x7fa81d115780 'uint32_t'
|   |   `-BuiltinType 0x7fa81c032860 'unsigned int'
|   |-UsingDecl 0x7fa81d138320 <line:161:1, col:8> col:8 ::uint64_t
|   |-UsingShadowDecl 0x7fa81d138370 <col:8> col:8 implicit Typedef 0x7fa81d1157f0 'uint64_t'
|   | `-TypedefType 0x7fa81d115c40 'uint64_t' sugar
|   |   |-Typedef 0x7fa81d1157f0 'uint64_t'
|   |   `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|   |-UsingDecl 0x7fa81d1383c0 <line:163:1, col:8> col:8 ::int_least8_t
|   |-UsingShadowDecl 0x7fa81d138410 <col:8> col:8 implicit Typedef 0x7fa81d115880 'int_least8_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138460 <line:164:1, col:8> col:8 ::int_least16_t
|   |-UsingShadowDecl 0x7fa81d1384b0 <col:8> col:8 implicit Typedef 0x7fa81d115910 'int_least16_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138500 <line:165:1, col:8> col:8 ::int_least32_t
|   |-UsingShadowDecl 0x7fa81d138550 <col:8> col:8 implicit Typedef 0x7fa81d1159a0 'int_least32_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d1385a0 <line:166:1, col:8> col:8 ::int_least64_t
|   |-UsingShadowDecl 0x7fa81d1385f0 <col:8> col:8 implicit Typedef 0x7fa81d115a30 'int_least64_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138640 <line:168:1, col:8> col:8 ::uint_least8_t
|   |-UsingShadowDecl 0x7fa81d138690 <col:8> col:8 implicit Typedef 0x7fa81d115ac0 'uint_least8_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d1386e0 <line:169:1, col:8> col:8 ::uint_least16_t
|   |-UsingShadowDecl 0x7fa81d138730 <col:8> col:8 implicit Typedef 0x7fa81d115b50 'uint_least16_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138780 <line:170:1, col:8> col:8 ::uint_least32_t
|   |-UsingShadowDecl 0x7fa81d1387d0 <col:8> col:8 implicit Typedef 0x7fa81d115be0 'uint_least32_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138820 <line:171:1, col:8> col:8 ::uint_least64_t
|   |-UsingShadowDecl 0x7fa81d138870 <col:8> col:8 implicit Typedef 0x7fa81d115c70 'uint_least64_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d1388c0 <line:173:1, col:8> col:8 ::int_fast8_t
|   |-UsingShadowDecl 0x7fa81d138910 <col:8> col:8 implicit Typedef 0x7fa81d115cd8 'int_fast8_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138960 <line:174:1, col:8> col:8 ::int_fast16_t
|   |-UsingShadowDecl 0x7fa81d1389b0 <col:8> col:8 implicit Typedef 0x7fa81d115d40 'int_fast16_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138a00 <line:175:1, col:8> col:8 ::int_fast32_t
|   |-UsingShadowDecl 0x7fa81d138a50 <col:8> col:8 implicit Typedef 0x7fa81d115da8 'int_fast32_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138aa0 <line:176:1, col:8> col:8 ::int_fast64_t
|   |-UsingShadowDecl 0x7fa81d138af0 <col:8> col:8 implicit Typedef 0x7fa81d137a10 'int_fast64_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138b40 <line:178:1, col:8> col:8 ::uint_fast8_t
|   |-UsingShadowDecl 0x7fa81d138b90 <col:8> col:8 implicit Typedef 0x7fa81d137a78 'uint_fast8_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138be0 <line:179:1, col:8> col:8 ::uint_fast16_t
|   |-UsingShadowDecl 0x7fa81d138c30 <col:8> col:8 implicit Typedef 0x7fa81d137ae0 'uint_fast16_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138c80 <line:180:1, col:8> col:8 ::uint_fast32_t
|   |-UsingShadowDecl 0x7fa81d138cd0 <col:8> col:8 implicit Typedef 0x7fa81d137b48 'uint_fast32_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138d20 <line:181:1, col:8> col:8 ::uint_fast64_t
|   |-UsingShadowDecl 0x7fa81d138d70 <col:8> col:8 implicit Typedef 0x7fa81d137bb0 'uint_fast64_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138dc0 <line:183:1, col:8> col:8 ::intptr_t
|   |-UsingShadowDecl 0x7fa81d138e10 <col:8> col:8 implicit Typedef 0x7fa81d137c40 'intptr_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138e60 <line:184:1, col:8> col:8 ::uintptr_t
|   |-UsingShadowDecl 0x7fa81d138eb0 <col:8> col:8 implicit Typedef 0x7fa81d137cb0 'uintptr_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138f00 <line:186:1, col:8> col:8 ::intmax_t
|   |-UsingShadowDecl 0x7fa81d138f50 <col:8> col:8 implicit Typedef 0x7fa81d137d20 'intmax_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa81d138fa0 <line:187:1, col:8> col:8 ::uintmax_t
|   `-UsingShadowDecl 0x7fa81d138ff0 <col:8> col:8 implicit Typedef 0x7fa81d137d90 'uintmax_t'
|     `-<<<NULL>>>
|-CXXRecordDecl 0x7fa81d139068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:54:1, col:29> col:29 class __libcpp_debug_exception
| `-VisibilityAttr 0x7fa81d139120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:701:47, col:71> Default
|-NamespaceDecl 0x7fa81d139168 prev 0x7fa81d137de8 <line:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fa81c066458 'std'
| `-NamespaceDecl 0x7fa81d1391d0 prev 0x7fa81d137e50 <col:52, line:439:36> <scratch space>:409:1 __1 inline
|   |-original Namespace 0x7fa81c0664c0 '__1'
|   |-CXXRecordDecl 0x7fa81d139268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:59:1, line:70:1> line:59:29 referenced struct __libcpp_debug_info definition
|   | |-TypeVisibilityAttr 0x7fa81d139388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d1393d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:59:1, col:29> col:29 implicit referenced struct __libcpp_debug_info
|   | |-CXXConstructorDecl 0x7fa81d139508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:62:75> line:61:3 constexpr __libcpp_debug_info 'void (void)'
|   | | |-CXXCtorInitializer Field 0x7fa81d144400 '__file_' 'const char *'
|   | | | `-ImplicitCastExpr 0x7fa81d1445d0 <line:62:17> 'const char *' <NullToPointer>
|   | | |   `-CXXNullPtrLiteralExpr 0x7fa81d144588 <col:17> 'nullptr_t'
|   | | |-CXXCtorInitializer Field 0x7fa81d144460 '__line_' 'int'
|   | | | `-UnaryOperator 0x7fa81d144630 <col:35, col:36> 'int' prefix '-'
|   | | |   `-IntegerLiteral 0x7fa81d144610 <col:36> 'int' 1
|   | | |-CXXCtorInitializer Field 0x7fa81d1444c0 '__pred_' 'const char *'
|   | | | `-ImplicitCastExpr 0x7fa81d1446f0 <col:48> 'const char *' <NullToPointer>
|   | | |   `-CXXNullPtrLiteralExpr 0x7fa81d1446a8 <col:48> 'nullptr_t'
|   | | |-CXXCtorInitializer Field 0x7fa81d144520 '__msg_' 'const char *'
|   | | | `-ImplicitCastExpr 0x7fa81d144778 <col:65> 'const char *' <NullToPointer>
|   | | |   `-CXXNullPtrLiteralExpr 0x7fa81d144730 <col:65> 'nullptr_t'
|   | | |-CompoundStmt 0x7fa81d1447d8 <col:74, col:75>
|   | | |-AlwaysInlineAttr 0x7fa81d1395b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr 0x7fa81d1395f8 <col:51, col:74> Hidden
|   | |-CXXConstructorDecl 0x7fa81d1398b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:65:62> line:64:3 constexpr __libcpp_debug_info 'void (const char *, int, const char *, const char *)'
|   | | |-ParmVarDecl 0x7fa81d139650 <col:23, col:35> col:35 used __f 'const char *'
|   | | |-ParmVarDecl 0x7fa81d1396c8 <col:40, col:44> col:44 used __l 'int'
|   | | |-ParmVarDecl 0x7fa81d139740 <col:49, col:61> col:61 used __p 'const char *'
|   | | |-ParmVarDecl 0x7fa81d1397b8 <col:66, col:78> col:78 used __m 'const char *'
|   | | |-CXXCtorInitializer Field 0x7fa81d144400 '__file_' 'const char *'
|   | | | `-ImplicitCastExpr 0x7fa81d144920 <line:65:15> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x7fa81d1448c8 <col:15> 'const char *' lvalue ParmVar 0x7fa81d139650 '__f' 'const char *'
|   | | |-CXXCtorInitializer Field 0x7fa81d144460 '__line_' 'int'
|   | | | `-ImplicitCastExpr 0x7fa81d1449b8 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x7fa81d144960 <col:29> 'int' lvalue ParmVar 0x7fa81d1396c8 '__l' 'int'
|   | | |-CXXCtorInitializer Field 0x7fa81d1444c0 '__pred_' 'const char *'
|   | | | `-ImplicitCastExpr 0x7fa81d144a50 <col:43> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x7fa81d1449f8 <col:43> 'const char *' lvalue ParmVar 0x7fa81d139740 '__p' 'const char *'
|   | | |-CXXCtorInitializer Field 0x7fa81d144520 '__msg_' 'const char *'
|   | | | `-ImplicitCastExpr 0x7fa81d144ae8 <col:56> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x7fa81d144a90 <col:56> 'const char *' lvalue ParmVar 0x7fa81d1397b8 '__m' 'const char *'
|   | | |-CompoundStmt 0x7fa81d144b48 <col:61, col:62>
|   | | |-AlwaysInlineAttr 0x7fa81d139978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr 0x7fa81d1399c0 <col:51, col:74> Hidden
|   | |-FieldDecl 0x7fa81d144400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:66:3, col:15> col:15 __file_ 'const char *'
|   | |-FieldDecl 0x7fa81d144460 <line:67:3, col:7> col:7 __line_ 'int'
|   | |-FieldDecl 0x7fa81d1444c0 <line:68:3, col:15> col:15 __pred_ 'const char *'
|   | `-FieldDecl 0x7fa81d144520 <line:69:3, col:15> col:15 __msg_ 'const char *'
|   |-TypedefDecl 0x7fa81d144d00 <line:73:1, col:71> col:15 referenced __libcpp_debug_function_type 'void (*)(const struct std::__1::__libcpp_debug_info &)'
|   | `-PointerType 0x7fa81d144ca0 'void (*)(const struct std::__1::__libcpp_debug_info &)'
|   |   `-ParenType 0x7fa81d144c40 'void (const struct std::__1::__libcpp_debug_info &)' sugar
|   |     `-FunctionProtoType 0x7fa81d144c00 'void (const struct std::__1::__libcpp_debug_info &)' cdecl
|   |       |-BuiltinType 0x7fa81c032720 'void'
|   |       `-LValueReferenceType 0x7fa81d144b60 'const struct std::__1::__libcpp_debug_info &'
|   |         `-QualType 0x7fa81d139301 'const struct std::__1::__libcpp_debug_info' const
|   |           `-RecordType 0x7fa81d139300 'struct std::__1::__libcpp_debug_info'
|   |             `-CXXRecord 0x7fa81d139268 '__libcpp_debug_info'
|   |-VarDecl 0x7fa81d144d90 <line:77:1, col:56> col:56 __libcpp_debug_function 'std::__1::__libcpp_debug_function_type':'void (*)(const struct std::__1::__libcpp_debug_info &)' extern
|   |-FunctionDecl 0x7fa81d144eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:661:26, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:81:62> col:6 __libcpp_abort_debug_function 'void (const struct std::__1::__libcpp_debug_info &)'
|   | |-ParmVarDecl 0x7fa81d144e30 <col:36, col:61> col:62 'const struct std::__1::__libcpp_debug_info &'
|   | |-CXX11NoReturnAttr 0x7fa81d144f58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:341:30>
|   | `-VisibilityAttr 0x7fa81d144fa0 <line:661:42, col:66> Default
|   |-FunctionDecl 0x7fa81d145078 <col:26, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:86:62> col:6 __libcpp_throw_debug_function 'void (const struct std::__1::__libcpp_debug_info &)'
|   | |-ParmVarDecl 0x7fa81d144ff0 <col:36, col:61> col:62 'const struct std::__1::__libcpp_debug_info &'
|   | |-CXX11NoReturnAttr 0x7fa81d145118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:341:30>
|   | `-VisibilityAttr 0x7fa81d145160 <line:661:42, col:66> Default
|   `-FunctionDecl 0x7fa81d1452b0 <col:26, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__debug:91:69> col:6 __libcpp_set_debug_function '_Bool (std::__1::__libcpp_debug_function_type)'
|     |-ParmVarDecl 0x7fa81d1451b0 <col:34, col:63> col:63 __func 'std::__1::__libcpp_debug_function_type':'void (*)(const struct std::__1::__libcpp_debug_info &)'
|     `-VisibilityAttr 0x7fa81d145350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:661:42, col:66> Default
|-NamespaceDecl 0x7fa81d145398 prev 0x7fa81d139168 <line:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fa81c066458 'std'
| `-NamespaceDecl 0x7fa81d145400 prev 0x7fa81d1391d0 <col:52, line:439:36> <scratch space>:410:1 __1 inline
|   |-original Namespace 0x7fa81c0664c0 '__1'
|   |-NamespaceDecl 0x7fa81d145468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:212:1, line:247:1> line:212:11 rel_ops
|   | |-FunctionTemplateDecl 0x7fa81d1457d8 <line:215:1, line:221:1> line:218:1 operator!=
|   | | |-TemplateTypeParmDecl 0x7fa81d1454d0 <line:215:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl 0x7fa81d145740 <line:216:1, line:221:1> line:218:1 operator!= '_Bool (const _Tp &, const _Tp &)' inline
|   | |   |-ParmVarDecl 0x7fa81d1455b8 <col:12, col:23> col:23 referenced __x 'const _Tp &'
|   | |   |-ParmVarDecl 0x7fa81d145628 <col:28, col:39> col:39 referenced __y 'const _Tp &'
|   | |   |-CompoundStmt 0x7fa81d145960 <line:219:1, line:221:1>
|   | |   | `-ReturnStmt 0x7fa81d145948 <line:220:5, col:24>
|   | |   |   `-UnaryOperator 0x7fa81d145928 <col:12, col:24> '<dependent type>' prefix '!'
|   | |   |     `-ParenExpr 0x7fa81d145908 <col:13, col:24> '<dependent type>'
|   | |   |       `-BinaryOperator 0x7fa81d1458e0 <col:14, col:21> '<dependent type>' '=='
|   | |   |         |-DeclRefExpr 0x7fa81d145890 <col:14> 'const _Tp' lvalue ParmVar 0x7fa81d1455b8 '__x' 'const _Tp &'
|   | |   |         `-DeclRefExpr 0x7fa81d1458b8 <col:21> 'const _Tp' lvalue ParmVar 0x7fa81d145628 '__y' 'const _Tp &'
|   | |   |-AlwaysInlineAttr 0x7fa81d145838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d145880 <col:51, col:74> Hidden
|   | |-FunctionTemplateDecl 0x7fa81d145c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:223:1, line:229:1> line:226:1 operator>
|   | | |-TemplateTypeParmDecl 0x7fa81d145980 <line:223:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl 0x7fa81d145bb0 <line:224:1, line:229:1> line:226:1 operator> '_Bool (const _Tp &, const _Tp &)' inline
|   | |   |-ParmVarDecl 0x7fa81d145a68 <col:12, col:23> col:23 referenced __x 'const _Tp &'
|   | |   |-ParmVarDecl 0x7fa81d145ad8 <col:28, col:39> col:39 referenced __y 'const _Tp &'
|   | |   |-CompoundStmt 0x7fa81d145d90 <line:227:1, line:229:1>
|   | |   | `-ReturnStmt 0x7fa81d145d78 <line:228:5, col:18>
|   | |   |   `-BinaryOperator 0x7fa81d145d50 <col:12, col:18> '<dependent type>' '<'
|   | |   |     |-DeclRefExpr 0x7fa81d145d00 <col:12> 'const _Tp' lvalue ParmVar 0x7fa81d145ad8 '__y' 'const _Tp &'
|   | |   |     `-DeclRefExpr 0x7fa81d145d28 <col:18> 'const _Tp' lvalue ParmVar 0x7fa81d145a68 '__x' 'const _Tp &'
|   | |   |-AlwaysInlineAttr 0x7fa81d145ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d145cf0 <col:51, col:74> Hidden
|   | |-FunctionTemplateDecl 0x7fa81d146078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:231:1, line:237:1> line:234:1 operator<=
|   | | |-TemplateTypeParmDecl 0x7fa81d145db0 <line:231:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   | | `-FunctionDecl 0x7fa81d145fe0 <line:232:1, line:237:1> line:234:1 operator<= '_Bool (const _Tp &, const _Tp &)' inline
|   | |   |-ParmVarDecl 0x7fa81d145e98 <col:12, col:23> col:23 referenced __x 'const _Tp &'
|   | |   |-ParmVarDecl 0x7fa81d145f08 <col:28, col:39> col:39 referenced __y 'const _Tp &'
|   | |   |-CompoundStmt 0x7fa81d146200 <line:235:1, line:237:1>
|   | |   | `-ReturnStmt 0x7fa81d1461e8 <line:236:5, col:23>
|   | |   |   `-UnaryOperator 0x7fa81d1461c8 <col:12, col:23> '<dependent type>' prefix '!'
|   | |   |     `-ParenExpr 0x7fa81d1461a8 <col:13, col:23> '<dependent type>'
|   | |   |       `-BinaryOperator 0x7fa81d146180 <col:14, col:20> '<dependent type>' '<'
|   | |   |         |-DeclRefExpr 0x7fa81d146130 <col:14> 'const _Tp' lvalue ParmVar 0x7fa81d145f08 '__y' 'const _Tp &'
|   | |   |         `-DeclRefExpr 0x7fa81d146158 <col:20> 'const _Tp' lvalue ParmVar 0x7fa81d145e98 '__x' 'const _Tp &'
|   | |   |-AlwaysInlineAttr 0x7fa81d1460d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d146120 <col:51, col:74> Hidden
|   | `-FunctionTemplateDecl 0x7fa81d146908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:239:1, line:245:1> line:242:1 operator>=
|   |   |-TemplateTypeParmDecl 0x7fa81d146220 <line:239:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   |   `-FunctionDecl 0x7fa81d146870 <line:240:1, line:245:1> line:242:1 operator>= '_Bool (const _Tp &, const _Tp &)' inline
|   |     |-ParmVarDecl 0x7fa81d146308 <col:12, col:23> col:23 referenced __x 'const _Tp &'
|   |     |-ParmVarDecl 0x7fa81d146378 <col:28, col:39> col:39 referenced __y 'const _Tp &'
|   |     |-CompoundStmt 0x7fa81d146a90 <line:243:1, line:245:1>
|   |     | `-ReturnStmt 0x7fa81d146a78 <line:244:5, col:23>
|   |     |   `-UnaryOperator 0x7fa81d146a58 <col:12, col:23> '<dependent type>' prefix '!'
|   |     |     `-ParenExpr 0x7fa81d146a38 <col:13, col:23> '<dependent type>'
|   |     |       `-BinaryOperator 0x7fa81d146a10 <col:14, col:20> '<dependent type>' '<'
|   |     |         |-DeclRefExpr 0x7fa81d1469c0 <col:14> 'const _Tp' lvalue ParmVar 0x7fa81d146308 '__x' 'const _Tp &'
|   |     |         `-DeclRefExpr 0x7fa81d1469e8 <col:20> 'const _Tp' lvalue ParmVar 0x7fa81d146378 '__y' 'const _Tp &'
|   |     |-AlwaysInlineAttr 0x7fa81d146968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr 0x7fa81d1469b0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d146e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:252:1, line:260:1> line:255:1 swap_ranges
|   | |-TemplateTypeParmDecl 0x7fa81d146ab0 <line:252:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
|   | |-TemplateTypeParmDecl 0x7fa81d146b18 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
|   | `-FunctionDecl 0x7fa81d146e00 <line:253:1, line:260:1> line:255:1 swap_ranges '_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2)' inline
|   |   |-ParmVarDecl 0x7fa81d146be8 <col:13, col:31> col:31 referenced __first1 '_ForwardIterator1'
|   |   |-ParmVarDecl 0x7fa81d146c58 <col:41, col:59> col:59 referenced __last1 '_ForwardIterator1'
|   |   |-ParmVarDecl 0x7fa81d146cc8 <col:68, col:86> col:86 referenced __first2 '_ForwardIterator2'
|   |   |-CompoundStmt 0x7fa81d147260 <line:256:1, line:260:1>
|   |   | |-ForStmt 0x7fa81d1471e8 <line:257:5, line:258:34>
|   |   | | |-<<<NULL>>>
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator 0x7fa81d146fa8 <line:257:11, col:23> '<dependent type>' '!='
|   |   | | | |-DeclRefExpr 0x7fa81d146f58 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fa81d146be8 '__first1' '_ForwardIterator1'
|   |   | | | `-DeclRefExpr 0x7fa81d146f80 <col:23> '_ForwardIterator1' lvalue ParmVar 0x7fa81d146c58 '__last1' '_ForwardIterator1'
|   |   | | |-BinaryOperator 0x7fa81d147098 <col:32, col:53> '<dependent type>' ','
|   |   | | | |-UnaryOperator 0x7fa81d146ff8 <col:32, col:34> '<dependent type>' prefix '++'
|   |   | | | | `-DeclRefExpr 0x7fa81d146fd0 <col:34> '_ForwardIterator1' lvalue ParmVar 0x7fa81d146be8 '__first1' '_ForwardIterator1'
|   |   | | | `-CStyleCastExpr 0x7fa81d147070 <col:44, col:53> 'void' <ToVoid>
|   |   | | |   `-UnaryOperator 0x7fa81d147040 <col:51, col:53> '<dependent type>' prefix '++'
|   |   | | |     `-DeclRefExpr 0x7fa81d147018 <col:53> '_ForwardIterator2' lvalue ParmVar 0x7fa81d146cc8 '__first2' '_ForwardIterator2'
|   |   | | `-CallExpr 0x7fa81d1471b0 <line:258:9, col:34> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x7fa81d1470c0 <col:9> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fa81d864d38 0x7fa81d865ba8
|   |   | |   |-UnaryOperator 0x7fa81d147148 <col:14, col:15> '<dependent type>' prefix '*'
|   |   | |   | `-DeclRefExpr 0x7fa81d147120 <col:15> '_ForwardIterator1' lvalue ParmVar 0x7fa81d146be8 '__first1' '_ForwardIterator1'
|   |   | |   `-UnaryOperator 0x7fa81d147190 <col:25, col:26> '<dependent type>' prefix '*'
|   |   | |     `-DeclRefExpr 0x7fa81d147168 <col:26> '_ForwardIterator2' lvalue ParmVar 0x7fa81d146cc8 '__first2' '_ForwardIterator2'
|   |   | `-ReturnStmt 0x7fa81d147248 <line:259:5, col:12>
|   |   |   `-DeclRefExpr 0x7fa81d147220 <col:12> '_ForwardIterator2' lvalue ParmVar 0x7fa81d146cc8 '__first2' '_ForwardIterator2'
|   |   |-AlwaysInlineAttr 0x7fa81d146f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d146f48 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d147aa8 prev 0x7fa81d865ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:263:1, line:271:1> line:268:1 swap
|   | |-TemplateTypeParmDecl 0x7fa81d147288 <line:263:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d147308 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
|   | `-FunctionDecl 0x7fa81d147a10 prev 0x7fa81d865b10 <line:264:1, line:271:1> line:268:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
|   |   |-ParmVarDecl 0x7fa81d1476b8 <col:6, col:20> col:12 referenced __a '_Tp (&)[_Np]'
|   |   |-ParmVarDecl 0x7fa81d147808 <col:23, col:37> col:29 referenced __b '_Tp (&)[_Np]'
|   |   |-CompoundStmt 0x7fa81d147d20 <line:269:1, line:271:1>
|   |   | `-CallExpr 0x7fa81d147ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:270:43> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr 0x7fa81d147bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:270:12> '<overloaded function type>' lvalue (no ADL) = 'swap_ranges' 0x7fa81d146e98
|   |   |   |-DeclRefExpr 0x7fa81d147c18 <col:24> '_Tp [_Np]':'_Tp [_Np]' lvalue ParmVar 0x7fa81d1476b8 '__a' '_Tp (&)[_Np]'
|   |   |   |-BinaryOperator 0x7fa81d147c90 <col:29, col:35> '<dependent type>' '+'
|   |   |   | |-DeclRefExpr 0x7fa81d147c40 <col:29> '_Tp [_Np]':'_Tp [_Np]' lvalue ParmVar 0x7fa81d1476b8 '__a' '_Tp (&)[_Np]'
|   |   |   | `-DeclRefExpr 0x7fa81d147c68 <col:35> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d147308 '_Np' 'size_t':'unsigned long'
|   |   |   `-DeclRefExpr 0x7fa81d147cb8 <col:40> '_Tp [_Np]':'_Tp [_Np]' lvalue ParmVar 0x7fa81d147808 '__b' '_Tp (&)[_Np]'
|   |   |-AlwaysInlineAttr 0x7fa81d147b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d147b50 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d1484e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:273:1, line:288:1> line:285:1 move_if_noexcept
|   | |-TemplateTypeParmDecl 0x7fa81d147d40 <line:273:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-FunctionDecl 0x7fa81d148448 <line:274:1, line:288:1> line:285:1 constexpr move_if_noexcept 'typename conditional<!is_nothrow_move_constructible<_Tp>::value && is_copy_constructible<_Tp>::value, const _Tp &, _Tp &&>::type (_Tp &) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d148328 <col:18, col:23> col:23 referenced __x '_Tp &'
|   |   |-CompoundStmt 0x7fa81d148688 <line:286:1, line:288:1>
|   |   | `-ReturnStmt 0x7fa81d148670 <line:287:5, col:27>
|   |   |   `-CallExpr 0x7fa81d148640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:287:27> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d1485c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:287:19> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   |   |     `-DeclRefExpr 0x7fa81d148618 <col:24> '_Tp' lvalue ParmVar 0x7fa81d148328 '__x' '_Tp &'
|   |   |-AlwaysInlineAttr 0x7fa81d148538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d148580 <col:51, col:74> Hidden
|   |-CXXRecordDecl 0x7fa81d1486d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:295:1, col:53> col:29 referenced struct piecewise_construct_t definition
|   | |-TypeVisibilityAttr 0x7fa81d14ba00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d14ba48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:295:1, col:29> col:29 implicit struct piecewise_construct_t
|   | |-CXXConstructorDecl 0x7fa81d14bba0 <col:29> col:29 implicit referenced constexpr piecewise_construct_t 'void (void) noexcept' inline default trivial
|   | |-CXXConstructorDecl 0x7fa81d14bcb8 <col:29> col:29 implicit constexpr piecewise_construct_t 'void (const struct std::__1::piecewise_construct_t &)' inline default trivial noexcept-unevaluated 0x7fa81d14bcb8
|   | | `-ParmVarDecl 0x7fa81d14bde0 <col:29> col:29 'const struct std::__1::piecewise_construct_t &'
|   | |-CXXConstructorDecl 0x7fa81d14be78 <col:29> col:29 implicit used constexpr piecewise_construct_t 'void (struct std::__1::piecewise_construct_t &&) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x7fa81d14bfa0 <col:29> col:29 'struct std::__1::piecewise_construct_t &&'
|   | | `-CompoundStmt 0x7fa81d14c168 <col:29>
|   | `-CXXDestructorDecl 0x7fa81d14c040 <col:29> col:29 implicit referenced ~piecewise_construct_t 'void (void) noexcept' inline default trivial
|   |-VarDecl 0x7fa81d14bb10 <line:299:1, col:77> col:33 piecewise_construct 'const struct std::__1::piecewise_construct_t' constexpr cinit
|   | `-ExprWithCleanups 0x7fa81d14c1b8 <col:55, col:77> 'const struct std::__1::piecewise_construct_t'
|   |   `-CXXConstructExpr 0x7fa81d14c180 <col:55, col:77> 'const struct std::__1::piecewise_construct_t' 'void (struct std::__1::piecewise_construct_t &&) noexcept' elidable
|   |     `-MaterializeTemporaryExpr 0x7fa81d14c118 <col:55, col:77> 'struct std::__1::piecewise_construct_t' xvalue
|   |       `-CXXTemporaryObjectExpr 0x7fa81d14c008 <col:55, col:77> 'struct std::__1::piecewise_construct_t' 'void (void) noexcept' zeroing
|   |-ClassTemplateDecl 0x7fa81d14c4a0 prev 0x7fa81c066dd0 <line:311:1, line:546:1> line:312:29 pair
|   | |-TemplateTypeParmDecl 0x7fa81d14c2e0 <line:311:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d14c348 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | |-CXXRecordDecl 0x7fa81d14c408 prev 0x7fa81c066d38 <line:312:1, line:546:1> line:312:29 struct pair definition
|   | | |-TypeVisibilityAttr 0x7fa81d14c558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81d14c5a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:312:1, col:29> col:29 implicit referenced struct pair
|   | | |-TypedefDecl 0x7fa81d14c648 <line:317:5, col:17> col:17 referenced first_type '_T1'
|   | | | `-TemplateTypeParmType 0x7fa81d14c320 '_T1' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm 0x7fa81d14c2e0 '_T1'
|   | | |-TypedefDecl 0x7fa81d14c6b0 <line:318:5, col:17> col:17 referenced second_type '_T2'
|   | | | `-TemplateTypeParmType 0x7fa81d14c390 '_T2' dependent depth 0 index 1
|   | | |   `-TemplateTypeParm 0x7fa81d14c348 '_T2'
|   | | |-FieldDecl 0x7fa81d14c718 <line:320:5, col:9> col:9 referenced first '_T1'
|   | | |-FieldDecl 0x7fa81d14c770 <line:321:5, col:9> col:9 referenced second '_T2'
|   | | |-CXXConstructorDecl 0x7fa81d14c910 <line:324:5, col:31> col:5 pair<_T1, _T2> 'void (const pair<_T1, _T2> &)' default
|   | | | `-ParmVarDecl 0x7fa81d14c7f8 <col:10, col:20> col:21 'const pair<_T1, _T2> &'
|   | | |-CXXConstructorDecl 0x7fa81d14cac0 <line:325:5, col:26> col:5 pair<_T1, _T2> 'void (pair<_T1, _T2> &&)' default
|   | | | `-ParmVarDecl 0x7fa81d14c9f8 <col:10, col:14> col:16 'pair<_T1, _T2> &&'
|   | | |-TypeAliasTemplateDecl 0x7fa81d14ce70 <line:348:5, line:349:54> col:5 _EnableB
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d14cb80 <line:348:15, col:20> col:20 referenced '_Bool' depth 1 index 0 _Val
|   | | | `-TypeAliasDecl 0x7fa81d14ce10 <line:349:5, col:54> col:11 _EnableB 'typename enable_if<_Val, _Bool>::type'
|   | | |   `-DependentNameType 0x7fa81d14cda0 'typename enable_if<_Val, _Bool>::type' dependent
|   | | |-CXXRecordDecl 0x7fa81d14cec0 <line:351:5, line:373:5> line:351:12 referenced struct _CheckArgs definition
|   | | | |-CXXRecordDecl 0x7fa81d14cfe8 <col:5, col:12> col:12 implicit struct _CheckArgs
|   | | | |-FunctionTemplateDecl 0x7fa81d14d260 <line:352:7, line:356:7> line:353:29 __enable_default
|   | | | | |-TemplateTypeParmDecl 0x7fa81d14d080 <line:352:17, col:23> col:23 referenced class depth 1 index 0 _U1
|   | | | | |-TemplateTypeParmDecl 0x7fa81d14d0e8 <col:28, col:34> col:34 referenced class depth 1 index 1 _U2
|   | | | | `-CXXMethodDecl 0x7fa81d14d1c8 <line:353:7, line:356:7> line:353:29 constexpr __enable_default '_Bool (void)' static
|   | | | |   `-CompoundStmt 0x7fa81d1641f8 <col:48, line:356:7>
|   | | | |     `-ReturnStmt 0x7fa81d1641e0 <line:354:11, line:355:49>
|   | | | |       `-BinaryOperator 0x7fa81d1641b8 <line:354:18, line:355:49> '<dependent type>' '&&'
|   | | | |         |-DependentScopeDeclRefExpr 0x7fa81d164018 <line:354:18, col:49> '<dependent type>' lvalue
|   | | | |         `-DependentScopeDeclRefExpr 0x7fa81d164178 <line:355:18, col:49> '<dependent type>' lvalue
|   | | | |-FunctionTemplateDecl 0x7fa81d14d460 <line:358:7, line:364:7> line:359:29 __enable_explicit
|   | | | | |-TemplateTypeParmDecl 0x7fa81d14d2b0 <line:358:17, col:23> col:23 referenced class depth 1 index 0 _U1
|   | | | | |-TemplateTypeParmDecl 0x7fa81d14d318 <col:28, col:34> col:34 referenced class depth 1 index 1 _U2
|   | | | | `-CXXMethodDecl 0x7fa81d14d3c8 <line:359:7, line:364:7> line:359:29 constexpr __enable_explicit '_Bool (void)' static
|   | | | |   `-CompoundStmt 0x7fa81d164a20 <col:49, line:364:7>
|   | | | |     `-ReturnStmt 0x7fa81d164a08 <line:360:11, line:363:62>
|   | | | |       `-BinaryOperator 0x7fa81d1649e0 <line:360:18, line:363:62> '<dependent type>' '&&'
|   | | | |         |-BinaryOperator 0x7fa81d1645d8 <line:360:18, line:361:54> '<dependent type>' '&&'
|   | | | |         | |-DependentScopeDeclRefExpr 0x7fa81d1643b8 <line:360:18, col:53> '<dependent type>' lvalue
|   | | | |         | `-DependentScopeDeclRefExpr 0x7fa81d164598 <line:361:18, col:54> '<dependent type>' lvalue
|   | | | |         `-ParenExpr 0x7fa81d1649c0 <line:362:18, line:363:62> '<dependent type>'
|   | | | |           `-BinaryOperator 0x7fa81d164998 <line:362:19, line:363:57> '<dependent type>' '||'
|   | | | |             |-UnaryOperator 0x7fa81d1647a8 <line:362:19, col:53> '<dependent type>' prefix '!'
|   | | | |             | `-DependentScopeDeclRefExpr 0x7fa81d164768 <col:20, col:53> '<dependent type>' lvalue
|   | | | |             `-UnaryOperator 0x7fa81d164978 <line:363:22, col:57> '<dependent type>' prefix '!'
|   | | | |               `-DependentScopeDeclRefExpr 0x7fa81d164938 <col:23, col:57> '<dependent type>' lvalue
|   | | | `-FunctionTemplateDecl 0x7fa81d14d660 <line:366:7, line:372:7> line:367:29 __enable_implicit
|   | | |   |-TemplateTypeParmDecl 0x7fa81d14d4b0 <line:366:17, col:23> col:23 referenced class depth 1 index 0 _U1
|   | | |   |-TemplateTypeParmDecl 0x7fa81d14d518 <col:28, col:34> col:34 referenced class depth 1 index 1 _U2
|   | | |   `-CXXMethodDecl 0x7fa81d14d5c8 <line:367:7, line:372:7> line:367:29 constexpr __enable_implicit '_Bool (void)' static
|   | | |     `-CompoundStmt 0x7fa81d165058 <col:49, line:372:7>
|   | | |       `-ReturnStmt 0x7fa81d165040 <line:368:11, line:371:52>
|   | | |         `-BinaryOperator 0x7fa81d165018 <line:368:18, line:371:52> '<dependent type>' '&&'
|   | | |           |-BinaryOperator 0x7fa81d164ea8 <line:368:18, line:370:51> '<dependent type>' '&&'
|   | | |           | |-BinaryOperator 0x7fa81d164d38 <line:368:18, line:369:54> '<dependent type>' '&&'
|   | | |           | | |-DependentScopeDeclRefExpr 0x7fa81d164b78 <line:368:18, col:53> '<dependent type>' lvalue
|   | | |           | | `-DependentScopeDeclRefExpr 0x7fa81d164cf8 <line:369:18, col:54> '<dependent type>' lvalue
|   | | |           | `-DependentScopeDeclRefExpr 0x7fa81d164e68 <line:370:18, col:51> '<dependent type>' lvalue
|   | | |           `-DependentScopeDeclRefExpr 0x7fa81d164fd8 <line:371:18, col:52> '<dependent type>' lvalue
|   | | |-TypeAliasTemplateDecl 0x7fa81d14e260 <line:375:5, line:377:66> line:376:5 _CheckArgsDep
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d14d6e0 <line:375:15, col:20> col:20 referenced '_Bool' depth 1 index 0 _MaybeEnable
|   | | | `-TypeAliasDecl 0x7fa81d14e200 <line:376:5, line:377:66> line:376:11 _CheckArgsDep 'typename conditional<_MaybeEnable, struct _CheckArgs, struct __check_tuple_constructor_fail>::type'
|   | | |   `-DependentNameType 0x7fa81d14d960 'typename conditional<_MaybeEnable, struct _CheckArgs, struct __check_tuple_constructor_fail>::type' dependent
|   | | |-CXXRecordDecl 0x7fa81d14e2b0 <line:379:5, line:395:5> line:379:12 referenced struct _CheckTupleLikeConstructor definition
|   | | | |-CXXRecordDecl 0x7fa81d14e3d8 <col:5, col:12> col:12 implicit struct _CheckTupleLikeConstructor
|   | | | |-FunctionTemplateDecl 0x7fa81d14e5d0 <line:380:9, line:383:9> line:381:31 __enable_implicit
|   | | | | |-TemplateTypeParmDecl 0x7fa81d14e470 <line:380:19, col:25> col:25 referenced class depth 1 index 0 _Tuple
|   | | | | `-CXXMethodDecl 0x7fa81d14e538 <line:381:9, line:383:9> line:381:31 constexpr __enable_implicit '_Bool (void)' static
|   | | | |   `-CompoundStmt 0x7fa81d1664a0 <col:51, line:383:9>
|   | | | |     `-ReturnStmt 0x7fa81d166488 <line:382:13, col:55>
|   | | | |       `-DependentScopeDeclRefExpr 0x7fa81d166448 <col:20, col:55> '<dependent type>' lvalue
|   | | | |-FunctionTemplateDecl 0x7fa81d14e758 <line:385:9, line:389:9> line:386:31 __enable_explicit
|   | | | | |-TemplateTypeParmDecl 0x7fa81d14e620 <line:385:19, col:25> col:25 referenced class depth 1 index 0 _Tuple
|   | | | | `-CXXMethodDecl 0x7fa81d14e6c0 <line:386:9, line:389:9> line:386:31 constexpr __enable_explicit '_Bool (void)' static
|   | | | |   `-CompoundStmt 0x7fa81d166e48 <col:51, line:389:9>
|   | | | |     `-ReturnStmt 0x7fa81d166e30 <line:387:13, line:388:55>
|   | | | |       `-BinaryOperator 0x7fa81d166e08 <line:387:20, line:388:55> '<dependent type>' '&&'
|   | | | |         |-DependentScopeDeclRefExpr 0x7fa81d166988 <line:387:20, col:57> '<dependent type>' lvalue
|   | | | |         `-UnaryOperator 0x7fa81d166de8 <line:388:19, col:55> '<dependent type>' prefix '!'
|   | | | |           `-DependentScopeDeclRefExpr 0x7fa81d166da8 <col:20, col:55> '<dependent type>' lvalue
|   | | | `-FunctionTemplateDecl 0x7fa81d14e8e8 <line:391:9, line:394:9> line:392:31 __enable_assign
|   | | |   |-TemplateTypeParmDecl 0x7fa81d14e7a8 <line:391:19, col:25> col:25 referenced class depth 1 index 0 _Tuple
|   | | |   `-CXXMethodDecl 0x7fa81d14e850 <line:392:9, line:394:9> line:392:31 constexpr __enable_assign '_Bool (void)' static
|   | | |     `-CompoundStmt 0x7fa81d167390 <col:49, line:394:9>
|   | | |       `-ReturnStmt 0x7fa81d167378 <line:393:13, col:54>
|   | | |         `-DependentScopeDeclRefExpr 0x7fa81d167338 <col:20, col:54> '<dependent type>' lvalue
|   | | |-TypeAliasTemplateDecl 0x7fa81d14f870 <line:397:5, line:403:8> line:398:5 _CheckTLC
|   | | | |-TemplateTypeParmDecl 0x7fa81d14e958 <line:397:15, col:21> col:21 referenced class depth 1 index 0 _Tuple
|   | | | `-TypeAliasDecl 0x7fa81d14f810 <line:398:5, line:403:8> line:398:11 _CheckTLC 'typename conditional<__tuple_like_with_size<_Tuple, 2>::value && !is_same<typename decay<_Tuple>::type, pair<_T1, _T2> >::value, struct _CheckTupleLikeConstructor, struct __check_tuple_constructor_fail>::type'
|   | | |   `-DependentNameType 0x7fa81d14f7a0 'typename conditional<__tuple_like_with_size<_Tuple, 2>::value && !is_same<typename decay<_Tuple>::type, pair<_T1, _T2> >::value, struct _CheckTupleLikeConstructor, struct __check_tuple_constructor_fail>::type' dependent
|   | | |-FunctionTemplateDecl 0x7fa81d150cd0 <line:405:5, line:409:33> col:5 pair<_T1, _T2>
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d14f8e8 <line:405:14, col:28> col:19 referenced '_Bool' depth 1 index 0 _Dummy
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d14f8c0 <col:28> '_Bool' true
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d150118 <col:34, line:407:9> col:7 '_EnableB<_CheckArgsDep<_Dummy>::template __enable_default<_T1, _T2>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_default<_T1, _T2>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d1500d0 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d150600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:409:33> col:5 constexpr pair<_T1, _T2> 'void (void)'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d1673b0 <col:19, col:20> 'NULL TYPE'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d167400 <col:29, col:30> 'NULL TYPE'
|   | | |   |-CompoundStmt 0x7fa81d167460 <col:32, col:33>
|   | | |   |-AlwaysInlineAttr 0x7fa81d150d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d150d68 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d151f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:411:5, line:416:38> line:415:14 pair<_T1, _T2>
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d150da0 <line:411:15, col:29> col:20 referenced '_Bool' depth 1 index 0 _Dummy
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d150d78 <col:29> '_Bool' true
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d151618 <col:35, line:413:9> col:7 '_EnableB<_CheckArgsDep<_Dummy>::template __enable_explicit<const _T1 &, const _T2 &>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_explicit<const _T1 &, const _T2 &>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d1515d0 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d151850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:416:38> line:415:14 constexpr pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
|   | | |   |-ParmVarDecl 0x7fa81d1516d0 <col:19, col:30> col:30 referenced __t1 'const _T1 &'
|   | | |   |-ParmVarDecl 0x7fa81d151740 <col:36, col:47> col:47 referenced __t2 'const _T2 &'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d1674a0 <line:416:16, col:21> 'NULL TYPE'
|   | | |   |   `-DeclRefExpr 0x7fa81d167478 <col:17> 'const _T1' lvalue ParmVar 0x7fa81d1516d0 '__t1' 'const _T1 &'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d167520 <col:30, col:35> 'NULL TYPE'
|   | | |   |   `-DeclRefExpr 0x7fa81d1674f8 <col:31> 'const _T2' lvalue ParmVar 0x7fa81d151740 '__t2' 'const _T2 &'
|   | | |   |-CompoundStmt 0x7fa81d167588 <col:37, col:38>
|   | | |   |-AlwaysInlineAttr 0x7fa81d151f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d151fc8 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d1530c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:418:5, line:423:38> line:422:5 pair<_T1, _T2>
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d152000 <line:418:14, col:28> col:19 referenced '_Bool' depth 1 index 0 _Dummy
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d151fd8 <col:28> '_Bool' true
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d152838 <col:34, line:420:9> col:7 '_EnableB<_CheckArgsDep<_Dummy>::template __enable_implicit<const _T1 &, const _T2 &>()>':'typename enable_if<_CheckArgsDep<_Dummy>::template __enable_implicit<const _T1 &, const _T2 &>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d1527f0 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d1529f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:423:38> line:422:5 constexpr pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
|   | | |   |-ParmVarDecl 0x7fa81d1528f0 <col:10, col:21> col:21 referenced __t1 'const _T1 &'
|   | | |   |-ParmVarDecl 0x7fa81d152960 <col:27, col:38> col:38 referenced __t2 'const _T2 &'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d1675c8 <line:423:16, col:21> 'NULL TYPE'
|   | | |   |   `-DeclRefExpr 0x7fa81d1675a0 <col:17> 'const _T1' lvalue ParmVar 0x7fa81d1528f0 '__t1' 'const _T1 &'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d167648 <col:30, col:35> 'NULL TYPE'
|   | | |   |   `-DeclRefExpr 0x7fa81d167620 <col:31> 'const _T2' lvalue ParmVar 0x7fa81d152960 '__t2' 'const _T2 &'
|   | | |   |-CompoundStmt 0x7fa81d1676b0 <col:37, col:38>
|   | | |   |-AlwaysInlineAttr 0x7fa81d153120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d153168 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d153e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:425:5, line:430:80> line:429:14 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d153178 <line:425:14, col:20> col:20 referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl 0x7fa81d1531e8 <col:25, col:31> col:31 referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d153728 <col:36, line:427:9> col:7 '_EnableB<struct _CheckArgs::template __enable_explicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<_U1, _U2>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d1536e0 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d153a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:80> line:429:14 constexpr pair<_T1, _T2> 'void (_U1 &&, _U2 &&)'
|   | | |   |-ParmVarDecl 0x7fa81d153848 <col:19, col:25> col:25 referenced __u1 '_U1 &&'
|   | | |   |-ParmVarDecl 0x7fa81d153918 <col:31, col:37> col:37 referenced __u2 '_U2 &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d167818 <line:430:16, col:42> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d1677e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:41> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d167720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |     `-DeclRefExpr 0x7fa81d1677c0 <col:37> '_U1' lvalue ParmVar 0x7fa81d153848 '__u1' '_U1 &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d1679c0 <col:51, col:77> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d167990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:76> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d1678c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:430:70> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |     `-DeclRefExpr 0x7fa81d167968 <col:72> '_U2' lvalue ParmVar 0x7fa81d153918 '__u2' '_U2 &&'
|   | | |   |-CompoundStmt 0x7fa81d167a28 <col:79, col:80>
|   | | |   |-AlwaysInlineAttr 0x7fa81d153e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d153ed8 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d154ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:432:5, line:437:80> line:436:5 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d153ee8 <line:432:14, col:20> col:20 referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl 0x7fa81d153f58 <col:25, col:31> col:31 referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d154478 <col:36, line:434:9> col:7 '_EnableB<struct _CheckArgs::template __enable_implicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<_U1, _U2>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d154430 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d1546e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:80> line:436:5 constexpr pair<_T1, _T2> 'void (_U1 &&, _U2 &&)'
|   | | |   |-ParmVarDecl 0x7fa81d154568 <col:10, col:16> col:16 referenced __u1 '_U1 &&'
|   | | |   |-ParmVarDecl 0x7fa81d154610 <col:22, col:28> col:28 referenced __u2 '_U2 &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d167b90 <line:437:16, col:42> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d167b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:41> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d167a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |     `-DeclRefExpr 0x7fa81d167b38 <col:37> '_U1' lvalue ParmVar 0x7fa81d154568 '__u1' '_U1 &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d167d38 <col:51, col:77> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d167d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:76> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d167c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:437:70> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |     `-DeclRefExpr 0x7fa81d167ce0 <col:72> '_U2' lvalue ParmVar 0x7fa81d154610 '__u2' '_U2 &&'
|   | | |   |-CompoundStmt 0x7fa81d167da0 <col:79, col:80>
|   | | |   |-AlwaysInlineAttr 0x7fa81d154b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d154b88 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d155960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:439:5, line:444:49> line:443:14 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d154b98 <line:439:14, col:20> col:20 referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl 0x7fa81d154c08 <col:25, col:31> col:31 referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d1551c8 <col:36, line:441:9> col:7 '_EnableB<struct _CheckArgs::template __enable_explicit<const _U1 &, const _U2 &>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<const _U1 &, const _U2 &>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d155180 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d155560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:444:49> line:443:14 constexpr pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
|   | | |   |-ParmVarDecl 0x7fa81d155458 <col:19, col:41> col:41 referenced __p 'const pair<_U1, _U2> &'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d167e38 <line:444:16, col:26> 'NULL TYPE'
|   | | |   |   `-CXXDependentScopeMemberExpr 0x7fa81d167de0 <col:17, col:21> '<dependent type>' lvalue .first
|   | | |   |     `-DeclRefExpr 0x7fa81d167db8 <col:17> 'const pair<_U1, _U2>' lvalue ParmVar 0x7fa81d155458 '__p' 'const pair<_U1, _U2> &'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d167f10 <col:35, col:46> 'NULL TYPE'
|   | | |   |   `-CXXDependentScopeMemberExpr 0x7fa81d167eb8 <col:36, col:40> '<dependent type>' lvalue .second
|   | | |   |     `-DeclRefExpr 0x7fa81d167e90 <col:36> 'const pair<_U1, _U2>' lvalue ParmVar 0x7fa81d155458 '__p' 'const pair<_U1, _U2> &'
|   | | |   |-CompoundStmt 0x7fa81d167f78 <col:48, col:49>
|   | | |   |-AlwaysInlineAttr 0x7fa81d1559b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d155a00 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d1566a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:446:5, line:451:49> line:450:5 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d155a10 <line:446:14, col:20> col:20 referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl 0x7fa81d155a78 <col:25, col:31> col:31 referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d155fd8 <col:36, line:448:9> col:7 '_EnableB<struct _CheckArgs::template __enable_implicit<const _U1 &, const _U2 &>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<const _U1 &, const _U2 &>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d155f90 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d1562a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:451:49> line:450:5 constexpr pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
|   | | |   |-ParmVarDecl 0x7fa81d1561d8 <col:10, col:32> col:32 referenced __p 'const pair<_U1, _U2> &'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d168858 <line:451:16, col:26> 'NULL TYPE'
|   | | |   |   `-CXXDependentScopeMemberExpr 0x7fa81d168800 <col:17, col:21> '<dependent type>' lvalue .first
|   | | |   |     `-DeclRefExpr 0x7fa81d167f90 <col:17> 'const pair<_U1, _U2>' lvalue ParmVar 0x7fa81d1561d8 '__p' 'const pair<_U1, _U2> &'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d168930 <col:35, col:46> 'NULL TYPE'
|   | | |   |   `-CXXDependentScopeMemberExpr 0x7fa81d1688d8 <col:36, col:40> '<dependent type>' lvalue .second
|   | | |   |     `-DeclRefExpr 0x7fa81d1688b0 <col:36> 'const pair<_U1, _U2>' lvalue ParmVar 0x7fa81d1561d8 '__p' 'const pair<_U1, _U2> &'
|   | | |   |-CompoundStmt 0x7fa81d168998 <col:48, col:49>
|   | | |   |-AlwaysInlineAttr 0x7fa81d1566f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d156740 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d157340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:453:5, line:458:91> line:457:14 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d156750 <line:453:14, col:20> col:20 referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl 0x7fa81d1567b8 <col:25, col:31> col:31 referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d156c08 <col:36, line:455:9> col:7 '_EnableB<struct _CheckArgs::template __enable_explicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_explicit<_U1, _U2>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d156bc0 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d156f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:91> line:457:14 constexpr pair<_T1, _T2> 'void (pair<_U1, _U2> &&)'
|   | | |   |-ParmVarDecl 0x7fa81d156e38 <col:19, col:35> col:35 referenced __p 'pair<_U1, _U2> &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d168b58 <line:458:16, col:47> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d168b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:46> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d168a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |     `-CXXDependentScopeMemberExpr 0x7fa81d168ad0 <col:37, col:41> '<dependent type>' lvalue .first
|   | | |   |       `-DeclRefExpr 0x7fa81d168aa8 <col:37> 'pair<_U1, _U2>' lvalue ParmVar 0x7fa81d156e38 '__p' 'pair<_U1, _U2> &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d168d58 <col:56, col:88> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d168d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:87> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d168c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:458:75> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |     `-CXXDependentScopeMemberExpr 0x7fa81d168cd0 <col:77, col:81> '<dependent type>' lvalue .second
|   | | |   |       `-DeclRefExpr 0x7fa81d168ca8 <col:77> 'pair<_U1, _U2>' lvalue ParmVar 0x7fa81d156e38 '__p' 'pair<_U1, _U2> &&'
|   | | |   |-CompoundStmt 0x7fa81d168dc0 <col:90, col:91>
|   | | |   |-AlwaysInlineAttr 0x7fa81d157398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d1573e0 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d157f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:460:5, line:465:91> line:464:5 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d1573f0 <line:460:14, col:20> col:20 referenced class depth 1 index 0 _U1
|   | | | |-TemplateTypeParmDecl 0x7fa81d157458 <col:25, col:31> col:31 referenced class depth 1 index 1 _U2
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d1578a8 <col:36, line:462:9> col:7 '_EnableB<struct _CheckArgs::template __enable_implicit<_U1, _U2>()>':'typename enable_if<struct _CheckArgs::template __enable_implicit<_U1, _U2>(), _Bool>::type' depth 1 index 2
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d157860 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d157b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:91> line:464:5 constexpr pair<_T1, _T2> 'void (pair<_U1, _U2> &&)'
|   | | |   |-ParmVarDecl 0x7fa81d157aa8 <col:10, col:27> col:27 referenced __p 'pair<_U1, _U2> &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d168f80 <line:465:16, col:47> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d168f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:46> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d168e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |     `-CXXDependentScopeMemberExpr 0x7fa81d168ef8 <col:37, col:41> '<dependent type>' lvalue .first
|   | | |   |       `-DeclRefExpr 0x7fa81d168ed0 <col:37> 'pair<_U1, _U2>' lvalue ParmVar 0x7fa81d157aa8 '__p' 'pair<_U1, _U2> &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d169180 <col:56, col:88> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d169150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:87> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d169030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:465:75> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |     `-CXXDependentScopeMemberExpr 0x7fa81d1690f8 <col:77, col:81> '<dependent type>' lvalue .second
|   | | |   |       `-DeclRefExpr 0x7fa81d1690d0 <col:77> 'pair<_U1, _U2>' lvalue ParmVar 0x7fa81d157aa8 '__p' 'pair<_U1, _U2> &&'
|   | | |   |-CompoundStmt 0x7fa81d1691e8 <col:90, col:91>
|   | | |   |-AlwaysInlineAttr 0x7fa81d157fc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d158010 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d15a080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:467:5, line:473:63> line:471:14 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d158020 <line:467:14, col:20> col:20 referenced class depth 1 index 0 _Tuple
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d159028 <col:28, line:469:9> col:7 '_EnableB<_CheckTLC<_Tuple>::template __enable_explicit<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_explicit<_Tuple>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d158fe0 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d159210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:63> line:471:14 constexpr pair<_T1, _T2> 'void (_Tuple &&)'
|   | | |   |-ParmVarDecl 0x7fa81d159108 <col:19, col:28> col:28 referenced __p '_Tuple &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d169528 <line:472:16, col:59> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d1694f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:472:58> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d1692b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:472:29> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d06f4d8 0x7fa81d06fc98 0x7fa81d070458 0x7fa81d070c18 0x7fa81d071c00 0x7fa81d072448 0x7fa81d072c88 0x7fa81d0734c8 0x7fa81d0745a0 0x7fa81d074b50 0x7fa81d075100 0x7fa81d0756b0
|   | | |   |     `-CallExpr 0x7fa81d1694c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:472:57> '<dependent type>'
|   | | |   |       |-UnresolvedLookupExpr 0x7fa81d169400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:472:52> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |       `-DeclRefExpr 0x7fa81d1694a0 <col:54> '_Tuple' lvalue ParmVar 0x7fa81d159108 '__p' '_Tuple &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d1698a8 <line:473:17, col:60> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d169878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:59> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d169638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:30> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d06f4d8 0x7fa81d06fc98 0x7fa81d070458 0x7fa81d070c18 0x7fa81d071c00 0x7fa81d072448 0x7fa81d072c88 0x7fa81d0734c8 0x7fa81d0745a0 0x7fa81d074b50 0x7fa81d075100 0x7fa81d0756b0
|   | | |   |     `-CallExpr 0x7fa81d169848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:58> '<dependent type>'
|   | | |   |       |-UnresolvedLookupExpr 0x7fa81d169780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:473:53> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |       `-DeclRefExpr 0x7fa81d169820 <col:55> '_Tuple' lvalue ParmVar 0x7fa81d159108 '__p' '_Tuple &&'
|   | | |   |-CompoundStmt 0x7fa81d169910 <col:62, col:63>
|   | | |   |-AlwaysInlineAttr 0x7fa81d15a0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d15a120 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d15c900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:475:5, line:481:63> line:479:5 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d15a130 <line:475:14, col:20> col:20 referenced class depth 1 index 0 _Tuple
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d15b8e8 <col:28, line:477:9> col:7 '_EnableB<_CheckTLC<_Tuple>::template __enable_implicit<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_implicit<_Tuple>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d15b8a0 <col:9> '_Bool' false
|   | | | `-CXXConstructorDecl 0x7fa81d15ba90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:63> line:479:5 constexpr pair<_T1, _T2> 'void (_Tuple &&)'
|   | | |   |-ParmVarDecl 0x7fa81d15b9c8 <col:10, col:19> col:19 referenced __p '_Tuple &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c718 'first' '_T1'
|   | | |   | `-ParenListExpr 0x7fa81d169c50 <line:480:16, col:59> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d169c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:480:58> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d1699e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:480:29> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d06f4d8 0x7fa81d06fc98 0x7fa81d070458 0x7fa81d070c18 0x7fa81d071c00 0x7fa81d072448 0x7fa81d072c88 0x7fa81d0734c8 0x7fa81d0745a0 0x7fa81d074b50 0x7fa81d075100 0x7fa81d0756b0
|   | | |   |     `-CallExpr 0x7fa81d169bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:480:57> '<dependent type>'
|   | | |   |       |-UnresolvedLookupExpr 0x7fa81d169b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:480:52> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |       `-DeclRefExpr 0x7fa81d169bc8 <col:54> '_Tuple' lvalue ParmVar 0x7fa81d15b9c8 '__p' '_Tuple &&'
|   | | |   |-CXXCtorInitializer Field 0x7fa81d14c770 'second' '_T2'
|   | | |   | `-ParenListExpr 0x7fa81d169fd0 <line:481:17, col:60> 'NULL TYPE'
|   | | |   |   `-CallExpr 0x7fa81d169fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:59> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d169d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:30> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d06f4d8 0x7fa81d06fc98 0x7fa81d070458 0x7fa81d070c18 0x7fa81d071c00 0x7fa81d072448 0x7fa81d072c88 0x7fa81d0734c8 0x7fa81d0745a0 0x7fa81d074b50 0x7fa81d075100 0x7fa81d0756b0
|   | | |   |     `-CallExpr 0x7fa81d169f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:58> '<dependent type>'
|   | | |   |       |-UnresolvedLookupExpr 0x7fa81d169ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:481:53> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   |       `-DeclRefExpr 0x7fa81d169f48 <col:55> '_Tuple' lvalue ParmVar 0x7fa81d15b9c8 '__p' '_Tuple &&'
|   | | |   |-CompoundStmt 0x7fa81d16a038 <col:62, col:63>
|   | | |   |-AlwaysInlineAttr 0x7fa81d15c958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d15c9a0 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d15dcf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:483:5, line:489:77> line:485:5 pair<_T1, _T2>
|   | | | |-TemplateTypeParmDecl 0x7fa81d15c9b0 <line:483:15, col:24> col:24 referenced class depth 1 index 0 ... _Args1
|   | | | |-TemplateTypeParmDecl 0x7fa81d15ca18 <col:32, col:41> col:41 referenced class depth 1 index 1 ... _Args2
|   | | | `-CXXConstructorDecl 0x7fa81d15dc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:489:77> line:485:5 pair<_T1, _T2> 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>)'
|   | | |   |-ParmVarDecl 0x7fa81d15cae8 <col:10, col:32> col:32 referenced __pc 'struct std::__1::piecewise_construct_t'
|   | | |   |-ParmVarDecl 0x7fa81d15ccf8 <line:486:10, col:27> col:27 referenced __first_args 'tuple<_Args1...>'
|   | | |   |-ParmVarDecl 0x7fa81d15db18 <col:41, col:58> col:58 referenced __second_args 'tuple<_Args2...>'
|   | | |   |-CXXCtorInitializer 'pair<_T1, _T2>'
|   | | |   | `-ParenListExpr 0x7fa81d16a508 <line:487:15, line:489:74> 'NULL TYPE'
|   | | |   |   |-DeclRefExpr 0x7fa81d16a050 <line:487:16> 'struct std::__1::piecewise_construct_t' lvalue ParmVar 0x7fa81d15cae8 '__pc' 'struct std::__1::piecewise_construct_t'
|   | | |   |   |-DeclRefExpr 0x7fa81d16a078 <col:22> 'tuple<_Args1...>' lvalue ParmVar 0x7fa81d15ccf8 '__first_args' 'tuple<_Args1...>'
|   | | |   |   |-DeclRefExpr 0x7fa81d16a0a0 <col:36> 'tuple<_Args2...>' lvalue ParmVar 0x7fa81d15db18 '__second_args' 'tuple<_Args2...>'
|   | | |   |   |-CXXUnresolvedConstructExpr 0x7fa81d16a2c0 <line:488:17, col:72> 'typename __make_tuple_indices<sizeof...(_Args1)>::type'
|   | | |   |   `-CXXUnresolvedConstructExpr 0x7fa81d16a4e0 <line:489:17, col:73> 'typename __make_tuple_indices<sizeof...(_Args2)>::type'
|   | | |   |-CompoundStmt 0x7fa81d16a598 <col:76, col:77>
|   | | |   |-AlwaysInlineAttr 0x7fa81d15dd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d15dda8 <col:51, col:74> Hidden
|   | | |-CXXMethodDecl 0x7fa81d15e4e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:502:5> line:492:11 operator= 'pair<_T1, _T2> &(const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &) noexcept(is_nothrow_copy_assignable<first_type>::value && is_nothrow_copy_assignable<second_type>::value)'
|   | | | |-ParmVarDecl 0x7fa81d15e3b0 <col:21, line:495:47> col:47 referenced __p 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &'
|   | | | |-CompoundStmt 0x7fa81d16b000 <line:498:5, line:502:5>
|   | | | | |-BinaryOperator 0x7fa81d16a680 <line:499:9, col:21> '<dependent type>' '='
|   | | | | | |-MemberExpr 0x7fa81d16a5c8 <col:9> '_T1' lvalue ->first 0x7fa81d14c718
|   | | | | | | `-CXXThisExpr 0x7fa81d16a5b0 <col:9> 'pair<_T1, _T2> *' this
|   | | | | | `-CXXDependentScopeMemberExpr 0x7fa81d16a628 <col:17, col:21> '<dependent type>' lvalue .first
|   | | | | |   `-DeclRefExpr 0x7fa81d16a600 <col:17> 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type' lvalue ParmVar 0x7fa81d15e3b0 '__p' 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &'
|   | | | | |-BinaryOperator 0x7fa81d16a778 <line:500:9, col:22> '<dependent type>' '='
|   | | | | | |-MemberExpr 0x7fa81d16a6c0 <col:9> '_T2' lvalue ->second 0x7fa81d14c770
|   | | | | | | `-CXXThisExpr 0x7fa81d16a6a8 <col:9> 'pair<_T1, _T2> *' this
|   | | | | | `-CXXDependentScopeMemberExpr 0x7fa81d16a720 <col:18, col:22> '<dependent type>' lvalue .second
|   | | | | |   `-DeclRefExpr 0x7fa81d16a6f8 <col:18> 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type' lvalue ParmVar 0x7fa81d15e3b0 '__p' 'const typename conditional<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &'
|   | | | | `-ReturnStmt 0x7fa81d16a7d8 <line:501:9, col:17>
|   | | | |   `-UnaryOperator 0x7fa81d16a7b8 <col:16, col:17> '<dependent type>' prefix '*'
|   | | | |     `-CXXThisExpr 0x7fa81d16a7a0 <col:17> 'pair<_T1, _T2> *' this
|   | | | |-AlwaysInlineAttr 0x7fa81d15e588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr 0x7fa81d15e5d0 <col:51, col:74> Hidden
|   | | |-CXXMethodDecl 0x7fa81d15ec88 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:515:5> line:505:11 operator= 'pair<_T1, _T2> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)'
|   | | | |-ParmVarDecl 0x7fa81d15eb80 <col:21, line:508:42> col:42 referenced __p 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &&'
|   | | | |-CompoundStmt 0x7fa81d16b4c0 <line:511:5, line:515:5>
|   | | | | |-BinaryOperator 0x7fa81d16b228 <line:512:9, col:53> '<dependent type>' '='
|   | | | | | |-MemberExpr 0x7fa81d16b048 <col:9> '_T1' lvalue ->first 0x7fa81d14c718
|   | | | | | | `-CXXThisExpr 0x7fa81d16b030 <col:9> 'pair<_T1, _T2> *' this
|   | | | | | `-CallExpr 0x7fa81d16b1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:53> '<dependent type>'
|   | | | | |   |-UnresolvedLookupExpr 0x7fa81d16b0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:512:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | | | |   `-CXXDependentScopeMemberExpr 0x7fa81d16b1a0 <col:44, col:48> '<dependent type>' lvalue .first
|   | | | | |     `-DeclRefExpr 0x7fa81d16b178 <col:44> 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type' lvalue ParmVar 0x7fa81d15eb80 '__p' 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &&'
|   | | | | |-BinaryOperator 0x7fa81d16b448 <line:513:9, col:56> '<dependent type>' '='
|   | | | | | |-MemberExpr 0x7fa81d16b268 <col:9> '_T2' lvalue ->second 0x7fa81d14c770
|   | | | | | | `-CXXThisExpr 0x7fa81d16b250 <col:9> 'pair<_T1, _T2> *' this
|   | | | | | `-CallExpr 0x7fa81d16b418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:56> '<dependent type>'
|   | | | | |   |-UnresolvedLookupExpr 0x7fa81d16b2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:513:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | | | |   `-CXXDependentScopeMemberExpr 0x7fa81d16b3c0 <col:46, col:50> '<dependent type>' lvalue .second
|   | | | | |     `-DeclRefExpr 0x7fa81d16b398 <col:46> 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type' lvalue ParmVar 0x7fa81d15eb80 '__p' 'typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<_T1, _T2>, struct __nat>::type &&'
|   | | | | `-ReturnStmt 0x7fa81d16b4a8 <line:514:9, col:17>
|   | | | |   `-UnaryOperator 0x7fa81d16b488 <col:16, col:17> '<dependent type>' prefix '*'
|   | | | |     `-CXXThisExpr 0x7fa81d16b470 <col:17> 'pair<_T1, _T2> *' this
|   | | | |-AlwaysInlineAttr 0x7fa81d15ed28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr 0x7fa81d15ed70 <col:51, col:74> Hidden
|   | | |-FunctionTemplateDecl 0x7fa81d160d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:517:5, line:525:5> line:521:11 operator=
|   | | | |-TemplateTypeParmDecl 0x7fa81d15ed80 <line:517:15, col:21> col:21 referenced class depth 1 index 0 _Tuple
|   | | | |-NonTypeTemplateParmDecl 0x7fa81d15fd28 <col:29, line:519:10> col:8 '_EnableB<_CheckTLC<_Tuple>::template __enable_assign<_Tuple>()>':'typename enable_if<_CheckTLC<_Tuple>::template __enable_assign<_Tuple>(), _Bool>::type' depth 1 index 1
|   | | | | `-TemplateArgument expr
|   | | | |   `-CXXBoolLiteralExpr 0x7fa81d15fce0 <col:10> '_Bool' false
|   | | | `-CXXMethodDecl 0x7fa81d15ff10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:525:5> line:521:11 operator= 'pair<_T1, _T2> &(_Tuple &&)'
|   | | |   |-ParmVarDecl 0x7fa81d15fe08 <col:21, col:30> col:30 referenced __p '_Tuple &&'
|   | | |   |-CompoundStmt 0x7fa81d16bc80 <col:35, line:525:5>
|   | | |   | |-BinaryOperator 0x7fa81d16b868 <line:522:9, col:58> '<dependent type>' '='
|   | | |   | | |-MemberExpr 0x7fa81d16b508 <col:9> '_T1' lvalue ->first 0x7fa81d14c718
|   | | |   | | | `-CXXThisExpr 0x7fa81d16b4f0 <col:9> 'pair<_T1, _T2> *' this
|   | | |   | | `-CallExpr 0x7fa81d16b838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:522:58> '<dependent type>'
|   | | |   | |   |-UnresolvedLookupExpr 0x7fa81d16b5f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:522:29> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d06f4d8 0x7fa81d06fc98 0x7fa81d070458 0x7fa81d070c18 0x7fa81d071c00 0x7fa81d072448 0x7fa81d072c88 0x7fa81d0734c8 0x7fa81d0745a0 0x7fa81d074b50 0x7fa81d075100 0x7fa81d0756b0
|   | | |   | |   `-CallExpr 0x7fa81d16b808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:522:57> '<dependent type>'
|   | | |   | |     |-UnresolvedLookupExpr 0x7fa81d16b740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:522:52> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   | |     `-DeclRefExpr 0x7fa81d16b7e0 <col:54> '_Tuple' lvalue ParmVar 0x7fa81d15fe08 '__p' '_Tuple &&'
|   | | |   | |-BinaryOperator 0x7fa81d16bc08 <line:523:9, col:59> '<dependent type>' '='
|   | | |   | | |-MemberExpr 0x7fa81d16b8a8 <col:9> '_T2' lvalue ->second 0x7fa81d14c770
|   | | |   | | | `-CXXThisExpr 0x7fa81d16b890 <col:9> 'pair<_T1, _T2> *' this
|   | | |   | | `-CallExpr 0x7fa81d16bbd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:523:59> '<dependent type>'
|   | | |   | |   |-UnresolvedLookupExpr 0x7fa81d16b998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:523:30> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d06f4d8 0x7fa81d06fc98 0x7fa81d070458 0x7fa81d070c18 0x7fa81d071c00 0x7fa81d072448 0x7fa81d072c88 0x7fa81d0734c8 0x7fa81d0745a0 0x7fa81d074b50 0x7fa81d075100 0x7fa81d0756b0
|   | | |   | |   `-CallExpr 0x7fa81d16bba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:523:58> '<dependent type>'
|   | | |   | |     |-UnresolvedLookupExpr 0x7fa81d16bae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:523:53> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | | |   | |     `-DeclRefExpr 0x7fa81d16bb80 <col:55> '_Tuple' lvalue ParmVar 0x7fa81d15fe08 '__p' '_Tuple &&'
|   | | |   | `-ReturnStmt 0x7fa81d16bc68 <line:524:9, col:17>
|   | | |   |   `-UnaryOperator 0x7fa81d16bc48 <col:16, col:17> '<dependent type>' prefix '*'
|   | | |   |     `-CXXThisExpr 0x7fa81d16bc30 <col:17> 'pair<_T1, _T2> *' this
|   | | |   |-AlwaysInlineAttr 0x7fa81d160dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |   `-VisibilityAttr 0x7fa81d160e10 <col:51, col:74> Hidden
|   | | |-CXXMethodDecl 0x7fa81d160f68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:536:5> line:530:5 swap 'void (pair<_T1, _T2> &) noexcept(__is_nothrow_swappable<first_type>::value && __is_nothrow_swappable<second_type>::value)'
|   | | | |-ParmVarDecl 0x7fa81d160e60 <col:10, col:16> col:16 referenced __p 'pair<_T1, _T2> &'
|   | | | |-CompoundStmt 0x7fa81d16c088 <line:532:5, line:536:5>
|   | | | | |-DeclStmt 0x7fa81d16bda0 <line:533:9, col:26>
|   | | | | | `-UsingDecl 0x7fa81d16bcc0 <col:9, col:22> col:22 std::__1::swap
|   | | | | |-CallExpr 0x7fa81d16bee8 <line:534:9, col:31> '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr 0x7fa81d16bdb8 <col:9> '<dependent type>' lvalue (ADL) = 'swap' 0x7fa81d16bd58 0x7fa81d16bd10
|   | | | | | |-MemberExpr 0x7fa81d16be30 <col:14> '_T1' lvalue ->first 0x7fa81d14c718
|   | | | | | | `-CXXThisExpr 0x7fa81d16be18 <col:14> 'pair<_T1, _T2> *' this
|   | | | | | `-CXXDependentScopeMemberExpr 0x7fa81d16be90 <col:22, col:26> '<dependent type>' lvalue .first
|   | | | | |   `-DeclRefExpr 0x7fa81d16be68 <col:22> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d160e60 '__p' 'pair<_T1, _T2> &'
|   | | | | `-CallExpr 0x7fa81d16c050 <line:535:9, col:32> '<dependent type>'
|   | | | |   |-UnresolvedLookupExpr 0x7fa81d16bf20 <col:9> '<dependent type>' lvalue (ADL) = 'swap' 0x7fa81d16bd58 0x7fa81d16bd10
|   | | | |   |-MemberExpr 0x7fa81d16bf98 <col:14> '_T2' lvalue ->second 0x7fa81d14c770
|   | | | |   | `-CXXThisExpr 0x7fa81d16bf80 <col:14> 'pair<_T1, _T2> *' this
|   | | | |   `-CXXDependentScopeMemberExpr 0x7fa81d16bff8 <col:22, col:26> '<dependent type>' lvalue .second
|   | | | |     `-DeclRefExpr 0x7fa81d16bfd0 <col:22> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d160e60 '__p' 'pair<_T1, _T2> &'
|   | | | |-AlwaysInlineAttr 0x7fa81d161008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | | `-VisibilityAttr 0x7fa81d161050 <col:51, col:74> Hidden
|   | | |-AccessSpecDecl 0x7fa81d161060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:537:1, col:8> col:1 private
|   | | `-FunctionTemplateDecl 0x7fa81d163468 <line:540:5, line:544:62> line:542:9 pair<_T1, _T2>
|   | |   |-TemplateTypeParmDecl 0x7fa81d161088 <line:540:15, col:24> col:24 referenced class depth 1 index 0 ... _Args1
|   | |   |-TemplateTypeParmDecl 0x7fa81d1610f8 <col:32, col:41> col:41 referenced class depth 1 index 1 ... _Args2
|   | |   |-NonTypeTemplateParmDecl 0x7fa81d161178 <col:49, col:59> col:59 referenced 'size_t':'unsigned long' depth 1 index 2 ... _I1
|   | |   |-NonTypeTemplateParmDecl 0x7fa81d1611e0 <col:64, col:74> col:74 referenced 'size_t':'unsigned long' depth 1 index 3 ... _I2
|   | |   `-CXXConstructorDecl 0x7fa81d1633c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:544:62> line:542:9 pair<_T1, _T2> 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...> &, tuple<_Args2...> &, __tuple_indices<_I1...>, __tuple_indices<_I2...>)'
|   | |     |-ParmVarDecl 0x7fa81d1612a8 <col:14> col:35 'struct std::__1::piecewise_construct_t'
|   | |     |-ParmVarDecl 0x7fa81d1614a0 <line:543:14, col:32> col:32 __first_args 'tuple<_Args1...> &'
|   | |     |-ParmVarDecl 0x7fa81d161690 <col:46, col:64> col:64 __second_args 'tuple<_Args2...> &'
|   | |     |-ParmVarDecl 0x7fa81d161868 <line:544:14, col:36> col:37 '__tuple_indices<_I1...>'
|   | |     |-ParmVarDecl 0x7fa81d163260 <col:39, col:61> col:62 '__tuple_indices<_I2...>'
|   | |     |-AlwaysInlineAttr 0x7fa81d1634e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |     `-VisibilityAttr 0x7fa81d163528 <col:51, col:74> Hidden
|   | `-ClassTemplateSpecialization 0x7fa81c811488 'pair'
|   |-FunctionTemplateDecl 0x7fa81d16c6c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:548:1, line:554:1> line:551:1 operator==
|   | |-TemplateTypeParmDecl 0x7fa81d16c0b8 <line:548:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d16c128 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d16c630 <line:549:1, line:554:1> line:551:1 constexpr operator== '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl 0x7fa81d16c368 <col:12, col:33> col:33 referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl 0x7fa81d16c518 <col:38, col:59> col:59 referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d16cb00 <line:552:1, line:554:1>
|   |   | `-ReturnStmt 0x7fa81d16cae8 <line:553:5, col:56>
|   |   |   `-BinaryOperator 0x7fa81d16cac0 <col:12, col:56> '<dependent type>' '&&'
|   |   |     |-CXXOperatorCallExpr 0x7fa81d16c8d8 <col:12, col:29> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr 0x7fa81d16c880 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x7fa81d16c6c8
|   |   |     | |-CXXDependentScopeMemberExpr 0x7fa81d16c7a8 <col:12, col:16> '<dependent type>' lvalue .first
|   |   |     | | `-DeclRefExpr 0x7fa81d16c780 <col:12> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16c368 '__x' 'const pair<_T1, _T2> &'
|   |   |     | `-CXXDependentScopeMemberExpr 0x7fa81d16c828 <col:25, col:29> '<dependent type>' lvalue .first
|   |   |     |   `-DeclRefExpr 0x7fa81d16c800 <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16c518 '__y' 'const pair<_T1, _T2> &'
|   |   |     `-CXXOperatorCallExpr 0x7fa81d16ca78 <col:38, col:56> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x7fa81d16ca20 <col:49> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x7fa81d16c6c8
|   |   |       |-CXXDependentScopeMemberExpr 0x7fa81d16c948 <col:38, col:42> '<dependent type>' lvalue .second
|   |   |       | `-DeclRefExpr 0x7fa81d16c920 <col:38> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16c368 '__x' 'const pair<_T1, _T2> &'
|   |   |       `-CXXDependentScopeMemberExpr 0x7fa81d16c9c8 <col:52, col:56> '<dependent type>' lvalue .second
|   |   |         `-DeclRefExpr 0x7fa81d16c9a0 <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16c518 '__y' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d16c728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d16c770 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d16d8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:556:1, line:562:1> line:559:1 operator!=
|   | |-TemplateTypeParmDecl 0x7fa81d16cb20 <line:556:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d16cb88 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d16d830 <line:557:1, line:562:1> line:559:1 constexpr operator!= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl 0x7fa81d16cd98 <col:12, col:33> col:33 referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl 0x7fa81d16cf48 <col:38, col:59> col:59 referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d16dac8 <line:560:1, line:562:1>
|   |   | `-ReturnStmt 0x7fa81d16dab0 <line:561:5, col:24>
|   |   |   `-UnaryOperator 0x7fa81d16da90 <col:12, col:24> '<dependent type>' prefix '!'
|   |   |     `-ParenExpr 0x7fa81d16da70 <col:13, col:24> '<dependent type>'
|   |   |       `-CXXOperatorCallExpr 0x7fa81d16da28 <col:14, col:21> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d16d9d0 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x7fa81d16c6c8
|   |   |         |-DeclRefExpr 0x7fa81d16d980 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16cd98 '__x' 'const pair<_T1, _T2> &'
|   |   |         `-DeclRefExpr 0x7fa81d16d9a8 <col:21> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16cf48 '__y' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d16d928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d16d970 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d16e088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:564:1, line:570:1> line:567:1 operator<
|   | |-TemplateTypeParmDecl 0x7fa81d16dae8 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d16db58 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d16dff0 <line:565:1, line:570:1> line:567:1 constexpr operator< '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl 0x7fa81d16dd68 <col:12, col:33> col:33 referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl 0x7fa81d16df18 <col:38, col:59> col:59 referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d16e6e8 <line:568:1, line:570:1>
|   |   | `-ReturnStmt 0x7fa81d16e6d0 <line:569:5, col:89>
|   |   |   `-BinaryOperator 0x7fa81d16e6a8 <col:12, col:89> '<dependent type>' '||'
|   |   |     |-CXXOperatorCallExpr 0x7fa81d16e298 <col:12, col:28> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr 0x7fa81d16e240 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fa81d16e088
|   |   |     | |-CXXDependentScopeMemberExpr 0x7fa81d16e190 <col:12, col:16> '<dependent type>' lvalue .first
|   |   |     | | `-DeclRefExpr 0x7fa81d16e140 <col:12> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16dd68 '__x' 'const pair<_T1, _T2> &'
|   |   |     | `-CXXDependentScopeMemberExpr 0x7fa81d16e1e8 <col:24, col:28> '<dependent type>' lvalue .first
|   |   |     |   `-DeclRefExpr 0x7fa81d16e168 <col:24> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16df18 '__y' 'const pair<_T1, _T2> &'
|   |   |     `-ParenExpr 0x7fa81d16e688 <col:37, col:89> '<dependent type>'
|   |   |       `-BinaryOperator 0x7fa81d16e660 <col:38, col:83> '<dependent type>' '&&'
|   |   |         |-UnaryOperator 0x7fa81d16e4a0 <col:38, col:61> '<dependent type>' prefix '!'
|   |   |         | `-ParenExpr 0x7fa81d16e480 <col:39, col:61> '<dependent type>'
|   |   |         |   `-CXXOperatorCallExpr 0x7fa81d16e438 <col:40, col:56> '<dependent type>'
|   |   |         |     |-UnresolvedLookupExpr 0x7fa81d16e3e0 <col:50> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fa81d16e088
|   |   |         |     |-CXXDependentScopeMemberExpr 0x7fa81d16e330 <col:40, col:44> '<dependent type>' lvalue .first
|   |   |         |     | `-DeclRefExpr 0x7fa81d16e2e0 <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16df18 '__y' 'const pair<_T1, _T2> &'
|   |   |         |     `-CXXDependentScopeMemberExpr 0x7fa81d16e388 <col:52, col:56> '<dependent type>' lvalue .first
|   |   |         |       `-DeclRefExpr 0x7fa81d16e308 <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16dd68 '__x' 'const pair<_T1, _T2> &'
|   |   |         `-CXXOperatorCallExpr 0x7fa81d16e618 <col:66, col:83> '<dependent type>'
|   |   |           |-UnresolvedLookupExpr 0x7fa81d16e5c0 <col:77> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fa81d16e088
|   |   |           |-CXXDependentScopeMemberExpr 0x7fa81d16e510 <col:66, col:70> '<dependent type>' lvalue .second
|   |   |           | `-DeclRefExpr 0x7fa81d16e4c0 <col:66> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16dd68 '__x' 'const pair<_T1, _T2> &'
|   |   |           `-CXXDependentScopeMemberExpr 0x7fa81d16e568 <col:79, col:83> '<dependent type>' lvalue .second
|   |   |             `-DeclRefExpr 0x7fa81d16e4e8 <col:79> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16df18 '__y' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d16e0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d16e130 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d16eca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:572:1, line:578:1> line:575:1 operator>
|   | |-TemplateTypeParmDecl 0x7fa81d16e708 <line:572:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d16e778 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d16ec10 <line:573:1, line:578:1> line:575:1 constexpr operator> '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl 0x7fa81d16e988 <col:12, col:33> col:33 referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl 0x7fa81d16eb38 <col:38, col:59> col:59 referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d16ee68 <line:576:1, line:578:1>
|   |   | `-ReturnStmt 0x7fa81d16ee50 <line:577:5, col:18>
|   |   |   `-CXXOperatorCallExpr 0x7fa81d16ee08 <col:12, col:18> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d16edb0 <col:16> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fa81d16e088
|   |   |     |-DeclRefExpr 0x7fa81d16ed60 <col:12> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16eb38 '__y' 'const pair<_T1, _T2> &'
|   |   |     `-DeclRefExpr 0x7fa81d16ed88 <col:18> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16e988 '__x' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d16ed08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d16ed50 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d16f428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:580:1, line:586:1> line:583:1 operator>=
|   | |-TemplateTypeParmDecl 0x7fa81d16ee88 <line:580:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d16eef8 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d16f390 <line:581:1, line:586:1> line:583:1 constexpr operator>= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl 0x7fa81d16f108 <col:12, col:33> col:33 referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl 0x7fa81d16f2b8 <col:38, col:59> col:59 referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d16f628 <line:584:1, line:586:1>
|   |   | `-ReturnStmt 0x7fa81d16f610 <line:585:5, col:23>
|   |   |   `-UnaryOperator 0x7fa81d16f5f0 <col:12, col:23> '<dependent type>' prefix '!'
|   |   |     `-ParenExpr 0x7fa81d16f5d0 <col:13, col:23> '<dependent type>'
|   |   |       `-CXXOperatorCallExpr 0x7fa81d16f588 <col:14, col:20> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d16f530 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fa81d16e088
|   |   |         |-DeclRefExpr 0x7fa81d16f4e0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16f108 '__x' 'const pair<_T1, _T2> &'
|   |   |         `-DeclRefExpr 0x7fa81d16f508 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16f2b8 '__y' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d16f488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d16f4d0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d16fbe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:588:1, line:594:1> line:591:1 operator<=
|   | |-TemplateTypeParmDecl 0x7fa81d16f648 <line:588:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d16f6b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d16fb50 <line:589:1, line:594:1> line:591:1 constexpr operator<= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |   |-ParmVarDecl 0x7fa81d16f8c8 <col:12, col:33> col:33 referenced __x 'const pair<_T1, _T2> &'
|   |   |-ParmVarDecl 0x7fa81d16fa78 <col:38, col:59> col:59 referenced __y 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d16fde8 <line:592:1, line:594:1>
|   |   | `-ReturnStmt 0x7fa81d16fdd0 <line:593:5, col:23>
|   |   |   `-UnaryOperator 0x7fa81d16fdb0 <col:12, col:23> '<dependent type>' prefix '!'
|   |   |     `-ParenExpr 0x7fa81d16fd90 <col:13, col:23> '<dependent type>'
|   |   |       `-CXXOperatorCallExpr 0x7fa81d16fd48 <col:14, col:20> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x7fa81d16fcf0 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x7fa81d16e088
|   |   |         |-DeclRefExpr 0x7fa81d16fca0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16fa78 '__y' 'const pair<_T1, _T2> &'
|   |   |         `-DeclRefExpr 0x7fa81d16fcc8 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d16f8c8 '__x' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d16fc48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d16fc90 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d170b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:596:1, line:609:1> line:604:1 swap
|   | |-TemplateTypeParmDecl 0x7fa81d16fe08 <line:596:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d16fe78 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d170aa0 <line:597:1, line:609:1> line:604:1 swap 'typename enable_if<__is_swappable<_T1>::value && __is_swappable<_T2>::value, void>::type (pair<_T1, _T2> &, pair<_T1, _T2> &) noexcept((__is_nothrow_swappable<_T1>::value && __is_nothrow_swappable<_T2>::value))' inline
|   |   |-ParmVarDecl 0x7fa81d170548 <col:6, col:22> col:22 referenced __x 'pair<_T1, _T2> &'
|   |   |-ParmVarDecl 0x7fa81d1706f8 <col:27, col:43> col:43 referenced __y 'pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d170cc8 <line:607:1, line:609:1>
|   |   | `-CallExpr 0x7fa81d170c98 <line:608:5, col:17> '<dependent type>'
|   |   |   |-CXXDependentScopeMemberExpr 0x7fa81d170c18 <col:5, col:9> '<dependent type>' lvalue .swap
|   |   |   | `-DeclRefExpr 0x7fa81d170bf0 <col:5> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d170548 '__x' 'pair<_T1, _T2> &'
|   |   |   `-DeclRefExpr 0x7fa81d170c70 <col:14> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d1706f8 '__y' 'pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d170b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d170be0 <col:51, col:74> Hidden
|   |-ClassTemplateDecl 0x7fa81d170e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:613:1, line:617:1> line:614:8 __make_pair_return_impl
|   | |-TemplateTypeParmDecl 0x7fa81d170ce8 <line:613:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d170d70 <line:614:1, line:617:1> line:614:8 struct __make_pair_return_impl definition
|   |   |-CXXRecordDecl 0x7fa81d171080 <col:1, col:8> col:8 implicit struct __make_pair_return_impl
|   |   `-TypedefDecl 0x7fa81d171128 <line:616:5, col:17> col:17 type '_Tp'
|   |     `-TemplateTypeParmType 0x7fa81d170d30 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81d170ce8 '_Tp'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d1713b8 <line:619:1, line:623:1> line:620:8 struct __make_pair_return_impl definition
|   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
|   | |-TemplateTypeParmDecl 0x7fa81d1711a0 <line:619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d171620 <line:620:1, col:8> col:8 implicit struct __make_pair_return_impl
|   | `-TypedefDecl 0x7fa81d1716f8 <line:622:5, col:18> col:18 type '_Tp &'
|   |   `-LValueReferenceType 0x7fa81d1716c0 '_Tp &' dependent
|   |     `-TemplateTypeParmType 0x7fa81d1711e0 '_Tp' dependent depth 0 index 0
|   |       `-TemplateTypeParm 0x7fa81d1711a0 '_Tp'
|   |-ClassTemplateDecl 0x7fa81d171898 <line:625:1, line:629:1> line:626:8 __make_pair_return
|   | |-TemplateTypeParmDecl 0x7fa81d171770 <line:625:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x7fa81d171800 <line:626:1, line:629:1> line:626:8 struct __make_pair_return definition
|   |   |-CXXRecordDecl 0x7fa81d171b10 <col:1, col:8> col:8 implicit struct __make_pair_return
|   |   `-TypedefDecl 0x7fa81d171e70 <line:628:5, col:79> col:79 type 'typename __make_pair_return_impl<typename decay<_Tp>::type>::type'
|   |     `-DependentNameType 0x7fa81d171e00 'typename __make_pair_return_impl<typename decay<_Tp>::type>::type' dependent
|   |-FunctionTemplateDecl 0x7fa81d172700 <line:631:1, line:638:1> line:634:1 make_pair
|   | |-TemplateTypeParmDecl 0x7fa81d171ee8 <line:631:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d171f58 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d172668 <line:632:1, line:638:1> line:634:1 constexpr make_pair 'pair<typename __make_pair_return<_T1>::type, typename __make_pair_return<_T2>::type> (_T1 &&, _T2 &&)' inline
|   |   |-ParmVarDecl 0x7fa81d172478 <col:11, col:17> col:17 referenced __t1 '_T1 &&'
|   |   |-ParmVarDecl 0x7fa81d172518 <col:23, col:29> col:29 referenced __t2 '_T2 &&'
|   |   |-CompoundStmt 0x7fa81d172de0 <line:635:1, line:638:1>
|   |   | `-ReturnStmt 0x7fa81d172dc8 <line:636:5, line:637:69>
|   |   |   `-CXXUnresolvedConstructExpr 0x7fa81d172d90 <line:636:12, line:637:69> 'pair<typename __make_pair_return<_T1>::type, typename __make_pair_return<_T2>::type>'
|   |   |     |-CallExpr 0x7fa81d172c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:637:41> '<dependent type>'
|   |   |     | |-UnresolvedLookupExpr 0x7fa81d172b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:637:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |     | `-DeclRefExpr 0x7fa81d172be8 <col:37> '_T1' lvalue ParmVar 0x7fa81d172478 '__t1' '_T1 &&'
|   |   |     `-CallExpr 0x7fa81d172d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:637:68> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x7fa81d172c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:637:62> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   |       `-DeclRefExpr 0x7fa81d172d38 <col:64> '_T2' lvalue ParmVar 0x7fa81d172518 '__t2' '_T2 &&'
|   |   |-AlwaysInlineAttr 0x7fa81d172760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d1727a8 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d173118 parent 0x7fa81d011ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:652:1, line:654:44> line:653:30 class tuple_size definition
|   | |-public 'integral_constant<size_t, 2>':'struct std::__1::integral_constant<unsigned long, 2>'
|   | |-TemplateArgument type 'pair<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateTypeParmDecl 0x7fa81d172e00 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d172e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | |-TypeVisibilityAttr 0x7fa81d1732b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d174c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:653:3, col:30> col:30 implicit class tuple_size
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d1750a0 parent 0x7fa81d011ba0 <line:656:1, line:660:1> line:657:28 class tuple_element definition
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0x7fa81d174e90 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d174d08 '_Ip' 'size_t':'unsigned long'
|   | |-TemplateArgument type 'pair<type-parameter-0-1, type-parameter-0-2>'
|   | |-NonTypeTemplateParmDecl 0x7fa81d174d08 <line:656:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d174d60 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d174dc8 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | |-TypeVisibilityAttr 0x7fa81d175250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d1753d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:657:1, col:28> col:28 implicit class tuple_element
|   | `-StaticAssertDecl 0x7fa81d1755d0 <line:659:5, col:90> col:5
|   |   |-BinaryOperator 0x7fa81d1754c8 <col:19, col:25> '_Bool' '<'
|   |   | |-DeclRefExpr 0x7fa81d175468 <col:19> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d174d08 '_Ip' 'size_t':'unsigned long'
|   |   | `-ImplicitCastExpr 0x7fa81d1754b0 <col:25> 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x7fa81d175490 <col:25> 'int' 2
|   |   `-StringLiteral 0x7fa81d175568 <col:28> 'const char [61]' lvalue "Index out of bounds in std::tuple_element<std::pair<T1, T2>>"
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d1759e0 parent 0x7fa81d011ba0 <line:662:1, line:667:1> line:663:28 class tuple_element definition
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'pair<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateTypeParmDecl 0x7fa81d175628 <line:662:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d175698 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | |-TypeVisibilityAttr 0x7fa81d175bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d175d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:663:1, col:28> col:28 implicit class tuple_element
|   | |-AccessSpecDecl 0x7fa81d175dc8 <line:665:1, col:7> col:1 public
|   | `-TypedefDecl 0x7fa81d175e00 <line:666:5, col:17> col:17 type '_T1'
|   |   `-TemplateTypeParmType 0x7fa81d175670 '_T1' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x7fa81d175628 '_T1'
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d176230 parent 0x7fa81d011ba0 <line:669:1, line:674:1> line:670:28 class tuple_element definition
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'pair<type-parameter-0-0, type-parameter-0-1>'
|   | |-TemplateTypeParmDecl 0x7fa81d175e78 <line:669:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d175ee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | |-TypeVisibilityAttr 0x7fa81d176400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d176580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:670:1, col:28> col:28 implicit class tuple_element
|   | |-AccessSpecDecl 0x7fa81d176618 <line:672:1, col:7> col:1 public
|   | `-TypedefDecl 0x7fa81d176650 <line:673:5, col:17> col:17 type '_T2'
|   |   `-TemplateTypeParmType 0x7fa81d175f30 '_T2' dependent depth 0 index 1
|   |     `-TemplateTypeParm 0x7fa81d175ee8 '_T2'
|   |-ClassTemplateDecl 0x7fa81d176800 <line:676:1, col:30> col:30 __get_pair
|   | |-NonTypeTemplateParmDecl 0x7fa81d1766d8 <col:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-CXXRecordDecl 0x7fa81d176748 <col:23, col:30> col:30 struct __get_pair
|   | |-ClassTemplateSpecialization 0x7fa81d176a80 '__get_pair'
|   | `-ClassTemplateSpecialization 0x7fa81d178800 '__get_pair'
|   |-ClassTemplateSpecializationDecl 0x7fa81d176a80 <line:678:1, line:706:1> line:679:8 struct __get_pair definition
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x7fa81d176cb0 <col:1, col:8> col:8 implicit struct __get_pair
|   | |-FunctionTemplateDecl 0x7fa81d1771d0 <line:681:5, line:685:58> col:5 get
|   | | |-TemplateTypeParmDecl 0x7fa81d176d48 <line:681:15, col:21> col:21 referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl 0x7fa81d176db8 <col:26, col:32> col:32 referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl 0x7fa81d177138 <line:682:5, line:685:58> col:5 constexpr get '_T1 &(pair<_T1, _T2> &) noexcept' static
|   | |   |-ParmVarDecl 0x7fa81d176fc8 <col:9, col:25> col:25 referenced __p 'pair<_T1, _T2> &'
|   | |   |-CompoundStmt 0x7fa81d178298 <col:40, col:58>
|   | |   | `-ReturnStmt 0x7fa81d178280 <col:41, col:52>
|   | |   |   `-CXXDependentScopeMemberExpr 0x7fa81d178228 <col:48, col:52> '<dependent type>' lvalue .first
|   | |   |     `-DeclRefExpr 0x7fa81d178200 <col:48> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d176fc8 '__p' 'pair<_T1, _T2> &'
|   | |   |-AlwaysInlineAttr 0x7fa81d177228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d177270 <col:51, col:74> Hidden
|   | |-FunctionTemplateDecl 0x7fa81d1776d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:687:5, line:691:64> col:5 get
|   | | |-TemplateTypeParmDecl 0x7fa81d177280 <line:687:15, col:21> col:21 referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl 0x7fa81d1772e8 <col:26, col:32> col:32 referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl 0x7fa81d177638 <line:688:5, line:691:64> col:5 constexpr get 'const _T1 &(const pair<_T1, _T2> &) noexcept' static
|   | |   |-ParmVarDecl 0x7fa81d1774f8 <col:9, col:31> col:31 referenced __p 'const pair<_T1, _T2> &'
|   | |   |-CompoundStmt 0x7fa81d178350 <col:46, col:64>
|   | |   | `-ReturnStmt 0x7fa81d178338 <col:47, col:58>
|   | |   |   `-CXXDependentScopeMemberExpr 0x7fa81d1782e0 <col:54, col:58> '<dependent type>' lvalue .first
|   | |   |     `-DeclRefExpr 0x7fa81d1782b8 <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d1774f8 '__p' 'const pair<_T1, _T2> &'
|   | |   |-AlwaysInlineAttr 0x7fa81d177728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d177770 <col:51, col:74> Hidden
|   | |-FunctionTemplateDecl 0x7fa81d177c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:694:5, line:698:80> col:5 get
|   | | |-TemplateTypeParmDecl 0x7fa81d177780 <line:694:15, col:21> col:21 referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl 0x7fa81d1777e8 <col:26, col:32> col:32 referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl 0x7fa81d177b68 <line:695:5, line:698:80> col:5 constexpr get '_T1 &&(pair<_T1, _T2> &&) noexcept' static
|   | |   |-ParmVarDecl 0x7fa81d177a28 <col:9, col:26> col:26 referenced __p 'pair<_T1, _T2> &&'
|   | |   |-CompoundStmt 0x7fa81d178530 <col:41, col:80>
|   | |   | `-ReturnStmt 0x7fa81d178518 <col:42, col:78>
|   | |   |   `-CallExpr 0x7fa81d1784e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:698:78> '<dependent type>'
|   | |   |     |-UnresolvedLookupExpr 0x7fa81d1783c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:698:67> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | |   |     `-CXXDependentScopeMemberExpr 0x7fa81d178490 <col:69, col:73> '<dependent type>' lvalue .first
|   | |   |       `-DeclRefExpr 0x7fa81d178468 <col:69> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d177a28 '__p' 'pair<_T1, _T2> &&'
|   | |   |-AlwaysInlineAttr 0x7fa81d177c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d177ca0 <col:51, col:74> Hidden
|   | `-FunctionTemplateDecl 0x7fa81d178130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:700:5, line:704:92> col:5 get
|   |   |-TemplateTypeParmDecl 0x7fa81d177cb0 <line:700:15, col:21> col:21 referenced class depth 0 index 0 _T1
|   |   |-TemplateTypeParmDecl 0x7fa81d177d18 <col:26, col:32> col:32 referenced class depth 0 index 1 _T2
|   |   `-CXXMethodDecl 0x7fa81d178098 <line:701:5, line:704:92> col:5 constexpr get 'const _T1 &&(const pair<_T1, _T2> &&) noexcept' static
|   |     |-ParmVarDecl 0x7fa81d177f58 <col:9, col:32> col:32 referenced __p 'const pair<_T1, _T2> &&'
|   |     |-CompoundStmt 0x7fa81d178710 <col:47, col:92>
|   |     | `-ReturnStmt 0x7fa81d1786f8 <col:48, col:90>
|   |     |   `-CallExpr 0x7fa81d1786c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:704:90> '<dependent type>'
|   |     |     |-UnresolvedLookupExpr 0x7fa81d1785a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:704:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |     |     `-CXXDependentScopeMemberExpr 0x7fa81d178670 <col:81, col:85> '<dependent type>' lvalue .first
|   |     |       `-DeclRefExpr 0x7fa81d178648 <col:81> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d177f58 '__p' 'const pair<_T1, _T2> &&'
|   |     |-AlwaysInlineAttr 0x7fa81d178188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr 0x7fa81d1781d0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d178800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:708:1, line:736:1> line:709:8 struct __get_pair definition
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x7fa81d178a30 <col:1, col:8> col:8 implicit struct __get_pair
|   | |-FunctionTemplateDecl 0x7fa81d178f50 <line:711:5, line:715:59> col:5 get
|   | | |-TemplateTypeParmDecl 0x7fa81d178ac8 <line:711:15, col:21> col:21 referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl 0x7fa81d178b38 <col:26, col:32> col:32 referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl 0x7fa81d178eb8 <line:712:5, line:715:59> col:5 constexpr get '_T2 &(pair<_T1, _T2> &) noexcept' static
|   | |   |-ParmVarDecl 0x7fa81d178d48 <col:9, col:25> col:25 referenced __p 'pair<_T1, _T2> &'
|   | |   |-CompoundStmt 0x7fa81d179fb8 <col:40, col:59>
|   | |   | `-ReturnStmt 0x7fa81d179fa0 <col:41, col:52>
|   | |   |   `-CXXDependentScopeMemberExpr 0x7fa81d179f48 <col:48, col:52> '<dependent type>' lvalue .second
|   | |   |     `-DeclRefExpr 0x7fa81d179f20 <col:48> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d178d48 '__p' 'pair<_T1, _T2> &'
|   | |   |-AlwaysInlineAttr 0x7fa81d178fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d178ff0 <col:51, col:74> Hidden
|   | |-FunctionTemplateDecl 0x7fa81d179450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:717:5, line:721:65> col:5 get
|   | | |-TemplateTypeParmDecl 0x7fa81d179000 <line:717:15, col:21> col:21 referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl 0x7fa81d179068 <col:26, col:32> col:32 referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl 0x7fa81d1793b8 <line:718:5, line:721:65> col:5 constexpr get 'const _T2 &(const pair<_T1, _T2> &) noexcept' static
|   | |   |-ParmVarDecl 0x7fa81d179278 <col:9, col:31> col:31 referenced __p 'const pair<_T1, _T2> &'
|   | |   |-CompoundStmt 0x7fa81d17a070 <col:46, col:65>
|   | |   | `-ReturnStmt 0x7fa81d17a058 <col:47, col:58>
|   | |   |   `-CXXDependentScopeMemberExpr 0x7fa81d17a000 <col:54, col:58> '<dependent type>' lvalue .second
|   | |   |     `-DeclRefExpr 0x7fa81d179fd8 <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d179278 '__p' 'const pair<_T1, _T2> &'
|   | |   |-AlwaysInlineAttr 0x7fa81d1794a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d1794f0 <col:51, col:74> Hidden
|   | |-FunctionTemplateDecl 0x7fa81d179950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:724:5, line:728:81> col:5 get
|   | | |-TemplateTypeParmDecl 0x7fa81d179500 <line:724:15, col:21> col:21 referenced class depth 0 index 0 _T1
|   | | |-TemplateTypeParmDecl 0x7fa81d179568 <col:26, col:32> col:32 referenced class depth 0 index 1 _T2
|   | | `-CXXMethodDecl 0x7fa81d1798b8 <line:725:5, line:728:81> col:5 constexpr get '_T2 &&(pair<_T1, _T2> &&) noexcept' static
|   | |   |-ParmVarDecl 0x7fa81d179778 <col:9, col:26> col:26 referenced __p 'pair<_T1, _T2> &&'
|   | |   |-CompoundStmt 0x7fa81d17a250 <col:41, col:81>
|   | |   | `-ReturnStmt 0x7fa81d17a238 <col:42, col:79>
|   | |   |   `-CallExpr 0x7fa81d17a208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:728:79> '<dependent type>'
|   | |   |     |-UnresolvedLookupExpr 0x7fa81d17a0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:728:67> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   | |   |     `-CXXDependentScopeMemberExpr 0x7fa81d17a1b0 <col:69, col:73> '<dependent type>' lvalue .second
|   | |   |       `-DeclRefExpr 0x7fa81d17a188 <col:69> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d179778 '__p' 'pair<_T1, _T2> &&'
|   | |   |-AlwaysInlineAttr 0x7fa81d1799a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |   `-VisibilityAttr 0x7fa81d1799f0 <col:51, col:74> Hidden
|   | `-FunctionTemplateDecl 0x7fa81d179e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:730:5, line:734:93> col:5 get
|   |   |-TemplateTypeParmDecl 0x7fa81d179a00 <line:730:15, col:21> col:21 referenced class depth 0 index 0 _T1
|   |   |-TemplateTypeParmDecl 0x7fa81d179a68 <col:26, col:32> col:32 referenced class depth 0 index 1 _T2
|   |   `-CXXMethodDecl 0x7fa81d179db8 <line:731:5, line:734:93> col:5 constexpr get 'const _T2 &&(const pair<_T1, _T2> &&) noexcept' static
|   |     |-ParmVarDecl 0x7fa81d179c78 <col:9, col:32> col:32 referenced __p 'const pair<_T1, _T2> &&'
|   |     |-CompoundStmt 0x7fa81d17a430 <col:47, col:93>
|   |     | `-ReturnStmt 0x7fa81d17a418 <col:48, col:91>
|   |     |   `-CallExpr 0x7fa81d17a3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:734:91> '<dependent type>'
|   |     |     |-UnresolvedLookupExpr 0x7fa81d17a2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:734:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |     |     `-CXXDependentScopeMemberExpr 0x7fa81d17a390 <col:81, col:85> '<dependent type>' lvalue .second
|   |     |       `-DeclRefExpr 0x7fa81d17a368 <col:81> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d179c78 '__p' 'const pair<_T1, _T2> &&'
|   |     |-AlwaysInlineAttr 0x7fa81d179ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr 0x7fa81d179ef0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17ab48 prev 0x7fa81d071c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:738:1, line:744:1> line:741:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d17a460 <line:738:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d17a4b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17a528 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | `-FunctionDecl 0x7fa81d17aab0 prev 0x7fa81d071b30 <line:739:1, line:744:1> line:741:1 constexpr get 'typename tuple_element<_Ip, pair<_T1, _T2> >::type &(pair<_T1, _T2> &) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17a998 <col:5, col:21> col:21 referenced __p 'pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d17ad88 <line:742:1, line:744:1>
|   |   | `-ReturnStmt 0x7fa81d17ad70 <line:743:5, col:36>
|   |   |   `-CallExpr 0x7fa81d17ad40 <col:12, col:36> '<dependent type>'
|   |   |     |-DependentScopeDeclRefExpr 0x7fa81d17acd8 <col:12, col:29> '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 0x7fa81d17ad18 <col:33> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d17a998 '__p' 'pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d17aba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17abe8 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17b498 prev 0x7fa81d072448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:746:1, line:752:1> line:749:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d17adb8 <line:746:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d17ae10 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17ae78 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | `-FunctionDecl 0x7fa81d17b400 prev 0x7fa81d0723b0 <line:747:1, line:752:1> line:749:1 constexpr get 'const typename tuple_element<_Ip, pair<_T1, _T2> >::type &(const pair<_T1, _T2> &) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17b2e8 <col:5, col:27> col:27 referenced __p 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d17b6d8 <line:750:1, line:752:1>
|   |   | `-ReturnStmt 0x7fa81d17b6c0 <line:751:5, col:36>
|   |   |   `-CallExpr 0x7fa81d17b690 <col:12, col:36> '<dependent type>'
|   |   |     |-DependentScopeDeclRefExpr 0x7fa81d17b628 <col:12, col:29> '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 0x7fa81d17b668 <col:33> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d17b2e8 '__p' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d17b4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17b538 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17bde8 prev 0x7fa81d072c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:755:1, line:761:1> line:758:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d17b708 <line:755:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d17b760 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17b7c8 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | `-FunctionDecl 0x7fa81d17bd50 prev 0x7fa81d072bf0 <line:756:1, line:761:1> line:758:1 constexpr get 'typename tuple_element<_Ip, pair<_T1, _T2> >::type &&(pair<_T1, _T2> &&) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17bc38 <col:5, col:22> col:22 referenced __p 'pair<_T1, _T2> &&'
|   |   |-CompoundStmt 0x7fa81d17c0e0 <line:759:1, line:761:1>
|   |   | `-ReturnStmt 0x7fa81d17c0c8 <line:760:5, col:49>
|   |   |   `-CallExpr 0x7fa81d17c098 <col:12, col:49> '<dependent type>'
|   |   |     |-DependentScopeDeclRefExpr 0x7fa81d17bf78 <col:12, col:29> '<dependent type>' lvalue
|   |   |     `-CallExpr 0x7fa81d17c068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:760:48> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x7fa81d17bfe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:760:40> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   |   |       `-DeclRefExpr 0x7fa81d17c040 <col:45> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d17bc38 '__p' 'pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d17be40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17be88 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17c800 prev 0x7fa81d0734c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:763:1, line:769:1> line:766:1 get
|   | |-NonTypeTemplateParmDecl 0x7fa81d17c110 <line:763:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Ip
|   | |-TemplateTypeParmDecl 0x7fa81d17c168 <col:23, col:29> col:29 referenced class depth 0 index 1 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17c1d8 <col:34, col:40> col:40 referenced class depth 0 index 2 _T2
|   | `-FunctionDecl 0x7fa81d17c760 prev 0x7fa81d073430 <line:764:1, line:769:1> line:766:1 constexpr get 'const typename tuple_element<_Ip, pair<_T1, _T2> >::type &&(const pair<_T1, _T2> &&) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17c648 <col:5, col:28> col:28 referenced __p 'const pair<_T1, _T2> &&'
|   |   |-CompoundStmt 0x7fa81d17cb00 <line:767:1, line:769:1>
|   |   | `-ReturnStmt 0x7fa81d17cae8 <line:768:5, col:49>
|   |   |   `-CallExpr 0x7fa81d17cab8 <col:12, col:49> '<dependent type>'
|   |   |     |-DependentScopeDeclRefExpr 0x7fa81d17c998 <col:12, col:29> '<dependent type>' lvalue
|   |   |     `-CallExpr 0x7fa81d17ca88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:768:48> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x7fa81d17ca08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:768:40> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   |   |       `-DeclRefExpr 0x7fa81d17ca60 <col:45> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d17c648 '__p' 'const pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d17c858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17c8a0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17cf30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:773:1, line:778:1> line:775:17 get
|   | |-TemplateTypeParmDecl 0x7fa81d17cb20 <line:773:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17cb88 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d17ce98 <line:774:1, line:778:1> line:775:17 constexpr get '_T1 &(pair<_T1, _T2> &) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17cd98 <col:21, col:37> col:37 referenced __p 'pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d17d1b8 <line:776:1, line:778:1>
|   |   | `-ReturnStmt 0x7fa81d17d1a0 <line:777:5, col:34>
|   |   |   `-CallExpr 0x7fa81d17d170 <col:12, col:34> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d17d0d8 <col:12, col:27> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d1771d0 0x7fa81d1776d0 0x7fa81d177c00 0x7fa81d178130
|   |   |     `-DeclRefExpr 0x7fa81d17d148 <col:31> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d17cd98 '__p' 'pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d17cf88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17cfd0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17d5f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:780:1, line:785:1> line:782:23 get
|   | |-TemplateTypeParmDecl 0x7fa81d17d1d8 <line:780:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17d248 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d17d558 <line:781:1, line:785:1> line:782:23 constexpr get 'const _T1 &(const pair<_T1, _T2> &) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17d458 <col:27, col:49> col:49 referenced __p 'const pair<_T1, _T2> &'
|   |   |-CompoundStmt 0x7fa81d17d878 <line:783:1, line:785:1>
|   |   | `-ReturnStmt 0x7fa81d17d860 <line:784:5, col:34>
|   |   |   `-CallExpr 0x7fa81d17d830 <col:12, col:34> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d17d798 <col:12, col:27> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d1771d0 0x7fa81d1776d0 0x7fa81d177c00 0x7fa81d178130
|   |   |     `-DeclRefExpr 0x7fa81d17d808 <col:31> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d17d458 '__p' 'const pair<_T1, _T2> &'
|   |   |-AlwaysInlineAttr 0x7fa81d17d648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17d690 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17dcb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:787:1, line:792:1> line:789:18 get
|   | |-TemplateTypeParmDecl 0x7fa81d17d898 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17d908 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d17dc18 <line:788:1, line:792:1> line:789:18 constexpr get '_T1 &&(pair<_T1, _T2> &&) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17db18 <col:22, col:39> col:39 referenced __p 'pair<_T1, _T2> &&'
|   |   |-CompoundStmt 0x7fa81d17dff0 <line:790:1, line:792:1>
|   |   | `-ReturnStmt 0x7fa81d17dfd8 <line:791:5, col:47>
|   |   |   `-CallExpr 0x7fa81d17dfa8 <col:12, col:47> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d17de58 <col:12, col:27> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d1771d0 0x7fa81d1776d0 0x7fa81d177c00 0x7fa81d178130
|   |   |     `-CallExpr 0x7fa81d17df78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:791:46> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x7fa81d17def8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:791:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   |   |       `-DeclRefExpr 0x7fa81d17df50 <col:43> 'pair<_T1, _T2>' lvalue ParmVar 0x7fa81d17db18 '__p' 'pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d17dd08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17dd50 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17e420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:794:1, line:799:1> line:796:24 get
|   | |-TemplateTypeParmDecl 0x7fa81d17e010 <line:794:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17e078 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d17e388 <line:795:1, line:799:1> line:796:24 constexpr get 'const _T1 &&(const pair<_T1, _T2> &&) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17e288 <col:28, col:51> col:51 referenced __p 'const pair<_T1, _T2> &&'
|   |   |-CompoundStmt 0x7fa81d17e760 <line:797:1, line:799:1>
|   |   | `-ReturnStmt 0x7fa81d17e748 <line:798:5, col:47>
|   |   |   `-CallExpr 0x7fa81d17e718 <col:12, col:47> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d17e5c8 <col:12, col:27> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d1771d0 0x7fa81d1776d0 0x7fa81d177c00 0x7fa81d178130
|   |   |     `-CallExpr 0x7fa81d17e6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:798:46> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x7fa81d17e668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:798:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   |   |       `-DeclRefExpr 0x7fa81d17e6c0 <col:43> 'const pair<_T1, _T2>' lvalue ParmVar 0x7fa81d17e288 '__p' 'const pair<_T1, _T2> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d17e478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17e4c0 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17ec70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:801:1, line:806:1> line:803:17 get
|   | |-TemplateTypeParmDecl 0x7fa81d17e780 <line:801:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17e800 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d17ebd8 <line:802:1, line:806:1> line:803:17 constexpr get '_T1 &(pair<_T2, _T1> &) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17ea98 <col:21, col:37> col:37 referenced __p 'pair<_T2, _T1> &'
|   |   |-CompoundStmt 0x7fa81d17eef8 <line:804:1, line:806:1>
|   |   | `-ReturnStmt 0x7fa81d17eee0 <line:805:5, col:34>
|   |   |   `-CallExpr 0x7fa81d17eeb0 <col:12, col:34> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d17ee18 <col:12, col:27> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d178f50 0x7fa81d179450 0x7fa81d179950 0x7fa81d179e50
|   |   |     `-DeclRefExpr 0x7fa81d17ee88 <col:31> 'pair<_T2, _T1>' lvalue ParmVar 0x7fa81d17ea98 '__p' 'pair<_T2, _T1> &'
|   |   |-AlwaysInlineAttr 0x7fa81d17ecc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17ed10 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17f3a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:808:1, line:813:1> line:810:23 get
|   | |-TemplateTypeParmDecl 0x7fa81d17ef18 <line:808:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17ef88 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d17f308 <line:809:1, line:813:1> line:810:23 constexpr get 'const _T1 &(const pair<_T2, _T1> &) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17f1c8 <col:27, col:49> col:49 referenced __p 'const pair<_T2, _T1> &'
|   |   |-CompoundStmt 0x7fa81d17f628 <line:811:1, line:813:1>
|   |   | `-ReturnStmt 0x7fa81d17f610 <line:812:5, col:34>
|   |   |   `-CallExpr 0x7fa81d17f5e0 <col:12, col:34> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d17f548 <col:12, col:27> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d178f50 0x7fa81d179450 0x7fa81d179950 0x7fa81d179e50
|   |   |     `-DeclRefExpr 0x7fa81d17f5b8 <col:31> 'const pair<_T2, _T1>' lvalue ParmVar 0x7fa81d17f1c8 '__p' 'const pair<_T2, _T1> &'
|   |   |-AlwaysInlineAttr 0x7fa81d17f3f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17f440 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d17fad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:815:1, line:820:1> line:817:18 get
|   | |-TemplateTypeParmDecl 0x7fa81d17f648 <line:815:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17f6b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d17fa38 <line:816:1, line:820:1> line:817:18 constexpr get '_T1 &&(pair<_T2, _T1> &&) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d17f8f8 <col:22, col:39> col:39 referenced __p 'pair<_T2, _T1> &&'
|   |   |-CompoundStmt 0x7fa81d17fe10 <line:818:1, line:820:1>
|   |   | `-ReturnStmt 0x7fa81d17fdf8 <line:819:5, col:47>
|   |   |   `-CallExpr 0x7fa81d17fdc8 <col:12, col:47> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d17fc78 <col:12, col:27> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d178f50 0x7fa81d179450 0x7fa81d179950 0x7fa81d179e50
|   |   |     `-CallExpr 0x7fa81d17fd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:819:46> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x7fa81d17fd18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:819:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   |   |       `-DeclRefExpr 0x7fa81d17fd70 <col:43> 'pair<_T2, _T1>' lvalue ParmVar 0x7fa81d17f8f8 '__p' 'pair<_T2, _T1> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d17fb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d17fb70 <col:51, col:74> Hidden
|   |-FunctionTemplateDecl 0x7fa81d1802b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:822:1, line:827:1> line:824:24 get
|   | |-TemplateTypeParmDecl 0x7fa81d17fe30 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d17fe98 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
|   | `-FunctionDecl 0x7fa81d180218 <line:823:1, line:827:1> line:824:24 constexpr get 'const _T1 &&(const pair<_T2, _T1> &&) noexcept' inline
|   |   |-ParmVarDecl 0x7fa81d1800d8 <col:28, col:51> col:51 referenced __p 'const pair<_T2, _T1> &&'
|   |   |-CompoundStmt 0x7fa81d1805f0 <line:825:1, line:827:1>
|   |   | `-ReturnStmt 0x7fa81d1805d8 <line:826:5, col:47>
|   |   |   `-CallExpr 0x7fa81d1805a8 <col:12, col:47> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa81d180458 <col:12, col:27> '<overloaded function type>' lvalue (no ADL) = 'get' 0x7fa81d178f50 0x7fa81d179450 0x7fa81d179950 0x7fa81d179e50
|   |   |     `-CallExpr 0x7fa81d180578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:826:46> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x7fa81d1804f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:826:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   |   |       `-DeclRefExpr 0x7fa81d180550 <col:43> 'const pair<_T2, _T1>' lvalue ParmVar 0x7fa81d1800d8 '__p' 'const pair<_T2, _T1> &&'
|   |   |-AlwaysInlineAttr 0x7fa81d180308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d180350 <col:51, col:74> Hidden
|   |-ClassTemplateDecl 0x7fa81d180800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:833:1, line:844:1> line:834:29 integer_sequence
|   | |-TemplateTypeParmDecl 0x7fa81d180610 <line:833:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d180688 <col:21, col:28> col:28 referenced '_Tp' depth 0 index 1 ... _Ip
|   | `-CXXRecordDecl 0x7fa81d180730 <line:834:1, line:844:1> line:834:29 struct integer_sequence definition
|   |   |-TypeVisibilityAttr 0x7fa81d180b10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81d180b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:834:1, col:29> col:29 implicit struct integer_sequence
|   |   |-TypedefDecl 0x7fa81d180c00 <line:836:5, col:17> col:17 value_type '_Tp'
|   |   | `-TemplateTypeParmType 0x7fa81d180650 '_Tp' dependent depth 0 index 0
|   |   |   `-TemplateTypeParm 0x7fa81d180610 '_Tp'
|   |   |-StaticAssertDecl 0x7fa81d180e58 <line:837:5, line:838:90> line:837:5
|   |   | |-DependentScopeDeclRefExpr 0x7fa81d180d28 <col:20, col:38> '<dependent type>' lvalue
|   |   | `-StringLiteral 0x7fa81d180de8 <line:838:19> 'const char [69]' lvalue "std::integer_sequence can only be instantiated with an integral type"
|   |   `-CXXMethodDecl 0x7fa81d180f78 <line:839:5, line:843:46> col:5 constexpr size 'size_t (void) noexcept' static
|   |     |-CompoundStmt 0x7fa81d1810c8 <col:21, col:46>
|   |     | `-ReturnStmt 0x7fa81d1810b0 <col:23, col:43>
|   |     |   `-SizeOfPackExpr 0x7fa81d181088 <col:30, col:43> 'unsigned long' 0x7fa81d180688 _Ip
|   |     |-AlwaysInlineAttr 0x7fa81d181010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr 0x7fa81d181058 <col:51, col:74> Hidden
|   |-TypeAliasTemplateDecl 0x7fa81d1813f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:846:1, line:847:59> col:5 index_sequence
|   | |-NonTypeTemplateParmDecl 0x7fa81d1810f8 <line:846:10, col:20> col:20 referenced 'size_t':'unsigned long' depth 0 index 0 ... _Ip
|   | `-TypeAliasDecl 0x7fa81d181390 <line:847:5, col:59> col:11 index_sequence 'integer_sequence<size_t, _Ip...>'
|   |   `-TemplateSpecializationType 0x7fa81d1812a0 'integer_sequence<size_t, _Ip...>' dependent integer_sequence
|   |     |-TemplateArgument type 'size_t':'unsigned long'
|   |     `-TemplateArgument expr
|   |       `-PackExpansionExpr 0x7fa81d1811a0 <col:53, col:56> '<dependent type>'
|   |         `-DeclRefExpr 0x7fa81d181178 <col:53> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d1810f8 '_Ip' 'size_t':'unsigned long'
|   |-TypeAliasTemplateDecl 0x7fa81d181918 <line:851:1, line:852:78> col:1 __make_integer_sequence
|   | |-TemplateTypeParmDecl 0x7fa81d181440 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d1814b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 _Ep
|   | `-TypeAliasDecl 0x7fa81d1818b8 <line:852:1, col:78> col:7 __make_integer_sequence '__make_integer_seq<integer_sequence, _Tp, _Ep>'
|   |   `-TemplateSpecializationType 0x7fa81d181780 '__make_integer_seq<integer_sequence, _Tp, _Ep>' dependent __make_integer_seq
|   |     |-TemplateArgument template integer_sequence
|   |     |-TemplateArgument type '_Tp'
|   |     `-TemplateArgument expr
|   |       `-DeclRefExpr 0x7fa81d181540 <col:75> '_Tp' NonTypeTemplateParm 0x7fa81d1814b8 '_Ep' '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81d181f28 <line:875:1, line:876:67> col:5 make_integer_sequence
|   | |-TemplateTypeParmDecl 0x7fa81d181968 <line:875:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d1819e8 <col:21, col:25> col:25 referenced '_Tp' depth 0 index 1 _Np
|   | `-TypeAliasDecl 0x7fa81d181ec8 <line:876:5, col:67> col:11 make_integer_sequence '__make_integer_sequence<_Tp, _Np>':'__make_integer_seq<integer_sequence, type-parameter-0-0, _Ep>'
|   |   `-TemplateSpecializationType 0x7fa81d181dd0 '__make_integer_sequence<_Tp, _Np>' sugar dependent alias __make_integer_sequence
|   |     |-TemplateArgument type '_Tp'
|   |     |-TemplateArgument expr
|   |     | `-DeclRefExpr 0x7fa81d181a70 <col:64> '_Tp' NonTypeTemplateParm 0x7fa81d1819e8 '_Np' '_Tp'
|   |     |-TemplateSpecializationType 0x7fa81d181cf0 '__make_integer_seq<integer_sequence, type-parameter-0-0, _Np>' dependent __make_integer_seq
|   |     | |-TemplateArgument template integer_sequence
|   |     | |-TemplateArgument type 'type-parameter-0-0':'type-parameter-0-0'
|   |     | `-TemplateArgument expr
|   |     |   `-SubstNonTypeTemplateParmExpr 0x7fa81d181b68 <line:852:75> '_Tp'
|   |     |     `-DeclRefExpr 0x7fa81d181a70 <line:876:64> '_Tp' NonTypeTemplateParm 0x7fa81d1819e8 '_Np' '_Tp'
|   |     `-TemplateSpecializationType 0x7fa81d181700 '__make_integer_seq<integer_sequence, type-parameter-0-0, _Ep>' dependent __make_integer_seq
|   |       |-TemplateArgument template integer_sequence
|   |       |-TemplateArgument type 'type-parameter-0-0'
|   |       `-TemplateArgument expr
|   |         `-DeclRefExpr 0x7fa81d181540 <line:852:75> '_Tp' NonTypeTemplateParm 0x7fa81d1814b8 '_Ep' '_Tp'
|   |-TypeAliasTemplateDecl 0x7fa81d1826c8 <line:878:1, line:879:66> col:5 make_index_sequence
|   | |-NonTypeTemplateParmDecl 0x7fa81d181f88 <line:878:10, col:17> col:17 referenced 'size_t':'unsigned long' depth 0 index 0 _Np
|   | `-TypeAliasDecl 0x7fa81d182668 <line:879:5, col:66> col:11 make_index_sequence 'make_integer_sequence<size_t, _Np>':'__make_integer_seq<integer_sequence, unsigned long, _Np>'
|   |   `-TemplateSpecializationType 0x7fa81d182570 'make_integer_sequence<size_t, _Np>' sugar dependent alias make_integer_sequence
|   |     |-TemplateArgument type 'size_t':'unsigned long'
|   |     |-TemplateArgument expr
|   |     | `-DeclRefExpr 0x7fa81d182008 <col:63> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d181f88 '_Np' 'size_t':'unsigned long'
|   |     |-TemplateSpecializationType 0x7fa81d1824c0 '__make_integer_sequence<unsigned long, _Np>' sugar dependent alias __make_integer_sequence
|   |     | |-TemplateArgument type 'unsigned long':'unsigned long'
|   |     | |-TemplateArgument expr
|   |     | | `-SubstNonTypeTemplateParmExpr 0x7fa81d1820e0 <line:876:64> 'size_t':'unsigned long'
|   |     | |   `-DeclRefExpr 0x7fa81d182008 <line:879:63> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d181f88 '_Np' 'size_t':'unsigned long'
|   |     | |-TemplateSpecializationType 0x7fa81d1823e0 '__make_integer_seq<integer_sequence, unsigned long, _Np>' dependent __make_integer_seq
|   |     | | |-TemplateArgument template integer_sequence
|   |     | | |-TemplateArgument type 'unsigned long':'unsigned long'
|   |     | | `-TemplateArgument expr
|   |     | |   `-SubstNonTypeTemplateParmExpr 0x7fa81d1821d8 <line:852:75> 'size_t':'unsigned long'
|   |     | |     `-SubstNonTypeTemplateParmExpr 0x7fa81d1820e0 <line:876:64> 'size_t':'unsigned long'
|   |     | |       `-DeclRefExpr 0x7fa81d182008 <line:879:63> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d181f88 '_Np' 'size_t':'unsigned long'
|   |     | `-TemplateSpecializationType 0x7fa81d182360 '__make_integer_seq<integer_sequence, unsigned long, _Np>' dependent __make_integer_seq
|   |     |   |-TemplateArgument template integer_sequence
|   |     |   |-TemplateArgument type 'unsigned long'
|   |     |   `-TemplateArgument expr
|   |     |     `-SubstNonTypeTemplateParmExpr 0x7fa81d1821d8 <line:852:75> 'size_t':'unsigned long'
|   |     |       `-SubstNonTypeTemplateParmExpr 0x7fa81d1820e0 <line:876:64> 'size_t':'unsigned long'
|   |     |         `-DeclRefExpr 0x7fa81d182008 <line:879:63> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d181f88 '_Np' 'size_t':'unsigned long'
|   |     `-TemplateSpecializationType 0x7fa81d182360 '__make_integer_seq<integer_sequence, unsigned long, _Np>' dependent __make_integer_seq
|   |       |-TemplateArgument template integer_sequence
|   |       |-TemplateArgument type 'unsigned long'
|   |       `-TemplateArgument expr
|   |         `-SubstNonTypeTemplateParmExpr 0x7fa81d1821d8 <line:852:75> 'size_t':'unsigned long'
|   |           `-SubstNonTypeTemplateParmExpr 0x7fa81d1820e0 <line:876:64> 'size_t':'unsigned long'
|   |             `-DeclRefExpr 0x7fa81d182008 <line:879:63> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa81d181f88 '_Np' 'size_t':'unsigned long'
|   |-TypeAliasTemplateDecl 0x7fa81d182f30 <line:881:1, line:882:66> col:5 index_sequence_for
|   | |-TemplateTypeParmDecl 0x7fa81d182718 <line:881:10, col:19> col:19 referenced class depth 0 index 0 ... _Tp
|   | `-TypeAliasDecl 0x7fa81d182ed0 <line:882:5, col:66> col:11 index_sequence_for 'make_index_sequence<sizeof...(_Tp)>':'__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>'
|   |   `-TemplateSpecializationType 0x7fa81d182e20 'make_index_sequence<sizeof...(_Tp)>' sugar dependent alias make_index_sequence
|   |     |-TemplateArgument expr
|   |     | `-SizeOfPackExpr 0x7fa81d1827a0 <col:52, col:65> 'unsigned long' 0x7fa81d182718 _Tp
|   |     |-TemplateSpecializationType 0x7fa81d182d70 'make_integer_sequence<size_t, sizeof...(_Tp)>' sugar dependent alias make_integer_sequence
|   |     | |-TemplateArgument type 'size_t':'unsigned long'
|   |     | |-TemplateArgument expr
|   |     | | `-SubstNonTypeTemplateParmExpr 0x7fa81d182858 <line:879:63> 'unsigned long'
|   |     | |   `-SizeOfPackExpr 0x7fa81d1827a0 <line:882:52, col:65> 'unsigned long' 0x7fa81d182718 _Tp
|   |     | |-TemplateSpecializationType 0x7fa81d182cc0 '__make_integer_sequence<unsigned long, sizeof...(_Tp)>' sugar dependent alias __make_integer_sequence
|   |     | | |-TemplateArgument type 'unsigned long':'unsigned long'
|   |     | | |-TemplateArgument expr
|   |     | | | `-SubstNonTypeTemplateParmExpr 0x7fa81d182908 <line:876:64> 'unsigned long'
|   |     | | |   `-SubstNonTypeTemplateParmExpr 0x7fa81d182858 <line:879:63> 'unsigned long'
|   |     | | |     `-SizeOfPackExpr 0x7fa81d1827a0 <line:882:52, col:65> 'unsigned long' 0x7fa81d182718 _Tp
|   |     | | |-TemplateSpecializationType 0x7fa81d182be0 '__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>' dependent __make_integer_seq
|   |     | | | |-TemplateArgument template integer_sequence
|   |     | | | |-TemplateArgument type 'unsigned long':'unsigned long'
|   |     | | | `-TemplateArgument expr
|   |     | | |   `-SubstNonTypeTemplateParmExpr 0x7fa81d1829d0 <line:852:75> 'unsigned long'
|   |     | | |     `-SubstNonTypeTemplateParmExpr 0x7fa81d182908 <line:876:64> 'unsigned long'
|   |     | | |       `-SubstNonTypeTemplateParmExpr 0x7fa81d182858 <line:879:63> 'unsigned long'
|   |     | | |         `-SizeOfPackExpr 0x7fa81d1827a0 <line:882:52, col:65> 'unsigned long' 0x7fa81d182718 _Tp
|   |     | | `-TemplateSpecializationType 0x7fa81d182b60 '__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>' dependent __make_integer_seq
|   |     | |   |-TemplateArgument template integer_sequence
|   |     | |   |-TemplateArgument type 'unsigned long'
|   |     | |   `-TemplateArgument expr
|   |     | |     `-SubstNonTypeTemplateParmExpr 0x7fa81d1829d0 <line:852:75> 'unsigned long'
|   |     | |       `-SubstNonTypeTemplateParmExpr 0x7fa81d182908 <line:876:64> 'unsigned long'
|   |     | |         `-SubstNonTypeTemplateParmExpr 0x7fa81d182858 <line:879:63> 'unsigned long'
|   |     | |           `-SizeOfPackExpr 0x7fa81d1827a0 <line:882:52, col:65> 'unsigned long' 0x7fa81d182718 _Tp
|   |     | `-TemplateSpecializationType 0x7fa81d182b60 '__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>' dependent __make_integer_seq
|   |     |   |-TemplateArgument template integer_sequence
|   |     |   |-TemplateArgument type 'unsigned long'
|   |     |   `-TemplateArgument expr
|   |     |     `-SubstNonTypeTemplateParmExpr 0x7fa81d1829d0 <line:852:75> 'unsigned long'
|   |     |       `-SubstNonTypeTemplateParmExpr 0x7fa81d182908 <line:876:64> 'unsigned long'
|   |     |         `-SubstNonTypeTemplateParmExpr 0x7fa81d182858 <line:879:63> 'unsigned long'
|   |     |           `-SizeOfPackExpr 0x7fa81d1827a0 <line:882:52, col:65> 'unsigned long' 0x7fa81d182718 _Tp
|   |     `-TemplateSpecializationType 0x7fa81d182b60 '__make_integer_seq<integer_sequence, unsigned long, sizeof...(_Tp)>' dependent __make_integer_seq
|   |       |-TemplateArgument template integer_sequence
|   |       |-TemplateArgument type 'unsigned long'
|   |       `-TemplateArgument expr
|   |         `-SubstNonTypeTemplateParmExpr 0x7fa81d1829d0 <line:852:75> 'unsigned long'
|   |           `-SubstNonTypeTemplateParmExpr 0x7fa81d182908 <line:876:64> 'unsigned long'
|   |             `-SubstNonTypeTemplateParmExpr 0x7fa81d182858 <line:879:63> 'unsigned long'
|   |               `-SizeOfPackExpr 0x7fa81d1827a0 <line:882:52, col:65> 'unsigned long' 0x7fa81d182718 _Tp
|   |-FunctionTemplateDecl 0x7fa81d183348 <line:887:1, line:894:1> line:889:5 exchange
|   | |-TemplateTypeParmDecl 0x7fa81d182f80 <line:887:10, col:16> col:16 referenced class depth 0 index 0 _T1
|   | |-TemplateTypeParmDecl 0x7fa81d182ff8 <col:21, col:33> col:27 referenced class depth 0 index 1 _T2
|   | | `-TemplateArgument type '_T1'
|   | `-FunctionDecl 0x7fa81d1832b0 <line:888:1, line:894:1> line:889:5 exchange '_T1 (_T1 &, _T2 &&)' inline
|   |   |-ParmVarDecl 0x7fa81d1830f8 <col:14, col:19> col:19 referenced __obj '_T1 &'
|   |   |-ParmVarDecl 0x7fa81d183198 <col:26, col:33> col:33 referenced __new_value '_T2 &&'
|   |   |-CompoundStmt 0x7fa81d183748 <line:890:1, line:894:1>
|   |   | |-DeclStmt 0x7fa81d183550 <line:891:5, col:41>
|   |   | | `-VarDecl 0x7fa81d183410 <col:5, col:40> col:9 referenced __old_value '_T1' nrvo cinit
|   |   | |   `-CallExpr 0x7fa81d183520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:891:40> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x7fa81d1834a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:891:30> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa81c10a408
|   |   | |     `-DeclRefExpr 0x7fa81d1834f8 <col:35> '_T1' lvalue ParmVar 0x7fa81d1830f8 '__obj' '_T1 &'
|   |   | |-BinaryOperator 0x7fa81d1836e0 <line:892:5, col:44> '<dependent type>' '='
|   |   | | |-DeclRefExpr 0x7fa81d183568 <col:5> '_T1' lvalue ParmVar 0x7fa81d1830f8 '__obj' '_T1 &'
|   |   | | `-CallExpr 0x7fa81d1836b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:892:44> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x7fa81d1835e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:892:31> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa81c10ab50 0x7fa81c10b070
|   |   | |   `-DeclRefExpr 0x7fa81d183688 <col:33> '_T2' lvalue ParmVar 0x7fa81d183198 '__new_value' '_T2 &&'
|   |   | `-ReturnStmt 0x7fa81d183730 <line:893:5, col:12>
|   |   |   `-DeclRefExpr 0x7fa81d183708 <col:12> '_T1' lvalue Var 0x7fa81d183410 '__old_value' '_T1'
|   |   |-AlwaysInlineAttr 0x7fa81d1833a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d1833f0 <col:51, col:74> Hidden
|   |-ClassTemplateDecl 0x7fa81d183940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:941:1, line:946:1> line:942:29 unary_function
|   | |-TemplateTypeParmDecl 0x7fa81d183778 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _Arg
|   | |-TemplateTypeParmDecl 0x7fa81d1837e8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Result
|   | |-CXXRecordDecl 0x7fa81d1838a8 <line:942:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TypeVisibilityAttr 0x7fa81d183be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | |-CXXRecordDecl 0x7fa81d183c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:942:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d183cd0 <line:944:5, col:21> col:21 argument_type '_Arg'
|   | | | `-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | `-TypedefDecl 0x7fa81d183d38 <line:945:5, col:21> col:21 result_type '_Result'
|   | |   `-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |-ClassTemplateSpecializationDecl 0x7fa81c814898 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'struct std::__1::_PairT'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81c816710 prev 0x7fa81c814898 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81c8167e8 <line:944:5, col:21> col:21 argument_type 'struct std::__1::_PairT':'struct std::__1::_PairT'
|   | | | `-SubstTemplateTypeParmType 0x7fa81c8167b0 'struct std::__1::_PairT' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-RecordType 0x7fa81c813cd0 'struct std::__1::_PairT'
|   | | |     `-CXXRecord 0x7fa81c813c30 '_PairT'
|   | | |-TypedefDecl 0x7fa81c816878 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | | | `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | | |   | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | | |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | | |-CXXConstructorDecl 0x7fa81c816d48 <line:942:29> col:29 implicit constexpr unary_function 'void (void) noexcept' inline default trivial
|   | | |-CXXDestructorDecl 0x7fa81c816e28 <col:29> col:29 implicit ~unary_function 'void (void) noexcept' inline default trivial
|   | | |-CXXConstructorDecl 0x7fa81c816f68 <col:29> col:29 implicit constexpr unary_function 'void (const struct std::__1::unary_function<struct std::__1::_PairT, unsigned long> &)' inline default trivial noexcept-unevaluated 0x7fa81c816f68
|   | | | `-ParmVarDecl 0x7fa81c817090 <col:29> col:29 'const struct std::__1::unary_function<struct std::__1::_PairT, unsigned long> &'
|   | | `-CXXConstructorDecl 0x7fa81c817128 <col:29> col:29 implicit constexpr unary_function 'void (struct std::__1::unary_function<struct std::__1::_PairT, unsigned long> &&)' inline default trivial noexcept-unevaluated 0x7fa81c817128
|   | |   `-ParmVarDecl 0x7fa81c817250 <col:29> col:29 'struct std::__1::unary_function<struct std::__1::_PairT, unsigned long> &&'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d84a5b0 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type '_Bool'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d84a7e0 prev 0x7fa81d84a5b0 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d84a8b8 <line:944:5, col:21> col:21 argument_type '_Bool':'_Bool'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d84a880 '_Bool' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032740 '_Bool'
|   | | `-TypedefDecl 0x7fa81d84a920 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d84b0d0 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'char'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d84b300 prev 0x7fa81d84b0d0 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d84b3d8 <line:944:5, col:21> col:21 argument_type 'char':'char'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d84b3a0 'char' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032760 'char'
|   | | `-TypedefDecl 0x7fa81d84b440 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81e801018 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'signed char'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81e801250 prev 0x7fa81e801018 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81e801328 <line:944:5, col:21> col:21 argument_type 'signed char':'signed char'
|   | | | `-SubstTemplateTypeParmType 0x7fa81e8012f0 'signed char' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032780 'signed char'
|   | | `-TypedefDecl 0x7fa81e801390 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81e801b68 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'unsigned char'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81e801da0 prev 0x7fa81e801b68 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81e801e78 <line:944:5, col:21> col:21 argument_type 'unsigned char':'unsigned char'
|   | | | `-SubstTemplateTypeParmType 0x7fa81e801e40 'unsigned char' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032820 'unsigned char'
|   | | `-TypedefDecl 0x7fa81e801ee0 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81e8026a0 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'char16_t'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81e8028d0 prev 0x7fa81e8026a0 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81e8029a8 <line:944:5, col:21> col:21 argument_type 'char16_t':'char16_t'
|   | | | `-SubstTemplateTypeParmType 0x7fa81e802970 'char16_t' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c0329a0 'char16_t'
|   | | `-TypedefDecl 0x7fa81e802a10 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81e8031c0 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'char32_t'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81e8033f0 prev 0x7fa81e8031c0 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81e8034c8 <line:944:5, col:21> col:21 argument_type 'char32_t':'char32_t'
|   | | | `-SubstTemplateTypeParmType 0x7fa81e803490 'char32_t' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c0329c0 'char32_t'
|   | | `-TypedefDecl 0x7fa81e803530 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81e803ce0 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'wchar_t'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81e803f10 prev 0x7fa81e803ce0 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81e803fe8 <line:944:5, col:21> col:21 argument_type 'wchar_t':'wchar_t'
|   | | | `-SubstTemplateTypeParmType 0x7fa81e803fb0 'wchar_t' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032980 'wchar_t'
|   | | `-TypedefDecl 0x7fa81e804050 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81e804818 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'short'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81e804a50 prev 0x7fa81e804818 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81e804b28 <line:944:5, col:21> col:21 argument_type 'short':'short'
|   | | | `-SubstTemplateTypeParmType 0x7fa81e804af0 'short' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c0327a0 'short'
|   | | `-TypedefDecl 0x7fa81e804b90 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d198b78 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'unsigned short'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d198db0 prev 0x7fa81d198b78 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d198e88 <line:944:5, col:21> col:21 argument_type 'unsigned short':'unsigned short'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d198e50 'unsigned short' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032840 'unsigned short'
|   | | `-TypedefDecl 0x7fa81d198ef0 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1996c8 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'int'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d199900 prev 0x7fa81d1996c8 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d1999d8 <line:944:5, col:21> col:21 argument_type 'int':'int'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d1999a0 'int' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c0327c0 'int'
|   | | `-TypedefDecl 0x7fa81d199a40 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d19a218 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'unsigned int'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d19a450 prev 0x7fa81d19a218 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d19a528 <line:944:5, col:21> col:21 argument_type 'unsigned int':'unsigned int'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d19a4f0 'unsigned int' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032860 'unsigned int'
|   | | `-TypedefDecl 0x7fa81d19a590 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d19ad68 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'long'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d19afa0 prev 0x7fa81d19ad68 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d19b078 <line:944:5, col:21> col:21 argument_type 'long':'long'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d19b040 'long' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c0327e0 'long'
|   | | `-TypedefDecl 0x7fa81d19b0e0 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d19b8b8 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d19baf0 prev 0x7fa81d19b8b8 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d19bbc8 <line:944:5, col:21> col:21 argument_type 'unsigned long':'unsigned long'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d19bb90 'unsigned long' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | | `-TypedefDecl 0x7fa81d19bc30 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a07f8 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'long long'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1a0a30 prev 0x7fa81d1a07f8 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d1a0b08 <line:944:5, col:21> col:21 argument_type 'long long':'long long'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d1a0ad0 'long long' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032800 'long long'
|   | | `-TypedefDecl 0x7fa81d1a0b70 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a16e8 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'unsigned long long'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1a1920 prev 0x7fa81d1a16e8 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d1a19f8 <line:944:5, col:21> col:21 argument_type 'unsigned long long':'unsigned long long'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d1a19c0 'unsigned long long' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c0328a0 'unsigned long long'
|   | | `-TypedefDecl 0x7fa81d1a1a60 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a25b8 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type '__int128'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1a27f0 prev 0x7fa81d1a25b8 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d1a28c8 <line:944:5, col:21> col:21 argument_type '__int128':'__int128'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d1a2890 '__int128' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032940 '__int128'
|   | | `-TypedefDecl 0x7fa81d1a2930 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a3488 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'unsigned __int128'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1a36c0 prev 0x7fa81d1a3488 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d1a3798 <line:944:5, col:21> col:21 argument_type 'unsigned __int128':'unsigned __int128'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d1a3760 'unsigned __int128' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c032960 'unsigned __int128'
|   | | `-TypedefDecl 0x7fa81d1a3800 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a4400 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'float'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1a4630 prev 0x7fa81d1a4400 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d1a4708 <line:944:5, col:21> col:21 argument_type 'float':'float'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d1a46d0 'float' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c0328c0 'float'
|   | | `-TypedefDecl 0x7fa81d1a4770 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a5948 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   | | |-TemplateArgument type 'double'
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-CXXRecordDecl 0x7fa81d1a5b80 prev 0x7fa81d1a5948 <col:1, col:29> col:29 implicit struct unary_function
|   | | |-TypedefDecl 0x7fa81d1a5c58 <line:944:5, col:21> col:21 argument_type 'double':'double'
|   | | | `-SubstTemplateTypeParmType 0x7fa81d1a5c20 'double' sugar
|   | | |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   | | |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   | | |   `-BuiltinType 0x7fa81c0328e0 'double'
|   | | `-TypedefDecl 0x7fa81d1a5cc0 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   | |     `-BuiltinType 0x7fa81c032880 'unsigned long'
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1a6e98 <line:941:1, line:946:1> line:942:29 struct unary_function definition
|   |   |-TemplateArgument type 'long double'
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-CXXRecordDecl 0x7fa81d1a70d0 prev 0x7fa81d1a6e98 <col:1, col:29> col:29 implicit struct unary_function
|   |   |-TypedefDecl 0x7fa81d1a71a8 <line:944:5, col:21> col:21 argument_type 'long double':'long double'
|   |   | `-SubstTemplateTypeParmType 0x7fa81d1a7170 'long double' sugar
|   |   |   |-TemplateTypeParmType 0x7fa81d1837c0 '_Arg' dependent depth 0 index 0
|   |   |   | `-TemplateTypeParm 0x7fa81d183778 '_Arg'
|   |   |   `-BuiltinType 0x7fa81c032900 'long double'
|   |   `-TypedefDecl 0x7fa81d1a7210 <line:945:5, col:21> col:21 result_type 'unsigned long':'unsigned long'
|   |     `-SubstTemplateTypeParmType 0x7fa81c816840 'unsigned long' sugar
|   |       |-TemplateTypeParmType 0x7fa81d183830 '_Result' dependent depth 0 index 1
|   |       | `-TemplateTypeParm 0x7fa81d1837e8 '_Result'
|   |       `-BuiltinType 0x7fa81c032880 'unsigned long'
|   |-FunctionTemplateDecl 0x7fa81d184018 <line:948:1, line:956:1> line:951:1 __loadword
|   | |-TemplateTypeParmDecl 0x7fa81d183db0 <line:948:11, col:17> col:17 referenced class depth 0 index 0 _Size
|   | |-FunctionDecl 0x7fa81d183f80 <line:949:1, line:956:1> line:951:1 __loadword '_Size (const void *)' inline
|   | | |-ParmVarDecl 0x7fa81d183e78 <col:12, col:24> col:24 referenced __p 'const void *'
|   | | |-CompoundStmt 0x7fa81d184308 <line:952:1, line:956:1>
|   | | | |-DeclStmt 0x7fa81d184138 <line:953:5, col:14>
|   | | | | `-VarDecl 0x7fa81d1840d8 <col:5, col:11> col:11 referenced __r '_Size' nrvo
|   | | | |-CallExpr 0x7fa81d184288 <line:954:5, col:39> '<dependent type>'
|   | | | | |-DeclRefExpr 0x7fa81d184170 <col:5, col:10> 'void *(void *, const void *, size_t)' lvalue Function 0x7fa81d0b1338 'memcpy' 'void *(void *, const void *, size_t)' (UsingShadow 0x7fa81d114490 'memcpy')
|   | | | | |-UnaryOperator 0x7fa81d1841d8 <col:17, col:18> '<dependent type>' prefix '&'
|   | | | | | `-DeclRefExpr 0x7fa81d1841b0 <col:18> '_Size' lvalue Var 0x7fa81d1840d8 '__r' '_Size'
|   | | | | |-DeclRefExpr 0x7fa81d1841f8 <col:23> 'const void *' lvalue ParmVar 0x7fa81d183e78 '__p' 'const void *'
|   | | | | `-UnaryExprOrTypeTraitExpr 0x7fa81d184268 <col:28, col:38> 'unsigned long' sizeof
|   | | | |   `-ParenExpr 0x7fa81d184248 <col:34, col:38> '_Size' lvalue
|   | | | |     `-DeclRefExpr 0x7fa81d184220 <col:35> '_Size' lvalue Var 0x7fa81d1840d8 '__r' '_Size'
|   | | | `-ReturnStmt 0x7fa81d1842f0 <line:955:5, col:12>
|   | | |   `-DeclRefExpr 0x7fa81d1842c8 <col:12> '_Size' lvalue Var 0x7fa81d1840d8 '__r' '_Size'
|   | | |-AlwaysInlineAttr 0x7fa81d184070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | `-VisibilityAttr 0x7fa81d1840b8 <col:51, col:74> Hidden
|   | |-FunctionDecl 0x7fa81d192590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:949:1, line:956:1> line:951:1 used __loadword 'unsigned int (const void *)' inline
|   | | |-TemplateArgument type 'unsigned int'
|   | | |-ParmVarDecl 0x7fa81d192488 <col:12, col:24> col:24 used __p 'const void *'
|   | | |-CompoundStmt 0x7fa81d1f9578 <line:952:1, line:956:1>
|   | | | |-DeclStmt 0x7fa81d1f82b8 <line:953:5, col:14>
|   | | | | `-VarDecl 0x7fa81d1f8258 <col:5, col:11> col:11 used __r 'unsigned int':'unsigned int'
|   | | | |-CallExpr 0x7fa81d1f94b0 <line:954:5, col:39> 'void *'
|   | | | | |-ImplicitCastExpr 0x7fa81d1f9498 <col:5, col:10> 'void *(*)(void *, const void *, size_t)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x7fa81d184170 <col:5, col:10> 'void *(void *, const void *, size_t)' lvalue Function 0x7fa81d0b1338 'memcpy' 'void *(void *, const void *, size_t)' (UsingShadow 0x7fa81d114490 'memcpy')
|   | | | | |-ImplicitCastExpr 0x7fa81d1f94f0 <col:17, col:18> 'void *' <BitCast>
|   | | | | | `-UnaryOperator 0x7fa81d1f8358 <col:17, col:18> 'unsigned int *' prefix '&'
|   | | | | |   `-DeclRefExpr 0x7fa81d1f82d0 <col:18> 'unsigned int':'unsigned int' lvalue Var 0x7fa81d1f8258 '__r' 'unsigned int':'unsigned int'
|   | | | | |-ImplicitCastExpr 0x7fa81d1f9508 <col:23> 'const void *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x7fa81d1f8378 <col:23> 'const void *' lvalue ParmVar 0x7fa81d192488 '__p' 'const void *'
|   | | | | `-UnaryExprOrTypeTraitExpr 0x7fa81d1f9400 <col:28, col:38> 'unsigned long' sizeof
|   | | | |   `-ParenExpr 0x7fa81d1f83c8 <col:34, col:38> 'unsigned int':'unsigned int' lvalue
|   | | | |     `-DeclRefExpr 0x7fa81d1f83a0 <col:35> 'unsigned int':'unsigned int' lvalue Var 0x7fa81d1f8258 '__r' 'unsigned int':'unsigned int'
|   | | | `-ReturnStmt 0x7fa81d1f9560 <line:955:5, col:12>
|   | | |   `-ImplicitCastExpr 0x7fa81d1f9548 <col:12> 'unsigned int':'unsigned int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x7fa81d1f9520 <col:12> 'unsigned int':'unsigned int' lvalue Var 0x7fa81d1f8258 '__r' 'unsigned int':'unsigned int'
|   | | `-AlwaysInlineAttr 0x7fa81d192688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-FunctionDecl 0x7fa81d1b39e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:949:1, line:956:1> line:951:1 used __loadword 'unsigned long (const void *)' inline
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-ParmVarDecl 0x7fa81d1b38e0 <col:12, col:24> col:24 used __p 'const void *'
|   |   |-CompoundStmt 0x7fa81d1fe370 <line:952:1, line:956:1>
|   |   | |-DeclStmt 0x7fa81d1fe160 <line:953:5, col:14>
|   |   | | `-VarDecl 0x7fa81d1fe100 <col:5, col:11> col:11 used __r 'unsigned long':'unsigned long'
|   |   | |-CallExpr 0x7fa81d1fe2a8 <line:954:5, col:39> 'void *'
|   |   | | |-ImplicitCastExpr 0x7fa81d1fe290 <col:5, col:10> 'void *(*)(void *, const void *, size_t)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x7fa81d184170 <col:5, col:10> 'void *(void *, const void *, size_t)' lvalue Function 0x7fa81d0b1338 'memcpy' 'void *(void *, const void *, size_t)' (UsingShadow 0x7fa81d114490 'memcpy')
|   |   | | |-ImplicitCastExpr 0x7fa81d1fe2e8 <col:17, col:18> 'void *' <BitCast>
|   |   | | | `-UnaryOperator 0x7fa81d1fe1c8 <col:17, col:18> 'unsigned long *' prefix '&'
|   |   | | |   `-DeclRefExpr 0x7fa81d1fe178 <col:18> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe100 '__r' 'unsigned long':'unsigned long'
|   |   | | |-ImplicitCastExpr 0x7fa81d1fe300 <col:23> 'const void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x7fa81d1fe1e8 <col:23> 'const void *' lvalue ParmVar 0x7fa81d1b38e0 '__p' 'const void *'
|   |   | | `-UnaryExprOrTypeTraitExpr 0x7fa81d1fe258 <col:28, col:38> 'unsigned long' sizeof
|   |   | |   `-ParenExpr 0x7fa81d1fe238 <col:34, col:38> 'unsigned long':'unsigned long' lvalue
|   |   | |     `-DeclRefExpr 0x7fa81d1fe210 <col:35> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe100 '__r' 'unsigned long':'unsigned long'
|   |   | `-ReturnStmt 0x7fa81d1fe358 <line:955:5, col:12>
|   |   |   `-ImplicitCastExpr 0x7fa81d1fe340 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x7fa81d1fe318 <col:12> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe100 '__r' 'unsigned long':'unsigned long'
|   |   `-AlwaysInlineAttr 0x7fa81d1b3ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-ClassTemplateDecl 0x7fa81d184558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:961:1, line:962:8> col:8 __murmur2_or_cityhash
|   | |-TemplateTypeParmDecl 0x7fa81d184338 <line:961:11, col:17> col:17 referenced class depth 0 index 0 _Size
|   | |-NonTypeTemplateParmDecl 0x7fa81d184448 <col:24, <built-in>:66:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:961:31 'size_t':'unsigned long' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81d184410 <col:33, <built-in>:66:22> 'unsigned long' '*'
|   | |     |-UnaryExprOrTypeTraitExpr 0x7fa81d1843b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:961:33, col:45> 'unsigned long' sizeof '_Size'
|   | |     `-ImplicitCastExpr 0x7fa81d1843f8 <<built-in>:66:22> 'unsigned long' <IntegralCast>
|   | |       `-IntegerLiteral 0x7fa81d1843d8 <col:22> 'int' 8
|   | |-CXXRecordDecl 0x7fa81d1844c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:962:1, col:8> col:8 struct __murmur2_or_cityhash
|   | `-ClassTemplateSpecializationDecl 0x7fa81c80fcf8 <line:1005:1, line:1131:1> line:1006:8 struct __murmur2_or_cityhash definition
|   |   |-TemplateArgument type 'unsigned long'
|   |   |-TemplateArgument integral 64
|   |   |-CXXRecordDecl 0x7fa81c810008 prev 0x7fa81c80fcf8 <col:1, col:8> col:8 implicit struct __murmur2_or_cityhash
|   |   |-CXXMethodDecl 0x7fa81c810220 <line:1135:1, line:1178:1> line:1008:18 used operator() 'unsigned long (const void *, unsigned long)' inline
|   |   | |-ParmVarDecl 0x7fa81c8100a0 <col:29, col:41> col:41 used __key 'const void *'
|   |   | |-ParmVarDecl 0x7fa81c810110 <col:48, col:54> col:54 used __len 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt 0x7fa81d1f5d88 <line:1137:1, line:1178:1>
|   |   | | |-DeclStmt 0x7fa81d1b2e78 <line:1138:3, col:52>
|   |   | | | `-VarDecl 0x7fa81d1b2da8 <col:3, col:51> col:15 used __s 'const char *' cinit
|   |   | | |   `-CXXStaticCastExpr 0x7fa81d1b2e48 <col:21, col:51> 'const char *' static_cast<const char *> <BitCast>
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1b2e30 <col:46> 'const void *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1b2e08 <col:46> 'const void *' lvalue ParmVar 0x7fa81c8100a0 '__key' 'const void *'
|   |   | | |-IfStmt 0x7fa81d1b35c8 <line:1139:3, line:1147:3>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-BinaryOperator 0x7fa81d1b2f40 <line:1139:7, col:16> '_Bool' '<='
|   |   | | | | |-ImplicitCastExpr 0x7fa81d1b2f10 <col:7> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x7fa81d1b2ee8 <col:7> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | | | `-ImplicitCastExpr 0x7fa81d1b2f28 <col:16> 'unsigned long' <IntegralCast>
|   |   | | | |   `-IntegerLiteral 0x7fa81d197fd0 <col:16> 'int' 32
|   |   | | | |-CompoundStmt 0x7fa81d1b3338 <col:20, line:1145:3>
|   |   | | | | `-IfStmt 0x7fa81d1b3300 <line:1140:5, line:1144:5>
|   |   | | | |   |-<<<NULL>>>
|   |   | | | |   |-<<<NULL>>>
|   |   | | | |   |-BinaryOperator 0x7fa81d1b3018 <line:1140:9, col:18> '_Bool' '<='
|   |   | | | |   | |-ImplicitCastExpr 0x7fa81d1b2fe8 <col:9> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |   | | `-DeclRefExpr 0x7fa81d1b2fc0 <col:9> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | | |   | `-ImplicitCastExpr 0x7fa81d1b3000 <col:18> 'unsigned long' <IntegralCast>
|   |   | | | |   |   `-IntegerLiteral 0x7fa81d1980b8 <col:18> 'int' 16
|   |   | | | |   |-CompoundStmt 0x7fa81d1b31b0 <col:22, line:1142:5>
|   |   | | | |   | `-ReturnStmt 0x7fa81d1b3198 <line:1141:7, col:43>
|   |   | | | |   |   `-CallExpr 0x7fa81d1b3130 <col:14, col:43> 'unsigned long':'unsigned long'
|   |   | | | |   |     |-ImplicitCastExpr 0x7fa81d1b3118 <col:14> 'unsigned long (*)(const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | | | |   |     | `-DeclRefExpr 0x7fa81d1b3040 <col:14> 'unsigned long (const char *, unsigned long)' lvalue CXXMethod 0x7fa81c8110f0 '__hash_len_0_to_16' 'unsigned long (const char *, unsigned long)'
|   |   | | | |   |     |-ImplicitCastExpr 0x7fa81d1b3168 <col:33> 'const char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x7fa81d1b3068 <col:33> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | |   |     `-ImplicitCastExpr 0x7fa81d1b3180 <col:38> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |   |       `-DeclRefExpr 0x7fa81d1b3090 <col:38> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | | |   `-CompoundStmt 0x7fa81d1b32e0 <line:1142:12, line:1144:5>
|   |   | | | |     `-ReturnStmt 0x7fa81d1b32c8 <line:1143:7, col:44>
|   |   | | | |       `-CallExpr 0x7fa81d1b3260 <col:14, col:44> 'unsigned long':'unsigned long'
|   |   | | | |         |-ImplicitCastExpr 0x7fa81d1b3248 <col:14> 'unsigned long (*)(const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | | | |         | `-DeclRefExpr 0x7fa81d1b31d0 <col:14> 'unsigned long (const char *, unsigned long)' lvalue CXXMethod 0x7fa81c811328 '__hash_len_17_to_32' 'unsigned long (const char *, unsigned long)'
|   |   | | | |         |-ImplicitCastExpr 0x7fa81d1b3298 <col:34> 'const char *' <LValueToRValue>
|   |   | | | |         | `-DeclRefExpr 0x7fa81d1b31f8 <col:34> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | |         `-ImplicitCastExpr 0x7fa81d1b32b0 <col:39> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |           `-DeclRefExpr 0x7fa81d1b3220 <col:39> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | | `-IfStmt 0x7fa81d1b3590 <line:1145:10, line:1147:3>
|   |   | | |   |-<<<NULL>>>
|   |   | | |   |-<<<NULL>>>
|   |   | | |   |-BinaryOperator 0x7fa81d1b3408 <line:1145:14, col:23> '_Bool' '<='
|   |   | | |   | |-ImplicitCastExpr 0x7fa81d1b33d8 <col:14> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | | `-DeclRefExpr 0x7fa81d1b33b0 <col:14> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |   | `-ImplicitCastExpr 0x7fa81d1b33f0 <col:23> 'unsigned long' <IntegralCast>
|   |   | | |   |   `-IntegerLiteral 0x7fa81d1983c8 <col:23> 'int' 64
|   |   | | |   |-CompoundStmt 0x7fa81d1b3570 <col:27, line:1147:3>
|   |   | | |   | `-ReturnStmt 0x7fa81d1b3558 <line:1146:5, col:42>
|   |   | | |   |   `-CallExpr 0x7fa81d1b34f0 <col:12, col:42> 'unsigned long':'unsigned long'
|   |   | | |   |     |-ImplicitCastExpr 0x7fa81d1b34d8 <col:12> 'unsigned long (*)(const char *, size_t)' <FunctionToPointerDecay>
|   |   | | |   |     | `-DeclRefExpr 0x7fa81d1b3430 <col:12> 'unsigned long (const char *, size_t)' lvalue CXXMethod 0x7fa81c8068a0 '__hash_len_33_to_64' 'unsigned long (const char *, size_t)'
|   |   | | |   |     |-ImplicitCastExpr 0x7fa81d1b3528 <col:32> 'const char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x7fa81d1b3458 <col:32> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |   |     `-ImplicitCastExpr 0x7fa81d1b3540 <col:37> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x7fa81d1b3480 <col:37> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |   `-<<<NULL>>>
|   |   | | |-DeclStmt 0x7fa81d1b3c48 <line:1151:3, col:50>
|   |   | | | `-VarDecl 0x7fa81d1b3610 <col:3, col:49> col:9 used __x 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 0x7fa81d1b3c00 <col:15, col:49> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1b3be8 <col:15, col:31> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1b3b20 <col:15, col:31> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1b3c30 <col:33, col:47> 'const void *' <BitCast>
|   |   | | |       `-BinaryOperator 0x7fa81d1b37c0 <col:33, col:47> 'const char *' '-'
|   |   | | |         |-BinaryOperator 0x7fa81d1b3798 <col:33, col:39> 'const char *' '+'
|   |   | | |         | |-ImplicitCastExpr 0x7fa81d1b3768 <col:33> 'const char *' <LValueToRValue>
|   |   | | |         | | `-DeclRefExpr 0x7fa81d1b3718 <col:33> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |         | `-ImplicitCastExpr 0x7fa81d1b3780 <col:39> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |         |   `-DeclRefExpr 0x7fa81d1b3740 <col:39> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |         `-IntegerLiteral 0x7fa81c809588 <col:47> 'int' 40
|   |   | | |-DeclStmt 0x7fa81d1b4328 <line:1152:3, line:1153:50>
|   |   | | | `-VarDecl 0x7fa81d1b3c70 <line:1152:3, line:1153:49> line:1152:9 used __y 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1b4300 <col:15, line:1153:49> 'unsigned long' '+'
|   |   | | |     |-CallExpr 0x7fa81d1b3fa0 <line:1152:15, col:49> 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 0x7fa81d1b3f88 <col:15, col:31> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 0x7fa81d1b3f18 <col:15, col:31> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 0x7fa81d1b3fd0 <col:33, col:47> 'const void *' <BitCast>
|   |   | | |     |   `-BinaryOperator 0x7fa81d1b3e20 <col:33, col:47> 'const char *' '-'
|   |   | | |     |     |-BinaryOperator 0x7fa81d1b3df8 <col:33, col:39> 'const char *' '+'
|   |   | | |     |     | |-ImplicitCastExpr 0x7fa81d1b3dc8 <col:33> 'const char *' <LValueToRValue>
|   |   | | |     |     | | `-DeclRefExpr 0x7fa81d1b3d78 <col:33> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |     |     | `-ImplicitCastExpr 0x7fa81d1b3de0 <col:39> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     |   `-DeclRefExpr 0x7fa81d1b3da0 <col:39> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |     |     `-IntegerLiteral 0x7fa81c8097a8 <col:47> 'int' 16
|   |   | | |     `-CallExpr 0x7fa81d1b42b8 <line:1153:15, col:49> 'unsigned long':'unsigned long'
|   |   | | |       |-ImplicitCastExpr 0x7fa81d1b42a0 <col:15, col:31> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x7fa81d1b4230 <col:15, col:31> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |       `-ImplicitCastExpr 0x7fa81d1b42e8 <col:33, col:47> 'const void *' <BitCast>
|   |   | | |         `-BinaryOperator 0x7fa81d1b4138 <col:33, col:47> 'const char *' '-'
|   |   | | |           |-BinaryOperator 0x7fa81d1b4110 <col:33, col:39> 'const char *' '+'
|   |   | | |           | |-ImplicitCastExpr 0x7fa81d1b40e0 <col:33> 'const char *' <LValueToRValue>
|   |   | | |           | | `-DeclRefExpr 0x7fa81d1b4090 <col:33> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |           | `-ImplicitCastExpr 0x7fa81d1b40f8 <col:39> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           |   `-DeclRefExpr 0x7fa81d1b40b8 <col:39> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |           `-IntegerLiteral 0x7fa81c809940 <col:47> 'int' 56
|   |   | | |-DeclStmt 0x7fa81d1b4b18 <line:1154:3, line:1155:63>
|   |   | | | `-VarDecl 0x7fa81d1b4350 <line:1154:3, line:1155:62> line:1154:9 used __z 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 0x7fa81d1b4ae0 <col:15, line:1155:62> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1b4ac8 <line:1154:15> 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1b43b0 <col:15> 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c810e70 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | | |     |-BinaryOperator 0x7fa81d1b4730 <col:29, col:67> 'unsigned long' '+'
|   |   | | |     | |-CallExpr 0x7fa81d1b46a8 <col:29, col:63> 'unsigned long':'unsigned long'
|   |   | | |     | | |-ImplicitCastExpr 0x7fa81d1b4690 <col:29, col:45> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | | `-DeclRefExpr 0x7fa81d1b4620 <col:29, col:45> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     | | `-ImplicitCastExpr 0x7fa81d1b46d8 <col:47, col:61> 'const void *' <BitCast>
|   |   | | |     | |   `-BinaryOperator 0x7fa81d1b4528 <col:47, col:61> 'const char *' '-'
|   |   | | |     | |     |-BinaryOperator 0x7fa81d1b4500 <col:47, col:53> 'const char *' '+'
|   |   | | |     | |     | |-ImplicitCastExpr 0x7fa81d1b44d0 <col:47> 'const char *' <LValueToRValue>
|   |   | | |     | |     | | `-DeclRefExpr 0x7fa81d1b4480 <col:47> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |     | |     | `-ImplicitCastExpr 0x7fa81d1b44e8 <col:53> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | |     |   `-DeclRefExpr 0x7fa81d1b44a8 <col:53> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |     | |     `-IntegerLiteral 0x7fa81c809bb0 <col:61> 'int' 48
|   |   | | |     | `-ImplicitCastExpr 0x7fa81d1b4718 <col:67> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x7fa81d1b46f0 <col:67> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |     `-CallExpr 0x7fa81d1b4a28 <line:1155:27, col:61> 'unsigned long':'unsigned long'
|   |   | | |       |-ImplicitCastExpr 0x7fa81d1b4a10 <col:27, col:43> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x7fa81d1b49a0 <col:27, col:43> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |       `-ImplicitCastExpr 0x7fa81d1b4a58 <col:45, col:59> 'const void *' <BitCast>
|   |   | | |         `-BinaryOperator 0x7fa81d1b48a8 <col:45, col:59> 'const char *' '-'
|   |   | | |           |-BinaryOperator 0x7fa81d1b4880 <col:45, col:51> 'const char *' '+'
|   |   | | |           | |-ImplicitCastExpr 0x7fa81d1b4850 <col:45> 'const char *' <LValueToRValue>
|   |   | | |           | | `-DeclRefExpr 0x7fa81d1b4800 <col:45> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |           | `-ImplicitCastExpr 0x7fa81d1b4868 <col:51> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           |   `-DeclRefExpr 0x7fa81d1b4828 <col:51> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |           `-IntegerLiteral 0x7fa81c809d98 <col:59> 'int' 24
|   |   | | |-DeclStmt 0x7fa81d1ead50 <line:1156:3, col:87>
|   |   | | | `-VarDecl 0x7fa81d1b4bf8 <col:3, col:86> col:22 used __v 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' cinit
|   |   | | |   `-ExprWithCleanups 0x7fa81d1ead38 <col:28, col:86> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | |     `-CXXConstructExpr 0x7fa81d1ead00 <col:28, col:86> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' elidable
|   |   | | |       `-MaterializeTemporaryExpr 0x7fa81d1eaac8 <col:28, col:86> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | | |         `-CallExpr 0x7fa81d1b4e70 <col:28, col:86> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | |           |-ImplicitCastExpr 0x7fa81d1b4e58 <col:28> 'pair<unsigned long, unsigned long> (*)(const char *, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | |           | `-DeclRefExpr 0x7fa81d1b4dd8 <col:28> 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c806628 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)'
|   |   | | |           |-BinaryOperator 0x7fa81d1b4d60 <col:58, col:72> 'const char *' '-'
|   |   | | |           | |-BinaryOperator 0x7fa81d1b4d38 <col:58, col:64> 'const char *' '+'
|   |   | | |           | | |-ImplicitCastExpr 0x7fa81d1b4d08 <col:58> 'const char *' <LValueToRValue>
|   |   | | |           | | | `-DeclRefExpr 0x7fa81d1b4cb8 <col:58> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |           | | `-ImplicitCastExpr 0x7fa81d1b4d20 <col:64> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           | |   `-DeclRefExpr 0x7fa81d1b4ce0 <col:64> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |           | `-IntegerLiteral 0x7fa81c80a0a8 <col:72> 'int' 64
|   |   | | |           |-ImplicitCastExpr 0x7fa81d1dbe90 <col:76> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           | `-DeclRefExpr 0x7fa81d1b4d88 <col:76> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |           `-ImplicitCastExpr 0x7fa81d1dbea8 <col:83> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |             `-DeclRefExpr 0x7fa81d1b4db0 <col:83> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b4350 '__z' 'unsigned long':'unsigned long'
|   |   | | |-DeclStmt 0x7fa81d1ecb70 <line:1157:3, col:92>
|   |   | | | `-VarDecl 0x7fa81d1eae38 <col:3, col:91> col:22 used __w 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' cinit
|   |   | | |   `-ExprWithCleanups 0x7fa81d1ecb58 <col:28, col:91> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | |     `-CXXConstructExpr 0x7fa81d1ecb20 <col:28, col:91> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' elidable
|   |   | | |       `-MaterializeTemporaryExpr 0x7fa81d1ecb08 <col:28, col:91> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | | |         `-CallExpr 0x7fa81d1eb0d8 <col:28, col:91> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | |           |-ImplicitCastExpr 0x7fa81d1eb0c0 <col:28> 'pair<unsigned long, unsigned long> (*)(const char *, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | |           | `-DeclRefExpr 0x7fa81d1eb098 <col:28> 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c806628 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)'
|   |   | | |           |-BinaryOperator 0x7fa81d1eafa0 <col:58, col:72> 'const char *' '-'
|   |   | | |           | |-BinaryOperator 0x7fa81d1eaf78 <col:58, col:64> 'const char *' '+'
|   |   | | |           | | |-ImplicitCastExpr 0x7fa81d1eaf48 <col:58> 'const char *' <LValueToRValue>
|   |   | | |           | | | `-DeclRefExpr 0x7fa81d1eaef8 <col:58> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |           | | `-ImplicitCastExpr 0x7fa81d1eaf60 <col:64> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           | |   `-DeclRefExpr 0x7fa81d1eaf20 <col:64> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |           | `-IntegerLiteral 0x7fa81c80a3e8 <col:72> 'int' 32
|   |   | | |           |-BinaryOperator 0x7fa81d1eb048 <col:76, col:82> 'unsigned long' '+'
|   |   | | |           | |-ImplicitCastExpr 0x7fa81d1eb018 <col:76> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           | | `-DeclRefExpr 0x7fa81d1eafc8 <col:76> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3c70 '__y' 'unsigned long':'unsigned long'
|   |   | | |           | `-ImplicitCastExpr 0x7fa81d1eb030 <col:82> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           |   `-DeclRefExpr 0x7fa81d1eaff0 <col:82> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8104b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | |           `-ImplicitCastExpr 0x7fa81d1eb118 <col:88> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |             `-DeclRefExpr 0x7fa81d1eb070 <col:88> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | | |-BinaryOperator 0x7fa81d1ecf08 <line:1158:3, col:43> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 0x7fa81d1ecb88 <col:3> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | | | `-BinaryOperator 0x7fa81d1ecee0 <col:9, col:43> 'unsigned long' '+'
|   |   | | |   |-BinaryOperator 0x7fa81d1ecc30 <col:9, col:15> 'unsigned long' '*'
|   |   | | |   | |-ImplicitCastExpr 0x7fa81d1ecc00 <col:9> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | | `-DeclRefExpr 0x7fa81d1ecbb0 <col:9> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | | |   | `-ImplicitCastExpr 0x7fa81d1ecc18 <col:15> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 0x7fa81d1ecbd8 <col:15> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8104b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | |   `-CallExpr 0x7fa81d1ece80 <col:22, col:43> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1ece68 <col:22, col:38> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1ecdf8 <col:22, col:38> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1ecec8 <col:40> 'const void *' <BitCast>
|   |   | | |       `-ImplicitCastExpr 0x7fa81d1eceb0 <col:40> 'const char *' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x7fa81d1ecd00 <col:40> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | |-BinaryOperator 0x7fa81d1ed098 <line:1161:3, col:47> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 0x7fa81d1ecf30 <col:3> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | | `-BinaryOperator 0x7fa81d1ed070 <col:11, col:47> 'unsigned long' '&'
|   |   | | |   |-ParenExpr 0x7fa81d1ecfd8 <col:11, col:21> 'unsigned long'
|   |   | | |   | `-BinaryOperator 0x7fa81d1ecfb0 <col:12, col:20> 'unsigned long' '-'
|   |   | | |   |   |-ImplicitCastExpr 0x7fa81d1ecf80 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |   | `-DeclRefExpr 0x7fa81d1ecf58 <col:12> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |   |   `-ImplicitCastExpr 0x7fa81d1ecf98 <col:20> 'unsigned long' <IntegralCast>
|   |   | | |   |     `-IntegerLiteral 0x7fa81c80a768 <col:20> 'int' 1
|   |   | | |   `-UnaryOperator 0x7fa81d1ed050 <col:25, col:47> 'unsigned long':'unsigned long' prefix '~'
|   |   | | |     `-CXXStaticCastExpr 0x7fa81d1ed020 <col:26, col:47> 'unsigned long':'unsigned long' static_cast<unsigned long> <NoOp>
|   |   | | |       `-ImplicitCastExpr 0x7fa81d1ed008 <col:45> 'unsigned long':'unsigned long' <IntegralCast>
|   |   | | |         `-IntegerLiteral 0x7fa81c80a7d0 <col:45> 'int' 63
|   |   | | |-DoStmt 0x7fa81d1f57a0 <line:1162:3, line:1174:22>
|   |   | | | |-CompoundStmt 0x7fa81d1f5660 <line:1162:6, line:1174:3>
|   |   | | | | |-BinaryOperator 0x7fa81d1ed640 <line:1163:5, col:78> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | | | |-DeclRefExpr 0x7fa81d1ed0c0 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | | `-BinaryOperator 0x7fa81d1ed618 <col:11, col:78> 'unsigned long' '*'
|   |   | | | | |   |-CallExpr 0x7fa81d1ed5a0 <col:11, col:74> 'unsigned long':'unsigned long'
|   |   | | | | |   | |-ImplicitCastExpr 0x7fa81d1ed588 <col:11> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | | | |   | | `-DeclRefExpr 0x7fa81d1ed0e8 <col:11> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | | | |   | |-BinaryOperator 0x7fa81d1ed508 <col:20, col:69> 'unsigned long' '+'
|   |   | | | | |   | | |-BinaryOperator 0x7fa81d1ed230 <col:20, col:36> 'unsigned long' '+'
|   |   | | | | |   | | | |-BinaryOperator 0x7fa81d1ed190 <col:20, col:26> 'unsigned long' '+'
|   |   | | | | |   | | | | |-ImplicitCastExpr 0x7fa81d1ed160 <col:20> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | | | | `-DeclRefExpr 0x7fa81d1ed110 <col:20> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | |   | | | | `-ImplicitCastExpr 0x7fa81d1ed178 <col:26> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | | |   `-DeclRefExpr 0x7fa81d1ed138 <col:26> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | |   | | | `-ImplicitCastExpr 0x7fa81d1ed218 <col:32, col:36> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | |   `-MemberExpr 0x7fa81d1ed1e0 <col:32, col:36> 'unsigned long':'unsigned long' lvalue .first 0x7fa81d1b50e0
|   |   | | | | |   | | |     `-DeclRefExpr 0x7fa81d1ed1b8 <col:32> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1b4bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   | | `-CallExpr 0x7fa81d1ed4c0 <col:44, col:69> 'unsigned long':'unsigned long'
|   |   | | | | |   | |   |-ImplicitCastExpr 0x7fa81d1ed4a8 <col:44, col:60> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |   | |   | `-DeclRefExpr 0x7fa81d1ed438 <col:44, col:60> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | | | |   | |   `-ImplicitCastExpr 0x7fa81d1ed4f0 <col:62, col:68> 'const void *' <BitCast>
|   |   | | | | |   | |     `-BinaryOperator 0x7fa81d1ed340 <col:62, col:68> 'const char *' '+'
|   |   | | | | |   | |       |-ImplicitCastExpr 0x7fa81d1ed328 <col:62> 'const char *' <LValueToRValue>
|   |   | | | | |   | |       | `-DeclRefExpr 0x7fa81d1ed300 <col:62> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | | |   | |       `-IntegerLiteral 0x7fa81c80aae0 <col:68> 'int' 8
|   |   | | | | |   | `-IntegerLiteral 0x7fa81c80ab98 <col:72> 'int' 37
|   |   | | | | |   `-ImplicitCastExpr 0x7fa81d1ed600 <col:78> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |     `-DeclRefExpr 0x7fa81d1ed5d8 <col:78> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8104b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | | | |-BinaryOperator 0x7fa81d1edb28 <line:1164:5, col:74> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | | | |-DeclRefExpr 0x7fa81d1ed668 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | | `-BinaryOperator 0x7fa81d1edb00 <col:11, col:74> 'unsigned long' '*'
|   |   | | | | |   |-CallExpr 0x7fa81d1eda88 <col:11, col:70> 'unsigned long':'unsigned long'
|   |   | | | | |   | |-ImplicitCastExpr 0x7fa81d1eda70 <col:11> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | | | |   | | `-DeclRefExpr 0x7fa81d1ed690 <col:11> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | | | |   | |-BinaryOperator 0x7fa81d1eda48 <col:20, col:65> 'unsigned long' '+'
|   |   | | | | |   | | |-BinaryOperator 0x7fa81d1ed770 <col:20, col:30> 'unsigned long' '+'
|   |   | | | | |   | | | |-ImplicitCastExpr 0x7fa81d1ed740 <col:20> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | | | `-DeclRefExpr 0x7fa81d1ed6b8 <col:20> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | |   | | | `-ImplicitCastExpr 0x7fa81d1ed758 <col:26, col:30> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | |   `-MemberExpr 0x7fa81d1ed708 <col:26, col:30> 'unsigned long':'unsigned long' lvalue .second 0x7fa81d1b5138
|   |   | | | | |   | | |     `-DeclRefExpr 0x7fa81d1ed6e0 <col:26> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1b4bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   | | `-CallExpr 0x7fa81d1eda00 <col:39, col:65> 'unsigned long':'unsigned long'
|   |   | | | | |   | |   |-ImplicitCastExpr 0x7fa81d1ed9e8 <col:39, col:55> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |   | |   | `-DeclRefExpr 0x7fa81d1ed978 <col:39, col:55> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | | | |   | |   `-ImplicitCastExpr 0x7fa81d1eda30 <col:57, col:63> 'const void *' <BitCast>
|   |   | | | | |   | |     `-BinaryOperator 0x7fa81d1ed880 <col:57, col:63> 'const char *' '+'
|   |   | | | | |   | |       |-ImplicitCastExpr 0x7fa81d1ed868 <col:57> 'const char *' <LValueToRValue>
|   |   | | | | |   | |       | `-DeclRefExpr 0x7fa81d1ed840 <col:57> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | | |   | |       `-IntegerLiteral 0x7fa81c80ae58 <col:63> 'int' 48
|   |   | | | | |   | `-IntegerLiteral 0x7fa81c80af10 <col:68> 'int' 42
|   |   | | | | |   `-ImplicitCastExpr 0x7fa81d1edae8 <col:74> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |     `-DeclRefExpr 0x7fa81d1edac0 <col:74> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8104b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | | | |-CompoundAssignOperator 0x7fa81d1edbf0 <line:1165:5, col:16> 'unsigned long':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | | | |-DeclRefExpr 0x7fa81d1edb50 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | | `-ImplicitCastExpr 0x7fa81d1edbd8 <col:12, col:16> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   `-MemberExpr 0x7fa81d1edba0 <col:12, col:16> 'unsigned long':'unsigned long' lvalue .second 0x7fa81d1b5138
|   |   | | | | |     `-DeclRefExpr 0x7fa81d1edb78 <col:12> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1eae38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |-CompoundAssignOperator 0x7fa81d1ee068 <line:1166:5, col:50> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | | | |-DeclRefExpr 0x7fa81d1edcf0 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | | `-BinaryOperator 0x7fa81d1ee040 <col:12, col:50> 'unsigned long' '+'
|   |   | | | | |   |-ImplicitCastExpr 0x7fa81d1ee028 <col:12, col:16> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | `-MemberExpr 0x7fa81d1edd40 <col:12, col:16> 'unsigned long':'unsigned long' lvalue .first 0x7fa81d1b50e0
|   |   | | | | |   |   `-DeclRefExpr 0x7fa81d1edd18 <col:12> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1b4bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   `-CallExpr 0x7fa81d1edfe0 <col:24, col:50> 'unsigned long':'unsigned long'
|   |   | | | | |     |-ImplicitCastExpr 0x7fa81d1edfc8 <col:24, col:40> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 0x7fa81d1edf58 <col:24, col:40> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | | | |     `-ImplicitCastExpr 0x7fa81d1ee010 <col:42, col:48> 'const void *' <BitCast>
|   |   | | | | |       `-BinaryOperator 0x7fa81d1ede60 <col:42, col:48> 'const char *' '+'
|   |   | | | | |         |-ImplicitCastExpr 0x7fa81d1ede48 <col:42> 'const char *' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 0x7fa81d1ede20 <col:42> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | | |         `-IntegerLiteral 0x7fa81c80b2c0 <col:48> 'int' 40
|   |   | | | | |-BinaryOperator 0x7fa81d1ee288 <line:1167:5, col:43> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | | | |-DeclRefExpr 0x7fa81d1ee0a0 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b4350 '__z' 'unsigned long':'unsigned long'
|   |   | | | | | `-BinaryOperator 0x7fa81d1ee260 <col:11, col:43> 'unsigned long' '*'
|   |   | | | | |   |-CallExpr 0x7fa81d1ee1e8 <col:11, col:39> 'unsigned long':'unsigned long'
|   |   | | | | |   | |-ImplicitCastExpr 0x7fa81d1ee1d0 <col:11> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | | | |   | | `-DeclRefExpr 0x7fa81d1ee0c8 <col:11> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | | | |   | |-BinaryOperator 0x7fa81d1ee1a8 <col:20, col:30> 'unsigned long' '+'
|   |   | | | | |   | | |-ImplicitCastExpr 0x7fa81d1ee178 <col:20> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | | | `-DeclRefExpr 0x7fa81d1ee0f0 <col:20> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b4350 '__z' 'unsigned long':'unsigned long'
|   |   | | | | |   | | `-ImplicitCastExpr 0x7fa81d1ee190 <col:26, col:30> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |   | |   `-MemberExpr 0x7fa81d1ee140 <col:26, col:30> 'unsigned long':'unsigned long' lvalue .first 0x7fa81d1b50e0
|   |   | | | | |   | |     `-DeclRefExpr 0x7fa81d1ee118 <col:26> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1eae38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   | `-IntegerLiteral 0x7fa81c80b4d0 <col:37> 'int' 33
|   |   | | | | |   `-ImplicitCastExpr 0x7fa81d1ee248 <col:43> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |     `-DeclRefExpr 0x7fa81d1ee220 <col:43> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8104b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | | | |-ExprWithCleanups 0x7fa81d1f1348 <line:1168:5, col:80> 'struct std::__1::pair<unsigned long, unsigned long>' lvalue
|   |   | | | | | `-CXXOperatorCallExpr 0x7fa81d1f1300 <col:5, col:80> 'struct std::__1::pair<unsigned long, unsigned long>' lvalue
|   |   | | | | |   |-ImplicitCastExpr 0x7fa81d1f12e8 <col:9> 'struct std::__1::pair<unsigned long, unsigned long> &(*)(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)' <FunctionToPointerDecay>
|   |   | | | | |   | `-DeclRefExpr 0x7fa81d1f1260 <col:9> 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)' lvalue CXXMethod 0x7fa81d1d9c00 'operator=' 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)'
|   |   | | | | |   |-DeclRefExpr 0x7fa81d1ee2b0 <col:5> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1b4bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   `-MaterializeTemporaryExpr 0x7fa81d1ef638 <col:11, col:80> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | | | | |     `-CallExpr 0x7fa81d1ee560 <col:11, col:80> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |       |-ImplicitCastExpr 0x7fa81d1ee548 <col:11> 'pair<unsigned long, unsigned long> (*)(const char *, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | | | |       | `-DeclRefExpr 0x7fa81d1ee520 <col:11> 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c806628 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)'
|   |   | | | | |       |-ImplicitCastExpr 0x7fa81d1ee5a0 <col:41> 'const char *' <LValueToRValue>
|   |   | | | | |       | `-DeclRefExpr 0x7fa81d1ee338 <col:41> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | | |       |-BinaryOperator 0x7fa81d1ee418 <col:46, col:59> 'unsigned long' '*'
|   |   | | | | |       | |-ImplicitCastExpr 0x7fa81d1ee3e8 <col:46, col:50> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       | | `-MemberExpr 0x7fa81d1ee388 <col:46, col:50> 'unsigned long':'unsigned long' lvalue .second 0x7fa81d1b5138
|   |   | | | | |       | |   `-DeclRefExpr 0x7fa81d1ee360 <col:46> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1b4bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |       | `-ImplicitCastExpr 0x7fa81d1ee400 <col:59> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       |   `-DeclRefExpr 0x7fa81d1ee3c0 <col:59> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8104b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | | | |       `-BinaryOperator 0x7fa81d1ee4f8 <col:65, col:75> 'unsigned long' '+'
|   |   | | | | |         |-ImplicitCastExpr 0x7fa81d1ee4c8 <col:65> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 0x7fa81d1ee440 <col:65> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | |         `-ImplicitCastExpr 0x7fa81d1ee4e0 <col:71, col:75> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |           `-MemberExpr 0x7fa81d1ee490 <col:71, col:75> 'unsigned long':'unsigned long' lvalue .first 0x7fa81d1b50e0
|   |   | | | | |             `-DeclRefExpr 0x7fa81d1ee468 <col:71> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1eae38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |-ExprWithCleanups 0x7fa81d1f2808 <line:1169:5, line:1170:74> 'struct std::__1::pair<unsigned long, unsigned long>' lvalue
|   |   | | | | | `-CXXOperatorCallExpr 0x7fa81d1f27c0 <line:1169:5, line:1170:74> 'struct std::__1::pair<unsigned long, unsigned long>' lvalue
|   |   | | | | |   |-ImplicitCastExpr 0x7fa81d1f27a8 <line:1169:9> 'struct std::__1::pair<unsigned long, unsigned long> &(*)(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)' <FunctionToPointerDecay>
|   |   | | | | |   | `-DeclRefExpr 0x7fa81d1f2780 <col:9> 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)' lvalue CXXMethod 0x7fa81d1d9c00 'operator=' 'struct std::__1::pair<unsigned long, unsigned long> &(typename conditional<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, struct pair<unsigned long, unsigned long>, struct __nat>::type &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)'
|   |   | | | | |   |-DeclRefExpr 0x7fa81d1f1360 <col:5> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1eae38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |   `-MaterializeTemporaryExpr 0x7fa81d1f2768 <col:11, line:1170:74> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | | | | |     `-CallExpr 0x7fa81d1f1888 <line:1169:11, line:1170:74> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |       |-ImplicitCastExpr 0x7fa81d1f1870 <line:1169:11> 'pair<unsigned long, unsigned long> (*)(const char *, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | | | |       | `-DeclRefExpr 0x7fa81d1f1848 <col:11> 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c806628 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)'
|   |   | | | | |       |-BinaryOperator 0x7fa81d1f1428 <col:41, col:47> 'const char *' '+'
|   |   | | | | |       | |-ImplicitCastExpr 0x7fa81d1f1410 <col:41> 'const char *' <LValueToRValue>
|   |   | | | | |       | | `-DeclRefExpr 0x7fa81d1f13e8 <col:41> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | | |       | `-IntegerLiteral 0x7fa81c80b908 <col:47> 'int' 32
|   |   | | | | |       |-BinaryOperator 0x7fa81d1f1508 <col:51, col:61> 'unsigned long' '+'
|   |   | | | | |       | |-ImplicitCastExpr 0x7fa81d1f14d8 <col:51> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       | | `-DeclRefExpr 0x7fa81d1f1450 <col:51> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b4350 '__z' 'unsigned long':'unsigned long'
|   |   | | | | |       | `-ImplicitCastExpr 0x7fa81d1f14f0 <col:57, col:61> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       |   `-MemberExpr 0x7fa81d1f14a0 <col:57, col:61> 'unsigned long':'unsigned long' lvalue .second 0x7fa81d1b5138
|   |   | | | | |       |     `-DeclRefExpr 0x7fa81d1f1478 <col:57> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1eae38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | | | | |       `-BinaryOperator 0x7fa81d1f1820 <line:1170:41, col:73> 'unsigned long' '+'
|   |   | | | | |         |-ImplicitCastExpr 0x7fa81d1f1808 <col:41> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 0x7fa81d1f1530 <col:41> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3c70 '__y' 'unsigned long':'unsigned long'
|   |   | | | | |         `-CallExpr 0x7fa81d1f17c0 <col:47, col:73> 'unsigned long':'unsigned long'
|   |   | | | | |           |-ImplicitCastExpr 0x7fa81d1f17a8 <col:47, col:63> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |           | `-DeclRefExpr 0x7fa81d1f1738 <col:47, col:63> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | | | |           `-ImplicitCastExpr 0x7fa81d1f17f0 <col:65, col:71> 'const void *' <BitCast>
|   |   | | | | |             `-BinaryOperator 0x7fa81d1f1640 <col:65, col:71> 'const char *' '+'
|   |   | | | | |               |-ImplicitCastExpr 0x7fa81d1f1628 <col:65> 'const char *' <LValueToRValue>
|   |   | | | | |               | `-DeclRefExpr 0x7fa81d1f1600 <col:65> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | | |               `-IntegerLiteral 0x7fa81c80bb30 <col:71> 'int' 16
|   |   | | | | |-CallExpr 0x7fa81d1f5550 <line:1171:5, col:23> 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type':'void'
|   |   | | | | | |-ImplicitCastExpr 0x7fa81d1f5538 <col:5, col:10> 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type (*)(unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)' <FunctionToPointerDecay>
|   |   | | | | | | `-DeclRefExpr 0x7fa81d1f5498 <col:5, col:10> 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type (unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)' lvalue Function 0x7fa81d1f3a20 'swap' 'typename enable_if<is_move_constructible<unsigned long>::value && is_move_assignable<unsigned long>::value>::type (unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)' (FunctionTemplate 0x7fa81d864d38 'swap')
|   |   | | | | | |-DeclRefExpr 0x7fa81d1f2888 <col:15> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b4350 '__z' 'unsigned long':'unsigned long'
|   |   | | | | | `-DeclRefExpr 0x7fa81d1f28b0 <col:20> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | | | | |-CompoundAssignOperator 0x7fa81d1f55b0 <line:1172:5, col:12> 'const char *' lvalue '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | | | | | |-DeclRefExpr 0x7fa81d1f5588 <col:5> 'const char *' lvalue Var 0x7fa81d1b2da8 '__s' 'const char *'
|   |   | | | | | `-IntegerLiteral 0x7fa81c80bd88 <col:12> 'int' 64
|   |   | | | | `-CompoundAssignOperator 0x7fa81d1f5628 <line:1173:5, col:14> 'unsigned long':'unsigned long' lvalue '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |   |-DeclRefExpr 0x7fa81d1f55e8 <col:5> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | | |   `-ImplicitCastExpr 0x7fa81d1f5610 <col:14> 'unsigned long' <IntegralCast>
|   |   | | | |     `-IntegerLiteral 0x7fa81c80be08 <col:14> 'int' 64
|   |   | | | `-BinaryOperator 0x7fa81d1f5778 <line:1174:12, col:21> '_Bool' '!='
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1f5748 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1f5720 <col:12> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810110 '__len' 'unsigned long':'unsigned long'
|   |   | | |   `-ImplicitCastExpr 0x7fa81d1f5760 <col:21> 'unsigned long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x7fa81c80bef0 <col:21> 'int' 0
|   |   | | `-ReturnStmt 0x7fa81d1f5d70 <line:1175:3, line:1177:50>
|   |   | |   `-CallExpr 0x7fa81d1f5d38 <line:1175:10, line:1177:50> 'unsigned long':'unsigned long'
|   |   | |     |-ImplicitCastExpr 0x7fa81d1f5d20 <line:1175:10> 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x7fa81d1f57c0 <col:10> 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c810e70 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | |     |-BinaryOperator 0x7fa81d1f5b28 <line:1176:7, col:71> 'unsigned long' '+'
|   |   | |     | |-BinaryOperator 0x7fa81d1f5ac0 <col:7, col:64> 'unsigned long' '+'
|   |   | |     | | |-CallExpr 0x7fa81d1f58e8 <col:7, col:41> 'unsigned long':'unsigned long'
|   |   | |     | | | |-ImplicitCastExpr 0x7fa81d1f58d0 <col:7> 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |     | | | | `-DeclRefExpr 0x7fa81d1f57e8 <col:7> 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c810e70 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | |     | | | |-ImplicitCastExpr 0x7fa81d1f5920 <col:21, col:25> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | | | | `-MemberExpr 0x7fa81d1f5838 <col:21, col:25> 'unsigned long':'unsigned long' lvalue .first 0x7fa81d1b50e0
|   |   | |     | | | |   `-DeclRefExpr 0x7fa81d1f5810 <col:21> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1b4bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |     | | | `-ImplicitCastExpr 0x7fa81d1f5938 <col:32, col:36> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | | |   `-MemberExpr 0x7fa81d1f5898 <col:32, col:36> 'unsigned long':'unsigned long' lvalue .first 0x7fa81d1b50e0
|   |   | |     | | |     `-DeclRefExpr 0x7fa81d1f5870 <col:32> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1eae38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |     | | `-BinaryOperator 0x7fa81d1f5a98 <col:45, col:64> 'unsigned long' '*'
|   |   | |     | |   |-CallExpr 0x7fa81d1f5a10 <col:45, col:60> 'unsigned long':'unsigned long'
|   |   | |     | |   | |-ImplicitCastExpr 0x7fa81d1f59f8 <col:45> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   | |     | |   | | `-DeclRefExpr 0x7fa81d1f5950 <col:45> 'unsigned long (unsigned long)' lvalue CXXMethod 0x7fa81c810c30 '__shift_mix' 'unsigned long (unsigned long)'
|   |   | |     | |   | `-ImplicitCastExpr 0x7fa81d1f5a40 <col:57> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | |   |   `-DeclRefExpr 0x7fa81d1f5978 <col:57> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3c70 '__y' 'unsigned long':'unsigned long'
|   |   | |     | |   `-ImplicitCastExpr 0x7fa81d1f5a80 <col:64> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | |     `-DeclRefExpr 0x7fa81d1f5a58 <col:64> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8104b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | |     | `-ImplicitCastExpr 0x7fa81d1f5b10 <col:71> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x7fa81d1f5ae8 <col:71> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b4350 '__z' 'unsigned long':'unsigned long'
|   |   | |     `-BinaryOperator 0x7fa81d1f5cf8 <line:1177:7, col:47> 'unsigned long' '+'
|   |   | |       |-CallExpr 0x7fa81d1f5c50 <col:7, col:43> 'unsigned long':'unsigned long'
|   |   | |       | |-ImplicitCastExpr 0x7fa81d1f5c38 <col:7> 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |       | | `-DeclRefExpr 0x7fa81d1f5b50 <col:7> 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c810e70 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | |       | |-ImplicitCastExpr 0x7fa81d1f5c88 <col:21, col:25> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       | | `-MemberExpr 0x7fa81d1f5ba0 <col:21, col:25> 'unsigned long':'unsigned long' lvalue .second 0x7fa81d1b5138
|   |   | |       | |   `-DeclRefExpr 0x7fa81d1f5b78 <col:21> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1b4bf8 '__v' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |       | `-ImplicitCastExpr 0x7fa81d1f5ca0 <col:33, col:37> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       |   `-MemberExpr 0x7fa81d1f5c00 <col:33, col:37> 'unsigned long':'unsigned long' lvalue .second 0x7fa81d1b5138
|   |   | |       |     `-DeclRefExpr 0x7fa81d1f5bd8 <col:33> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' lvalue Var 0x7fa81d1eae38 '__w' 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |       `-ImplicitCastExpr 0x7fa81d1f5ce0 <col:47> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x7fa81d1f5cb8 <col:47> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1b3610 '__x' 'unsigned long':'unsigned long'
|   |   | `-NoSanitizeAttr 0x7fa81c810308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> Inherited unsigned-integer-overflow
|   |   |-AccessSpecDecl 0x7fa81c810388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1010:2, col:9> col:2 private
|   |   |-VarDecl 0x7fa81c8103c0 <line:1012:3, col:29> col:22 referenced __k0 'const unsigned long':'const unsigned long' static cinit
|   |   | `-ImplicitCastExpr 0x7fa81c810430 <col:29> 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x7fa81d187210 <col:29> 'unsigned long long' 14097894508562428199
|   |   |-VarDecl 0x7fa81c8104b0 <line:1013:3, col:29> col:22 referenced __k1 'const unsigned long':'const unsigned long' static cinit
|   |   | `-ImplicitCastExpr 0x7fa81c810520 <col:29> 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x7fa81d1872a0 <col:29> 'unsigned long long' 13011662864482103923
|   |   |-VarDecl 0x7fa81c8105a0 <line:1014:3, col:29> col:22 referenced __k2 'const unsigned long':'const unsigned long' static cinit
|   |   | `-ImplicitCastExpr 0x7fa81c810610 <col:29> 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x7fa81d187330 <col:29> 'unsigned long long' 11160318154034397263
|   |   |-VarDecl 0x7fa81c810690 <line:1015:3, col:29> col:22 referenced __k3 'const unsigned long':'const unsigned long' static cinit
|   |   | `-ImplicitCastExpr 0x7fa81c810700 <col:29> 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x7fa81d1873c0 <col:29> 'unsigned long long' 14504361325974414679
|   |   |-CXXMethodDecl 0x7fa81c8108f0 <line:1017:3, line:1019:3> line:1017:16 used __rotate 'unsigned long (unsigned long, int)' static
|   |   | |-ParmVarDecl 0x7fa81c810780 <col:25, col:31> col:31 used __val 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c8107e0 <col:38, col:42> col:42 used __shift 'int'
|   |   | `-CompoundStmt 0x7fa81d2090d8 <col:51, line:1019:3>
|   |   |   `-ReturnStmt 0x7fa81d2090c0 <line:1018:5, col:82>
|   |   |     `-ConditionalOperator 0x7fa81d209090 <col:12, col:82> 'unsigned long':'unsigned long'
|   |   |       |-BinaryOperator 0x7fa81d208e08 <col:12, col:23> '_Bool' '=='
|   |   |       | |-ImplicitCastExpr 0x7fa81d208df0 <col:12> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x7fa81d208dc8 <col:12> 'int' lvalue ParmVar 0x7fa81c8107e0 '__shift' 'int'
|   |   |       | `-IntegerLiteral 0x7fa81d18cf50 <col:23> 'int' 0
|   |   |       |-ImplicitCastExpr 0x7fa81d209078 <col:27> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x7fa81d208e30 <col:27> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810780 '__val' 'unsigned long':'unsigned long'
|   |   |       `-ParenExpr 0x7fa81d209058 <col:35, col:82> 'unsigned long'
|   |   |         `-BinaryOperator 0x7fa81d209030 <col:36, col:81> 'unsigned long' '|'
|   |   |           |-ParenExpr 0x7fa81d208f00 <col:36, col:53> 'unsigned long':'unsigned long'
|   |   |           | `-BinaryOperator 0x7fa81d208ed8 <col:37, col:46> 'unsigned long':'unsigned long' '>>'
|   |   |           |   |-ImplicitCastExpr 0x7fa81d208ea8 <col:37> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |           |   | `-DeclRefExpr 0x7fa81d208e58 <col:37> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810780 '__val' 'unsigned long':'unsigned long'
|   |   |           |   `-ImplicitCastExpr 0x7fa81d208ec0 <col:46> 'int' <LValueToRValue>
|   |   |           |     `-DeclRefExpr 0x7fa81d208e80 <col:46> 'int' lvalue ParmVar 0x7fa81c8107e0 '__shift' 'int'
|   |   |           `-ParenExpr 0x7fa81d209010 <col:57, col:81> 'unsigned long':'unsigned long'
|   |   |             `-BinaryOperator 0x7fa81d208fe8 <col:58, col:80> 'unsigned long':'unsigned long' '<<'
|   |   |               |-ImplicitCastExpr 0x7fa81d208fd0 <col:58> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |               | `-DeclRefExpr 0x7fa81d208f20 <col:58> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810780 '__val' 'unsigned long':'unsigned long'
|   |   |               `-ParenExpr 0x7fa81d208fb0 <col:67, col:80> 'int'
|   |   |                 `-BinaryOperator 0x7fa81d208f88 <col:68, col:73> 'int' '-'
|   |   |                   |-IntegerLiteral 0x7fa81d18d098 <col:68> 'int' 64
|   |   |                   `-ImplicitCastExpr 0x7fa81d208f70 <col:73> 'int' <LValueToRValue>
|   |   |                     `-DeclRefExpr 0x7fa81d208f48 <col:73> 'int' lvalue ParmVar 0x7fa81c8107e0 '__shift' 'int'
|   |   |-CXXMethodDecl 0x7fa81c810aa8 <line:1021:3, line:1023:3> line:1021:16 used __rotate_by_at_least_1 'unsigned long (unsigned long, int)' static
|   |   | |-ParmVarDecl 0x7fa81c8109b8 <col:39, col:45> col:45 used __val 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c810a18 <col:52, col:56> col:56 used __shift 'int'
|   |   | `-CompoundStmt 0x7fa81d1f8228 <col:65, line:1023:3>
|   |   |   `-ReturnStmt 0x7fa81d1f8210 <line:1022:5, col:57>
|   |   |     `-BinaryOperator 0x7fa81d1f81e8 <col:12, col:57> 'unsigned long' '|'
|   |   |       |-ParenExpr 0x7fa81d1f80b8 <col:12, col:29> 'unsigned long':'unsigned long'
|   |   |       | `-BinaryOperator 0x7fa81d1f8090 <col:13, col:22> 'unsigned long':'unsigned long' '>>'
|   |   |       |   |-ImplicitCastExpr 0x7fa81d1f8060 <col:13> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x7fa81d1f8010 <col:13> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8109b8 '__val' 'unsigned long':'unsigned long'
|   |   |       |   `-ImplicitCastExpr 0x7fa81d1f8078 <col:22> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x7fa81d1f8038 <col:22> 'int' lvalue ParmVar 0x7fa81c810a18 '__shift' 'int'
|   |   |       `-ParenExpr 0x7fa81d1f81c8 <col:33, col:57> 'unsigned long':'unsigned long'
|   |   |         `-BinaryOperator 0x7fa81d1f81a0 <col:34, col:56> 'unsigned long':'unsigned long' '<<'
|   |   |           |-ImplicitCastExpr 0x7fa81d1f8188 <col:34> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x7fa81d1f80d8 <col:34> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8109b8 '__val' 'unsigned long':'unsigned long'
|   |   |           `-ParenExpr 0x7fa81d1f8168 <col:43, col:56> 'int'
|   |   |             `-BinaryOperator 0x7fa81d1f8140 <col:44, col:49> 'int' '-'
|   |   |               |-IntegerLiteral 0x7fa81d18d2f8 <col:44> 'int' 64
|   |   |               `-ImplicitCastExpr 0x7fa81d1f8128 <col:49> 'int' <LValueToRValue>
|   |   |                 `-DeclRefExpr 0x7fa81d1f8100 <col:49> 'int' lvalue ParmVar 0x7fa81c810a18 '__shift' 'int'
|   |   |-CXXMethodDecl 0x7fa81c810c30 <line:1025:3, line:1027:3> line:1025:16 used __shift_mix 'unsigned long (unsigned long)' static
|   |   | |-ParmVarDecl 0x7fa81c810b70 <col:28, col:34> col:34 used __val 'unsigned long':'unsigned long'
|   |   | `-CompoundStmt 0x7fa81d20bc68 <col:41, line:1027:3>
|   |   |   `-ReturnStmt 0x7fa81d20bc50 <line:1026:5, col:32>
|   |   |     `-BinaryOperator 0x7fa81d20bc28 <col:12, col:32> 'unsigned long' '^'
|   |   |       |-ImplicitCastExpr 0x7fa81d20bc10 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x7fa81d20bb60 <col:12> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810b70 '__val' 'unsigned long':'unsigned long'
|   |   |       `-ParenExpr 0x7fa81d20bbf0 <col:20, col:32> 'unsigned long':'unsigned long'
|   |   |         `-BinaryOperator 0x7fa81d20bbc8 <col:21, col:30> 'unsigned long':'unsigned long' '>>'
|   |   |           |-ImplicitCastExpr 0x7fa81d20bbb0 <col:21> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x7fa81d20bb88 <col:21> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810b70 '__val' 'unsigned long':'unsigned long'
|   |   |           `-IntegerLiteral 0x7fa81d18d498 <col:30> 'int' 47
|   |   |-CXXMethodDecl 0x7fa81c810e70 <line:1029:3, line:1039:3> line:1029:16 used __hash_len_16 'unsigned long (unsigned long, unsigned long)' static
|   |   | |-ParmVarDecl 0x7fa81c810cf0 <col:30, col:36> col:36 used __u 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c810d60 <col:41, col:47> col:47 used __v 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt 0x7fa81d1fead0 <line:1031:3, line:1039:3>
|   |   | | |-DeclStmt 0x7fa81d1fe480 <line:1032:5, col:46>
|   |   | | | `-VarDecl 0x7fa81d1fe3b0 <col:5, col:25> col:17 referenced __mul 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-ImplicitCastExpr 0x7fa81d1fe410 <col:25> 'const unsigned long':'const unsigned long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x7fa81d18d5d0 <col:25> 'unsigned long long' 11376068507788127593
|   |   | | |-DeclStmt 0x7fa81d1fe638 <line:1033:5, col:36>
|   |   | | | `-VarDecl 0x7fa81d1fe4a8 <col:5, col:31> col:11 used __a 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fe610 <col:17, col:31> 'unsigned long' '*'
|   |   | | |     |-ParenExpr 0x7fa81d1fe5b0 <col:17, col:27> 'unsigned long'
|   |   | | |     | `-BinaryOperator 0x7fa81d1fe588 <col:18, col:24> 'unsigned long' '^'
|   |   | | |     |   |-ImplicitCastExpr 0x7fa81d1fe558 <col:18> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   | `-DeclRefExpr 0x7fa81d1fe508 <col:18> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810cf0 '__u' 'unsigned long':'unsigned long'
|   |   | | |     |   `-ImplicitCastExpr 0x7fa81d1fe570 <col:24> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     `-DeclRefExpr 0x7fa81d1fe530 <col:24> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810d60 '__v' 'unsigned long':'unsigned long'
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fe5f8 <col:31> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1fe5d0 <col:31> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1fe3b0 '__mul' 'const unsigned long':'const unsigned long'
|   |   | | |-CompoundAssignOperator 0x7fa81d1fe700 <line:1034:5, col:22> 'unsigned long':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fe650 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe4a8 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-ParenExpr 0x7fa81d1fe6e0 <col:12, col:22> 'unsigned long':'unsigned long'
|   |   | | |   `-BinaryOperator 0x7fa81d1fe6b8 <col:13, col:20> 'unsigned long':'unsigned long' '>>'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fe6a0 <col:13> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fe678 <col:13> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe4a8 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-IntegerLiteral 0x7fa81d18d7c8 <col:20> 'int' 47
|   |   | | |-DeclStmt 0x7fa81d1fe8d8 <line:1035:5, col:36>
|   |   | | | `-VarDecl 0x7fa81d1fe748 <col:5, col:31> col:11 used __b 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fe8b0 <col:17, col:31> 'unsigned long' '*'
|   |   | | |     |-ParenExpr 0x7fa81d1fe850 <col:17, col:27> 'unsigned long'
|   |   | | |     | `-BinaryOperator 0x7fa81d1fe828 <col:18, col:24> 'unsigned long' '^'
|   |   | | |     |   |-ImplicitCastExpr 0x7fa81d1fe7f8 <col:18> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   | `-DeclRefExpr 0x7fa81d1fe7a8 <col:18> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c810d60 '__v' 'unsigned long':'unsigned long'
|   |   | | |     |   `-ImplicitCastExpr 0x7fa81d1fe810 <col:24> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     `-DeclRefExpr 0x7fa81d1fe7d0 <col:24> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe4a8 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fe898 <col:31> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1fe870 <col:31> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1fe3b0 '__mul' 'const unsigned long':'const unsigned long'
|   |   | | |-CompoundAssignOperator 0x7fa81d1fe9a0 <line:1036:5, col:22> 'unsigned long':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fe8f0 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe748 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-ParenExpr 0x7fa81d1fe980 <col:12, col:22> 'unsigned long':'unsigned long'
|   |   | | |   `-BinaryOperator 0x7fa81d1fe958 <col:13, col:20> 'unsigned long':'unsigned long' '>>'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fe940 <col:13> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fe918 <col:13> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe748 '__b' 'unsigned long':'unsigned long'
|   |   | | |     `-IntegerLiteral 0x7fa81d18da28 <col:20> 'int' 47
|   |   | | |-CompoundAssignOperator 0x7fa81d1fea40 <line:1037:5, col:12> 'unsigned long':'unsigned long' lvalue '*=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fe9d8 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe748 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x7fa81d1fea28 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x7fa81d1fea00 <col:12> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1fe3b0 '__mul' 'const unsigned long':'const unsigned long'
|   |   | | `-ReturnStmt 0x7fa81d1feab8 <line:1038:5, col:12>
|   |   | |   `-ImplicitCastExpr 0x7fa81d1feaa0 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x7fa81d1fea78 <col:12> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fe748 '__b' 'unsigned long':'unsigned long'
|   |   | `-NoSanitizeAttr 0x7fa81c810f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl 0x7fa81c8110f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1041:3, line:1064:3> line:1041:16 used __hash_len_0_to_16 'unsigned long (const char *, unsigned long)' static
|   |   | |-ParmVarDecl 0x7fa81c810fa8 <col:35, col:47> col:47 used __s 'const char *'
|   |   | |-ParmVarDecl 0x7fa81c811018 <col:52, col:58> col:58 used __len 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt 0x7fa81d1f7fd8 <line:1043:3, line:1064:3>
|   |   | | |-IfStmt 0x7fa81d1f6910 <line:1044:5, line:1048:5>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-BinaryOperator 0x7fa81d1f5ea8 <line:1044:9, col:17> '_Bool' '>'
|   |   | | | | |-ImplicitCastExpr 0x7fa81d1f5e78 <col:9> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x7fa81d1f5e50 <col:9> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | | `-ImplicitCastExpr 0x7fa81d1f5e90 <col:17> 'unsigned long' <IntegralCast>
|   |   | | | |   `-IntegerLiteral 0x7fa81d18dc08 <col:17> 'int' 8
|   |   | | | |-CompoundStmt 0x7fa81d1f68e0 <col:20, line:1048:5>
|   |   | | | | |-DeclStmt 0x7fa81d1f6220 <line:1045:7, col:47>
|   |   | | | | | `-VarDecl 0x7fa81d1f5ee0 <col:7, col:46> col:19 used __a 'const unsigned long':'const unsigned long' cinit
|   |   | | | | |   `-CallExpr 0x7fa81d1f6168 <col:25, col:46> 'unsigned long':'unsigned long'
|   |   | | | | |     |-ImplicitCastExpr 0x7fa81d1f6150 <col:25, col:41> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 0x7fa81d1f60e0 <col:25, col:41> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | | | |     `-ImplicitCastExpr 0x7fa81d1f61b0 <col:43> 'const void *' <BitCast>
|   |   | | | | |       `-ImplicitCastExpr 0x7fa81d1f6198 <col:43> 'const char *' <LValueToRValue>
|   |   | | | | |         `-DeclRefExpr 0x7fa81d1f5fe8 <col:43> 'const char *' lvalue ParmVar 0x7fa81c810fa8 '__s' 'const char *'
|   |   | | | | |-DeclStmt 0x7fa81d1f6618 <line:1046:7, col:59>
|   |   | | | | | `-VarDecl 0x7fa81d1f6248 <col:7, col:58> col:19 used __b 'const unsigned long':'const unsigned long' cinit
|   |   | | | | |   `-CallExpr 0x7fa81d1f6578 <col:25, col:58> 'unsigned long':'unsigned long'
|   |   | | | | |     |-ImplicitCastExpr 0x7fa81d1f6560 <col:25, col:41> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 0x7fa81d1f64f0 <col:25, col:41> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | | | |     `-ImplicitCastExpr 0x7fa81d1f65a8 <col:43, col:57> 'const void *' <BitCast>
|   |   | | | | |       `-BinaryOperator 0x7fa81d1f63f8 <col:43, col:57> 'const char *' '-'
|   |   | | | | |         |-BinaryOperator 0x7fa81d1f63d0 <col:43, col:49> 'const char *' '+'
|   |   | | | | |         | |-ImplicitCastExpr 0x7fa81d1f63a0 <col:43> 'const char *' <LValueToRValue>
|   |   | | | | |         | | `-DeclRefExpr 0x7fa81d1f6350 <col:43> 'const char *' lvalue ParmVar 0x7fa81c810fa8 '__s' 'const char *'
|   |   | | | | |         | `-ImplicitCastExpr 0x7fa81d1f63b8 <col:49> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |         |   `-DeclRefExpr 0x7fa81d1f6378 <col:49> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |         `-IntegerLiteral 0x7fa81d18dfe0 <col:57> 'int' 8
|   |   | | | | `-ReturnStmt 0x7fa81d1f68c8 <line:1047:7, col:79>
|   |   | | | |   `-BinaryOperator 0x7fa81d1f68a0 <col:14, col:79> 'unsigned long' '^'
|   |   | | | |     |-CallExpr 0x7fa81d1f6810 <col:14, col:75> 'unsigned long':'unsigned long'
|   |   | | | |     | |-ImplicitCastExpr 0x7fa81d1f67f8 <col:14> 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | | |     | | `-DeclRefExpr 0x7fa81d1f6630 <col:14> 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c810e70 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | | | |     | |-ImplicitCastExpr 0x7fa81d1f6848 <col:28> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     | | `-DeclRefExpr 0x7fa81d1f6658 <col:28> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f5ee0 '__a' 'const unsigned long':'const unsigned long'
|   |   | | | |     | `-CallExpr 0x7fa81d1f6790 <col:33, col:74> 'unsigned long':'unsigned long'
|   |   | | | |     |   |-ImplicitCastExpr 0x7fa81d1f6778 <col:33> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | | |     |   | `-DeclRefExpr 0x7fa81d1f6680 <col:33> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c810aa8 '__rotate_by_at_least_1' 'unsigned long (unsigned long, int)'
|   |   | | | |     |   |-BinaryOperator 0x7fa81d1f6728 <col:56, col:62> 'unsigned long' '+'
|   |   | | | |     |   | |-ImplicitCastExpr 0x7fa81d1f66f8 <col:56> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |   | | `-DeclRefExpr 0x7fa81d1f66a8 <col:56> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f6248 '__b' 'const unsigned long':'const unsigned long'
|   |   | | | |     |   | `-ImplicitCastExpr 0x7fa81d1f6710 <col:62> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |   |   `-DeclRefExpr 0x7fa81d1f66d0 <col:62> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | |     |   `-ImplicitCastExpr 0x7fa81d1f67e0 <col:69> 'int' <IntegralCast>
|   |   | | | |     |     `-ImplicitCastExpr 0x7fa81d1f67c8 <col:69> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |       `-DeclRefExpr 0x7fa81d1f6750 <col:69> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | |     `-ImplicitCastExpr 0x7fa81d1f6888 <col:79> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 0x7fa81d1f6860 <col:79> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f6248 '__b' 'const unsigned long':'const unsigned long'
|   |   | | | `-<<<NULL>>>
|   |   | | |-IfStmt 0x7fa81d1f71b0 <line:1049:5, line:1053:5>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-BinaryOperator 0x7fa81d1f69f8 <line:1049:9, col:18> '_Bool' '>='
|   |   | | | | |-ImplicitCastExpr 0x7fa81d1f69c8 <col:9> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x7fa81d1f69a0 <col:9> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | | `-ImplicitCastExpr 0x7fa81d1f69e0 <col:18> 'unsigned long' <IntegralCast>
|   |   | | | |   `-IntegerLiteral 0x7fa81d18e2f0 <col:18> 'int' 4
|   |   | | | |-CompoundStmt 0x7fa81d1f7180 <col:21, line:1053:5>
|   |   | | | | |-DeclStmt 0x7fa81d1f6ba0 <line:1050:7, col:53>
|   |   | | | | | `-VarDecl 0x7fa81d1f6a20 <col:7, col:52> col:22 used __a 'const uint32_t':'const unsigned int' cinit
|   |   | | | | |   `-CallExpr 0x7fa81d1f6ae8 <col:28, col:52> 'unsigned int':'unsigned int'
|   |   | | | | |     |-ImplicitCastExpr 0x7fa81d1f6ad0 <col:28> 'unsigned int (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 0x7fa81d1f6a80 <col:28> 'unsigned int (const void *)' lvalue Function 0x7fa81d192590 '__loadword' 'unsigned int (const void *)'
|   |   | | | | |     `-ImplicitCastExpr 0x7fa81d1f6b30 <col:49> 'const void *' <BitCast>
|   |   | | | | |       `-ImplicitCastExpr 0x7fa81d1f6b18 <col:49> 'const char *' <LValueToRValue>
|   |   | | | | |         `-DeclRefExpr 0x7fa81d1f6aa8 <col:49> 'const char *' lvalue ParmVar 0x7fa81c810fa8 '__s' 'const char *'
|   |   | | | | |-DeclStmt 0x7fa81d1f6f78 <line:1051:7, col:65>
|   |   | | | | | `-VarDecl 0x7fa81d1f6bb8 <col:7, col:64> col:22 used __b 'const uint32_t':'const unsigned int' cinit
|   |   | | | | |   `-CallExpr 0x7fa81d1f6ed8 <col:28, col:64> 'unsigned int':'unsigned int'
|   |   | | | | |     |-ImplicitCastExpr 0x7fa81d1f6ec0 <col:28, col:47> 'unsigned int (*)(const void *)' <FunctionToPointerDecay>
|   |   | | | | |     | `-DeclRefExpr 0x7fa81d1f6e50 <col:28, col:47> 'unsigned int (const void *)' lvalue Function 0x7fa81d192590 '__loadword' 'unsigned int (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | | | |     `-ImplicitCastExpr 0x7fa81d1f6f08 <col:49, col:63> 'const void *' <BitCast>
|   |   | | | | |       `-BinaryOperator 0x7fa81d1f6d58 <col:49, col:63> 'const char *' '-'
|   |   | | | | |         |-BinaryOperator 0x7fa81d1f6d30 <col:49, col:55> 'const char *' '+'
|   |   | | | | |         | |-ImplicitCastExpr 0x7fa81d1f6d00 <col:49> 'const char *' <LValueToRValue>
|   |   | | | | |         | | `-DeclRefExpr 0x7fa81d1f6cb0 <col:49> 'const char *' lvalue ParmVar 0x7fa81c810fa8 '__s' 'const char *'
|   |   | | | | |         | `-ImplicitCastExpr 0x7fa81d1f6d18 <col:55> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |         |   `-DeclRefExpr 0x7fa81d1f6cd8 <col:55> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |         `-IntegerLiteral 0x7fa81d1929b8 <col:63> 'int' 4
|   |   | | | | `-ReturnStmt 0x7fa81d1f7168 <line:1052:7, col:51>
|   |   | | | |   `-CallExpr 0x7fa81d1f7100 <col:14, col:51> 'unsigned long':'unsigned long'
|   |   | | | |     |-ImplicitCastExpr 0x7fa81d1f70e8 <col:14> 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | | | |     | `-DeclRefExpr 0x7fa81d1f6f90 <col:14> 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c810e70 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | | | |     |-BinaryOperator 0x7fa81d1f7098 <col:28, col:45> 'unsigned long' '+'
|   |   | | | |     | |-ImplicitCastExpr 0x7fa81d1f7068 <col:28> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     | | `-DeclRefExpr 0x7fa81d1f6fb8 <col:28> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | |     | `-ImplicitCastExpr 0x7fa81d1f7080 <col:36, col:45> 'unsigned long' <IntegralCast>
|   |   | | | |     |   `-ParenExpr 0x7fa81d1f7048 <col:36, col:45> 'uint32_t':'unsigned int'
|   |   | | | |     |     `-BinaryOperator 0x7fa81d1f7020 <col:37, col:44> 'uint32_t':'unsigned int' '<<'
|   |   | | | |     |       |-ImplicitCastExpr 0x7fa81d1f7008 <col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | | | |     |       | `-DeclRefExpr 0x7fa81d1f6fe0 <col:37> 'const uint32_t':'const unsigned int' lvalue Var 0x7fa81d1f6a20 '__a' 'const uint32_t':'const unsigned int'
|   |   | | | |     |       `-IntegerLiteral 0x7fa81d192ac0 <col:44> 'int' 3
|   |   | | | |     `-ImplicitCastExpr 0x7fa81d1f7150 <col:48> 'unsigned long':'unsigned long' <IntegralCast>
|   |   | | | |       `-ImplicitCastExpr 0x7fa81d1f7138 <col:48> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | | | |         `-DeclRefExpr 0x7fa81d1f70c0 <col:48> 'const uint32_t':'const unsigned int' lvalue Var 0x7fa81d1f6bb8 '__b' 'const uint32_t':'const unsigned int'
|   |   | | | `-<<<NULL>>>
|   |   | | |-IfStmt 0x7fa81d1f7f48 <line:1054:5, line:1062:5>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-<<<NULL>>>
|   |   | | | |-BinaryOperator 0x7fa81d1f7298 <line:1054:9, col:17> '_Bool' '>'
|   |   | | | | |-ImplicitCastExpr 0x7fa81d1f7268 <col:9> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x7fa81d1f7240 <col:9> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | | `-ImplicitCastExpr 0x7fa81d1f7280 <col:17> 'unsigned long' <IntegralCast>
|   |   | | | |   `-IntegerLiteral 0x7fa81d192c70 <col:17> 'int' 0
|   |   | | | |-CompoundStmt 0x7fa81d1f7f00 <col:20, line:1062:5>
|   |   | | | | |-DeclStmt 0x7fa81d1f7410 <line:1055:7, col:39>
|   |   | | | | | `-VarDecl 0x7fa81d1f72c0 <col:7, col:38> col:27 used __a 'const unsigned char' cinit
|   |   | | | | |   `-ImplicitCastExpr 0x7fa81d1f73a0 <col:33, col:38> 'const unsigned char' <IntegralCast>
|   |   | | | | |     `-ImplicitCastExpr 0x7fa81d1f7388 <col:33, col:38> 'char' <LValueToRValue>
|   |   | | | | |       `-ArraySubscriptExpr 0x7fa81d1f7360 <col:33, col:38> 'const char' lvalue
|   |   | | | | |         |-ImplicitCastExpr 0x7fa81d1f7348 <col:33> 'const char *' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 0x7fa81d1f7320 <col:33> 'const char *' lvalue ParmVar 0x7fa81c810fa8 '__s' 'const char *'
|   |   | | | | |         `-IntegerLiteral 0x7fa81d192dd0 <col:37> 'int' 0
|   |   | | | | |-DeclStmt 0x7fa81d1f75e0 <line:1056:7, col:48>
|   |   | | | | | `-VarDecl 0x7fa81d1f7428 <col:7, col:47> col:27 used __b 'const unsigned char' cinit
|   |   | | | | |   `-ImplicitCastExpr 0x7fa81d1f7570 <col:33, col:47> 'const unsigned char' <IntegralCast>
|   |   | | | | |     `-ImplicitCastExpr 0x7fa81d1f7558 <col:33, col:47> 'char' <LValueToRValue>
|   |   | | | | |       `-ArraySubscriptExpr 0x7fa81d1f7530 <col:33, col:47> 'const char' lvalue
|   |   | | | | |         |-ImplicitCastExpr 0x7fa81d1f7518 <col:33> 'const char *' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 0x7fa81d1f7488 <col:33> 'const char *' lvalue ParmVar 0x7fa81c810fa8 '__s' 'const char *'
|   |   | | | | |         `-BinaryOperator 0x7fa81d1f74f0 <col:37, col:46> 'unsigned long':'unsigned long' '>>'
|   |   | | | | |           |-ImplicitCastExpr 0x7fa81d1f74d8 <col:37> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |           | `-DeclRefExpr 0x7fa81d1f74b0 <col:37> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |           `-IntegerLiteral 0x7fa81d192f40 <col:46> 'int' 1
|   |   | | | | |-DeclStmt 0x7fa81d1f77c8 <line:1057:7, col:47>
|   |   | | | | | `-VarDecl 0x7fa81d1f75f8 <col:7, col:46> col:27 used __c 'const unsigned char' cinit
|   |   | | | | |   `-ImplicitCastExpr 0x7fa81d1f7758 <col:33, col:46> 'const unsigned char' <IntegralCast>
|   |   | | | | |     `-ImplicitCastExpr 0x7fa81d1f7740 <col:33, col:46> 'char' <LValueToRValue>
|   |   | | | | |       `-ArraySubscriptExpr 0x7fa81d1f7718 <col:33, col:46> 'const char' lvalue
|   |   | | | | |         |-ImplicitCastExpr 0x7fa81d1f7700 <col:33> 'const char *' <LValueToRValue>
|   |   | | | | |         | `-DeclRefExpr 0x7fa81d1f7658 <col:33> 'const char *' lvalue ParmVar 0x7fa81c810fa8 '__s' 'const char *'
|   |   | | | | |         `-BinaryOperator 0x7fa81d1f76d8 <col:37, col:45> 'unsigned long' '-'
|   |   | | | | |           |-ImplicitCastExpr 0x7fa81d1f76a8 <col:37> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |           | `-DeclRefExpr 0x7fa81d1f7680 <col:37> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |           `-ImplicitCastExpr 0x7fa81d1f76c0 <col:45> 'unsigned long' <IntegralCast>
|   |   | | | | |             `-IntegerLiteral 0x7fa81d193090 <col:45> 'int' 1
|   |   | | | | |-DeclStmt 0x7fa81d1f7a18 <line:1058:7, line:1059:61>
|   |   | | | | | `-VarDecl 0x7fa81d1f77e0 <line:1058:7, line:1059:60> line:1058:22 used __y 'const uint32_t':'const unsigned int' cinit
|   |   | | | | |   `-BinaryOperator 0x7fa81d1f7998 <col:28, line:1059:60> 'unsigned int' '+'
|   |   | | | | |     |-CXXStaticCastExpr 0x7fa81d1f7898 <line:1058:28, col:53> 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   |   | | | | |     | `-ImplicitCastExpr 0x7fa81d1f7880 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
|   |   | | | | |     |   `-ImplicitCastExpr 0x7fa81d1f7868 <col:50> 'unsigned char' <LValueToRValue>
|   |   | | | | |     |     `-DeclRefExpr 0x7fa81d1f7840 <col:50> 'const unsigned char' lvalue Var 0x7fa81d1f72c0 '__a' 'const unsigned char'
|   |   | | | | |     `-ParenExpr 0x7fa81d1f7978 <line:1059:28, col:60> 'uint32_t':'unsigned int'
|   |   | | | | |       `-BinaryOperator 0x7fa81d1f7950 <col:29, col:59> 'uint32_t':'unsigned int' '<<'
|   |   | | | | |         |-CXXStaticCastExpr 0x7fa81d1f7920 <col:29, col:54> 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   |   | | | | |         | `-ImplicitCastExpr 0x7fa81d1f7908 <col:51> 'uint32_t':'unsigned int' <IntegralCast>
|   |   | | | | |         |   `-ImplicitCastExpr 0x7fa81d1f78f0 <col:51> 'unsigned char' <LValueToRValue>
|   |   | | | | |         |     `-DeclRefExpr 0x7fa81d1f78c8 <col:51> 'const unsigned char' lvalue Var 0x7fa81d1f7428 '__b' 'const unsigned char'
|   |   | | | | |         `-IntegerLiteral 0x7fa81d1932b8 <col:59> 'int' 8
|   |   | | | | |-DeclStmt 0x7fa81d1f7c50 <line:1060:7, col:69>
|   |   | | | | | `-VarDecl 0x7fa81d1f7a30 <col:7, col:68> col:22 used __z 'const uint32_t':'const unsigned int' cinit
|   |   | | | | |   `-ImplicitCastExpr 0x7fa81d1f7be0 <col:28, col:68> 'const uint32_t':'const unsigned int' <IntegralCast>
|   |   | | | | |     `-BinaryOperator 0x7fa81d1f7bb8 <col:28, col:68> 'unsigned long' '+'
|   |   | | | | |       |-ImplicitCastExpr 0x7fa81d1f7b88 <col:28> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | | |       | `-DeclRefExpr 0x7fa81d1f7a90 <col:28> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811018 '__len' 'unsigned long':'unsigned long'
|   |   | | | | |       `-ImplicitCastExpr 0x7fa81d1f7ba0 <col:36, col:68> 'unsigned long' <IntegralCast>
|   |   | | | | |         `-ParenExpr 0x7fa81d1f7b68 <col:36, col:68> 'uint32_t':'unsigned int'
|   |   | | | | |           `-BinaryOperator 0x7fa81d1f7b40 <col:37, col:67> 'uint32_t':'unsigned int' '<<'
|   |   | | | | |             |-CXXStaticCastExpr 0x7fa81d1f7b10 <col:37, col:62> 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   |   | | | | |             | `-ImplicitCastExpr 0x7fa81d1f7af8 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
|   |   | | | | |             |   `-ImplicitCastExpr 0x7fa81d1f7ae0 <col:59> 'unsigned char' <LValueToRValue>
|   |   | | | | |             |     `-DeclRefExpr 0x7fa81d1f7ab8 <col:59> 'const unsigned char' lvalue Var 0x7fa81d1f75f8 '__c' 'const unsigned char'
|   |   | | | | |             `-IntegerLiteral 0x7fa81d193490 <col:67> 'int' 2
|   |   | | | | `-ReturnStmt 0x7fa81d1f7ee8 <line:1061:7, col:53>
|   |   | | | |   `-BinaryOperator 0x7fa81d1f7ec0 <col:14, col:53> 'unsigned long' '*'
|   |   | | | |     |-CallExpr 0x7fa81d1f7e50 <col:14, col:49> 'unsigned long':'unsigned long'
|   |   | | | |     | |-ImplicitCastExpr 0x7fa81d1f7e38 <col:14> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   | | | |     | | `-DeclRefExpr 0x7fa81d1f7c68 <col:14> 'unsigned long (unsigned long)' lvalue CXXMethod 0x7fa81c810c30 '__shift_mix' 'unsigned long (unsigned long)'
|   |   | | | |     | `-BinaryOperator 0x7fa81d1f7e10 <col:26, col:45> 'unsigned long' '^'
|   |   | | | |     |   |-BinaryOperator 0x7fa81d1f7d28 <col:26, col:32> 'unsigned long' '*'
|   |   | | | |     |   | |-ImplicitCastExpr 0x7fa81d1f7d10 <col:26> 'unsigned long' <IntegralCast>
|   |   | | | |     |   | | `-ImplicitCastExpr 0x7fa81d1f7ce0 <col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | | | |     |   | |   `-DeclRefExpr 0x7fa81d1f7c90 <col:26> 'const uint32_t':'const unsigned int' lvalue Var 0x7fa81d1f77e0 '__y' 'const uint32_t':'const unsigned int'
|   |   | | | |     |   | `-ImplicitCastExpr 0x7fa81d1f7cf8 <col:32> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |   |   `-DeclRefExpr 0x7fa81d1f7cb8 <col:32> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8105a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | | | |     |   `-BinaryOperator 0x7fa81d1f7de8 <col:39, col:45> 'unsigned long' '*'
|   |   | | | |     |     |-ImplicitCastExpr 0x7fa81d1f7dd0 <col:39> 'unsigned long' <IntegralCast>
|   |   | | | |     |     | `-ImplicitCastExpr 0x7fa81d1f7da0 <col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | | | |     |     |   `-DeclRefExpr 0x7fa81d1f7d50 <col:39> 'const uint32_t':'const unsigned int' lvalue Var 0x7fa81d1f7a30 '__z' 'const uint32_t':'const unsigned int'
|   |   | | | |     |     `-ImplicitCastExpr 0x7fa81d1f7db8 <col:45> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |     |       `-DeclRefExpr 0x7fa81d1f7d78 <col:45> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c810690 '__k3' 'const unsigned long':'const unsigned long'
|   |   | | | |     `-ImplicitCastExpr 0x7fa81d1f7ea8 <col:53> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 0x7fa81d1f7e80 <col:53> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8105a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | | | `-<<<NULL>>>
|   |   | | `-ReturnStmt 0x7fa81d1f7fc0 <line:1063:5, col:12>
|   |   | |   `-ImplicitCastExpr 0x7fa81d1f7fa8 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x7fa81d1f7f80 <col:12> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8105a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | `-NoSanitizeAttr 0x7fa81c8111a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl 0x7fa81c811328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1066:3, line:1075:3> line:1066:16 used __hash_len_17_to_32 'unsigned long (const char *, unsigned long)' static
|   |   | |-ParmVarDecl 0x7fa81c811228 <col:36, col:48> col:48 used __s 'const char *'
|   |   | |-ParmVarDecl 0x7fa81c811298 <col:53, col:59> col:59 used __len 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt 0x7fa81d1fab18 <line:1068:3, line:1075:3>
|   |   | | |-DeclStmt 0x7fa81d1f9960 <line:1069:5, col:52>
|   |   | | | `-VarDecl 0x7fa81d1f95b8 <col:5, col:48> col:17 used __a 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1f98e0 <col:23, col:48> 'unsigned long' '*'
|   |   | | |     |-CallExpr 0x7fa81d1f9840 <col:23, col:44> 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 0x7fa81d1f9828 <col:23, col:39> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 0x7fa81d1f97b8 <col:23, col:39> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 0x7fa81d1f9888 <col:41> 'const void *' <BitCast>
|   |   | | |     |   `-ImplicitCastExpr 0x7fa81d1f9870 <col:41> 'const char *' <LValueToRValue>
|   |   | | |     |     `-DeclRefExpr 0x7fa81d1f96c0 <col:41> 'const char *' lvalue ParmVar 0x7fa81c811228 '__s' 'const char *'
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1f98c8 <col:48> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1f98a0 <col:48> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8104b0 '__k1' 'const unsigned long':'const unsigned long'
|   |   | | |-DeclStmt 0x7fa81d1f9cf0 <line:1070:5, col:49>
|   |   | | | `-VarDecl 0x7fa81d1f9988 <col:5, col:48> col:17 used __b 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-CallExpr 0x7fa81d1f9c50 <col:23, col:48> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1f9c38 <col:23, col:39> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1f9bc8 <col:23, col:39> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1f9c80 <col:41, col:47> 'const void *' <BitCast>
|   |   | | |       `-BinaryOperator 0x7fa81d1f9ad0 <col:41, col:47> 'const char *' '+'
|   |   | | |         |-ImplicitCastExpr 0x7fa81d1f9ab8 <col:41> 'const char *' <LValueToRValue>
|   |   | | |         | `-DeclRefExpr 0x7fa81d1f9a90 <col:41> 'const char *' lvalue ParmVar 0x7fa81c811228 '__s' 'const char *'
|   |   | | |         `-IntegerLiteral 0x7fa81d193b20 <col:47> 'int' 8
|   |   | | |-DeclStmt 0x7fa81d1fa150 <line:1071:5, col:64>
|   |   | | | `-VarDecl 0x7fa81d1f9d18 <col:5, col:60> col:17 used __c 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fa0d0 <col:23, col:60> 'unsigned long' '*'
|   |   | | |     |-CallExpr 0x7fa81d1fa048 <col:23, col:56> 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 0x7fa81d1fa030 <col:23, col:39> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 0x7fa81d1f9fc0 <col:23, col:39> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 0x7fa81d1fa078 <col:41, col:55> 'const void *' <BitCast>
|   |   | | |     |   `-BinaryOperator 0x7fa81d1f9ec8 <col:41, col:55> 'const char *' '-'
|   |   | | |     |     |-BinaryOperator 0x7fa81d1f9ea0 <col:41, col:47> 'const char *' '+'
|   |   | | |     |     | |-ImplicitCastExpr 0x7fa81d1f9e70 <col:41> 'const char *' <LValueToRValue>
|   |   | | |     |     | | `-DeclRefExpr 0x7fa81d1f9e20 <col:41> 'const char *' lvalue ParmVar 0x7fa81c811228 '__s' 'const char *'
|   |   | | |     |     | `-ImplicitCastExpr 0x7fa81d1f9e88 <col:47> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     |   `-DeclRefExpr 0x7fa81d1f9e48 <col:47> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811298 '__len' 'unsigned long':'unsigned long'
|   |   | | |     |     `-IntegerLiteral 0x7fa81d193d58 <col:55> 'int' 8
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fa0b8 <col:60> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1fa090 <col:60> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8105a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | | |-DeclStmt 0x7fa81d1fa5b0 <line:1072:5, col:65>
|   |   | | | `-VarDecl 0x7fa81d1fa178 <col:5, col:61> col:17 used __d 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fa530 <col:23, col:61> 'unsigned long' '*'
|   |   | | |     |-CallExpr 0x7fa81d1fa4a8 <col:23, col:57> 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 0x7fa81d1fa490 <col:23, col:39> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 0x7fa81d1fa420 <col:23, col:39> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 0x7fa81d1fa4d8 <col:41, col:55> 'const void *' <BitCast>
|   |   | | |     |   `-BinaryOperator 0x7fa81d1fa328 <col:41, col:55> 'const char *' '-'
|   |   | | |     |     |-BinaryOperator 0x7fa81d1fa300 <col:41, col:47> 'const char *' '+'
|   |   | | |     |     | |-ImplicitCastExpr 0x7fa81d1fa2d0 <col:41> 'const char *' <LValueToRValue>
|   |   | | |     |     | | `-DeclRefExpr 0x7fa81d1fa280 <col:41> 'const char *' lvalue ParmVar 0x7fa81c811228 '__s' 'const char *'
|   |   | | |     |     | `-ImplicitCastExpr 0x7fa81d1fa2e8 <col:47> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |     |   `-DeclRefExpr 0x7fa81d1fa2a8 <col:47> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811298 '__len' 'unsigned long':'unsigned long'
|   |   | | |     |     `-IntegerLiteral 0x7fa81d193fc8 <col:55> 'int' 16
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fa518 <col:61> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1fa4f0 <col:61> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8103c0 '__k0' 'const unsigned long':'const unsigned long'
|   |   | | `-ReturnStmt 0x7fa81d1fab00 <line:1073:5, line:1074:70>
|   |   | |   `-CallExpr 0x7fa81d1faac8 <line:1073:12, line:1074:70> 'unsigned long':'unsigned long'
|   |   | |     |-ImplicitCastExpr 0x7fa81d1faab0 <line:1073:12> 'unsigned long (*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x7fa81d1fa5c8 <col:12> 'unsigned long (unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c810e70 '__hash_len_16' 'unsigned long (unsigned long, unsigned long)'
|   |   | |     |-BinaryOperator 0x7fa81d1fa830 <col:26, col:72> 'unsigned long' '+'
|   |   | |     | |-BinaryOperator 0x7fa81d1fa7c8 <col:26, col:68> 'unsigned long' '+'
|   |   | |     | | |-CallExpr 0x7fa81d1fa6d8 <col:26, col:48> 'unsigned long':'unsigned long'
|   |   | |     | | | |-ImplicitCastExpr 0x7fa81d1fa6c0 <col:26> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | |     | | | | `-DeclRefExpr 0x7fa81d1fa5f0 <col:26> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | |     | | | |-BinaryOperator 0x7fa81d1fa698 <col:35, col:41> 'unsigned long' '-'
|   |   | |     | | | | |-ImplicitCastExpr 0x7fa81d1fa668 <col:35> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | | | | | `-DeclRefExpr 0x7fa81d1fa618 <col:35> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f95b8 '__a' 'const unsigned long':'const unsigned long'
|   |   | |     | | | | `-ImplicitCastExpr 0x7fa81d1fa680 <col:41> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | | | |   `-DeclRefExpr 0x7fa81d1fa640 <col:41> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f9988 '__b' 'const unsigned long':'const unsigned long'
|   |   | |     | | | `-IntegerLiteral 0x7fa81d194170 <col:46> 'int' 43
|   |   | |     | | `-CallExpr 0x7fa81d1fa778 <col:52, col:68> 'unsigned long':'unsigned long'
|   |   | |     | |   |-ImplicitCastExpr 0x7fa81d1fa760 <col:52> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | |     | |   | `-DeclRefExpr 0x7fa81d1fa710 <col:52> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | |     | |   |-ImplicitCastExpr 0x7fa81d1fa7b0 <col:61> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     | |   | `-DeclRefExpr 0x7fa81d1fa738 <col:61> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f9d18 '__c' 'const unsigned long':'const unsigned long'
|   |   | |     | |   `-IntegerLiteral 0x7fa81d194218 <col:66> 'int' 30
|   |   | |     | `-ImplicitCastExpr 0x7fa81d1fa818 <col:72> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x7fa81d1fa7f0 <col:72> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1fa178 '__d' 'const unsigned long':'const unsigned long'
|   |   | |     `-BinaryOperator 0x7fa81d1faa88 <line:1074:26, col:65> 'unsigned long' '+'
|   |   | |       |-BinaryOperator 0x7fa81d1faa20 <col:26, col:59> 'unsigned long' '-'
|   |   | |       | |-BinaryOperator 0x7fa81d1fa9b8 <col:26, col:55> 'unsigned long' '+'
|   |   | |       | | |-ImplicitCastExpr 0x7fa81d1fa9a0 <col:26> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       | | | `-DeclRefExpr 0x7fa81d1fa858 <col:26> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f95b8 '__a' 'const unsigned long':'const unsigned long'
|   |   | |       | | `-CallExpr 0x7fa81d1fa968 <col:32, col:55> 'unsigned long':'unsigned long'
|   |   | |       | |   |-ImplicitCastExpr 0x7fa81d1fa950 <col:32> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | |       | |   | `-DeclRefExpr 0x7fa81d1fa880 <col:32> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | |       | |   |-BinaryOperator 0x7fa81d1fa928 <col:41, col:47> 'unsigned long' '^'
|   |   | |       | |   | |-ImplicitCastExpr 0x7fa81d1fa8f8 <col:41> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       | |   | | `-DeclRefExpr 0x7fa81d1fa8a8 <col:41> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f9988 '__b' 'const unsigned long':'const unsigned long'
|   |   | |       | |   | `-ImplicitCastExpr 0x7fa81d1fa910 <col:47> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       | |   |   `-DeclRefExpr 0x7fa81d1fa8d0 <col:47> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c810690 '__k3' 'const unsigned long':'const unsigned long'
|   |   | |       | |   `-IntegerLiteral 0x7fa81d1943b0 <col:53> 'int' 20
|   |   | |       | `-ImplicitCastExpr 0x7fa81d1faa08 <col:59> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       |   `-DeclRefExpr 0x7fa81d1fa9e0 <col:59> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d1f9d18 '__c' 'const unsigned long':'const unsigned long'
|   |   | |       `-ImplicitCastExpr 0x7fa81d1faa70 <col:65> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x7fa81d1faa48 <col:65> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811298 '__len' 'unsigned long':'unsigned long'
|   |   | `-NoSanitizeAttr 0x7fa81c8113e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl 0x7fa81c806200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1079:3, line:1090:3> line:1079:29 used __weak_hash_len_32_with_seeds 'pair<unsigned long, unsigned long> (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)' static
|   |   | |-ParmVarDecl 0x7fa81c811620 <line:1080:7, col:13> col:13 used __w 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c811690 <col:18, col:24> col:24 used __x 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c811700 <col:29, col:35> col:35 used __y 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c811770 <col:40, col:46> col:46 used __z 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c8117e0 <col:51, col:57> col:57 used __a 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c811850 <col:62, col:68> col:68 used __b 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt 0x7fa81d208d78 <line:1082:3, line:1090:3>
|   |   | | |-CompoundAssignOperator 0x7fa81d201230 <line:1083:5, col:12> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d2011c8 <col:5> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8117e0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x7fa81d201218 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x7fa81d2011f0 <col:12> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811620 '__w' 'unsigned long':'unsigned long'
|   |   | | |-BinaryOperator 0x7fa81d202018 <line:1084:5, col:39> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 0x7fa81d201268 <col:5> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811850 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d2013e0 <col:11, col:39> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d2013c8 <col:11> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d201290 <col:11> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-BinaryOperator 0x7fa81d2013a0 <col:20, col:32> 'unsigned long' '+'
|   |   | | |   | |-BinaryOperator 0x7fa81d201338 <col:20, col:26> 'unsigned long' '+'
|   |   | | |   | | |-ImplicitCastExpr 0x7fa81d201308 <col:20> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | | | `-DeclRefExpr 0x7fa81d2012b8 <col:20> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811850 '__b' 'unsigned long':'unsigned long'
|   |   | | |   | | `-ImplicitCastExpr 0x7fa81d201320 <col:26> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | |   `-DeclRefExpr 0x7fa81d2012e0 <col:26> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8117e0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   | `-ImplicitCastExpr 0x7fa81d201388 <col:32> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 0x7fa81d201360 <col:32> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811770 '__z' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 0x7fa81d194710 <col:37> 'int' 21
|   |   | | |-DeclStmt 0x7fa81d202148 <line:1085:5, col:26>
|   |   | | | `-VarDecl 0x7fa81d202050 <col:5, col:23> col:17 used __c 'const unsigned long':'const unsigned long' cinit
|   |   | | |   `-ImplicitCastExpr 0x7fa81d2020d8 <col:23> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x7fa81d2020b0 <col:23> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8117e0 '__a' 'unsigned long':'unsigned long'
|   |   | | |-CompoundAssignOperator 0x7fa81d2021c8 <line:1086:5, col:12> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d202160 <col:5> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8117e0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x7fa81d2021b0 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x7fa81d202188 <col:12> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811690 '__x' 'unsigned long':'unsigned long'
|   |   | | |-CompoundAssignOperator 0x7fa81d202268 <line:1087:5, col:12> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d202200 <col:5> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8117e0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x7fa81d202250 <col:12> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x7fa81d202228 <col:12> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811700 '__y' 'unsigned long':'unsigned long'
|   |   | | |-CompoundAssignOperator 0x7fa81d202380 <line:1088:5, col:28> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d2022a0 <col:5> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811850 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d202330 <col:12, col:28> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d202318 <col:12> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d2022c8 <col:12> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d202368 <col:21> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x7fa81d2022f0 <col:21> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8117e0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 0x7fa81d1949c8 <col:26> 'int' 44
|   |   | | `-ReturnStmt 0x7fa81d208d60 <line:1089:5, col:51>
|   |   | |   `-ExprWithCleanups 0x7fa81d208d48 <col:12, col:51> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |     `-CXXConstructExpr 0x7fa81d208d10 <col:12, col:51> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' elidable
|   |   | |       `-MaterializeTemporaryExpr 0x7fa81d208cf8 <col:12, col:51> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | |         `-CXXTemporaryObjectExpr 0x7fa81d207318 <col:12, col:51> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (unsigned long &&, unsigned long &&)'
|   |   | |           |-MaterializeTemporaryExpr 0x7fa81d205918 <col:31, col:37> 'unsigned long':'unsigned long' xvalue
|   |   | |           | `-BinaryOperator 0x7fa81d202508 <col:31, col:37> 'unsigned long' '+'
|   |   | |           |   |-ImplicitCastExpr 0x7fa81d2024d8 <col:31> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |           |   | `-DeclRefExpr 0x7fa81d202488 <col:31> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8117e0 '__a' 'unsigned long':'unsigned long'
|   |   | |           |   `-ImplicitCastExpr 0x7fa81d2024f0 <col:37> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |           |     `-DeclRefExpr 0x7fa81d2024b0 <col:37> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811770 '__z' 'unsigned long':'unsigned long'
|   |   | |           `-MaterializeTemporaryExpr 0x7fa81d205930 <col:42, col:48> 'unsigned long':'unsigned long' xvalue
|   |   | |             `-BinaryOperator 0x7fa81d2025b0 <col:42, col:48> 'unsigned long' '+'
|   |   | |               |-ImplicitCastExpr 0x7fa81d202580 <col:42> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |               | `-DeclRefExpr 0x7fa81d202530 <col:42> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c811850 '__b' 'unsigned long':'unsigned long'
|   |   | |               `-ImplicitCastExpr 0x7fa81d202598 <col:48> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |                 `-DeclRefExpr 0x7fa81d202558 <col:48> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81d202050 '__c' 'const unsigned long':'const unsigned long'
|   |   | `-NoSanitizeAttr 0x7fa81c8062d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl 0x7fa81c806628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1093:3, line:1103:3> line:1093:29 used __weak_hash_len_32_with_seeds 'pair<unsigned long, unsigned long> (const char *, unsigned long, unsigned long)' static
|   |   | |-ParmVarDecl 0x7fa81c8063e0 <line:1094:7, col:19> col:19 used __s 'const char *'
|   |   | |-ParmVarDecl 0x7fa81c806450 <col:24, col:30> col:30 used __a 'unsigned long':'unsigned long'
|   |   | |-ParmVarDecl 0x7fa81c8064c0 <col:35, col:41> col:41 used __b 'unsigned long':'unsigned long'
|   |   | |-CompoundStmt 0x7fa81d2011a8 <line:1096:3, line:1103:3>
|   |   | | `-ReturnStmt 0x7fa81d201190 <line:1097:5, line:1102:45>
|   |   | |   `-ExprWithCleanups 0x7fa81d201178 <line:1097:12, line:1102:45> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |     `-CXXConstructExpr 0x7fa81d201140 <line:1097:12, line:1102:45> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' 'void (struct std::__1::pair<unsigned long, unsigned long> &&) noexcept' elidable
|   |   | |       `-MaterializeTemporaryExpr 0x7fa81d201128 <line:1097:12, line:1102:45> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>' xvalue
|   |   | |         `-CallExpr 0x7fa81d1ff700 <line:1097:12, line:1102:45> 'pair<unsigned long, unsigned long>':'struct std::__1::pair<unsigned long, unsigned long>'
|   |   | |           |-ImplicitCastExpr 0x7fa81d1ff6e8 <line:1097:12> 'pair<unsigned long, unsigned long> (*)(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   | |           | `-DeclRefExpr 0x7fa81d1ff668 <col:12> 'pair<unsigned long, unsigned long> (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)' lvalue CXXMethod 0x7fa81c806200 '__weak_hash_len_32_with_seeds' 'pair<unsigned long, unsigned long> (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)'
|   |   | |           |-CallExpr 0x7fa81d1feda8 <col:42, col:63> 'unsigned long':'unsigned long'
|   |   | |           | |-ImplicitCastExpr 0x7fa81d1fed90 <col:42, col:58> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | |           | | `-DeclRefExpr 0x7fa81d1fed20 <col:42, col:58> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | |           | `-ImplicitCastExpr 0x7fa81d1fedf0 <col:60> 'const void *' <BitCast>
|   |   | |           |   `-ImplicitCastExpr 0x7fa81d1fedd8 <col:60> 'const char *' <LValueToRValue>
|   |   | |           |     `-DeclRefExpr 0x7fa81d1fec28 <col:60> 'const char *' lvalue ParmVar 0x7fa81c8063e0 '__s' 'const char *'
|   |   | |           |-CallExpr 0x7fa81d1ff070 <line:1098:42, col:67> 'unsigned long':'unsigned long'
|   |   | |           | |-ImplicitCastExpr 0x7fa81d1ff058 <col:42, col:58> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | |           | | `-DeclRefExpr 0x7fa81d1fefe8 <col:42, col:58> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | |           | `-ImplicitCastExpr 0x7fa81d1ff0a0 <col:60, col:66> 'const void *' <BitCast>
|   |   | |           |   `-BinaryOperator 0x7fa81d1feef0 <col:60, col:66> 'const char *' '+'
|   |   | |           |     |-ImplicitCastExpr 0x7fa81d1feed8 <col:60> 'const char *' <LValueToRValue>
|   |   | |           |     | `-DeclRefExpr 0x7fa81d1feeb0 <col:60> 'const char *' lvalue ParmVar 0x7fa81c8063e0 '__s' 'const char *'
|   |   | |           |     `-IntegerLiteral 0x7fa81d194f30 <col:66> 'int' 8
|   |   | |           |-CallExpr 0x7fa81d1ff320 <line:1099:42, col:68> 'unsigned long':'unsigned long'
|   |   | |           | |-ImplicitCastExpr 0x7fa81d1ff308 <col:42, col:58> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | |           | | `-DeclRefExpr 0x7fa81d1ff298 <col:42, col:58> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | |           | `-ImplicitCastExpr 0x7fa81d1ff350 <col:60, col:66> 'const void *' <BitCast>
|   |   | |           |   `-BinaryOperator 0x7fa81d1ff1a0 <col:60, col:66> 'const char *' '+'
|   |   | |           |     |-ImplicitCastExpr 0x7fa81d1ff188 <col:60> 'const char *' <LValueToRValue>
|   |   | |           |     | `-DeclRefExpr 0x7fa81d1ff160 <col:60> 'const char *' lvalue ParmVar 0x7fa81c8063e0 '__s' 'const char *'
|   |   | |           |     `-IntegerLiteral 0x7fa81d195090 <col:66> 'int' 16
|   |   | |           |-CallExpr 0x7fa81d1ff5d0 <line:1100:42, col:68> 'unsigned long':'unsigned long'
|   |   | |           | |-ImplicitCastExpr 0x7fa81d1ff5b8 <col:42, col:58> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | |           | | `-DeclRefExpr 0x7fa81d1ff548 <col:42, col:58> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | |           | `-ImplicitCastExpr 0x7fa81d1ff600 <col:60, col:66> 'const void *' <BitCast>
|   |   | |           |   `-BinaryOperator 0x7fa81d1ff450 <col:60, col:66> 'const char *' '+'
|   |   | |           |     |-ImplicitCastExpr 0x7fa81d1ff438 <col:60> 'const char *' <LValueToRValue>
|   |   | |           |     | `-DeclRefExpr 0x7fa81d1ff410 <col:60> 'const char *' lvalue ParmVar 0x7fa81c8063e0 '__s' 'const char *'
|   |   | |           |     `-IntegerLiteral 0x7fa81d1951f0 <col:66> 'int' 24
|   |   | |           |-ImplicitCastExpr 0x7fa81d1ff758 <line:1101:42> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |           | `-DeclRefExpr 0x7fa81d1ff618 <col:42> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c806450 '__a' 'unsigned long':'unsigned long'
|   |   | |           `-ImplicitCastExpr 0x7fa81d1ff770 <line:1102:42> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |             `-DeclRefExpr 0x7fa81d1ff640 <col:42> 'unsigned long':'unsigned long' lvalue ParmVar 0x7fa81c8064c0 '__b' 'unsigned long':'unsigned long'
|   |   | `-NoSanitizeAttr 0x7fa81c8066e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXMethodDecl 0x7fa81c8068a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1106:3, line:1130:3> line:1106:16 used __hash_len_33_to_64 'unsigned long (const char *, size_t)' static
|   |   | |-ParmVarDecl 0x7fa81c806768 <col:36, col:48> col:48 used __s 'const char *'
|   |   | |-ParmVarDecl 0x7fa81c8067c8 <col:53, col:60> col:60 used __len 'size_t':'unsigned long'
|   |   | |-CompoundStmt 0x7fa81d1fe038 <line:1108:3, line:1130:3>
|   |   | | |-DeclStmt 0x7fa81d1fae78 <line:1109:5, col:44>
|   |   | | | `-VarDecl 0x7fa81d1fab68 <col:5, col:43> col:11 used __z 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 0x7fa81d1fae30 <col:17, col:43> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fae18 <col:17, col:33> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fada8 <col:17, col:33> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fae60 <col:35, col:41> 'const void *' <BitCast>
|   |   | | |       `-BinaryOperator 0x7fa81d1facb0 <col:35, col:41> 'const char *' '+'
|   |   | | |         |-ImplicitCastExpr 0x7fa81d1fac98 <col:35> 'const char *' <LValueToRValue>
|   |   | | |         | `-DeclRefExpr 0x7fa81d1fac70 <col:35> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |         `-IntegerLiteral 0x7fa81d1954a0 <col:41> 'int' 24
|   |   | | |-DeclStmt 0x7fa81d1fb5b8 <line:1110:5, line:1111:69>
|   |   | | | `-VarDecl 0x7fa81d1faea0 <line:1110:5, line:1111:65> line:1110:11 used __a 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fb590 <col:17, line:1111:65> 'unsigned long' '+'
|   |   | | |     |-CallExpr 0x7fa81d1fb128 <line:1110:17, col:38> 'unsigned long':'unsigned long'
|   |   | | |     | |-ImplicitCastExpr 0x7fa81d1fb110 <col:17, col:33> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 0x7fa81d1fb0a0 <col:17, col:33> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     | `-ImplicitCastExpr 0x7fa81d1fb170 <col:35> 'const void *' <BitCast>
|   |   | | |     |   `-ImplicitCastExpr 0x7fa81d1fb158 <col:35> 'const char *' <LValueToRValue>
|   |   | | |     |     `-DeclRefExpr 0x7fa81d1fafa8 <col:35> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |     `-BinaryOperator 0x7fa81d1fb568 <line:1111:17, col:65> 'unsigned long' '*'
|   |   | | |       |-ParenExpr 0x7fa81d1fb508 <col:17, col:61> 'unsigned long'
|   |   | | |       | `-BinaryOperator 0x7fa81d1fb4e0 <col:18, col:60> 'unsigned long' '+'
|   |   | | |       |   |-ImplicitCastExpr 0x7fa81d1fb4c8 <col:18> 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |   | `-DeclRefExpr 0x7fa81d1fb188 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81c8067c8 '__len' 'size_t':'unsigned long'
|   |   | | |       |   `-CallExpr 0x7fa81d1fb480 <col:26, col:60> 'unsigned long':'unsigned long'
|   |   | | |       |     |-ImplicitCastExpr 0x7fa81d1fb468 <col:26, col:42> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |       |     | `-DeclRefExpr 0x7fa81d1fb3f8 <col:26, col:42> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |       |     `-ImplicitCastExpr 0x7fa81d1fb4b0 <col:44, col:58> 'const void *' <BitCast>
|   |   | | |       |       `-BinaryOperator 0x7fa81d1fb300 <col:44, col:58> 'const char *' '-'
|   |   | | |       |         |-BinaryOperator 0x7fa81d1fb2d8 <col:44, col:50> 'const char *' '+'
|   |   | | |       |         | |-ImplicitCastExpr 0x7fa81d1fb2a8 <col:44> 'const char *' <LValueToRValue>
|   |   | | |       |         | | `-DeclRefExpr 0x7fa81d1fb258 <col:44> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |       |         | `-ImplicitCastExpr 0x7fa81d1fb2c0 <col:50> 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |         |   `-DeclRefExpr 0x7fa81d1fb280 <col:50> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81c8067c8 '__len' 'size_t':'unsigned long'
|   |   | | |       |         `-IntegerLiteral 0x7fa81d195830 <col:58> 'int' 16
|   |   | | |       `-ImplicitCastExpr 0x7fa81d1fb550 <col:65> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x7fa81d1fb528 <col:65> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8103c0 '__k0' 'const unsigned long':'const unsigned long'
|   |   | | |-DeclStmt 0x7fa81d1fb760 <line:1112:5, col:40>
|   |   | | | `-VarDecl 0x7fa81d1fb5e0 <col:5, col:39> col:11 used __b 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 0x7fa81d1fb728 <col:17, col:39> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fb710 <col:17> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fb640 <col:17> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |     |-BinaryOperator 0x7fa81d1fb6e8 <col:26, col:32> 'unsigned long' '+'
|   |   | | |     | |-ImplicitCastExpr 0x7fa81d1fb6b8 <col:26> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 0x7fa81d1fb668 <col:26> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     | `-ImplicitCastExpr 0x7fa81d1fb6d0 <col:32> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x7fa81d1fb690 <col:32> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fab68 '__z' 'unsigned long':'unsigned long'
|   |   | | |     `-IntegerLiteral 0x7fa81d195a90 <col:37> 'int' 52
|   |   | | |-DeclStmt 0x7fa81d1fb8a0 <line:1113:5, col:34>
|   |   | | | `-VarDecl 0x7fa81d1fb788 <col:5, col:33> col:11 used __c 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 0x7fa81d1fb850 <col:17, col:33> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fb838 <col:17> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fb7e8 <col:17> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fb888 <col:26> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fb810 <col:26> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-IntegerLiteral 0x7fa81d195bc0 <col:31> 'int' 37
|   |   | | |-CompoundAssignOperator 0x7fa81d1fbb90 <line:1114:5, col:37> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fb8b8 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fbb48 <col:12, col:37> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fbb30 <col:12, col:28> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fbac0 <col:12, col:28> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 0x7fa81d1fbb78 <col:30, col:36> 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 0x7fa81d1fb9c8 <col:30, col:36> 'const char *' '+'
|   |   | | |       |-ImplicitCastExpr 0x7fa81d1fb9b0 <col:30> 'const char *' <LValueToRValue>
|   |   | | |       | `-DeclRefExpr 0x7fa81d1fb988 <col:30> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |       `-IntegerLiteral 0x7fa81d195d28 <col:36> 'int' 8
|   |   | | |-CompoundAssignOperator 0x7fa81d1fbca8 <line:1115:5, col:27> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fbbc8 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fb788 '__c' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fbc58 <col:12, col:27> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fbc40 <col:12> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fbbf0 <col:12> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fbc90 <col:21> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fbc18 <col:21> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 0x7fa81d195e68 <col:26> 'int' 7
|   |   | | |-CompoundAssignOperator 0x7fa81d1fbfb8 <line:1116:5, col:38> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fbce0 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fbf70 <col:12, col:38> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fbf58 <col:12, col:28> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fbee8 <col:12, col:28> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 0x7fa81d1fbfa0 <col:30, col:36> 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 0x7fa81d1fbdf0 <col:30, col:36> 'const char *' '+'
|   |   | | |       |-ImplicitCastExpr 0x7fa81d1fbdd8 <col:30> 'const char *' <LValueToRValue>
|   |   | | |       | `-DeclRefExpr 0x7fa81d1fbdb0 <col:30> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |       `-IntegerLiteral 0x7fa81d195ff0 <col:36> 'int' 16
|   |   | | |-DeclStmt 0x7fa81d1fc108 <line:1117:5, col:27>
|   |   | | | `-VarDecl 0x7fa81d1fc000 <col:5, col:24> col:11 used __vf 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fc0e0 <col:18, col:24> 'unsigned long' '+'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fc0b0 <col:18> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fc060 <col:18> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fc0c8 <col:24> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1fc088 <col:24> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fab68 '__z' 'unsigned long':'unsigned long'
|   |   | | |-DeclStmt 0x7fa81d1fc318 <line:1118:5, col:47>
|   |   | | | `-VarDecl 0x7fa81d1fc130 <col:5, col:44> col:11 used __vs 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fc2f0 <col:18, col:44> 'unsigned long' '+'
|   |   | | |     |-BinaryOperator 0x7fa81d1fc288 <col:18, col:40> 'unsigned long' '+'
|   |   | | |     | |-ImplicitCastExpr 0x7fa81d1fc270 <col:18> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 0x7fa81d1fc190 <col:18> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fb5e0 '__b' 'unsigned long':'unsigned long'
|   |   | | |     | `-CallExpr 0x7fa81d1fc220 <col:24, col:40> 'unsigned long':'unsigned long'
|   |   | | |     |   |-ImplicitCastExpr 0x7fa81d1fc208 <col:24> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |     |   | `-DeclRefExpr 0x7fa81d1fc1b8 <col:24> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |     |   |-ImplicitCastExpr 0x7fa81d1fc258 <col:33> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   | `-DeclRefExpr 0x7fa81d1fc1e0 <col:33> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     |   `-IntegerLiteral 0x7fa81d1962a0 <col:38> 'int' 31
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fc2d8 <col:44> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1fc2b0 <col:44> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fb788 '__c' 'unsigned long':'unsigned long'
|   |   | | |-BinaryOperator 0x7fa81d1fc948 <line:1119:5, col:75> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 0x7fa81d1fc330 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-BinaryOperator 0x7fa81d1fc920 <col:11, col:75> 'unsigned long' '+'
|   |   | | |   |-CallExpr 0x7fa81d1fc5c0 <col:11, col:37> 'unsigned long':'unsigned long'
|   |   | | |   | |-ImplicitCastExpr 0x7fa81d1fc5a8 <col:11, col:27> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | | `-DeclRefExpr 0x7fa81d1fc538 <col:11, col:27> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |   | `-ImplicitCastExpr 0x7fa81d1fc5f0 <col:29, col:35> 'const void *' <BitCast>
|   |   | | |   |   `-BinaryOperator 0x7fa81d1fc440 <col:29, col:35> 'const char *' '+'
|   |   | | |   |     |-ImplicitCastExpr 0x7fa81d1fc428 <col:29> 'const char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x7fa81d1fc400 <col:29> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |   |     `-IntegerLiteral 0x7fa81d1964c0 <col:35> 'int' 16
|   |   | | |   `-CallExpr 0x7fa81d1fc8d8 <col:41, col:75> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fc8c0 <col:41, col:57> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fc850 <col:41, col:57> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fc908 <col:59, col:73> 'const void *' <BitCast>
|   |   | | |       `-BinaryOperator 0x7fa81d1fc758 <col:59, col:73> 'const char *' '-'
|   |   | | |         |-BinaryOperator 0x7fa81d1fc730 <col:59, col:65> 'const char *' '+'
|   |   | | |         | |-ImplicitCastExpr 0x7fa81d1fc700 <col:59> 'const char *' <LValueToRValue>
|   |   | | |         | | `-DeclRefExpr 0x7fa81d1fc6b0 <col:59> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |         | `-ImplicitCastExpr 0x7fa81d1fc718 <col:65> 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |         |   `-DeclRefExpr 0x7fa81d1fc6d8 <col:65> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81c8067c8 '__len' 'size_t':'unsigned long'
|   |   | | |         `-IntegerLiteral 0x7fa81d1966a0 <col:73> 'int' 32
|   |   | | |-CompoundAssignOperator 0x7fa81d1fccb0 <line:1120:5, col:45> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fc970 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fab68 '__z' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fcc68 <col:12, col:45> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fcc50 <col:12, col:28> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fcbe0 <col:12, col:28> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 0x7fa81d1fcc98 <col:30, col:44> 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 0x7fa81d1fcae8 <col:30, col:44> 'const char *' '-'
|   |   | | |       |-BinaryOperator 0x7fa81d1fcac0 <col:30, col:36> 'const char *' '+'
|   |   | | |       | |-ImplicitCastExpr 0x7fa81d1fca90 <col:30> 'const char *' <LValueToRValue>
|   |   | | |       | | `-DeclRefExpr 0x7fa81d1fca40 <col:30> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |       | `-ImplicitCastExpr 0x7fa81d1fcaa8 <col:36> 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 0x7fa81d1fca68 <col:36> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81c8067c8 '__len' 'size_t':'unsigned long'
|   |   | | |       `-IntegerLiteral 0x7fa81d1968e0 <col:44> 'int' 8
|   |   | | |-BinaryOperator 0x7fa81d1fce30 <line:1121:5, col:33> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 0x7fa81d1fcce8 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fb5e0 '__b' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fcdf8 <col:11, col:33> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fcde0 <col:11> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fcd10 <col:11> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-BinaryOperator 0x7fa81d1fcdb8 <col:20, col:26> 'unsigned long' '+'
|   |   | | |   | |-ImplicitCastExpr 0x7fa81d1fcd88 <col:20> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | | `-DeclRefExpr 0x7fa81d1fcd38 <col:20> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   | `-ImplicitCastExpr 0x7fa81d1fcda0 <col:26> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 0x7fa81d1fcd60 <col:26> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fab68 '__z' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 0x7fa81d196a58 <col:31> 'int' 52
|   |   | | |-BinaryOperator 0x7fa81d1fcf38 <line:1122:5, col:27> 'unsigned long':'unsigned long' lvalue '='
|   |   | | | |-DeclRefExpr 0x7fa81d1fce58 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fb788 '__c' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fcee8 <col:11, col:27> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fced0 <col:11> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fce80 <col:11> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fcf20 <col:20> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fcea8 <col:20> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 0x7fa81d196b50 <col:25> 'int' 37
|   |   | | |-CompoundAssignOperator 0x7fa81d1fd2a0 <line:1123:5, col:46> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fcf60 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fd258 <col:12, col:46> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fd240 <col:12, col:28> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fd1d0 <col:12, col:28> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 0x7fa81d1fd288 <col:30, col:44> 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 0x7fa81d1fd0d8 <col:30, col:44> 'const char *' '-'
|   |   | | |       |-BinaryOperator 0x7fa81d1fd0b0 <col:30, col:36> 'const char *' '+'
|   |   | | |       | |-ImplicitCastExpr 0x7fa81d1fd080 <col:30> 'const char *' <LValueToRValue>
|   |   | | |       | | `-DeclRefExpr 0x7fa81d1fd030 <col:30> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |       | `-ImplicitCastExpr 0x7fa81d1fd098 <col:36> 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 0x7fa81d1fd058 <col:36> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81c8067c8 '__len' 'size_t':'unsigned long'
|   |   | | |       `-IntegerLiteral 0x7fa81d196d48 <col:44> 'int' 24
|   |   | | |-CompoundAssignOperator 0x7fa81d1fd3b8 <line:1124:5, col:27> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fd2d8 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fb788 '__c' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fd368 <col:12, col:27> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fd350 <col:12> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fd300 <col:12> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fd3a0 <col:21> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fd328 <col:21> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |   `-IntegerLiteral 0x7fa81d196e70 <col:26> 'int' 7
|   |   | | |-CompoundAssignOperator 0x7fa81d1fd740 <line:1125:5, col:46> 'unsigned long':'unsigned long' lvalue '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | | |-DeclRefExpr 0x7fa81d1fd400 <col:5> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | | `-CallExpr 0x7fa81d1fd6f8 <col:12, col:46> 'unsigned long':'unsigned long'
|   |   | | |   |-ImplicitCastExpr 0x7fa81d1fd6e0 <col:12, col:28> 'unsigned long (*)(const void *)' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x7fa81d1fd670 <col:12, col:28> 'unsigned long (const void *)' lvalue Function 0x7fa81d1b39e0 '__loadword' 'unsigned long (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   |   | | |   `-ImplicitCastExpr 0x7fa81d1fd728 <col:30, col:44> 'const void *' <BitCast>
|   |   | | |     `-BinaryOperator 0x7fa81d1fd578 <col:30, col:44> 'const char *' '-'
|   |   | | |       |-BinaryOperator 0x7fa81d1fd550 <col:30, col:36> 'const char *' '+'
|   |   | | |       | |-ImplicitCastExpr 0x7fa81d1fd520 <col:30> 'const char *' <LValueToRValue>
|   |   | | |       | | `-DeclRefExpr 0x7fa81d1fd4d0 <col:30> 'const char *' lvalue ParmVar 0x7fa81c806768 '__s' 'const char *'
|   |   | | |       | `-ImplicitCastExpr 0x7fa81d1fd538 <col:36> 'size_t':'unsigned long' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 0x7fa81d1fd4f8 <col:36> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81c8067c8 '__len' 'size_t':'unsigned long'
|   |   | | |       `-IntegerLiteral 0x7fa81d197078 <col:44> 'int' 16
|   |   | | |-DeclStmt 0x7fa81d1fd890 <line:1126:5, col:27>
|   |   | | | `-VarDecl 0x7fa81d1fd788 <col:5, col:24> col:11 used __wf 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fd868 <col:18, col:24> 'unsigned long' '+'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fd838 <col:18> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fd7e8 <col:18> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fd850 <col:24> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1fd810 <col:24> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fab68 '__z' 'unsigned long':'unsigned long'
|   |   | | |-DeclStmt 0x7fa81d1fdaa0 <line:1127:5, col:47>
|   |   | | | `-VarDecl 0x7fa81d1fd8b8 <col:5, col:44> col:11 used __ws 'unsigned long':'unsigned long' cinit
|   |   | | |   `-BinaryOperator 0x7fa81d1fda78 <col:18, col:44> 'unsigned long' '+'
|   |   | | |     |-BinaryOperator 0x7fa81d1fda10 <col:18, col:40> 'unsigned long' '+'
|   |   | | |     | |-ImplicitCastExpr 0x7fa81d1fd9f8 <col:18> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 0x7fa81d1fd918 <col:18> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fb5e0 '__b' 'unsigned long':'unsigned long'
|   |   | | |     | `-CallExpr 0x7fa81d1fd9a8 <col:24, col:40> 'unsigned long':'unsigned long'
|   |   | | |     |   |-ImplicitCastExpr 0x7fa81d1fd990 <col:24> 'unsigned long (*)(unsigned long, int)' <FunctionToPointerDecay>
|   |   | | |     |   | `-DeclRefExpr 0x7fa81d1fd940 <col:24> 'unsigned long (unsigned long, int)' lvalue CXXMethod 0x7fa81c8108f0 '__rotate' 'unsigned long (unsigned long, int)'
|   |   | | |     |   |-ImplicitCastExpr 0x7fa81d1fd9e0 <col:33> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |     |   | `-DeclRefExpr 0x7fa81d1fd968 <col:33> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1faea0 '__a' 'unsigned long':'unsigned long'
|   |   | | |     |   `-IntegerLiteral 0x7fa81d197310 <col:38> 'int' 31
|   |   | | |     `-ImplicitCastExpr 0x7fa81d1fda60 <col:44> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x7fa81d1fda38 <col:44> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fb788 '__c' 'unsigned long':'unsigned long'
|   |   | | |-DeclStmt 0x7fa81d1fde20 <line:1128:5, col:73>
|   |   | | | `-VarDecl 0x7fa81d1fdac8 <col:5, col:72> col:11 used __r 'unsigned long':'unsigned long' cinit
|   |   | | |   `-CallExpr 0x7fa81d1fddf0 <col:17, col:72> 'unsigned long':'unsigned long'
|   |   | | |     |-ImplicitCastExpr 0x7fa81d1fddd8 <col:17> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x7fa81d1fdb28 <col:17> 'unsigned long (unsigned long)' lvalue CXXMethod 0x7fa81c810c30 '__shift_mix' 'unsigned long (unsigned long)'
|   |   | | |     `-BinaryOperator 0x7fa81d1fddb0 <col:29, col:68> 'unsigned long' '+'
|   |   | | |       |-BinaryOperator 0x7fa81d1fdc58 <col:29, col:45> 'unsigned long' '*'
|   |   | | |       | |-ParenExpr 0x7fa81d1fdbf8 <col:29, col:41> 'unsigned long'
|   |   | | |       | | `-BinaryOperator 0x7fa81d1fdbd0 <col:30, col:37> 'unsigned long' '+'
|   |   | | |       | |   |-ImplicitCastExpr 0x7fa81d1fdba0 <col:30> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       | |   | `-DeclRefExpr 0x7fa81d1fdb50 <col:30> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fc000 '__vf' 'unsigned long':'unsigned long'
|   |   | | |       | |   `-ImplicitCastExpr 0x7fa81d1fdbb8 <col:37> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       | |     `-DeclRefExpr 0x7fa81d1fdb78 <col:37> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fd8b8 '__ws' 'unsigned long':'unsigned long'
|   |   | | |       | `-ImplicitCastExpr 0x7fa81d1fdc40 <col:45> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |       |   `-DeclRefExpr 0x7fa81d1fdc18 <col:45> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8105a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | | |       `-BinaryOperator 0x7fa81d1fdd88 <col:52, col:68> 'unsigned long' '*'
|   |   | | |         |-ParenExpr 0x7fa81d1fdd28 <col:52, col:64> 'unsigned long'
|   |   | | |         | `-BinaryOperator 0x7fa81d1fdd00 <col:53, col:60> 'unsigned long' '+'
|   |   | | |         |   |-ImplicitCastExpr 0x7fa81d1fdcd0 <col:53> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |         |   | `-DeclRefExpr 0x7fa81d1fdc80 <col:53> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fd788 '__wf' 'unsigned long':'unsigned long'
|   |   | | |         |   `-ImplicitCastExpr 0x7fa81d1fdce8 <col:60> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |         |     `-DeclRefExpr 0x7fa81d1fdca8 <col:60> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fc130 '__vs' 'unsigned long':'unsigned long'
|   |   | | |         `-ImplicitCastExpr 0x7fa81d1fdd70 <col:68> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | | |           `-DeclRefExpr 0x7fa81d1fdd48 <col:68> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8103c0 '__k0' 'const unsigned long':'const unsigned long'
|   |   | | `-ReturnStmt 0x7fa81d1fe020 <line:1129:5, col:45>
|   |   | |   `-BinaryOperator 0x7fa81d1fdff8 <col:12, col:45> 'unsigned long' '*'
|   |   | |     |-CallExpr 0x7fa81d1fdf88 <col:12, col:41> 'unsigned long':'unsigned long'
|   |   | |     | |-ImplicitCastExpr 0x7fa81d1fdf70 <col:12> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 0x7fa81d1fde38 <col:12> 'unsigned long (unsigned long)' lvalue CXXMethod 0x7fa81c810c30 '__shift_mix' 'unsigned long (unsigned long)'
|   |   | |     | `-BinaryOperator 0x7fa81d1fdf48 <col:24, col:37> 'unsigned long' '+'
|   |   | |     |   |-BinaryOperator 0x7fa81d1fdee0 <col:24, col:30> 'unsigned long' '*'
|   |   | |     |   | |-ImplicitCastExpr 0x7fa81d1fdeb0 <col:24> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |   | | `-DeclRefExpr 0x7fa81d1fde60 <col:24> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fdac8 '__r' 'unsigned long':'unsigned long'
|   |   | |     |   | `-ImplicitCastExpr 0x7fa81d1fdec8 <col:30> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x7fa81d1fde88 <col:30> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8103c0 '__k0' 'const unsigned long':'const unsigned long'
|   |   | |     |   `-ImplicitCastExpr 0x7fa81d1fdf30 <col:37> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x7fa81d1fdf08 <col:37> 'unsigned long':'unsigned long' lvalue Var 0x7fa81d1fc130 '__vs' 'unsigned long':'unsigned long'
|   |   | |     `-ImplicitCastExpr 0x7fa81d1fdfe0 <col:45> 'unsigned long':'unsigned long' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x7fa81d1fdfb8 <col:45> 'const unsigned long':'const unsigned long' lvalue Var 0x7fa81c8105a0 '__k2' 'const unsigned long':'const unsigned long'
|   |   | `-NoSanitizeAttr 0x7fa81c806958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> unsigned-integer-overflow
|   |   |-CXXConstructorDecl 0x7fa81c806a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1006:8> col:8 implicit referenced constexpr __murmur2_or_cityhash 'void (void) noexcept' inline default trivial
|   |   |-CXXConstructorDecl 0x7fa81c806b28 <col:8> col:8 implicit constexpr __murmur2_or_cityhash 'void (const struct std::__1::__murmur2_or_cityhash<unsigned long, 64> &)' inline default trivial noexcept-unevaluated 0x7fa81c806b28
|   |   | `-ParmVarDecl 0x7fa81c806c50 <col:8> col:8 'const struct std::__1::__murmur2_or_cityhash<unsigned long, 64> &'
|   |   |-CXXConstructorDecl 0x7fa81c806ce8 <col:8> col:8 implicit constexpr __murmur2_or_cityhash 'void (struct std::__1::__murmur2_or_cityhash<unsigned long, 64> &&)' inline default trivial noexcept-unevaluated 0x7fa81c806ce8
|   |   | `-ParmVarDecl 0x7fa81c806e10 <col:8> col:8 'struct std::__1::__murmur2_or_cityhash<unsigned long, 64> &&'
|   |   `-CXXDestructorDecl 0x7fa81c806eb0 <col:8> col:8 implicit referenced ~__murmur2_or_cityhash 'void (void) noexcept' inline default trivial
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d1849c0 <line:964:1, line:969:1> line:965:8 struct __murmur2_or_cityhash definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 32
|   | |-TemplateTypeParmDecl 0x7fa81d1847b8 <line:964:11, col:17> col:17 referenced class depth 0 index 0 _Size
|   | |-CXXRecordDecl 0x7fa81d184c60 <line:965:1, col:8> col:8 implicit struct __murmur2_or_cityhash
|   | `-CXXMethodDecl 0x7fa81d184f80 <line:967:5, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:114> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:967:18 operator() '_Size (const void *, _Size)' inline
|   |   |-ParmVarDecl 0x7fa81d184d10 <col:29, col:41> col:41 __key 'const void *'
|   |   |-ParmVarDecl 0x7fa81d184d80 <col:48, col:54> col:54 __len '_Size'
|   |   `-NoSanitizeAttr 0x7fa81d185028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, col:112> unsigned-integer-overflow
|   |-CXXMethodDecl 0x7fa81d1854e0 parent 0x7fa81d1849c0 prev 0x7fa81d184f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:972:1, line:1003:1> line:974:35 operator() '_Size (const void *, _Size)'
|   | |-ParmVarDecl 0x7fa81d185378 <col:46, col:58> col:58 referenced __key 'const void *'
|   | |-ParmVarDecl 0x7fa81d1853e8 <col:65, col:71> col:71 referenced __len '_Size'
|   | |-CompoundStmt 0x7fa81d1868e8 <line:975:1, line:1003:1>
|   | | |-DeclStmt 0x7fa81d1856e0 <line:976:5, col:33>
|   | | | `-VarDecl 0x7fa81d185660 <col:5, col:23> col:17 referenced __m 'const _Size' cinit
|   | | |   `-IntegerLiteral 0x7fa81d1856c0 <col:23> 'int' 1540483477
|   | | |-DeclStmt 0x7fa81d185788 <line:977:5, col:25>
|   | | | `-VarDecl 0x7fa81d185708 <col:5, col:23> col:17 referenced __r 'const _Size' cinit
|   | | |   `-IntegerLiteral 0x7fa81d185768 <col:23> 'int' 24
|   | | |-DeclStmt 0x7fa81d185838 <line:978:5, col:22>
|   | | | `-VarDecl 0x7fa81d1857b0 <col:5, col:17> col:11 referenced __h '_Size' nrvo cinit
|   | | |   `-DeclRefExpr 0x7fa81d185810 <col:17> '_Size' lvalue ParmVar 0x7fa81d1853e8 '__len' '_Size'
|   | | |-DeclStmt 0x7fa81d185978 <line:979:5, col:75>
|   | | | `-VarDecl 0x7fa81d185890 <col:5, col:74> col:26 referenced __data 'const unsigned char *' cinit
|   | | |   `-CXXStaticCastExpr 0x7fa81d185948 <col:35, col:74> 'const unsigned char *' static_cast<const unsigned char *> <BitCast>
|   | | |     `-ImplicitCastExpr 0x7fa81d185930 <col:69> 'const void *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x7fa81d1858f0 <col:69> 'const void *' lvalue ParmVar 0x7fa81d185378 '__key' 'const void *'
|   | | |-ForStmt 0x7fa81d186068 <line:980:5, line:988:5>
|   | | | |-<<<NULL>>>
|   | | | |-<<<NULL>>>
|   | | | |-CXXOperatorCallExpr 0x7fa81d185a30 <line:980:12, col:21> '<dependent type>'
|   | | | | |-UnresolvedLookupExpr 0x7fa81d1859d8 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x7fa81d16f428
|   | | | | |-DeclRefExpr 0x7fa81d185990 <col:12> '_Size' lvalue ParmVar 0x7fa81d1853e8 '__len' '_Size'
|   | | | | `-IntegerLiteral 0x7fa81d1859b8 <col:21> 'int' 4
|   | | | |-BinaryOperator 0x7fa81d185b78 <col:24, col:46> '<dependent type>' ','
|   | | | | |-CompoundAssignOperator 0x7fa81d185ac0 <col:24, col:34> 'const unsigned char *' lvalue '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | | | | | |-DeclRefExpr 0x7fa81d185a78 <col:24> 'const unsigned char *' lvalue Var 0x7fa81d185890 '__data' 'const unsigned char *'
|   | | | | | `-IntegerLiteral 0x7fa81d185aa0 <col:34> 'int' 4
|   | | | | `-CompoundAssignOperator 0x7fa81d185b40 <col:37, col:46> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |   |-DeclRefExpr 0x7fa81d185af8 <col:37> '_Size' lvalue ParmVar 0x7fa81d1853e8 '__len' '_Size'
|   | | | |   `-IntegerLiteral 0x7fa81d185b20 <col:46> 'int' 4
|   | | | `-CompoundStmt 0x7fa81d186020 <line:981:5, line:988:5>
|   | | |   |-DeclStmt 0x7fa81d185d10 <line:982:9, col:46>
|   | | |   | `-VarDecl 0x7fa81d185bb0 <col:9, col:45> col:15 referenced __k '_Size' cinit
|   | | |   |   `-CallExpr 0x7fa81d185ce0 <col:21, col:45> '<dependent type>'
|   | | |   |     |-UnresolvedLookupExpr 0x7fa81d185c20 <col:21, col:37> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |   |     `-DeclRefExpr 0x7fa81d185cb8 <col:39> 'const unsigned char *' lvalue Var 0x7fa81d185890 '__data' 'const unsigned char *'
|   | | |   |-CompoundAssignOperator 0x7fa81d185d78 <line:983:9, col:16> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   | |-DeclRefExpr 0x7fa81d185d28 <col:9> '_Size' lvalue Var 0x7fa81d185bb0 '__k' '_Size'
|   | | |   | `-DeclRefExpr 0x7fa81d185d50 <col:16> 'const _Size' lvalue Var 0x7fa81d185660 '__m' 'const _Size'
|   | | |   |-CompoundAssignOperator 0x7fa81d185e50 <line:984:9, col:23> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   | |-DeclRefExpr 0x7fa81d185db0 <col:9> '_Size' lvalue Var 0x7fa81d185bb0 '__k' '_Size'
|   | | |   | `-BinaryOperator 0x7fa81d185e28 <col:16, col:23> '<dependent type>' '>>'
|   | | |   |   |-DeclRefExpr 0x7fa81d185dd8 <col:16> '_Size' lvalue Var 0x7fa81d185bb0 '__k' '_Size'
|   | | |   |   `-DeclRefExpr 0x7fa81d185e00 <col:23> 'const _Size' lvalue Var 0x7fa81d185708 '__r' 'const _Size'
|   | | |   |-CompoundAssignOperator 0x7fa81d185ed8 <line:985:9, col:16> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   | |-DeclRefExpr 0x7fa81d185e88 <col:9> '_Size' lvalue Var 0x7fa81d185bb0 '__k' '_Size'
|   | | |   | `-DeclRefExpr 0x7fa81d185eb0 <col:16> 'const _Size' lvalue Var 0x7fa81d185660 '__m' 'const _Size'
|   | | |   |-CompoundAssignOperator 0x7fa81d185f60 <line:986:9, col:16> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   | |-DeclRefExpr 0x7fa81d185f10 <col:9> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | |   | `-DeclRefExpr 0x7fa81d185f38 <col:16> 'const _Size' lvalue Var 0x7fa81d185660 '__m' 'const _Size'
|   | | |   `-CompoundAssignOperator 0x7fa81d185fe8 <line:987:9, col:16> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |     |-DeclRefExpr 0x7fa81d185f98 <col:9> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | |     `-DeclRefExpr 0x7fa81d185fc0 <col:16> '_Size' lvalue Var 0x7fa81d185bb0 '__k' '_Size'
|   | | |-SwitchStmt 0x7fa81d1860c8 <line:989:5, line:998:5>
|   | | | |-<<<NULL>>>
|   | | | |-<<<NULL>>>
|   | | | |-DeclRefExpr 0x7fa81d1860a0 <line:989:13> '_Size' lvalue ParmVar 0x7fa81d1853e8 '__len' '_Size'
|   | | | `-CompoundStmt 0x7fa81d186630 <line:990:5, line:998:5>
|   | | |   |-CaseStmt 0x7fa81d186118 <line:991:5, line:992:29>
|   | | |   | |-IntegerLiteral 0x7fa81d1860f8 <line:991:10> 'int' 3
|   | | |   | |-<<<NULL>>>
|   | | |   | `-CompoundAssignOperator 0x7fa81d186278 <line:992:9, col:29> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   |   |-DeclRefExpr 0x7fa81d186150 <col:9> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | |   |   `-BinaryOperator 0x7fa81d186250 <col:16, col:29> 'int' '<<'
|   | | |   |     |-ImplicitCastExpr 0x7fa81d186238 <col:16, col:24> 'int' <IntegralCast>
|   | | |   |     | `-ImplicitCastExpr 0x7fa81d186220 <col:16, col:24> 'unsigned char' <LValueToRValue>
|   | | |   |     |   `-ArraySubscriptExpr 0x7fa81d1861d8 <col:16, col:24> 'const unsigned char' lvalue
|   | | |   |     |     |-ImplicitCastExpr 0x7fa81d1861c0 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | |   |     |     | `-DeclRefExpr 0x7fa81d186178 <col:16> 'const unsigned char *' lvalue Var 0x7fa81d185890 '__data' 'const unsigned char *'
|   | | |   |     |     `-IntegerLiteral 0x7fa81d1861a0 <col:23> 'int' 2
|   | | |   |     `-IntegerLiteral 0x7fa81d186200 <col:29> 'int' 16
|   | | |   |-CaseStmt 0x7fa81d1862d0 <line:993:5, line:994:29>
|   | | |   | |-IntegerLiteral 0x7fa81d1862b0 <line:993:10> 'int' 2
|   | | |   | |-<<<NULL>>>
|   | | |   | `-CompoundAssignOperator 0x7fa81d186430 <line:994:9, col:29> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   |   |-DeclRefExpr 0x7fa81d186308 <col:9> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | |   |   `-BinaryOperator 0x7fa81d186408 <col:16, col:29> 'int' '<<'
|   | | |   |     |-ImplicitCastExpr 0x7fa81d1863f0 <col:16, col:24> 'int' <IntegralCast>
|   | | |   |     | `-ImplicitCastExpr 0x7fa81d1863d8 <col:16, col:24> 'unsigned char' <LValueToRValue>
|   | | |   |     |   `-ArraySubscriptExpr 0x7fa81d186390 <col:16, col:24> 'const unsigned char' lvalue
|   | | |   |     |     |-ImplicitCastExpr 0x7fa81d186378 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | |   |     |     | `-DeclRefExpr 0x7fa81d186330 <col:16> 'const unsigned char *' lvalue Var 0x7fa81d185890 '__data' 'const unsigned char *'
|   | | |   |     |     `-IntegerLiteral 0x7fa81d186358 <col:23> 'int' 1
|   | | |   |     `-IntegerLiteral 0x7fa81d1863b8 <col:29> 'int' 8
|   | | |   |-CaseStmt 0x7fa81d186488 <line:995:5, line:996:24>
|   | | |   | |-IntegerLiteral 0x7fa81d186468 <line:995:10> 'int' 1
|   | | |   | |-<<<NULL>>>
|   | | |   | `-CompoundAssignOperator 0x7fa81d186570 <line:996:9, col:24> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |   |   |-DeclRefExpr 0x7fa81d1864c0 <col:9> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | |   |   `-ArraySubscriptExpr 0x7fa81d186548 <col:16, col:24> 'const unsigned char' lvalue
|   | | |   |     |-ImplicitCastExpr 0x7fa81d186530 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | |   |     | `-DeclRefExpr 0x7fa81d1864e8 <col:16> 'const unsigned char *' lvalue Var 0x7fa81d185890 '__data' 'const unsigned char *'
|   | | |   |     `-IntegerLiteral 0x7fa81d186510 <col:23> 'int' 0
|   | | |   `-CompoundAssignOperator 0x7fa81d1865f8 <line:997:9, col:16> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | |     |-DeclRefExpr 0x7fa81d1865a8 <col:9> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | |     `-DeclRefExpr 0x7fa81d1865d0 <col:16> 'const _Size' lvalue Var 0x7fa81d185660 '__m' 'const _Size'
|   | | |-CompoundAssignOperator 0x7fa81d186700 <line:999:5, col:19> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |-DeclRefExpr 0x7fa81d186668 <col:5> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | | `-BinaryOperator 0x7fa81d1866d8 <col:12, col:19> '<dependent type>' '>>'
|   | | |   |-DeclRefExpr 0x7fa81d186690 <col:12> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | |   `-IntegerLiteral 0x7fa81d1866b8 <col:19> 'int' 13
|   | | |-CompoundAssignOperator 0x7fa81d186788 <line:1000:5, col:12> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |-DeclRefExpr 0x7fa81d186738 <col:5> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | | `-DeclRefExpr 0x7fa81d186760 <col:12> 'const _Size' lvalue Var 0x7fa81d185660 '__m' 'const _Size'
|   | | |-CompoundAssignOperator 0x7fa81d186870 <line:1001:5, col:19> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |-DeclRefExpr 0x7fa81d1867c0 <col:5> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | | `-BinaryOperator 0x7fa81d186848 <col:12, col:19> '<dependent type>' '>>'
|   | | |   |-DeclRefExpr 0x7fa81d186800 <col:12> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | | |   `-IntegerLiteral 0x7fa81d186828 <col:19> 'int' 15
|   | | `-ReturnStmt 0x7fa81d1868d0 <line:1002:5, col:12>
|   | |   `-DeclRefExpr 0x7fa81d1868a8 <col:12> '_Size' lvalue Var 0x7fa81d1857b0 '__h' '_Size'
|   | `-NoSanitizeAttr 0x7fa81d185600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> Inherited unsigned-integer-overflow
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d186b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1005:1, line:1131:1> line:1006:8 struct __murmur2_or_cityhash definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 64
|   | |-TemplateTypeParmDecl 0x7fa81d186950 <line:1005:11, col:17> col:17 referenced class depth 0 index 0 _Size
|   | |-CXXRecordDecl 0x7fa81d186df0 <line:1006:1, col:8> col:8 implicit struct __murmur2_or_cityhash
|   | |-CXXMethodDecl 0x7fa81d187050 <line:1008:5, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:114> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1008:18 operator() '_Size (const void *, _Size)' inline
|   | | |-ParmVarDecl 0x7fa81d186ea0 <col:29, col:41> col:41 __key 'const void *'
|   | | |-ParmVarDecl 0x7fa81d186f10 <col:48, col:54> col:54 __len '_Size'
|   | | `-NoSanitizeAttr 0x7fa81d1870f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, col:112> unsigned-integer-overflow
|   | |-AccessSpecDecl 0x7fa81d187178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1010:2, col:9> col:2 private
|   | |-VarDecl 0x7fa81d1871b0 <line:1012:3, col:29> col:22 referenced __k0 'const _Size' static cinit
|   | | `-IntegerLiteral 0x7fa81d187210 <col:29> 'unsigned long long' 14097894508562428199
|   | |-VarDecl 0x7fa81d187240 <line:1013:3, col:29> col:22 referenced __k1 'const _Size' static cinit
|   | | `-IntegerLiteral 0x7fa81d1872a0 <col:29> 'unsigned long long' 13011662864482103923
|   | |-VarDecl 0x7fa81d1872d0 <line:1014:3, col:29> col:22 referenced __k2 'const _Size' static cinit
|   | | `-IntegerLiteral 0x7fa81d187330 <col:29> 'unsigned long long' 11160318154034397263
|   | |-VarDecl 0x7fa81d187360 <line:1015:3, col:29> col:22 referenced __k3 'const _Size' static cinit
|   | | `-IntegerLiteral 0x7fa81d1873c0 <col:29> 'unsigned long long' 14504361325974414679
|   | |-CXXMethodDecl 0x7fa81d187580 <line:1017:3, line:1019:3> line:1017:16 referenced __rotate '_Size (_Size, int)' static
|   | | |-ParmVarDecl 0x7fa81d1873f0 <col:25, col:31> col:31 referenced __val '_Size'
|   | | |-ParmVarDecl 0x7fa81d187468 <col:38, col:42> col:42 referenced __shift 'int'
|   | | `-CompoundStmt 0x7fa81d18d218 <col:51, line:1019:3>
|   | |   `-ReturnStmt 0x7fa81d18d200 <line:1018:5, col:82>
|   | |     `-ConditionalOperator 0x7fa81d18d1d0 <col:12, col:82> '<dependent type>'
|   | |       |-BinaryOperator 0x7fa81d18cf88 <col:12, col:23> '_Bool' '=='
|   | |       | |-ImplicitCastExpr 0x7fa81d18cf70 <col:12> 'int' <LValueToRValue>
|   | |       | | `-DeclRefExpr 0x7fa81d18cf28 <col:12> 'int' lvalue ParmVar 0x7fa81d187468 '__shift' 'int'
|   | |       | `-IntegerLiteral 0x7fa81d18cf50 <col:23> 'int' 0
|   | |       |-DeclRefExpr 0x7fa81d18cfb0 <col:27> '_Size' lvalue ParmVar 0x7fa81d1873f0 '__val' '_Size'
|   | |       `-ParenExpr 0x7fa81d18d1b0 <col:35, col:82> '<dependent type>'
|   | |         `-BinaryOperator 0x7fa81d18d188 <col:36, col:81> '<dependent type>' '|'
|   | |           |-ParenExpr 0x7fa81d18d050 <col:36, col:53> '<dependent type>'
|   | |           | `-BinaryOperator 0x7fa81d18d028 <col:37, col:46> '<dependent type>' '>>'
|   | |           |   |-DeclRefExpr 0x7fa81d18cfd8 <col:37> '_Size' lvalue ParmVar 0x7fa81d1873f0 '__val' '_Size'
|   | |           |   `-DeclRefExpr 0x7fa81d18d000 <col:46> 'int' lvalue ParmVar 0x7fa81d187468 '__shift' 'int'
|   | |           `-ParenExpr 0x7fa81d18d168 <col:57, col:81> '<dependent type>'
|   | |             `-BinaryOperator 0x7fa81d18d140 <col:58, col:80> '<dependent type>' '<<'
|   | |               |-DeclRefExpr 0x7fa81d18d070 <col:58> '_Size' lvalue ParmVar 0x7fa81d1873f0 '__val' '_Size'
|   | |               `-ParenExpr 0x7fa81d18d120 <col:67, col:80> 'int'
|   | |                 `-BinaryOperator 0x7fa81d18d0f8 <col:68, col:73> 'int' '-'
|   | |                   |-IntegerLiteral 0x7fa81d18d098 <col:68> 'int' 64
|   | |                   `-ImplicitCastExpr 0x7fa81d18d0e0 <col:73> 'int' <LValueToRValue>
|   | |                     `-DeclRefExpr 0x7fa81d18d0b8 <col:73> 'int' lvalue ParmVar 0x7fa81d187468 '__shift' 'int'
|   | |-CXXMethodDecl 0x7fa81d187740 <line:1021:3, line:1023:3> line:1021:16 referenced __rotate_by_at_least_1 '_Size (_Size, int)' static
|   | | |-ParmVarDecl 0x7fa81d187638 <col:39, col:45> col:45 referenced __val '_Size'
|   | | |-ParmVarDecl 0x7fa81d1876b0 <col:52, col:56> col:56 referenced __shift 'int'
|   | | `-CompoundStmt 0x7fa81d18d428 <col:65, line:1023:3>
|   | |   `-ReturnStmt 0x7fa81d18d410 <line:1022:5, col:57>
|   | |     `-BinaryOperator 0x7fa81d18d3e8 <col:12, col:57> '<dependent type>' '|'
|   | |       |-ParenExpr 0x7fa81d18d2b0 <col:12, col:29> '<dependent type>'
|   | |       | `-BinaryOperator 0x7fa81d18d288 <col:13, col:22> '<dependent type>' '>>'
|   | |       |   |-DeclRefExpr 0x7fa81d18d238 <col:13> '_Size' lvalue ParmVar 0x7fa81d187638 '__val' '_Size'
|   | |       |   `-DeclRefExpr 0x7fa81d18d260 <col:22> 'int' lvalue ParmVar 0x7fa81d1876b0 '__shift' 'int'
|   | |       `-ParenExpr 0x7fa81d18d3c8 <col:33, col:57> '<dependent type>'
|   | |         `-BinaryOperator 0x7fa81d18d3a0 <col:34, col:56> '<dependent type>' '<<'
|   | |           |-DeclRefExpr 0x7fa81d18d2d0 <col:34> '_Size' lvalue ParmVar 0x7fa81d187638 '__val' '_Size'
|   | |           `-ParenExpr 0x7fa81d18d380 <col:43, col:56> 'int'
|   | |             `-BinaryOperator 0x7fa81d18d358 <col:44, col:49> 'int' '-'
|   | |               |-IntegerLiteral 0x7fa81d18d2f8 <col:44> 'int' 64
|   | |               `-ImplicitCastExpr 0x7fa81d18d340 <col:49> 'int' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x7fa81d18d318 <col:49> 'int' lvalue ParmVar 0x7fa81d1876b0 '__shift' 'int'
|   | |-CXXMethodDecl 0x7fa81d187900 <line:1025:3, line:1027:3> line:1025:16 referenced __shift_mix '_Size (_Size)' static
|   | | |-ParmVarDecl 0x7fa81d1877f8 <col:28, col:34> col:34 referenced __val '_Size'
|   | | `-CompoundStmt 0x7fa81d18d540 <col:41, line:1027:3>
|   | |   `-ReturnStmt 0x7fa81d18d528 <line:1026:5, col:32>
|   | |     `-BinaryOperator 0x7fa81d18d500 <col:12, col:32> '<dependent type>' '^'
|   | |       |-DeclRefExpr 0x7fa81d18d448 <col:12> '_Size' lvalue ParmVar 0x7fa81d1877f8 '__val' '_Size'
|   | |       `-ParenExpr 0x7fa81d18d4e0 <col:20, col:32> '<dependent type>'
|   | |         `-BinaryOperator 0x7fa81d18d4b8 <col:21, col:30> '<dependent type>' '>>'
|   | |           |-DeclRefExpr 0x7fa81d18d470 <col:21> '_Size' lvalue ParmVar 0x7fa81d1877f8 '__val' '_Size'
|   | |           `-IntegerLiteral 0x7fa81d18d498 <col:30> 'int' 47
|   | |-CXXMethodDecl 0x7fa81d187b80 <line:1029:3, line:1039:3> line:1029:16 referenced __hash_len_16 '_Size (_Size, _Size)' static
|   | | |-ParmVarDecl 0x7fa81d1879b0 <col:30, col:36> col:36 referenced __u '_Size'
|   | | |-ParmVarDecl 0x7fa81d187a20 <col:41, col:47> col:47 referenced __v '_Size'
|   | | |-CompoundStmt 0x7fa81d18db90 <line:1031:3, line:1039:3>
|   | | | |-DeclStmt 0x7fa81d18d5f0 <line:1032:5, col:46>
|   | | | | `-VarDecl 0x7fa81d18d570 <col:5, col:25> col:17 referenced __mul 'const _Size' cinit
|   | | | |   `-IntegerLiteral 0x7fa81d18d5d0 <col:25> 'unsigned long long' 11376068507788127593
|   | | | |-DeclStmt 0x7fa81d18d760 <line:1033:5, col:36>
|   | | | | `-VarDecl 0x7fa81d18d618 <col:5, col:31> col:11 referenced __a '_Size' cinit
|   | | | |   `-BinaryOperator 0x7fa81d18d738 <col:17, col:31> '<dependent type>' '*'
|   | | | |     |-ParenExpr 0x7fa81d18d6f0 <col:17, col:27> '<dependent type>'
|   | | | |     | `-BinaryOperator 0x7fa81d18d6c8 <col:18, col:24> '<dependent type>' '^'
|   | | | |     |   |-DeclRefExpr 0x7fa81d18d678 <col:18> '_Size' lvalue ParmVar 0x7fa81d1879b0 '__u' '_Size'
|   | | | |     |   `-DeclRefExpr 0x7fa81d18d6a0 <col:24> '_Size' lvalue ParmVar 0x7fa81d187a20 '__v' '_Size'
|   | | | |     `-DeclRefExpr 0x7fa81d18d710 <col:31> 'const _Size' lvalue Var 0x7fa81d18d570 '__mul' 'const _Size'
|   | | | |-CompoundAssignOperator 0x7fa81d18d830 <line:1034:5, col:22> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr 0x7fa81d18d778 <col:5> '_Size' lvalue Var 0x7fa81d18d618 '__a' '_Size'
|   | | | | `-ParenExpr 0x7fa81d18d810 <col:12, col:22> '<dependent type>'
|   | | | |   `-BinaryOperator 0x7fa81d18d7e8 <col:13, col:20> '<dependent type>' '>>'
|   | | | |     |-DeclRefExpr 0x7fa81d18d7a0 <col:13> '_Size' lvalue Var 0x7fa81d18d618 '__a' '_Size'
|   | | | |     `-IntegerLiteral 0x7fa81d18d7c8 <col:20> 'int' 47
|   | | | |-DeclStmt 0x7fa81d18d9c0 <line:1035:5, col:36>
|   | | | | `-VarDecl 0x7fa81d18d878 <col:5, col:31> col:11 referenced __b '_Size' nrvo cinit
|   | | | |   `-BinaryOperator 0x7fa81d18d998 <col:17, col:31> '<dependent type>' '*'
|   | | | |     |-ParenExpr 0x7fa81d18d950 <col:17, col:27> '<dependent type>'
|   | | | |     | `-BinaryOperator 0x7fa81d18d928 <col:18, col:24> '<dependent type>' '^'
|   | | | |     |   |-DeclRefExpr 0x7fa81d18d8d8 <col:18> '_Size' lvalue ParmVar 0x7fa81d187a20 '__v' '_Size'
|   | | | |     |   `-DeclRefExpr 0x7fa81d18d900 <col:24> '_Size' lvalue Var 0x7fa81d18d618 '__a' '_Size'
|   | | | |     `-DeclRefExpr 0x7fa81d18d970 <col:31> 'const _Size' lvalue Var 0x7fa81d18d570 '__mul' 'const _Size'
|   | | | |-CompoundAssignOperator 0x7fa81d18da90 <line:1036:5, col:22> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr 0x7fa81d18d9d8 <col:5> '_Size' lvalue Var 0x7fa81d18d878 '__b' '_Size'
|   | | | | `-ParenExpr 0x7fa81d18da70 <col:12, col:22> '<dependent type>'
|   | | | |   `-BinaryOperator 0x7fa81d18da48 <col:13, col:20> '<dependent type>' '>>'
|   | | | |     |-DeclRefExpr 0x7fa81d18da00 <col:13> '_Size' lvalue Var 0x7fa81d18d878 '__b' '_Size'
|   | | | |     `-IntegerLiteral 0x7fa81d18da28 <col:20> 'int' 47
|   | | | |-CompoundAssignOperator 0x7fa81d18db18 <line:1037:5, col:12> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr 0x7fa81d18dac8 <col:5> '_Size' lvalue Var 0x7fa81d18d878 '__b' '_Size'
|   | | | | `-DeclRefExpr 0x7fa81d18daf0 <col:12> 'const _Size' lvalue Var 0x7fa81d18d570 '__mul' 'const _Size'
|   | | | `-ReturnStmt 0x7fa81d18db78 <line:1038:5, col:12>
|   | | |   `-DeclRefExpr 0x7fa81d18db50 <col:12> '_Size' lvalue Var 0x7fa81d18d878 '__b' '_Size'
|   | | `-NoSanitizeAttr 0x7fa81d187c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, col:112> unsigned-integer-overflow
|   | |-CXXMethodDecl 0x7fa81d187e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1041:3, line:1064:3> line:1041:16 referenced __hash_len_0_to_16 '_Size (const char *, _Size)' static
|   | | |-ParmVarDecl 0x7fa81d187cc0 <col:35, col:47> col:47 referenced __s 'const char *'
|   | | |-ParmVarDecl 0x7fa81d187d30 <col:52, col:58> col:58 referenced __len '_Size'
|   | | |-CompoundStmt 0x7fa81d1937d0 <line:1043:3, line:1064:3>
|   | | | |-IfStmt 0x7fa81d18e290 <line:1044:5, line:1048:5>
|   | | | | |-<<<NULL>>>
|   | | | | |-<<<NULL>>>
|   | | | | |-CXXOperatorCallExpr 0x7fa81d18dc80 <line:1044:9, col:17> '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr 0x7fa81d18dc28 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x7fa81d16eca8
|   | | | | | |-DeclRefExpr 0x7fa81d18dbe0 <col:9> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | | `-IntegerLiteral 0x7fa81d18dc08 <col:17> 'int' 8
|   | | | | |-CompoundStmt 0x7fa81d18e260 <col:20, line:1048:5>
|   | | | | | |-DeclStmt 0x7fa81d18de38 <line:1045:7, col:47>
|   | | | | | | `-VarDecl 0x7fa81d18dcd8 <col:7, col:46> col:19 referenced __a 'const _Size' cinit
|   | | | | | |   `-CallExpr 0x7fa81d18de08 <col:25, col:46> '<dependent type>'
|   | | | | | |     |-UnresolvedLookupExpr 0x7fa81d18dd48 <col:25, col:41> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | | | |     `-DeclRefExpr 0x7fa81d18dde0 <col:43> 'const char *' lvalue ParmVar 0x7fa81d187cc0 '__s' 'const char *'
|   | | | | | |-DeclStmt 0x7fa81d18e058 <line:1046:7, col:59>
|   | | | | | | `-VarDecl 0x7fa81d18de60 <col:7, col:58> col:19 referenced __b 'const _Size' cinit
|   | | | | | |   `-CallExpr 0x7fa81d18e028 <col:25, col:58> '<dependent type>'
|   | | | | | |     |-UnresolvedLookupExpr 0x7fa81d18ded0 <col:25, col:41> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | | | |     `-BinaryOperator 0x7fa81d18e000 <col:43, col:57> '<dependent type>' '-'
|   | | | | | |       |-BinaryOperator 0x7fa81d18dfb8 <col:43, col:49> '<dependent type>' '+'
|   | | | | | |       | |-DeclRefExpr 0x7fa81d18df68 <col:43> 'const char *' lvalue ParmVar 0x7fa81d187cc0 '__s' 'const char *'
|   | | | | | |       | `-DeclRefExpr 0x7fa81d18df90 <col:49> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | | |       `-IntegerLiteral 0x7fa81d18dfe0 <col:57> 'int' 8
|   | | | | | `-ReturnStmt 0x7fa81d18e248 <line:1047:7, col:79>
|   | | | | |   `-BinaryOperator 0x7fa81d18e220 <col:14, col:79> '<dependent type>' '^'
|   | | | | |     |-CallExpr 0x7fa81d18e1c0 <col:14, col:75> '<dependent type>'
|   | | | | |     | |-DeclRefExpr 0x7fa81d18e070 <col:14> '_Size (_Size, _Size)' lvalue CXXMethod 0x7fa81d187b80 '__hash_len_16' '_Size (_Size, _Size)'
|   | | | | |     | |-DeclRefExpr 0x7fa81d18e098 <col:28> 'const _Size' lvalue Var 0x7fa81d18dcd8 '__a' 'const _Size'
|   | | | | |     | `-CallExpr 0x7fa81d18e188 <col:33, col:74> '<dependent type>'
|   | | | | |     |   |-DeclRefExpr 0x7fa81d18e0c0 <col:33> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187740 '__rotate_by_at_least_1' '_Size (_Size, int)'
|   | | | | |     |   |-BinaryOperator 0x7fa81d18e138 <col:56, col:62> '<dependent type>' '+'
|   | | | | |     |   | |-DeclRefExpr 0x7fa81d18e0e8 <col:56> 'const _Size' lvalue Var 0x7fa81d18de60 '__b' 'const _Size'
|   | | | | |     |   | `-DeclRefExpr 0x7fa81d18e110 <col:62> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | |     |   `-DeclRefExpr 0x7fa81d18e160 <col:69> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | |     `-DeclRefExpr 0x7fa81d18e1f8 <col:79> 'const _Size' lvalue Var 0x7fa81d18de60 '__b' 'const _Size'
|   | | | | `-<<<NULL>>>
|   | | | |-IfStmt 0x7fa81d192c10 <line:1049:5, line:1053:5>
|   | | | | |-<<<NULL>>>
|   | | | | |-<<<NULL>>>
|   | | | | |-CXXOperatorCallExpr 0x7fa81d18e368 <line:1049:9, col:18> '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr 0x7fa81d18e310 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x7fa81d16f428
|   | | | | | |-DeclRefExpr 0x7fa81d18e2c8 <col:9> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | | `-IntegerLiteral 0x7fa81d18e2f0 <col:18> 'int' 4
|   | | | | |-CompoundStmt 0x7fa81d192be0 <col:21, line:1053:5>
|   | | | | | |-DeclStmt 0x7fa81d192810 <line:1050:7, col:53>
|   | | | | | | `-VarDecl 0x7fa81d18e3c0 <col:7, col:52> col:22 referenced __a 'const uint32_t':'const unsigned int' cinit
|   | | | | | |   `-CallExpr 0x7fa81d1927b0 <col:28, col:52> 'unsigned int':'unsigned int'
|   | | | | | |     |-ImplicitCastExpr 0x7fa81d192798 <col:28, col:47> 'unsigned int (*)(const void *)' <FunctionToPointerDecay>
|   | | | | | |     | `-DeclRefExpr 0x7fa81d1926d0 <col:28, col:47> 'unsigned int (const void *)' lvalue Function 0x7fa81d192590 '__loadword' 'unsigned int (const void *)' (FunctionTemplate 0x7fa81d184018 '__loadword')
|   | | | | | |     `-ImplicitCastExpr 0x7fa81d1927f8 <col:49> 'const void *' <BitCast>
|   | | | | | |       `-ImplicitCastExpr 0x7fa81d1927e0 <col:49> 'const char *' <LValueToRValue>
|   | | | | | |         `-DeclRefExpr 0x7fa81d18e4c8 <col:49> 'const char *' lvalue ParmVar 0x7fa81d187cc0 '__s' 'const char *'
|   | | | | | |-DeclStmt 0x7fa81d192a30 <line:1051:7, col:65>
|   | | | | | | `-VarDecl 0x7fa81d192838 <col:7, col:64> col:22 referenced __b 'const uint32_t':'const unsigned int' cinit
|   | | | | | |   `-CallExpr 0x7fa81d192a00 <col:28, col:64> '<dependent type>'
|   | | | | | |     |-UnresolvedLookupExpr 0x7fa81d1928a8 <col:28, col:47> '<overloaded function type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | | | |     `-BinaryOperator 0x7fa81d1929d8 <col:49, col:63> '<dependent type>' '-'
|   | | | | | |       |-BinaryOperator 0x7fa81d192990 <col:49, col:55> '<dependent type>' '+'
|   | | | | | |       | |-DeclRefExpr 0x7fa81d192940 <col:49> 'const char *' lvalue ParmVar 0x7fa81d187cc0 '__s' 'const char *'
|   | | | | | |       | `-DeclRefExpr 0x7fa81d192968 <col:55> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | | |       `-IntegerLiteral 0x7fa81d1929b8 <col:63> 'int' 4
|   | | | | | `-ReturnStmt 0x7fa81d192bc8 <line:1052:7, col:51>
|   | | | | |   `-CallExpr 0x7fa81d192b90 <col:14, col:51> '<dependent type>'
|   | | | | |     |-DeclRefExpr 0x7fa81d192a48 <col:14> '_Size (_Size, _Size)' lvalue CXXMethod 0x7fa81d187b80 '__hash_len_16' '_Size (_Size, _Size)'
|   | | | | |     |-BinaryOperator 0x7fa81d192b40 <col:28, col:45> '<dependent type>' '+'
|   | | | | |     | |-DeclRefExpr 0x7fa81d192a70 <col:28> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | |     | `-ParenExpr 0x7fa81d192b20 <col:36, col:45> 'uint32_t':'unsigned int'
|   | | | | |     |   `-BinaryOperator 0x7fa81d192af8 <col:37, col:44> 'uint32_t':'unsigned int' '<<'
|   | | | | |     |     |-ImplicitCastExpr 0x7fa81d192ae0 <col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|   | | | | |     |     | `-DeclRefExpr 0x7fa81d192a98 <col:37> 'const uint32_t':'const unsigned int' lvalue Var 0x7fa81d18e3c0 '__a' 'const uint32_t':'const unsigned int'
|   | | | | |     |     `-IntegerLiteral 0x7fa81d192ac0 <col:44> 'int' 3
|   | | | | |     `-DeclRefExpr 0x7fa81d192b68 <col:48> 'const uint32_t':'const unsigned int' lvalue Var 0x7fa81d192838 '__b' 'const uint32_t':'const unsigned int'
|   | | | | `-<<<NULL>>>
|   | | | |-IfStmt 0x7fa81d193758 <line:1054:5, line:1062:5>
|   | | | | |-<<<NULL>>>
|   | | | | |-<<<NULL>>>
|   | | | | |-CXXOperatorCallExpr 0x7fa81d192ce8 <line:1054:9, col:17> '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr 0x7fa81d192c90 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x7fa81d16eca8
|   | | | | | |-DeclRefExpr 0x7fa81d192c48 <col:9> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | | `-IntegerLiteral 0x7fa81d192c70 <col:17> 'int' 0
|   | | | | |-CompoundStmt 0x7fa81d193710 <col:20, line:1062:5>
|   | | | | | |-DeclStmt 0x7fa81d192e60 <line:1055:7, col:39>
|   | | | | | | `-VarDecl 0x7fa81d192d48 <col:7, col:38> col:27 referenced __a 'const unsigned char' cinit
|   | | | | | |   `-ImplicitCastExpr 0x7fa81d192e48 <col:33, col:38> 'const unsigned char' <IntegralCast>
|   | | | | | |     `-ImplicitCastExpr 0x7fa81d192e30 <col:33, col:38> 'char' <LValueToRValue>
|   | | | | | |       `-ArraySubscriptExpr 0x7fa81d192e08 <col:33, col:38> 'const char' lvalue
|   | | | | | |         |-ImplicitCastExpr 0x7fa81d192df0 <col:33> 'const char *' <LValueToRValue>
|   | | | | | |         | `-DeclRefExpr 0x7fa81d192da8 <col:33> 'const char *' lvalue ParmVar 0x7fa81d187cc0 '__s' 'const char *'
|   | | | | | |         `-IntegerLiteral 0x7fa81d192dd0 <col:37> 'int' 0
|   | | | | | |-DeclStmt 0x7fa81d192fb0 <line:1056:7, col:48>
|   | | | | | | `-VarDecl 0x7fa81d192e90 <col:7, col:47> col:27 referenced __b 'const unsigned char' cinit
|   | | | | | |   `-ArraySubscriptExpr 0x7fa81d192f88 <col:33, col:47> '<dependent type>' lvalue
|   | | | | | |     |-DeclRefExpr 0x7fa81d192ef0 <col:33> 'const char *' lvalue ParmVar 0x7fa81d187cc0 '__s' 'const char *'
|   | | | | | |     `-BinaryOperator 0x7fa81d192f60 <col:37, col:46> '<dependent type>' '>>'
|   | | | | | |       |-DeclRefExpr 0x7fa81d192f18 <col:37> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | | |       `-IntegerLiteral 0x7fa81d192f40 <col:46> 'int' 1
|   | | | | | |-DeclStmt 0x7fa81d193100 <line:1057:7, col:47>
|   | | | | | | `-VarDecl 0x7fa81d192fe0 <col:7, col:46> col:27 referenced __c 'const unsigned char' cinit
|   | | | | | |   `-ArraySubscriptExpr 0x7fa81d1930d8 <col:33, col:46> '<dependent type>' lvalue
|   | | | | | |     |-DeclRefExpr 0x7fa81d193040 <col:33> 'const char *' lvalue ParmVar 0x7fa81d187cc0 '__s' 'const char *'
|   | | | | | |     `-BinaryOperator 0x7fa81d1930b0 <col:37, col:45> '<dependent type>' '-'
|   | | | | | |       |-DeclRefExpr 0x7fa81d193068 <col:37> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | | |       `-IntegerLiteral 0x7fa81d193090 <col:45> 'int' 1
|   | | | | | |-DeclStmt 0x7fa81d193348 <line:1058:7, line:1059:61>
|   | | | | | | `-VarDecl 0x7fa81d193128 <line:1058:7, line:1059:60> line:1058:22 referenced __y 'const uint32_t':'const unsigned int' cinit
|   | | | | | |   `-BinaryOperator 0x7fa81d193320 <col:28, line:1059:60> 'unsigned int' '+'
|   | | | | | |     |-CXXStaticCastExpr 0x7fa81d1931f0 <line:1058:28, col:53> 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   | | | | | |     | `-ImplicitCastExpr 0x7fa81d1931d8 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
|   | | | | | |     |   `-ImplicitCastExpr 0x7fa81d1931c0 <col:50> 'unsigned char' <LValueToRValue>
|   | | | | | |     |     `-DeclRefExpr 0x7fa81d193188 <col:50> 'const unsigned char' lvalue Var 0x7fa81d192d48 '__a' 'const unsigned char'
|   | | | | | |     `-ParenExpr 0x7fa81d193300 <line:1059:28, col:60> 'uint32_t':'unsigned int'
|   | | | | | |       `-BinaryOperator 0x7fa81d1932d8 <col:29, col:59> 'uint32_t':'unsigned int' '<<'
|   | | | | | |         |-CXXStaticCastExpr 0x7fa81d193288 <col:29, col:54> 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   | | | | | |         | `-ImplicitCastExpr 0x7fa81d193270 <col:51> 'uint32_t':'unsigned int' <IntegralCast>
|   | | | | | |         |   `-ImplicitCastExpr 0x7fa81d193258 <col:51> 'unsigned char' <LValueToRValue>
|   | | | | | |         |     `-DeclRefExpr 0x7fa81d193220 <col:51> 'const unsigned char' lvalue Var 0x7fa81d192e90 '__b' 'const unsigned char'
|   | | | | | |         `-IntegerLiteral 0x7fa81d1932b8 <col:59> 'int' 8
|   | | | | | |-DeclStmt 0x7fa81d193520 <line:1060:7, col:69>
|   | | | | | | `-VarDecl 0x7fa81d193370 <col:7, col:68> col:22 referenced __z 'const uint32_t':'const unsigned int' cinit
|   | | | | | |   `-BinaryOperator 0x7fa81d1934f8 <col:28, col:68> '<dependent type>' '+'
|   | | | | | |     |-DeclRefExpr 0x7fa81d1933d0 <col:28> '_Size' lvalue ParmVar 0x7fa81d187d30 '__len' '_Size'
|   | | | | | |     `-ParenExpr 0x7fa81d1934d8 <col:36, col:68> 'uint32_t':'unsigned int'
|   | | | | | |       `-BinaryOperator 0x7fa81d1934b0 <col:37, col:67> 'uint32_t':'unsigned int' '<<'
|   | | | | | |         |-CXXStaticCastExpr 0x7fa81d193460 <col:37, col:62> 'uint32_t':'unsigned int' static_cast<uint32_t> <NoOp>
|   | | | | | |         | `-ImplicitCastExpr 0x7fa81d193448 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
|   | | | | | |         |   `-ImplicitCastExpr 0x7fa81d193430 <col:59> 'unsigned char' <LValueToRValue>
|   | | | | | |         |     `-DeclRefExpr 0x7fa81d1933f8 <col:59> 'const unsigned char' lvalue Var 0x7fa81d192fe0 '__c' 'const unsigned char'
|   | | | | | |         `-IntegerLiteral 0x7fa81d193490 <col:67> 'int' 2
|   | | | | | `-ReturnStmt 0x7fa81d1936f8 <line:1061:7, col:53>
|   | | | | |   `-BinaryOperator 0x7fa81d1936d0 <col:14, col:53> '<dependent type>' '*'
|   | | | | |     |-CallExpr 0x7fa81d193678 <col:14, col:49> '<dependent type>'
|   | | | | |     | |-DeclRefExpr 0x7fa81d193538 <col:14> '_Size (_Size)' lvalue CXXMethod 0x7fa81d187900 '__shift_mix' '_Size (_Size)'
|   | | | | |     | `-BinaryOperator 0x7fa81d193650 <col:26, col:45> '<dependent type>' '^'
|   | | | | |     |   |-BinaryOperator 0x7fa81d1935b0 <col:26, col:32> '<dependent type>' '*'
|   | | | | |     |   | |-DeclRefExpr 0x7fa81d193560 <col:26> 'const uint32_t':'const unsigned int' lvalue Var 0x7fa81d193128 '__y' 'const uint32_t':'const unsigned int'
|   | | | | |     |   | `-DeclRefExpr 0x7fa81d193588 <col:32> 'const _Size' lvalue Var 0x7fa81d1872d0 '__k2' 'const _Size'
|   | | | | |     |   `-BinaryOperator 0x7fa81d193628 <col:39, col:45> '<dependent type>' '*'
|   | | | | |     |     |-DeclRefExpr 0x7fa81d1935d8 <col:39> 'const uint32_t':'const unsigned int' lvalue Var 0x7fa81d193370 '__z' 'const uint32_t':'const unsigned int'
|   | | | | |     |     `-DeclRefExpr 0x7fa81d193600 <col:45> 'const _Size' lvalue Var 0x7fa81d187360 '__k3' 'const _Size'
|   | | | | |     `-DeclRefExpr 0x7fa81d1936a8 <col:53> 'const _Size' lvalue Var 0x7fa81d1872d0 '__k2' 'const _Size'
|   | | | | `-<<<NULL>>>
|   | | | `-ReturnStmt 0x7fa81d1937b8 <line:1063:5, col:12>
|   | | |   `-DeclRefExpr 0x7fa81d193790 <col:12> 'const _Size' lvalue Var 0x7fa81d1872d0 '__k2' 'const _Size'
|   | | `-NoSanitizeAttr 0x7fa81d187f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, col:112> unsigned-integer-overflow
|   | |-CXXMethodDecl 0x7fa81d188118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1066:3, line:1075:3> line:1066:16 referenced __hash_len_17_to_32 '_Size (const char *, _Size)' static
|   | | |-ParmVarDecl 0x7fa81d187fd0 <col:36, col:48> col:48 referenced __s 'const char *'
|   | | |-ParmVarDecl 0x7fa81d188040 <col:53, col:59> col:59 referenced __len '_Size'
|   | | |-CompoundStmt 0x7fa81d194530 <line:1068:3, line:1075:3>
|   | | | |-DeclStmt 0x7fa81d1939c8 <line:1069:5, col:52>
|   | | | | `-VarDecl 0x7fa81d193818 <col:5, col:48> col:17 referenced __a 'const _Size' cinit
|   | | | |   `-BinaryOperator 0x7fa81d1939a0 <col:23, col:48> '<dependent type>' '*'
|   | | | |     |-CallExpr 0x7fa81d193948 <col:23, col:44> '<dependent type>'
|   | | | |     | |-UnresolvedLookupExpr 0x7fa81d193888 <col:23, col:39> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | |     | `-DeclRefExpr 0x7fa81d193920 <col:41> 'const char *' lvalue ParmVar 0x7fa81d187fd0 '__s' 'const char *'
|   | | | |     `-DeclRefExpr 0x7fa81d193978 <col:48> 'const _Size' lvalue Var 0x7fa81d187240 '__k1' 'const _Size'
|   | | | |-DeclStmt 0x7fa81d193bb0 <line:1070:5, col:49>
|   | | | | `-VarDecl 0x7fa81d1939f0 <col:5, col:48> col:17 referenced __b 'const _Size' cinit
|   | | | |   `-CallExpr 0x7fa81d193b80 <col:23, col:48> '<dependent type>'
|   | | | |     |-UnresolvedLookupExpr 0x7fa81d193a60 <col:23, col:39> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | |     `-BinaryOperator 0x7fa81d193b58 <col:41, col:47> 'const char *' '+'
|   | | | |       |-ImplicitCastExpr 0x7fa81d193b40 <col:41> 'const char *' <LValueToRValue>
|   | | | |       | `-DeclRefExpr 0x7fa81d193af8 <col:41> 'const char *' lvalue ParmVar 0x7fa81d187fd0 '__s' 'const char *'
|   | | | |       `-IntegerLiteral 0x7fa81d193b20 <col:47> 'int' 8
|   | | | |-DeclStmt 0x7fa81d193e20 <line:1071:5, col:64>
|   | | | | `-VarDecl 0x7fa81d193bd8 <col:5, col:60> col:17 referenced __c 'const _Size' cinit
|   | | | |   `-BinaryOperator 0x7fa81d193df8 <col:23, col:60> '<dependent type>' '*'
|   | | | |     |-CallExpr 0x7fa81d193da0 <col:23, col:56> '<dependent type>'
|   | | | |     | |-UnresolvedLookupExpr 0x7fa81d193c48 <col:23, col:39> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | |     | `-BinaryOperator 0x7fa81d193d78 <col:41, col:55> '<dependent type>' '-'
|   | | | |     |   |-BinaryOperator 0x7fa81d193d30 <col:41, col:47> '<dependent type>' '+'
|   | | | |     |   | |-DeclRefExpr 0x7fa81d193ce0 <col:41> 'const char *' lvalue ParmVar 0x7fa81d187fd0 '__s' 'const char *'
|   | | | |     |   | `-DeclRefExpr 0x7fa81d193d08 <col:47> '_Size' lvalue ParmVar 0x7fa81d188040 '__len' '_Size'
|   | | | |     |   `-IntegerLiteral 0x7fa81d193d58 <col:55> 'int' 8
|   | | | |     `-DeclRefExpr 0x7fa81d193dd0 <col:60> 'const _Size' lvalue Var 0x7fa81d1872d0 '__k2' 'const _Size'
|   | | | |-DeclStmt 0x7fa81d194090 <line:1072:5, col:65>
|   | | | | `-VarDecl 0x7fa81d193e48 <col:5, col:61> col:17 referenced __d 'const _Size' cinit
|   | | | |   `-BinaryOperator 0x7fa81d194068 <col:23, col:61> '<dependent type>' '*'
|   | | | |     |-CallExpr 0x7fa81d194010 <col:23, col:57> '<dependent type>'
|   | | | |     | |-UnresolvedLookupExpr 0x7fa81d193eb8 <col:23, col:39> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | |     | `-BinaryOperator 0x7fa81d193fe8 <col:41, col:55> '<dependent type>' '-'
|   | | | |     |   |-BinaryOperator 0x7fa81d193fa0 <col:41, col:47> '<dependent type>' '+'
|   | | | |     |   | |-DeclRefExpr 0x7fa81d193f50 <col:41> 'const char *' lvalue ParmVar 0x7fa81d187fd0 '__s' 'const char *'
|   | | | |     |   | `-DeclRefExpr 0x7fa81d193f78 <col:47> '_Size' lvalue ParmVar 0x7fa81d188040 '__len' '_Size'
|   | | | |     |   `-IntegerLiteral 0x7fa81d193fc8 <col:55> 'int' 16
|   | | | |     `-DeclRefExpr 0x7fa81d194040 <col:61> 'const _Size' lvalue Var 0x7fa81d1871b0 '__k0' 'const _Size'
|   | | | `-ReturnStmt 0x7fa81d194518 <line:1073:5, line:1074:70>
|   | | |   `-CallExpr 0x7fa81d1944e0 <line:1073:12, line:1074:70> '<dependent type>'
|   | | |     |-DeclRefExpr 0x7fa81d1940a8 <line:1073:12> '_Size (_Size, _Size)' lvalue CXXMethod 0x7fa81d187b80 '__hash_len_16' '_Size (_Size, _Size)'
|   | | |     |-BinaryOperator 0x7fa81d1942c0 <col:26, col:72> '<dependent type>' '+'
|   | | |     | |-BinaryOperator 0x7fa81d194270 <col:26, col:68> '<dependent type>' '+'
|   | | |     | | |-CallExpr 0x7fa81d194190 <col:26, col:48> '<dependent type>'
|   | | |     | | | |-DeclRefExpr 0x7fa81d1940d0 <col:26> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   | | |     | | | |-BinaryOperator 0x7fa81d194148 <col:35, col:41> '<dependent type>' '-'
|   | | |     | | | | |-DeclRefExpr 0x7fa81d1940f8 <col:35> 'const _Size' lvalue Var 0x7fa81d193818 '__a' 'const _Size'
|   | | |     | | | | `-DeclRefExpr 0x7fa81d194120 <col:41> 'const _Size' lvalue Var 0x7fa81d1939f0 '__b' 'const _Size'
|   | | |     | | | `-IntegerLiteral 0x7fa81d194170 <col:46> 'int' 43
|   | | |     | | `-CallExpr 0x7fa81d194238 <col:52, col:68> '<dependent type>'
|   | | |     | |   |-DeclRefExpr 0x7fa81d1941c8 <col:52> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   | | |     | |   |-DeclRefExpr 0x7fa81d1941f0 <col:61> 'const _Size' lvalue Var 0x7fa81d193bd8 '__c' 'const _Size'
|   | | |     | |   `-IntegerLiteral 0x7fa81d194218 <col:66> 'int' 30
|   | | |     | `-DeclRefExpr 0x7fa81d194298 <col:72> 'const _Size' lvalue Var 0x7fa81d193e48 '__d' 'const _Size'
|   | | |     `-BinaryOperator 0x7fa81d1944b8 <line:1074:26, col:65> '<dependent type>' '+'
|   | | |       |-BinaryOperator 0x7fa81d194468 <col:26, col:59> '<dependent type>' '-'
|   | | |       | |-BinaryOperator 0x7fa81d194418 <col:26, col:55> '<dependent type>' '+'
|   | | |       | | |-DeclRefExpr 0x7fa81d1942e8 <col:26> 'const _Size' lvalue Var 0x7fa81d193818 '__a' 'const _Size'
|   | | |       | | `-CallExpr 0x7fa81d1943d0 <col:32, col:55> '<dependent type>'
|   | | |       | |   |-DeclRefExpr 0x7fa81d194310 <col:32> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   | | |       | |   |-BinaryOperator 0x7fa81d194388 <col:41, col:47> '<dependent type>' '^'
|   | | |       | |   | |-DeclRefExpr 0x7fa81d194338 <col:41> 'const _Size' lvalue Var 0x7fa81d1939f0 '__b' 'const _Size'
|   | | |       | |   | `-DeclRefExpr 0x7fa81d194360 <col:47> 'const _Size' lvalue Var 0x7fa81d187360 '__k3' 'const _Size'
|   | | |       | |   `-IntegerLiteral 0x7fa81d1943b0 <col:53> 'int' 20
|   | | |       | `-DeclRefExpr 0x7fa81d194440 <col:59> 'const _Size' lvalue Var 0x7fa81d193bd8 '__c' 'const _Size'
|   | | |       `-DeclRefExpr 0x7fa81d194490 <col:65> '_Size' lvalue ParmVar 0x7fa81d188040 '__len' '_Size'
|   | | `-NoSanitizeAttr 0x7fa81d1881c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, col:112> unsigned-integer-overflow
|   | |-CXXMethodDecl 0x7fa81d18c600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1079:3, line:1090:3> line:1079:29 __weak_hash_len_32_with_seeds 'pair<_Size, _Size> (_Size, _Size, _Size, _Size, _Size, _Size)' static
|   | | |-ParmVarDecl 0x7fa81d188388 <line:1080:7, col:13> col:13 referenced __w '_Size'
|   | | |-ParmVarDecl 0x7fa81d1883f8 <col:18, col:24> col:24 referenced __x '_Size'
|   | | |-ParmVarDecl 0x7fa81d188468 <col:29, col:35> col:35 referenced __y '_Size'
|   | | |-ParmVarDecl 0x7fa81d1884d8 <col:40, col:46> col:46 referenced __z '_Size'
|   | | |-ParmVarDecl 0x7fa81d188548 <col:51, col:57> col:57 referenced __a '_Size'
|   | | |-ParmVarDecl 0x7fa81d1885b8 <col:62, col:68> col:68 referenced __b '_Size'
|   | | |-CompoundStmt 0x7fa81d194cb0 <line:1082:3, line:1090:3>
|   | | | |-CompoundAssignOperator 0x7fa81d1945c0 <line:1083:5, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr 0x7fa81d194570 <col:5> '_Size' lvalue ParmVar 0x7fa81d188548 '__a' '_Size'
|   | | | | `-DeclRefExpr 0x7fa81d194598 <col:12> '_Size' lvalue ParmVar 0x7fa81d188388 '__w' '_Size'
|   | | | |-BinaryOperator 0x7fa81d194768 <line:1084:5, col:39> '<dependent type>' '='
|   | | | | |-DeclRefExpr 0x7fa81d1945f8 <col:5> '_Size' lvalue ParmVar 0x7fa81d1885b8 '__b' '_Size'
|   | | | | `-CallExpr 0x7fa81d194730 <col:11, col:39> '<dependent type>'
|   | | | |   |-DeclRefExpr 0x7fa81d194620 <col:11> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   | | | |   |-BinaryOperator 0x7fa81d1946e8 <col:20, col:32> '<dependent type>' '+'
|   | | | |   | |-BinaryOperator 0x7fa81d194698 <col:20, col:26> '<dependent type>' '+'
|   | | | |   | | |-DeclRefExpr 0x7fa81d194648 <col:20> '_Size' lvalue ParmVar 0x7fa81d1885b8 '__b' '_Size'
|   | | | |   | | `-DeclRefExpr 0x7fa81d194670 <col:26> '_Size' lvalue ParmVar 0x7fa81d188548 '__a' '_Size'
|   | | | |   | `-DeclRefExpr 0x7fa81d1946c0 <col:32> '_Size' lvalue ParmVar 0x7fa81d1884d8 '__z' '_Size'
|   | | | |   `-IntegerLiteral 0x7fa81d194710 <col:37> 'int' 21
|   | | | |-DeclStmt 0x7fa81d194828 <line:1085:5, col:26>
|   | | | | `-VarDecl 0x7fa81d1947a0 <col:5, col:23> col:17 referenced __c 'const _Size' cinit
|   | | | |   `-DeclRefExpr 0x7fa81d194800 <col:23> '_Size' lvalue ParmVar 0x7fa81d188548 '__a' '_Size'
|   | | | |-CompoundAssignOperator 0x7fa81d194890 <line:1086:5, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr 0x7fa81d194840 <col:5> '_Size' lvalue ParmVar 0x7fa81d188548 '__a' '_Size'
|   | | | | `-DeclRefExpr 0x7fa81d194868 <col:12> '_Size' lvalue ParmVar 0x7fa81d1883f8 '__x' '_Size'
|   | | | |-CompoundAssignOperator 0x7fa81d194918 <line:1087:5, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr 0x7fa81d1948c8 <col:5> '_Size' lvalue ParmVar 0x7fa81d188548 '__a' '_Size'
|   | | | | `-DeclRefExpr 0x7fa81d1948f0 <col:12> '_Size' lvalue ParmVar 0x7fa81d188468 '__y' '_Size'
|   | | | |-CompoundAssignOperator 0x7fa81d194a20 <line:1088:5, col:28> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | |-DeclRefExpr 0x7fa81d194950 <col:5> '_Size' lvalue ParmVar 0x7fa81d1885b8 '__b' '_Size'
|   | | | | `-CallExpr 0x7fa81d1949e8 <col:12, col:28> '<dependent type>'
|   | | | |   |-DeclRefExpr 0x7fa81d194978 <col:12> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   | | | |   |-DeclRefExpr 0x7fa81d1949a0 <col:21> '_Size' lvalue ParmVar 0x7fa81d188548 '__a' '_Size'
|   | | | |   `-IntegerLiteral 0x7fa81d1949c8 <col:26> 'int' 44
|   | | | `-ReturnStmt 0x7fa81d194c98 <line:1089:5, col:51>
|   | | |   `-CXXUnresolvedConstructExpr 0x7fa81d194c60 <col:12, col:51> 'pair<_Size, _Size>'
|   | | |     |-BinaryOperator 0x7fa81d194bc0 <col:31, col:37> '<dependent type>' '+'
|   | | |     | |-DeclRefExpr 0x7fa81d194b70 <col:31> '_Size' lvalue ParmVar 0x7fa81d188548 '__a' '_Size'
|   | | |     | `-DeclRefExpr 0x7fa81d194b98 <col:37> '_Size' lvalue ParmVar 0x7fa81d1884d8 '__z' '_Size'
|   | | |     `-BinaryOperator 0x7fa81d194c38 <col:42, col:48> '<dependent type>' '+'
|   | | |       |-DeclRefExpr 0x7fa81d194be8 <col:42> '_Size' lvalue ParmVar 0x7fa81d1885b8 '__b' '_Size'
|   | | |       `-DeclRefExpr 0x7fa81d194c10 <col:48> 'const _Size' lvalue Var 0x7fa81d1947a0 '__c' 'const _Size'
|   | | `-NoSanitizeAttr 0x7fa81d18c6c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, col:112> unsigned-integer-overflow
|   | |-CXXMethodDecl 0x7fa81d18cac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1093:3, line:1103:3> line:1093:29 __weak_hash_len_32_with_seeds 'pair<_Size, _Size> (const char *, _Size, _Size)' static
|   | | |-ParmVarDecl 0x7fa81d18c830 <line:1094:7, col:19> col:19 referenced __s 'const char *'
|   | | |-ParmVarDecl 0x7fa81d18c8a0 <col:24, col:30> col:30 referenced __a '_Size'
|   | | |-ParmVarDecl 0x7fa81d18c910 <col:35, col:41> col:41 referenced __b '_Size'
|   | | |-CompoundStmt 0x7fa81d195340 <line:1096:3, line:1103:3>
|   | | | `-ReturnStmt 0x7fa81d195328 <line:1097:5, line:1102:45>
|   | | |   `-CallExpr 0x7fa81d1952d0 <line:1097:12, line:1102:45> '<dependent type>'
|   | | |     |-UnresolvedLookupExpr 0x7fa81d194d00 <line:1097:12> '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fa81d18cac8 0x7fa81d18c600
|   | | |     |-CallExpr 0x7fa81d194e30 <col:42, col:63> '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr 0x7fa81d194d70 <col:42, col:58> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |     | `-DeclRefExpr 0x7fa81d194e08 <col:60> 'const char *' lvalue ParmVar 0x7fa81d18c830 '__s' 'const char *'
|   | | |     |-CallExpr 0x7fa81d194f90 <line:1098:42, col:67> '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr 0x7fa81d194e70 <col:42, col:58> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |     | `-BinaryOperator 0x7fa81d194f68 <col:60, col:66> 'const char *' '+'
|   | | |     |   |-ImplicitCastExpr 0x7fa81d194f50 <col:60> 'const char *' <LValueToRValue>
|   | | |     |   | `-DeclRefExpr 0x7fa81d194f08 <col:60> 'const char *' lvalue ParmVar 0x7fa81d18c830 '__s' 'const char *'
|   | | |     |   `-IntegerLiteral 0x7fa81d194f30 <col:66> 'int' 8
|   | | |     |-CallExpr 0x7fa81d1950f0 <line:1099:42, col:68> '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr 0x7fa81d194fd0 <col:42, col:58> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |     | `-BinaryOperator 0x7fa81d1950c8 <col:60, col:66> 'const char *' '+'
|   | | |     |   |-ImplicitCastExpr 0x7fa81d1950b0 <col:60> 'const char *' <LValueToRValue>
|   | | |     |   | `-DeclRefExpr 0x7fa81d195068 <col:60> 'const char *' lvalue ParmVar 0x7fa81d18c830 '__s' 'const char *'
|   | | |     |   `-IntegerLiteral 0x7fa81d195090 <col:66> 'int' 16
|   | | |     |-CallExpr 0x7fa81d195250 <line:1100:42, col:68> '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr 0x7fa81d195130 <col:42, col:58> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |     | `-BinaryOperator 0x7fa81d195228 <col:60, col:66> 'const char *' '+'
|   | | |     |   |-ImplicitCastExpr 0x7fa81d195210 <col:60> 'const char *' <LValueToRValue>
|   | | |     |   | `-DeclRefExpr 0x7fa81d1951c8 <col:60> 'const char *' lvalue ParmVar 0x7fa81d18c830 '__s' 'const char *'
|   | | |     |   `-IntegerLiteral 0x7fa81d1951f0 <col:66> 'int' 24
|   | | |     |-DeclRefExpr 0x7fa81d195280 <line:1101:42> '_Size' lvalue ParmVar 0x7fa81d18c8a0 '__a' '_Size'
|   | | |     `-DeclRefExpr 0x7fa81d1952a8 <line:1102:42> '_Size' lvalue ParmVar 0x7fa81d18c910 '__b' '_Size'
|   | | `-NoSanitizeAttr 0x7fa81d18cb78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, col:112> unsigned-integer-overflow
|   | `-CXXMethodDecl 0x7fa81d18cde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1106:3, line:1130:3> line:1106:16 referenced __hash_len_33_to_64 '_Size (const char *, size_t)' static
|   |   |-ParmVarDecl 0x7fa81d18cc10 <col:36, col:48> col:48 referenced __s 'const char *'
|   |   |-ParmVarDecl 0x7fa81d18cc80 <col:53, col:60> col:60 referenced __len 'size_t':'unsigned long'
|   |   |-CompoundStmt 0x7fa81d197858 <line:1108:3, line:1130:3>
|   |   | |-DeclStmt 0x7fa81d195530 <line:1109:5, col:44>
|   |   | | `-VarDecl 0x7fa81d195370 <col:5, col:43> col:11 referenced __z '_Size' cinit
|   |   | |   `-CallExpr 0x7fa81d195500 <col:17, col:43> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x7fa81d1953e0 <col:17, col:33> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |     `-BinaryOperator 0x7fa81d1954d8 <col:35, col:41> 'const char *' '+'
|   |   | |       |-ImplicitCastExpr 0x7fa81d1954c0 <col:35> 'const char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x7fa81d195478 <col:35> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |       `-IntegerLiteral 0x7fa81d1954a0 <col:41> 'int' 24
|   |   | |-DeclStmt 0x7fa81d195968 <line:1110:5, line:1111:69>
|   |   | | `-VarDecl 0x7fa81d195558 <line:1110:5, line:1111:65> line:1110:11 referenced __a '_Size' cinit
|   |   | |   `-BinaryOperator 0x7fa81d195940 <col:17, line:1111:65> '<dependent type>' '+'
|   |   | |     |-CallExpr 0x7fa81d195688 <line:1110:17, col:38> '<dependent type>'
|   |   | |     | |-UnresolvedLookupExpr 0x7fa81d1955c8 <col:17, col:33> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |     | `-DeclRefExpr 0x7fa81d195660 <col:35> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |     `-BinaryOperator 0x7fa81d195918 <line:1111:17, col:65> '<dependent type>' '*'
|   |   | |       |-ParenExpr 0x7fa81d1958d0 <col:17, col:61> '<dependent type>'
|   |   | |       | `-BinaryOperator 0x7fa81d1958a8 <col:18, col:60> '<dependent type>' '+'
|   |   | |       |   |-DeclRefExpr 0x7fa81d1956b8 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d18cc80 '__len' 'size_t':'unsigned long'
|   |   | |       |   `-CallExpr 0x7fa81d195878 <col:26, col:60> '<dependent type>'
|   |   | |       |     |-UnresolvedLookupExpr 0x7fa81d1956f0 <col:26, col:42> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |       |     `-BinaryOperator 0x7fa81d195850 <col:44, col:58> 'const char *' '-'
|   |   | |       |       |-BinaryOperator 0x7fa81d195808 <col:44, col:50> 'const char *' '+'
|   |   | |       |       | |-ImplicitCastExpr 0x7fa81d1957d8 <col:44> 'const char *' <LValueToRValue>
|   |   | |       |       | | `-DeclRefExpr 0x7fa81d195788 <col:44> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |       |       | `-ImplicitCastExpr 0x7fa81d1957f0 <col:50> 'size_t':'unsigned long' <LValueToRValue>
|   |   | |       |       |   `-DeclRefExpr 0x7fa81d1957b0 <col:50> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d18cc80 '__len' 'size_t':'unsigned long'
|   |   | |       |       `-IntegerLiteral 0x7fa81d195830 <col:58> 'int' 16
|   |   | |       `-DeclRefExpr 0x7fa81d1958f0 <col:65> 'const _Size' lvalue Var 0x7fa81d1871b0 '__k0' 'const _Size'
|   |   | |-DeclStmt 0x7fa81d195ae8 <line:1112:5, col:40>
|   |   | | `-VarDecl 0x7fa81d195990 <col:5, col:39> col:11 referenced __b '_Size' cinit
|   |   | |   `-CallExpr 0x7fa81d195ab0 <col:17, col:39> '<dependent type>'
|   |   | |     |-DeclRefExpr 0x7fa81d1959f0 <col:17> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   |   | |     |-BinaryOperator 0x7fa81d195a68 <col:26, col:32> '<dependent type>' '+'
|   |   | |     | |-DeclRefExpr 0x7fa81d195a18 <col:26> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |     | `-DeclRefExpr 0x7fa81d195a40 <col:32> '_Size' lvalue Var 0x7fa81d195370 '__z' '_Size'
|   |   | |     `-IntegerLiteral 0x7fa81d195a90 <col:37> 'int' 52
|   |   | |-DeclStmt 0x7fa81d195c18 <line:1113:5, col:34>
|   |   | | `-VarDecl 0x7fa81d195b10 <col:5, col:33> col:11 referenced __c '_Size' cinit
|   |   | |   `-CallExpr 0x7fa81d195be0 <col:17, col:33> '<dependent type>'
|   |   | |     |-DeclRefExpr 0x7fa81d195b70 <col:17> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   |   | |     |-DeclRefExpr 0x7fa81d195b98 <col:26> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |     `-IntegerLiteral 0x7fa81d195bc0 <col:31> 'int' 37
|   |   | |-CompoundAssignOperator 0x7fa81d195db8 <line:1114:5, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr 0x7fa81d195c30 <col:5> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | | `-CallExpr 0x7fa81d195d88 <col:12, col:37> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x7fa81d195c68 <col:12, col:28> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |   `-BinaryOperator 0x7fa81d195d60 <col:30, col:36> 'const char *' '+'
|   |   | |     |-ImplicitCastExpr 0x7fa81d195d48 <col:30> 'const char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x7fa81d195d00 <col:30> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |     `-IntegerLiteral 0x7fa81d195d28 <col:36> 'int' 8
|   |   | |-CompoundAssignOperator 0x7fa81d195ec0 <line:1115:5, col:27> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr 0x7fa81d195df0 <col:5> '_Size' lvalue Var 0x7fa81d195b10 '__c' '_Size'
|   |   | | `-CallExpr 0x7fa81d195e88 <col:12, col:27> '<dependent type>'
|   |   | |   |-DeclRefExpr 0x7fa81d195e18 <col:12> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   |   | |   |-DeclRefExpr 0x7fa81d195e40 <col:21> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |   `-IntegerLiteral 0x7fa81d195e68 <col:26> 'int' 7
|   |   | |-CompoundAssignOperator 0x7fa81d196080 <line:1116:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr 0x7fa81d195ef8 <col:5> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | | `-CallExpr 0x7fa81d196050 <col:12, col:38> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x7fa81d195f30 <col:12, col:28> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |   `-BinaryOperator 0x7fa81d196028 <col:30, col:36> 'const char *' '+'
|   |   | |     |-ImplicitCastExpr 0x7fa81d196010 <col:30> 'const char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x7fa81d195fc8 <col:30> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |     `-IntegerLiteral 0x7fa81d195ff0 <col:36> 'int' 16
|   |   | |-DeclStmt 0x7fa81d1961a0 <line:1117:5, col:27>
|   |   | | `-VarDecl 0x7fa81d1960c8 <col:5, col:24> col:11 referenced __vf '_Size' cinit
|   |   | |   `-BinaryOperator 0x7fa81d196178 <col:18, col:24> '<dependent type>' '+'
|   |   | |     |-DeclRefExpr 0x7fa81d196128 <col:18> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |     `-DeclRefExpr 0x7fa81d196150 <col:24> '_Size' lvalue Var 0x7fa81d195370 '__z' '_Size'
|   |   | |-DeclStmt 0x7fa81d196370 <line:1118:5, col:47>
|   |   | | `-VarDecl 0x7fa81d1961c8 <col:5, col:44> col:11 referenced __vs '_Size' cinit
|   |   | |   `-BinaryOperator 0x7fa81d196348 <col:18, col:44> '<dependent type>' '+'
|   |   | |     |-BinaryOperator 0x7fa81d1962f8 <col:18, col:40> '<dependent type>' '+'
|   |   | |     | |-DeclRefExpr 0x7fa81d196228 <col:18> '_Size' lvalue Var 0x7fa81d195990 '__b' '_Size'
|   |   | |     | `-CallExpr 0x7fa81d1962c0 <col:24, col:40> '<dependent type>'
|   |   | |     |   |-DeclRefExpr 0x7fa81d196250 <col:24> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   |   | |     |   |-DeclRefExpr 0x7fa81d196278 <col:33> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |     |   `-IntegerLiteral 0x7fa81d1962a0 <col:38> 'int' 31
|   |   | |     `-DeclRefExpr 0x7fa81d196320 <col:44> '_Size' lvalue Var 0x7fa81d195b10 '__c' '_Size'
|   |   | |-BinaryOperator 0x7fa81d196740 <line:1119:5, col:75> '<dependent type>' '='
|   |   | | |-DeclRefExpr 0x7fa81d196388 <col:5> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | | `-BinaryOperator 0x7fa81d196718 <col:11, col:75> '<dependent type>' '+'
|   |   | |   |-CallExpr 0x7fa81d196520 <col:11, col:37> '<dependent type>'
|   |   | |   | |-UnresolvedLookupExpr 0x7fa81d196400 <col:11, col:27> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |   | `-BinaryOperator 0x7fa81d1964f8 <col:29, col:35> 'const char *' '+'
|   |   | |   |   |-ImplicitCastExpr 0x7fa81d1964e0 <col:29> 'const char *' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 0x7fa81d196498 <col:29> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |   |   `-IntegerLiteral 0x7fa81d1964c0 <col:35> 'int' 16
|   |   | |   `-CallExpr 0x7fa81d1966e8 <col:41, col:75> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x7fa81d196560 <col:41, col:57> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |     `-BinaryOperator 0x7fa81d1966c0 <col:59, col:73> 'const char *' '-'
|   |   | |       |-BinaryOperator 0x7fa81d196678 <col:59, col:65> 'const char *' '+'
|   |   | |       | |-ImplicitCastExpr 0x7fa81d196648 <col:59> 'const char *' <LValueToRValue>
|   |   | |       | | `-DeclRefExpr 0x7fa81d1965f8 <col:59> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |       | `-ImplicitCastExpr 0x7fa81d196660 <col:65> 'size_t':'unsigned long' <LValueToRValue>
|   |   | |       |   `-DeclRefExpr 0x7fa81d196620 <col:65> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d18cc80 '__len' 'size_t':'unsigned long'
|   |   | |       `-IntegerLiteral 0x7fa81d1966a0 <col:73> 'int' 32
|   |   | |-CompoundAssignOperator 0x7fa81d196958 <line:1120:5, col:45> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr 0x7fa81d196768 <col:5> '_Size' lvalue Var 0x7fa81d195370 '__z' '_Size'
|   |   | | `-CallExpr 0x7fa81d196928 <col:12, col:45> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x7fa81d1967a0 <col:12, col:28> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |   `-BinaryOperator 0x7fa81d196900 <col:30, col:44> 'const char *' '-'
|   |   | |     |-BinaryOperator 0x7fa81d1968b8 <col:30, col:36> 'const char *' '+'
|   |   | |     | |-ImplicitCastExpr 0x7fa81d196888 <col:30> 'const char *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x7fa81d196838 <col:30> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |     | `-ImplicitCastExpr 0x7fa81d1968a0 <col:36> 'size_t':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x7fa81d196860 <col:36> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d18cc80 '__len' 'size_t':'unsigned long'
|   |   | |     `-IntegerLiteral 0x7fa81d1968e0 <col:44> 'int' 8
|   |   | |-BinaryOperator 0x7fa81d196ab0 <line:1121:5, col:33> '<dependent type>' '='
|   |   | | |-DeclRefExpr 0x7fa81d196990 <col:5> '_Size' lvalue Var 0x7fa81d195990 '__b' '_Size'
|   |   | | `-CallExpr 0x7fa81d196a78 <col:11, col:33> '<dependent type>'
|   |   | |   |-DeclRefExpr 0x7fa81d1969b8 <col:11> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   |   | |   |-BinaryOperator 0x7fa81d196a30 <col:20, col:26> '<dependent type>' '+'
|   |   | |   | |-DeclRefExpr 0x7fa81d1969e0 <col:20> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |   | `-DeclRefExpr 0x7fa81d196a08 <col:26> '_Size' lvalue Var 0x7fa81d195370 '__z' '_Size'
|   |   | |   `-IntegerLiteral 0x7fa81d196a58 <col:31> 'int' 52
|   |   | |-BinaryOperator 0x7fa81d196ba8 <line:1122:5, col:27> '<dependent type>' '='
|   |   | | |-DeclRefExpr 0x7fa81d196ad8 <col:5> '_Size' lvalue Var 0x7fa81d195b10 '__c' '_Size'
|   |   | | `-CallExpr 0x7fa81d196b70 <col:11, col:27> '<dependent type>'
|   |   | |   |-DeclRefExpr 0x7fa81d196b00 <col:11> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   |   | |   |-DeclRefExpr 0x7fa81d196b28 <col:20> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |   `-IntegerLiteral 0x7fa81d196b50 <col:25> 'int' 37
|   |   | |-CompoundAssignOperator 0x7fa81d196dc0 <line:1123:5, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr 0x7fa81d196bd0 <col:5> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | | `-CallExpr 0x7fa81d196d90 <col:12, col:46> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x7fa81d196c08 <col:12, col:28> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |   `-BinaryOperator 0x7fa81d196d68 <col:30, col:44> 'const char *' '-'
|   |   | |     |-BinaryOperator 0x7fa81d196d20 <col:30, col:36> 'const char *' '+'
|   |   | |     | |-ImplicitCastExpr 0x7fa81d196cf0 <col:30> 'const char *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x7fa81d196ca0 <col:30> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |     | `-ImplicitCastExpr 0x7fa81d196d08 <col:36> 'size_t':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x7fa81d196cc8 <col:36> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d18cc80 '__len' 'size_t':'unsigned long'
|   |   | |     `-IntegerLiteral 0x7fa81d196d48 <col:44> 'int' 24
|   |   | |-CompoundAssignOperator 0x7fa81d196ec8 <line:1124:5, col:27> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr 0x7fa81d196df8 <col:5> '_Size' lvalue Var 0x7fa81d195b10 '__c' '_Size'
|   |   | | `-CallExpr 0x7fa81d196e90 <col:12, col:27> '<dependent type>'
|   |   | |   |-DeclRefExpr 0x7fa81d196e20 <col:12> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   |   | |   |-DeclRefExpr 0x7fa81d196e48 <col:21> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |   `-IntegerLiteral 0x7fa81d196e70 <col:26> 'int' 7
|   |   | |-CompoundAssignOperator 0x7fa81d1970f0 <line:1125:5, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | | |-DeclRefExpr 0x7fa81d196f00 <col:5> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | | `-CallExpr 0x7fa81d1970c0 <col:12, col:46> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x7fa81d196f38 <col:12, col:28> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   |   | |   `-BinaryOperator 0x7fa81d197098 <col:30, col:44> 'const char *' '-'
|   |   | |     |-BinaryOperator 0x7fa81d197050 <col:30, col:36> 'const char *' '+'
|   |   | |     | |-ImplicitCastExpr 0x7fa81d197020 <col:30> 'const char *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x7fa81d196fd0 <col:30> 'const char *' lvalue ParmVar 0x7fa81d18cc10 '__s' 'const char *'
|   |   | |     | `-ImplicitCastExpr 0x7fa81d197038 <col:36> 'size_t':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x7fa81d196ff8 <col:36> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81d18cc80 '__len' 'size_t':'unsigned long'
|   |   | |     `-IntegerLiteral 0x7fa81d197078 <col:44> 'int' 16
|   |   | |-DeclStmt 0x7fa81d197210 <line:1126:5, col:27>
|   |   | | `-VarDecl 0x7fa81d197138 <col:5, col:24> col:11 referenced __wf '_Size' cinit
|   |   | |   `-BinaryOperator 0x7fa81d1971e8 <col:18, col:24> '<dependent type>' '+'
|   |   | |     |-DeclRefExpr 0x7fa81d197198 <col:18> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |     `-DeclRefExpr 0x7fa81d1971c0 <col:24> '_Size' lvalue Var 0x7fa81d195370 '__z' '_Size'
|   |   | |-DeclStmt 0x7fa81d1973e0 <line:1127:5, col:47>
|   |   | | `-VarDecl 0x7fa81d197238 <col:5, col:44> col:11 referenced __ws '_Size' cinit
|   |   | |   `-BinaryOperator 0x7fa81d1973b8 <col:18, col:44> '<dependent type>' '+'
|   |   | |     |-BinaryOperator 0x7fa81d197368 <col:18, col:40> '<dependent type>' '+'
|   |   | |     | |-DeclRefExpr 0x7fa81d197298 <col:18> '_Size' lvalue Var 0x7fa81d195990 '__b' '_Size'
|   |   | |     | `-CallExpr 0x7fa81d197330 <col:24, col:40> '<dependent type>'
|   |   | |     |   |-DeclRefExpr 0x7fa81d1972c0 <col:24> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   |   | |     |   |-DeclRefExpr 0x7fa81d1972e8 <col:33> '_Size' lvalue Var 0x7fa81d195558 '__a' '_Size'
|   |   | |     |   `-IntegerLiteral 0x7fa81d197310 <col:38> 'int' 31
|   |   | |     `-DeclRefExpr 0x7fa81d197390 <col:44> '_Size' lvalue Var 0x7fa81d195b10 '__c' '_Size'
|   |   | |-DeclStmt 0x7fa81d1976b8 <line:1128:5, col:73>
|   |   | | `-VarDecl 0x7fa81d197408 <col:5, col:72> col:11 referenced __r '_Size' cinit
|   |   | |   `-CallExpr 0x7fa81d197688 <col:17, col:72> '<dependent type>'
|   |   | |     |-DeclRefExpr 0x7fa81d197468 <col:17> '_Size (_Size)' lvalue CXXMethod 0x7fa81d187900 '__shift_mix' '_Size (_Size)'
|   |   | |     `-BinaryOperator 0x7fa81d197660 <col:29, col:68> '<dependent type>' '+'
|   |   | |       |-BinaryOperator 0x7fa81d197550 <col:29, col:45> '<dependent type>' '*'
|   |   | |       | |-ParenExpr 0x7fa81d197508 <col:29, col:41> '<dependent type>'
|   |   | |       | | `-BinaryOperator 0x7fa81d1974e0 <col:30, col:37> '<dependent type>' '+'
|   |   | |       | |   |-DeclRefExpr 0x7fa81d197490 <col:30> '_Size' lvalue Var 0x7fa81d1960c8 '__vf' '_Size'
|   |   | |       | |   `-DeclRefExpr 0x7fa81d1974b8 <col:37> '_Size' lvalue Var 0x7fa81d197238 '__ws' '_Size'
|   |   | |       | `-DeclRefExpr 0x7fa81d197528 <col:45> 'const _Size' lvalue Var 0x7fa81d1872d0 '__k2' 'const _Size'
|   |   | |       `-BinaryOperator 0x7fa81d197638 <col:52, col:68> '<dependent type>' '*'
|   |   | |         |-ParenExpr 0x7fa81d1975f0 <col:52, col:64> '<dependent type>'
|   |   | |         | `-BinaryOperator 0x7fa81d1975c8 <col:53, col:60> '<dependent type>' '+'
|   |   | |         |   |-DeclRefExpr 0x7fa81d197578 <col:53> '_Size' lvalue Var 0x7fa81d197138 '__wf' '_Size'
|   |   | |         |   `-DeclRefExpr 0x7fa81d1975a0 <col:60> '_Size' lvalue Var 0x7fa81d1961c8 '__vs' '_Size'
|   |   | |         `-DeclRefExpr 0x7fa81d197610 <col:68> 'const _Size' lvalue Var 0x7fa81d1871b0 '__k0' 'const _Size'
|   |   | `-ReturnStmt 0x7fa81d197840 <line:1129:5, col:45>
|   |   |   `-BinaryOperator 0x7fa81d197818 <col:12, col:45> '<dependent type>' '*'
|   |   |     |-CallExpr 0x7fa81d1977c0 <col:12, col:41> '<dependent type>'
|   |   |     | |-DeclRefExpr 0x7fa81d1976d0 <col:12> '_Size (_Size)' lvalue CXXMethod 0x7fa81d187900 '__shift_mix' '_Size (_Size)'
|   |   |     | `-BinaryOperator 0x7fa81d197798 <col:24, col:37> '<dependent type>' '+'
|   |   |     |   |-BinaryOperator 0x7fa81d197748 <col:24, col:30> '<dependent type>' '*'
|   |   |     |   | |-DeclRefExpr 0x7fa81d1976f8 <col:24> '_Size' lvalue Var 0x7fa81d197408 '__r' '_Size'
|   |   |     |   | `-DeclRefExpr 0x7fa81d197720 <col:30> 'const _Size' lvalue Var 0x7fa81d1871b0 '__k0' 'const _Size'
|   |   |     |   `-DeclRefExpr 0x7fa81d197770 <col:37> '_Size' lvalue Var 0x7fa81d1961c8 '__vs' '_Size'
|   |   |     `-DeclRefExpr 0x7fa81d1977f0 <col:45> 'const _Size' lvalue Var 0x7fa81d1872d0 '__k2' 'const _Size'
|   |   `-NoSanitizeAttr 0x7fa81d18ce88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69, col:112> unsigned-integer-overflow
|   |-CXXMethodDecl 0x7fa81d197d20 parent 0x7fa81d186b50 prev 0x7fa81d187050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1134:1, line:1178:1> line:1136:35 operator() '_Size (const void *, _Size)'
|   | |-ParmVarDecl 0x7fa81d197bb8 <col:46, col:58> col:58 referenced __key 'const void *'
|   | |-ParmVarDecl 0x7fa81d197c28 <col:65, col:71> col:71 referenced __len '_Size'
|   | |-CompoundStmt 0x7fa81c80c4a0 <line:1137:1, line:1178:1>
|   | | |-DeclStmt 0x7fa81d197f90 <line:1138:3, col:52>
|   | | | `-VarDecl 0x7fa81d197ea8 <col:3, col:51> col:15 referenced __s 'const char *' cinit
|   | | |   `-CXXStaticCastExpr 0x7fa81d197f60 <col:21, col:51> 'const char *' static_cast<const char *> <BitCast>
|   | | |     `-ImplicitCastExpr 0x7fa81d197f48 <col:46> 'const void *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x7fa81d197f08 <col:46> 'const void *' lvalue ParmVar 0x7fa81d197bb8 '__key' 'const void *'
|   | | |-IfStmt 0x7fa81c8093c0 <line:1139:3, line:1147:3>
|   | | | |-<<<NULL>>>
|   | | | |-<<<NULL>>>
|   | | | |-CXXOperatorCallExpr 0x7fa81d198048 <line:1139:7, col:16> '<dependent type>'
|   | | | | |-UnresolvedLookupExpr 0x7fa81d197ff0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x7fa81d16fbe8
|   | | | | |-DeclRefExpr 0x7fa81d197fa8 <col:7> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | | | `-IntegerLiteral 0x7fa81d197fd0 <col:16> 'int' 32
|   | | | |-CompoundStmt 0x7fa81d198380 <col:20, line:1145:3>
|   | | | | `-IfStmt 0x7fa81d198348 <line:1140:5, line:1144:5>
|   | | | |   |-<<<NULL>>>
|   | | | |   |-<<<NULL>>>
|   | | | |   |-CXXOperatorCallExpr 0x7fa81d198130 <line:1140:9, col:18> '<dependent type>'
|   | | | |   | |-UnresolvedLookupExpr 0x7fa81d1980d8 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x7fa81d16fbe8
|   | | | |   | |-DeclRefExpr 0x7fa81d198090 <col:9> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | | |   | `-IntegerLiteral 0x7fa81d1980b8 <col:18> 'int' 16
|   | | | |   |-CompoundStmt 0x7fa81d198240 <col:22, line:1142:5>
|   | | | |   | `-ReturnStmt 0x7fa81d198228 <line:1141:7, col:43>
|   | | | |   |   `-CallExpr 0x7fa81d1981f0 <col:14, col:43> '<dependent type>'
|   | | | |   |     |-DeclRefExpr 0x7fa81d198178 <col:14> '_Size (const char *, _Size)' lvalue CXXMethod 0x7fa81d187e90 '__hash_len_0_to_16' '_Size (const char *, _Size)'
|   | | | |   |     |-DeclRefExpr 0x7fa81d1981a0 <col:33> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | |   |     `-DeclRefExpr 0x7fa81d1981c8 <col:38> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | | |   `-CompoundStmt 0x7fa81d198328 <line:1142:12, line:1144:5>
|   | | | |     `-ReturnStmt 0x7fa81d198310 <line:1143:7, col:44>
|   | | | |       `-CallExpr 0x7fa81d1982d8 <col:14, col:44> '<dependent type>'
|   | | | |         |-DeclRefExpr 0x7fa81d198260 <col:14> '_Size (const char *, _Size)' lvalue CXXMethod 0x7fa81d188118 '__hash_len_17_to_32' '_Size (const char *, _Size)'
|   | | | |         |-DeclRefExpr 0x7fa81d198288 <col:34> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | |         `-DeclRefExpr 0x7fa81d1982b0 <col:39> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | | `-IfStmt 0x7fa81c809388 <line:1145:10, line:1147:3>
|   | | |   |-<<<NULL>>>
|   | | |   |-<<<NULL>>>
|   | | |   |-CXXOperatorCallExpr 0x7fa81c809258 <line:1145:14, col:23> '<dependent type>'
|   | | |   | |-UnresolvedLookupExpr 0x7fa81c809200 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x7fa81d16fbe8
|   | | |   | |-DeclRefExpr 0x7fa81d1983a0 <col:14> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |   | `-IntegerLiteral 0x7fa81d1983c8 <col:23> 'int' 64
|   | | |   |-CompoundStmt 0x7fa81c809368 <col:27, line:1147:3>
|   | | |   | `-ReturnStmt 0x7fa81c809350 <line:1146:5, col:42>
|   | | |   |   `-CallExpr 0x7fa81c809318 <col:12, col:42> '<dependent type>'
|   | | |   |     |-DeclRefExpr 0x7fa81c8092a0 <col:12> '_Size (const char *, size_t)' lvalue CXXMethod 0x7fa81d18cde0 '__hash_len_33_to_64' '_Size (const char *, size_t)'
|   | | |   |     |-DeclRefExpr 0x7fa81c8092c8 <col:32> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |   |     `-DeclRefExpr 0x7fa81c8092f0 <col:37> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |   `-<<<NULL>>>
|   | | |-DeclStmt 0x7fa81c809600 <line:1151:3, col:50>
|   | | | `-VarDecl 0x7fa81c809408 <col:3, col:49> col:9 referenced __x '_Size' cinit
|   | | |   `-CallExpr 0x7fa81c8095d0 <col:15, col:49> '<dependent type>'
|   | | |     |-UnresolvedLookupExpr 0x7fa81c809478 <col:15, col:31> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |     `-BinaryOperator 0x7fa81c8095a8 <col:33, col:47> '<dependent type>' '-'
|   | | |       |-BinaryOperator 0x7fa81c809560 <col:33, col:39> '<dependent type>' '+'
|   | | |       | |-DeclRefExpr 0x7fa81c809510 <col:33> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |       | `-DeclRefExpr 0x7fa81c809538 <col:39> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |       `-IntegerLiteral 0x7fa81c809588 <col:47> 'int' 40
|   | | |-DeclStmt 0x7fa81c8099e0 <line:1152:3, line:1153:50>
|   | | | `-VarDecl 0x7fa81c809628 <line:1152:3, line:1153:49> line:1152:9 referenced __y '_Size' cinit
|   | | |   `-BinaryOperator 0x7fa81c8099b8 <col:15, line:1153:49> '<dependent type>' '+'
|   | | |     |-CallExpr 0x7fa81c8097f0 <line:1152:15, col:49> '<dependent type>'
|   | | |     | |-UnresolvedLookupExpr 0x7fa81c809698 <col:15, col:31> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |     | `-BinaryOperator 0x7fa81c8097c8 <col:33, col:47> '<dependent type>' '-'
|   | | |     |   |-BinaryOperator 0x7fa81c809780 <col:33, col:39> '<dependent type>' '+'
|   | | |     |   | |-DeclRefExpr 0x7fa81c809730 <col:33> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |     |   | `-DeclRefExpr 0x7fa81c809758 <col:39> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |     |   `-IntegerLiteral 0x7fa81c8097a8 <col:47> 'int' 16
|   | | |     `-CallExpr 0x7fa81c809988 <line:1153:15, col:49> '<dependent type>'
|   | | |       |-UnresolvedLookupExpr 0x7fa81c809830 <col:15, col:31> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |       `-BinaryOperator 0x7fa81c809960 <col:33, col:47> '<dependent type>' '-'
|   | | |         |-BinaryOperator 0x7fa81c809918 <col:33, col:39> '<dependent type>' '+'
|   | | |         | |-DeclRefExpr 0x7fa81c8098c8 <col:33> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |         | `-DeclRefExpr 0x7fa81c8098f0 <col:39> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |         `-IntegerLiteral 0x7fa81c809940 <col:47> 'int' 56
|   | | |-DeclStmt 0x7fa81c809e48 <line:1154:3, line:1155:63>
|   | | | `-VarDecl 0x7fa81c809a08 <line:1154:3, line:1155:62> line:1154:9 referenced __z '_Size' cinit
|   | | |   `-CallExpr 0x7fa81c809e10 <col:15, line:1155:62> '<dependent type>'
|   | | |     |-DeclRefExpr 0x7fa81c809a68 <line:1154:15> '_Size (_Size, _Size)' lvalue CXXMethod 0x7fa81d187b80 '__hash_len_16' '_Size (_Size, _Size)'
|   | | |     |-BinaryOperator 0x7fa81c809c50 <col:29, col:67> '<dependent type>' '+'
|   | | |     | |-CallExpr 0x7fa81c809bf8 <col:29, col:63> '<dependent type>'
|   | | |     | | |-UnresolvedLookupExpr 0x7fa81c809aa0 <col:29, col:45> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |     | | `-BinaryOperator 0x7fa81c809bd0 <col:47, col:61> '<dependent type>' '-'
|   | | |     | |   |-BinaryOperator 0x7fa81c809b88 <col:47, col:53> '<dependent type>' '+'
|   | | |     | |   | |-DeclRefExpr 0x7fa81c809b38 <col:47> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |     | |   | `-DeclRefExpr 0x7fa81c809b60 <col:53> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |     | |   `-IntegerLiteral 0x7fa81c809bb0 <col:61> 'int' 48
|   | | |     | `-DeclRefExpr 0x7fa81c809c28 <col:67> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |     `-CallExpr 0x7fa81c809de0 <line:1155:27, col:61> '<dependent type>'
|   | | |       |-UnresolvedLookupExpr 0x7fa81c809c88 <col:27, col:43> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |       `-BinaryOperator 0x7fa81c809db8 <col:45, col:59> '<dependent type>' '-'
|   | | |         |-BinaryOperator 0x7fa81c809d70 <col:45, col:51> '<dependent type>' '+'
|   | | |         | |-DeclRefExpr 0x7fa81c809d20 <col:45> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |         | `-DeclRefExpr 0x7fa81c809d48 <col:51> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |         `-IntegerLiteral 0x7fa81c809d98 <col:59> 'int' 24
|   | | |-DeclStmt 0x7fa81c80a180 <line:1156:3, col:87>
|   | | | `-VarDecl 0x7fa81c809f70 <col:3, col:86> col:22 referenced __v 'pair<_Size, _Size>' cinit
|   | | |   `-CallExpr 0x7fa81c80a140 <col:28, col:86> '<dependent type>'
|   | | |     |-UnresolvedLookupExpr 0x7fa81c809fd0 <col:28> '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fa81d18c600 0x7fa81d18cac8
|   | | |     |-BinaryOperator 0x7fa81c80a0c8 <col:58, col:72> '<dependent type>' '-'
|   | | |     | |-BinaryOperator 0x7fa81c80a080 <col:58, col:64> '<dependent type>' '+'
|   | | |     | | |-DeclRefExpr 0x7fa81c80a030 <col:58> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |     | | `-DeclRefExpr 0x7fa81c80a058 <col:64> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |     | `-IntegerLiteral 0x7fa81c80a0a8 <col:72> 'int' 64
|   | | |     |-DeclRefExpr 0x7fa81c80a0f0 <col:76> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |     `-DeclRefExpr 0x7fa81c80a118 <col:83> '_Size' lvalue Var 0x7fa81c809a08 '__z' '_Size'
|   | | |-DeclStmt 0x7fa81c80a510 <line:1157:3, col:92>
|   | | | `-VarDecl 0x7fa81c80a2b0 <col:3, col:91> col:22 referenced __w 'pair<_Size, _Size>' cinit
|   | | |   `-CallExpr 0x7fa81c80a4d0 <col:28, col:91> '<dependent type>'
|   | | |     |-UnresolvedLookupExpr 0x7fa81c80a310 <col:28> '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fa81d18c600 0x7fa81d18cac8
|   | | |     |-BinaryOperator 0x7fa81c80a408 <col:58, col:72> '<dependent type>' '-'
|   | | |     | |-BinaryOperator 0x7fa81c80a3c0 <col:58, col:64> '<dependent type>' '+'
|   | | |     | | |-DeclRefExpr 0x7fa81c80a370 <col:58> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |     | | `-DeclRefExpr 0x7fa81c80a398 <col:64> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |     | `-IntegerLiteral 0x7fa81c80a3e8 <col:72> 'int' 32
|   | | |     |-BinaryOperator 0x7fa81c80a480 <col:76, col:82> '<dependent type>' '+'
|   | | |     | |-DeclRefExpr 0x7fa81c80a430 <col:76> '_Size' lvalue Var 0x7fa81c809628 '__y' '_Size'
|   | | |     | `-DeclRefExpr 0x7fa81c80a458 <col:82> 'const _Size' lvalue Var 0x7fa81d187240 '__k1' 'const _Size'
|   | | |     `-DeclRefExpr 0x7fa81c80a4a8 <col:88> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | | |-BinaryOperator 0x7fa81c80a6f0 <line:1158:3, col:43> '<dependent type>' '='
|   | | | |-DeclRefExpr 0x7fa81c80a528 <col:3> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | | | `-BinaryOperator 0x7fa81c80a6c8 <col:9, col:43> '<dependent type>' '+'
|   | | |   |-BinaryOperator 0x7fa81c80a5a0 <col:9, col:15> '<dependent type>' '*'
|   | | |   | |-DeclRefExpr 0x7fa81c80a550 <col:9> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | | |   | `-DeclRefExpr 0x7fa81c80a578 <col:15> 'const _Size' lvalue Var 0x7fa81d187240 '__k1' 'const _Size'
|   | | |   `-CallExpr 0x7fa81c80a698 <col:22, col:43> '<dependent type>'
|   | | |     |-UnresolvedLookupExpr 0x7fa81c80a5d8 <col:22, col:38> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | |     `-DeclRefExpr 0x7fa81c80a670 <col:40> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | |-BinaryOperator 0x7fa81c80a878 <line:1161:3, col:47> '<dependent type>' '='
|   | | | |-DeclRefExpr 0x7fa81c80a718 <col:3> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | | `-BinaryOperator 0x7fa81c80a850 <col:11, col:47> '<dependent type>' '&'
|   | | |   |-ParenExpr 0x7fa81c80a7b0 <col:11, col:21> '<dependent type>'
|   | | |   | `-BinaryOperator 0x7fa81c80a788 <col:12, col:20> '<dependent type>' '-'
|   | | |   |   |-DeclRefExpr 0x7fa81c80a740 <col:12> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |   |   `-IntegerLiteral 0x7fa81c80a768 <col:20> 'int' 1
|   | | |   `-UnaryOperator 0x7fa81c80a830 <col:25, col:47> '<dependent type>' prefix '~'
|   | | |     `-CXXStaticCastExpr 0x7fa81c80a800 <col:26, col:47> '_Size' static_cast<_Size> <Dependent>
|   | | |       `-IntegerLiteral 0x7fa81c80a7d0 <col:45> 'int' 63
|   | | |-DoStmt 0x7fa81c80bfb0 <line:1162:3, line:1174:22>
|   | | | |-CompoundStmt 0x7fa81c80be60 <line:1162:6, line:1174:3>
|   | | | | |-BinaryOperator 0x7fa81c80ac40 <line:1163:5, col:78> '<dependent type>' '='
|   | | | | | |-DeclRefExpr 0x7fa81c80a8a0 <col:5> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | | | | | `-BinaryOperator 0x7fa81c80ac18 <col:11, col:78> '<dependent type>' '*'
|   | | | | |   |-CallExpr 0x7fa81c80abb8 <col:11, col:74> '<dependent type>'
|   | | | | |   | |-DeclRefExpr 0x7fa81c80a8c8 <col:11> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   | | | | |   | |-BinaryOperator 0x7fa81c80ab70 <col:20, col:69> '<dependent type>' '+'
|   | | | | |   | | |-BinaryOperator 0x7fa81c80a9e8 <col:20, col:36> '<dependent type>' '+'
|   | | | | |   | | | |-BinaryOperator 0x7fa81c80a940 <col:20, col:26> '<dependent type>' '+'
|   | | | | |   | | | | |-DeclRefExpr 0x7fa81c80a8f0 <col:20> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | | | | |   | | | | `-DeclRefExpr 0x7fa81c80a918 <col:26> '_Size' lvalue Var 0x7fa81c809628 '__y' '_Size'
|   | | | | |   | | | `-CXXDependentScopeMemberExpr 0x7fa81c80a990 <col:32, col:36> '<dependent type>' lvalue .first
|   | | | | |   | | |   `-DeclRefExpr 0x7fa81c80a968 <col:32> 'pair<_Size, _Size>' lvalue Var 0x7fa81c809f70 '__v' 'pair<_Size, _Size>'
|   | | | | |   | | `-CallExpr 0x7fa81c80ab40 <col:44, col:69> '<dependent type>'
|   | | | | |   | |   |-UnresolvedLookupExpr 0x7fa81c80aa20 <col:44, col:60> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | | |   | |   `-BinaryOperator 0x7fa81c80ab18 <col:62, col:68> 'const char *' '+'
|   | | | | |   | |     |-ImplicitCastExpr 0x7fa81c80ab00 <col:62> 'const char *' <LValueToRValue>
|   | | | | |   | |     | `-DeclRefExpr 0x7fa81c80aab8 <col:62> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | | |   | |     `-IntegerLiteral 0x7fa81c80aae0 <col:68> 'int' 8
|   | | | | |   | `-IntegerLiteral 0x7fa81c80ab98 <col:72> 'int' 37
|   | | | | |   `-DeclRefExpr 0x7fa81c80abf0 <col:78> 'const _Size' lvalue Var 0x7fa81d187240 '__k1' 'const _Size'
|   | | | | |-BinaryOperator 0x7fa81c80afb8 <line:1164:5, col:74> '<dependent type>' '='
|   | | | | | |-DeclRefExpr 0x7fa81c80ac68 <col:5> '_Size' lvalue Var 0x7fa81c809628 '__y' '_Size'
|   | | | | | `-BinaryOperator 0x7fa81c80af90 <col:11, col:74> '<dependent type>' '*'
|   | | | | |   |-CallExpr 0x7fa81c80af30 <col:11, col:70> '<dependent type>'
|   | | | | |   | |-DeclRefExpr 0x7fa81c80ac90 <col:11> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   | | | | |   | |-BinaryOperator 0x7fa81c80aee8 <col:20, col:65> '<dependent type>' '+'
|   | | | | |   | | |-BinaryOperator 0x7fa81c80ad60 <col:20, col:30> '<dependent type>' '+'
|   | | | | |   | | | |-DeclRefExpr 0x7fa81c80acb8 <col:20> '_Size' lvalue Var 0x7fa81c809628 '__y' '_Size'
|   | | | | |   | | | `-CXXDependentScopeMemberExpr 0x7fa81c80ad08 <col:26, col:30> '<dependent type>' lvalue .second
|   | | | | |   | | |   `-DeclRefExpr 0x7fa81c80ace0 <col:26> 'pair<_Size, _Size>' lvalue Var 0x7fa81c809f70 '__v' 'pair<_Size, _Size>'
|   | | | | |   | | `-CallExpr 0x7fa81c80aeb8 <col:39, col:65> '<dependent type>'
|   | | | | |   | |   |-UnresolvedLookupExpr 0x7fa81c80ad98 <col:39, col:55> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | | |   | |   `-BinaryOperator 0x7fa81c80ae90 <col:57, col:63> 'const char *' '+'
|   | | | | |   | |     |-ImplicitCastExpr 0x7fa81c80ae78 <col:57> 'const char *' <LValueToRValue>
|   | | | | |   | |     | `-DeclRefExpr 0x7fa81c80ae30 <col:57> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | | |   | |     `-IntegerLiteral 0x7fa81c80ae58 <col:63> 'int' 48
|   | | | | |   | `-IntegerLiteral 0x7fa81c80af10 <col:68> 'int' 42
|   | | | | |   `-DeclRefExpr 0x7fa81c80af68 <col:74> 'const _Size' lvalue Var 0x7fa81d187240 '__k1' 'const _Size'
|   | | | | |-CompoundAssignOperator 0x7fa81c80b088 <line:1165:5, col:16> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | | |-DeclRefExpr 0x7fa81c80afe0 <col:5> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | | | | | `-CXXDependentScopeMemberExpr 0x7fa81c80b030 <col:12, col:16> '<dependent type>' lvalue .second
|   | | | | |   `-DeclRefExpr 0x7fa81c80b008 <col:12> 'pair<_Size, _Size>' lvalue Var 0x7fa81c80a2b0 '__w' 'pair<_Size, _Size>'
|   | | | | |-CompoundAssignOperator 0x7fa81c80b378 <line:1166:5, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | | | |-DeclRefExpr 0x7fa81c80b0c0 <col:5> '_Size' lvalue Var 0x7fa81c809628 '__y' '_Size'
|   | | | | | `-BinaryOperator 0x7fa81c80b350 <col:12, col:50> '<dependent type>' '+'
|   | | | | |   |-CXXDependentScopeMemberExpr 0x7fa81c80b110 <col:12, col:16> '<dependent type>' lvalue .first
|   | | | | |   | `-DeclRefExpr 0x7fa81c80b0e8 <col:12> 'pair<_Size, _Size>' lvalue Var 0x7fa81c809f70 '__v' 'pair<_Size, _Size>'
|   | | | | |   `-CallExpr 0x7fa81c80b320 <col:24, col:50> '<dependent type>'
|   | | | | |     |-UnresolvedLookupExpr 0x7fa81c80b200 <col:24, col:40> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | | |     `-BinaryOperator 0x7fa81c80b2f8 <col:42, col:48> 'const char *' '+'
|   | | | | |       |-ImplicitCastExpr 0x7fa81c80b2e0 <col:42> 'const char *' <LValueToRValue>
|   | | | | |       | `-DeclRefExpr 0x7fa81c80b298 <col:42> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | | |       `-IntegerLiteral 0x7fa81c80b2c0 <col:48> 'int' 40
|   | | | | |-BinaryOperator 0x7fa81c80b578 <line:1167:5, col:43> '<dependent type>' '='
|   | | | | | |-DeclRefExpr 0x7fa81c80b3b0 <col:5> '_Size' lvalue Var 0x7fa81c809a08 '__z' '_Size'
|   | | | | | `-BinaryOperator 0x7fa81c80b550 <col:11, col:43> '<dependent type>' '*'
|   | | | | |   |-CallExpr 0x7fa81c80b4f0 <col:11, col:39> '<dependent type>'
|   | | | | |   | |-DeclRefExpr 0x7fa81c80b3d8 <col:11> '_Size (_Size, int)' lvalue CXXMethod 0x7fa81d187580 '__rotate' '_Size (_Size, int)'
|   | | | | |   | |-BinaryOperator 0x7fa81c80b4a8 <col:20, col:30> '<dependent type>' '+'
|   | | | | |   | | |-DeclRefExpr 0x7fa81c80b400 <col:20> '_Size' lvalue Var 0x7fa81c809a08 '__z' '_Size'
|   | | | | |   | | `-CXXDependentScopeMemberExpr 0x7fa81c80b450 <col:26, col:30> '<dependent type>' lvalue .first
|   | | | | |   | |   `-DeclRefExpr 0x7fa81c80b428 <col:26> 'pair<_Size, _Size>' lvalue Var 0x7fa81c80a2b0 '__w' 'pair<_Size, _Size>'
|   | | | | |   | `-IntegerLiteral 0x7fa81c80b4d0 <col:37> 'int' 33
|   | | | | |   `-DeclRefExpr 0x7fa81c80b528 <col:43> 'const _Size' lvalue Var 0x7fa81d187240 '__k1' 'const _Size'
|   | | | | |-BinaryOperator 0x7fa81c80b830 <line:1168:5, col:80> '<dependent type>' '='
|   | | | | | |-DeclRefExpr 0x7fa81c80b5a0 <col:5> 'pair<_Size, _Size>' lvalue Var 0x7fa81c809f70 '__v' 'pair<_Size, _Size>'
|   | | | | | `-CallExpr 0x7fa81c80b7f0 <col:11, col:80> '<dependent type>'
|   | | | | |   |-UnresolvedLookupExpr 0x7fa81c80b5c8 <col:11> '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fa81d18c600 0x7fa81d18cac8
|   | | | | |   |-DeclRefExpr 0x7fa81c80b628 <col:41> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | | |   |-BinaryOperator 0x7fa81c80b6f8 <col:46, col:59> '<dependent type>' '*'
|   | | | | |   | |-CXXDependentScopeMemberExpr 0x7fa81c80b678 <col:46, col:50> '<dependent type>' lvalue .second
|   | | | | |   | | `-DeclRefExpr 0x7fa81c80b650 <col:46> 'pair<_Size, _Size>' lvalue Var 0x7fa81c809f70 '__v' 'pair<_Size, _Size>'
|   | | | | |   | `-DeclRefExpr 0x7fa81c80b6d0 <col:59> 'const _Size' lvalue Var 0x7fa81d187240 '__k1' 'const _Size'
|   | | | | |   `-BinaryOperator 0x7fa81c80b7c8 <col:65, col:75> '<dependent type>' '+'
|   | | | | |     |-DeclRefExpr 0x7fa81c80b720 <col:65> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | | | | |     `-CXXDependentScopeMemberExpr 0x7fa81c80b770 <col:71, col:75> '<dependent type>' lvalue .first
|   | | | | |       `-DeclRefExpr 0x7fa81c80b748 <col:71> 'pair<_Size, _Size>' lvalue Var 0x7fa81c80a2b0 '__w' 'pair<_Size, _Size>'
|   | | | | |-BinaryOperator 0x7fa81c80bc28 <line:1169:5, line:1170:74> '<dependent type>' '='
|   | | | | | |-DeclRefExpr 0x7fa81c80b858 <line:1169:5> 'pair<_Size, _Size>' lvalue Var 0x7fa81c80a2b0 '__w' 'pair<_Size, _Size>'
|   | | | | | `-CallExpr 0x7fa81c80bbe8 <col:11, line:1170:74> '<dependent type>'
|   | | | | |   |-UnresolvedLookupExpr 0x7fa81c80b880 <line:1169:11> '<dependent type>' lvalue (no ADL) = '__weak_hash_len_32_with_seeds' 0x7fa81d18c600 0x7fa81d18cac8
|   | | | | |   |-BinaryOperator 0x7fa81c80b940 <col:41, col:47> 'const char *' '+'
|   | | | | |   | |-ImplicitCastExpr 0x7fa81c80b928 <col:41> 'const char *' <LValueToRValue>
|   | | | | |   | | `-DeclRefExpr 0x7fa81c80b8e0 <col:41> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | | |   | `-IntegerLiteral 0x7fa81c80b908 <col:47> 'int' 32
|   | | | | |   |-BinaryOperator 0x7fa81c80ba10 <col:51, col:61> '<dependent type>' '+'
|   | | | | |   | |-DeclRefExpr 0x7fa81c80b968 <col:51> '_Size' lvalue Var 0x7fa81c809a08 '__z' '_Size'
|   | | | | |   | `-CXXDependentScopeMemberExpr 0x7fa81c80b9b8 <col:57, col:61> '<dependent type>' lvalue .second
|   | | | | |   |   `-DeclRefExpr 0x7fa81c80b990 <col:57> 'pair<_Size, _Size>' lvalue Var 0x7fa81c80a2b0 '__w' 'pair<_Size, _Size>'
|   | | | | |   `-BinaryOperator 0x7fa81c80bbc0 <line:1170:41, col:73> '<dependent type>' '+'
|   | | | | |     |-DeclRefExpr 0x7fa81c80ba38 <col:41> '_Size' lvalue Var 0x7fa81c809628 '__y' '_Size'
|   | | | | |     `-CallExpr 0x7fa81c80bb90 <col:47, col:73> '<dependent type>'
|   | | | | |       |-UnresolvedLookupExpr 0x7fa81c80ba70 <col:47, col:63> '<dependent type>' lvalue (ADL) = '__loadword' 0x7fa81d184018
|   | | | | |       `-BinaryOperator 0x7fa81c80bb68 <col:65, col:71> 'const char *' '+'
|   | | | | |         |-ImplicitCastExpr 0x7fa81c80bb50 <col:65> 'const char *' <LValueToRValue>
|   | | | | |         | `-DeclRefExpr 0x7fa81c80bb08 <col:65> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | | |         `-IntegerLiteral 0x7fa81c80bb30 <col:71> 'int' 16
|   | | | | |-CallExpr 0x7fa81c80bd28 <line:1171:5, col:23> '<dependent type>'
|   | | | | | |-UnresolvedLookupExpr 0x7fa81c80bc70 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = 'swap' 0x7fa81d864d38 0x7fa81d147aa8 0x7fa81d170b38
|   | | | | | |-DeclRefExpr 0x7fa81c80bcd8 <col:15> '_Size' lvalue Var 0x7fa81c809a08 '__z' '_Size'
|   | | | | | `-DeclRefExpr 0x7fa81c80bd00 <col:20> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | | | | |-CompoundAssignOperator 0x7fa81c80bda8 <line:1172:5, col:12> 'const char *' lvalue '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | | | |-DeclRefExpr 0x7fa81c80bd60 <col:5> 'const char *' lvalue Var 0x7fa81d197ea8 '__s' 'const char *'
|   | | | | | `-IntegerLiteral 0x7fa81c80bd88 <col:12> 'int' 64
|   | | | | `-CompoundAssignOperator 0x7fa81c80be28 <line:1173:5, col:14> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   | | | |   |-DeclRefExpr 0x7fa81c80bde0 <col:5> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | | |   `-IntegerLiteral 0x7fa81c80be08 <col:14> 'int' 64
|   | | | `-CXXOperatorCallExpr 0x7fa81c80bf68 <line:1174:12, col:21> '<dependent type>'
|   | | |   |-UnresolvedLookupExpr 0x7fa81c80bf10 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x7fa81d16d8c8
|   | | |   |-DeclRefExpr 0x7fa81c80bec8 <col:12> '_Size' lvalue ParmVar 0x7fa81d197c28 '__len' '_Size'
|   | | |   `-IntegerLiteral 0x7fa81c80bef0 <col:21> 'int' 0
|   | | `-ReturnStmt 0x7fa81c80c488 <line:1175:3, line:1177:50>
|   | |   `-CallExpr 0x7fa81c80c450 <line:1175:10, line:1177:50> '<dependent type>'
|   | |     |-DeclRefExpr 0x7fa81c80bfd0 <line:1175:10> '_Size (_Size, _Size)' lvalue CXXMethod 0x7fa81d187b80 '__hash_len_16' '_Size (_Size, _Size)'
|   | |     |-BinaryOperator 0x7fa81c80c278 <line:1176:7, col:71> '<dependent type>' '+'
|   | |     | |-BinaryOperator 0x7fa81c80c228 <col:7, col:64> '<dependent type>' '+'
|   | |     | | |-CallExpr 0x7fa81c80c120 <col:7, col:41> '<dependent type>'
|   | |     | | | |-DeclRefExpr 0x7fa81c80bff8 <col:7> '_Size (_Size, _Size)' lvalue CXXMethod 0x7fa81d187b80 '__hash_len_16' '_Size (_Size, _Size)'
|   | |     | | | |-CXXDependentScopeMemberExpr 0x7fa81c80c048 <col:21, col:25> '<dependent type>' lvalue .first
|   | |     | | | | `-DeclRefExpr 0x7fa81c80c020 <col:21> 'pair<_Size, _Size>' lvalue Var 0x7fa81c809f70 '__v' 'pair<_Size, _Size>'
|   | |     | | | `-CXXDependentScopeMemberExpr 0x7fa81c80c0c8 <col:32, col:36> '<dependent type>' lvalue .first
|   | |     | | |   `-DeclRefExpr 0x7fa81c80c0a0 <col:32> 'pair<_Size, _Size>' lvalue Var 0x7fa81c80a2b0 '__w' 'pair<_Size, _Size>'
|   | |     | | `-BinaryOperator 0x7fa81c80c200 <col:45, col:64> '<dependent type>' '*'
|   | |     | |   |-CallExpr 0x7fa81c80c1a8 <col:45, col:60> '<dependent type>'
|   | |     | |   | |-DeclRefExpr 0x7fa81c80c158 <col:45> '_Size (_Size)' lvalue CXXMethod 0x7fa81d187900 '__shift_mix' '_Size (_Size)'
|   | |     | |   | `-DeclRefExpr 0x7fa81c80c180 <col:57> '_Size' lvalue Var 0x7fa81c809628 '__y' '_Size'
|   | |     | |   `-DeclRefExpr 0x7fa81c80c1d8 <col:64> 'const _Size' lvalue Var 0x7fa81d187240 '__k1' 'const _Size'
|   | |     | `-DeclRefExpr 0x7fa81c80c250 <col:71> '_Size' lvalue Var 0x7fa81c809a08 '__z' '_Size'
|   | |     `-BinaryOperator 0x7fa81c80c428 <line:1177:7, col:47> '<dependent type>' '+'
|   | |       |-CallExpr 0x7fa81c80c3c8 <col:7, col:43> '<dependent type>'
|   | |       | |-DeclRefExpr 0x7fa81c80c2a0 <col:7> '_Size (_Size, _Size)' lvalue CXXMethod 0x7fa81d187b80 '__hash_len_16' '_Size (_Size, _Size)'
|   | |       | |-CXXDependentScopeMemberExpr 0x7fa81c80c2f0 <col:21, col:25> '<dependent type>' lvalue .second
|   | |       | | `-DeclRefExpr 0x7fa81c80c2c8 <col:21> 'pair<_Size, _Size>' lvalue Var 0x7fa81c809f70 '__v' 'pair<_Size, _Size>'
|   | |       | `-CXXDependentScopeMemberExpr 0x7fa81c80c370 <col:33, col:37> '<dependent type>' lvalue .second
|   | |       |   `-DeclRefExpr 0x7fa81c80c348 <col:33> 'pair<_Size, _Size>' lvalue Var 0x7fa81c80a2b0 '__w' 'pair<_Size, _Size>'
|   | |       `-DeclRefExpr 0x7fa81c80c400 <col:47> '_Size' lvalue Var 0x7fa81c809408 '__x' '_Size'
|   | `-NoSanitizeAttr 0x7fa81d197e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:453:69> Inherited unsigned-integer-overflow
|   |-ClassTemplateDecl 0x7fa81c80c720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1180:1, line:1181:8> col:8 __scalar_hash
|   | |-TemplateTypeParmDecl 0x7fa81c80c510 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81c80c610 <col:22, col:58> col:29 'size_t':'unsigned long' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-BinaryOperator 0x7fa81c80c5d8 <col:31, col:58> 'unsigned long' '/'
|   | |     |-UnaryExprOrTypeTraitExpr 0x7fa81c80c588 <col:31, col:41> 'unsigned long' sizeof '_Tp'
|   | |     `-UnaryExprOrTypeTraitExpr 0x7fa81c80c5b8 <col:45, col:58> 'unsigned long' sizeof 'size_t':'unsigned long'
|   | |-CXXRecordDecl 0x7fa81c80c688 <line:1181:1, col:8> col:8 struct __scalar_hash
|   | |-ClassTemplateSpecializationDecl 0x7fa81c8142a8 <line:1218:1, line:1237:1> line:1219:8 struct __scalar_hash definition
|   | | |-public 'unary_function<struct std::__1::_PairT, size_t>':'struct std::__1::unary_function<struct std::__1::_PairT, unsigned long>'
|   | | |-TemplateArgument type 'struct std::__1::_PairT'
|   | | |-TemplateArgument integral 2
|   | | |-CXXRecordDecl 0x7fa81c816920 prev 0x7fa81c8142a8 <col:1, col:8> col:8 implicit struct __scalar_hash
|   | | |-CXXMethodDecl 0x7fa81c816ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> line:1223:12 used operator() 'size_t (struct std::__1::_PairT) const noexcept'
|   | | | |-ParmVarDecl 0x7fa81c8169c8 <col:23, col:27> col:27 used __v 'struct std::__1::_PairT':'struct std::__1::_PairT'
|   | | | |-CompoundStmt 0x7fa81d1b2c28 <line:1224:5, line:1236:5>
|   | | | | |-DeclStmt 0x7fa81d1b2028 <line:1225:9, line:1233:14>
|   | | | | | |-CXXRecordDecl 0x7fa81d1b10a8 <line:1225:9, line:1233:9> line:1225:9 union definition
|   | | | | | | |-FieldDecl 0x7fa81d1b11e8 <line:1227:13, col:17> col:17 referenced __t 'struct std::__1::_PairT':'struct std::__1::_PairT'
|   | | | | | | |-CXXRecordDecl 0x7fa81d1b1230 <line:1228:13, line:1232:13> line:1228:13 struct definition
|   | | | | | | | |-FieldDecl 0x7fa81d1b1368 <line:1230:17, col:24> col:24 __a 'size_t':'unsigned long'
|   | | | | | | | |-FieldDecl 0x7fa81d1b13b0 <line:1231:17, col:24> col:24 __b 'size_t':'unsigned long'
|   | | | | | | | |-CXXConstructorDecl 0x7fa81d1b1708 <line:1228:13> col:13 implicit  'void (void) noexcept' inline default trivial
|   | | | | | | | |-CXXDestructorDecl 0x7fa81d1b17e8 <col:13> col:13 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fa81d1b17e8
|   | | | | | | | |-CXXConstructorDecl 0x7fa81d1b1ab8 <col:13> col:13 implicit constexpr  'void (const struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13) &)' inline default trivial noexcept-unevaluated 0x7fa81d1b1ab8
|   | | | | | | | | `-ParmVarDecl 0x7fa81d1b1be0 <col:13> col:13 'const struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13) &'
|   | | | | | | | `-CXXConstructorDecl 0x7fa81d1b1c78 <col:13> col:13 implicit constexpr  'void (struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13) &&)' inline default trivial noexcept-unevaluated 0x7fa81d1b1c78
|   | | | | | | |   `-ParmVarDecl 0x7fa81d1b1da0 <col:13> col:13 'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13) &&'
|   | | | | | | |-FieldDecl 0x7fa81d1b1470 <col:13, line:1232:15> col:15 __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13)'
|   | | | | | | |-CXXConstructorDecl 0x7fa81d1b1600 <line:1225:9> col:9 implicit used  'void (void) noexcept' inline default trivial
|   | | | | | | | `-CompoundStmt 0x7fa81d1b1fc8 <col:9>
|   | | | | | | |-CXXConstructorDecl 0x7fa81d1b18f8 <col:9> col:9 implicit constexpr  'void (const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) &)' inline default trivial noexcept-unevaluated 0x7fa81d1b18f8
|   | | | | | | | `-ParmVarDecl 0x7fa81d1b1a20 <col:9> col:9 'const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) &'
|   | | | | | | `-CXXConstructorDecl 0x7fa81d1b1e38 <col:9> col:9 implicit constexpr  'void (union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) &&)' inline default trivial noexcept-unevaluated 0x7fa81d1b1e38
|   | | | | | |   `-ParmVarDecl 0x7fa81d1b1f60 <col:9> col:9 'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) &&'
|   | | | | | `-VarDecl 0x7fa81d1b1530 <col:9, line:1233:11> col:11 used __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' callinit
|   | | | | |   `-CXXConstructExpr 0x7fa81d1b1fe0 <col:11> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' 'void (void) noexcept'
|   | | | | |-CXXOperatorCallExpr 0x7fa81d1b2770 <line:1234:9, col:19> 'struct std::__1::_PairT' lvalue
|   | | | | | |-ImplicitCastExpr 0x7fa81d1b2758 <col:17> 'struct std::__1::_PairT &(*)(const struct std::__1::_PairT &) noexcept' <FunctionToPointerDecay>
|   | | | | | | `-DeclRefExpr 0x7fa81d1b2478 <col:17> 'struct std::__1::_PairT &(const struct std::__1::_PairT &) noexcept' lvalue CXXMethod 0x7fa81d1b20f8 'operator=' 'struct std::__1::_PairT &(const struct std::__1::_PairT &) noexcept'
|   | | | | | |-MemberExpr 0x7fa81d1b2068 <col:9, col:13> 'struct std::__1::_PairT':'struct std::__1::_PairT' lvalue .__t 0x7fa81d1b11e8
|   | | | | | | `-DeclRefExpr 0x7fa81d1b2040 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fa81d1b1530 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   | | | | | `-ImplicitCastExpr 0x7fa81d1b23f8 <col:19> 'const struct std::__1::_PairT':'const struct std::__1::_PairT' lvalue <NoOp>
|   | | | | |   `-DeclRefExpr 0x7fa81d1b20a0 <col:19> 'struct std::__1::_PairT':'struct std::__1::_PairT' lvalue ParmVar 0x7fa81c8169c8 '__v' 'struct std::__1::_PairT':'struct std::__1::_PairT'
|   | | | | `-ReturnStmt 0x7fa81d1b2c10 <line:1235:9, col:65>
|   | | | |   `-CXXOperatorCallExpr 0x7fa81d1b2af0 <col:16, col:65> 'unsigned long':'unsigned long'
|   | | | |     |-ImplicitCastExpr 0x7fa81d1b2ad8 <col:16, col:65> 'unsigned long (*)(const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | |     | `-DeclRefExpr 0x7fa81d1b2a50 <col:16, col:65> 'unsigned long (const void *, unsigned long)' lvalue CXXMethod 0x7fa81c810220 'operator()' 'unsigned long (const void *, unsigned long)'
|   | | | |     |-CXXTemporaryObjectExpr 0x7fa81c806e78 <col:16, col:46> '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   | | | |     |-ImplicitCastExpr 0x7fa81d1b2b40 <col:48, col:49> 'const void *' <BitCast>
|   | | | |     | `-UnaryOperator 0x7fa81d1b29c8 <col:48, col:49> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9) *' prefix '&'
|   | | | |     |   `-DeclRefExpr 0x7fa81d1b2948 <col:49> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fa81d1b1530 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   | | | |     `-UnaryExprOrTypeTraitExpr 0x7fa81d1b2a30 <col:54, col:64> 'unsigned long' sizeof
|   | | | |       `-ParenExpr 0x7fa81d1b2a10 <col:60, col:64> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue
|   | | | |         `-DeclRefExpr 0x7fa81d1b29e8 <col:61> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fa81d1b1530 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   | | | `-AlwaysInlineAttr 0x7fa81c816bb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | | |-CXXConstructorDecl 0x7fa81c816c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1219:8> col:8 implicit referenced constexpr __scalar_hash 'void (void) noexcept' inline default trivial
|   | | |-CXXConstructorDecl 0x7fa81c8172b8 <col:8> col:8 implicit constexpr __scalar_hash 'void (const struct std::__1::__scalar_hash<struct std::__1::_PairT, 2> &)' inline default trivial noexcept-unevaluated 0x7fa81c8172b8
|   | | | `-ParmVarDecl 0x7fa81c8173e0 <col:8> col:8 'const struct std::__1::__scalar_hash<struct std::__1::_PairT, 2> &'
|   | | |-CXXConstructorDecl 0x7fa81c817478 <col:8> col:8 implicit constexpr __scalar_hash 'void (struct std::__1::__scalar_hash<struct std::__1::_PairT, 2> &&)' inline default trivial noexcept-unevaluated 0x7fa81c817478
|   | | | `-ParmVarDecl 0x7fa81c8175a0 <col:8> col:8 'struct std::__1::__scalar_hash<struct std::__1::_PairT, 2> &&'
|   | | `-CXXDestructorDecl 0x7fa81c817640 <col:8> col:8 implicit referenced ~__scalar_hash 'void (void) noexcept' inline default trivial
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a0480 <line:1201:1, line:1216:1> line:1202:8 struct __scalar_hash definition
|   | | |-public 'unary_function<long long, size_t>':'struct std::__1::unary_function<long long, unsigned long>'
|   | | |-TemplateArgument type 'long long'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl 0x7fa81d1a0c18 prev 0x7fa81d1a0480 <col:1, col:8> col:8 implicit struct __scalar_hash
|   | | `-CXXMethodDecl 0x7fa81d1a0dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1215:5> line:1206:12 operator() 'size_t (long long) const noexcept'
|   | |   |-ParmVarDecl 0x7fa81d1a0cc0 <col:23, col:27> col:27 __v 'long long':'long long'
|   | |   `-AlwaysInlineAttr 0x7fa81d1a0ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a1370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1201:1, line:1216:1> line:1202:8 struct __scalar_hash definition
|   | | |-public 'unary_function<unsigned long long, size_t>':'struct std::__1::unary_function<unsigned long long, unsigned long>'
|   | | |-TemplateArgument type 'unsigned long long'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl 0x7fa81d1a1b08 prev 0x7fa81d1a1370 <col:1, col:8> col:8 implicit struct __scalar_hash
|   | | `-CXXMethodDecl 0x7fa81d1a1cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1215:5> line:1206:12 operator() 'size_t (unsigned long long) const noexcept'
|   | |   |-ParmVarDecl 0x7fa81d1a1bb0 <col:23, col:27> col:27 __v 'unsigned long long':'unsigned long long'
|   | |   `-AlwaysInlineAttr 0x7fa81d1a1d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a2240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1218:1, line:1237:1> line:1219:8 struct __scalar_hash definition
|   | | |-public 'unary_function<__int128, size_t>':'struct std::__1::unary_function<__int128, unsigned long>'
|   | | |-TemplateArgument type '__int128'
|   | | |-TemplateArgument integral 2
|   | | |-CXXRecordDecl 0x7fa81d1a29d8 prev 0x7fa81d1a2240 <col:1, col:8> col:8 implicit struct __scalar_hash
|   | | `-CXXMethodDecl 0x7fa81d1a2b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> line:1223:12 operator() 'size_t (__int128) const noexcept'
|   | |   |-ParmVarDecl 0x7fa81d1a2a80 <col:23, col:27> col:27 __v '__int128':'__int128'
|   | |   `-AlwaysInlineAttr 0x7fa81d1a2c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a3110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1218:1, line:1237:1> line:1219:8 struct __scalar_hash definition
|   | | |-public 'unary_function<unsigned __int128, size_t>':'struct std::__1::unary_function<unsigned __int128, unsigned long>'
|   | | |-TemplateArgument type 'unsigned __int128'
|   | | |-TemplateArgument integral 2
|   | | |-CXXRecordDecl 0x7fa81d1a38a8 prev 0x7fa81d1a3110 <col:1, col:8> col:8 implicit struct __scalar_hash
|   | | `-CXXMethodDecl 0x7fa81d1a3a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> line:1223:12 operator() 'size_t (unsigned __int128) const noexcept'
|   | |   |-ParmVarDecl 0x7fa81d1a3950 <col:23, col:27> col:27 __v 'unsigned __int128':'unsigned __int128'
|   | |   `-AlwaysInlineAttr 0x7fa81d1a3b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a4000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1183:1, line:1199:1> line:1184:8 struct __scalar_hash definition
|   | | |-public 'unary_function<float, size_t>':'struct std::__1::unary_function<float, unsigned long>'
|   | | |-TemplateArgument type 'float'
|   | | |-TemplateArgument integral 0
|   | | |-CXXRecordDecl 0x7fa81d1a4818 prev 0x7fa81d1a4000 <col:1, col:8> col:8 implicit struct __scalar_hash
|   | | `-CXXMethodDecl 0x7fa81d1a49c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1198:5> line:1188:12 used operator() 'size_t (float) const noexcept'
|   | |   |-ParmVarDecl 0x7fa81d1a48c0 <col:23, col:27> col:27 used __v 'float':'float'
|   | |   |-CompoundStmt 0x7fa81d20c6f0 <line:1189:5, line:1198:5>
|   | |   | |-DeclStmt 0x7fa81d20c418 <line:1190:9, line:1194:14>
|   | |   | | |-CXXRecordDecl 0x7fa81d20bc88 <line:1190:9, line:1194:9> line:1190:9 union definition
|   | |   | | | |-FieldDecl 0x7fa81d20bdc8 <line:1192:13, col:20> col:20 referenced __t 'float':'float'
|   | |   | | | |-FieldDecl 0x7fa81d20be10 <line:1193:13, col:20> col:20 referenced __a 'size_t':'unsigned long'
|   | |   | | | |-CXXConstructorDecl 0x7fa81d20bf50 <line:1190:9> col:9 implicit used  'void (void) noexcept' inline default trivial
|   | |   | | | | `-CompoundStmt 0x7fa81d20c3b8 <col:9>
|   | |   | | | |-CXXConstructorDecl 0x7fa81d20c068 <col:9> col:9 implicit constexpr  'void (const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9) &)' inline default trivial noexcept-unevaluated 0x7fa81d20c068
|   | |   | | | | `-ParmVarDecl 0x7fa81d20c190 <col:9> col:9 'const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9) &'
|   | |   | | | `-CXXConstructorDecl 0x7fa81d20c228 <col:9> col:9 implicit constexpr  'void (union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9) &&)' inline default trivial noexcept-unevaluated 0x7fa81d20c228
|   | |   | | |   `-ParmVarDecl 0x7fa81d20c350 <col:9> col:9 'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9) &&'
|   | |   | | `-VarDecl 0x7fa81d20bed0 <col:9, line:1194:11> col:11 used __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' callinit
|   | |   | |   `-CXXConstructExpr 0x7fa81d20c3d0 <col:11> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' 'void (void) noexcept'
|   | |   | |-BinaryOperator 0x7fa81d20c4a8 <line:1195:9, col:19> 'size_t':'unsigned long' lvalue '='
|   | |   | | |-MemberExpr 0x7fa81d20c458 <col:9, col:13> 'size_t':'unsigned long' lvalue .__a 0x7fa81d20be10
|   | |   | | | `-DeclRefExpr 0x7fa81d20c430 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fa81d20bed0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   | |   | | `-ImplicitCastExpr 0x7fa81d20c490 <col:19> 'size_t':'unsigned long' <IntegralCast>
|   | |   | |   `-IntegerLiteral 0x7fa81c80d6a0 <col:19> 'int' 0
|   | |   | |-BinaryOperator 0x7fa81d20c638 <line:1196:9, col:19> 'float':'float' lvalue '='
|   | |   | | |-MemberExpr 0x7fa81d20c5c0 <col:9, col:13> 'float':'float' lvalue .__t 0x7fa81d20bdc8
|   | |   | | | `-DeclRefExpr 0x7fa81d20c598 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fa81d20bed0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   | |   | | `-ImplicitCastExpr 0x7fa81d20c620 <col:19> 'float':'float' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x7fa81d20c5f8 <col:19> 'float':'float' lvalue ParmVar 0x7fa81d1a48c0 '__v' 'float':'float'
|   | |   | `-ReturnStmt 0x7fa81d20c6d8 <line:1197:9, col:20>
|   | |   |   `-ImplicitCastExpr 0x7fa81d20c6c0 <col:16, col:20> 'size_t':'unsigned long' <LValueToRValue>
|   | |   |     `-MemberExpr 0x7fa81d20c688 <col:16, col:20> 'size_t':'unsigned long' lvalue .__a 0x7fa81d20be10
|   | |   |       `-DeclRefExpr 0x7fa81d20c660 <col:16> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fa81d20bed0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   | |   `-AlwaysInlineAttr 0x7fa81d1a4aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | |-ClassTemplateSpecializationDecl 0x7fa81d1a55d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1201:1, line:1216:1> line:1202:8 struct __scalar_hash definition
|   | | |-public 'unary_function<double, size_t>':'struct std::__1::unary_function<double, unsigned long>'
|   | | |-TemplateArgument type 'double'
|   | | |-TemplateArgument integral 1
|   | | |-CXXRecordDecl 0x7fa81d1a5d68 prev 0x7fa81d1a55d0 <col:1, col:8> col:8 implicit struct __scalar_hash
|   | | `-CXXMethodDecl 0x7fa81d1a5f18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1215:5> line:1206:12 used operator() 'size_t (double) const noexcept'
|   | |   |-ParmVarDecl 0x7fa81d1a5e10 <col:23, col:27> col:27 used __v 'double':'double'
|   | |   |-CompoundStmt 0x7fa81d20d0f0 <line:1207:5, line:1215:5>
|   | |   | |-DeclStmt 0x7fa81d20ceb8 <line:1208:9, line:1212:14>
|   | |   | | |-CXXRecordDecl 0x7fa81d20c728 <line:1208:9, line:1212:9> line:1208:9 union definition
|   | |   | | | |-FieldDecl 0x7fa81d20c868 <line:1210:13, col:20> col:20 referenced __t 'double':'double'
|   | |   | | | |-FieldDecl 0x7fa81d20c8b0 <line:1211:13, col:20> col:20 referenced __a 'size_t':'unsigned long'
|   | |   | | | |-CXXConstructorDecl 0x7fa81d20c9f0 <line:1208:9> col:9 implicit used  'void (void) noexcept' inline default trivial
|   | |   | | | | `-CompoundStmt 0x7fa81d20ce58 <col:9>
|   | |   | | | |-CXXConstructorDecl 0x7fa81d20cb08 <col:9> col:9 implicit constexpr  'void (const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9) &)' inline default trivial noexcept-unevaluated 0x7fa81d20cb08
|   | |   | | | | `-ParmVarDecl 0x7fa81d20cc30 <col:9> col:9 'const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9) &'
|   | |   | | | `-CXXConstructorDecl 0x7fa81d20ccc8 <col:9> col:9 implicit constexpr  'void (union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9) &&)' inline default trivial noexcept-unevaluated 0x7fa81d20ccc8
|   | |   | | |   `-ParmVarDecl 0x7fa81d20cdf0 <col:9> col:9 'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9) &&'
|   | |   | | `-VarDecl 0x7fa81d20c970 <col:9, line:1212:11> col:11 used __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' callinit
|   | |   | |   `-CXXConstructExpr 0x7fa81d20ce70 <col:11> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' 'void (void) noexcept'
|   | |   | |-BinaryOperator 0x7fa81d20cf70 <line:1213:9, col:19> 'double':'double' lvalue '='
|   | |   | | |-MemberExpr 0x7fa81d20cef8 <col:9, col:13> 'double':'double' lvalue .__t 0x7fa81d20c868
|   | |   | | | `-DeclRefExpr 0x7fa81d20ced0 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' lvalue Var 0x7fa81d20c970 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   | |   | | `-ImplicitCastExpr 0x7fa81d20cf58 <col:19> 'double':'double' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x7fa81d20cf30 <col:19> 'double':'double' lvalue ParmVar 0x7fa81d1a5e10 '__v' 'double':'double'
|   | |   | `-ReturnStmt 0x7fa81d20d0d8 <line:1214:9, col:20>
|   | |   |   `-ImplicitCastExpr 0x7fa81d20d0c0 <col:16, col:20> 'size_t':'unsigned long' <LValueToRValue>
|   | |   |     `-MemberExpr 0x7fa81d20d088 <col:16, col:20> 'size_t':'unsigned long' lvalue .__a 0x7fa81d20c8b0
|   | |   |       `-DeclRefExpr 0x7fa81d20d060 <col:16> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' lvalue Var 0x7fa81d20c970 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   | |   `-AlwaysInlineAttr 0x7fa81d1a5ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-ClassTemplateSpecializationDecl 0x7fa81d1a6b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1218:1, line:1237:1> line:1219:8 struct __scalar_hash definition
|   |   |-public 'unary_function<long double, size_t>':'struct std::__1::unary_function<long double, unsigned long>'
|   |   |-TemplateArgument type 'long double'
|   |   |-TemplateArgument integral 2
|   |   |-CXXRecordDecl 0x7fa81d1a72b8 prev 0x7fa81d1a6b20 <col:1, col:8> col:8 implicit struct __scalar_hash
|   |   `-CXXMethodDecl 0x7fa81d1a7468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> line:1223:12 operator() 'size_t (long double) const noexcept'
|   |     |-ParmVarDecl 0x7fa81d1a7360 <col:23, col:27> col:27 __v 'long double':'long double'
|   |     `-AlwaysInlineAttr 0x7fa81d1a7548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c80cb80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1183:1, line:1199:1> line:1184:8 struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81c80c978 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c80cf78 <line:1184:1, col:8> col:8 implicit struct __scalar_hash
|   | `-CXXMethodDecl 0x7fa81c80d200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1198:5> line:1188:12 operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl 0x7fa81c80d050 <col:23, col:27> col:27 referenced __v '_Tp'
|   |   |-CompoundStmt 0x7fa81c80d850 <line:1189:5, line:1198:5>
|   |   | |-DeclStmt 0x7fa81c80d608 <line:1190:9, line:1194:14>
|   |   | | |-CXXRecordDecl 0x7fa81c80d348 <line:1190:9, line:1194:9> line:1190:9 union definition
|   |   | | | |-FieldDecl 0x7fa81c80d478 <line:1192:13, col:20> col:20 __t '_Tp'
|   |   | | | `-FieldDecl 0x7fa81c80d4d0 <line:1193:13, col:20> col:20 __a 'size_t':'unsigned long'
|   |   | | `-VarDecl 0x7fa81c80d590 <line:1190:9, line:1194:11> col:11 referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   |   | |-BinaryOperator 0x7fa81c80d6c0 <line:1195:9, col:19> '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr 0x7fa81c80d648 <col:9, col:13> '<dependent type>' lvalue .__a
|   |   | | | `-DeclRefExpr 0x7fa81c80d620 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fa81c80d590 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   |   | | `-IntegerLiteral 0x7fa81c80d6a0 <col:19> 'int' 0
|   |   | |-BinaryOperator 0x7fa81c80d790 <line:1196:9, col:19> '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr 0x7fa81c80d710 <col:9, col:13> '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 0x7fa81c80d6e8 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fa81c80d590 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   |   | | `-DeclRefExpr 0x7fa81c80d768 <col:19> '_Tp' lvalue ParmVar 0x7fa81c80d050 '__v' '_Tp'
|   |   | `-ReturnStmt 0x7fa81c80d838 <line:1197:9, col:20>
|   |   |   `-CXXDependentScopeMemberExpr 0x7fa81c80d7e0 <col:16, col:20> '<dependent type>' lvalue .__a
|   |   |     `-DeclRefExpr 0x7fa81c80d7b8 <col:16> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)' lvalue Var 0x7fa81c80d590 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1190:9)'
|   |   |-AlwaysInlineAttr 0x7fa81c80d2a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81c80d2e8 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c80da90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1201:1, line:1216:1> line:1202:8 struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 1
|   | |-TemplateTypeParmDecl 0x7fa81c80d888 <line:1201:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c80de28 <line:1202:1, col:8> col:8 implicit struct __scalar_hash
|   | `-CXXMethodDecl 0x7fa81c80dff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1215:5> line:1206:12 operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl 0x7fa81c80df00 <col:23, col:27> col:27 referenced __v '_Tp'
|   |   |-CompoundStmt 0x7fa81c80e578 <line:1207:5, line:1215:5>
|   |   | |-DeclStmt 0x7fa81c80e3f8 <line:1208:9, line:1212:14>
|   |   | | |-CXXRecordDecl 0x7fa81c80e138 <line:1208:9, line:1212:9> line:1208:9 union definition
|   |   | | | |-FieldDecl 0x7fa81c80e268 <line:1210:13, col:20> col:20 __t '_Tp'
|   |   | | | `-FieldDecl 0x7fa81c80e2c0 <line:1211:13, col:20> col:20 __a 'size_t':'unsigned long'
|   |   | | `-VarDecl 0x7fa81c80e380 <line:1208:9, line:1212:11> col:11 referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   |   | |-BinaryOperator 0x7fa81c80e4b8 <line:1213:9, col:19> '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr 0x7fa81c80e438 <col:9, col:13> '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 0x7fa81c80e410 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' lvalue Var 0x7fa81c80e380 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   |   | | `-DeclRefExpr 0x7fa81c80e490 <col:19> '_Tp' lvalue ParmVar 0x7fa81c80df00 '__v' '_Tp'
|   |   | `-ReturnStmt 0x7fa81c80e560 <line:1214:9, col:20>
|   |   |   `-CXXDependentScopeMemberExpr 0x7fa81c80e508 <col:16, col:20> '<dependent type>' lvalue .__a
|   |   |     `-DeclRefExpr 0x7fa81c80e4e0 <col:16> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)' lvalue Var 0x7fa81c80e380 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1208:9)'
|   |   |-AlwaysInlineAttr 0x7fa81c80e098 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81c80e0e0 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c80e7b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1218:1, line:1237:1> line:1219:8 struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 2
|   | |-TemplateTypeParmDecl 0x7fa81c80e5a8 <line:1218:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c80eb48 <line:1219:1, col:8> col:8 implicit struct __scalar_hash
|   | `-CXXMethodDecl 0x7fa81c80ed18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1236:5> line:1223:12 operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl 0x7fa81c80ec20 <col:23, col:27> col:27 referenced __v '_Tp'
|   |   |-CompoundStmt 0x7fa81c807088 <line:1224:5, line:1236:5>
|   |   | |-DeclStmt 0x7fa81c80fb68 <line:1225:9, line:1233:14>
|   |   | | |-CXXRecordDecl 0x7fa81c80ee58 <line:1225:9, line:1233:9> line:1225:9 union definition
|   |   | | | |-FieldDecl 0x7fa81c80ef88 <line:1227:13, col:17> col:17 __t '_Tp'
|   |   | | | |-CXXRecordDecl 0x7fa81c80efd0 <line:1228:13, line:1232:13> line:1228:13 struct definition
|   |   | | | | |-FieldDecl 0x7fa81c80f108 <line:1230:17, col:24> col:24 __a 'size_t':'unsigned long'
|   |   | | | | `-FieldDecl 0x7fa81c80f160 <line:1231:17, col:24> col:24 __b 'size_t':'unsigned long'
|   |   | | | `-FieldDecl 0x7fa81c80fa20 <line:1228:13, line:1232:15> col:15 __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1228:13)'
|   |   | | `-VarDecl 0x7fa81c80faf0 <line:1225:9, line:1233:11> col:11 referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   |   | |-BinaryOperator 0x7fa81c80fc28 <line:1234:9, col:19> '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr 0x7fa81c80fba8 <col:9, col:13> '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 0x7fa81c80fb80 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fa81c80faf0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   |   | | `-DeclRefExpr 0x7fa81c80fc00 <col:19> '_Tp' lvalue ParmVar 0x7fa81c80ec20 '__v' '_Tp'
|   |   | `-ReturnStmt 0x7fa81c807070 <line:1235:9, col:65>
|   |   |   `-CallExpr 0x7fa81c807038 <col:16, col:65> '<dependent type>'
|   |   |     |-CXXTemporaryObjectExpr 0x7fa81c806e78 <col:16, col:46> '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   |   |     |-UnaryOperator 0x7fa81c806fb0 <col:48, col:49> '<dependent type>' prefix '&'
|   |   |     | `-DeclRefExpr 0x7fa81c806f88 <col:49> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fa81c80faf0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   |   |     `-UnaryExprOrTypeTraitExpr 0x7fa81c807018 <col:54, col:64> 'unsigned long' sizeof
|   |   |       `-ParenExpr 0x7fa81c806ff8 <col:60, col:64> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue
|   |   |         `-DeclRefExpr 0x7fa81c806fd0 <col:61> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)' lvalue Var 0x7fa81c80faf0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1225:9)'
|   |   |-AlwaysInlineAttr 0x7fa81c80edb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81c80ee00 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c8072c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1239:1, line:1259:1> line:1240:8 struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 3
|   | |-TemplateTypeParmDecl 0x7fa81c8070b8 <line:1239:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c807658 <line:1240:1, col:8> col:8 implicit struct __scalar_hash
|   | `-CXXMethodDecl 0x7fa81c807828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1258:5> line:1244:12 operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl 0x7fa81c807730 <col:23, col:27> col:27 referenced __v '_Tp'
|   |   |-CompoundStmt 0x7fa81c812a18 <line:1245:5, line:1258:5>
|   |   | |-DeclStmt 0x7fa81c807ec8 <line:1246:9, line:1255:14>
|   |   | | |-CXXRecordDecl 0x7fa81c807968 <line:1246:9, line:1255:9> line:1246:9 union definition
|   |   | | | |-FieldDecl 0x7fa81c807a98 <line:1248:13, col:17> col:17 __t '_Tp'
|   |   | | | |-CXXRecordDecl 0x7fa81c807ae0 <line:1249:13, line:1254:13> line:1249:13 struct definition
|   |   | | | | |-FieldDecl 0x7fa81c807c18 <line:1251:17, col:24> col:24 __a 'size_t':'unsigned long'
|   |   | | | | |-FieldDecl 0x7fa81c807c70 <line:1252:17, col:24> col:24 __b 'size_t':'unsigned long'
|   |   | | | | `-FieldDecl 0x7fa81c807cc8 <line:1253:17, col:24> col:24 __c 'size_t':'unsigned long'
|   |   | | | `-FieldDecl 0x7fa81c807d80 <line:1249:13, line:1254:15> col:15 __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1249:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1249:13)'
|   |   | | `-VarDecl 0x7fa81c807e50 <line:1246:9, line:1255:11> col:11 referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)'
|   |   | |-BinaryOperator 0x7fa81c807f88 <line:1256:9, col:19> '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr 0x7fa81c807f08 <col:9, col:13> '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 0x7fa81c807ee0 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)' lvalue Var 0x7fa81c807e50 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)'
|   |   | | `-DeclRefExpr 0x7fa81c807f60 <col:19> '_Tp' lvalue ParmVar 0x7fa81c807730 '__v' '_Tp'
|   |   | `-ReturnStmt 0x7fa81c812a00 <line:1257:9, col:65>
|   |   |   `-CallExpr 0x7fa81c8081c0 <col:16, col:65> '<dependent type>'
|   |   |     |-CXXTemporaryObjectExpr 0x7fa81c8080d8 <col:16, col:46> '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   |   |     |-UnaryOperator 0x7fa81c808138 <col:48, col:49> '<dependent type>' prefix '&'
|   |   |     | `-DeclRefExpr 0x7fa81c808110 <col:49> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)' lvalue Var 0x7fa81c807e50 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)'
|   |   |     `-UnaryExprOrTypeTraitExpr 0x7fa81c8081a0 <col:54, col:64> 'unsigned long' sizeof
|   |   |       `-ParenExpr 0x7fa81c808180 <col:60, col:64> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)' lvalue
|   |   |         `-DeclRefExpr 0x7fa81c808158 <col:61> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)' lvalue Var 0x7fa81c807e50 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1246:9)'
|   |   |-AlwaysInlineAttr 0x7fa81c8078c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81c807910 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c812c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1261:1, line:1282:1> line:1262:8 struct __scalar_hash definition
|   | |-public 'unary_function<_Tp, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 4
|   | |-TemplateTypeParmDecl 0x7fa81c812a48 <line:1261:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81c812fe8 <line:1262:1, col:8> col:8 implicit struct __scalar_hash
|   | `-CXXMethodDecl 0x7fa81c8131b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1281:5> line:1266:12 operator() 'size_t (_Tp) const noexcept'
|   |   |-ParmVarDecl 0x7fa81c8130c0 <col:23, col:27> col:27 referenced __v '_Tp'
|   |   |-CompoundStmt 0x7fa81c813c00 <line:1267:5, line:1281:5>
|   |   | |-DeclStmt 0x7fa81c8138b8 <line:1268:9, line:1278:14>
|   |   | | |-CXXRecordDecl 0x7fa81c8132f8 <line:1268:9, line:1278:9> line:1268:9 union definition
|   |   | | | |-FieldDecl 0x7fa81c813428 <line:1270:13, col:17> col:17 __t '_Tp'
|   |   | | | |-CXXRecordDecl 0x7fa81c813470 <line:1271:13, line:1277:13> line:1271:13 struct definition
|   |   | | | | |-FieldDecl 0x7fa81c8135a8 <line:1273:17, col:24> col:24 __a 'size_t':'unsigned long'
|   |   | | | | |-FieldDecl 0x7fa81c813600 <line:1274:17, col:24> col:24 __b 'size_t':'unsigned long'
|   |   | | | | |-FieldDecl 0x7fa81c813658 <line:1275:17, col:24> col:24 __c 'size_t':'unsigned long'
|   |   | | | | `-FieldDecl 0x7fa81c8136b0 <line:1276:17, col:24> col:24 __d 'size_t':'unsigned long'
|   |   | | | `-FieldDecl 0x7fa81c813770 <line:1271:13, line:1277:15> col:15 __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1271:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1271:13)'
|   |   | | `-VarDecl 0x7fa81c813840 <line:1268:9, line:1278:11> col:11 referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)'
|   |   | |-BinaryOperator 0x7fa81c813978 <line:1279:9, col:19> '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr 0x7fa81c8138f8 <col:9, col:13> '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 0x7fa81c8138d0 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)' lvalue Var 0x7fa81c813840 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)'
|   |   | | `-DeclRefExpr 0x7fa81c813950 <col:19> '_Tp' lvalue ParmVar 0x7fa81c8130c0 '__v' '_Tp'
|   |   | `-ReturnStmt 0x7fa81c813be8 <line:1280:9, col:65>
|   |   |   `-CallExpr 0x7fa81c813bb0 <col:16, col:65> '<dependent type>'
|   |   |     |-CXXTemporaryObjectExpr 0x7fa81c813ac8 <col:16, col:46> '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   |   |     |-UnaryOperator 0x7fa81c813b28 <col:48, col:49> '<dependent type>' prefix '&'
|   |   |     | `-DeclRefExpr 0x7fa81c813b00 <col:49> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)' lvalue Var 0x7fa81c813840 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)'
|   |   |     `-UnaryExprOrTypeTraitExpr 0x7fa81c813b90 <col:54, col:64> 'unsigned long' sizeof
|   |   |       `-ParenExpr 0x7fa81c813b70 <col:60, col:64> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)' lvalue
|   |   |         `-DeclRefExpr 0x7fa81c813b48 <col:61> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)' lvalue Var 0x7fa81c813840 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1268:9)'
|   |   |-AlwaysInlineAttr 0x7fa81c813258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81c8132a0 <col:51, col:74> Hidden
|   |-CXXRecordDecl 0x7fa81c813c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1284:1, line:1287:1> line:1284:8 referenced struct _PairT definition
|   | |-CXXRecordDecl 0x7fa81c813d58 <col:1, col:8> col:8 implicit struct _PairT
|   | |-FieldDecl 0x7fa81c813e00 <line:1285:3, col:10> col:10 referenced first 'size_t':'unsigned long'
|   | |-FieldDecl 0x7fa81c813e58 <line:1286:3, col:10> col:10 referenced second 'size_t':'unsigned long'
|   | |-CXXConstructorDecl 0x7fa81c817890 <line:1284:8> col:8 implicit _PairT 'void (void) noexcept' inline default trivial
|   | |-CXXConstructorDecl 0x7fa81c8179a8 <col:8> col:8 implicit used constexpr _PairT 'void (const struct std::__1::_PairT &) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x7fa81c817ad0 <col:8> col:8 used 'const struct std::__1::_PairT &'
|   | | |-CXXCtorInitializer Field 0x7fa81c813e00 'first' 'size_t':'unsigned long'
|   | | | `-ImplicitCastExpr 0x7fa81c817d98 <col:8> 'size_t':'unsigned long' <LValueToRValue>
|   | | |   `-MemberExpr 0x7fa81c817d60 <col:8> 'const size_t':'const unsigned long' lvalue .first 0x7fa81c813e00
|   | | |     `-DeclRefExpr 0x7fa81c817d38 <col:8> 'const struct std::__1::_PairT' lvalue ParmVar 0x7fa81c817ad0 '' 'const struct std::__1::_PairT &'
|   | | |-CXXCtorInitializer Field 0x7fa81c813e58 'second' 'size_t':'unsigned long'
|   | | | `-ImplicitCastExpr 0x7fa81c817e38 <col:8> 'size_t':'unsigned long' <LValueToRValue>
|   | | |   `-MemberExpr 0x7fa81c817e00 <col:8> 'const size_t':'const unsigned long' lvalue .second 0x7fa81c813e58
|   | | |     `-DeclRefExpr 0x7fa81c817dd8 <col:8> 'const struct std::__1::_PairT' lvalue ParmVar 0x7fa81c817ad0 '' 'const struct std::__1::_PairT &'
|   | | `-CompoundStmt 0x7fa81c817e88 <col:8>
|   | |-CXXConstructorDecl 0x7fa81c817b68 <col:8> col:8 implicit constexpr _PairT 'void (struct std::__1::_PairT &&)' inline default trivial noexcept-unevaluated 0x7fa81c817b68
|   | | `-ParmVarDecl 0x7fa81c817c90 <col:8> col:8 'struct std::__1::_PairT &&'
|   | |-CXXDestructorDecl 0x7fa81c817ed8 <col:8> col:8 implicit referenced ~_PairT 'void (void) noexcept' inline default trivial
|   | |-CXXMethodDecl 0x7fa81d1b20f8 <col:8> col:8 implicit used constexpr operator= 'struct std::__1::_PairT &(const struct std::__1::_PairT &) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x7fa81d1b2210 <col:8> col:8 used 'const struct std::__1::_PairT &'
|   | | `-CompoundStmt 0x7fa81d1b26d0 <col:8>
|   | |   |-BinaryOperator 0x7fa81d1b2568 <col:8> 'size_t':'unsigned long' lvalue '='
|   | |   | |-MemberExpr 0x7fa81d1b24b8 <col:8> 'size_t':'unsigned long' lvalue ->first 0x7fa81c813e00
|   | |   | | `-CXXThisExpr 0x7fa81d1b24a0 <col:8> 'struct std::__1::_PairT *' this
|   | |   | `-ImplicitCastExpr 0x7fa81d1b2550 <col:8> 'size_t':'unsigned long' <LValueToRValue>
|   | |   |   `-MemberExpr 0x7fa81d1b2518 <col:8> 'const size_t':'const unsigned long' lvalue .first 0x7fa81c813e00
|   | |   |     `-DeclRefExpr 0x7fa81d1b24f0 <col:8> 'const struct std::__1::_PairT' lvalue ParmVar 0x7fa81d1b2210 '' 'const struct std::__1::_PairT &'
|   | |   |-BinaryOperator 0x7fa81d1b2658 <col:8> 'size_t':'unsigned long' lvalue '='
|   | |   | |-MemberExpr 0x7fa81d1b25a8 <col:8> 'size_t':'unsigned long' lvalue ->second 0x7fa81c813e58
|   | |   | | `-CXXThisExpr 0x7fa81d1b2590 <col:8> 'struct std::__1::_PairT *' this
|   | |   | `-ImplicitCastExpr 0x7fa81d1b2640 <col:8> 'size_t':'unsigned long' <LValueToRValue>
|   | |   |   `-MemberExpr 0x7fa81d1b2608 <col:8> 'const size_t':'const unsigned long' lvalue .second 0x7fa81c813e58
|   | |   |     `-DeclRefExpr 0x7fa81d1b25e0 <col:8> 'const struct std::__1::_PairT' lvalue ParmVar 0x7fa81d1b2210 '' 'const struct std::__1::_PairT &'
|   | |   `-ReturnStmt 0x7fa81d1b26b8 <col:8>
|   | |     `-UnaryOperator 0x7fa81d1b2698 <col:8> 'struct std::__1::_PairT' lvalue prefix '*'
|   | |       `-CXXThisExpr 0x7fa81d1b2680 <col:8> 'struct std::__1::_PairT *' this
|   | `-CXXMethodDecl 0x7fa81d1b2278 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct std::__1::_PairT &(struct std::__1::_PairT &&)' inline default trivial noexcept-unevaluated 0x7fa81d1b2278
|   |   `-ParmVarDecl 0x7fa81d1b2390 <col:8> col:8 'struct std::__1::_PairT &&'
|   |-FunctionDecl 0x7fa81c814048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1294:1> line:1290:15 __hash_combine 'size_t (size_t, size_t) noexcept' inline
|   | |-ParmVarDecl 0x7fa81c813f00 <col:30, col:37> col:37 used __lhs 'size_t':'unsigned long'
|   | |-ParmVarDecl 0x7fa81c813f70 <col:44, col:51> col:51 used __rhs 'size_t':'unsigned long'
|   | |-CompoundStmt 0x7fa81c818140 <col:68, line:1294:1>
|   | | |-DeclStmt 0x7fa81c8144d0 <line:1291:5, col:41>
|   | | | `-TypedefDecl 0x7fa81c814478 <col:5, col:35> col:35 referenced _HashT '__scalar_hash<struct std::__1::_PairT>':'struct std::__1::__scalar_hash<struct std::__1::_PairT, 2>'
|   | | |   `-TemplateSpecializationType 0x7fa81c8143d0 '__scalar_hash<struct std::__1::_PairT>' sugar __scalar_hash
|   | | |     |-TemplateArgument type 'struct std::__1::_PairT'
|   | | |     `-RecordType 0x7fa81c8143b0 'struct std::__1::__scalar_hash<struct std::__1::_PairT, 2>'
|   | | |       `-ClassTemplateSpecialization 0x7fa81c8142a8 '__scalar_hash'
|   | | |-DeclStmt 0x7fa81c814678 <line:1292:5, col:38>
|   | | | `-VarDecl 0x7fa81c8144f8 <col:5, col:37> col:18 used __p 'const struct std::__1::_PairT' cinit
|   | | |   `-InitListExpr 0x7fa81c8145f8 <col:24, col:37> 'const struct std::__1::_PairT'
|   | | |     |-ImplicitCastExpr 0x7fa81c814648 <col:25> 'size_t':'unsigned long' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x7fa81c814558 <col:25> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81c813f00 '__lhs' 'size_t':'unsigned long'
|   | | |     `-ImplicitCastExpr 0x7fa81c814660 <col:32> 'size_t':'unsigned long' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x7fa81c814580 <col:32> 'size_t':'unsigned long' lvalue ParmVar 0x7fa81c813f70 '__rhs' 'size_t':'unsigned long'
|   | | `-ReturnStmt 0x7fa81c818128 <line:1293:5, col:24>
|   | |   `-CXXOperatorCallExpr 0x7fa81c8177e0 <col:12, col:24> 'size_t':'unsigned long'
|   | |     |-ImplicitCastExpr 0x7fa81c8177c8 <col:20, col:24> 'size_t (*)(struct std::__1::_PairT) const noexcept' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x7fa81c817740 <col:20, col:24> 'size_t (struct std::__1::_PairT) const noexcept' lvalue CXXMethod 0x7fa81c816ad8 'operator()' 'size_t (struct std::__1::_PairT) const noexcept'
|   | |     |-ImplicitCastExpr 0x7fa81c817858 <col:12, col:19> 'const struct std::__1::__scalar_hash<struct std::__1::_PairT, 2>' <NoOp>
|   | |     | `-CXXTemporaryObjectExpr 0x7fa81c817608 <col:12, col:19> '_HashT':'struct std::__1::__scalar_hash<struct std::__1::_PairT, 2>' 'void (void) noexcept' zeroing
|   | |     `-CXXConstructExpr 0x7fa81c817ea0 <col:21> 'struct std::__1::_PairT':'struct std::__1::_PairT' 'void (const struct std::__1::_PairT &) noexcept'
|   | |       `-DeclRefExpr 0x7fa81c817718 <col:21> 'const struct std::__1::_PairT' lvalue Var 0x7fa81c8144f8 '__p' 'const struct std::__1::_PairT'
|   | |-AlwaysInlineAttr 0x7fa81c8140f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   | `-VisibilityAttr 0x7fa81c814138 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81c818338 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1296:1, line:1311:1> line:1297:29 struct hash definition
|   | |-public 'unary_function<_Tp *, size_t>'
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl 0x7fa81c818170 <line:1296:10, col:16> col:16 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81c818478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d849938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1297:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d849b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1310:5> line:1301:12 operator() 'size_t (_Tp *) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d849a10 <col:23, col:28> col:28 referenced __v '_Tp *'
|   |   |-CompoundStmt 0x7fa81d84a290 <line:1302:5, line:1310:5>
|   |   | |-DeclStmt 0x7fa81d849f48 <line:1303:9, line:1307:14>
|   |   | | |-CXXRecordDecl 0x7fa81d849c88 <line:1303:9, line:1307:9> line:1303:9 union definition
|   |   | | | |-FieldDecl 0x7fa81d849db8 <line:1305:13, col:18> col:18 __t '_Tp *'
|   |   | | | `-FieldDecl 0x7fa81d849e10 <line:1306:13, col:20> col:20 __a 'size_t':'unsigned long'
|   |   | | `-VarDecl 0x7fa81d849ed0 <line:1303:9, line:1307:11> col:11 referenced __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)'
|   |   | |-BinaryOperator 0x7fa81d84a008 <line:1308:9, col:19> '<dependent type>' '='
|   |   | | |-CXXDependentScopeMemberExpr 0x7fa81d849f88 <col:9, col:13> '<dependent type>' lvalue .__t
|   |   | | | `-DeclRefExpr 0x7fa81d849f60 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)' lvalue Var 0x7fa81d849ed0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)'
|   |   | | `-DeclRefExpr 0x7fa81d849fe0 <col:19> '_Tp *' lvalue ParmVar 0x7fa81d849a10 '__v' '_Tp *'
|   |   | `-ReturnStmt 0x7fa81d84a278 <line:1309:9, col:65>
|   |   |   `-CallExpr 0x7fa81d84a240 <col:16, col:65> '<dependent type>'
|   |   |     |-CXXTemporaryObjectExpr 0x7fa81d84a158 <col:16, col:46> '__murmur2_or_cityhash<size_t>':'struct std::__1::__murmur2_or_cityhash<unsigned long, 64>' 'void (void) noexcept' zeroing
|   |   |     |-UnaryOperator 0x7fa81d84a1b8 <col:48, col:49> '<dependent type>' prefix '&'
|   |   |     | `-DeclRefExpr 0x7fa81d84a190 <col:49> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)' lvalue Var 0x7fa81d849ed0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)'
|   |   |     `-UnaryExprOrTypeTraitExpr 0x7fa81d84a220 <col:54, col:64> 'unsigned long' sizeof
|   |   |       `-ParenExpr 0x7fa81d84a200 <col:60, col:64> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)' lvalue
|   |   |         `-DeclRefExpr 0x7fa81d84a1d8 <col:61> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)' lvalue Var 0x7fa81d849ed0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1303:9)'
|   |   |-AlwaysInlineAttr 0x7fa81d849be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d849c30 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d84a310 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1314:1, line:1320:1> line:1315:29 struct hash definition
|   | |-public 'unary_function<_Bool, size_t>':'struct std::__1::unary_function<_Bool, unsigned long>'
|   | |-TemplateArgument type '_Bool'
|   | |-TypeVisibilityAttr 0x7fa81d84a448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d84a9c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1315:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d84abd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1319:82> col:12 operator() 'size_t (_Bool) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d84aaa0 <col:23, col:28> col:28 used __v '_Bool'
|   |   |-CompoundStmt 0x7fa81d84adc8 <col:49, col:82>
|   |   | `-ReturnStmt 0x7fa81d84adb0 <col:50, col:80>
|   |   |   `-CXXStaticCastExpr 0x7fa81d84ad80 <col:57, col:80> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81d84ad68 <col:77> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81d84ad50 <col:77> '_Bool' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81d84ad18 <col:77> '_Bool' lvalue ParmVar 0x7fa81d84aaa0 '__v' '_Bool'
|   |   |-AlwaysInlineAttr 0x7fa81d84ac78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d84acc0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d84ae38 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1322:1, line:1328:1> line:1323:29 struct hash definition
|   | |-public 'unary_function<char, size_t>':'struct std::__1::unary_function<char, unsigned long>'
|   | |-TemplateArgument type 'char'
|   | |-TypeVisibilityAttr 0x7fa81d84af68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d84b4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1323:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d84b6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1327:82> col:12 operator() 'size_t (char) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d84b5c0 <col:23, col:28> col:28 used __v 'char'
|   |   |-CompoundStmt 0x7fa81e800cf8 <col:49, col:82>
|   |   | `-ReturnStmt 0x7fa81e800ce0 <col:50, col:80>
|   |   |   `-CXXStaticCastExpr 0x7fa81e800cb0 <col:57, col:80> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81e800c98 <col:77> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81e800c80 <col:77> 'char' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81e800c48 <col:77> 'char' lvalue ParmVar 0x7fa81d84b5c0 '__v' 'char'
|   |   |-AlwaysInlineAttr 0x7fa81d84b798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d84b7e0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81e800d70 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1330:1, line:1336:1> line:1331:29 struct hash definition
|   | |-public 'unary_function<signed char, size_t>':'struct std::__1::unary_function<signed char, unsigned long>'
|   | |-TemplateArgument type 'signed char'
|   | |-TypeVisibilityAttr 0x7fa81e800ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81e801438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1331:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81e801658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1335:89> col:12 operator() 'size_t (signed char) const noexcept'
|   |   |-ParmVarDecl 0x7fa81e801518 <col:23, col:35> col:35 used __v 'signed char'
|   |   |-CompoundStmt 0x7fa81e801848 <col:56, col:89>
|   |   | `-ReturnStmt 0x7fa81e801830 <col:57, col:87>
|   |   |   `-CXXStaticCastExpr 0x7fa81e801800 <col:64, col:87> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81e8017e8 <col:84> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81e8017d0 <col:84> 'signed char' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81e801798 <col:84> 'signed char' lvalue ParmVar 0x7fa81e801518 '__v' 'signed char'
|   |   |-AlwaysInlineAttr 0x7fa81e8016f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81e801740 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81e8018c0 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1338:1, line:1344:1> line:1339:29 struct hash definition
|   | |-public 'unary_function<unsigned char, size_t>':'struct std::__1::unary_function<unsigned char, unsigned long>'
|   | |-TemplateArgument type 'unsigned char'
|   | |-TypeVisibilityAttr 0x7fa81e8019f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81e801f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1339:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81e8021a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1343:91> col:12 operator() 'size_t (unsigned char) const noexcept'
|   |   |-ParmVarDecl 0x7fa81e802068 <col:23, col:37> col:37 used __v 'unsigned char'
|   |   |-CompoundStmt 0x7fa81e802398 <col:58, col:91>
|   |   | `-ReturnStmt 0x7fa81e802380 <col:59, col:89>
|   |   |   `-CXXStaticCastExpr 0x7fa81e802350 <col:66, col:89> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81e802338 <col:86> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81e802320 <col:86> 'unsigned char' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81e8022e8 <col:86> 'unsigned char' lvalue ParmVar 0x7fa81e802068 '__v' 'unsigned char'
|   |   |-AlwaysInlineAttr 0x7fa81e802248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81e802290 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81e802408 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1348:1, line:1354:1> line:1349:29 struct hash definition
|   | |-public 'unary_function<char16_t, size_t>':'struct std::__1::unary_function<char16_t, unsigned long>'
|   | |-TemplateArgument type 'char16_t'
|   | |-TypeVisibilityAttr 0x7fa81e802538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81e802ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1349:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81e802cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1353:86> col:12 operator() 'size_t (char16_t) const noexcept'
|   |   |-ParmVarDecl 0x7fa81e802b90 <col:23, col:32> col:32 used __v 'char16_t'
|   |   |-CompoundStmt 0x7fa81e802eb8 <col:53, col:86>
|   |   | `-ReturnStmt 0x7fa81e802ea0 <col:54, col:84>
|   |   |   `-CXXStaticCastExpr 0x7fa81e802e70 <col:61, col:84> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81e802e58 <col:81> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81e802e40 <col:81> 'char16_t' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81e802e08 <col:81> 'char16_t' lvalue ParmVar 0x7fa81e802b90 '__v' 'char16_t'
|   |   |-AlwaysInlineAttr 0x7fa81e802d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81e802db0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81e802f28 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1356:1, line:1362:1> line:1357:29 struct hash definition
|   | |-public 'unary_function<char32_t, size_t>':'struct std::__1::unary_function<char32_t, unsigned long>'
|   | |-TemplateArgument type 'char32_t'
|   | |-TypeVisibilityAttr 0x7fa81e803058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81e8035d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1357:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81e8037e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1361:86> col:12 operator() 'size_t (char32_t) const noexcept'
|   |   |-ParmVarDecl 0x7fa81e8036b0 <col:23, col:32> col:32 used __v 'char32_t'
|   |   |-CompoundStmt 0x7fa81e8039d8 <col:53, col:86>
|   |   | `-ReturnStmt 0x7fa81e8039c0 <col:54, col:84>
|   |   |   `-CXXStaticCastExpr 0x7fa81e803990 <col:61, col:84> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81e803978 <col:81> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81e803960 <col:81> 'char32_t' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81e803928 <col:81> 'char32_t' lvalue ParmVar 0x7fa81e8036b0 '__v' 'char32_t'
|   |   |-AlwaysInlineAttr 0x7fa81e803888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81e8038d0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81e803a48 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1366:1, line:1372:1> line:1367:29 struct hash definition
|   | |-public 'unary_function<wchar_t, size_t>':'struct std::__1::unary_function<wchar_t, unsigned long>'
|   | |-TemplateArgument type 'wchar_t'
|   | |-TypeVisibilityAttr 0x7fa81e803b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81e8040f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1367:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81e804308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1371:85> col:12 operator() 'size_t (wchar_t) const noexcept'
|   |   |-ParmVarDecl 0x7fa81e8041d0 <col:23, col:31> col:31 used __v 'wchar_t'
|   |   |-CompoundStmt 0x7fa81e8044f8 <col:52, col:85>
|   |   | `-ReturnStmt 0x7fa81e8044e0 <col:53, col:83>
|   |   |   `-CXXStaticCastExpr 0x7fa81e8044b0 <col:60, col:83> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81e804498 <col:80> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81e804480 <col:80> 'wchar_t' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81e804448 <col:80> 'wchar_t' lvalue ParmVar 0x7fa81e8041d0 '__v' 'wchar_t'
|   |   |-AlwaysInlineAttr 0x7fa81e8043a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81e8043f0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81e804570 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1374:1, line:1380:1> line:1375:29 struct hash definition
|   | |-public 'unary_function<short, size_t>':'struct std::__1::unary_function<short, unsigned long>'
|   | |-TemplateArgument type 'short'
|   | |-TypeVisibilityAttr 0x7fa81e8046a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d198450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1375:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d198668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1379:83> col:12 operator() 'size_t (short) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d198530 <col:23, col:29> col:29 used __v 'short'
|   |   |-CompoundStmt 0x7fa81d198858 <col:50, col:83>
|   |   | `-ReturnStmt 0x7fa81d198840 <col:51, col:81>
|   |   |   `-CXXStaticCastExpr 0x7fa81d198810 <col:58, col:81> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81d1987f8 <col:78> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81d1987e0 <col:78> 'short' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81d1987a8 <col:78> 'short' lvalue ParmVar 0x7fa81d198530 '__v' 'short'
|   |   |-AlwaysInlineAttr 0x7fa81d198708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d198750 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d1988d0 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1382:1, line:1388:1> line:1383:29 struct hash definition
|   | |-public 'unary_function<unsigned short, size_t>':'struct std::__1::unary_function<unsigned short, unsigned long>'
|   | |-TemplateArgument type 'unsigned short'
|   | |-TypeVisibilityAttr 0x7fa81d198a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d198f98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1383:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d1991b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1387:92> col:12 operator() 'size_t (unsigned short) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d199078 <col:23, col:38> col:38 used __v 'unsigned short'
|   |   |-CompoundStmt 0x7fa81d1993a8 <col:59, col:92>
|   |   | `-ReturnStmt 0x7fa81d199390 <col:60, col:90>
|   |   |   `-CXXStaticCastExpr 0x7fa81d199360 <col:67, col:90> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81d199348 <col:87> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81d199330 <col:87> 'unsigned short' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81d1992f8 <col:87> 'unsigned short' lvalue ParmVar 0x7fa81d199078 '__v' 'unsigned short'
|   |   |-AlwaysInlineAttr 0x7fa81d199258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d1992a0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d199420 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1390:1, line:1396:1> line:1391:29 struct hash definition
|   | |-public 'unary_function<int, size_t>':'struct std::__1::unary_function<int, unsigned long>'
|   | |-TemplateArgument type 'int'
|   | |-TypeVisibilityAttr 0x7fa81d199558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d199ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1391:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d199d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1395:81> col:12 operator() 'size_t (int) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d199bc8 <col:23, col:27> col:27 used __v 'int'
|   |   |-CompoundStmt 0x7fa81d199ef8 <col:48, col:81>
|   |   | `-ReturnStmt 0x7fa81d199ee0 <col:49, col:79>
|   |   |   `-CXXStaticCastExpr 0x7fa81d199eb0 <col:56, col:79> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81d199e98 <col:76> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81d199e80 <col:76> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81d199e48 <col:76> 'int' lvalue ParmVar 0x7fa81d199bc8 '__v' 'int'
|   |   |-AlwaysInlineAttr 0x7fa81d199da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d199df0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d199f70 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1398:1, line:1404:1> line:1399:29 struct hash definition
|   | |-public 'unary_function<unsigned int, size_t>':'struct std::__1::unary_function<unsigned int, unsigned long>'
|   | |-TemplateArgument type 'unsigned int'
|   | |-TypeVisibilityAttr 0x7fa81d19a0a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d19a638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1399:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d19a858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1403:90> col:12 operator() 'size_t (unsigned int) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d19a718 <col:23, col:36> col:36 used __v 'unsigned int'
|   |   |-CompoundStmt 0x7fa81d19aa48 <col:57, col:90>
|   |   | `-ReturnStmt 0x7fa81d19aa30 <col:58, col:88>
|   |   |   `-CXXStaticCastExpr 0x7fa81d19aa00 <col:65, col:88> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81d19a9e8 <col:85> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81d19a9d0 <col:85> 'unsigned int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81d19a998 <col:85> 'unsigned int' lvalue ParmVar 0x7fa81d19a718 '__v' 'unsigned int'
|   |   |-AlwaysInlineAttr 0x7fa81d19a8f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d19a940 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d19aac0 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1406:1, line:1412:1> line:1407:29 struct hash definition
|   | |-public 'unary_function<long, size_t>':'struct std::__1::unary_function<long, unsigned long>'
|   | |-TemplateArgument type 'long'
|   | |-TypeVisibilityAttr 0x7fa81d19abf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d19b188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1407:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d19b3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1411:82> col:12 operator() 'size_t (long) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d19b268 <col:23, col:28> col:28 used __v 'long'
|   |   |-CompoundStmt 0x7fa81d19b598 <col:49, col:82>
|   |   | `-ReturnStmt 0x7fa81d19b580 <col:50, col:80>
|   |   |   `-CXXStaticCastExpr 0x7fa81d19b550 <col:57, col:80> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81d19b538 <col:77> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x7fa81d19b520 <col:77> 'long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x7fa81d19b4e8 <col:77> 'long' lvalue ParmVar 0x7fa81d19b268 '__v' 'long'
|   |   |-AlwaysInlineAttr 0x7fa81d19b448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d19b490 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d19b610 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1414:1, line:1420:1> line:1415:29 struct hash definition
|   | |-public 'unary_function<unsigned long, size_t>':'struct std::__1::unary_function<unsigned long, unsigned long>'
|   | |-TemplateArgument type 'unsigned long'
|   | |-TypeVisibilityAttr 0x7fa81d19b748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d19bcd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1415:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d19bef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1419:91> col:12 operator() 'size_t (unsigned long) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d19bdb8 <col:23, col:37> col:37 used __v 'unsigned long'
|   |   |-CompoundStmt 0x7fa81d19c0d0 <col:58, col:91>
|   |   | `-ReturnStmt 0x7fa81d19c0b8 <col:59, col:89>
|   |   |   `-CXXStaticCastExpr 0x7fa81d19c088 <col:66, col:89> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   |   |     `-ImplicitCastExpr 0x7fa81d19c070 <col:86> 'unsigned long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x7fa81d19c038 <col:86> 'unsigned long' lvalue ParmVar 0x7fa81d19bdb8 '__v' 'unsigned long'
|   |   |-AlwaysInlineAttr 0x7fa81d19bf98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d19bfe0 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d19c148 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1422:1, line:1426:1> line:1423:29 struct hash definition
|   | |-public '__scalar_hash<long long>':'struct std::__1::__scalar_hash<long long, 1>'
|   | |-TemplateArgument type 'long long'
|   | |-TypeVisibilityAttr 0x7fa81d19c278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d1a0f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1423:1, col:29> col:29 implicit struct hash
|   |-ClassTemplateSpecializationDecl 0x7fa81d1a1050 parent 0x7fa81c066ac0 <line:1428:1, line:1432:1> line:1429:29 struct hash definition
|   | |-public '__scalar_hash<unsigned long long>':'struct std::__1::__scalar_hash<unsigned long long, 1>'
|   | |-TemplateArgument type 'unsigned long long'
|   | |-TypeVisibilityAttr 0x7fa81d1a1188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d1a1e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1429:1, col:29> col:29 implicit struct hash
|   |-ClassTemplateSpecializationDecl 0x7fa81d1a1f38 parent 0x7fa81c066ac0 <line:1436:1, line:1440:1> line:1437:29 struct hash definition
|   | |-public '__scalar_hash<__int128_t>':'struct std::__1::__scalar_hash<__int128, 2>'
|   | |-TemplateArgument type '__int128'
|   | |-TypeVisibilityAttr 0x7fa81d1a2068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d1a2d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1437:1, col:29> col:29 implicit struct hash
|   |-ClassTemplateSpecializationDecl 0x7fa81d1a2e08 parent 0x7fa81c066ac0 <line:1442:1, line:1446:1> line:1443:29 struct hash definition
|   | |-public '__scalar_hash<__uint128_t>':'struct std::__1::__scalar_hash<unsigned __int128, 2>'
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-TypeVisibilityAttr 0x7fa81d1a2f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | `-CXXRecordDecl 0x7fa81d1a3bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1443:1, col:29> col:29 implicit struct hash
|   |-ClassTemplateSpecializationDecl 0x7fa81d1a3ce0 parent 0x7fa81c066ac0 <line:1450:1, line:1462:1> line:1451:29 struct hash definition
|   | |-public '__scalar_hash<float>':'struct std::__1::__scalar_hash<float, 0>'
|   | |-TemplateArgument type 'float'
|   | |-TypeVisibilityAttr 0x7fa81d1a3e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d1a4b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1451:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d1a4d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1461:5> line:1455:12 operator() 'size_t (float) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d1a4c20 <col:23, col:29> col:29 used __v 'float'
|   |   |-CompoundStmt 0x7fa81d1a5230 <line:1456:5, line:1461:5>
|   |   | |-IfStmt 0x7fa81d1a4f48 <line:1458:8, line:1459:19>
|   |   | | |-<<<NULL>>>
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator 0x7fa81d1a4ed0 <line:1458:12, col:19> '_Bool' '=='
|   |   | | | |-ImplicitCastExpr 0x7fa81d1a4ea0 <col:12> 'float' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x7fa81d1a4e58 <col:12> 'float' lvalue ParmVar 0x7fa81d1a4c20 '__v' 'float'
|   |   | | | `-ImplicitCastExpr 0x7fa81d1a4eb8 <col:19> 'float' <IntegralToFloating>
|   |   | | |   `-IntegerLiteral 0x7fa81d1a4e80 <col:19> 'int' 0
|   |   | | |-ReturnStmt 0x7fa81d1a4f30 <line:1459:12, col:19>
|   |   | | | `-ImplicitCastExpr 0x7fa81d1a4f18 <col:19> 'size_t':'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x7fa81d1a4ef8 <col:19> 'int' 0
|   |   | | `-<<<NULL>>>
|   |   | `-ReturnStmt 0x7fa81d1a5218 <line:1460:9, col:52>
|   |   |   `-CXXMemberCallExpr 0x7fa81d1a5138 <col:16, col:52> 'size_t':'unsigned long'
|   |   |     |-MemberExpr 0x7fa81d1a50c0 <col:16, col:47> '<bound member function type>' ->operator() 0x7fa81d1a49c8
|   |   |     | `-ImplicitCastExpr 0x7fa81d1a51e8 <col:38> 'const struct std::__1::__scalar_hash<float, 0> *' <NoOp>
|   |   |     |   `-ImplicitCastExpr 0x7fa81d1a51c8 <col:38> '__scalar_hash<float> *' <UncheckedDerivedToBase (__scalar_hash)>
|   |   |     |     `-CXXThisExpr 0x7fa81d1a50a8 <col:38> 'const struct std::__1::hash<float> *' this
|   |   |     `-ImplicitCastExpr 0x7fa81d1a5200 <col:49> 'float' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x7fa81d1a5110 <col:49> 'float' lvalue ParmVar 0x7fa81d1a4c20 '__v' 'float'
|   |   |-AlwaysInlineAttr 0x7fa81d1a4db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d1a4e00 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d1a52b0 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1464:1, line:1476:1> line:1465:29 struct hash definition
|   | |-public '__scalar_hash<double>':'struct std::__1::__scalar_hash<double, 1>'
|   | |-TemplateArgument type 'double'
|   | |-TypeVisibilityAttr 0x7fa81d1a53e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d1a6090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1465:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d1a6268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1475:5> line:1469:12 operator() 'size_t (double) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d1a6170 <col:23, col:30> col:30 used __v 'double'
|   |   |-CompoundStmt 0x7fa81d1a6780 <line:1470:5, line:1475:5>
|   |   | |-IfStmt 0x7fa81d1a6498 <line:1472:8, line:1473:19>
|   |   | | |-<<<NULL>>>
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator 0x7fa81d1a6420 <line:1472:12, col:19> '_Bool' '=='
|   |   | | | |-ImplicitCastExpr 0x7fa81d1a63f0 <col:12> 'double' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x7fa81d1a63a8 <col:12> 'double' lvalue ParmVar 0x7fa81d1a6170 '__v' 'double'
|   |   | | | `-ImplicitCastExpr 0x7fa81d1a6408 <col:19> 'double' <IntegralToFloating>
|   |   | | |   `-IntegerLiteral 0x7fa81d1a63d0 <col:19> 'int' 0
|   |   | | |-ReturnStmt 0x7fa81d1a6480 <line:1473:12, col:19>
|   |   | | | `-ImplicitCastExpr 0x7fa81d1a6468 <col:19> 'size_t':'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x7fa81d1a6448 <col:19> 'int' 0
|   |   | | `-<<<NULL>>>
|   |   | `-ReturnStmt 0x7fa81d1a6768 <line:1474:9, col:53>
|   |   |   `-CXXMemberCallExpr 0x7fa81d1a6688 <col:16, col:53> 'size_t':'unsigned long'
|   |   |     |-MemberExpr 0x7fa81d1a6610 <col:16, col:48> '<bound member function type>' ->operator() 0x7fa81d1a5f18
|   |   |     | `-ImplicitCastExpr 0x7fa81d1a6738 <col:39> 'const struct std::__1::__scalar_hash<double, 1> *' <NoOp>
|   |   |     |   `-ImplicitCastExpr 0x7fa81d1a6718 <col:39> '__scalar_hash<double> *' <UncheckedDerivedToBase (__scalar_hash)>
|   |   |     |     `-CXXThisExpr 0x7fa81d1a65f8 <col:39> 'const struct std::__1::hash<double> *' this
|   |   |     `-ImplicitCastExpr 0x7fa81d1a6750 <col:50> 'double' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x7fa81d1a6660 <col:50> 'double' lvalue ParmVar 0x7fa81d1a6170 '__v' 'double'
|   |   |-AlwaysInlineAttr 0x7fa81d1a6308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d1a6350 <col:51, col:74> Hidden
|   |-ClassTemplateSpecializationDecl 0x7fa81d1a6800 parent 0x7fa81c066ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1478:1, line:1526:1> line:1479:29 struct hash definition
|   | |-public '__scalar_hash<long double>':'struct std::__1::__scalar_hash<long double, 2>'
|   | |-TemplateArgument type 'long double'
|   | |-TypeVisibilityAttr 0x7fa81d1a6938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d1a75e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1479:1, col:29> col:29 implicit struct hash
|   | `-CXXMethodDecl 0x7fa81d1a77b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1525:5> line:1483:12 operator() 'size_t (long double) const noexcept'
|   |   |-ParmVarDecl 0x7fa81d1a76c0 <col:23, col:35> col:35 used __v 'long double'
|   |   |-CompoundStmt 0x7fa81d1aa178 <line:1484:5, line:1525:5>
|   |   | |-IfStmt 0x7fa81d1a79e8 <line:1486:9, line:1487:20>
|   |   | | |-<<<NULL>>>
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator 0x7fa81d1a7970 <line:1486:13, col:20> '_Bool' '=='
|   |   | | | |-ImplicitCastExpr 0x7fa81d1a7940 <col:13> 'long double' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x7fa81d1a78f8 <col:13> 'long double' lvalue ParmVar 0x7fa81d1a76c0 '__v' 'long double'
|   |   | | | `-ImplicitCastExpr 0x7fa81d1a7958 <col:20> 'long double' <IntegralToFloating>
|   |   | | |   `-IntegerLiteral 0x7fa81d1a7920 <col:20> 'int' 0
|   |   | | |-ReturnStmt 0x7fa81d1a79d0 <line:1487:13, col:20>
|   |   | | | `-ImplicitCastExpr 0x7fa81d1a79b8 <col:20> 'size_t':'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x7fa81d1a7998 <col:20> 'int' 0
|   |   | | `-<<<NULL>>>
|   |   | |-DeclStmt 0x7fa81d1a9b78 <line:1509:9, line:1517:14>
|   |   | | |-CXXRecordDecl 0x7fa81d1a7a20 <line:1509:9, line:1517:9> line:1509:9 union definition
|   |   | | | |-FieldDecl 0x7fa81d1a7b60 <line:1511:13, col:25> col:25 referenced __t 'long double'
|   |   | | | |-CXXRecordDecl 0x7fa81d1a7ba8 <line:1512:13, line:1516:13> line:1512:13 struct definition
|   |   | | | | |-FieldDecl 0x7fa81d1a7cd8 <line:1514:17, col:24> col:24 referenced __a 'size_t':'unsigned long'
|   |   | | | | |-FieldDecl 0x7fa81d1a7d30 <line:1515:17, col:24> col:24 referenced __b 'size_t':'unsigned long'
|   |   | | | | |-CXXConstructorDecl 0x7fa81d1a8048 <line:1512:13> col:13 implicit  'void (void) noexcept' inline default trivial
|   |   | | | | |-CXXDestructorDecl 0x7fa81d1a8128 <col:13> col:13 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fa81d1a8128
|   |   | | | | |-CXXConstructorDecl 0x7fa81d1a9600 <col:13> col:13 implicit constexpr  'void (const struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13) &)' inline default trivial noexcept-unevaluated 0x7fa81d1a9600
|   |   | | | | | `-ParmVarDecl 0x7fa81d1a9730 <col:13> col:13 'const struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13) &'
|   |   | | | | `-CXXConstructorDecl 0x7fa81d1a97c8 <col:13> col:13 implicit constexpr  'void (struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13) &&)' inline default trivial noexcept-unevaluated 0x7fa81d1a97c8
|   |   | | | |   `-ParmVarDecl 0x7fa81d1a98f0 <col:13> col:13 'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13) &&'
|   |   | | | |-FieldDecl 0x7fa81d1a7df0 <col:13, line:1516:15> col:15 referenced __s 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)'
|   |   | | | |-CXXConstructorDecl 0x7fa81d1a7f40 <line:1509:9> col:9 implicit used  'void (void) noexcept' inline default trivial
|   |   | | | | `-CompoundStmt 0x7fa81d1a9b18 <col:9>
|   |   | | | |-CXXConstructorDecl 0x7fa81d1a8238 <col:9> col:9 implicit constexpr  'void (const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9) &)' inline default trivial noexcept-unevaluated 0x7fa81d1a8238
|   |   | | | | `-ParmVarDecl 0x7fa81d1a8360 <col:9> col:9 'const union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9) &'
|   |   | | | `-CXXConstructorDecl 0x7fa81d1a9988 <col:9> col:9 implicit constexpr  'void (union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9) &&)' inline default trivial noexcept-unevaluated 0x7fa81d1a9988
|   |   | | |   `-ParmVarDecl 0x7fa81d1a9ab0 <col:9> col:9 'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9) &&'
|   |   | | `-VarDecl 0x7fa81d1a7ec0 <col:9, line:1517:11> col:11 used __u 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' callinit
|   |   | |   `-CXXConstructExpr 0x7fa81d1a9b30 <col:11> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' 'void (void) noexcept'
|   |   | |-BinaryOperator 0x7fa81d1a9c60 <line:1518:9, col:23> 'size_t':'unsigned long' lvalue '='
|   |   | | |-MemberExpr 0x7fa81d1a9bf0 <col:9, col:17> 'size_t':'unsigned long' lvalue .__a 0x7fa81d1a7cd8
|   |   | | | `-MemberExpr 0x7fa81d1a9bb8 <col:9, col:13> 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)' lvalue .__s 0x7fa81d1a7df0
|   |   | | |   `-DeclRefExpr 0x7fa81d1a9b90 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fa81d1a7ec0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   | | `-ImplicitCastExpr 0x7fa81d1a9c48 <col:23> 'size_t':'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x7fa81d1a9c28 <col:23> 'int' 0
|   |   | |-BinaryOperator 0x7fa81d1a9ee8 <line:1519:9, col:23> 'size_t':'unsigned long' lvalue '='
|   |   | | |-MemberExpr 0x7fa81d1a9e78 <col:9, col:17> 'size_t':'unsigned long' lvalue .__b 0x7fa81d1a7d30
|   |   | | | `-MemberExpr 0x7fa81d1a9e40 <col:9, col:13> 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)' lvalue .__s 0x7fa81d1a7df0
|   |   | | |   `-DeclRefExpr 0x7fa81d1a9e18 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fa81d1a7ec0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   | | `-ImplicitCastExpr 0x7fa81d1a9ed0 <col:23> 'size_t':'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x7fa81d1a9eb0 <col:23> 'int' 0
|   |   | |-BinaryOperator 0x7fa81d1a9fb0 <line:1520:9, col:19> 'long double' lvalue '='
|   |   | | |-MemberExpr 0x7fa81d1a9f38 <col:9, col:13> 'long double' lvalue .__t 0x7fa81d1a7b60
|   |   | | | `-DeclRefExpr 0x7fa81d1a9f10 <col:9> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fa81d1a7ec0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   | | `-ImplicitCastExpr 0x7fa81d1a9f98 <col:19> 'long double' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x7fa81d1a9f70 <col:19> 'long double' lvalue ParmVar 0x7fa81d1a76c0 '__v' 'long double'
|   |   | `-ReturnStmt 0x7fa81d1aa160 <line:1521:9, col:38>
|   |   |   `-BinaryOperator 0x7fa81d1aa138 <col:16, col:38> 'unsigned long' '^'
|   |   |     |-ImplicitCastExpr 0x7fa81d1aa108 <col:16, col:24> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-MemberExpr 0x7fa81d1aa038 <col:16, col:24> 'size_t':'unsigned long' lvalue .__a 0x7fa81d1a7cd8
|   |   |     |   `-MemberExpr 0x7fa81d1aa000 <col:16, col:20> 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)' lvalue .__s 0x7fa81d1a7df0
|   |   |     |     `-DeclRefExpr 0x7fa81d1a9fd8 <col:16> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fa81d1a7ec0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   |     `-ImplicitCastExpr 0x7fa81d1aa120 <col:30, col:38> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x7fa81d1aa0d0 <col:30, col:38> 'size_t':'unsigned long' lvalue .__b 0x7fa81d1a7d30
|   |   |         `-MemberExpr 0x7fa81d1aa098 <col:30, col:34> 'struct (anonymous struct at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)':'struct (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1512:13)' lvalue .__s 0x7fa81d1a7df0
|   |   |           `-DeclRefExpr 0x7fa81d1aa070 <col:30> 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)' lvalue Var 0x7fa81d1a7ec0 '__u' 'union (anonymous union at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)':'union (anonymous at /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1509:9)'
|   |   |-AlwaysInlineAttr 0x7fa81d1a7858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |   `-VisibilityAttr 0x7fa81d1a78a0 <col:51, col:74> Hidden
|   |-ClassTemplateDecl 0x7fa81d1aa488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1530:1, line:1540:1> line:1531:29 __enum_hash
|   | |-TemplateTypeParmDecl 0x7fa81d1aa1c0 <line:1530:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x7fa81d1aa348 <col:22, col:43> col:27 '_Bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-DependentScopeDeclRefExpr 0x7fa81d1aa2f8 <col:29, col:43> '<dependent type>' lvalue
|   | `-CXXRecordDecl 0x7fa81d1aa3f0 <line:1531:1, line:1540:1> line:1531:29 struct __enum_hash definition
|   |   |-public 'unary_function<_Tp, size_t>'
|   |   |-TypeVisibilityAttr 0x7fa81d1aa750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   |   |-CXXRecordDecl 0x7fa81d1aa898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1531:1, col:29> col:29 implicit struct __enum_hash
|   |   `-CXXMethodDecl 0x7fa81d1aaa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1539:5> line:1535:12 operator() 'size_t (_Tp) const noexcept'
|   |     |-ParmVarDecl 0x7fa81d1aa970 <col:23, col:27> col:27 referenced __v '_Tp'
|   |     |-CompoundStmt 0x7fa81d1aaf88 <line:1536:5, line:1539:5>
|   |     | |-DeclStmt 0x7fa81d1aad28 <line:1537:9, col:57>
|   |     | | `-TypedefDecl 0x7fa81d1aacd0 <col:9, col:53> col:53 referenced type 'typename underlying_type<_Tp>::type'
|   |     | |   `-DependentNameType 0x7fa81d1aac60 'typename underlying_type<_Tp>::type' dependent
|   |     | `-ReturnStmt 0x7fa81d1aaf70 <line:1538:9, col:51>
|   |     |   `-CallExpr 0x7fa81d1aaf40 <col:16, col:51> '<dependent type>'
|   |     |     |-CXXUnresolvedConstructExpr 0x7fa81d1aaea8 <col:16, col:27> 'hash<type>'
|   |     |     | `-InitListExpr 0x7fa81d1aae68 <col:26, col:27> 'void'
|   |     |     `-CXXStaticCastExpr 0x7fa81d1aaf10 <col:29, col:50> 'type':'typename underlying_type<_Tp>::type' static_cast<type> <Dependent>
|   |     |       `-DeclRefExpr 0x7fa81d1aaed8 <col:47> '_Tp' lvalue ParmVar 0x7fa81d1aa970 '__v' '_Tp'
|   |     |-AlwaysInlineAttr 0x7fa81d1aab08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|   |     `-VisibilityAttr 0x7fa81d1aab50 <col:51, col:74> Hidden
|   |-ClassTemplatePartialSpecializationDecl 0x7fa81d1ab1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1541:1, line:1546:1> line:1542:29 struct __enum_hash definition
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x7fa81d1aafb0 <line:1541:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-TypeVisibilityAttr 0x7fa81d1ab330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | |-CXXRecordDecl 0x7fa81d1ab4a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1542:1, col:29> col:29 implicit referenced struct __enum_hash
|   | |-CXXConstructorDecl 0x7fa81d1ab5a8 <line:1543:5, col:26> col:5 __enum_hash<type-parameter-0-0, false> 'void (void)' delete
|   | |-CXXConstructorDecl 0x7fa81d1ab750 <line:1544:5, col:44> col:5 __enum_hash<type-parameter-0-0, false> 'void (const __enum_hash<type-parameter-0-0, false> &)' delete
|   | | `-ParmVarDecl 0x7fa81d1ab688 <col:17, col:34> col:35 'const __enum_hash<type-parameter-0-0, false> &'
|   | `-CXXMethodDecl 0x7fa81d1ab900 <line:1545:5, col:55> col:18 operator= '__enum_hash<type-parameter-0-0, false> &(const __enum_hash<type-parameter-0-0, false> &)' delete
|   |   `-ParmVarDecl 0x7fa81d1ab810 <col:28, col:45> col:46 'const __enum_hash<type-parameter-0-0, false> &'
|   |-ClassTemplateDecl 0x7fa81d1abb08 prev 0x7fa81c0a6948 <line:1548:1, line:1551:1> line:1549:29 hash
|   | |-TemplateTypeParmDecl 0x7fa81d1ab9c0 <line:1548:11, col:17> col:17 referenced class depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x7fa81d1aba70 prev 0x7fa81c0a68b0 <line:1549:1, line:1551:1> line:1549:29 struct hash definition
|   | | |-public '__enum_hash<_Tp>'
|   | | |-TypeVisibilityAttr 0x7fa81d1abbc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
|   | | `-CXXRecordDecl 0x7fa81d1abe48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/utility:1549:1, col:29> col:29 implicit struct hash
|   | |-ClassTemplateSpecialization 0x7fa81d84a310 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d84ae38 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e800d70 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e8018c0 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e802408 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e802f28 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e803a48 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81e804570 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1988d0 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d199420 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d199f70 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d19aac0 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d19b610 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d19c148 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a1050 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a1f38 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a2e08 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a3ce0 'hash'
|   | |-ClassTemplateSpecialization 0x7fa81d1a52b0 'hash'
|   | `-ClassTemplateSpecialization 0x7fa81d1a6800 'hash'
|   |-TypeAliasTemplateDecl 0x7fa81d1ac7b0 <line:1568:1, line:1573:1> line:1569:1 __check_hash_requirements
|   | |-TemplateTypeParmDecl 0x7fa81d1abf00 <line:1568:11, col:17> col:17 referenced class depth 0 index 0 _Key
|   | |-TemplateTypeParmDecl 0x7fa81d1abf68 <col:23, col:29> col:29 referenced class depth 0 index 1 _Hash
|   | `-TypeAliasDecl 0x7fa81d1ac750 <line:1569:1, line:1573:1> line:1569:7 __check_hash_requirements 'integral_constant<_Bool, is_copy_constructible<_Hash>::value && is_move_constructible<_Hash>::value && __invokable_r<size_t, _Hash, const _Key &>::value>'
|   |   `-TemplateSpecializationType 0x7fa81d1ac660 'integral_constant<_Bool, is_copy_constructible<_Hash>::value && is_move_constructible<_Hash>::value && __invokable_r<size_t, _Hash, const _Key &>::value>' dependent integral_constant
|   |     |-TemplateArgument type '_Bool'
|   |     `-TemplateArgument expr
|   |       `-BinaryOperator 0x7fa81d1ac568 <line:1570:5, line:1572:48> '<dependent type>' '&&'
|   |         |-BinaryOperator 0x7fa81d1ac2d8 <line:1570:5, line:1571:35> '<dependent type>' '&&'
|   |         | |-DependentScopeDeclRefExpr 0x7fa81d1ac140 <line:1570:5, col:35> '<dependent type>' lvalue
|   |         | `-DependentScopeDeclRefExpr 0x7fa81d1ac298 <line:1571:5, col:35> '<dependent type>' lvalue
|   |         `-DependentScopeDeclRefExpr 0x7fa81d1ac528 <line:1572:5, col:48> '<dependent type>' lvalue
|   |-TypeAliasTemplateDecl 0x7fa81d1ad4c0 <line:1575:1, line:1579:1> line:1576:1 __has_enabled_hash
|   | |-TemplateTypeParmDecl 0x7fa81d1ac800 <line:1575:11, col:17> col:17 referenced class depth 0 index 0 _Key
|   | |-TemplateTypeParmDecl 0x7fa81d1ac9a8 <col:23, col:51> col:29 referenced class depth 0 index 1 _Hash
|   | | `-TemplateArgument type 'std::hash<_Key>':'hash<_Key>'
|   | `-TypeAliasDecl 0x7fa81d1ad460 <line:1576:1, line:1579:1> line:1576:7 __has_enabled_hash 'integral_constant<_Bool, __check_hash_requirements<_Key, _Hash>::value && is_default_constructible<_Hash>::value>'
|   |   `-TemplateSpecializationType 0x7fa81d1ad370 'integral_constant<_Bool, __check_hash_requirements<_Key, _Hash>::value && is_default_constructible<_Hash>::value>' dependent integral_constant
|   |     |-TemplateArgument type '_Bool'
|   |     `-TemplateArgument expr
|   |       `-BinaryOperator 0x7fa81d1ad298 <line:1577:5, line:1578:38> '<dependent type>' '&&'
|   |         |-DependentScopeDeclRefExpr 0x7fa81d1ad0f8 <line:1577:5, col:45> '<dependent type>' lvalue
|   |         `-DependentScopeDeclRefExpr 0x7fa81d1ad258 <line:1578:5, col:38> '<dependent type>' lvalue
|   `-TypeAliasTemplateDecl 0x7fa81d1ad690 <line:1590:1, line:1591:30> col:1 __enable_hash_helper
|     |-TemplateTypeParmDecl 0x7fa81d1ad510 <line:1590:11, col:17> col:17 referenced class depth 0 index 0 _Type
|     |-TemplateTypeParmDecl 0x7fa81d1ad578 <col:24> col:24 class depth 0 index 1 ...
|     `-TypeAliasDecl 0x7fa81d1ad630 <line:1591:1, col:30> col:7 __enable_hash_helper '_Type'
|       `-TemplateTypeParmType 0x7fa81d1ad550 '_Type' dependent depth 0 index 0
|         `-TemplateTypeParm 0x7fa81d1ad510 '_Type'
|-CXXRecordDecl 0x7fa81d1ad6e0 <object_model/5_ctor_dtor_semantics/06_object_move_semantics.cpp:3:1, line:21:1> line:3:8 referenced struct A definition
| |-CXXRecordDecl 0x7fa81d1ad808 <col:1, col:8> col:8 implicit referenced struct A
| |-CXXConstructorDecl 0x7fa81d1ad908 <line:4:5, col:10> col:5 used A 'void (void)'
| | `-CompoundStmt 0x7fa81d1ae1e8 <col:9, col:10>
| |-CXXConstructorDecl 0x7fa81d1adab0 <line:6:5, col:22> col:5 used A 'void (const struct A &)'
| | |-ParmVarDecl 0x7fa81d1ad9e8 <col:7, col:16> col:16 rhs 'const struct A &'
| | `-CompoundStmt 0x7fa81d1ae200 <col:21, col:22>
| |-CXXConstructorDecl 0x7fa81d1adca8 <line:8:5, col:24> col:5 used A 'void (struct A &&) noexcept'
| | |-ParmVarDecl 0x7fa81d1adb98 <col:7, col:11> col:11 o 'struct A &&'
| | `-CompoundStmt 0x7fa81d1ae218 <col:23, col:24>
| |-CXXMethodDecl 0x7fa81d1ade60 <line:10:5, line:13:5> line:10:8 operator= 'struct A &(const struct A &)'
| | |-ParmVarDecl 0x7fa81d1add68 <col:18, col:27> col:27 rhs 'const struct A &'
| | `-CompoundStmt 0x7fa81d1ae280 <line:11:5, line:13:5>
| |   `-ReturnStmt 0x7fa81d1ae268 <line:12:9, col:17>
| |     `-UnaryOperator 0x7fa81d1ae248 <col:16, col:17> 'struct A' lvalue prefix '*'
| |       `-CXXThisExpr 0x7fa81d1ae230 <col:17> 'struct A *' this
| |-CXXMethodDecl 0x7fa81d1ae018 <line:15:5, line:18:5> line:15:8 used operator= 'struct A &(struct A &&) noexcept'
| | |-ParmVarDecl 0x7fa81d1adf10 <col:18, col:22> col:22 rhs 'struct A &&'
| | `-CompoundStmt 0x7fa81d1ae2f0 <line:16:5, line:18:5>
| |   `-ReturnStmt 0x7fa81d1ae2d8 <line:17:9, col:17>
| |     `-UnaryOperator 0x7fa81d1ae2b8 <col:16, col:17> 'struct A' lvalue prefix '*'
| |       `-CXXThisExpr 0x7fa81d1ae2a0 <col:17> 'struct A *' this
| `-CXXDestructorDecl 0x7fa81d1ae108 <line:20:5, col:18> col:5 referenced ~A 'void (void) noexcept' default trivial
|-FunctionDecl 0x7fa81d1ae3e0 <line:24:1, line:27:1> line:24:3 used func1 'struct A (struct A)'
| |-ParmVarDecl 0x7fa81d1ae320 <col:9, col:11> col:11 used a 'struct A'
| `-CompoundStmt 0x7fa81d1ae510 <line:25:1, line:27:1>
|   `-ReturnStmt 0x7fa81d1ae4f8 <line:26:5, col:12>
|     `-CXXConstructExpr 0x7fa81d1ae4c0 <col:12> 'struct A' 'void (struct A &&) noexcept'
|       `-ImplicitCastExpr 0x7fa81d1ae4a8 <col:12> 'struct A' xvalue <NoOp>
|         `-DeclRefExpr 0x7fa81d1ae480 <col:12> 'struct A' lvalue ParmVar 0x7fa81d1ae320 'a' 'struct A'
|-FunctionDecl 0x7fa81d1ae600 <line:30:1, line:33:1> line:30:3 used func2 'struct A (struct A &&)'
| |-ParmVarDecl 0x7fa81d1ae540 <col:9, col:13> col:13 used a 'struct A &&'
| `-CompoundStmt 0x7fa81d1af300 <line:31:1, line:33:1>
|   `-ReturnStmt 0x7fa81d1af2e8 <line:32:5, col:23>
|     `-CXXConstructExpr 0x7fa81d1af2b0 <col:12, col:23> 'struct A' 'void (struct A &&) noexcept'
|       `-CallExpr 0x7fa81d1af280 <col:12, col:23> 'typename remove_reference<struct A &>::type':'struct A' xvalue
|         |-ImplicitCastExpr 0x7fa81d1af268 <col:12, col:17> 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x7fa81d1aef70 <col:12, col:17> 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fa81d1aee30 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fa81c10a408 'move')
|         `-DeclRefExpr 0x7fa81d1ae718 <col:22> 'struct A' lvalue ParmVar 0x7fa81d1ae540 'a' 'struct A &&'
|-FunctionDecl 0x7fa81d1af3b8 <line:36:1, line:39:1> line:36:3 used func3 'struct A (struct A &&)'
| |-ParmVarDecl 0x7fa81d1af330 <col:9, col:13> col:13 used a 'struct A &&'
| `-CompoundStmt 0x7fa81d1af4e8 <line:37:1, line:39:1>
|   `-ReturnStmt 0x7fa81d1af4d0 <line:38:5, col:12>
|     `-CXXConstructExpr 0x7fa81d1af498 <col:12> 'struct A' 'void (const struct A &)'
|       `-ImplicitCastExpr 0x7fa81d1af480 <col:12> 'const struct A' lvalue <NoOp>
|         `-DeclRefExpr 0x7fa81d1af458 <col:12> 'struct A' lvalue ParmVar 0x7fa81d1af330 'a' 'struct A &&'
`-FunctionDecl 0x7fa81d1af568 <line:41:1, line:78:1> line:41:5 main 'int (void)'
  `-CompoundStmt 0x7fa81d1b1028 <line:42:1, line:78:1>
    |-DeclStmt 0x7fa81d1af6e0 <line:43:5, col:11>
    | `-VarDecl 0x7fa81d1af610 <col:5, col:10> col:7 used a1 'struct A' listinit
    |   `-CXXConstructExpr 0x7fa81d1af6b0 <col:7, col:10> 'struct A' 'void (void)'
    |-DeclStmt 0x7fa81d1af998 <line:45:5, col:28>
    | `-VarDecl 0x7fa81d1af708 <col:5, col:27> col:10 a2 'struct A':'struct A' cinit
    |   `-CXXConstructExpr 0x7fa81d1af960 <col:15, col:27> 'struct A':'struct A' 'void (struct A &&) noexcept'
    |     `-CallExpr 0x7fa81d1af898 <col:15, col:27> 'typename remove_reference<struct A &>::type':'struct A' xvalue
    |       |-ImplicitCastExpr 0x7fa81d1af880 <col:15, col:20> 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x7fa81d1af840 <col:15, col:20> 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fa81d1aee30 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fa81c10a408 'move')
    |       `-DeclRefExpr 0x7fa81d1af7e0 <col:25> 'struct A' lvalue Var 0x7fa81d1af610 'a1' 'struct A'
    |-DeclStmt 0x7fa81d1afa90 <line:47:5, col:11>
    | `-VarDecl 0x7fa81d1af9c0 <col:5, col:10> col:7 used a3 'struct A' listinit
    |   `-CXXConstructExpr 0x7fa81d1afa60 <col:7, col:10> 'struct A' 'void (void)'
    |-CXXOperatorCallExpr 0x7fa81d1afcd0 <line:49:5, col:22> 'struct A' lvalue
    | |-ImplicitCastExpr 0x7fa81d1afcb8 <col:8> 'struct A &(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x7fa81d1afc30 <col:8> 'struct A &(struct A &&) noexcept' lvalue CXXMethod 0x7fa81d1ae018 'operator=' 'struct A &(struct A &&) noexcept'
    | |-DeclRefExpr 0x7fa81d1afaa8 <col:5> 'struct A' lvalue Var 0x7fa81d1af9c0 'a3' 'struct A'
    | `-CallExpr 0x7fa81d1afc00 <col:10, col:22> 'typename remove_reference<struct A &>::type':'struct A' xvalue
    |   |-ImplicitCastExpr 0x7fa81d1afbe8 <col:10, col:15> 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x7fa81d1afba8 <col:10, col:15> 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fa81d1aee30 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fa81c10a408 'move')
    |   `-DeclRefExpr 0x7fa81d1afb48 <col:20> 'struct A' lvalue Var 0x7fa81d1af610 'a1' 'struct A'
    |-DeclStmt 0x7fa81d1affc0 <line:53:5, col:24>
    | `-VarDecl 0x7fa81d1afd28 <col:5, col:23> col:10 a4 'struct A':'struct A' cinit
    |   `-ExprWithCleanups 0x7fa81d1affa8 <col:15, col:23> 'struct A':'struct A'
    |     `-CXXConstructExpr 0x7fa81d1aff70 <col:15, col:23> 'struct A':'struct A' 'void (struct A &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0x7fa81d1aff58 <col:15, col:23> 'struct A' xvalue
    |         `-CallExpr 0x7fa81d1afe70 <col:15, col:23> 'struct A'
    |           |-ImplicitCastExpr 0x7fa81d1afe58 <col:15> 'struct A (*)(struct A)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x7fa81d1afe08 <col:15> 'struct A (struct A)' lvalue Function 0x7fa81d1ae3e0 'func1' 'struct A (struct A)'
    |           `-CXXConstructExpr 0x7fa81d1afeb8 <col:21> 'struct A' 'void (const struct A &)'
    |             `-ImplicitCastExpr 0x7fa81d1afea0 <col:21> 'const struct A' lvalue <NoOp>
    |               `-DeclRefExpr 0x7fa81d1afde0 <col:21> 'struct A' lvalue Var 0x7fa81d1af610 'a1' 'struct A'
    |-DeclStmt 0x7fa81d1b0250 <line:57:5, col:24>
    | `-VarDecl 0x7fa81d1affe8 <col:5, col:23> col:10 a5 'struct A':'struct A' cinit
    |   `-ExprWithCleanups 0x7fa81d1b0238 <col:15, col:23> 'struct A':'struct A'
    |     `-CXXConstructExpr 0x7fa81d1b0200 <col:15, col:23> 'struct A':'struct A' 'void (struct A &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0x7fa81d1b01e8 <col:15, col:23> 'struct A' xvalue
    |         `-CallExpr 0x7fa81d1b0120 <col:15, col:23> 'struct A'
    |           |-ImplicitCastExpr 0x7fa81d1b0108 <col:15> 'struct A (*)(struct A)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x7fa81d1b00e0 <col:15> 'struct A (struct A)' lvalue Function 0x7fa81d1ae3e0 'func1' 'struct A (struct A)'
    |           `-CXXConstructExpr 0x7fa81d1b0150 <col:21, col:22> 'struct A' 'void (void)'
    |-DeclStmt 0x7fa81d1b0600 <line:61:5, col:35>
    | `-VarDecl 0x7fa81d1b0278 <col:5, col:34> col:10 a6 'struct A':'struct A' cinit
    |   `-ExprWithCleanups 0x7fa81d1b05e8 <col:15, col:34> 'struct A':'struct A'
    |     `-CXXConstructExpr 0x7fa81d1b05b0 <col:15, col:34> 'struct A':'struct A' 'void (struct A &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0x7fa81d1b0598 <col:15, col:34> 'struct A' xvalue
    |         `-CallExpr 0x7fa81d1b0500 <col:15, col:34> 'struct A'
    |           |-ImplicitCastExpr 0x7fa81d1b04e8 <col:15> 'struct A (*)(struct A &&)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x7fa81d1b0490 <col:15> 'struct A (struct A &&)' lvalue Function 0x7fa81d1ae600 'func2' 'struct A (struct A &&)'
    |           `-CallExpr 0x7fa81d1b0460 <col:21, col:33> 'typename remove_reference<struct A &>::type':'struct A' xvalue
    |             |-ImplicitCastExpr 0x7fa81d1b0448 <col:21, col:26> 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x7fa81d1b0408 <col:21, col:26> 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fa81d1aee30 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fa81c10a408 'move')
    |             `-DeclRefExpr 0x7fa81d1b03a8 <col:31> 'struct A' lvalue Var 0x7fa81d1af610 'a1' 'struct A'
    |-DeclStmt 0x7fa81d1b06f8 <line:63:5, col:11>
    | `-VarDecl 0x7fa81d1b0628 <col:5, col:10> col:7 used a7 'struct A' listinit
    |   `-CXXConstructExpr 0x7fa81d1b06c8 <col:7, col:10> 'struct A' 'void (void)'
    |-ExprWithCleanups 0x7fa81d1b0928 <line:66:5, col:18> 'struct A' lvalue
    | `-CXXOperatorCallExpr 0x7fa81d1b08e0 <col:5, col:18> 'struct A' lvalue
    |   |-ImplicitCastExpr 0x7fa81d1b08c8 <col:8> 'struct A &(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x7fa81d1b08a0 <col:8> 'struct A &(struct A &&) noexcept' lvalue CXXMethod 0x7fa81d1ae018 'operator=' 'struct A &(struct A &&) noexcept'
    |   |-DeclRefExpr 0x7fa81d1b0710 <col:5> 'struct A' lvalue Var 0x7fa81d1b0628 'a7' 'struct A'
    |   `-MaterializeTemporaryExpr 0x7fa81d1b0888 <col:10, col:18> 'struct A' xvalue
    |     `-CallExpr 0x7fa81d1b0810 <col:10, col:18> 'struct A'
    |       |-ImplicitCastExpr 0x7fa81d1b07f8 <col:10> 'struct A (*)(struct A &&)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x7fa81d1b07d0 <col:10> 'struct A (struct A &&)' lvalue Function 0x7fa81d1ae600 'func2' 'struct A (struct A &&)'
    |       `-MaterializeTemporaryExpr 0x7fa81d1b0870 <col:16, col:17> 'struct A' xvalue
    |         `-CXXConstructExpr 0x7fa81d1b0840 <col:16, col:17> 'struct A' 'void (void)'
    |-DeclStmt 0x7fa81d1b0cb0 <line:70:5, col:35>
    | `-VarDecl 0x7fa81d1b0950 <col:5, col:34> col:10 a8 'struct A':'struct A' cinit
    |   `-ExprWithCleanups 0x7fa81d1b0c98 <col:15, col:34> 'struct A':'struct A'
    |     `-CXXConstructExpr 0x7fa81d1b0c60 <col:15, col:34> 'struct A':'struct A' 'void (struct A &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0x7fa81d1b0c48 <col:15, col:34> 'struct A' xvalue
    |         `-CallExpr 0x7fa81d1b0ba8 <col:15, col:34> 'struct A'
    |           |-ImplicitCastExpr 0x7fa81d1b0b90 <col:15> 'struct A (*)(struct A &&)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x7fa81d1b0b68 <col:15> 'struct A (struct A &&)' lvalue Function 0x7fa81d1af3b8 'func3' 'struct A (struct A &&)'
    |           `-CallExpr 0x7fa81d1b0b38 <col:21, col:33> 'typename remove_reference<struct A &>::type':'struct A' xvalue
    |             |-ImplicitCastExpr 0x7fa81d1b0b20 <col:21, col:26> 'typename remove_reference<struct A &>::type &&(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x7fa81d1b0ae0 <col:21, col:26> 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' lvalue Function 0x7fa81d1aee30 'move' 'typename remove_reference<struct A &>::type &&(struct A &&) noexcept' (FunctionTemplate 0x7fa81c10a408 'move')
    |             `-DeclRefExpr 0x7fa81d1b0a80 <col:31> 'struct A' lvalue Var 0x7fa81d1af610 'a1' 'struct A'
    |-DeclStmt 0x7fa81d1b0da8 <line:72:5, col:11>
    | `-VarDecl 0x7fa81d1b0cd8 <col:5, col:10> col:7 used a9 'struct A' listinit
    |   `-CXXConstructExpr 0x7fa81d1b0d78 <col:7, col:10> 'struct A' 'void (void)'
    |-ExprWithCleanups 0x7fa81d1b0fd8 <line:75:5, col:18> 'struct A' lvalue
    | `-CXXOperatorCallExpr 0x7fa81d1b0f90 <col:5, col:18> 'struct A' lvalue
    |   |-ImplicitCastExpr 0x7fa81d1b0f78 <col:8> 'struct A &(*)(struct A &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x7fa81d1b0f50 <col:8> 'struct A &(struct A &&) noexcept' lvalue CXXMethod 0x7fa81d1ae018 'operator=' 'struct A &(struct A &&) noexcept'
    |   |-DeclRefExpr 0x7fa81d1b0dc0 <col:5> 'struct A' lvalue Var 0x7fa81d1b0cd8 'a9' 'struct A'
    |   `-MaterializeTemporaryExpr 0x7fa81d1b0f38 <col:10, col:18> 'struct A' xvalue
    |     `-CallExpr 0x7fa81d1b0ec0 <col:10, col:18> 'struct A'
    |       |-ImplicitCastExpr 0x7fa81d1b0ea8 <col:10> 'struct A (*)(struct A &&)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x7fa81d1b0e80 <col:10> 'struct A (struct A &&)' lvalue Function 0x7fa81d1af3b8 'func3' 'struct A (struct A &&)'
    |       `-MaterializeTemporaryExpr 0x7fa81d1b0f20 <col:16, col:17> 'struct A' xvalue
    |         `-CXXConstructExpr 0x7fa81d1b0ef0 <col:16, col:17> 'struct A' 'void (void)'
    `-ReturnStmt 0x7fa81d1b1010 <line:77:5, col:12>
      `-IntegerLiteral 0x7fa81d1b0ff0 <col:12> 'int' 0
