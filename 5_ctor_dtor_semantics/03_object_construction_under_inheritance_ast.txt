TranslationUnitDecl 0x7f93af0324d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f93af032a60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f93af032740 '__int128'
|-TypedefDecl 0x7f93af032ad0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f93af032760 'unsigned __int128'
|-TypedefDecl 0x7f93af032e18 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f93af032bc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f93af032b28 '__NSConstantString_tag'
|-TypedefDecl 0x7f93af032eb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f93af032e70 'char *'
|   `-BuiltinType 0x7f93af032560 'char'
|-TypedefDecl 0x7f93af065600 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f93af033190 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f93af032fa0 'struct __va_list_tag'
|     `-CXXRecord 0x7f93af032f08 '__va_list_tag'
|-CXXRecordDecl 0x7f93af065658 </Users/tskull/Documents/Programming/Cpp/object_model_refined/5_ctor_dtor_semantics/03_object_construction_under_inheritance.cpp:1:1, line:5:1> line:1:8 referenced struct B1 definition
| |-CXXRecordDecl 0x7f93af065778 <col:1, col:8> col:8 implicit referenced struct B1
| |-CXXConstructorDecl 0x7f93af0658b0 <line:2:5, col:11> col:5 used B1 'void (void)'
| | `-CompoundStmt 0x7f93af065c68 <col:10, col:11>
| |-CXXDestructorDecl 0x7f93af0659a8 <line:4:5, col:20> col:13 used ~B1 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f93af065cb0 <col:19, col:20>
| |-CXXMethodDecl 0x7f93af065ae8 <line:1:8, <invalid sloc>> col:8 implicit operator= 'struct B1 &(const struct B1 &)' inline default noexcept-unevaluated 0x7f93af065ae8
| | `-ParmVarDecl 0x7f93af065c00 <col:8> col:8 'const struct B1 &'
| `-CXXConstructorDecl 0x7f93af093048 <col:8> col:8 implicit constexpr B1 'void (const struct B1 &)' inline default noexcept-unevaluated 0x7f93af093048
|   `-ParmVarDecl 0x7f93af093170 <col:8> col:8 'const struct B1 &'
|-FunctionDecl 0x7f93af065d08 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x7f93af065de8 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x7f93af065da0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7f93af065e50 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x7f93af065f30 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x7f93af065ee8 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7f93af066018 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x7f93af0660f8 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x7f93af0660b0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7f93af066160 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x7f93af066240 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x7f93af0661f8 <<invalid sloc>> Implicit Default
|-CXXRecordDecl 0x7f93af0662a8 <line:7:1, line:11:1> line:7:8 referenced struct B2 definition
| |-CXXRecordDecl 0x7f93af0663c8 <col:1, col:8> col:8 implicit referenced struct B2
| |-CXXConstructorDecl 0x7f93af0664c8 <line:8:5, col:11> col:5 used B2 'void (void)'
| | `-CompoundStmt 0x7f93af090cb8 <col:10, col:11>
| |-CXXDestructorDecl 0x7f93af090a00 <line:10:5, col:20> col:13 used ~B2 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f93af090cd0 <col:19, col:20>
| |-CXXMethodDecl 0x7f93af090b38 <line:7:8, <invalid sloc>> col:8 implicit operator= 'struct B2 &(const struct B2 &)' inline default noexcept-unevaluated 0x7f93af090b38
| | `-ParmVarDecl 0x7f93af090c50 <col:8> col:8 'const struct B2 &'
| `-CXXConstructorDecl 0x7f93af093240 <col:8> col:8 implicit constexpr B2 'void (const struct B2 &)' inline default noexcept-unevaluated 0x7f93af093240
|   `-ParmVarDecl 0x7f93af093370 <col:8> col:8 'const struct B2 &'
|-CXXRecordDecl 0x7f93af090ce8 <line:13:1, line:17:1> line:13:8 referenced struct X definition
| |-CXXRecordDecl 0x7f93af090e08 <col:1, col:8> col:8 implicit referenced struct X
| |-CXXConstructorDecl 0x7f93af090f08 <line:14:5, col:10> col:5 used X 'void (void)'
| | `-CompoundStmt 0x7f93af0912b8 <col:9, col:10>
| |-CXXDestructorDecl 0x7f93af091000 <line:16:5, col:19> col:13 used ~X 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f93af0912d0 <col:18, col:19>
| |-CXXMethodDecl 0x7f93af091138 <line:13:8, <invalid sloc>> col:8 implicit operator= 'struct X &(const struct X &)' inline default noexcept-unevaluated 0x7f93af091138
| | `-ParmVarDecl 0x7f93af091250 <col:8> col:8 'const struct X &'
| `-CXXConstructorDecl 0x7f93af093440 <col:8> col:8 implicit constexpr X 'void (const struct X &)' inline default noexcept-unevaluated 0x7f93af093440
|   `-ParmVarDecl 0x7f93af093570 <col:8> col:8 'const struct X &'
|-CXXRecordDecl 0x7f93af0912e8 <line:19:1, line:23:1> line:19:8 referenced struct Y definition
| |-CXXRecordDecl 0x7f93af091408 <col:1, col:8> col:8 implicit referenced struct Y
| |-CXXConstructorDecl 0x7f93af091508 <line:20:5, col:10> col:5 used Y 'void (void)'
| | `-CompoundStmt 0x7f93af0918b8 <col:9, col:10>
| |-CXXDestructorDecl 0x7f93af091600 <line:22:5, col:19> col:13 used ~Y 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f93af0918d0 <col:18, col:19>
| |-CXXMethodDecl 0x7f93af091738 <line:19:8, <invalid sloc>> col:8 implicit operator= 'struct Y &(const struct Y &)' inline default noexcept-unevaluated 0x7f93af091738
| | `-ParmVarDecl 0x7f93af091850 <col:8> col:8 'const struct Y &'
| `-CXXConstructorDecl 0x7f93af093630 <col:8> col:8 implicit constexpr Y 'void (const struct Y &)' inline default noexcept-unevaluated 0x7f93af093630
|   `-ParmVarDecl 0x7f93af093760 <col:8> col:8 'const struct Y &'
|-CXXRecordDecl 0x7f93af0918e8 <line:25:1, line:32:1> line:25:8 referenced struct D1 definition
| |-public 'struct B1'
| |-public 'struct B2'
| |-CXXRecordDecl 0x7f93af092ae8 <col:1, col:8> col:8 implicit referenced struct D1
| |-FieldDecl 0x7f93af092b90 <line:26:5, col:7> col:7 x 'struct X'
| |-FieldDecl 0x7f93af092be8 <line:27:5, col:7> col:7 y 'struct Y'
| |-CXXConstructorDecl 0x7f93af092c98 <line:29:5, col:11> col:5 used D1 'void (void)'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7f93af0931d8 <col:5> 'struct B1' 'void (void)'
| | |-CXXCtorInitializer 'struct B2'
| | | `-CXXConstructExpr 0x7f93af0933d8 <col:5> 'struct B2' 'void (void)'
| | |-CXXCtorInitializer Field 0x7f93af092b90 'x' 'struct X'
| | | `-CXXConstructExpr 0x7f93af0935d8 <col:5> 'struct X' 'void (void)'
| | |-CXXCtorInitializer Field 0x7f93af092be8 'y' 'struct Y'
| | | `-CXXConstructExpr 0x7f93af0937c8 <col:5> 'struct Y' 'void (void)'
| | `-CompoundStmt 0x7f93af093840 <col:10, col:11>
| |-CXXDestructorDecl 0x7f93af092d90 <line:31:5, col:12> col:5 used ~D1 'void (void) noexcept'
| | `-CompoundStmt 0x7f93af093858 <col:11, col:12>
| |-CXXMethodDecl 0x7f93af092ec8 <line:25:8, <invalid sloc>> col:8 implicit operator= 'struct D1 &(const struct D1 &)' inline default noexcept-unevaluated 0x7f93af092ec8
| | `-ParmVarDecl 0x7f93af092fe0 <col:8> col:8 'const struct D1 &'
| `-CXXConstructorDecl 0x7f93af096f78 <col:8> col:8 implicit constexpr D1 'void (const struct D1 &)' inline default noexcept-unevaluated 0x7f93af096f78
|   `-ParmVarDecl 0x7f93af0970a0 <col:8> col:8 'const struct D1 &'
|-CXXRecordDecl 0x7f93af093870 <line:34:1, line:38:1> line:34:8 referenced struct B3 definition
| |-virtual public 'struct B1'
| |-CXXRecordDecl 0x7f93af094200 <col:1, col:8> col:8 implicit referenced struct B3
| |-CXXConstructorDecl 0x7f93af094308 <line:35:5, col:11> col:5 used B3 'void (void)'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7f93af0946b8 <col:5> 'struct B1' 'void (void)'
| | `-CompoundStmt 0x7f93af094728 <col:10, col:11>
| |-CXXDestructorDecl 0x7f93af094400 <line:37:5, col:20> col:13 used ~B3 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f93af094740 <col:19, col:20>
| |-CXXMethodDecl 0x7f93af094538 <line:34:8, <invalid sloc>> col:8 implicit operator= 'struct B3 &(const struct B3 &)' inline default noexcept-unevaluated 0x7f93af094538
| | `-ParmVarDecl 0x7f93af094650 <col:8> col:8 'const struct B3 &'
| `-CXXConstructorDecl 0x7f93af096920 <col:8> col:8 implicit B3 'void (const struct B3 &)' inline default noexcept-unevaluated 0x7f93af096920
|   `-ParmVarDecl 0x7f93af096a50 <col:8> col:8 'const struct B3 &'
|-CXXRecordDecl 0x7f93af094758 <line:40:1, line:44:1> line:40:8 referenced struct B4 definition
| |-virtual public 'struct B1'
| |-CXXRecordDecl 0x7f93af0948d0 <col:1, col:8> col:8 implicit referenced struct B4
| |-CXXConstructorDecl 0x7f93af0949d8 <line:41:5, col:11> col:5 used B4 'void (void)'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7f93af094d88 <col:5> 'struct B1' 'void (void)'
| | `-CompoundStmt 0x7f93af094df8 <col:10, col:11>
| |-CXXDestructorDecl 0x7f93af094ad0 <line:43:5, col:20> col:13 used ~B4 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f93af094e10 <col:19, col:20>
| |-CXXMethodDecl 0x7f93af094c08 <line:40:8, <invalid sloc>> col:8 implicit operator= 'struct B4 &(const struct B4 &)' inline default noexcept-unevaluated 0x7f93af094c08
| | `-ParmVarDecl 0x7f93af094d20 <col:8> col:8 'const struct B4 &'
| `-CXXConstructorDecl 0x7f93af096b20 <col:8> col:8 implicit B4 'void (const struct B4 &)' inline default noexcept-unevaluated 0x7f93af096b20
|   `-ParmVarDecl 0x7f93af096c50 <col:8> col:8 'const struct B4 &'
|-CXXRecordDecl 0x7f93af094e28 <line:46:1, line:50:1> line:46:8 referenced struct D2 definition
| |-public 'struct B3'
| |-public 'struct B4'
| |-CXXRecordDecl 0x7f93af094fe0 <col:1, col:8> col:8 implicit referenced struct D2
| |-CXXConstructorDecl 0x7f93af0950e8 <line:47:5, col:11> col:5 used D2 'void (void)'
| | |-CXXCtorInitializer 'struct B1'
| | | `-CXXConstructExpr 0x7f93af0968b8 <col:5> 'struct B1' 'void (void)'
| | |-CXXCtorInitializer 'struct B3'
| | | `-CXXConstructExpr 0x7f93af096ab8 <col:5> 'struct B3' 'void (void)'
| | |-CXXCtorInitializer 'struct B4'
| | | `-CXXConstructExpr 0x7f93af096cb8 <col:5> 'struct B4' 'void (void)'
| | `-CompoundStmt 0x7f93af096d38 <col:10, col:11>
| |-CXXDestructorDecl 0x7f93af096600 <line:49:5, col:20> col:13 used ~D2 'void (void) noexcept' virtual
| | `-CompoundStmt 0x7f93af096d50 <col:19, col:20>
| |-CXXMethodDecl 0x7f93af096738 <line:46:8, <invalid sloc>> col:8 implicit operator= 'struct D2 &(const struct D2 &)' inline default noexcept-unevaluated 0x7f93af096738
| | `-ParmVarDecl 0x7f93af096850 <col:8> col:8 'const struct D2 &'
| `-CXXConstructorDecl 0x7f93af097220 <col:8> col:8 implicit D2 'void (const struct D2 &)' inline default noexcept-unevaluated 0x7f93af097220
|   `-ParmVarDecl 0x7f93af097350 <col:8> col:8 'const struct D2 &'
`-FunctionDecl 0x7f93af096dc8 <line:52:1, line:60:1> line:52:5 main 'int (void)'
  `-CompoundStmt 0x7f93af097458 <col:12, line:60:1>
    |-CompoundStmt 0x7f93af097150 <line:53:5, line:55:5>
    | `-DeclStmt 0x7f93af097138 <line:54:9, col:16>
    |   `-VarDecl 0x7f93af096ed8 <col:9, col:15> col:12 d1 'struct D1' listinit
    |     `-CXXConstructExpr 0x7f93af097108 <col:12, col:15> 'struct D1' 'void (void)'
    |-CompoundStmt 0x7f93af097400 <line:56:5, line:58:5>
    | `-DeclStmt 0x7f93af0973e8 <line:57:9, col:16>
    |   `-VarDecl 0x7f93af097180 <col:9, col:15> col:12 d2 'struct D2' listinit
    |     `-CXXConstructExpr 0x7f93af0973b8 <col:12, col:15> 'struct D2' 'void (void)'
    `-ReturnStmt 0x7f93af097440 <line:59:5, col:12>
      `-IntegerLiteral 0x7f93af097420 <col:12> 'int' 0
