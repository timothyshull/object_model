TranslationUnitDecl 0x7fcaa90324d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fcaa9032a60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fcaa9032740 '__int128'
|-TypedefDecl 0x7fcaa9032ad0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fcaa9032760 'unsigned __int128'
|-TypedefDecl 0x7fcaa9032e18 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fcaa9032bc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fcaa9032b28 '__NSConstantString_tag'
|-TypedefDecl 0x7fcaa9032eb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fcaa9032e70 'char *'
|   `-BuiltinType 0x7fcaa9032560 'char'
|-TypedefDecl 0x7fcaa9065600 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fcaa9033190 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fcaa9032fa0 'struct __va_list_tag'
|     `-CXXRecord 0x7fcaa9032f08 '__va_list_tag'
|-CXXRecordDecl 0x7fcaa9065658 <object_model_refined/5_ctor_dtor_semantics/02_object_construction_without_inheritance.cpp:1:1, line:5:1> line:1:8 referenced struct Point definition
| |-CXXRecordDecl 0x7fcaa9065778 <col:1, col:8> col:8 implicit struct Point
| |-FieldDecl 0x7fcaa9065828 <line:2:5, col:12> col:12 referenced x 'double'
| |-FieldDecl 0x7fcaa9065888 <line:3:5, col:12> col:12 referenced y 'double'
| |-FieldDecl 0x7fcaa90658e8 <line:4:5, col:12> col:12 referenced z 'double'
| |-CXXMethodDecl 0x7fcaa9073eb8 <line:1:8> col:8 implicit used constexpr operator= 'struct Point &(const struct Point &) noexcept' inline default trivial
| | |-ParmVarDecl 0x7fcaa9073fd0 <col:8> col:8 used 'const struct Point &'
| | `-CompoundStmt 0x7fcaa9074580 <col:8>
| |   |-BinaryOperator 0x7fcaa9074328 <col:8> 'double' lvalue '='
| |   | |-MemberExpr 0x7fcaa9074278 <col:8> 'double' lvalue ->x 0x7fcaa9065828
| |   | | `-CXXThisExpr 0x7fcaa9074260 <col:8> 'struct Point *' this
| |   | `-ImplicitCastExpr 0x7fcaa9074310 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fcaa90742d8 <col:8> 'const double' lvalue .x 0x7fcaa9065828
| |   |     `-DeclRefExpr 0x7fcaa90742b0 <col:8> 'const struct Point' lvalue ParmVar 0x7fcaa9073fd0 '' 'const struct Point &'
| |   |-BinaryOperator 0x7fcaa9074418 <col:8> 'double' lvalue '='
| |   | |-MemberExpr 0x7fcaa9074368 <col:8> 'double' lvalue ->y 0x7fcaa9065888
| |   | | `-CXXThisExpr 0x7fcaa9074350 <col:8> 'struct Point *' this
| |   | `-ImplicitCastExpr 0x7fcaa9074400 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fcaa90743c8 <col:8> 'const double' lvalue .y 0x7fcaa9065888
| |   |     `-DeclRefExpr 0x7fcaa90743a0 <col:8> 'const struct Point' lvalue ParmVar 0x7fcaa9073fd0 '' 'const struct Point &'
| |   |-BinaryOperator 0x7fcaa9074508 <col:8> 'double' lvalue '='
| |   | |-MemberExpr 0x7fcaa9074458 <col:8> 'double' lvalue ->z 0x7fcaa90658e8
| |   | | `-CXXThisExpr 0x7fcaa9074440 <col:8> 'struct Point *' this
| |   | `-ImplicitCastExpr 0x7fcaa90744f0 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fcaa90744b8 <col:8> 'const double' lvalue .z 0x7fcaa90658e8
| |   |     `-DeclRefExpr 0x7fcaa9074490 <col:8> 'const struct Point' lvalue ParmVar 0x7fcaa9073fd0 '' 'const struct Point &'
| |   `-ReturnStmt 0x7fcaa9074568 <col:8>
| |     `-UnaryOperator 0x7fcaa9074548 <col:8> 'struct Point' lvalue prefix '*'
| |       `-CXXThisExpr 0x7fcaa9074530 <col:8> 'struct Point *' this
| |-CXXMethodDecl 0x7fcaa9074068 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct Point &(struct Point &&)' inline default trivial noexcept-unevaluated 0x7fcaa9074068
| | `-ParmVarDecl 0x7fcaa9074180 <col:8> col:8 'struct Point &&'
| |-CXXDestructorDecl 0x7fcaa90746b8 <col:8> col:8 implicit referenced ~Point 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fcaa9074838 <col:8> col:8 implicit Point 'void (void)' inline default trivial noexcept-unevaluated 0x7fcaa9074838
| |-CXXConstructorDecl 0x7fcaa9074918 <col:8> col:8 implicit constexpr Point 'void (const struct Point &)' inline default trivial noexcept-unevaluated 0x7fcaa9074918
| | `-ParmVarDecl 0x7fcaa9074a40 <col:8> col:8 'const struct Point &'
| `-CXXConstructorDecl 0x7fcaa9074aa8 <col:8> col:8 implicit used constexpr Point 'void (struct Point &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x7fcaa9074bd0 <col:8> col:8 used 'struct Point &&'
|   |-CXXCtorInitializer Field 0x7fcaa9065828 'x' 'double'
|   | `-ImplicitCastExpr 0x7fcaa9074d28 <col:8> 'double' <LValueToRValue>
|   |   `-MemberExpr 0x7fcaa9074cf0 <col:8> 'double' xvalue .x 0x7fcaa9065828
|   |     `-CXXStaticCastExpr 0x7fcaa9074cc0 <col:8> 'struct Point' xvalue static_cast<struct Point &&> <NoOp>
|   |       `-DeclRefExpr 0x7fcaa9074c88 <col:8> 'struct Point' lvalue ParmVar 0x7fcaa9074bd0 '' 'struct Point &&'
|   |-CXXCtorInitializer Field 0x7fcaa9065888 'y' 'double'
|   | `-ImplicitCastExpr 0x7fcaa9091a38 <col:8> 'double' <LValueToRValue>
|   |   `-MemberExpr 0x7fcaa9091a00 <col:8> 'double' xvalue .y 0x7fcaa9065888
|   |     `-CXXStaticCastExpr 0x7fcaa9074da0 <col:8> 'struct Point' xvalue static_cast<struct Point &&> <NoOp>
|   |       `-DeclRefExpr 0x7fcaa9074d68 <col:8> 'struct Point' lvalue ParmVar 0x7fcaa9074bd0 '' 'struct Point &&'
|   |-CXXCtorInitializer Field 0x7fcaa90658e8 'z' 'double'
|   | `-ImplicitCastExpr 0x7fcaa9091b18 <col:8> 'double' <LValueToRValue>
|   |   `-MemberExpr 0x7fcaa9091ae0 <col:8> 'double' xvalue .z 0x7fcaa90658e8
|   |     `-CXXStaticCastExpr 0x7fcaa9091ab0 <col:8> 'struct Point' xvalue static_cast<struct Point &&> <NoOp>
|   |       `-DeclRefExpr 0x7fcaa9091a78 <col:8> 'struct Point' lvalue ParmVar 0x7fcaa9074bd0 '' 'struct Point &&'
|   `-CompoundStmt 0x7fcaa9091b70 <col:8>
|-VarDecl 0x7fcaa9065960 <line:7:1, col:14> col:7 global 'struct Point' listinit
| `-InitListExpr 0x7fcaa9065a40 <col:13, col:14> 'struct Point'
|   |-ImplicitValueInitExpr 0x7fcaa9065a98 <<invalid sloc>> 'double'
|   |-ImplicitValueInitExpr 0x7fcaa9065aa8 <<invalid sloc>> 'double'
|   `-ImplicitValueInitExpr 0x7fcaa9065ab8 <<invalid sloc>> 'double'
|-FunctionDecl 0x7fcaa9065be0 <line:9:1, line:16:1> line:9:7 used func1 'struct Point (void)'
| `-CompoundStmt 0x7fcaa9091bd8 <line:10:1, line:16:1>
|   |-DeclStmt 0x7fcaa9065df8 <line:11:5, col:31>
|   | `-VarDecl 0x7fcaa9065c88 <col:5, col:30> col:11 used local 'struct Point' nrvo listinit
|   |   `-InitListExpr 0x7fcaa9065da0 <col:16, col:30> 'struct Point'
|   |     |-FloatingLiteral 0x7fcaa9065ce8 <col:17> 'double' 0.000000e+00
|   |     |-FloatingLiteral 0x7fcaa9065d08 <col:22> 'double' 1.000000e+00
|   |     `-FloatingLiteral 0x7fcaa9065d28 <col:27> 'double' 2.000000e+00
|   |-DeclStmt 0x7fcaa90665b8 <line:12:5, col:30>
|   | `-VarDecl 0x7fcaa9065e48 <col:5, col:29> col:12 used heap 'struct Point *' cinit
|   |   `-CXXNewExpr 0x7fcaa9066560 <col:19, col:29> 'struct Point *' Function 0x7fcaa9065f38 'operator new' 'void *(unsigned long)'
|   |     `-InitListExpr 0x7fcaa90664d8 <col:28, col:29> 'struct Point'
|   |       |-ImplicitValueInitExpr 0x7fcaa9066530 <<invalid sloc>> 'double'
|   |       |-ImplicitValueInitExpr 0x7fcaa9066540 <<invalid sloc>> 'double'
|   |       `-ImplicitValueInitExpr 0x7fcaa9066550 <<invalid sloc>> 'double'
|   |-CXXOperatorCallExpr 0x7fcaa9074630 <line:13:5, col:13> 'struct Point' lvalue
|   | |-ImplicitCastExpr 0x7fcaa9074618 <col:11> 'struct Point &(*)(const struct Point &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x7fcaa9074238 <col:11> 'struct Point &(const struct Point &) noexcept' lvalue CXXMethod 0x7fcaa9073eb8 'operator=' 'struct Point &(const struct Point &) noexcept'
|   | |-UnaryOperator 0x7fcaa9073e18 <col:5, col:6> 'struct Point' lvalue prefix '*'
|   | | `-ImplicitCastExpr 0x7fcaa9073e00 <col:6> 'struct Point *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x7fcaa90665d0 <col:6> 'struct Point *' lvalue Var 0x7fcaa9065e48 'heap' 'struct Point *'
|   | `-ImplicitCastExpr 0x7fcaa90741e8 <col:13> 'const struct Point' lvalue <NoOp>
|   |   `-DeclRefExpr 0x7fcaa9073e38 <col:13> 'struct Point' lvalue Var 0x7fcaa9065c88 'local' 'struct Point'
|   |-CXXDeleteExpr 0x7fcaa90747c8 <line:14:5, col:12> 'void' Function 0x7fcaa9066248 'operator delete' 'void (void *) noexcept'
|   | `-ImplicitCastExpr 0x7fcaa90746a0 <col:12> 'struct Point *' <LValueToRValue>
|   |   `-DeclRefExpr 0x7fcaa9074678 <col:12> 'struct Point *' lvalue Var 0x7fcaa9065e48 'heap' 'struct Point *'
|   `-ReturnStmt 0x7fcaa9091bc0 <line:15:5, col:12>
|     `-CXXConstructExpr 0x7fcaa9091b88 <col:12> 'struct Point' 'void (struct Point &&) noexcept' elidable
|       `-ImplicitCastExpr 0x7fcaa9074c38 <col:12> 'struct Point' xvalue <NoOp>
|         `-DeclRefExpr 0x7fcaa90747f0 <col:12> 'struct Point' lvalue Var 0x7fcaa9065c88 'local' 'struct Point'
|-FunctionDecl 0x7fcaa9065f38 <<invalid sloc>> <invalid sloc> implicit used operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x7fcaa9066018 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x7fcaa9065fd0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7fcaa9066080 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x7fcaa9066160 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x7fcaa9066118 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7fcaa9066248 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x7fcaa9066328 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x7fcaa90662e0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x7fcaa9066390 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x7fcaa9066470 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x7fcaa9066428 <<invalid sloc>> Implicit Default
`-FunctionDecl 0x7fcaa9091c78 <line:18:1, line:22:1> line:18:5 main 'int (void)'
  `-CompoundStmt 0x7fcaa9091e98 <line:19:1, line:22:1>
    |-CallExpr 0x7fcaa9091e00 <line:20:5, col:11> 'struct Point'
    | `-ImplicitCastExpr 0x7fcaa9091de8 <col:5> 'struct Point (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x7fcaa9091d90 <col:5> 'struct Point (void)' lvalue Function 0x7fcaa9065be0 'func1' 'struct Point (void)'
    `-ReturnStmt 0x7fcaa9091e80 <line:21:5, col:12>
      `-IntegerLiteral 0x7fcaa9091e60 <col:12> 'int' 0
