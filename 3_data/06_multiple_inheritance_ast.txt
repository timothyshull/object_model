TranslationUnitDecl 0x7fd2ca8324d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fd2ca832a60 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fd2ca832740 '__int128'
|-TypedefDecl 0x7fd2ca832ad0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fd2ca832760 'unsigned __int128'
|-TypedefDecl 0x7fd2ca832e18 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fd2ca832bc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fd2ca832b28 '__NSConstantString_tag'
|-TypedefDecl 0x7fd2ca832eb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fd2ca832e70 'char *'
|   `-BuiltinType 0x7fd2ca832560 'char'
|-TypedefDecl 0x7fd2ca865600 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fd2ca833190 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fd2ca832fa0 'struct __va_list_tag'
|     `-CXXRecord 0x7fd2ca832f08 '__va_list_tag'
|-NamespaceDecl 0x7fd2ca865658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7fd2ca8656c0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7fd2ca8657d8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7fd2ca865840 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7fd2ca8326c0 'float'
| |-TypedefDecl 0x7fd2ca8658b0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7fd2ca8326e0 'double'
| |-FunctionDecl 0x7fd2ca8659d8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7fd2ca865b98 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7fd2ca865ac8 <col:26> col:31 'float'
| |-FunctionDecl 0x7fd2ca865d18 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7fd2ca865c50 <col:26> col:32 'double'
| |-FunctionDecl 0x7fd2ca865e98 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7fd2ca865dd0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7fd2ca865fe0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca865f50 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fd2ca866080 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca866170 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8660e0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fd2ca866210 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca866300 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca866270 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fd2ca8663a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca866490 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca866400 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fd2ca866530 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f3c30 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca866590 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fd2ca8f3cd0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f3dc0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8f3d30 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fd2ca8f3e60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f3f50 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca8f3ec0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fd2ca8f3ff0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f40e0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8f4050 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fd2ca8f4180 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f4270 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8f41e0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fd2ca8f4310 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f4400 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca8f4370 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fd2ca8f44a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f4590 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8f4500 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fd2ca8f4630 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f4720 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8f4690 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fd2ca8f47c0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f48b0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca8f4820 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7fd2ca8f4950 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f4a40 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8f49b0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7fd2ca8f4ae0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f4c00 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8f4b40 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7fd2ca8f4ca0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f4d90 prev 0x7fd2ca865fe0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca8f4d00 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fd2ca8f5538 <col:58, line:206:1>
| | | `-ReturnStmt 0x7fd2ca8f5520 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7fd2ca8f5508 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f54e0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fd2ca8f4ef8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fd2ca8f4ec8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fd2ca8f4e78 <col:12> 'float' lvalue ParmVar 0x7fd2ca8f4d00 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7fd2ca8f4ee0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ca8f4ea0 <col:19> 'float' lvalue ParmVar 0x7fd2ca8f4d00 '__x' 'float'
| | |       `-BinaryOperator 0x7fd2ca8f54b8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fd2ca8f5200 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7fd2ca8f51e8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ca8f5140 <col:26> '<builtin fn type>' Function 0x7fd2ca8f4fe8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ca8f5230 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ca8f5168 <col:42> 'float' lvalue ParmVar 0x7fd2ca8f4d00 '__x' 'float'
| | |         `-CallExpr 0x7fd2ca8f5490 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7fd2ca8f5478 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fd2ca8f53f0 <col:50> '<builtin fn type>' Function 0x7fd2ca8f5300 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ca8f4e30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f5600 prev 0x7fd2ca866170 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8f5570 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fd2ca8f6238 <col:59, line:209:1>
| | | `-ReturnStmt 0x7fd2ca8f6220 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7fd2ca8f6208 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f61e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fd2ca8f5768 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fd2ca8f5738 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fd2ca8f56e8 <col:12> 'double' lvalue ParmVar 0x7fd2ca8f5570 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7fd2ca8f5750 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ca8f5710 <col:19> 'double' lvalue ParmVar 0x7fd2ca8f5570 '__x' 'double'
| | |       `-BinaryOperator 0x7fd2ca8f61b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7fd2ca8f5a70 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7fd2ca8f5a58 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ca8f59b0 <col:26> '<builtin fn type>' Function 0x7fd2ca8f5858 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ca8f5aa0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ca8f59d8 <col:41> 'double' lvalue ParmVar 0x7fd2ca8f5570 '__x' 'double'
| | |         `-CallExpr 0x7fd2ca8f6190 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7fd2ca8f6178 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fd2ca8f60f0 <col:49> '<builtin fn type>' Function 0x7fd2ca8f6000 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ca8f56a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f6300 prev 0x7fd2ca866300 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8f6270 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fd2ca8f6aa8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7fd2ca8f6a90 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7fd2ca8f6a78 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f6a50 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fd2ca8f6468 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fd2ca8f6438 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fd2ca8f63e8 <col:12> 'long double' lvalue ParmVar 0x7fd2ca8f6270 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7fd2ca8f6450 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ca8f6410 <col:19> 'long double' lvalue ParmVar 0x7fd2ca8f6270 '__x' 'long double'
| | |       `-BinaryOperator 0x7fd2ca8f6a28 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fd2ca8f6770 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7fd2ca8f6758 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ca8f66b0 <col:26> '<builtin fn type>' Function 0x7fd2ca8f6558 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ca8f67a0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ca8f66d8 <col:42> 'long double' lvalue ParmVar 0x7fd2ca8f6270 '__x' 'long double'
| | |         `-CallExpr 0x7fd2ca8f6a00 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7fd2ca8f69e8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fd2ca8f6960 <col:50> '<builtin fn type>' Function 0x7fd2ca8f6870 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ca8f63a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f6b70 prev 0x7fd2ca866490 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca8f6ae0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fd2ca8f6dc8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7fd2ca8f6db0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7fd2ca8f6d98 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f6d70 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fd2ca8f6cc0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7fd2ca8f6ca8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fd2ca8f6c58 <col:12> '<builtin fn type>' Function 0x7fd2ca8f4fe8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7fd2ca8f6cf0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ca8f6c80 <col:28> 'float' lvalue ParmVar 0x7fd2ca8f6ae0 '__x' 'float'
| | |       `-CallExpr 0x7fd2ca8f6d48 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7fd2ca8f6d30 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fd2ca8f6d08 <col:36> '<builtin fn type>' Function 0x7fd2ca8f5300 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ca8f6c10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f6e90 prev 0x7fd2ca8f3c30 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8f6e00 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fd2ca8f74e8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7fd2ca8f74d0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7fd2ca8f74b8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f7490 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7fd2ca8f6fe0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7fd2ca8f6fc8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fd2ca8f6f78 <col:12> '<builtin fn type>' Function 0x7fd2ca8f5858 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fd2ca8f7410 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ca8f6fa0 <col:27> 'double' lvalue ParmVar 0x7fd2ca8f6e00 '__x' 'double'
| | |       `-CallExpr 0x7fd2ca8f7468 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7fd2ca8f7450 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fd2ca8f7428 <col:35> '<builtin fn type>' Function 0x7fd2ca8f6000 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ca8f6f30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f75b0 prev 0x7fd2ca8f3dc0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8f7520 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fd2ca8f7808 <col:61, line:221:1>
| | | `-ReturnStmt 0x7fd2ca8f77f0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7fd2ca8f77d8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f77b0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fd2ca8f7700 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7fd2ca8f76e8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fd2ca8f7698 <col:12> '<builtin fn type>' Function 0x7fd2ca8f6558 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fd2ca8f7730 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ca8f76c0 <col:28> 'long double' lvalue ParmVar 0x7fd2ca8f7520 '__x' 'long double'
| | |       `-CallExpr 0x7fd2ca8f7788 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7fd2ca8f7770 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fd2ca8f7748 <col:36> '<builtin fn type>' Function 0x7fd2ca8f6870 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ca8f7650 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f78d0 prev 0x7fd2ca8f3f50 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca8f7840 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fd2ca8f7a90 <col:55, line:224:1>
| | | `-ReturnStmt 0x7fd2ca8f7a78 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7fd2ca8f7a60 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f7a38 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fd2ca8f7a08 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fd2ca8f79b8 <col:12> 'float' lvalue ParmVar 0x7fd2ca8f7840 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7fd2ca8f7a20 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fd2ca8f79e0 <col:19> 'float' lvalue ParmVar 0x7fd2ca8f7840 '__x' 'float'
| | `-AlwaysInlineAttr 0x7fd2ca8f7970 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f7b58 prev 0x7fd2ca8f40e0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8f7ac8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fd2ca8f7d18 <col:56, line:227:1>
| | | `-ReturnStmt 0x7fd2ca8f7d00 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7fd2ca8f7ce8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f7cc0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fd2ca8f7c90 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fd2ca8f7c40 <col:12> 'double' lvalue ParmVar 0x7fd2ca8f7ac8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7fd2ca8f7ca8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fd2ca8f7c68 <col:19> 'double' lvalue ParmVar 0x7fd2ca8f7ac8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7fd2ca8f7bf8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f7de0 prev 0x7fd2ca8f4270 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8f7d50 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fd2ca8f7fa0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7fd2ca8f7f88 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7fd2ca8f7f70 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8f7f48 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fd2ca8f7f18 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fd2ca8f7ec8 <col:12> 'long double' lvalue ParmVar 0x7fd2ca8f7d50 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7fd2ca8f7f30 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fd2ca8f7ef0 <col:19> 'long double' lvalue ParmVar 0x7fd2ca8f7d50 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7fd2ca8f7e80 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f8068 prev 0x7fd2ca8f48b0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca8f7fd8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7fd2ca8f9cc8 <col:57, line:235:1>
| | | |-DeclStmt 0x7fd2ca8f99b0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7fd2ca8f8150 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7fd2ca8f8290 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7fd2ca8f82f0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7fd2ca8f9480 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fd2ca8f9950 <col:5>
| | | | | |-CXXConstructorDecl 0x7fd2ca8f95c8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7fd2ca8f95c8
| | | | | | `-ParmVarDecl 0x7fd2ca8f96f0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7fd2ca8f9788 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7fd2ca8f9788
| | | | |   `-ParmVarDecl 0x7fd2ca8f98b0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7fd2ca8f9400 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7fd2ca8f9968 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fd2ca8f9a68 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7fd2ca8f99f0 <col:5, col:9> 'float' lvalue .__f 0x7fd2ca8f8290
| | | | | `-DeclRefExpr 0x7fd2ca8f99c8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fd2ca8f9400 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7fd2ca8f9a50 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fd2ca8f9a28 <col:15> 'float' lvalue ParmVar 0x7fd2ca8f7fd8 '__x' 'float'
| | | `-ReturnStmt 0x7fd2ca8f9cb0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7fd2ca8f9c88 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fd2ca8f9c70 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fd2ca8f9c50 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7fd2ca8f9be0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7fd2ca8f9bc8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7fd2ca8f9b70 <col:18, col:22> 'unsigned int' lvalue .__u 0x7fd2ca8f82f0
| | |           |   `-DeclRefExpr 0x7fd2ca8f9b48 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fd2ca8f9400 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7fd2ca8f9ba8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7fd2ca8f8108 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8f9da0 prev 0x7fd2ca8f4a40 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8f9d10 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7fd2ca8fc340 <col:58, line:240:1>
| | | |-DeclStmt 0x7fd2ca8fc028 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7fd2ca8f9e88 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7fd2ca8f9fc0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7fd2ca8fa020 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7fd2ca8fa160 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fd2ca8fbfc8 <col:5>
| | | | | |-CXXConstructorDecl 0x7fd2ca8fa278 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7fd2ca8fa278
| | | | | | `-ParmVarDecl 0x7fd2ca8fa3a0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7fd2ca8fbe38 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7fd2ca8fbe38
| | | | |   `-ParmVarDecl 0x7fd2ca8fbf60 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7fd2ca8fa0e0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7fd2ca8fbfe0 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fd2ca8fc0e0 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7fd2ca8fc068 <col:5, col:9> 'double' lvalue .__f 0x7fd2ca8f9fc0
| | | | | `-DeclRefExpr 0x7fd2ca8fc040 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fd2ca8fa0e0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7fd2ca8fc0c8 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fd2ca8fc0a0 <col:15> 'double' lvalue ParmVar 0x7fd2ca8f9d10 '__x' 'double'
| | | `-ReturnStmt 0x7fd2ca8fc328 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7fd2ca8fc300 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fd2ca8fc2e8 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fd2ca8fc2c8 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7fd2ca8fc258 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7fd2ca8fc240 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7fd2ca8fc1e8 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7fd2ca8fa020
| | |           |   `-DeclRefExpr 0x7fd2ca8fc1c0 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fd2ca8fa0e0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7fd2ca8fc220 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7fd2ca8f9e40 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8fc418 prev 0x7fd2ca8f4c00 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8fc388 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7fd2ca8fe090 <col:63, line:249:1>
| | | |-DeclStmt 0x7fd2ca8fdc88 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7fd2ca8fc500 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7fd2ca8fc640 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7fd2ca8fc688 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7fd2ca8fc7c0 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7fd2ca8fc820 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7fd2ca8fcb38 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7fd2ca8fcc18 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fd2ca8fcc18
| | | | | | |-CXXConstructorDecl 0x7fd2ca8fd718 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7fd2ca8fd718
| | | | | | | `-ParmVarDecl 0x7fd2ca8fd840 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7fd2ca8fd8d8 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7fd2ca8fd8d8
| | | | | |   `-ParmVarDecl 0x7fd2ca8fda00 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7fd2ca8fc8e0 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7fd2ca8fca30 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fd2ca8fdc28 <col:5>
| | | | | |-CXXConstructorDecl 0x7fd2ca8fcd28 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7fd2ca8fcd28
| | | | | | `-ParmVarDecl 0x7fd2ca8fd680 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7fd2ca8fda98 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7fd2ca8fda98
| | | | |   `-ParmVarDecl 0x7fd2ca8fdbc0 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7fd2ca8fc9b0 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7fd2ca8fdc40 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fd2ca8fdd40 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7fd2ca8fdcc8 <col:5, col:9> 'long double' lvalue .__ld 0x7fd2ca8fc640
| | | | | `-DeclRefExpr 0x7fd2ca8fdca0 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fd2ca8fc9b0 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7fd2ca8fdd28 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fd2ca8fdd00 <col:16> 'long double' lvalue ParmVar 0x7fd2ca8fc388 '__x' 'long double'
| | | `-ReturnStmt 0x7fd2ca8fe078 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7fd2ca8fe050 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7fd2ca8fe030 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7fd2ca8fdfc0 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7fd2ca8fdfa8 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7fd2ca8fdf90 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7fd2ca8fdf38 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7fd2ca8fc820
| | |         |     `-MemberExpr 0x7fd2ca8fdf00 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7fd2ca8fc8e0
| | |         |       `-DeclRefExpr 0x7fd2ca8fded8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fd2ca8fc9b0 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7fd2ca8fdf70 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7fd2ca8fc4b8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8fe168 prev 0x7fd2ca8f4400 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ca8fe0d8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fd2ca8fe4f0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7fd2ca8fe4d8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7fd2ca8fe4c0 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8fe498 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fd2ca8fe480 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fd2ca8fe340 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fd2ca8fe328 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fd2ca8fe2d0 <col:12> 'int (float)' lvalue Function 0x7fd2ca8f4d90 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7fd2ca8fe370 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fd2ca8fe2a8 <col:31> 'float' lvalue ParmVar 0x7fd2ca8fe0d8 '__x' 'float'
| | |       `-BinaryOperator 0x7fd2ca8fe458 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7fd2ca8fe3f0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7fd2ca8fe3d8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ca8fe388 <col:39> '<builtin fn type>' Function 0x7fd2ca8f4fe8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ca8fe420 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ca8fe3b0 <col:55> 'float' lvalue ParmVar 0x7fd2ca8fe0d8 '__x' 'float'
| | |         `-FloatingLiteral 0x7fd2ca8fe438 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7fd2ca8fe208 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8fea00 prev 0x7fd2ca8f4590 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ca8fe528 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fd2ca8fed80 <col:59, line:262:1>
| | | `-ReturnStmt 0x7fd2ca8fed68 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7fd2ca8fed50 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8fed28 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fd2ca8fed10 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fd2ca8febd0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fd2ca8febb8 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fd2ca8feb68 <col:12> 'int (double)' lvalue Function 0x7fd2ca8f5600 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7fd2ca8fec00 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fd2ca8feb40 <col:31> 'double' lvalue ParmVar 0x7fd2ca8fe528 '__x' 'double'
| | |       `-BinaryOperator 0x7fd2ca8fece8 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7fd2ca8fec80 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7fd2ca8fec68 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ca8fec18 <col:39> '<builtin fn type>' Function 0x7fd2ca8f5858 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ca8fecb0 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ca8fec40 <col:54> 'double' lvalue ParmVar 0x7fd2ca8fe528 '__x' 'double'
| | |         `-FloatingLiteral 0x7fd2ca8fecc8 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7fd2ca8feaa0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8fee48 prev 0x7fd2ca8f4720 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ca8fedb8 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fd2ca8ff1e0 <col:64, line:265:1>
| | | `-ReturnStmt 0x7fd2ca8ff1c8 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7fd2ca8ff1b0 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ca8ff188 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fd2ca8ff170 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fd2ca8ff020 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fd2ca8ff008 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fd2ca8fefb0 <col:12> 'int (long double)' lvalue Function 0x7fd2ca8f6300 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7fd2ca8ff050 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fd2ca8fef88 <col:31> 'long double' lvalue ParmVar 0x7fd2ca8fedb8 '__x' 'long double'
| | |       `-BinaryOperator 0x7fd2ca8ff148 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7fd2ca8ff0d0 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7fd2ca8ff0b8 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ca8ff068 <col:39> '<builtin fn type>' Function 0x7fd2ca8f6558 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ca8ff100 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ca8ff090 <col:55> 'long double' lvalue ParmVar 0x7fd2ca8fedb8 '__x' 'long double'
| | |         `-FloatingLiteral 0x7fd2ca8ff118 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7fd2ca8feee8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8ff2a8 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca8ff218 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca8ff348 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca8ff390 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca8ff448 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca8ff3b8 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca8ff4e8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca8ff530 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca8ff5e8 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca8ff558 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca8ff688 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca8ff6d0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca8ff788 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca8ff6f8 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca8ff828 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca8ff870 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca8ff928 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca8ff898 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca8ff9c8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca8ffa38 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca8ffaf0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca8ffa60 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca8ffb90 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca8ffbd8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca8ffc90 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca8ffc00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca8ffd30 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca8ffd78 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca8ffe30 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca8ffda0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca8ffed0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca8fff18 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca8fffd0 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca8fff40 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca900070 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9000b8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca900238 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca9000e0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fd2ca900158 <col:28> col:33 'float'
| | |-ConstAttr 0x7fd2ca900320 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca900368 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca9004e8 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca900390 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fd2ca900408 <col:29> col:35 'double'
| | |-ConstAttr 0x7fd2ca9005d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca900618 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca900798 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca900640 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fd2ca9006b8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fd2ca900880 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9008c8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca901200 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca9008f0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ca9012a0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca9012e8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca9013a0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca901310 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ca901440 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca901488 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca901540 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca9014b0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ca9015e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca901628 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca9016e0 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca901650 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ca901780 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca9017c8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca901880 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca9017f0 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ca901920 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca901968 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca901a20 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca901990 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ca901ac0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca901b08 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca901bc0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca901b30 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ca901c60 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca901ca8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca901d60 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca901cd0 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ca901e00 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca901e48 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca901f00 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca901e70 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ca901fa0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca901fe8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca9020a0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca902010 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ca902140 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca902188 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca902a90 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca902a00 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ca902b30 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca902b78 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca902c30 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca902ba0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ca902cd0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca902d18 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca902dd0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca902d40 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ca902e70 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca902eb8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca902f70 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca902ee0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ca903010 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca903058 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca903110 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca903080 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ca9031b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9031f8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca9032b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca903220 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ca903350 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca903398 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca903450 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca9033c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ca9034f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca903538 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca9035f0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca903560 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ca903690 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9036d8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca903790 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca903700 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca903830 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca903878 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca903930 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca9038a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca9039d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca904238 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca9042f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca904260 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca904390 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9043d8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca904490 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca904400 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca904530 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca904578 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca904630 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca9045a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca9046d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca904718 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca9047d0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca904740 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca904870 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9048b8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca904970 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca9048e0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca904a10 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca904a58 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca904b10 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca904a80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca904bb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca904bf8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca904cb0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca904c20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca904d50 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca904d98 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca904e50 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca904dc0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ca904ef0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca904f38 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca904ff0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca904f60 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ca905090 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca9050d8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca905200 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca905100 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ca9052a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9052e8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca9053a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca905310 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca905440 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca905488 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca905540 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca9054b0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca9055e0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca905628 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca9056e0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca905650 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca905780 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9057c8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca905880 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca9057f0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ca905920 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca905968 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca905a20 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca905990 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ca905ac0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca905b08 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca905bc0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca905b30 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ca905c60 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca905ca8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca905d60 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca905cd0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ca905e00 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca905e48 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca905f00 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca905e70 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ca905fa0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca905fe8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca9060a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca906010 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ca906140 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca906188 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca906290 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca906200 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ca906330 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca906378 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca906430 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca9063a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ca9064d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca906518 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca9065d0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca906540 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ca906670 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9066b8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca906770 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca9066e0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca906810 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca906858 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca906910 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca906880 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca9069b0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca9069f8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca906ab0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca906a20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca906b50 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca906b98 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca906c50 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca906bc0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ca906cf0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca906d38 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca906df0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca906d60 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ca906e90 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca906ed8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca906f90 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca906f00 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ca907030 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca907078 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca907130 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca9070a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca9071d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca908238 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca9082f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca908260 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca908390 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca9083d8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca908490 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca908400 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca908530 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca908578 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca908718 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7fd2ca9085a0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd2ca908640 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7fd2ca908800 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca9089d8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7fd2ca908860 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd2ca908900 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7fd2ca908ac0 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca908c98 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7fd2ca908b20 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd2ca908bc0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7fd2ca908d80 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca908f38 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fd2ca908de0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fd2ca908e58 <col:28> col:31 'int'
| | |-ConstAttr 0x7fd2ca909020 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca909068 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90a200 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7fd2ca909090 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fd2ca909108 <col:29> col:32 'int'
| | |-ConstAttr 0x7fd2ca90a2f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90a338 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90a4b8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fd2ca90a360 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fd2ca90a3d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7fd2ca90a5a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90a5e8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90a788 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7fd2ca90a610 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fd2ca90a6b0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7fd2ca90a870 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90aa28 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7fd2ca90a8d0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fd2ca90a948 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7fd2ca90ab10 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90acc8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7fd2ca90ab70 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fd2ca90abe8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7fd2ca90adb0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90aea0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7fd2ca90ae10 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ca90af78 <col:12> Implicit
| | `-NoThrowAttr 0x7fd2ca90afc0 <col:12> Implicit
| |-FunctionDecl 0x7fd2ca90b078 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7fd2ca90afe8 <col:18> col:24 'double'
| | |-ConstAttr 0x7fd2ca90b158 <col:12> Implicit
| | `-NoThrowAttr 0x7fd2ca90b1a0 <col:12> Implicit
| |-FunctionDecl 0x7fd2ca90c290 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7fd2ca90c200 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7fd2ca90c368 <col:12> Implicit
| | `-NoThrowAttr 0x7fd2ca90c3b0 <col:12> Implicit
| |-FunctionDecl 0x7fd2ca90c4e8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fd2ca90c3d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fd2ca90c450 <col:29> col:32 'int'
| | |-ConstAttr 0x7fd2ca90c590 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90c5d8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90c710 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7fd2ca90c600 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fd2ca90c678 <col:30> col:33 'int'
| | |-ConstAttr 0x7fd2ca90c7b8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90c800 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90c938 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fd2ca90c828 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fd2ca90c8a0 <col:41> col:44 'int'
| | |-ConstAttr 0x7fd2ca90c9e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90ca28 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90cba8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7fd2ca90ca50 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7fd2ca90cac8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7fd2ca90cc90 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90ccd8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90ce58 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7fd2ca90cd00 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7fd2ca90cd78 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7fd2ca90cf40 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90cf88 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90d108 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7fd2ca90cfb0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7fd2ca90d028 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7fd2ca90d1f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90d238 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90d2f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca90d260 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fd2ca90d390 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca90d3d8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90d490 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca90d400 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fd2ca90d530 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca90d578 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90d630 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca90d5a0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fd2ca90d6d0 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca90d718 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90d7d0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca90d740 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca90d870 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90d8b8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90d970 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca90d8e0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca90da10 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90da58 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90db10 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca90da80 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca90dbb0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90dbf8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90dd30 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca90dc20 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fd2ca90dc98 <col:28> col:33 'float'
| | |-ConstAttr 0x7fd2ca90ddd8 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90de20 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90df58 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca90de48 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fd2ca90dec0 <col:29> col:35 'double'
| | |-ConstAttr 0x7fd2ca90e000 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90e048 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90e200 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca90e070 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fd2ca90e0e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fd2ca90e2a8 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90e2f0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90e428 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca90e318 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fd2ca90e390 <col:26> col:31 'float'
| | |-ConstAttr 0x7fd2ca90e4d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90e518 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90e650 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca90e540 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fd2ca90e5b8 <col:27> col:33 'double'
| | |-ConstAttr 0x7fd2ca90e6f8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90e740 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90e878 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca90e768 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fd2ca90e7e0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7fd2ca90e920 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90e968 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90ea20 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca90e990 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca90eac0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90eb08 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90ebc0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca90eb30 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca90ec60 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90eca8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90ed60 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca90ecd0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca90ee00 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90ee48 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90ef00 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca90ee70 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ca90efa0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90efe8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90f0a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca90f010 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ca90f140 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90f188 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90f290 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca90f200 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ca90f330 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90f378 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90f430 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca90f3a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ca90f4d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90f518 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90f5d0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca90f540 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ca90f670 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90f6b8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90f770 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca90f6e0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ca90f810 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90f858 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90f910 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca90f880 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7fd2ca90f9b0 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90faa0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca90fa10 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7fd2ca90fb40 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90fc30 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca90fba0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7fd2ca90fcd0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90fdc0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca90fd30 <col:22> col:27 'float'
| | |-ConstAttr 0x7fd2ca90fe60 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90fea8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90ff60 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca90fed0 <col:22> col:28 'double'
| | |-ConstAttr 0x7fd2ca910000 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca910048 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca910100 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca910070 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7fd2ca9101a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca9101e8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca9102a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca910218 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fd2ca910348 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca910390 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca910448 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca9103b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fd2ca9104e8 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca910530 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca9105e8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca910558 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fd2ca910688 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca9106d0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca910788 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca9106f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fd2ca910828 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca910870 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca910928 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca910898 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fd2ca9109c8 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca910a10 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca910ac8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca910a38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fd2ca910b68 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca910bb0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca910c68 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca910bd8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7fd2ca910d08 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca910d50 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca910e08 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca910d78 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7fd2ca910ea8 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca910ef0 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca910fa8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca910f18 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7fd2ca911048 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca911090 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca911148 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca9110b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fd2ca9111e8 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca911238 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca9112f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca911260 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fd2ca911390 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca9113d8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca911490 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca911400 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fd2ca911530 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca911578 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca911668 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7fd2ca9115a0 <col:24> col:29 'float'
| | |-ConstAttr 0x7fd2ca911748 <col:17> Implicit
| | `-NoThrowAttr 0x7fd2ca911790 <col:17> Implicit
| |-FunctionDecl 0x7fd2ca911888 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7fd2ca9117b8 <col:23> col:29 'double'
| | |-ConstAttr 0x7fd2ca911968 <col:17> Implicit
| | `-NoThrowAttr 0x7fd2ca9119b0 <col:17> Implicit
| |-FunctionDecl 0x7fd2ca911aa8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7fd2ca9119d8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7fd2ca911b88 <col:17> Implicit
| | `-NoThrowAttr 0x7fd2ca911bd0 <col:17> Implicit
| |-FunctionDecl 0x7fd2ca911c88 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca911bf8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fd2ca911d28 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca911d70 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca911e28 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca911d98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fd2ca911ec8 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca911f10 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca911fc8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca911f38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fd2ca912068 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca9120b0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca912168 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7fd2ca9120d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7fd2ca912208 <col:17> Implicit
| | `-NoThrowAttr 0x7fd2ca912250 <col:17> Implicit
| |-FunctionDecl 0x7fd2ca912308 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7fd2ca912278 <col:24> col:30 'double'
| | |-ConstAttr 0x7fd2ca9123a8 <col:17> Implicit
| | `-NoThrowAttr 0x7fd2ca9123f0 <col:17> Implicit
| |-FunctionDecl 0x7fd2ca9124a8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7fd2ca912418 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ca912548 <col:17> Implicit
| | `-NoThrowAttr 0x7fd2ca912590 <col:17> Implicit
| |-FunctionDecl 0x7fd2ca912688 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7fd2ca9125b8 <col:30> col:35 'float'
| | |-ConstAttr 0x7fd2ca912768 <col:22> Implicit
| | `-NoThrowAttr 0x7fd2ca9127b0 <col:22> Implicit
| |-FunctionDecl 0x7fd2ca9128a8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7fd2ca9127d8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fd2ca912988 <col:22> Implicit
| | `-NoThrowAttr 0x7fd2ca9129d0 <col:22> Implicit
| |-FunctionDecl 0x7fd2ca912ac8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fd2ca9129f8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7fd2ca912ba8 <col:22> Implicit
| | `-NoThrowAttr 0x7fd2ca912bf0 <col:22> Implicit
| |-FunctionDecl 0x7fd2ca912ca8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7fd2ca912c18 <col:31> col:36 'float'
| | |-ConstAttr 0x7fd2ca912d48 <col:22> Implicit
| | `-NoThrowAttr 0x7fd2ca912d90 <col:22> Implicit
| |-FunctionDecl 0x7fd2ca912e48 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7fd2ca912db8 <col:30> col:36 'double'
| | |-ConstAttr 0x7fd2ca912ee8 <col:22> Implicit
| | `-NoThrowAttr 0x7fd2ca912f30 <col:22> Implicit
| |-FunctionDecl 0x7fd2ca912fe8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fd2ca912f58 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7fd2ca913088 <col:22> Implicit
| | `-NoThrowAttr 0x7fd2ca9130d0 <col:22> Implicit
| |-FunctionDecl 0x7fd2ca913200 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca9130f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fd2ca9132a0 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca9132e8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca9133a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca913310 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fd2ca913440 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca913488 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca913540 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ca9134b0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fd2ca9135e0 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca913628 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca913760 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca913650 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd2ca9136c8 <col:27> col:32 'float'
| | |-ConstAttr 0x7fd2ca913808 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca913850 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca913988 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca913878 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd2ca9138f0 <col:28> col:34 'double'
| | |-ConstAttr 0x7fd2ca913a30 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca913a78 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca913bb0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca913aa0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd2ca913b18 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fd2ca913c58 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca913ca0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca913dd8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca913cc8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fd2ca913d40 <col:32> col:37 'float'
| | |-ConstAttr 0x7fd2ca913e80 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca913ec8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca914000 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca913ef0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fd2ca913f68 <col:33> col:39 'double'
| | |-ConstAttr 0x7fd2ca9140a8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca9140f0 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca914238 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca914118 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fd2ca914190 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fd2ca9142e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca914328 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca914528 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7fd2ca914350 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fd2ca9143c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7fd2ca914440 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7fd2ca9147c8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7fd2ca9145f0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fd2ca914668 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7fd2ca9146e0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7fd2ca914a68 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7fd2ca914890 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fd2ca914908 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7fd2ca914980 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7fd2ca914c40 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca914b30 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7fd2ca914ba8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7fd2ca914ce8 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca914d30 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca914e68 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca914d58 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7fd2ca914dd0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7fd2ca914f10 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca914f58 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca915090 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca914f80 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7fd2ca914ff8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7fd2ca915138 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca915180 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca9152c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7fd2ca915200 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fd2ca9153a8 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca9153f0 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca9154e8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7fd2ca915418 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fd2ca9155c8 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca915610 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca915708 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7fd2ca915638 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7fd2ca9157e8 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca915830 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca915968 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca915858 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fd2ca9158d0 <col:32> col:37 'float'
| | |-ConstAttr 0x7fd2ca915a10 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca915a58 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca915b90 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca915a80 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fd2ca915af8 <col:33> col:39 'double'
| | |-ConstAttr 0x7fd2ca915c38 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca915c80 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca915db8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca915ca8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fd2ca915d20 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fd2ca915e60 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca915ea8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca916028 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca915ed0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7fd2ca915f48 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7fd2ca916110 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca916158 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca9072d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7fd2ca916180 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fd2ca907200 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7fd2ca9073c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca907408 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca907540 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca907430 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7fd2ca9074a8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7fd2ca9075e8 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca907630 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca907768 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca907658 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd2ca9076d0 <col:27> col:32 'float'
| | |-ConstAttr 0x7fd2ca907810 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca907858 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca907990 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca907880 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd2ca9078f8 <col:28> col:34 'double'
| | |-ConstAttr 0x7fd2ca907a38 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca907a80 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca907bb8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca907aa8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd2ca907b20 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fd2ca907c60 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca907ca8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca907de0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca907cd0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd2ca907d48 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fd2ca907e88 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca907ed0 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca908008 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca907ef8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd2ca907f70 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fd2ca9080b0 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca9080f8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca91a238 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca908120 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd2ca908198 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fd2ca91a2e0 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca91a328 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca91a460 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ca91a350 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd2ca91a3c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fd2ca91a508 <col:14> Implicit
| | `-ConstAttr 0x7fd2ca91a550 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca91a688 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca91a578 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd2ca91a5f0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fd2ca91a730 <col:15> Implicit
| | `-ConstAttr 0x7fd2ca91a778 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca91a8b0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca91a7a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd2ca91a818 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fd2ca91a958 <col:20> Implicit
| | `-ConstAttr 0x7fd2ca91a9a0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca91aba8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7fd2ca91a9c8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fd2ca91aa40 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fd2ca91aab8 <col:33> col:38 'float'
| | |-ConstAttr 0x7fd2ca91aca8 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ca91acf0 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca91aef8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7fd2ca91ad18 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fd2ca91ad90 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7fd2ca91ae08 <col:35> col:41 'double'
| | |-ConstAttr 0x7fd2ca91aff8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ca91b040 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca90b288 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ca91b068 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fd2ca91b0e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7fd2ca91b158 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7fd2ca90b388 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ca90b3d0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ca90b488 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7fd2ca90b520 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ca90b668 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7fd2ca90b700 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ca90b848 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7fd2ca90b8e0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ca90ba28 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7fd2ca90bac0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd2ca90bc18 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca90bb78 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fd2ca90bcb8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ca90bd58 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7fd2ca90bd68 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca90be30 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca90bd90 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fd2ca90bed0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ca90bf70 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7fd2ca90bf80 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca91e200 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fd2ca90bfa8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7fd2ca90c020 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7fd2ca90c098 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fd2ca91e2b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca91e4e0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fd2ca91e310 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7fd2ca91e388 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7fd2ca91e400 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fd2ca91e590 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca91e690 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca91e5f0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fd2ca91e730 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ca91e7d0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7fd2ca91e7e0 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca91e8a8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca91e808 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fd2ca91e948 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ca91e9e8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7fd2ca91e9f8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca91eac0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca91ea20 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fd2ca91eb60 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ca91ec00 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7fd2ca91ec10 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca91ecd8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca91ec38 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fd2ca91ed78 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ca91ee18 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7fd2ca91ee28 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca91eef0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ca91ee50 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fd2ca91ef90 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ca91f030 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7fd2ca91f040 <col:14> Implicit
| |-FunctionDecl 0x7fd2ca91f108 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca91f068 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fd2ca925200 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ca9252a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7fd2ca9252b0 <col:15> Implicit
| |-FunctionDecl 0x7fd2ca925460 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fd2ca9252d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7fd2ca925350 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7fd2ca9253c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fd2ca925510 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca9256f8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fd2ca925570 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7fd2ca9255e8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7fd2ca925660 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fd2ca9257a8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7fd2ca9257f0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7fd2ca925918 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7fd2ca9259c8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7fd2ca925a28 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7fd2ca92ca68 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fd2ca92cb68 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7fd2ca92cb68
| | |-CXXConstructorDecl 0x7fd2ca92cc78 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7fd2ca92cc78
| | | `-ParmVarDecl 0x7fd2ca92cda0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7fd2ca92ce38 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fd2ca92cf60 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fd2ca9259c8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7fd2ca92d0b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fd2ca92d080 <col:8> 'float' xvalue .__sinval 0x7fd2ca9259c8
| |   |     `-CXXStaticCastExpr 0x7fd2ca92d050 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fd2ca92d018 <col:8> 'struct __float2' lvalue ParmVar 0x7fd2ca92cf60 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fd2ca925a28 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7fd2ca92d198 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fd2ca92d160 <col:8> 'float' xvalue .__cosval 0x7fd2ca925a28
| |   |     `-CXXStaticCastExpr 0x7fd2ca92d130 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fd2ca92d0f8 <col:8> 'struct __float2' lvalue ParmVar 0x7fd2ca92cf60 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7fd2ca92d1e8 <col:8>
| |-CXXRecordDecl 0x7fd2ca925a90 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7fd2ca925bb8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7fd2ca925c68 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7fd2ca925cc8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7fd2ca8c8a78 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fd2ca8c8b78 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7fd2ca8c8b78
| | |-CXXConstructorDecl 0x7fd2ca8c8c88 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7fd2ca8c8c88
| | | `-ParmVarDecl 0x7fd2ca8c8db0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7fd2ca8c8e48 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fd2ca8c8f70 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fd2ca925c68 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7fd2ca8c90c8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fd2ca8c9090 <col:8> 'double' xvalue .__sinval 0x7fd2ca925c68
| |   |     `-CXXStaticCastExpr 0x7fd2ca8c9060 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fd2ca8c9028 <col:8> 'struct __double2' lvalue ParmVar 0x7fd2ca8c8f70 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fd2ca925cc8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7fd2ca8c91a8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fd2ca8c9170 <col:8> 'double' xvalue .__cosval 0x7fd2ca925cc8
| |   |     `-CXXStaticCastExpr 0x7fd2ca8c9140 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fd2ca8c9108 <col:8> 'struct __double2' lvalue ParmVar 0x7fd2ca8c8f70 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7fd2ca8c91f8 <col:8>
| |-FunctionDecl 0x7fd2ca925e90 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fd2ca925d48 <col:40> col:45 'float'
| |-FunctionDecl 0x7fd2ca926090 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fd2ca925f48 <col:40> col:46 'double'
| |-FunctionDecl 0x7fd2ca92c400 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fd2ca926148 <col:42> col:47 'float'
| |-FunctionDecl 0x7fd2ca92c550 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fd2ca92c4b8 <col:42> col:48 'double'
| |-FunctionDecl 0x7fd2ca92c790 prev 0x7fd2ca91e200 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fd2ca92c608 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7fd2ca92c680 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7fd2ca92c6f8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7fd2ca8c85d0 <col:80, line:664:1>
| | | |-DeclStmt 0x7fd2ca92d250 <line:662:5, col:57>
| | | | `-VarDecl 0x7fd2ca92c8a8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fd2ca92d238 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fd2ca92d200 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fd2ca92cfc8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fd2ca92ca20 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fd2ca92ca08 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fd2ca92c988 <col:37> 'struct __float2 (float)' lvalue Function 0x7fd2ca925e90 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fd2ca92ca50 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fd2ca92c960 <col:53> 'float' lvalue ParmVar 0x7fd2ca92c608 '__x' 'float'
| | | |-BinaryOperator 0x7fd2ca92d340 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fd2ca92d2a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fd2ca92d290 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fd2ca92d268 <col:6> 'float *' lvalue ParmVar 0x7fd2ca92c680 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fd2ca92d328 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fd2ca92d2f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7fd2ca9259c8
| | | |     `-DeclRefExpr 0x7fd2ca92d2c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fd2ca92c8a8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fd2ca8c85a8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fd2ca8c8510 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fd2ca8c84f8 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fd2ca8c84d0 <col:34> 'float *' lvalue ParmVar 0x7fd2ca92c6f8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fd2ca8c8590 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fd2ca8c8558 <col:43, col:51> 'const float' lvalue .__cosval 0x7fd2ca925a28
| | |       `-DeclRefExpr 0x7fd2ca8c8530 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fd2ca92c8a8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fd2ca92c840 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8c87a0 prev 0x7fd2ca91e4e0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fd2ca8c8618 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7fd2ca8c8690 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7fd2ca8c8708 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7fd2ca8c95d0 <col:82, line:669:1>
| | | |-DeclStmt 0x7fd2ca8c9260 <line:667:5, col:57>
| | | | `-VarDecl 0x7fd2ca8c88b8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fd2ca8c9248 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fd2ca8c9210 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fd2ca8c8fd8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fd2ca8c8a30 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fd2ca8c8a18 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fd2ca8c8998 <col:38> 'struct __double2 (double)' lvalue Function 0x7fd2ca926090 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fd2ca8c8a60 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fd2ca8c8970 <col:53> 'double' lvalue ParmVar 0x7fd2ca8c8618 '__x' 'double'
| | | |-BinaryOperator 0x7fd2ca8c9350 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fd2ca8c92b8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fd2ca8c92a0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fd2ca8c9278 <col:6> 'double *' lvalue ParmVar 0x7fd2ca8c8690 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fd2ca8c9338 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fd2ca8c9300 <col:15, col:23> 'const double' lvalue .__sinval 0x7fd2ca925c68
| | | |     `-DeclRefExpr 0x7fd2ca8c92d8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fd2ca8c88b8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fd2ca8c95a8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fd2ca8c9510 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fd2ca8c94f8 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fd2ca8c94d0 <col:34> 'double *' lvalue ParmVar 0x7fd2ca8c8708 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fd2ca8c9590 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fd2ca8c9558 <col:43, col:51> 'const double' lvalue .__cosval 0x7fd2ca925cc8
| | |       `-DeclRefExpr 0x7fd2ca8c9530 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fd2ca8c88b8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fd2ca8c8850 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8c97a0 prev 0x7fd2ca925460 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fd2ca8c9618 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7fd2ca8c9690 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7fd2ca8c9708 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7fd2ca8c9cf8 <col:82, line:674:1>
| | | |-DeclStmt 0x7fd2ca8c9a88 <line:672:5, col:59>
| | | | `-VarDecl 0x7fd2ca8c98b8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fd2ca8c9a70 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fd2ca8c9a38 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fd2ca8c9a20 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fd2ca8c99d8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fd2ca8c99c0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fd2ca8c9998 <col:37> 'struct __float2 (float)' lvalue Function 0x7fd2ca92c400 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fd2ca8c9a08 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fd2ca8c9970 <col:55> 'float' lvalue ParmVar 0x7fd2ca8c9618 '__x' 'float'
| | | |-BinaryOperator 0x7fd2ca8c9b78 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fd2ca8c9ae0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fd2ca8c9ac8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fd2ca8c9aa0 <col:6> 'float *' lvalue ParmVar 0x7fd2ca8c9690 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fd2ca8c9b60 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fd2ca8c9b28 <col:15, col:23> 'const float' lvalue .__sinval 0x7fd2ca9259c8
| | | |     `-DeclRefExpr 0x7fd2ca8c9b00 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fd2ca8c98b8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fd2ca8c9cd0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fd2ca8c9c38 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fd2ca8c9c20 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fd2ca8c9bf8 <col:34> 'float *' lvalue ParmVar 0x7fd2ca8c9708 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fd2ca8c9cb8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fd2ca8c9c80 <col:43, col:51> 'const float' lvalue .__cosval 0x7fd2ca925a28
| | |       `-DeclRefExpr 0x7fd2ca8c9c58 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fd2ca8c98b8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fd2ca8c9850 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8c9ec8 prev 0x7fd2ca9256f8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fd2ca8c9d40 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7fd2ca8c9db8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7fd2ca8c9e30 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7fd2ca8ca428 <col:84, line:679:1>
| | | |-DeclStmt 0x7fd2ca8ca1b0 <line:677:5, col:59>
| | | | `-VarDecl 0x7fd2ca8c9fe0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fd2ca8ca198 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fd2ca8ca160 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fd2ca8ca148 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fd2ca8ca100 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fd2ca8ca0e8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fd2ca8ca0c0 <col:38> 'struct __double2 (double)' lvalue Function 0x7fd2ca92c550 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fd2ca8ca130 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fd2ca8ca098 <col:55> 'double' lvalue ParmVar 0x7fd2ca8c9d40 '__x' 'double'
| | | |-BinaryOperator 0x7fd2ca8ca2a0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fd2ca8ca208 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fd2ca8ca1f0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fd2ca8ca1c8 <col:6> 'double *' lvalue ParmVar 0x7fd2ca8c9db8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fd2ca8ca288 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fd2ca8ca250 <col:15, col:23> 'const double' lvalue .__sinval 0x7fd2ca925c68
| | | |     `-DeclRefExpr 0x7fd2ca8ca228 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fd2ca8c9fe0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fd2ca8ca400 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fd2ca8ca360 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fd2ca8ca348 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fd2ca8ca320 <col:34> 'double *' lvalue ParmVar 0x7fd2ca8c9e30 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fd2ca8ca3e0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fd2ca8ca3a8 <col:43, col:51> 'const double' lvalue .__cosval 0x7fd2ca925cc8
| | |       `-DeclRefExpr 0x7fd2ca8ca380 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fd2ca8c9fe0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fd2ca8c9f78 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ca8ca510 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca8ca470 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fd2ca8ca5b0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd2ca8ca708 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca8ca668 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fd2ca8ca7a8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd2ca8ca9c8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fd2ca8ca860 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fd2ca8ca8d8 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fd2ca8caa70 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd2ca8cabc8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca8cab28 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fd2ca8cac68 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd2ca8cadc0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca8cad20 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fd2ca8cae60 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd2ca8cb038 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fd2ca8caf18 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fd2ca8caf90 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fd2ca8cb0e0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd2ca8cb2a8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca8cb198 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7fd2ca8cb210 <col:29> col:35 'double'
| |-VarDecl 0x7fd2ca8cb368 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7fd2ca92f4a0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7fd2ca92f400 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7fd2ca92f540 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ca92f698 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7fd2ca92f5f8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7fd2ca92f738 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ca92f910 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ca92f7f0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd2ca92f868 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7fd2ca92f9b8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ca92fb10 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7fd2ca92fa70 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7fd2ca92fbb0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ca92fd08 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ca92fc68 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7fd2ca92fda8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7fd2ca92ff00 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7fd2ca92fe60 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7fd2ca92ffa0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7fd2ca8f4f98 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7fd2ca8f4fe8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7fd2ca8f5080 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7fd2ca8f50e8 <col:26> Implicit
|   `-ConstAttr 0x7fd2ca8f5130 <col:26> Implicit
|-LinkageSpecDecl 0x7fd2ca8f52b0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fd2ca8f5300 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2ca8f5398 <col:50> Implicit
|   `-ConstAttr 0x7fd2ca8f53e0 <col:50> Implicit
|-LinkageSpecDecl 0x7fd2ca8f5808 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7fd2ca8f5858 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7fd2ca8f58f0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7fd2ca8f5958 <col:26> Implicit
|   `-ConstAttr 0x7fd2ca8f59a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fd2ca8f5b20 <col:49> col:49 implicit C
| `-FunctionDecl 0x7fd2ca8f6000 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2ca8f6098 <col:49> Implicit
|   `-ConstAttr 0x7fd2ca8f60e0 <col:49> Implicit
|-LinkageSpecDecl 0x7fd2ca8f6508 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7fd2ca8f6558 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7fd2ca8f65f0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7fd2ca8f6658 <col:26> Implicit
|   `-ConstAttr 0x7fd2ca8f66a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fd2ca8f6820 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fd2ca8f6870 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2ca8f6908 <col:50> Implicit
|   `-ConstAttr 0x7fd2ca8f6950 <col:50> Implicit
|-LinkageSpecDecl 0x7fd2ca9300e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1485:1> line:307:8 C++
| |-TypedefDecl 0x7fd2ca930150 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7fd2ca8325e0 'long'
| |-TypedefDecl 0x7fd2ca9301c0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7fd2ca832680 'unsigned long'
| |-TypedefDecl 0x7fd2ca930230 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7fd2ca832700 'long double'
| |-NamespaceDecl 0x7fd2ca930288 prev 0x7fd2ca865658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7fd2ca865658 'std'
| | `-TypedefDecl 0x7fd2ca930348 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7fd2ca930310 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7fd2ca9302f0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7fd2ca832a10 'nullptr_t'
| |-NamespaceDecl 0x7fd2ca933000 prev 0x7fd2ca930288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fd2ca865658 'std'
| | `-NamespaceDecl 0x7fd2ca933068 prev 0x7fd2ca8656c0 <col:52, line:439:36> <scratch space>:343:1 __1 inline
| |   |-original Namespace 0x7fd2ca8656c0 '__1'
| |   |-UsingDecl 0x7fd2ca9330f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7fd2ca933140 <col:9> col:9 implicit Typedef 0x7fd2ca930150 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7fd2ca933190 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7fd2ca9331e0 <col:9> col:9 implicit Typedef 0x7fd2ca9301c0 'size_t'
| |   | `-TypedefType 0x7fd2ca95c080 'size_t' sugar
| |   |   |-Typedef 0x7fd2ca9301c0 'size_t'
| |   |   `-BuiltinType 0x7fd2ca832680 'unsigned long'
| |   |-UsingDecl 0x7fd2ca933230 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7fd2ca933280 <col:9> col:9 implicit Typedef 0x7fd2ca930230 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7fd2ca9332c8 prev 0x7fd2ca933000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fd2ca865658 'std'
| | `-NamespaceDecl 0x7fd2ca933330 prev 0x7fd2ca933068 <col:52, line:439:36> <scratch space>:344:1 __1 inline
| |   |-original Namespace 0x7fd2ca8656c0 '__1'
| |   |-ClassTemplateDecl 0x7fd2ca933640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7fd2ca933398 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fd2ca933438 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fd2ca9335a8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7fd2ca933878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fd2ca933a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fd2ca9338c0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca933970 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7fd2ca933c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fd2ca933da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7fd2ca933c60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca933d10 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7fd2ca933fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fd2ca935918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca935800 <line:402:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fd2ca935880 <line:403:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7fd2ca935b90 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7fd2ca935c38 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7fd2ca832520 'void'
| |   |-ClassTemplateDecl 0x7fd2ca935dc8 <line:405:1, line:406:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7fd2ca935cb0 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca935d30 <line:406:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7fd2ca936040 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7fd2ca9360e8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca935cf0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca935cb0 '_Tp'
| |   |-ClassTemplateDecl 0x7fd2ca936318 <line:408:1, line:409:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7fd2ca936160 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9361d8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fd2ca936280 <line:409:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7fd2ca9365e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca936668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7fd2ca936988 <line:411:1, line:412:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca936730 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fd2ca936788 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fd2ca936800 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7fd2ca9368f0 <line:412:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca936c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca936cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7fd2ca936d80 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7fd2ca9367d0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd2ca936788 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9370f8 <line:413:1, line:414:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd2ca936df8 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7fd2ca936e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7fd2ca937290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca937430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7fd2ca9374d8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7fd2ca936eb0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fd2ca936e68 '_Then'
| |   |-TypeAliasTemplateDecl 0x7fd2ca938930 <line:417:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca937560 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9375b8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fd2ca937628 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7fd2ca9388d0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7fd2ca938860 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca938b40 <line:420:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca938990 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9389e8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca938aa8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca938e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca938e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca939110 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca938f00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca939280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9393f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7fd2ca939570 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7fd2ca939500 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9397b0 <line:423:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9395f8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca939660 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fd2ca939718 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7fd2ca939a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fd2ca939ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fd2caac0480 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7fd2caac0710 prev 0x7fd2caac0480 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fd2caaef988 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7fd2caaefc68 prev 0x7fd2caaef988 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fd2caaf1d38 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7fd2caaf1fd0 prev 0x7fd2caaf1d38 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7fd2caaf6fe8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7fd2caaf7280 prev 0x7fd2caaf6fe8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca939d80 <line:424:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca939b70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca939ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca93a060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7fd2ca93a108 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca939bb0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca939b70 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd2ca93a4a0 <line:427:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca93a190 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fd2ca93a1f8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7fd2ca93a440 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca93a3d0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fd2ca93a8c8 <line:433:1, line:440:1> line:437:1 addressof
| |   | |-TemplateTypeParmDecl 0x7fd2ca93a4f0 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca93a830 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fd2ca93a6b8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7fd2ca93ac98 <line:438:1, line:440:1>
| |   |   | `-ReturnStmt 0x7fd2ca93ac80 <line:439:5, col:35>
| |   |   |   `-CallExpr 0x7fd2ca93ac50 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7fd2ca93ac00 <col:12> '<builtin fn type>' Function 0x7fd2ca93aaa8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7fd2ca93ac28 <col:32> '_Tp' lvalue ParmVar 0x7fd2ca93a6b8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7fd2ca93a920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   |-VisibilityAttr 0x7fd2ca93a968 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7fd2ca93a978 <line:296:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7fd2ca93af80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7fd2ca93acb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca93aee8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7fd2ca93ada8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7fd2ca93afd8 <line:499:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7fd2ca93b0f8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7fd2ca93b1d0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7fd2ca93b3f8 <line:503:1, line:515:1> line:504:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7fd2ca93b238 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca93b2b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7fd2ca93b360 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7fd2ca93b6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fd2ca93b708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7fd2ca93be00 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fd2ca93be60 <col:53> '_Tp' NonTypeTemplateParm 0x7fd2ca93b2b8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7fd2ca93be98 <line:507:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fd2ca93b280 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fd2ca93b238 '_Tp'
| |   | | |-TypedefDecl 0x7fd2ca93bf00 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7fd2ca93b630 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7fd2ca93b360 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fd2ca93c098 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7fd2ca93c368 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7fd2ca93c350 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7fd2ca93c328 <col:73> 'const _Tp' lvalue Var 0x7fd2ca93be00 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca93c130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca93c178 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7fd2ca93c1e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7fd2ca93c3c8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7fd2ca93c3b0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7fd2ca93c388 <col:69> 'const _Tp' lvalue Var 0x7fd2ca93be00 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7fd2ca93c280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |   `-VisibilityAttr 0x7fd2ca93c2c8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca93c8a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7fd2ca93ee58 prev 0x7fd2ca93c8a8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fd2ca93ef00 <line:506:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fd2ca93ef88 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fd2ca93ef70 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7fd2ca93f018 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fd2ca93c870 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fd2ca93b280 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fd2ca93b238 '_Tp'
| |   | | |   `-BuiltinType 0x7fd2ca832540 '_Bool'
| |   | | |-TypedefDecl 0x7fd2ca93f080 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7fd2ca93c9b0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7fd2ca93c8a8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fd2ca93f168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fd2ca93f238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fd2ca93f2b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fd2ca93f358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca93cb80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7fd2ca93dca8 prev 0x7fd2ca93cb80 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fd2ca93dd50 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fd2ca93ddd8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fd2ca93ddc0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7fd2ca93de68 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fd2ca93c870 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fd2ca93b280 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fd2ca93b238 '_Tp'
| |   | | |   `-BuiltinType 0x7fd2ca832540 '_Bool'
| |   | | |-TypedefDecl 0x7fd2ca93ded0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7fd2ca93cc80 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7fd2ca93cb80 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fd2ca93e008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fd2ca93e0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fd2ca93e150 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fd2ca93ea00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7fd2ca989500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7fd2ca989730 prev 0x7fd2ca989500 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7fd2ca989800 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7fd2ca989890 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7fd2ca989870 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7fd2ca989920 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7fd2ca9894b0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7fd2ca93b280 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fd2ca93b238 '_Tp'
| |   |   |   `-BuiltinType 0x7fd2ca832680 'unsigned long'
| |   |   |-TypedefDecl 0x7fd2ca989988 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7fd2ca989600 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7fd2ca989500 'integral_constant'
| |   |   |-CXXConversionDecl 0x7fd2ca989ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7fd2ca989b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-CXXMethodDecl 0x7fd2ca989c00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7fd2ca989ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |-VarDecl 0x7fd2ca93c770 parent 0x7fd2ca93b360 prev 0x7fd2ca93be00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7fd2ca93cac0 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7fd2ca93c9d0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fd2ca93c838 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fd2ca93c820 <line:528:31> '_Bool' true
| |   |   `-RecordType 0x7fd2ca93c9b0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7fd2ca93c8a8 'integral_constant'
| |   |-TypedefDecl 0x7fd2ca93cd90 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7fd2ca93cca0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fd2ca93cb40 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fd2ca93cb28 <line:529:31> '_Bool' false
| |   |   `-RecordType 0x7fd2ca93cc80 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7fd2ca93cb80 'integral_constant'
| |   |-ClassTemplateDecl 0x7fd2ca93d3b0 <line:535:1, line:536:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca93d200 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7fd2ca93d258 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fd2ca93d318 <line:536:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7fd2ca93eb78 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca93d950 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fd2ca93d698 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fd2ca93ea98 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca93eb78 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd2ca93f3f0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca93f6c0 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca93f4a8 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fd2ca93fff8 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9403e0 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9400b0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd2ca940118 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fd2ca940978 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7fd2ca940bc0 <line:550:1, line:551:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7fd2ca940a30 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fd2ca940a98 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fd2ca940b28 <line:551:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fd2ca9410f8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7fd2ca941340 <line:555:1, line:556:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9411c0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7fd2ca941218 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fd2ca9412a8 <line:556:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7fd2ca941c30 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca941850 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9415f8 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fd2ca941b50 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca941c30 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd2ca941eb8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9422a0 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fd2ca941f70 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd2ca941fd8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fd2ca942838 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7fd2ca942a80 <line:568:1, line:569:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7fd2ca9428f0 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fd2ca942958 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fd2ca9429e8 <line:569:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fd2ca942f88 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7fd2ca943158 <line:573:1, line:574:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7fd2ca943040 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fd2ca9430c0 <line:574:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7fd2ca943618 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7fd2ca9437e8 <line:577:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7fd2ca9436d0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fd2ca943750 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7fd2ca943a68 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca943a68 <line:578:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd2ca943ca0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca949708 <line:580:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca943d58 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fd2ca9499b0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca949cf8 <line:582:1, line:583:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd2ca949a68 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fd2ca949ad8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fd2ca94a300 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca94a8b8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fd2ca94a3b8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fd2ca94a428 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fd2ca94a498 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fd2ca94a508 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fd2ca94b1f0 <line:586:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7fd2ca94b3c8 <line:590:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7fd2ca94b2a8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fd2ca94b330 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7fd2ca94b688 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca94b688 <line:591:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd2ca94b8c0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca94bb18 <line:593:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca94b978 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fd2ca94bdc0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca94c108 <line:595:1, line:596:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd2ca94be78 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fd2ca94bee8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fd2ca94c710 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca94cc68 <line:598:1, line:600:73> line:599:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fd2ca94c7c8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fd2ca94c838 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fd2ca94c8a8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fd2ca94c918 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fd2ca94e600 <line:599:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7fd2ca94e7d8 <line:603:1, line:604:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7fd2ca94e6b8 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca94e740 <line:604:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7fd2ca94ed80 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7fd2ca94ef88 <line:610:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7fd2ca94ee38 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca94eef0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca94f200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca94f288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca94f4d8 <line:611:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca94f340 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca94f638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca94f7b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7fd2ca94f9b8 <line:620:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7fd2ca94f868 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca94f920 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca94fc30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca94fcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca94ff08 <line:621:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca94fd70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca950048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca9501c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7fd2ca9503c8 <line:630:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7fd2ca950278 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca950330 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7fd2ca937868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fd2ca9378b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7fd2ca937958 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fd2ca9502c0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fd2ca950278 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fd2caabf538 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fd2caabf780 prev 0x7fd2caabf538 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7fd2caabf858 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fd2caabf820 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fd2ca9502c0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca950278 '_Tp'
| |   |       `-BuiltinType 0x7fd2ca8326e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca937b68 <line:631:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9379d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca937ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca937de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7fd2ca937e88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca937a10 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca9379d0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd2ca938140 <line:633:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca937f00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca9380e0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca938070 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9382d8 <line:638:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7fd2ca938190 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca938240 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7fd2ca938550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fd2ca938598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7fd2ca938640 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fd2ca9381d0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fd2ca938190 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fd2caabf940 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fd2caabfb90 prev 0x7fd2caabf940 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7fd2caabfc68 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fd2caabfc30 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fd2ca9381d0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca938190 '_Tp'
| |   |       `-BuiltinType 0x7fd2ca8326e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca952688 <line:639:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9386b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca9527c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca952900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7fd2ca9529a8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca938700 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca9386b8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd2ca952c60 <line:641:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca952a20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca952c00 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca952b90 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca952df8 <line:646:1, line:647:80> line:646:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7fd2ca952cb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca952d60 <col:22, line:647:80> line:646:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7fd2ca953070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fd2ca9530b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7fd2ca953410 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7fd2ca9533a0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7fd2caabf258 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fd2caabf468 prev 0x7fd2caabf258 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7fd2caabfd50 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7fd2caabfd00 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7fd2caabfce0 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7fd2caabfc68 'type'
| |   |         `-SubstTemplateTypeParmType 0x7fd2caabfc30 'double' sugar
| |   |           |-TemplateTypeParmType 0x7fd2ca9381d0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7fd2ca938190 '_Tp'
| |   |           `-BuiltinType 0x7fd2ca8326e0 'double'
| |   |-TypeAliasTemplateDecl 0x7fd2ca9536d0 <line:649:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca953488 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca953670 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca953600 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca953838 <line:654:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7fd2ca953720 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca9537a0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fd2ca953af0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7fd2ca953bc8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca953bc8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd2ca953e30 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7fd2ca954038 <line:657:1, line:658:63> line:657:50 is_void
| |   | |-TemplateTypeParmDecl 0x7fd2ca953ee8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca953fa0 <col:22, line:658:63> line:657:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca9542b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca954518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7fd2ca954718 <line:667:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7fd2ca954600 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca954680 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fd2ca9549d0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7fd2ca954ad0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca954ad0 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7fd2ca954d40 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7fd2ca954f48 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca954df8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca954eb0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca9551c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca955428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7fd2ca955698 <line:674:1, line:675:66> line:674:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca9554e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca955600 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca955910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca955b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7fd2ca955cf8 <line:685:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7fd2ca955be0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca955c60 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fd2ca955fb0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7fd2ca956088 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9563c8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca956710 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca956a60 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca956da8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9570e8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca957428 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca957788 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca957ad0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca957e20 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca958170 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9584c0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca958810 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca958b60 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca958eb0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca959220 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd2ca959600 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7fd2caabfe40 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fd2caac0060 prev 0x7fd2caabfe40 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca956088 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7fd2ca9562f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9563c8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7fd2ca956630 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca956710 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7fd2ca956980 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca956a60 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7fd2ca956cd0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca956da8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7fd2ca957010 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9570e8 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7fd2ca957350 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca957428 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7fd2ca9576a8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca957788 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7fd2ca9579f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca957ad0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7fd2ca957d40 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca957e20 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7fd2ca958090 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca958170 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7fd2ca9583e0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9584c0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7fd2ca958730 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca958810 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7fd2ca958a80 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca958b60 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7fd2ca958dd0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca958eb0 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7fd2ca959120 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca959220 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7fd2ca959490 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca959600 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7fd2ca959870 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7fd2ca959a78 <line:708:1, line:709:67> line:708:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7fd2ca959928 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca9599e0 <col:22, line:709:67> line:708:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7fd2ca959cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fd2ca959f58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7fd2caabf008 <col:1, line:709:67> line:708:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fd2caac0148 prev 0x7fd2caabf008 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7fd2ca95a128 <line:718:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fd2ca95a010 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca95a090 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fd2ca95a3e0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7fd2ca95a4c0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7fd2ca95a810 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7fd2ca95ab60 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca95a4c0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7fd2ca95a730 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca95a810 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7fd2ca95aa80 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca95ab60 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7fd2ca95add0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7fd2ca95afd8 <line:723:1, line:724:73> line:723:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fd2ca95ae88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca95af40 <col:22, line:724:73> line:723:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca95b250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca95b4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7fd2ca95b6c8 <line:733:1, line:734:26> line:733:50 is_array
| |   | |-TemplateTypeParmDecl 0x7fd2ca95b570 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca95b630 <col:22, line:734:26> line:733:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca95b940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca95b9c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca95bc88 <line:735:1, line:736:25> line:735:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd2ca95ba80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca95bdd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca95bf50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca95c2f8 <line:737:1, line:738:25> line:737:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd2ca95c008 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca95c0b0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd2ca95c448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca95c600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7fd2ca95c7d8 <line:747:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca95c6b8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca95c740 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fd2ca95ca90 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca95cce8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fd2ca95cb48 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca95cf60 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7fd2ca95d168 <line:750:1, line:751:66> line:750:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca95d018 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca95d0d0 <col:22, line:751:66> line:750:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca95d3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca95de60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7fd2ca95e068 <line:760:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fd2ca95df18 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca95dfd0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca95e2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca95e368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca95e5e8 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd2ca95e420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca95e728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca95e8a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7fd2ca95eaa8 <line:763:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fd2ca95e958 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca95ea10 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca95ed20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca95f600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca95f8b8 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd2ca95f6b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca95f9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca95fb70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7fd2ca95fd78 <line:768:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7fd2ca95fc28 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca95fce0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca95fff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca960078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9602f8 <line:769:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd2ca960130 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca960438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca961600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca961888 <line:771:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9616b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca9619c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca961b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7fd2ca961d48 <line:788:1, line:789:56> line:788:50 is_union
| |   | |-TemplateTypeParmDecl 0x7fd2ca961bf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca961cb0 <col:22, line:789:56> line:788:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca961fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca9621a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7fd2ca9623a8 <line:808:1, line:809:56> line:808:50 is_class
| |   | |-TemplateTypeParmDecl 0x7fd2ca962260 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca962310 <col:22, line:809:56> line:808:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca962668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca962848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7fd2ca962ac0 <line:831:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7fd2ca962900 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca962968 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fd2ca962a28 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca962d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca962de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9630a0 <line:832:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca962ea0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca963208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca9633b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7fd2ca963468 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7fd2ca9634d0 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7fd2ca964600 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7fd2ca964918 <line:844:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fd2ca9646b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fd2ca964880 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7fd2ca964778 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7fd2ca964b58 <line:845:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7fd2ca964970 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fd2ca964ac0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7fd2ca964a00 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7fd2ca964d18 <line:846:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fd2ca964bb0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fd2ca964c80 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7fd2ca964fd8 <line:847:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7fd2ca964d68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fd2ca964f40 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7fd2ca964e08 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7fd2ca965198 <line:848:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7fd2ca965030 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7fd2ca965100 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7fd2ca965970 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7fd2ca9651e8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca965860 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca965828 <col:29, line:855:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fd2ca9656f8 <line:851:29, line:854:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7fd2ca9655a8 <line:851:29, line:853:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7fd2ca965478 <line:851:29, line:852:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7fd2ca965328 <line:851:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7fd2ca965438 <line:852:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7fd2ca965568 <line:853:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fd2ca9656b8 <line:854:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca9657e8 <line:855:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca9658d8 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7fd2ca9660c8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca966360 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca966180 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca966630 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7fd2ca966838 <line:861:1, line:862:41> line:861:50 is_function
| |   | |-TemplateTypeParmDecl 0x7fd2ca9666e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9667a0 <col:22, line:862:41> line:861:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca966ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca967228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7fd2ca9674d8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9672e0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca967358 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9673c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7fd2ca967440 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7fd2ca9678e0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7fd2ca967ab8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca967998 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca967a20 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fd2ca967d70 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9680c8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fd2ca967e28 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd2ca967e98 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fd2ca9683c8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fd2ca968600 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca968480 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca968530 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7fd2ca968880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca968bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fd2ca968d98 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca968c78 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca968d00 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fd2ca969050 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca969378 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fd2ca969108 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca969178 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fd2ca969600 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7fd2ca969808 <line:901:1, line:902:73> line:901:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca9696b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca969770 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca969a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca969ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7fd2ca969ee8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca969da0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca969e50 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca96a160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca96a600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7fd2ca96a808 <line:924:1, line:925:55> line:924:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7fd2ca96a6b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca96a770 <col:22, line:925:55> line:924:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca96aa80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca96ac68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7fd2ca96ae68 <line:950:1, line:952:70> line:950:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7fd2ca96ad20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca96add0 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca96b0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca96b518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7fd2ca96b748 <line:961:1, line:964:66> line:961:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7fd2ca96b600 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca96b6b0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca96b9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca96bf18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7fd2ca96c118 <line:973:1, line:978:71> line:973:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7fd2ca96bfd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca96c080 <col:22, line:978:71> line:973:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7fd2ca96c390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fd2ca96cb88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7fd2ca96cc90 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca96cc90 <line:980:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7fd2ca96cdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca96cf40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7fd2ca96d148 <line:989:1, line:993:63> line:989:50 is_object
| |   | |-TemplateTypeParmDecl 0x7fd2ca96cff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca96d0b0 <col:22, line:993:63> line:989:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca96d3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca96da68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7fd2ca96dc68 <line:1002:1, line:1003:68> line:1002:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7fd2ca96db20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca96dbd0 <col:22, line:1003:68> line:1002:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca96dee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca96e1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7fd2ca96e290 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7fd2ca96e3b8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7fd2ca96e6c0 <line:1014:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7fd2ca96e450 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fd2ca96e628 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7fd2ca96e4e8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7fd2ca96e858 <line:1015:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7fd2ca96e718 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7fd2ca96e7c0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7fd2ca96e9e8 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7fd2ca96e8c8 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca96e950 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7fd2ca96f188 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7fd2ca96f748 <line:1025:1, line:1028:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7fd2ca96f240 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca96f638 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca96f600 <col:29, line:1027:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fd2ca96f4c8 <line:1025:29, line:1026:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fd2ca96f378 <line:1025:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fd2ca96f488 <line:1026:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca96f5b8 <line:1027:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca96f6b0 <line:1028:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7fd2ca96fa10 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7fd2ca96fab8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca96f280 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca96f240 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca96fd10 <line:1030:1, line:1031:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca96fb30 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca96ffa0 <line:1031:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7fd2ca970048 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7fd2ca96fb71 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7fd2ca96fb70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca96fb30 '_Tp'
| |   |-ClassTemplateDecl 0x7fd2ca970208 <line:1033:1, line:1034:51> line:1033:50 add_const
| |   | |-TemplateTypeParmDecl 0x7fd2ca9700c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca970170 <col:22, line:1034:51> line:1033:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca970480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca9704c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7fd2ca970ac0 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7fd2ca970a50 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca970d80 <line:1037:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca970b38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca970d20 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca970cb0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9712d0 <line:1042:1, line:1045:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7fd2ca970dd0 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9711c0 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca971188 <col:29, line:1044:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fd2ca971058 <line:1042:29, line:1043:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fd2ca970f08 <line:1042:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fd2ca971018 <line:1043:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca971148 <line:1044:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca971238 <line:1045:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7fd2ca971c00 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7fd2ca971ca8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca970e10 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca970dd0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca971f00 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca971d20 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca972190 <line:1048:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7fd2ca972238 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7fd2ca971d64 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7fd2ca971d60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca971d20 '_Tp'
| |   |-ClassTemplateDecl 0x7fd2ca9723f8 <line:1050:1, line:1051:54> line:1050:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7fd2ca9722b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca972360 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca972670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca9726b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7fd2ca9732a0 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7fd2ca973230 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca973560 <line:1054:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca973318 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca973500 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca973490 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9736f8 <line:1059:1, line:1060:78> line:1059:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7fd2ca9735b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca973660 <col:22, line:1060:78> line:1059:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca973970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca9739b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7fd2ca973d10 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fd2ca973ca0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca973fd0 <line:1063:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca973d88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca973f70 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca973f00 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca974168 <line:1068:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7fd2ca974020 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9740d0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca974a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca974a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7fd2ca974b20 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca974060 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca974020 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca974d68 <line:1069:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd2ca974b98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca974ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca974fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fd2ca975088 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca974be0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca974b98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9752c8 <line:1071:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd2ca975100 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca975408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca975540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fd2ca9755e8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca975140 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca975100 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd2ca975ea0 <line:1075:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca975660 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca975e40 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca9757d0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca976188 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fd2ca975ef0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca976078 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca976028 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca9760f0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fd2ca976450 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7fd2ca9764f8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca975f30 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca975ef0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca976750 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca976570 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca9769e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7fd2ca976ab8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7fd2ca976a80 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7fd2ca9765b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca976570 '_Tp'
| |   |-ClassTemplateDecl 0x7fd2ca976c78 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fd2ca976b30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca976be0 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca976f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca976f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7fd2ca977310 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fd2ca9772a0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca9775d0 <line:1087:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca977388 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca977570 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca977500 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9778b8 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fd2ca977620 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9777a8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca977758 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca977820 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fd2ca977b80 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7fd2ca977c28 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca977660 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca977620 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca97bed0 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca977ca0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca97c160 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7fd2ca97c238 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7fd2ca97c200 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7fd2ca977ce0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca977ca0 '_Tp'
| |   |-ClassTemplateDecl 0x7fd2ca97c3f8 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fd2ca97c2b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca97c360 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca97c670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca97c6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7fd2ca97ca30 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fd2ca97c9c0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca97ccf0 <line:1099:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca97caa8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca97cc90 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca97cc20 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fd2ca97cfc8 <line:1106:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fd2ca97cd40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca97cf30 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7fd2ca97ce00 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7fd2ca97d258 <line:1107:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fd2ca97d020 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca97d1c0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7fd2ca97d0b8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7fd2ca97d650 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
| |   | |-TemplateTypeParmDecl 0x7fd2ca97d2b0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca97d5b8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7fd2ca97d7b8 <line:1123:1, line:1126:1> line:1124:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7fd2ca97d6a0 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca97d720 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7fd2ca97da30 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7fd2ca97dd90 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fd2ca97dd20 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca97df38 <line:1128:1, line:1131:1> line:1129:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7fd2ca97de20 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca97dea0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7fd2ca97e1b0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7fd2ca97e510 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fd2ca97e4a0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca97e7d0 <line:1134:1, line:1135:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca97e588 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca97e770 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca97e700 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca97e9b0 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7fd2ca97e820 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca97e888 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fd2ca97e918 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7fd2ca951888 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7fd2ca951940 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7fd2ca951a68 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7fd2ca951ba0 <line:1146:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7fd2ca951db8 <line:1151:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca951c68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca951d20 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca952030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca952078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7fd2ca952120 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca951cb0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca951c68 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca952368 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fd2ca952198 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca9524a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca980800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fd2ca9808a8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca9521e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca952198 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca980ae8 <line:1153:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7fd2ca980920 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca980c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca980d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fd2ca980e08 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca980960 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca980920 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca981048 <line:1154:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7fd2ca980e80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca981188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9812c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fd2ca981368 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca980ec0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca980e80 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9815a8 <line:1155:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9813e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca9816e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca981868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fd2ca981910 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca981420 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca9813e0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd2ca981bd0 <line:1158:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca981988 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca981b70 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca981b00 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9821a0 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7fd2ca981c20 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca982090 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca982058 <col:16, line:1165:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fd2ca981d58 <line:1164:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca982018 <line:1165:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca982108 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7fd2ca982460 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7fd2ca982680 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7fd2ca982630 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7fd2ca9825b0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca983930 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9826f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca983bc0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7fd2ca983c68 <line:1169:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca982740 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca9826f8 '_Tp'
| |   |-ClassTemplateDecl 0x7fd2ca983e28 <line:1171:1, line:1172:58> line:1171:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7fd2ca983ce0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca983d90 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca9840a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca9840e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7fd2ca9846b0 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fd2ca984640 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca9849b0 <line:1175:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca984728 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca984950 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca9848e0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca984c98 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7fd2ca984a00 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca984b88 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca984b38 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca984c00 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7fd2ca9851f8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca985490 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9852b0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca985760 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7fd2ca985ab8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7fd2ca985820 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9859a8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca985958 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca985a20 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fd2ca985fb8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca986250 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca986070 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca986520 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7fd2ca986728 <line:1191:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7fd2ca9865d8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca986690 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca986a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca986cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7fd2ca987008 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7fd2ca986d70 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca986ef8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca986ea8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca986f70 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7fd2ca987568 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca987800 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca987620 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca987ad0 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7fd2ca987e28 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fd2ca987b88 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca987d18 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca987cc8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca987d90 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fd2ca988328 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9885c0 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9883e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9888a8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7fd2ca988aa8 <line:1211:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fd2ca988960 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca988a10 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca988d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca988fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7fd2ca9891a8 <line:1220:1, line:1221:44> line:1220:50 rank
| |   | |-TemplateTypeParmDecl 0x7fd2ca989060 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca989110 <col:22, line:1221:44> line:1220:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca989420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca989d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca989fd8 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd2ca989df8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca98a128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca98a548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98a888 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd2ca98a600 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca98a678 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd2ca98a9d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca98ad88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7fd2ca98b038 <line:1234:1, line:1235:44> line:1234:68 extent
| |   | |-TemplateTypeParmDecl 0x7fd2ca98ae40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca98aee0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7fd2ca98af38 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7fd2ca98aea8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7fd2ca98afa0 <col:40, line:1235:44> line:1234:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca98b300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca98b488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98b800 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca98b540 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca98b988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca98bc38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98bfc0 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca98be68 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fd2ca98bd70 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fd2ca98bcf0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca98bd70 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7fd2ca98c128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca98c658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98ca30 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca98c710 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca98c788 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd2ca98cbb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca98ceb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98d2f0 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca98d190 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fd2ca98d058 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fd2ca98cf70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca98cfe8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca98d058 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7fd2ca98d458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca98d9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7fd2ca98dbb8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7fd2ca98da70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca98db20 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca98de30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca98de78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7fd2ca98df20 <line:1253:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca98dab0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca98da70 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98e178 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd2ca98df98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca98e2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca98e400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fd2ca98e4a8 <line:1255:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca98dfe0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca98df98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98e800 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd2ca98e520 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca98e598 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd2ca98e948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca98ea80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fd2ca98eb28 <line:1257:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd2ca98e560 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca98e520 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd2ca98ede0 <line:1260:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca98eba0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca98ed80 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca98ed10 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca98ef78 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7fd2ca98ee30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca98eee0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca98f1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca98f238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7fd2ca98f2e0 <line:1266:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca98ee70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd2ca98ee30 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98f538 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd2ca98f358 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca98f688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca98f800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fd2ca98fa00 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca98f990 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca98fd08 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd2ca98fa78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca98faf8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd2ca98fe58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca98ff90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fd2ca990150 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca9900e0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca9903d0 <line:1273:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca9901c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca990370 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca990300 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9905a8 <line:1278:1, line:1281:1> line:1279:8 __decay
| |   | |-TemplateTypeParmDecl 0x7fd2ca990420 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca990498 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fd2ca990510 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7fd2ca991890 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7fd2ca991a50 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7fd2ca9919e0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca991cb0 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca991ac8 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7fd2ca991f40 <line:1284:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7fd2ca991fd8 <line:1285:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7fd2ca992a70 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7fd2ca992a00 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca992c38 <line:1299:1, line:1306:1> line:1300:29 decay
| |   | |-TemplateTypeParmDecl 0x7fd2ca992ae8 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca992ba0 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca992eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca992ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7fd2ca992f90 <line:1302:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7fd2ca9930e0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7fd2ca993070 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7fd2ca993138 <line:1304:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7fd2ca993500 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7fd2ca993490 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca993800 <line:1309:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca993578 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca993760 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca9936f0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca993998 <line:1314:1, line:1315:59> line:1314:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7fd2ca993850 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca993900 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca993c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca993df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7fd2ca993ff8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7fd2ca993eb0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca993f60 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca994270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca994458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7fd2ca994658 <line:1333:1, line:1334:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7fd2ca994510 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9945c0 <col:22, line:1334:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca9948e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca994a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7fd2ca994ce0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7fd2ca994b20 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fd2ca994b88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7fd2ca994c48 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca994f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca995178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7fd2ca9953f0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7fd2ca995230 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fd2ca995298 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fd2ca995358 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca995690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca996a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7fd2ca996c48 <line:1489:1, line:1491:56> line:1490:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7fd2ca996b00 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca996bb0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca996ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca9970a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7fd2ca9972a8 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7fd2ca997160 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca997210 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca997520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca997708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7fd2ca997908 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7fd2ca9977c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca997870 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca997b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca997d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7fd2ca997f68 <line:1567:1, line:1568:59> line:1567:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7fd2ca997e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca997ed0 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca9981e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca9983c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7fd2ca998610 <line:1577:1, line:1582:1> line:1578:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7fd2ca998480 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9984e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca998578 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7fd2ca9988f0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fd2ca998998 <line:1580:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7fd2ca9984c0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fd2ca998480 '_Hp'
| |   | | `-TypedefDecl 0x7fd2ca998a00 <line:1581:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fd2ca998530 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9984e8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99c318 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99c530 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99c740 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99c950 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99cc00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99ce10 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99d020 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99d230 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99d440 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99d650 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bb2e8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bb500 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bb710 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bb920 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bbb30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bbd40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7fd2ca9c3a88 prev 0x7fd2ca9bbd40 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fd2ca9c3b58 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7fd2ca9c3b20 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7fd2ca9984c0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fd2ca998480 '_Hp'
| |   | | |   `-BuiltinType 0x7fd2ca832580 'signed char'
| |   | | `-TypedefDecl 0x7fd2ca9c3be8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7fd2ca9c3bb0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7fd2ca998530 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7fd2ca9984e8 '_Tp'
| |   | |     `-RecordType 0x7fd2ca9bbc30 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7fd2ca9bbb30 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bc040 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bc250 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bc460 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bc670 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca9bc890 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7fd2ca9bcaa0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7fd2ca9cb368 prev 0x7fd2ca9bcaa0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7fd2ca9cb438 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7fd2ca9cb400 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7fd2ca9984c0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fd2ca998480 '_Hp'
| |   |   |   `-BuiltinType 0x7fd2ca832620 'unsigned char'
| |   |   `-TypedefDecl 0x7fd2ca9cb4c8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7fd2ca9cb490 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7fd2ca998530 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7fd2ca9984e8 '_Tp'
| |   |       `-RecordType 0x7fd2ca9bc990 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7fd2ca9bc890 '__type_list'
| |   |-CXXRecordDecl 0x7fd2ca998a78 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7fd2ca998b98 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7fd2ca998c98 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7fd2ca998e40 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fd2ca998d78 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7fd2ca998ff0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fd2ca998f00 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7fd2ca9990e0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fd2ca9990e0
| |   |-ClassTemplateDecl 0x7fd2ca9992d8 <line:1594:1, line:1599:1> line:1595:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7fd2ca9991b8 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca999240 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7fd2ca999550 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7fd2ca9995f8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7fd2ca999728 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7fd2ca999778 <line:1598:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fd2ca999200 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fd2ca9991b8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca999d00 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca999ed0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99a0a0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99a270 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99a440 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99a610 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99bc00 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99bdc8 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7fd2ca99bf88 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7fd2ca99c150 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7fd2ca999800 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7fd2ca999928 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7fd2ca9999d8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7fd2ca999a40 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7fd2ca999b68 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7fd2ca999c80 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7fd2ca99d860 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7fd2ca99d770 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7fd2ca99d750 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fd2ca99d650 '__type_list'
| |   |-ClassTemplateDecl 0x7fd2ca99da48 <line:1618:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7fd2ca99d8b8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca99d938 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7fd2ca99d9b0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca99e0b0 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca99df50 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca99dd68 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fd2ca99dce8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca99dd68 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7fd2ca99e380 <line:1621:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fd2ca99e7c0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7fd2ca99e750 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca99ec70 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca99eac0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca99e928 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fd2ca99e838 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd2ca99e8a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca99e928 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7fd2ca99ef40 <line:1631:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fd2ca99f590 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7fd2ca99f520 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca99f798 <line:1640:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7fd2ca99f608 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca99f688 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fd2ca99f700 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca99fd60 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca99fc00 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca99fa78 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fd2ca99f9f8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca99fa78 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fd2ca9a0248 <line:1643:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fd2ca9a04f8 <line:1645:1, line:1653:1> line:1646:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a0310 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a0378 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a03e0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7fd2ca9a0460 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7fd2ca9a0850 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7fd2ca9a08e8 <line:1648:1, col:8> col:1 private
| |   |   |-VarDecl 0x7fd2ca9a0920 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fd2ca9a0a48 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fd2ca9a09d0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fd2ca9a0980 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a03e0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fd2ca9a09a8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a0378 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fd2ca9a09f8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a03e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fd2ca9a0a20 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a0378 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7fd2ca9a0a88 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fd2ca9a0bb0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fd2ca9a0b38 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fd2ca9a0ae8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a0378 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fd2ca9a0b10 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a03e0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fd2ca9a0b60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a03e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fd2ca9a0b88 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a0378 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7fd2ca9a0c00 <line:1651:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fd2ca9a0c38 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7fd2ca9a0da8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7fd2ca9a0d78 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7fd2ca9a0d00 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7fd2ca9a0c98 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a0310 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7fd2ca9a0ce8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7fd2ca9a0cc0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fd2ca9a0a88 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7fd2ca9a0d28 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fd2ca9a0920 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7fd2ca9a0d50 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fd2ca9a0a88 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a11c0 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a1060 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a0ec8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9a0de0 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9a0e48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a0ec8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7fd2ca9a1ad8 <line:1656:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fd2ca9a1f38 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a1ba0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a1df8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca9a1da8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca9a1ea0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca9a2220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca9a2268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7fd2ca9a2520 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7fd2ca9a24b0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7fd2ca9a27c0 <line:1663:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7fd2ca9a26f8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9a26b8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7fd2ca9a2798 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7fd2ca9a27f8 <line:1664:5, line:1668:5> line:1664:11 union type definition
| |   |     |-CXXRecordDecl 0x7fd2ca9a2918 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7fd2ca9a29c0 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7fd2ca9a3028 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7fd2ca9a3530 <line:1672:1, line:1673:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a30c0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a3288 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca9a3238 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7fd2ca9a34d0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7fd2ca9a3460 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a37c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a3630 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a3590 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a3590 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9a3928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9a3a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9a3b48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9a3c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9a3b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7fd2ca9a3cb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9a3f88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a5660 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a54d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a5430 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a5430 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9a57c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9a5930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9a59e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9a5b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9a59c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7fd2ca9a5b58 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9a5e28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a60f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a5f60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a5ec0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a5ec0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9a6258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9a6400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9a64b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9a65d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9a6498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7fd2ca9a6628 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9a68f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a6bc0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a6a30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a6990 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a6990 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9a6d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9a6e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9a6f48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9a7068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9a6f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7fd2ca9a70b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9a7388 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a7660 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a74d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a7430 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a7430 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9a77c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9a7930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9a79e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9a7b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9a79c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7fd2ca9a7b58 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9a7e28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a80f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a7f60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a7ec0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a7ec0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9a8258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9a83c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9a8478 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9a8598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9a8458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7fd2ca9a85e8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9a88b8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a8b80 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a89f0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a8950 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a8950 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9a8ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9a8e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9a8f08 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9a9028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9a8ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7fd2ca9a9078 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9a9348 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9a9630 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a94a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a9400 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a9400 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9a9798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9a9900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9a99b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9a9ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9a9998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7fd2ca9a9b28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9a9df8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9aa0c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9a9f30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9a9e90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9a9e90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9aa228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9aa390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9aa448 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9aa568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9aa428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7fd2ca9aa5b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9aa888 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9aab50 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9aa9c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9aa920 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9aa920 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9aacb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9aae20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9aaed8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9aaff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9aaeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7fd2ca9ab048 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9ab318 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ab630 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9ab4a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9ab400 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9ab400 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9ab798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9ab900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9ab9b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9abad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9ab998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7fd2ca9abb28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9abdf8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ac0c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9abf30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9abe90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9abe90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9ac228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9ac390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9ac448 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9ac568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9ac428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7fd2ca9ac5b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9ac888 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9acb50 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9ac9c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9ac920 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9ac920 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9accb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9ace20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9aced8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9acff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9aceb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7fd2ca9ad048 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9ad318 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ad630 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9ad4a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9ad400 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9ad400 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9ad798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9ad900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9ad9b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9adad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9ad998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7fd2ca9adb28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9addf8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ae0c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9adf30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9ade90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9ade90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd2ca9ae228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9ae390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd2ca9ae448 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd2ca9ae568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd2ca9ae428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7fd2ca9ae5b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd2ca9ae888 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7fd2ca9aea98 <line:1711:1, line:1712:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9ae920 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9ae988 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7fd2ca9aea00 <line:1712:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9aef10 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9aede8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9aed78 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9aed78 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7fd2ca9af1a0 <line:1715:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fd2ca9af248 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7fd2ca9af2a8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9aed78 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9af6e0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9af480 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9af300 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7fd2ca9af4a8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9af368 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7fd2ca9af4f8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7fd2ca9af4d0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9af400 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9af300 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9af368 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9af400 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7fd2ca9af9e0 <line:1721:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fd2ca9afa88 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7fd2ca9affb8 <col:33, line:1724:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7fd2ca9afb38 <line:1723:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7fd2ca9afae8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9af300 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7fd2ca9afb10 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9af368 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7fd2ca9afd48 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7fd2ca9aff78 <line:1724:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fd2ca9b0238 <line:1727:1, line:1735:1> line:1728:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9b0018 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b0070 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b00d8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7fd2ca9b01a0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7fd2ca9b05d0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7fd2ca9b0678 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2ca9b08d8 <col:43, line:1731:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2ca9b0928 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2ca9b0c08 <col:33, line:1733:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7fd2ca9b0eb0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7fd2ca9b0e40 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca9b12d0 <line:1738:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9b0f38 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b0f90 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7fd2ca9b1270 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7fd2ca9b1200 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9b2298 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b1320 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca9b2200 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7fd2ca9b2510 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7fd2ca9b25f8 <line:1746:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7fd2ca9b2738 <line:1747:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b26a8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7fd2ca9b28b8 <line:1748:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b27e8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7fd2ca9b2a38 <line:1749:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b2970 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7fd2ca9b2bb8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b2af0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7fd2ca9b2d38 <line:1751:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b2c70 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7fd2ca9b2eb8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b2df0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7fd2ca9b3038 <line:1753:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b2f70 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7fd2ca9b31b8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b30f0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7fd2ca9b3300 <line:1755:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b3270 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7fd2ca9b3448 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7fd2ca9b33b8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7fd2ca9b3708 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7fd2ca9b36d0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7fd2ca9b3660 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7fd2ca9b34e8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fd2ca9b3448 0x7fd2ca9b3300 0x7fd2ca9b31b8 0x7fd2ca9b3038 0x7fd2ca9b2eb8 0x7fd2ca9b2d38 0x7fd2ca9b2bb8 0x7fd2ca9b2a38 0x7fd2ca9b28b8 0x7fd2ca9b2738 0x7fd2ca9b25f8
| |   | | |     `-CallExpr 0x7fd2ca9b3638 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7fd2ca9b35a0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fd2ca97d650
| |   | | `-VarDecl 0x7fd2ca9b3770 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7fd2ca9b3998 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca9b3958 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7fd2ca9b39f8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9b39f8 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fd2ca9b3c20 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7fd2ca9b3cc8 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fd2ca9b3d28 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7fd2ca9b58a0 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b3db8 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b3e38 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b3eb8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9b5780 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca9b5748 <col:18, line:1773:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7fd2ca9b4198 <line:1771:18, line:1772:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fd2ca9b3ff8 <line:1771:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fd2ca9b4158 <line:1772:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca9b5708 <line:1773:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca9b5808 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7fd2ca9b5bc0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7fd2ca9b5c58 <line:1776:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fd2ca9b5c90 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fd2ca9b5cf0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9b60e0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b5d28 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b5d98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b5e08 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7fd2ca9b6420 <line:1781:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fd2ca9b64b8 <line:1783:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fd2ca9b6a90 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fd2ca9b6a20 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fd2ca9b7040 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fd2ca9b6fd0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7fd2ca9b8000 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7fd2ca9b7580 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7fd2ca9b8058 <line:1787:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fd2ca9b8258 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7fd2ca9b8220 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7fd2ca9b81b8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7fd2ca9b8138 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7fd2ca9b80b0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7fd2ca9b8110 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fd2ca9b8190 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7fd2ca9b82c0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fd2ca9b8320 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9b8690 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b8358 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b83c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7fd2ca9b89d0 <line:1793:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fd2ca9b8a68 <line:1795:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fd2ca9b8ec0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fd2ca9b8e50 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fd2ca9b9350 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fd2ca9b92e0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7fd2ca9b93a8 <line:1798:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fd2ca9b9528 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7fd2ca9b94f0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7fd2ca9b9488 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7fd2ca9b9400 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fd2ca9b9460 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7fd2ca9b9590 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fd2ca9b95f0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9b98f0 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b9628 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7fd2ca9b9c30 <line:1804:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fd2ca9b9cc8 <line:1806:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fd2ca9b9e40 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7fd2ca9b9dd0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7fd2ca9b9ea8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fd2ca9b9f08 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7fd2ca9ba968 <line:1811:1, line:1812:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b9f40 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9b9fb8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9ba838 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd2ca9ba8d0 <line:1812:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7fd2ca9bb198 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7fd2ca9bbf50 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fd2ca9bbe60 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fd2ca9bbe40 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fd2ca9bbd40 '__type_list'
| |   |-TypedefDecl 0x7fd2ca9bccb0 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fd2ca9bcbc0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fd2ca9bcba0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fd2ca9bcaa0 '__type_list'
| |   |-ClassTemplateDecl 0x7fd2ca9bd050 <line:1846:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bcd08 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9bcd88 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9bcf38 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca9bcf00 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7fd2ca9bcde0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9bcd88 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7fd2ca9bcee0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7fd2ca9bcfb8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9bd778 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9bd5a0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9bd408 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bd318 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bd388 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9bd408 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fd2ca9bdab0 <line:1849:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fd2ca9bdb58 <line:1851:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7fd2ca9bd360 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2ca9bd318 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9be028 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9bde50 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd2ca9bdcb8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bdbd0 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bdc38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9bdcb8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fd2ca9be360 <line:1855:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fd2ca9be800 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7fd2ca9be740 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9befc8 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7fd2ca9be878 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9be8e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9bebd8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca9beb88 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9beea8 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca9bee58 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca9bef30 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7fd2ca9bf310 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7fd2ca9bf3b8 <line:1864:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7fd2ca9be930 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd2ca9be8e8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9bf770 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bf430 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bf498 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9bfac0 <line:1868:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd2ca9bfb68 <line:1870:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7fd2ca9bf4e1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7fd2ca9bf4e0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd2ca9bf498 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9bff20 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bfbe0 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9bfc48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9c0270 <line:1874:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd2ca9c0318 <line:1876:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7fd2ca9bfc94 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7fd2ca9bfc90 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd2ca9bfc48 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9c06d0 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c0390 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c03f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9c0a70 <line:1880:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd2ca9c0b18 <line:1882:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7fd2ca9c0445 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7fd2ca9c0440 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd2ca9c03f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9c0f00 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c0b90 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c0bf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9c1250 <line:1886:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd2ca9c1358 <line:1888:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7fd2ca9c1320 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7fd2ca9c0c40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd2ca9c0bf8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9c1740 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c13d0 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c1438 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9c1a90 <line:1892:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd2ca9c1b98 <line:1894:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7fd2ca9c1b60 'const _Up &' dependent
| |   |     `-QualType 0x7fd2ca9c1481 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7fd2ca9c1480 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fd2ca9c1438 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9c1f80 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c1c10 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c1c78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9c22d0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd2ca9c23d8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7fd2ca9c23a0 'volatile _Up &' dependent
| |   |     `-QualType 0x7fd2ca9c1cc4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7fd2ca9c1cc0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fd2ca9c1c78 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9c2800 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c2450 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c24b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9c2b50 <line:1904:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd2ca9c2c58 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7fd2ca9c2c20 'const volatile _Up &' dependent
| |   |     `-QualType 0x7fd2ca9c2505 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7fd2ca9c2500 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fd2ca9c24b8 '_Up'
| |   |-ClassTemplateDecl 0x7fd2ca9c30a0 <line:1909:1, line:1910:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c2cd0 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9c2f90 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca9c2f58 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fd2ca9c2e08 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca9c2f18 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fd2ca9c3008 <line:1910:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7fd2ca9c3360 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c3fd0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c4338 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c4718 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c6318 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c66f8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c6ad8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c6eb8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c7298 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c7678 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9c7a50 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7fd2ca9c7e18 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9c3600 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c3418 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca9c3890 <line:1913:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c3f20 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fd2ca9c3eb0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c3fd0 <line:1918:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fd2ca9c4240 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c4338 <line:1919:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c45b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c4660 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fd2ca8325a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c4718 <line:1920:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c61b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c6260 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fd2ca8325a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c6318 <line:1921:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c6590 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c6640 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fd2ca8325c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c66f8 <line:1922:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c6970 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c6a20 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fd2ca8325c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c6ad8 <line:1923:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c6d50 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c6e00 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fd2ca8325e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c6eb8 <line:1924:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c7130 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c71e0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fd2ca8325e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c7298 <line:1925:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c7510 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c75c0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fd2ca832600 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c7678 <line:1926:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c78f0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c79a0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fd2ca832600 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c7a50 <line:1928:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c7cc0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c7d68 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fd2ca9591f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fd2ca832a60 '__int128_t'
| |   |     `-BuiltinType 0x7fd2ca832740 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9c7e18 <line:1929:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9c80c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd2ca9c8168 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fd2ca9591f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fd2ca832a60 '__int128_t'
| |   |     `-BuiltinType 0x7fd2ca832740 '__int128'
| |   |-ClassTemplateDecl 0x7fd2ca9c8328 <line:1932:1, line:1936:1> line:1933:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c81e0 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9c8290 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca9c85a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca9c85e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7fd2ca9c92a0 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fd2ca9c9230 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca9c9560 <line:1939:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c9318 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca9c9500 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca9c9490 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9c9980 <line:1942:1, line:1943:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c95b0 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9c9870 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca9c9838 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fd2ca9c96e8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca9c97f8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fd2ca9c98e8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7fd2ca9c9c40 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7fd2ca9cb8b0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9cbc18 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9cbff8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9cc3d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9cc7b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9ccb98 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9d5000 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9d53d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9d57b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9d5b90 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7fd2ca9d5f58 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9c9ee0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9c9cf8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca9cb170 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9cb800 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fd2ca9cb790 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9cb8b0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fd2ca9cbb20 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9cbc18 <line:1952:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9cbe90 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9cbf40 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fd2ca832640 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9cbff8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9cc270 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9cc320 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fd2ca832640 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9cc3d8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9cc650 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9cc700 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fd2ca832660 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9cc7b8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9cca30 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9ccae0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fd2ca832660 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9ccb98 <line:1956:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9cce10 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9ccec0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fd2ca832680 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9d5000 <line:1957:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9d5270 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9d5320 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fd2ca832680 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9d53d8 <line:1958:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9d5650 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9d5700 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fd2ca8326a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9d57b8 <line:1959:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9d5a30 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9d5ae0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fd2ca8326a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9d5b90 <line:1961:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9d5e00 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9d5ea8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fd2ca959560 '__uint128_t' sugar
| |   |     |-Typedef 0x7fd2ca832ad0 '__uint128_t'
| |   |     `-BuiltinType 0x7fd2ca832760 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9d5f58 <line:1962:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9d61d0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd2ca9d6278 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fd2ca959560 '__uint128_t' sugar
| |   |     |-Typedef 0x7fd2ca832ad0 '__uint128_t'
| |   |     `-BuiltinType 0x7fd2ca832760 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7fd2ca9d6438 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d62f0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9d63a0 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca9d66b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2ca9d66f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7fd2ca9d72b0 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fd2ca9d7240 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca9d7570 <line:1972:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d7328 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2ca9d7510 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2ca9d74a0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9d7708 <line:2010:1, line:2011:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d75c0 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9d7670 <line:2011:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7fd2ca9d79e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca9d7a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9d7ca8 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d7ae0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca9d7e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca9d80f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fd2ca9d83c8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d81b0 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d8218 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d8298 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd2ca9d8330 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7fd2ca9d86a0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9d8e98 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d8758 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d87c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9d95c0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7fd2ca9d9a80 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7fd2ca9d9a10 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2ca9da990 <line:2035:1, line:2043:6> line:2038:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d9af8 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d9b68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d9d00 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d9f20 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7fd2ca9da930 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7fd2ca9da8c0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9dac98 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9da9e0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9daa48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7fd2ca9dae48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca9dccc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fd2ca9dce98 <line:2051:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7fd2ca9dcd78 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7fd2ca9dce00 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7fd2ca9dd2b0 <line:2053:1, line:2054:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7fd2ca9dd108 <line:2053:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9dd188 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd2ca9dd218 <line:2054:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7fd2ca9dd550 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ddda0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9dd608 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9dd678 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd2ca9de120 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7fd2ca9de380 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7fd2ca9de310 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9dec00 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9de3f8 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9de468 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fd2ca9de4d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7fd2ca9df3e8 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9df878 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9df4a0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9df508 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fd2ca9df578 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7fd2ca9dfa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2ca9dff18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7fd2ca9e02b0 <line:2078:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e0000 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7fd2ca9e0250 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7fd2ca9e01e0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2ca9e0490 <line:2085:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e0300 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e0368 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9e03f8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7fd2ca9e0730 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7fd2ca9e07d8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd2ca9e03b0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd2ca9e0368 '_Tp'
| |   |-FunctionTemplateDecl 0x7fd2ca9e0fc8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e0850 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e08b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7fd2ca9e0f30 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7fd2ca9e0e18 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7fd2ca9e1238 <line:2091:1, line:2092:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e1020 <line:2091:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e1088 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7fd2ca9e11a0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7fd2ca9e1728 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e1288 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e12f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9e1610 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd2ca9e15d8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fd2ca9e1438 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e1598 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2ca9e1690 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7fd2ca9e1c98 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca978ea0 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e1d50 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e1db8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd2ca9791c0 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7fd2ca979410 <line:2105:1, line:2107:46> line:2106:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2ca979278 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9792e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd2ca979378 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7fd2ca979aa8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7fd2ca979ca8 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2ca979b60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca979c10 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca979f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca97a488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7fd2ca97a688 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2ca97a540 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca97a5f0 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca97a900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca97acc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7fd2ca9ee098 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7fd2ca97ad80 <line:2149:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fd2ca9ee000 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7fd2ca9ee310 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7fd2ca9ee3c0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7fd2ca8325c0 'int'
| |   |-ClassTemplateDecl 0x7fd2ca9ee558 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7fd2ca9ee438 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9ee4c0 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7fd2ca9ee7d0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7fd2ca9eeee8 <line:2154:5, line:2157:5> line:2155:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd2ca9ee868 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fd2ca9eee50 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7fd2ca9eed20 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7fd2ca9ef078 <line:2159:5, line:2160:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd2ca9eef40 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fd2ca9eefe0 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7fd2ca9ef0d8 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7fd2ca9ef2c0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7fd2ca9ef270 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7fd2ca9ef250 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7fd2ca9ef220 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7fd2ca9ef160 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fd2ca9ef078 0x7fd2ca9eeee8
| |   |       |     `-IntegerLiteral 0x7fd2ca9ef200 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7fd2ca9ef2a0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7fd2ca9ef498 <line:2165:1, line:2166:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9ef308 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9ef388 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fd2ca9ef400 <line:2166:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ef8e0 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9ef6f8 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9f0018 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f02b0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f00d0 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9f05f0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7fd2ca9f0838 <line:2177:1, line:2178:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f06a8 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9f0728 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fd2ca9f07a0 <line:2178:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f0c80 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f0a98 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9f11c8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f1460 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f1280 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9f17a0 <line:2184:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7fd2ca9f1978 <line:2186:1, line:2188:73> line:2187:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f1858 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca9f18e0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7fd2ca9f1ea8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7fd2ca9f24c8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f2128 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f1f60 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca9f23f0 <line:2191:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9f24c8 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd2ca9f2770 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7fd2ca9f2c38 <line:2207:1, line:2214:1> line:2210:1 move
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f2828 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca9f2ba0 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fd2ca9f2a18 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fd2ca9f2f50 <line:2211:1, line:2214:1>
| |   |   | |-DeclStmt 0x7fd2ca9f2e68 <line:2212:5, col:53>
| |   |   | | `-TypedefDecl 0x7fd2ca9f2e10 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7fd2ca9f2da0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7fd2ca9f2f38 <line:2213:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fd2ca9f2f08 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fd2ca9f2ea0 <col:31> '_Tp' lvalue ParmVar 0x7fd2ca9f2a18 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fd2ca9f2c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2ca9f2cd8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2ca9f3380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f2f78 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca9f32e8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fd2ca9f31b0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7fd2ca9f34b0 <line:2220:1, line:2222:1>
| |   |   | `-ReturnStmt 0x7fd2ca9f3498 <line:2221:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fd2ca9f3468 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fd2ca9f3430 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fd2ca9f31b0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7fd2ca9f33d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2ca9f3420 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2ca9f38a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f34d0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca9f3808 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fd2ca9f36d0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7fd2ca9f3c18 <line:2228:1, line:2232:1>
| |   |   | |-DeclStmt 0x7fd2ca9f3b80 <line:2229:5, line:2230:60>
| |   |   | | `-StaticAssertDecl 0x7fd2ca9f3b48 <line:2229:5, line:2230:59> line:2229:5
| |   |   | |   |-UnaryOperator 0x7fd2ca9f3a58 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7fd2ca9f3a18 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7fd2ca9f3af8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7fd2ca9f3c00 <line:2231:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fd2ca9f3bd0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fd2ca9f3b98 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fd2ca9f36d0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7fd2ca9f38f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2ca9f3940 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2ca9f4000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f3c40 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2ca9f3f40 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7fd2ca9f3e28 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fd2ca9f4218 <line:2281:1, line:2283:1>
| |   |   | `-ReturnStmt 0x7fd2ca9f4200 <line:2282:5, col:35>
| |   |   |   `-CallExpr 0x7fd2ca9f41d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fd2ca9f4108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     `-DeclRefExpr 0x7fd2ca9f41a8 <col:32> '_Tp' lvalue ParmVar 0x7fd2ca9f3e28 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fd2ca9f4058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2ca9f40a0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f47b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f4238 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f42a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f4318 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9f4ad0 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9f4b78 <line:2302:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f42f0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fd2ca9f42a8 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9f4be0 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f4280 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9f4238 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9f4cd8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca9f4510 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9f44d0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9f4280 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9f4238 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca9f43f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca9f4360 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca9f4318 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f52c8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f4d50 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f4db8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f4e28 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9f55e0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9f5688 <line:2310:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f4e00 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fd2ca9f4db8 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9f56f0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f4d90 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9f4d50 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9f57e8 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2ca9f5020 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9f4fe0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9f4d90 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9f4d50 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9f4f00 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca9f4e70 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9f4e28 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f5dd8 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f5860 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f58c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f5938 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9f6150 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9f61f8 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fd2ca9f5911 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fd2ca9f5910 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9f58c8 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9f6260 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f58a0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9f5860 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9f63c8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca9f6370 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9f6330 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9f58a0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9f5860 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca9f5a10 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca9f5980 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca9f5938 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f69b8 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f6440 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f64a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f6518 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9f6cd0 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9f6d78 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fd2ca9f64f1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fd2ca9f64f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9f64a8 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9f6de0 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f6480 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9f6440 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9f6f48 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2ca9f6ef0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9f6eb0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9f6480 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9f6440 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9f65f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca9f6560 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9f6518 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f7538 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f6fc0 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f7028 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f7098 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9f7850 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9f78f8 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fd2ca9f7074 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fd2ca9f7070 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9f7028 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9f7960 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f7000 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9f6fc0 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9f7ac8 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca9f7a70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9f7a30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9f7000 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9f6fc0 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca9f7170 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca9f70e0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca9f7098 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f8918 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f7b40 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f7ba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f7c18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9f8c30 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9f8cd8 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fd2ca9f7bf4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fd2ca9f7bf0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9f7ba8 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9f8d40 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f7b80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9f7b40 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9f8ea8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2ca9f8e50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9f8e10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9f7b80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9f7b40 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9f7cf0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca9f7c60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9f7c18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9f9498 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f8f20 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f8f88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f8ff8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9f97b0 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9f9858 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fd2ca9f8fd5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fd2ca9f8fd0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9f8f88 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9f98c0 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f8f60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9f8f20 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9f9a28 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca9f99d0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9f9990 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9f8f60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9f8f20 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca9f90d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca9f9040 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca9f8ff8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9fa018 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f9aa0 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f9b08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9f9b78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9fa330 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9fa3d8 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fd2ca9f9b55 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fd2ca9f9b50 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9f9b08 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9fa440 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9f9ae0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9f9aa0 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9fa5a8 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2ca9fa550 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9fa510 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9f9ae0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9f9aa0 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9f9c50 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca9f9bc0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9f9b78 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9fb798 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fa620 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fa688 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fa6f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9fbab0 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9fbb88 <line:2369:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fd2ca9fbb50 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fd2ca9fa6d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9fa688 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9fbbf0 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9fa660 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9fa620 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9fbd58 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca9fbd00 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9fbcc0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9fa660 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9fa620 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca9fa7d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca9fa740 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca9fa6f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9fc348 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fbdd0 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fbe38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fbea8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9fc660 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9fc738 <line:2377:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fd2ca9fc700 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fd2ca9fbe80 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca9fbe38 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9fc7a0 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9fbe10 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9fbdd0 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9fc908 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2ca9fc8b0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9fc870 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9fbe10 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9fbdd0 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9fbf80 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca9fbef0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9fbea8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9fcef8 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fc980 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fc9e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fca58 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9fd210 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9fd2e8 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fd2ca9fd2b0 'const _Class &' dependent
| |   | |   `-QualType 0x7fd2ca9fca31 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fd2ca9fca30 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2ca9fc9e8 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9fd350 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9fc9c0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9fc980 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9fe0f8 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca9fe0a0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9fe060 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9fc9c0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9fc980 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca9fcb30 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca9fcaa0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca9fca58 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9fe6e8 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fe170 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fe1d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fe248 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9fea00 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9fead8 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fd2ca9feaa0 'const _Class &' dependent
| |   | |   `-QualType 0x7fd2ca9fe221 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fd2ca9fe220 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2ca9fe1d8 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9feb40 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9fe1b0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9fe170 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9feca8 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2ca9fec50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9fec10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9fe1b0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9fe170 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9fe320 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca9fe290 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9fe248 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ff298 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fed20 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fed88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9fedf8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9ff5b0 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9ff688 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fd2ca9ff650 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fd2ca9fedd4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fd2ca9fedd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2ca9fed88 '_Class'
| |   | |-TypedefDecl 0x7fd2ca9ff6f0 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9fed60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9fed20 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9ff858 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca9ff800 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9ff7c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9fed60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9fed20 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca9feed0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca9fee40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca9fedf8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ffe48 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9ff8d0 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9ff938 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9ff9a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2caa00970 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2caa00a48 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fd2caa00a10 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fd2ca9ff984 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fd2ca9ff980 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2ca9ff938 '_Class'
| |   | |-TypedefDecl 0x7fd2caa00ab0 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9ff910 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9ff8d0 '_Rp'
| |   | `-TypedefDecl 0x7fd2caa00c18 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2caa00bc0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2caa00b80 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9ff910 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9ff8d0 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9ffa80 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca9ff9f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9ff9a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa01208 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2caa00c90 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa00cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa00d68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2caa01520 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2caa015f8 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fd2caa015c0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fd2caa00d45 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fd2caa00d40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2caa00cf8 '_Class'
| |   | |-TypedefDecl 0x7fd2caa01660 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2caa00cd0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2caa00c90 '_Rp'
| |   | `-TypedefDecl 0x7fd2caa017c8 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2caa01770 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2caa01730 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2caa00cd0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2caa00c90 '_Rp'
| |   |       `-PackExpansionType 0x7fd2caa00e40 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2caa00db0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2caa00d68 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa01db8 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2caa01840 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa018a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa01918 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2caa020d0 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2caa021a8 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fd2caa02170 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fd2caa018f5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fd2caa018f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2caa018a8 '_Class'
| |   | |-TypedefDecl 0x7fd2caa02210 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2caa01880 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2caa01840 '_Rp'
| |   | `-TypedefDecl 0x7fd2caa02378 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2caa02320 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2caa022e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2caa01880 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2caa01840 '_Rp'
| |   |       |-PackExpansionType 0x7fd2caa019f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2caa01960 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2caa01918 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca91ff98 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2caa023f0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa02458 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa024c8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca9202b0 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9203b8 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fd2ca920380 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fd2caa024a0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2caa02458 '_Class'
| |   | |-TypedefDecl 0x7fd2ca920420 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2caa02430 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2caa023f0 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca920588 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca920530 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9204f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2caa02430 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2caa023f0 '_Rp'
| |   |       `-PackExpansionType 0x7fd2caa025a0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2caa02510 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2caa024c8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca920b78 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca920600 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca920668 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9206d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca920e90 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca920f68 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fd2ca920f30 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fd2ca9206b0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd2ca920668 '_Class'
| |   | |-TypedefDecl 0x7fd2ca920fd0 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca920640 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca920600 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca921138 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2ca9210e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca9210a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca920640 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca920600 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9207b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca920720 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9206d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca921728 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9211b0 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca921218 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca921288 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca921a40 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca921b48 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fd2ca921b10 'const _Class &&' dependent
| |   | |   `-QualType 0x7fd2ca921261 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fd2ca921260 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2ca921218 '_Class'
| |   | |-TypedefDecl 0x7fd2ca921bb0 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9211f0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9211b0 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca921d18 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca921cc0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca921c80 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca9211f0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca9211b0 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca921360 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca9212d0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca921288 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca922f08 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca921d90 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca922a00 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca922a68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca923220 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca9232f8 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fd2ca9232c0 'const _Class &&' dependent
| |   | |   `-QualType 0x7fd2ca922a41 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fd2ca922a40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2ca922a00 '_Class'
| |   | |-TypedefDecl 0x7fd2ca923360 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca921dd0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca921d90 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9234c8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2ca923470 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca923430 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca921dd0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca921d90 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca922b40 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca922ab0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca922a68 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca923ab8 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca923540 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca9235a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca923618 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2ca923dd0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2ca923ed8 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fd2ca923ea0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fd2ca9235f4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fd2ca9235f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2ca9235a8 '_Class'
| |   | |-TypedefDecl 0x7fd2ca923f40 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca923580 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca923540 '_Rp'
| |   | `-TypedefDecl 0x7fd2ca9240a8 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2ca924050 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2ca924010 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca923580 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca923540 '_Rp'
| |   |       `-PackExpansionType 0x7fd2ca9236f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2ca923660 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2ca923618 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca924698 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca924120 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2ca924188 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2ca9241f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2caa03200 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2caa032d8 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fd2caa032a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fd2ca9241d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fd2ca9241d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2ca924188 '_Class'
| |   | |-TypedefDecl 0x7fd2caa03340 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2ca924160 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca924120 '_Rp'
| |   | `-TypedefDecl 0x7fd2caa034a8 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2caa03450 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2caa03410 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2ca924160 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2ca924120 '_Rp'
| |   |       |-PackExpansionType 0x7fd2ca9242d0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2ca924240 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2ca9241f8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa03a98 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2caa03520 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa03588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa035f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2caa03db0 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2caa03eb8 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fd2caa03e80 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fd2caa035d5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fd2caa035d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2caa03588 '_Class'
| |   | |-TypedefDecl 0x7fd2caa03f20 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2caa03560 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2caa03520 '_Rp'
| |   | `-TypedefDecl 0x7fd2caa04088 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd2caa04030 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2caa03ff0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2caa03560 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2caa03520 '_Rp'
| |   |       `-PackExpansionType 0x7fd2caa036d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd2caa03640 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd2caa035f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa04678 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2caa04100 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa04168 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa041d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd2caa04990 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2caa04a68 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fd2caa04a30 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fd2caa041b5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fd2caa041b0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd2caa04168 '_Class'
| |   | |-TypedefDecl 0x7fd2caa04ad0 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd2caa04140 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2caa04100 '_Rp'
| |   | `-TypedefDecl 0x7fd2caa04c38 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd2caa04be0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd2caa04ba0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd2caa04140 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd2caa04100 '_Rp'
| |   |       |-PackExpansionType 0x7fd2caa042b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd2caa04220 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd2caa041d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa05008 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2caa04cb0 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa04d18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7fd2caa05f50 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd2caa05ff8 <line:2759:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fd2caa04d60 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fd2caa04d18 '_Class'
| |   | `-TypedefDecl 0x7fd2caa06060 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7fd2caa04cf0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd2caa04cb0 '_Rp'
| |   |-ClassTemplateDecl 0x7fd2caa061f8 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7fd2caa060d8 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7fd2caa06160 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7fd2caa06978 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7fd2caa06b48 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7fd2caa06a30 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7fd2caa06ab0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7fd2caa06dc0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa070e8 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fd2caa06e78 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd2caa06ee8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7fd2caa07330 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7fd2caa073d8 <line:2780:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7fd2caa06f30 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fd2caa06ee8 '_ClassType'
| |   |-ClassTemplateDecl 0x7fd2caa07568 <line:2785:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7fd2caa07450 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7fd2caa074d0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7fd2caa07778 <line:2937:1, line:2940:1> line:2937:11 __is_construct
| |   | `-CXXRecordDecl 0x7fd2caa077e0 <line:2939:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7fd2caa07908 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7fd2caa07b80 <line:3059:1, line:3062:6> line:3060:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa079c0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa07a28 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa07ae8 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa08290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa08498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7fd2caa08698 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa08550 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa08600 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa08910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa08a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7fd2caa08c78 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa08b30 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa08be0 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa08ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa092e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7fd2caa094e8 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa093a0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa09450 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa09760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa09a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7fd2caa09cc0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa09b00 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa09b68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa09c28 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa09fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca916200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7fd2ca916408 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2ca9162b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca916370 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca916680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca9167e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7fd2ca9169e8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2ca9168a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca916950 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca916c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca916fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7fd2ca9171d8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2ca917090 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca917140 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2ca917450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2ca917738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7fd2ca917980 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2ca9177f0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2ca917858 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd2ca9178e8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7fd2ca917dd8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7fd2ca917fd8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2ca917e90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2ca917f40 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa10468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa10938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7fd2caa10b38 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2caa109f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa10aa0 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa10db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa11178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7fd2caa11378 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa11230 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa112e0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa115f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa11938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7fd2caa11c60 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa11a00 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa11a68 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7fd2caa11ac0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa11b28 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa11bc8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa12400 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fd2caa11fa8 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa12018 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa12a48 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7fd2caa12d30 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7fd2caa12b00 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2caa12c98 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7fd2caa12b90 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7fd2caa12d88 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa13110 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd2caa12da0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa12e08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd2caa137c8 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa13ca0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2caa139f8 <col:69> '_Bool' NonTypeTemplateParm 0x7fd2caa138f8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd2caa13880 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa138f8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7fd2caa13950 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa14040 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fd2caa142c0 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa140f8 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa14168 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa14228 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa146b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa14c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa14f70 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7fd2caa14cc0 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa14d38 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fd2caa150d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2caa15618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fd2caa15818 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa156d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa15780 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa15a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa15bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7fd2caa15df8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa15cb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa15d60 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa16070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa18478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7fd2caa18678 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa18530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa185e0 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa188f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa18bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7fd2caa18e98 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa18ca0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd2caa18cf8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa18d68 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7fd2caa18e00 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa19408 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd2caa19138 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa191a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd2caa19730 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa19ab8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd2caa197e8 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa19858 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd2caa1a158 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fd2caa1c400 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2caa1a210 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd2caa1a278 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd2caa1a338 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa1c6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa1ca18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fd2caa1cc18 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2caa1cad0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa1cb80 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa1ce90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa1d368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7fd2caa1d568 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fd2caa1d420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa1d4d0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa1d7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa1dba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7fd2caa1ddf0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa1dc70 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd2caa1dcc8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa1dd58 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa1e230 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2caa1e048 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa1e500 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa1e7a0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2caa1e5b8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa1ed48 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fd2caa1ef48 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7fd2caa1ee00 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa1eeb0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa1f1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa1f478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa1f7b8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd2caa1f530 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa1f5a8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fd2caa1f908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2caa1faf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa1fd78 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd2caa1fbb0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2caa1feb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2caa20030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa202b8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd2caa200e8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2caa20400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2caa20580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fd2caa20788 <line:3925:1, line:3926:54> line:3925:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7fd2caa20638 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa206f0 <col:22, line:3926:54> line:3925:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa20a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa20be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7fd2caa20de8 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7fd2caa20ca0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa20d50 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa21060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa21248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7fd2caa21448 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7fd2caa21300 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa213b0 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa216c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa218a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7fd2caa21aa8 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7fd2caa21960 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa21a10 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa21d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa21f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7fd2caa22108 <line:3993:1, line:4000:6> line:3993:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7fd2caa21fc0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa22070 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa22380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd2caa23578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7fd2caa23748 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7fd2caa23630 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa236b0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fd2caa23a00 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa23cd8 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7fd2caa23ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa23f80 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7fd2caa24158 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fd2caa24038 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa240c0 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7fd2caa245e8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7fd2caa247b8 <line:4016:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7fd2caa246a0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7fd2caa24720 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7fd2caa24a38 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7fd2caa24a38 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd2caa24c30 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa25098 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd2caa24ce8 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd2caa24d58 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7fd2caa24dc8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7fd2caa256e0 <line:4024:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa259a8 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2caa25798 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7fd2caa25d68 <line:4031:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa25f68 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2caa25e20 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2caa261d0 <line:4037:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7fd2caa263b8 <line:4039:5, col:60> col:5
| |   |   |-BinaryOperator 0x7fd2caa262d0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7fd2caa26278 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7fd2caa262b8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7fd2caa26298 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7fd2caa26378 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa265d8 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd2caa26410 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa26928 <line:4043:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa26ba8 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd2caa269e0 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa26ef8 <line:4049:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa27400 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fd2caa26fb0 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa27018 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa27768 <line:4055:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa27b88 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fd2caa27820 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa27e10 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa281d8 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fd2caa27ec8 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa27f38 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa28538 <line:4066:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa28878 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fd2caa285f0 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa28af0 <line:4072:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa28ff8 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7fd2caa28ba8 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa28c18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa28c88 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa29400 <line:4077:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa29908 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7fd2caa294b8 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa29528 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa29598 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa29c78 <line:4083:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2a178 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7fd2caa29d30 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa29d98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa29e08 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2a4e8 <line:4089:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2a9e8 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2a5a0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2a608 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2a678 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2ad58 <line:4095:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2b258 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2ae10 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2ae78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2aee8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2b5d8 <line:4101:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2bad8 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2b690 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2b6f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2b768 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2be48 <line:4107:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2c348 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2bf00 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2bf68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2bfd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2c6b8 <line:4113:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2cbb8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2c770 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2c7d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2c848 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2cf28 <line:4119:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2d440 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2cfe0 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2d048 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2d0b8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2d7a8 <line:4125:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2dca8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2d860 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2d8c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2d938 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2e018 <line:4131:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2e518 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2e0d0 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2e138 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2e1a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2e888 <line:4137:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2ed88 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2e940 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2e9a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd2caa2ea18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd2caa2f0f8 <line:4143:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa2f488 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2f1b0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2f218 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fd2caa2f7e8 <line:4149:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7fd2caa304a0 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7fd2caa2f8a0 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa2f908 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa2faa0 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2fc30 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa2fe50 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fd2caa30440 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd2caa303d0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2caa30df0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7fd2caa304f0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa30558 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa306f0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa30880 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fd2caa30d90 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd2caa30d20 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2caa32c10 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7fd2caa30e40 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa30ea8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa31040 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa311d0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa31360 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fd2caa32bb0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd2caa32b40 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2caa33730 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7fd2caa32c60 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa32cc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa32e60 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa32ff0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa33180 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fd2caa336d0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd2caa33660 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2caa34010 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7fd2caa33780 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa337e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa33980 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa33b10 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fd2caa33fb0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd2caa33f40 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd2caa35c50 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7fd2caa34060 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa340c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa34260 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa343f0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fd2caa34580 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fd2caa35bf0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd2caa35b80 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7fd2caa36048 <line:4223:1, line:4224:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd2caa35ca0 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fd2caa35fb0 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fd2caa35d30 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fd2caa35e68 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fd2caa36398 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd2caa360a8 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fd2caa36300 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fd2caa36140 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fd2caa36218 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fd2caa39ce8 <line:4231:1, line:4221:27> line:4235:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd2caa363f8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa36468 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa364d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd2caa37028 <line:4232:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa39c50 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd2caa37138 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa371d8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd2caa37318 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd2caa3a138 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa3a120 <col:7, line:4236:88>
| |   |   |   `-CallExpr 0x7fd2caa3a0f0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd2caa39f60 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd2caa39f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fd2caa39ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fd2caa39e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     |   | `-DeclRefExpr 0x7fd2caa39eb8 <col:44> '_A0' lvalue ParmVar 0x7fd2caa371d8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd2caa39f10 <col:51> '_Fp' lvalue ParmVar 0x7fd2caa37138 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd2caa3a0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa3a0a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd2caa39fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |         `-DeclRefExpr 0x7fd2caa3a078 <col:78> '_Args &&...' lvalue ParmVar 0x7fd2caa37318 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd2caa39d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa39d98 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa3b600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd2caa3a158 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa3a1c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa3a238 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd2caa3aa68 <line:4239:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa3b540 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd2caa3ab78 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa3ac18 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd2caa3acf8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd2caa3ba50 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa3ba38 <col:7, line:4243:88>
| |   |   |   `-CallExpr 0x7fd2caa3ba08 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd2caa3b878 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd2caa3b850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fd2caa3b7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fd2caa3b730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     |   | `-DeclRefExpr 0x7fd2caa3b7d0 <col:44> '_A0' lvalue ParmVar 0x7fd2caa3ac18 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd2caa3b828 <col:51> '_Fp' lvalue ParmVar 0x7fd2caa3ab78 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd2caa3b9e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa3b9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd2caa3b8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |         `-DeclRefExpr 0x7fd2caa3b990 <col:78> '_Args &&...' lvalue ParmVar 0x7fd2caa3acf8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd2caa3b668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa3b6b0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa3ce88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd2caa3ba70 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa3bad8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa3bb48 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd2caa3c408 <line:4246:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa3cdf0 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd2caa3c518 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa3c5b8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd2caa3c698 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd2caa3d218 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa3d200 <col:7, line:4250:73>
| |   |   |   `-CallExpr 0x7fd2caa3d1d0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd2caa3d040 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd2caa3d018 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fd2caa3cfc8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fd2caa3cf70 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fd2caa3cf48 <col:24> '_A0' lvalue ParmVar 0x7fd2caa3c5b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd2caa3cff0 <col:36> '_Fp' lvalue ParmVar 0x7fd2caa3c518 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd2caa3d1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa3d180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd2caa3d0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |         `-DeclRefExpr 0x7fd2caa3d158 <col:63> '_Args &&...' lvalue ParmVar 0x7fd2caa3c698 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd2caa3cef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa3cf38 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa3e3f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd2caa3d238 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa3d2a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa3d318 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd2caa3da08 <line:4253:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa3e360 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd2caa3db18 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa3dbb8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd2caa3dc98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd2caa3e788 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa3e770 <col:7, line:4257:73>
| |   |   |   `-CallExpr 0x7fd2caa3e740 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd2caa3e5b0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd2caa3e588 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fd2caa3e538 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fd2caa3e4e0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fd2caa3e4b8 <col:24> '_A0' lvalue ParmVar 0x7fd2caa3dbb8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd2caa3e560 <col:36> '_Fp' lvalue ParmVar 0x7fd2caa3db18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd2caa3e720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa3e6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd2caa3e628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |         `-DeclRefExpr 0x7fd2caa3e6c8 <col:63> '_Args &&...' lvalue ParmVar 0x7fd2caa3dc98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd2caa3e460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa3e4a8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa40008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd2caa3e7a8 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa3e818 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa3e888 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd2caa3f3b8 <line:4260:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa3ff70 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd2caa3f4c8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa3f568 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd2caa3f648 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd2caa40480 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa40468 <col:7, line:4264:91>
| |   |   |   `-CallExpr 0x7fd2caa40438 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd2caa402a8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd2caa40280 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fd2caa40238 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fd2caa40218 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fd2caa401e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fd2caa40120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     |   |     `-DeclRefExpr 0x7fd2caa401c0 <col:46> '_A0' lvalue ParmVar 0x7fd2caa3f568 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd2caa40258 <col:54> '_Fp' lvalue ParmVar 0x7fd2caa3f4c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd2caa40418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa403e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd2caa40320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |         `-DeclRefExpr 0x7fd2caa403c0 <col:81> '_Args &&...' lvalue ParmVar 0x7fd2caa3f648 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd2caa40070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa400b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa41ac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd2caa404a0 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa40508 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa40578 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd2caa40f08 <line:4267:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa41a30 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd2caa41018 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa410b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd2caa41198 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd2caa41f40 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa41f28 <col:7, line:4271:91>
| |   |   |   `-CallExpr 0x7fd2caa41ef8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd2caa41d68 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd2caa41d40 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fd2caa41cf8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fd2caa41cd8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fd2caa41ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fd2caa41be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     |   |     `-DeclRefExpr 0x7fd2caa41c80 <col:46> '_A0' lvalue ParmVar 0x7fd2caa410b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd2caa41d18 <col:54> '_Fp' lvalue ParmVar 0x7fd2caa41018 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd2caa41ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa41ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd2caa41de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |         `-DeclRefExpr 0x7fd2caa41e80 <col:81> '_Args &&...' lvalue ParmVar 0x7fd2caa41198 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd2caa41b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa41b78 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa43138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd2caa41f60 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa41fc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa429f8 <line:4276:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa430a0 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd2caa42af8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa42b98 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd2caa433a8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa43390 <col:7, line:4280:50>
| |   |   |   `-BinaryOperator 0x7fd2caa43368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fd2caa43310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fd2caa43248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     | `-DeclRefExpr 0x7fd2caa432e8 <col:43> '_A0' lvalue ParmVar 0x7fd2caa42b98 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd2caa43340 <col:50> '_Fp' lvalue ParmVar 0x7fd2caa42af8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd2caa43198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa431e0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa44348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd2caa433c8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa43438 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa43c88 <line:4283:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa442b0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd2caa43d88 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa43e28 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd2caa445b8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa445a0 <col:7, line:4287:50>
| |   |   |   `-BinaryOperator 0x7fd2caa44578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fd2caa44520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fd2caa44458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     | `-DeclRefExpr 0x7fd2caa444f8 <col:43> '_A0' lvalue ParmVar 0x7fd2caa43e28 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd2caa44550 <col:50> '_Fp' lvalue ParmVar 0x7fd2caa43d88 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd2caa443a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa443f0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa45498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd2caa445d8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa44648 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa44ea8 <line:4290:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa45400 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd2caa44fa8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa45048 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd2caa45668 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa45650 <col:7, line:4294:35>
| |   |   |   `-BinaryOperator 0x7fd2caa45628 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fd2caa455d0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fd2caa45578 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fd2caa45550 <col:23> '_A0' lvalue ParmVar 0x7fd2caa45048 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd2caa45600 <col:35> '_Fp' lvalue ParmVar 0x7fd2caa44fa8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd2caa454f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa45540 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa46358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd2caa45688 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa456f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa45de8 <line:4297:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa462c0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd2caa45ee8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa45f88 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd2caa46520 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa46508 <col:7, line:4301:35>
| |   |   |   `-BinaryOperator 0x7fd2caa464e0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fd2caa46490 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fd2caa46438 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fd2caa46410 <col:23> '_A0' lvalue ParmVar 0x7fd2caa45f88 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd2caa464b8 <col:35> '_Fp' lvalue ParmVar 0x7fd2caa45ee8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd2caa463b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa46400 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa47898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd2caa46540 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa465a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa470d8 <line:4304:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa47800 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd2caa471d8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa47278 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd2caa47b48 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa47b30 <col:7, line:4308:53>
| |   |   |   `-BinaryOperator 0x7fd2caa47b08 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fd2caa47ac0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fd2caa47aa0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fd2caa47a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fd2caa479a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     |     `-DeclRefExpr 0x7fd2caa47a48 <col:45> '_A0' lvalue ParmVar 0x7fd2caa47278 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd2caa47ae0 <col:53> '_Fp' lvalue ParmVar 0x7fd2caa471d8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd2caa478f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa47940 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa48ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd2caa47b68 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa47bd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd2caa48568 <line:4311:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd2caa48c10 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd2caa48668 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa48708 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd2caa48f58 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa48f40 <col:7, line:4315:53>
| |   |   |   `-BinaryOperator 0x7fd2caa48f18 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fd2caa48ed0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fd2caa48eb0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fd2caa48e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fd2caa48db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     |     `-DeclRefExpr 0x7fd2caa48e58 <col:45> '_A0' lvalue ParmVar 0x7fd2caa48708 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd2caa48ef0 <col:53> '_Fp' lvalue ParmVar 0x7fd2caa48668 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd2caa48d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa48d50 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa4aa78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd2caa48f78 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa48fe8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fd2caa4a9e0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd2caa490e8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa49228 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd2caa4ae38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa4ae20 <col:7, line:4323:80>
| |   |   |   `-CallExpr 0x7fd2caa4adf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fd2caa4ac50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fd2caa4ab88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     | `-DeclRefExpr 0x7fd2caa4ac28 <col:43> '_Fp' lvalue ParmVar 0x7fd2caa490e8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd2caa4add0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa4ada0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd2caa4acd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |         `-DeclRefExpr 0x7fd2caa4ad78 <col:70> '_Args &&...' lvalue ParmVar 0x7fd2caa49228 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd2caa4aad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa4ab20 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa4b868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd2caa4ae58 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa4aec8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fd2caa4b7d0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd2caa4afc8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd2caa4b0a8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd2caa4bc28 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd2caa4bc10 <col:7, line:4329:80>
| |   |   |   `-CallExpr 0x7fd2caa4bbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fd2caa4ba40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fd2caa4b978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |     | `-DeclRefExpr 0x7fd2caa4ba18 <col:43> '_Fp' lvalue ParmVar 0x7fd2caa4afc8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd2caa4bbc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa4bb90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd2caa4bac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd2ca9f3380 0x7fd2ca9f38a0
| |   |   |         `-DeclRefExpr 0x7fd2caa4bb68 <col:70> '_Args &&...' lvalue ParmVar 0x7fd2caa4b0a8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd2caa4b8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa4b910 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fd2caa4be58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7fd2caa4bc48 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd2caa4bcb8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa4bd28 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa4bdc0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7fd2caa4c278 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7fd2caa4c6b8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7fd2caa4c680 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7fd2caa4c600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fd2caa4c340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fd2caa36048 0x7fd2caa39ce8 0x7fd2caa3ce88 0x7fd2caa40008 0x7fd2caa43138 0x7fd2caa45498 0x7fd2caa47898 0x7fd2caa4aa78
| |   |   |     |-CallExpr 0x7fd2caa4c4a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7fd2caa4c410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   |   |     `-PackExpansionExpr 0x7fd2caa4c5d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd2caa4c5a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7fd2caa4c510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   |   `-VarDecl 0x7fd2caa4c728 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fd2caa4d040 <line:4343:9, line:4351:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7fd2caa4d458 <line:4354:1, line:4355:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7fd2caa4d0a0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa4d108 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7fd2caa4d3f8 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fd2caa4d2c0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fd2caa4d7c8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa4d4b8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa4d520 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7fd2caa4d578 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd2caa4d5e8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa4d658 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa4d730 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7fd2caa4dbe0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7fd2caa4dc88 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fd2caa4dce8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa4e1b8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd2caa4dd20 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd2caa4dd88 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa4ddf8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fd2caa4f800 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7fd2caa4f8a8 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7fd2caa4e320 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7fd2caa4e1b8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7fd2caa4fb60 <line:4367:5, line:4368:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7fd2caa4f900 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fd2caa4fac8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7fd2caa4f990 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7fd2caa4fbc8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fd2caa500a8 <col:31, line:4371:76> '_Bool'
| |   |     `-CallExpr 0x7fd2caa50078 <line:4370:40, line:4371:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fd2caa4fcc8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fd2caa4fb60
| |   |       `-CallExpr 0x7fd2caa50040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7fd2caa4fd90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fd2caa36048 0x7fd2caa39ce8 0x7fd2caa3ce88 0x7fd2caa40008 0x7fd2caa43138 0x7fd2caa45498 0x7fd2caa47898 0x7fd2caa4aa78
| |   |         |-CallExpr 0x7fd2caa4fef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7fd2caa4fe60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   |         `-PackExpansionExpr 0x7fd2caa50020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
| |   |           `-CallExpr 0x7fd2caa4fff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7fd2caa4ff60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa50588 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd2caa500f0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd2caa50158 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa501c8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fd2caa50960 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7fd2caa50a08 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fd2caa50d80 <col:31, line:4378:75> '_Bool'
| |   |     `-CallExpr 0x7fd2caa50d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fd2caa50a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fd2caa36048 0x7fd2caa39ce8 0x7fd2caa3ce88 0x7fd2caa40008 0x7fd2caa43138 0x7fd2caa45498 0x7fd2caa47898 0x7fd2caa4aa78
| |   |       |-CallExpr 0x7fd2caa50c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7fd2caa50b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   |       `-PackExpansionExpr 0x7fd2caa50d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
| |   |         `-CallExpr 0x7fd2caa50d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7fd2caa50c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   |-TypeAliasTemplateDecl 0x7fd2caa515d8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7fd2caa50dc8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd2caa50e38 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa50ea8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7fd2caa51578 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fd2caa513b0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fd2caa51110 <line:4384:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fd2caa51230 <line:4385:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fd2caa51800 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7fd2caa51628 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa51698 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd2caa51728 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7fd2caa52268 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa52628 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fd2caa52320 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd2caa52388 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7fd2caa52780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd2caa529f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7fd2caa52cf0 <line:4406:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7fd2caa52ab0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2caa52c90 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2caa52c20 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2caa52e58 <line:4440:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fd2caa52d40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa52dc0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7fd2caa53188 <line:4441:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fd2caa53068 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa530f0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7fd2caa53d68 <line:4443:1, line:4460:1> line:4454:1 swap
| |   | |-TemplateTypeParmDecl 0x7fd2caa53398 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2caa53cd0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fd2caa538b8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7fd2caa53928 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7fd2caa54248 <line:4456:1, line:4460:1>
| |   |   | |-DeclStmt 0x7fd2caa53fd0 <line:4457:5, col:30>
| |   |   | | `-VarDecl 0x7fd2caa53eb8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7fd2caa53fa0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7fd2caa53f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7fd2caa53e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fd2ca9f2c38
| |   |   | |       `-DeclRefExpr 0x7fd2caa53f18 <col:25> '_Tp' lvalue ParmVar 0x7fd2caa538b8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7fd2caa540f0 <line:4458:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7fd2caa53fe8 <col:5> '_Tp' lvalue ParmVar 0x7fd2caa538b8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7fd2caa540c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7fd2caa54040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fd2ca9f2c38
| |   |   | |   `-DeclRefExpr 0x7fd2caa54098 <col:23> '_Tp' lvalue ParmVar 0x7fd2caa53928 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7fd2caa54220 <line:4459:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7fd2caa54118 <col:5> '_Tp' lvalue ParmVar 0x7fd2caa53928 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7fd2caa541f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fd2caa54170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fd2ca9f2c38
| |   |   |     `-DeclRefExpr 0x7fd2caa541c8 <col:23> '_Tp' lvalue Var 0x7fd2caa53eb8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fd2caa53dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa53e10 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa54bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
| |   | |-TemplateTypeParmDecl 0x7fd2caa54278 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa542f8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7fd2caa54b40 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fd2caa54798 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7fd2caa548e8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7fd2caa54c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa54c80 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa552f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7fd2caa54c90 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7fd2caa54cf8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7fd2caa55260 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7fd2caa54dc8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7fd2caa54e38 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7fd2caa554d8 <line:4476:1, line:4478:1>
| |   |   | `-CallExpr 0x7fd2caa554a0 <line:4477:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7fd2caa553b0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fd2caa54bd8 0x7fd2caa53d68
| |   |   |   |-UnaryOperator 0x7fd2caa55438 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7fd2caa55410 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fd2caa54dc8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7fd2caa55480 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7fd2caa55458 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fd2caa54e38 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7fd2caa55358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa553a0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7fd2caa554f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
| |   | |-ClassTemplateDecl 0x7fd2caa559f8 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fd2caa55560 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fd2caa555d8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fd2caa558e0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7fd2caa558a8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7fd2caa55758 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7fd2caa55718 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7fd2caa55888 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7fd2caa55848 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fd2caa55960 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fd2caa55d00 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7fd2caa563b8 <line:4490:5, line:4492:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fd2caa55d98 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7fd2caa55e08 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7fd2caa56320 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7fd2caa56178 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7fd2caa56678 <line:4493:5, line:4494:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fd2caa56410 <line:4493:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7fd2caa56478 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7fd2caa565e0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7fd2caa56520 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7fd2caa568c8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7fd2caa56890 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fd2caa56828 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fd2caa567f8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fd2caa56708 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fd2caa56678 0x7fd2caa563b8
| |   | |   |       `-IntegerLiteral 0x7fd2caa567d8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7fd2caa56b18 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7fd2caa56ae0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fd2caa56a78 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fd2caa56a48 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fd2caa56958 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fd2caa56678 0x7fd2caa563b8
| |   | |   |       `-IntegerLiteral 0x7fd2caa56a28 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7fd2caa56b80 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fd2caa56fb8 <col:31, line:4501:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7fd2caa56da8 <line:4500:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7fd2caa56d68 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7fd2caa56f98 <line:4501:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7fd2caa56f58 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7fd2caa572c8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7fd2caa57000 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fd2caa57068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7fd2caa575f0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7fd2caa57d40 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fd2caa576a8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fd2caa57728 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fd2caa57c28 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7fd2caa57bd8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fd2caa57ca8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fd2caa58040 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7fd2caa580e8 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fd2caa586c8 <line:4511:7, line:4512:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7fd2caa583e0 <line:4511:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7fd2caa583a8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7fd2caa58148 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fd2caa54bd8 0x7fd2caa53d68
| |   | |       |   |-CallExpr 0x7fd2caa58280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7fd2caa581e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   | |       |   `-CallExpr 0x7fd2caa58380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7fd2caa582e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   | |       `-CXXNoexceptExpr 0x7fd2caa586a0 <line:4512:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7fd2caa58668 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7fd2caa58408 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fd2caa54bd8 0x7fd2caa53d68
| |   | |           |-CallExpr 0x7fd2caa58540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7fd2caa584a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   | |           `-CallExpr 0x7fd2caa58640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7fd2caa585a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd2ca97d650
| |   | `-ClassTemplatePartialSpecializationDecl 0x7fd2caa589d8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7fd2caa58710 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7fd2caa58778 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7fd2caa58d00 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7fd2caa58ed8 prev 0x7fd2caa52e58 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fd2caa58db8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa58e40 prev 0x7fd2caa52dc0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fd2caa59648 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7fd2caa59898 prev 0x7fd2caa53188 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fd2caa59700 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa59800 prev 0x7fd2caa530f0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fd2caa5a0c8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7fd2caa5a298 <line:4589:1, line:4593:1> line:4590:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7fd2caa5a180 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa5a200 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7fd2caa5a510 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7fd2caa5a650 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7fd2caa5a600 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7fd2caa5a1c0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7fd2caa5a180 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd2caa5a910 <line:4596:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7fd2caa5a6c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd2caa5a8b0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7fd2caa5a840 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd2caa5abf8 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7fd2caa5a960 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa5aae8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2caa5aa98 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd2caa5ab60 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7fd2caa5aec0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7fd2caa5b080 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7fd2caa5b010 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7fd2caa5b238 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7fd2caa5b200 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7fd2caa5b198 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7fd2caa5b158 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7fd2caa5b130 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7fd2caa5b100 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7fd2caa5b178 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa5b490 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2caa5b2b0 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa5b720 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7fd2caa5c8e8 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7fd2caa5c820 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7fd2caa5ca38 <col:38, col:54>
| |   | | `-ReturnStmt 0x7fd2caa5ca20 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7fd2caa5ca08 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd2caa5c9e0 <col:47> 'int' lvalue ParmVar 0x7fd2caa5c820 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7fd2caa5c988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd2caa5c9d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd2caa5cb68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7fd2caa5caa0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7fd2caa5ccb8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7fd2caa5cca0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7fd2caa5cc88 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd2caa5cc60 <col:57> 'unsigned int' lvalue ParmVar 0x7fd2caa5caa0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7fd2caa5cc08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd2caa5cc50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd2caa5cde8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7fd2caa5cd20 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7fd2caa5cf38 <col:40, col:56>
| |   | | `-ReturnStmt 0x7fd2caa5cf20 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7fd2caa5cf08 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd2caa5cee0 <col:49> 'long' lvalue ParmVar 0x7fd2caa5cd20 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7fd2caa5ce88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd2caa5ced0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd2caa5d068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7fd2caa5cfa0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7fd2caa5d1b8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7fd2caa5d1a0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7fd2caa5d188 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd2caa5d160 <col:67> 'unsigned long' lvalue ParmVar 0x7fd2caa5cfa0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7fd2caa5d108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd2caa5d150 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd2caa5d2e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7fd2caa5d220 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7fd2caa5d438 <col:50, col:66>
| |   | | `-ReturnStmt 0x7fd2caa5d420 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7fd2caa5d408 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd2caa5d3e0 <col:59> 'long long' lvalue ParmVar 0x7fd2caa5d220 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7fd2caa5d388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd2caa5d3d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd2caa5d568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7fd2caa5d4a0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7fd2caa5d6b8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7fd2caa5d6a0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7fd2caa5d688 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd2caa5d660 <col:76> 'unsigned long long' lvalue ParmVar 0x7fd2caa5d4a0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7fd2caa5d608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd2caa5d650 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd2caa5d820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7fd2caa5d718 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7fd2caa5d970 <col:52, col:68>
| |   | | `-ReturnStmt 0x7fd2caa5d958 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7fd2caa5d940 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd2caa5d918 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fd2caa5d718 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7fd2caa5d8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd2caa5d908 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd2caa5dad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7fd2caa5d9d0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7fd2caa5dc20 <col:54, col:70>
| |   | | `-ReturnStmt 0x7fd2caa5dc08 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7fd2caa5dbf0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd2caa5dbc8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fd2caa5d9d0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7fd2caa5db70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd2caa5dbb8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd2caa5e168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7fd2caa5dc40 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd2caa5e0d0 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7fd2caa5dfc0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7fd2caa5e258 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7fd2caa5e240 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7fd2caa5e218 <col:43> '_Tp' lvalue ParmVar 0x7fd2caa5dfc0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fd2caa5e1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd2caa5e208 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fd2caa5e398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7fd2caa5e278 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa5e300 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7fd2caa5e610 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7fd2caa5ed18 <line:4658:5, line:4660:95> line:4659:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd2caa5e6a8 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fd2caa5ec80 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fd2caa5e748 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fd2caa5efb8 <line:4661:5, line:4662:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd2caa5ed70 <line:4661:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fd2caa5ef20 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fd2caa5ee08 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fd2caa5f020 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fd2caa5f258 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fd2caa5f3d8 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7fd2caa5f2b8 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa5f340 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7fd2caa5f650 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7fd2caa5fd58 <line:4670:5, line:4672:94> line:4671:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd2caa5f6e8 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fd2caa5fcc0 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fd2caa5f788 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fd2caa5ff78 <line:4673:5, line:4674:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd2caa5fdb0 <line:4673:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fd2caa5fee0 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fd2caa5fe48 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fd2caa5ffe0 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fd2caa601d8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fd2caa60358 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7fd2caa60238 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa602c0 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7fd2caa609f8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7fd2caa60ab0 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7fd2caa60bd8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7fd2caa60c90 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7fd2caa60db8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7fd2caa60e70 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7fd2caa60f98 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7fd2caa613b8 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7fd2caa61050 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fd2caa610b8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fd2caa61290 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fd2caa61320 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7fd2caa61af0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa620c8 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7fd2caa61ba8 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7fd2caa61c18 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fd2caa61c88 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7fd2caa61cf8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7fd2caa73a60 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7fd2caa73ec0 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7fd2caa73b18 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fd2caa73b88 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fd2caa73bf8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7fd2caa73d90 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fd2caa73e28 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7fd2caa74508 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caa74960 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7fd2caa745c0 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fd2caa74628 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fd2caa74698 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7fd2caa74ce0 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7fd2caac0278 parent 0x7fd2ca93cb80 prev 0x7fd2ca93dd50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-NamespaceDecl 0x7fd2caa74d98 prev 0x7fd2ca9332c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fd2ca865658 'std'
| | `-NamespaceDecl 0x7fd2caa74e00 prev 0x7fd2ca933330 <col:52, line:439:36> <scratch space>:432:1 __1 inline
| |   |-original Namespace 0x7fd2ca8656c0 '__1'
| |   |-EnumDecl 0x7fd2caa74e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:125:1, line:132:1> line:125:6 referenced float_round_style
| |   | |-EnumConstantDecl 0x7fd2caa74f60 <line:127:5, col:34> col:5 round_indeterminate 'enum std::__1::float_round_style'
| |   | | `-UnaryOperator 0x7fd2caa74f40 <col:33, col:34> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fd2caa74f20 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fd2caa74fc8 <line:128:5, col:34> col:5 referenced round_toward_zero 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fd2caa74fa8 <col:34> 'int' 0
| |   | |-EnumConstantDecl 0x7fd2caa75030 <line:129:5, col:34> col:5 referenced round_to_nearest 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fd2caa75010 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fd2caa75098 <line:130:5, col:34> col:5 round_toward_infinity 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fd2caa75078 <col:34> 'int' 2
| |   | `-EnumConstantDecl 0x7fd2caa75100 <line:131:5, col:34> col:5 round_toward_neg_infinity 'enum std::__1::float_round_style'
| |   |   `-IntegerLiteral 0x7fd2caa750e0 <col:34> 'int' 3
| |   |-EnumDecl 0x7fd2caa75148 <line:134:1, line:139:1> line:134:6 referenced float_denorm_style
| |   | |-EnumConstantDecl 0x7fd2caa75240 <line:136:5, col:29> col:5 denorm_indeterminate 'enum std::__1::float_denorm_style'
| |   | | `-UnaryOperator 0x7fd2caa75220 <col:28, col:29> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fd2caa75200 <col:29> 'int' 1
| |   | |-EnumConstantDecl 0x7fd2caa752a8 <line:137:5, col:21> col:5 referenced denorm_absent 'enum std::__1::float_denorm_style'
| |   | | `-IntegerLiteral 0x7fd2caa75288 <col:21> 'int' 0
| |   | `-EnumConstantDecl 0x7fd2caa75310 <line:138:5, col:22> col:5 referenced denorm_present 'enum std::__1::float_denorm_style'
| |   |   `-IntegerLiteral 0x7fd2caa752f0 <col:22> 'int' 1
| |   |-ClassTemplateDecl 0x7fd2caa755f8 <line:141:1, line:184:1> line:142:7 __libcpp_numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fd2caa75358 <line:141:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2caa754e8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2caa75498 <col:29, col:49> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fd2caa75560 <line:142:1, line:184:1> line:142:7 class __libcpp_numeric_limits definition
| |   | | |-CXXRecordDecl 0x7fd2ca9ce0f0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | | |-AccessSpecDecl 0x7fd2ca9ce188 <line:144:1, col:10> col:1 protected
| |   | | |-TypedefDecl 0x7fd2ca9ce1c0 <line:145:5, col:17> col:17 referenced type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fd2caa753a0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fd2caa75358 '_Tp'
| |   | | |-VarDecl 0x7fd2ca9ce228 <line:147:5, col:59> col:42 is_specialized 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9ce288 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fd2ca9ce3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:148:92> col:61 constexpr min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cfb98 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fd2ca9cfb80 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfb58 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9ce440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9ce488 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd2ca9ce4f0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:149:92> col:61 constexpr max 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cfc08 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fd2ca9cfbf0 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfbc8 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9ce588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9ce5d0 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd2ca9ce638 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:150:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cfc78 <col:80, col:95>
| |   | | | | `-ReturnStmt 0x7fd2ca9cfc60 <col:81, col:93>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfc38 <col:88, col:93> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9ce6d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9ce718 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fd2ca9ce740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:152:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd2ca9ce7a0 <col:50> 'int' 0
| |   | | |-VarDecl 0x7fd2ca9ce7d8 <line:153:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd2ca9ce838 <col:52> 'int' 0
| |   | | |-VarDecl 0x7fd2ca9ce870 <line:154:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd2ca9ce8d0 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fd2ca9ce900 <line:155:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9ce960 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9ce988 <line:156:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9ce9e8 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9cea10 <line:157:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cea70 <col:52> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9ceaa0 <line:158:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd2ca9ceb00 <col:49> 'int' 0
| |   | | |-CXXMethodDecl 0x7fd2ca9ceb78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:159:96> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cfce8 <col:81, col:96>
| |   | | | | `-ReturnStmt 0x7fd2ca9cfcd0 <col:82, col:94>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfca8 <col:89, col:94> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9cec10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9cec58 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd2ca9cecc0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:160:100> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cfd58 <col:85, col:100>
| |   | | | | `-ReturnStmt 0x7fd2ca9cfd40 <col:86, col:98>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfd18 <col:93, col:98> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9ced58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9ceda0 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fd2ca9cedc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:162:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd2ca9cee28 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fd2ca9cee60 <line:163:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd2ca9ceec0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fd2ca9ceef8 <line:164:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd2ca9cef58 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fd2ca9cef90 <line:165:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd2ca9ceff0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fd2ca9cf020 <line:167:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cf080 <col:56> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9cf0a8 <line:168:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cf108 <col:57> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9cf130 <line:169:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cf190 <col:61> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9cf1b8 <line:170:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fd2ca9cf218 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd2caa752a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | | |-VarDecl 0x7fd2ca9cf250 <line:171:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cf2b0 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fd2ca9cf320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:172:97> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cfdc8 <col:82, col:97>
| |   | | | | `-ReturnStmt 0x7fd2ca9cfdb0 <col:83, col:95>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfd88 <col:90, col:95> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9cf3b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9cf400 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd2ca9cf468 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:173:98> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cfe38 <col:83, col:98>
| |   | | | | `-ReturnStmt 0x7fd2ca9cfe20 <col:84, col:96>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfdf8 <col:91, col:96> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9cf500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9cf548 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd2ca9cf5b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:174:102> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cfea8 <col:87, col:102>
| |   | | | | `-ReturnStmt 0x7fd2ca9cfe90 <col:88, col:100>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfe68 <col:95, col:100> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9cf648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9cf690 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd2ca9cf6f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:175:99> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd2ca9cff18 <col:84, col:99>
| |   | | | | `-ReturnStmt 0x7fd2ca9cff00 <col:85, col:97>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9cfed8 <col:92, col:97> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd2ca9cf790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd2ca9cf7d8 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fd2ca9cf7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:177:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cf858 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9cf880 <line:178:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cf8e0 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9cf908 <line:179:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cf968 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9cf990 <line:181:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cf9f0 <col:49> '_Bool' false
| |   | | |-VarDecl 0x7fd2ca9cfa18 <line:182:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd2ca9cfa78 <col:59> '_Bool' false
| |   | | `-VarDecl 0x7fd2ca9cfaa0 <line:183:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   | |   `-DeclRefExpr 0x7fd2ca9cfb00 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd2caa74fc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   | |-ClassTemplateSpecialization 0x7fd2ca9d3fe0 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fd2caa91280 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fd2caa94360 '__libcpp_numeric_limits'
| |   | `-ClassTemplateSpecialization 0x7fd2caa97490 '__libcpp_numeric_limits'
| |   |-ClassTemplateDecl 0x7fd2ca9d0580 <line:186:1, line:190:1> line:187:8 __libcpp_compute_min
| |   | |-TemplateTypeParmDecl 0x7fd2ca9cff38 <line:186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9d0400 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9d0468 <col:36, col:41> col:41 '_Bool' depth 0 index 2 _IsSigned
| |   | `-CXXRecordDecl 0x7fd2ca9d04e8 <line:187:1, line:190:1> line:187:8 struct __libcpp_compute_min definition
| |   |   |-CXXRecordDecl 0x7fd2ca9d08b0 <col:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   |   `-VarDecl 0x7fd2ca9d0958 <line:189:5, col:70> col:40 value 'const _Tp' static constexpr cinit
| |   |     `-CXXUnresolvedConstructExpr 0x7fd2ca9d0a78 <col:48, col:70> '_Tp'
| |   |       `-BinaryOperator 0x7fd2ca9d0a50 <col:52, col:62> '<dependent type>' '<<'
| |   |         |-CXXUnresolvedConstructExpr 0x7fd2ca9d09f8 <col:52, col:57> '_Tp'
| |   |         | `-IntegerLiteral 0x7fd2ca9d09d8 <col:56> 'int' 1
| |   |         `-DeclRefExpr 0x7fd2ca9d0a28 <col:62> 'int' NonTypeTemplateParm 0x7fd2ca9d0400 '__digits' 'int'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9d0db8 <line:192:1, line:196:1> line:193:8 struct __libcpp_compute_min definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd2ca9d0bd8 <col:34> 'int' NonTypeTemplateParm 0x7fd2ca9d0b50 '__digits' 'int'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d0ac8 <line:192:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd2ca9d0b50 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-CXXRecordDecl 0x7fd2ca9d1090 <line:193:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   | `-VarDecl 0x7fd2ca9d1138 <line:195:5, col:53> col:40 value 'const _Tp' static constexpr cinit
| |   |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d11c8 <col:48, col:53> '_Tp'
| |   |     `-IntegerLiteral 0x7fd2ca9d11a8 <col:52> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9d1400 <line:198:1, line:249:1> line:199:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd2ca9d1218 <line:198:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd2ca9d1690 <line:199:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd2ca9d1728 <line:201:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd2ca9d1760 <line:202:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9d1260 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9d1218 '_Tp'
| |   | |-VarDecl 0x7fd2ca9d17c8 <line:204:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d1828 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd2ca9d1850 <line:206:5, col:70> col:41 referenced is_signed 'const _Bool' static constexpr cinit
| |   | | `-BinaryOperator 0x7fd2ca9d19b0 <col:53, col:70> '<dependent type>' '<'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fd2ca9d1920 <col:53, col:60> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-UnaryOperator 0x7fd2ca9d1900 <col:58, col:59> 'int' prefix '-'
| |   | |   |   `-IntegerLiteral 0x7fd2ca9d18e0 <col:59> 'int' 1
| |   | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d1980 <col:64, col:70> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-IntegerLiteral 0x7fd2ca9d1960 <col:69> 'int' 0
| |   | |-VarDecl 0x7fd2ca9d19f0 <line:207:5, col:106> col:41 referenced digits 'const int' static constexpr cinit
| |   | | `-CXXStaticCastExpr 0x7fd2ca9d1b90 <col:50, col:106> 'int' static_cast<int> <NoOp>
| |   | |   `-ImplicitCastExpr 0x7fd2ca9d1b78 <col:67, col:97> 'int' <IntegralCast>
| |   | |     `-BinaryOperator 0x7fd2ca9d1b38 <col:67, col:97> 'unsigned long' '-'
| |   | |       |-BinaryOperator 0x7fd2ca9d1ab8 <col:67, <built-in>:66:22> 'unsigned long' '*'
| |   | |       | |-UnaryExprOrTypeTraitExpr 0x7fd2ca9d1a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:67, col:78> 'unsigned long' sizeof 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |       | `-ImplicitCastExpr 0x7fd2ca9d1aa0 <<built-in>:66:22> 'unsigned long' <IntegralCast>
| |   | |       |   `-IntegerLiteral 0x7fd2ca9d1a80 <col:22> 'int' 8
| |   | |       `-ImplicitCastExpr 0x7fd2ca9d1b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:97> 'unsigned long' <IntegralCast>
| |   | |         `-ImplicitCastExpr 0x7fd2ca9d1b08 <col:97> '_Bool' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x7fd2ca9d1ae0 <col:97> 'const _Bool' lvalue Var 0x7fd2ca9d1850 'is_signed' 'const _Bool'
| |   | |-VarDecl 0x7fd2ca9d1bd8 <line:208:5, col:65> col:41 digits10 'const int' static constexpr cinit
| |   | | `-BinaryOperator 0x7fd2ca9d1ce0 <col:52, col:65> 'int' '/'
| |   | |   |-BinaryOperator 0x7fd2ca9d1c98 <col:52, col:61> 'int' '*'
| |   | |   | |-ImplicitCastExpr 0x7fd2ca9d1c80 <col:52> 'int' <LValueToRValue>
| |   | |   | | `-DeclRefExpr 0x7fd2ca9d1c38 <col:52> 'const int' lvalue Var 0x7fd2ca9d19f0 'digits' 'const int'
| |   | |   | `-IntegerLiteral 0x7fd2ca9d1c60 <col:61> 'int' 3
| |   | |   `-IntegerLiteral 0x7fd2ca9d1cc0 <col:65> 'int' 10
| |   | |-VarDecl 0x7fd2ca9d1d20 <line:209:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2ca9d1d80 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd2ca9d1db0 <line:210:5, col:96> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9d2038 <col:49, col:96> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9d2088 <line:211:5, col:93> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-ConditionalOperator 0x7fd2ca9d22b8 <col:49, col:93> '<dependent type>'
| |   | |   |-ImplicitCastExpr 0x7fd2ca9d22a0 <col:49> '_Bool' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0x7fd2ca9d20e8 <col:49> 'const _Bool' lvalue Var 0x7fd2ca9d1850 'is_signed' 'const _Bool'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fd2ca9d21f0 <col:61, col:82> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-BinaryOperator 0x7fd2ca9d21c8 <col:66, col:77> '<dependent type>' '^'
| |   | |   |   |-CXXUnresolvedConstructExpr 0x7fd2ca9d2170 <col:66, col:73> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   |   | `-UnaryOperator 0x7fd2ca9d2150 <col:71, col:72> 'int' prefix '~'
| |   | |   |   |   `-IntegerLiteral 0x7fd2ca9d2130 <col:72> 'int' 0
| |   | |   |   `-DeclRefExpr 0x7fd2ca9d21a0 <col:77> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fd2ca9d1db0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d2270 <col:86, col:93> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-UnaryOperator 0x7fd2ca9d2250 <col:91, col:92> 'int' prefix '~'
| |   | |       `-IntegerLiteral 0x7fd2ca9d2230 <col:92> 'int' 0
| |   | |-CXXMethodDecl 0x7fd2ca9d2400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:212:91> col:61 referenced constexpr min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3b10 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fd2ca9d3af8 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fd2ca9d3ad0 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fd2ca9d1db0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d2498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d24e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9d2548 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:213:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3b70 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fd2ca9d3b58 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fd2ca9d3b30 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fd2ca9d2088 '__max' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d25e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d2628 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9d2690 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:214:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3bf8 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fd2ca9d3be0 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fd2ca9d3bb8 <col:88, col:92> '<dependent type>'
| |   | | |     `-DeclRefExpr 0x7fd2ca9d3b90 <col:88> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' lvalue CXXMethod 0x7fd2ca9d2400 'min' 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d2728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d2770 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2ca9d2790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:216:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d27f0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd2ca9d2818 <line:217:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d2878 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fd2ca9d28a8 <line:218:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2ca9d2908 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fd2ca9d2980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:219:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3c90 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fd2ca9d3c78 <col:82, col:95>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d3c48 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd2ca9d3c28 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d2a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d2a60 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9d2ac8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:220:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3d28 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fd2ca9d3d10 <col:86, col:99>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d3ce0 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd2ca9d3cc0 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d2b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d2ba8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2ca9d2bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:222:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2ca9d2c30 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd2ca9d2c68 <line:223:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2ca9d2cc8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fd2ca9d2d00 <line:224:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2ca9d2d60 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd2ca9d2d98 <line:225:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2ca9d2df8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fd2ca9d2e28 <line:227:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d2e88 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fd2ca9d2eb0 <line:228:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d2f10 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fd2ca9d2f38 <line:229:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d2f98 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fd2ca9d2fc0 <line:230:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd2ca9d3020 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd2caa752a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd2ca9d3058 <line:231:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d30b8 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd2ca9d3128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:232:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3dc0 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fd2ca9d3da8 <col:83, col:96>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d3d78 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd2ca9d3d58 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d31c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d3208 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9d3270 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:233:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3e58 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fd2ca9d3e40 <col:84, col:97>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d3e10 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd2ca9d3df0 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d3308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d3350 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9d33b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:234:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3ef0 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fd2ca9d3ed8 <col:88, col:101>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d3ea8 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd2ca9d3e88 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d3450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d3498 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9d3500 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:235:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9d3f88 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fd2ca9d3f70 <col:85, col:98>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd2ca9d3f40 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd2ca9d3f20 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2ca9d3598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9d35e0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2ca9d3600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:237:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d3660 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd2ca9d3688 <line:238:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d36e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd2ca9d3710 <line:239:5, col:77> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-UnaryOperator 0x7fd2ca9d38e8 <col:53, col:77> '<dependent type>' prefix '!'
| |   | |   `-DependentScopeDeclRefExpr 0x7fd2ca9d38a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:239:77> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9d3918 <line:243:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d3978 <col:49> '_Bool' true
| |   | |-VarDecl 0x7fd2ca9d39a0 <line:247:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d3a00 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd2ca9d3a28 <line:248:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd2ca9d3a88 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd2caa74fc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fd2ca9d3fe0 <line:251:1, line:297:1> line:252:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2ca9d4250 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd2ca9d42e8 <line:254:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd2ca9d4320 <line:255:5, col:18> col:18 referenced type '_Bool'
| |   | | `-BuiltinType 0x7fd2ca832540 '_Bool'
| |   | |-VarDecl 0x7fd2ca9d4388 <line:257:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2ca9d43e8 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd2caa8ea68 <line:259:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa8eac8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd2caa8eb50 <line:260:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa8ebb0 <col:50> 'int' 1
| |   | |-VarDecl 0x7fd2caa8ec40 <line:261:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa8eca0 <col:52> 'int' 0
| |   | |-VarDecl 0x7fd2caa8ed30 <line:262:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa8ed90 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd2caa8ee40 <line:263:5, col:49> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa8eea0 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd2caa8ef20 <line:264:5, col:49> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa8ef80 <col:49> '_Bool' true
| |   | |-CXXMethodDecl 0x7fd2caa8f0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:265:91> col:61 used constexpr min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa90cb8 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fd2caa90ca0 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fd2caa90c88 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fd2caa90c60 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fd2caa8ee40 '__min' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fd2caa8f170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa8f1b8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa8f220 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:266:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa90d30 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fd2caa90d18 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fd2caa90d00 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fd2caa90cd8 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fd2caa8ef20 '__max' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fd2caa8f2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa8f300 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa8f368 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:267:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa90e30 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fd2caa90e18 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fd2caa90df0 <col:88, col:92> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa90dd8 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |       `-DeclRefExpr 0x7fd2caa90d50 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' lvalue CXXMethod 0x7fd2caa8f0d8 'min' 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd2caa8f400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa8f448 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa8f468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:269:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa8f4c8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd2caa8f548 <line:270:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa8f5a8 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fd2caa8f630 <line:271:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa8f690 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fd2caa8f760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:272:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa90ed8 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fd2caa90ec0 <col:82, col:95>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd2caa90e98 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd2caa90e80 <col:94> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd2caa90e60 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2caa8f7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa8f840 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa8f8a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:273:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa90f80 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fd2caa90f68 <col:86, col:99>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd2caa90f40 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd2caa90f28 <col:98> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd2caa90f08 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2caa8f940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa8f988 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa8f9b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:275:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa8fa10 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd2caa8faa0 <line:276:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa8fb00 <col:58> 'int' 0
| |   | |-VarDecl 0x7fd2caa8fb90 <line:277:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa8fbf0 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd2caa8fc80 <line:278:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa8fce0 <col:58> 'int' 0
| |   | |-VarDecl 0x7fd2caa8fd68 <line:280:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa8fdc8 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fd2caa8fe48 <line:281:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa8fea8 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fd2caa8ff28 <line:282:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa8ff88 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fd2caa90008 <line:283:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd2caa90068 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd2caa752a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd2caa900f8 <line:284:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa90158 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd2caa90220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:285:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa91028 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fd2caa91010 <col:83, col:96>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd2caa90fe8 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd2caa90fd0 <col:95> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd2caa90fb0 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2caa902b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa90300 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa90368 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:286:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa910d0 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fd2caa910b8 <col:84, col:97>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd2caa91090 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd2caa91078 <col:96> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd2caa91058 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2caa90400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa90448 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa904b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:287:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa91178 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fd2caa91160 <col:88, col:101>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd2caa91138 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd2caa91120 <col:100> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd2caa91100 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2caa90548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa90590 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa905f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:288:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa91220 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fd2caa91208 <col:85, col:98>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd2caa911e0 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd2caa911c8 <col:97> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd2caa911a8 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd2caa90690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa906d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa906f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:290:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa90758 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd2caa907d8 <line:291:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa90838 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd2caa908b8 <line:292:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa90918 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd2caa90998 <line:294:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa90a00 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd2caa90a80 <line:295:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa90ae0 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd2caa90b60 <line:296:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd2caa90bc0 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd2caa74fc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fd2caa91280 <line:299:1, line:343:1> line:300:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'float'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2caa914f0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd2caa91588 <line:302:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd2caa915c8 <line:303:5, col:19> col:19 referenced type 'float'
| |   | | `-BuiltinType 0x7fd2ca8326c0 'float'
| |   | |-VarDecl 0x7fd2caa91630 <line:305:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa91690 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd2caa91710 <line:307:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa91770 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd2caa917f8 <line:308:5, <built-in>:139:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:308:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa91858 <<built-in>:139:26> 'int' 24
| |   | |-VarDecl 0x7fd2caa918e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:5, <built-in>:134:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa91948 <<built-in>:134:21> 'int' 6
| |   | |-VarDecl 0x7fd2caa919d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:310:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fd2caa91ba0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fd2caa91b78 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fd2caa91b60 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fd2caa91a38 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fd2caa91b38 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fd2caa91af8 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fd2caa91ad0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fd2caa91ab8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fd2caa91aa0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fd2caa91a58 <col:59> 'const int' lvalue Var 0x7fd2caa917f8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fd2caa91a80 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fd2caa91b18 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fd2caa91ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:311:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa93928 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fd2caa93910 <col:78, <built-in>:145:21>
| |   | | |   `-FloatingLiteral 0x7fd2caa938f0 <col:21> 'float' 1.175494e-38
| |   | | |-AlwaysInlineAttr 0x7fd2caa91d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa91dc8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa91e30 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:312:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa93980 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fd2caa93968 <col:78, <built-in>:142:21>
| |   | | |   `-FloatingLiteral 0x7fd2caa93948 <col:21> 'float' 3.402823e+38
| |   | | |-AlwaysInlineAttr 0x7fd2caa91ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa91f10 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa91f78 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:313:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa93a70 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fd2caa93a58 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fd2caa93a38 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float' prefix '-'
| |   | | |     `-CallExpr 0x7fd2caa93a10 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float'
| |   | | |       `-ImplicitCastExpr 0x7fd2caa939f8 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fd2caa939a0 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' lvalue CXXMethod 0x7fd2caa91e30 'max' 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd2caa92010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa92058 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa92078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:315:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa920d8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fd2caa92158 <line:316:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa921b8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fd2caa92240 <line:317:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:317:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa922a0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fd2caa92370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:318:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa93ac8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fd2caa93ab0 <col:82, <built-in>:136:25>
| |   | | |   `-FloatingLiteral 0x7fd2caa93a90 <col:25> 'float' 1.192093e-07
| |   | | |-AlwaysInlineAttr 0x7fd2caa92408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa92450 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa924b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:319:98> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa93b20 <col:85, col:98>
| |   | | | `-ReturnStmt 0x7fd2caa93b08 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fd2caa93ae8 <col:93> 'float' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fd2caa92550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa92598 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa925c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:5, <built-in>:144:30> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd2caa92660 <<built-in>:144:25, col:30> 'int'
| |   | |   `-UnaryOperator 0x7fd2caa92640 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd2caa92620 <col:27> 'int' 125
| |   | |-VarDecl 0x7fd2caa926f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:5, <built-in>:143:32> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd2caa92790 <<built-in>:143:28, col:32> 'int'
| |   | |   `-UnaryOperator 0x7fd2caa92770 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd2caa92750 <col:30> 'int' 37
| |   | |-VarDecl 0x7fd2caa92820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:5, <built-in>:141:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa92880 <<built-in>:141:25> 'int' 128
| |   | |-VarDecl 0x7fd2caa92910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:5, <built-in>:140:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa92970 <<built-in>:140:28> 'int' 38
| |   | |-VarDecl 0x7fd2caa92a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:326:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa92a60 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fd2caa92ae0 <line:327:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa92b40 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fd2caa92bc0 <line:328:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa92c20 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fd2caa92ca0 <line:329:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd2caa92d00 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd2caa75310 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd2caa92d90 <line:330:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa92df0 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd2caa92eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa93d00 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fd2caa93ce8 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fd2caa93cc0 <col:90, col:110> 'float'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa93ca8 <col:90> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fd2caa93c80 <col:90> '<builtin fn type>' Function 0x7fd2caa93b90 '__builtin_huge_valf' 'float (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd2caa92f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa92f98 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa93000 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:332:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa94000 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fd2caa93fe8 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fd2caa93fa0 <col:91, col:108> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fd2caa93f88 <col:91> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd2caa93ec8 <col:91> '<builtin fn type>' Function 0x7fd2caa93d70 '__builtin_nanf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa93fd0 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd2caa93ef0 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd2caa93098 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa930e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa93148 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:333:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa942a8 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fd2caa94290 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fd2caa94248 <col:95, col:113> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fd2caa94230 <col:95> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd2caa941c8 <col:95> '<builtin fn type>' Function 0x7fd2caa94070 '__builtin_nansf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa94278 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd2caa941f0 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd2caa931e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa93228 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa93290 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:334:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa94300 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fd2caa942e8 <col:85, <built-in>:132:28>
| |   | | |   `-FloatingLiteral 0x7fd2caa942c8 <col:28> 'float' 1.401298e-45
| |   | | |-AlwaysInlineAttr 0x7fd2caa93328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa93370 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa93390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:336:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa933f0 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd2caa93470 <line:337:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa934d0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd2caa93550 <line:338:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa935b0 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd2caa93630 <line:340:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa93690 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd2caa93710 <line:341:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa93770 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd2caa937f0 <line:342:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd2caa93850 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd2caa75030 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fd2caa94360 <line:345:1, line:389:1> line:346:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2caa945d0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd2caa94668 <line:348:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd2caa946a8 <line:349:5, col:20> col:20 referenced type 'double'
| |   | | `-BuiltinType 0x7fd2ca8326e0 'double'
| |   | |-VarDecl 0x7fd2caa94710 <line:351:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa94770 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd2caa947f0 <line:353:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa94850 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd2caa948d8 <line:354:5, <built-in>:153:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:354:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa94938 <<built-in>:153:26> 'int' 53
| |   | |-VarDecl 0x7fd2caa94a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:5, <built-in>:148:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa94a60 <<built-in>:148:21> 'int' 15
| |   | |-VarDecl 0x7fd2caa94af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:356:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fd2caa94cb8 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fd2caa94c90 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fd2caa94c78 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fd2caa94b50 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fd2caa94c50 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fd2caa94c10 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fd2caa94be8 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fd2caa94bd0 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fd2caa94bb8 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fd2caa94b70 <col:59> 'const int' lvalue Var 0x7fd2caa948d8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fd2caa94b98 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fd2caa94c30 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fd2caa94e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:357:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa96a58 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fd2caa96a40 <col:78, <built-in>:159:21>
| |   | | |   `-FloatingLiteral 0x7fd2caa96a20 <col:21> 'double' 2.225074e-308
| |   | | |-AlwaysInlineAttr 0x7fd2caa94ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa94ee8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa94f50 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:358:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa96ab0 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fd2caa96a98 <col:78, <built-in>:156:21>
| |   | | |   `-FloatingLiteral 0x7fd2caa96a78 <col:21> 'double' 1.797693e+308
| |   | | |-AlwaysInlineAttr 0x7fd2caa94fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa95030 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa95098 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:359:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa96ba0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fd2caa96b88 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fd2caa96b68 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double' prefix '-'
| |   | | |     `-CallExpr 0x7fd2caa96b40 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double'
| |   | | |       `-ImplicitCastExpr 0x7fd2caa96b28 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fd2caa96ad0 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' lvalue CXXMethod 0x7fd2caa94f50 'max' 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd2caa95130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa95178 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa95198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:361:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa951f8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fd2caa95278 <line:362:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa952d8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fd2caa95360 <line:363:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:363:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa953c0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fd2caa95490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:364:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa96bf8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fd2caa96be0 <col:82, <built-in>:150:25>
| |   | | |   `-FloatingLiteral 0x7fd2caa96bc0 <col:25> 'double' 2.220446e-16
| |   | | |-AlwaysInlineAttr 0x7fd2caa95528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa95570 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa955d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:365:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa96c50 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fd2caa96c38 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fd2caa96c18 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fd2caa95670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa956b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa956e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:5, <built-in>:158:31> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd2caa95780 <<built-in>:158:25, col:31> 'int'
| |   | |   `-UnaryOperator 0x7fd2caa95760 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd2caa95740 <col:27> 'int' 1021
| |   | |-VarDecl 0x7fd2caa95810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:5, <built-in>:157:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd2caa958b0 <<built-in>:157:28, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fd2caa95890 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd2caa95870 <col:30> 'int' 307
| |   | |-VarDecl 0x7fd2caa95940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:5, <built-in>:155:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa959a0 <<built-in>:155:25> 'int' 1024
| |   | |-VarDecl 0x7fd2caa95a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:5, <built-in>:154:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa95a90 <<built-in>:154:28> 'int' 308
| |   | |-VarDecl 0x7fd2caa95b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:372:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa95b78 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fd2caa95bf8 <line:373:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa95c58 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fd2caa95cd8 <line:374:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa95d38 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fd2caa95db8 <line:375:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd2caa95e18 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd2caa75310 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd2caa95ea8 <line:376:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa95f08 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd2caa95fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:377:111> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa96e30 <col:82, col:111>
| |   | | | `-ReturnStmt 0x7fd2caa96e18 <col:83, col:109>
| |   | | |   `-CallExpr 0x7fd2caa96df0 <col:90, col:109> 'double'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa96dd8 <col:90> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fd2caa96db0 <col:90> '<builtin fn type>' Function 0x7fd2caa96cc0 '__builtin_huge_val' 'double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd2caa96068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa960b0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa96118 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:378:109> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa97130 <col:83, col:109>
| |   | | | `-ReturnStmt 0x7fd2caa97118 <col:84, col:107>
| |   | | |   `-CallExpr 0x7fd2caa970d0 <col:91, col:107> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fd2caa970b8 <col:91> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd2caa96ff8 <col:91> '<builtin fn type>' Function 0x7fd2caa96ea0 '__builtin_nan' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa97100 <col:105> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd2caa97020 <col:105> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd2caa961b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa961f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa96260 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:379:114> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa973d8 <col:87, col:114>
| |   | | | `-ReturnStmt 0x7fd2caa973c0 <col:88, col:112>
| |   | | |   `-CallExpr 0x7fd2caa97378 <col:95, col:112> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fd2caa97360 <col:95> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd2caa972f8 <col:95> '<builtin fn type>' Function 0x7fd2caa971a0 '__builtin_nans' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa973a8 <col:110> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd2caa97320 <col:110> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd2caa962f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa96340 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa963a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:380:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa97430 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fd2caa97418 <col:85, <built-in>:146:28>
| |   | | |   `-FloatingLiteral 0x7fd2caa973f8 <col:28> 'double' 4.940656e-324
| |   | | |-AlwaysInlineAttr 0x7fd2caa96440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa96488 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa964a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:382:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa96508 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd2caa96588 <line:383:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa965e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd2caa96668 <line:384:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa966c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd2caa96748 <line:386:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa967a8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd2caa96828 <line:387:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa96888 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd2caa96908 <line:388:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd2caa96968 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd2caa75030 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fd2caa97490 <line:391:1, line:439:1> line:392:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'long double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd2caa97700 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd2caa97798 <line:394:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd2caa977d8 <line:395:5, col:25> col:25 referenced type 'long double'
| |   | | `-BuiltinType 0x7fd2ca832700 'long double'
| |   | |-VarDecl 0x7fd2caa97840 <line:397:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa978a0 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd2caa97920 <line:399:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa97980 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd2caa97a08 <line:400:5, <built-in>:167:27> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:400:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa97a68 <<built-in>:167:27> 'int' 64
| |   | |-VarDecl 0x7fd2caa97af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:5, <built-in>:162:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa97b58 <<built-in>:162:22> 'int' 18
| |   | |-VarDecl 0x7fd2caa97be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:402:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fd2caa97db0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fd2caa97d88 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fd2caa97d70 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fd2caa97c48 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fd2caa97d48 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fd2caa97d08 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fd2caa97ce0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fd2caa97cc8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fd2caa97cb0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fd2caa97c68 <col:59> 'const int' lvalue Var 0x7fd2caa97a08 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fd2caa97c90 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fd2caa97d28 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fd2caa97ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:403:98> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa99b80 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fd2caa99b68 <col:78, <built-in>:173:22>
| |   | | |   `-FloatingLiteral 0x7fd2caa99b38 <col:22> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fd2caa97f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa97fd8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa98040 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:404:98> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa99be8 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fd2caa99bd0 <col:78, <built-in>:170:22>
| |   | | |   `-FloatingLiteral 0x7fd2caa99ba0 <col:22> 'long double' INF
| |   | | |-AlwaysInlineAttr 0x7fd2caa980d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa98120 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa98188 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:405:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa99cd0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fd2caa99cb8 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fd2caa99c98 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' prefix '-'
| |   | | |     `-CallExpr 0x7fd2caa99c70 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double'
| |   | | |       `-ImplicitCastExpr 0x7fd2caa99c58 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fd2caa99c08 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' lvalue CXXMethod 0x7fd2caa98040 'max' 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd2caa98220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa98268 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa98288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:407:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa982e8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fd2caa98368 <line:408:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa983c8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fd2caa98450 <line:409:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:409:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa984b0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fd2caa98580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:410:106> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa99d38 <col:81, col:106>
| |   | | | `-ReturnStmt 0x7fd2caa99d20 <col:82, <built-in>:164:26>
| |   | | |   `-FloatingLiteral 0x7fd2caa99cf0 <col:26> 'long double' 1.084202e-19
| |   | | |-AlwaysInlineAttr 0x7fd2caa98618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa98660 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa986c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:411:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa99da8 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fd2caa99d90 <col:86, col:93>
| |   | | |   `-ImplicitCastExpr 0x7fd2caa99d78 <col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' <FloatingCast>
| |   | | |     `-FloatingLiteral 0x7fd2caa99d58 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fd2caa98760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa987a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa987d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:5, <built-in>:172:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd2caa98870 <<built-in>:172:26, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fd2caa98850 <col:27, col:28> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd2caa98830 <col:28> 'int' 16381
| |   | |-VarDecl 0x7fd2caa98900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:5, <built-in>:171:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd2caa989a0 <<built-in>:171:29, col:35> 'int'
| |   | |   `-UnaryOperator 0x7fd2caa98980 <col:30, col:31> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd2caa98960 <col:31> 'int' 4931
| |   | |-VarDecl 0x7fd2caa98a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:5, <built-in>:169:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa98ad0 <<built-in>:169:26> 'int' 16384
| |   | |-VarDecl 0x7fd2caa98b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:5, <built-in>:168:29> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd2caa98bc0 <<built-in>:168:29> 'int' 4932
| |   | |-VarDecl 0x7fd2caa98c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:418:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa98ca8 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fd2caa98d28 <line:419:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa98d88 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fd2caa98e08 <line:420:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa98e68 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fd2caa98ee8 <line:421:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd2caa98f48 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd2caa75310 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd2caa98fd8 <line:422:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa99038 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd2caa99100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:423:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa99f88 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fd2caa99f70 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fd2caa99f48 <col:90, col:110> 'long double'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa99f30 <col:90> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fd2caa99f08 <col:90> '<builtin fn type>' Function 0x7fd2caa99e18 '__builtin_huge_vall' 'long double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd2caa99198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa991e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa99248 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:424:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa9a290 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fd2caa9a278 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fd2caa9a230 <col:91, col:108> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fd2caa9a218 <col:91> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd2caa9a150 <col:91> '<builtin fn type>' Function 0x7fd2caa99ff8 '__builtin_nanl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa9a260 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd2caa9a178 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd2caa992e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa99328 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa99390 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:425:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa9a538 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fd2caa9a520 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fd2caa9a4d8 <col:95, col:113> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fd2caa9a4c0 <col:95> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd2caa9a458 <col:95> '<builtin fn type>' Function 0x7fd2caa9a300 '__builtin_nansl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd2caa9a508 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd2caa9a480 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd2caa99428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa99470 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa994d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:426:112> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caa9a5a0 <col:84, col:112>
| |   | | | `-ReturnStmt 0x7fd2caa9a588 <col:85, <built-in>:160:29>
| |   | | |   `-FloatingLiteral 0x7fd2caa9a558 <col:29> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fd2caa99570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa995b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa995d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:431:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa99638 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd2caa996b8 <line:433:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa99718 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd2caa99798 <line:434:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa997f8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd2caa99878 <line:436:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa998d8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd2caa99958 <line:437:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd2caa999b8 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd2caa99a38 <line:438:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd2caa99a98 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd2caa75030 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateDecl 0x7fd2caa9a708 <line:441:1, line:485:1> line:442:28 numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fd2caa9a5c0 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd2caa9a670 <line:442:1, line:485:1> line:442:28 class numeric_limits definition
| |   |   |-private '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd2caa9a980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd2caa9ada8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:442:1, col:28> col:28 implicit class numeric_limits
| |   |   |-TypedefDecl 0x7fd2caa9b0f8 <line:445:5, col:68> col:68 referenced __base '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   | `-TemplateSpecializationType 0x7fd2caa9b050 '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>' dependent __libcpp_numeric_limits
| |   |   |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |   |   |-TypedefDecl 0x7fd2caa9b260 <line:446:5, col:35> col:35 referenced type 'typename __base::type'
| |   |   | `-DependentNameType 0x7fd2caa9b1f0 'typename __base::type' dependent
| |   |   |-AccessSpecDecl 0x7fd2caa9b2b8 <line:447:1, col:7> col:1 public
| |   |   |-VarDecl 0x7fd2caa9b2f0 <line:448:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9b388 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fd2caa9b4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:449:99> col:61 constexpr min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9d510 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fd2caa9d4f8 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fd2caa9d4d0 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9d490 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9b570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9b5b8 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd2caa9b620 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:450:99> col:61 constexpr max 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9d5e8 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fd2caa9d5d0 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fd2caa9d5a8 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9d568 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9b6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9b700 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd2caa9b768 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:451:105> col:61 constexpr lowest 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9d6c0 <col:80, col:105>
| |   |   | | `-ReturnStmt 0x7fd2caa9d6a8 <col:81, col:103>
| |   |   | |   `-CallExpr 0x7fd2caa9d680 <col:88, col:103> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9d640 <col:88, col:96> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9b800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9b848 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fd2caa9b870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:453:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9b908 <col:50, col:58> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9b960 <line:454:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9b9f8 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9ba50 <line:455:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9bae8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9bb38 <line:456:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9bbd0 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9bc20 <line:457:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9bcb8 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9bd08 <line:458:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9bda0 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9bdf8 <line:459:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9be90 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fd2caa9bf28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:460:107> col:61 constexpr epsilon 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9d798 <col:81, col:107>
| |   |   | | `-ReturnStmt 0x7fd2caa9d780 <col:82, col:105>
| |   |   | |   `-CallExpr 0x7fd2caa9d758 <col:89, col:105> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9d718 <col:89, col:97> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9bfc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9c008 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd2caa9c070 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:461:115> col:61 constexpr round_error 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9d870 <col:85, col:115>
| |   |   | | `-ReturnStmt 0x7fd2caa9d858 <col:86, col:113>
| |   |   | |   `-CallExpr 0x7fd2caa9d830 <col:93, col:113> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9d7f0 <col:93, col:101> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9c108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9c150 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fd2caa9c178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:463:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c210 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9c268 <line:464:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c300 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9c358 <line:465:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c3f0 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9c448 <line:466:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c4e0 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9c530 <line:468:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c5c8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9c618 <line:469:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c6b0 <col:57, col:65> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9c700 <line:470:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c798 <col:61, col:69> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9c7e8 <line:471:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c880 <col:68, col:76> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9c8d0 <line:472:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9c968 <col:59, col:67> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fd2caa9ca00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:473:109> col:61 constexpr infinity 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9d948 <col:82, col:109>
| |   |   | | `-ReturnStmt 0x7fd2caa9d930 <col:83, col:107>
| |   |   | |   `-CallExpr 0x7fd2caa9d908 <col:90, col:107> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9d8c8 <col:90, col:98> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9ca98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9cae0 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd2caa9cb48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:474:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9da20 <col:83, col:111>
| |   |   | | `-ReturnStmt 0x7fd2caa9da08 <col:84, col:109>
| |   |   | |   `-CallExpr 0x7fd2caa9d9e0 <col:91, col:109> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9d9a0 <col:91, col:99> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9cbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9cc28 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd2caa9cc90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:475:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9daf8 <col:87, col:119>
| |   |   | | `-ReturnStmt 0x7fd2caa9dae0 <col:88, col:117>
| |   |   | |   `-CallExpr 0x7fd2caa9dab8 <col:95, col:117> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9da78 <col:95, col:103> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9cd28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9cd70 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd2caa9cdd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:476:113> col:61 constexpr denorm_min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd2caa9dbd0 <col:84, col:113>
| |   |   | | `-ReturnStmt 0x7fd2caa9dbb8 <col:85, col:111>
| |   |   | |   `-CallExpr 0x7fd2caa9db90 <col:92, col:111> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd2caa9db50 <col:92, col:100> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd2caa9ce70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd2caa9ceb8 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fd2caa9ced8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:478:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9cf70 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9cfc0 <line:479:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9d058 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9d0a8 <line:480:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9d140 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9d190 <line:482:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9d228 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd2caa9d278 <line:483:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd2caa9d310 <col:59, col:67> '<dependent type>' lvalue
| |   |   `-VarDecl 0x7fd2caa9d360 <line:484:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fd2caa9d3f8 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fd2caa9dde0 parent 0x7fd2caa9a670 prev 0x7fd2caa9b2f0 <line:487:1, line:488:55> col:55 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caa9e078 parent 0x7fd2caa9a670 prev 0x7fd2caa9b870 <line:489:1, line:490:54> col:54 digits 'const int' constexpr
| |   |-VarDecl 0x7fd2caa9e318 parent 0x7fd2caa9a670 prev 0x7fd2caa9b960 <line:491:1, line:492:54> col:54 digits10 'const int' constexpr
| |   |-VarDecl 0x7fd2caa9e5b8 parent 0x7fd2caa9a670 prev 0x7fd2caa9ba50 <line:493:1, line:494:54> col:54 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fd2caa9e850 parent 0x7fd2caa9a670 prev 0x7fd2caa9bb38 <line:495:1, line:496:55> col:55 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e20f0 parent 0x7fd2caa9a670 prev 0x7fd2caa9bc20 <line:497:1, line:498:55> col:55 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e2380 parent 0x7fd2caa9a670 prev 0x7fd2caa9bd08 <line:499:1, line:500:55> col:55 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e2618 parent 0x7fd2caa9a670 prev 0x7fd2caa9bdf8 <line:501:1, line:502:54> col:54 radix 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9e28b8 parent 0x7fd2caa9a670 prev 0x7fd2caa9c178 <line:503:1, line:504:54> col:54 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9e2b58 parent 0x7fd2caa9a670 prev 0x7fd2caa9c268 <line:505:1, line:506:54> col:54 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9e2df8 parent 0x7fd2caa9a670 prev 0x7fd2caa9c358 <line:507:1, line:508:54> col:54 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9e3098 parent 0x7fd2caa9a670 prev 0x7fd2caa9c448 <line:509:1, line:510:54> col:54 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9e3330 parent 0x7fd2caa9a670 prev 0x7fd2caa9c530 <line:511:1, line:512:55> col:55 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e35c0 parent 0x7fd2caa9a670 prev 0x7fd2caa9c618 <line:513:1, line:514:55> col:55 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e3850 parent 0x7fd2caa9a670 prev 0x7fd2caa9c700 <line:515:1, line:516:55> col:55 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e3ae0 parent 0x7fd2caa9a670 prev 0x7fd2caa9c7e8 <line:517:1, line:518:69> col:69 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fd2ca9e3d70 parent 0x7fd2caa9a670 prev 0x7fd2caa9c8d0 <line:519:1, line:520:55> col:55 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e5000 parent 0x7fd2caa9a670 prev 0x7fd2caa9ced8 <line:521:1, line:522:55> col:55 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e5290 parent 0x7fd2caa9a670 prev 0x7fd2caa9cfc0 <line:523:1, line:524:55> col:55 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e5520 parent 0x7fd2caa9a670 prev 0x7fd2caa9d0a8 <line:525:1, line:526:55> col:55 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e57b0 parent 0x7fd2caa9a670 prev 0x7fd2caa9d190 <line:527:1, line:528:55> col:55 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e5a40 parent 0x7fd2caa9a670 prev 0x7fd2caa9d278 <line:529:1, line:530:55> col:55 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e5cd0 parent 0x7fd2caa9a670 prev 0x7fd2caa9d360 <line:531:1, line:532:68> col:68 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9e5f08 <line:534:1, line:578:1> line:535:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9e5d70 <line:534:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca9e6048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9e6238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:535:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fd2ca9e6388 <line:538:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fd2ca9e62e0 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fd2ca9e63f0 <line:539:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9e5db0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9e5d70 '_Tp'
| |   | |-AccessSpecDecl 0x7fd2ca9e6448 <line:540:1, col:7> col:1 public
| |   | |-VarDecl 0x7fd2ca9e6480 <line:541:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e6550 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2ca9e6668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:542:99> col:61 constexpr min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e86b0 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd2ca9e8698 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd2ca9e8670 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e8630 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e6700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e6748 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9e67b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:543:99> col:61 constexpr max 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e8788 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd2ca9e8770 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd2ca9e8748 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e8708 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e6848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e6890 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9e68f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:544:105> col:61 constexpr lowest 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e8860 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fd2ca9e8848 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fd2ca9e8820 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e87e0 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e6990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e69d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2ca9e6a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:546:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e6a98 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e6af0 <line:547:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e6b88 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e6be0 <line:548:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e6c78 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e6cc8 <line:549:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e6d60 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e6db0 <line:550:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e6e48 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e6e98 <line:551:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e6f30 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e6f88 <line:552:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e7030 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2ca9e70c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:553:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e8938 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fd2ca9e8920 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fd2ca9e88f8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e88b8 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e7160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e71a8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9e7210 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:554:115> col:61 constexpr round_error 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e8a10 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fd2ca9e89f8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fd2ca9e89d0 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e8990 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e72a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e72f0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2ca9e7318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:556:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e73b0 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e7408 <line:557:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e74a0 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e74f8 <line:558:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e7590 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e75e8 <line:559:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e7680 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e76d0 <line:561:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e7768 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e77b8 <line:562:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e7850 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e78a0 <line:563:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e7938 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e7988 <line:564:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e7a20 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e7a70 <line:565:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e7b08 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2ca9e7ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:566:109> col:61 constexpr infinity 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e8ae8 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fd2ca9e8ad0 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fd2ca9e8aa8 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e8a68 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e7c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e7c80 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9e7ce8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:567:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e8bc0 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fd2ca9e8ba8 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fd2ca9e8b80 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e8b40 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e7d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e7dc8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9e7e30 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:568:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e8c98 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fd2ca9e8c80 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fd2ca9e8c58 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e8c18 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e7ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e7f10 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2ca9e7f78 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:569:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2ca9e8d70 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fd2ca9e8d58 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fd2ca9e8d30 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2ca9e8cf0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2ca9e8010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2ca9e8058 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2ca9e8078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:571:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e8110 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e8160 <line:572:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e81f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e8248 <line:573:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e82e0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e8330 <line:575:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e83c8 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2ca9e8418 <line:576:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2ca9e84b0 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fd2ca9e8500 <line:577:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fd2ca9e8598 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fd2ca9e8f80 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e6480 <line:580:1, line:581:61> col:61 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e9238 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e6a00 <line:582:1, line:583:60> col:60 digits 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9e94d8 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e6af0 <line:584:1, line:585:60> col:60 digits10 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9e9778 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e6be0 <line:586:1, line:587:60> col:60 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9e9a10 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e6cc8 <line:588:1, line:589:61> col:61 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e9ca0 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e6db0 <line:590:1, line:591:61> col:61 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9e9f30 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e6e98 <line:592:1, line:593:61> col:61 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9ea1c8 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e6f88 <line:594:1, line:595:60> col:60 radix 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9ea468 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e7318 <line:596:1, line:597:60> col:60 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9ea708 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e7408 <line:598:1, line:599:60> col:60 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9ea9a8 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e74f8 <line:600:1, line:601:60> col:60 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9eac48 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e75e8 <line:602:1, line:603:60> col:60 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd2ca9eaee0 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e76d0 <line:604:1, line:605:61> col:61 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9eb170 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e77b8 <line:606:1, line:607:61> col:61 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9eb400 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e78a0 <line:608:1, line:609:61> col:61 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9eb690 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e7988 <line:610:1, line:611:75> col:75 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fd2ca9eb920 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e7a70 <line:612:1, line:613:61> col:61 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9ebbb0 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e8078 <line:614:1, line:615:61> col:61 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9ebe40 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e8160 <line:616:1, line:617:61> col:61 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9ec0d0 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e8248 <line:618:1, line:619:61> col:61 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9ec360 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e8330 <line:620:1, line:621:61> col:61 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9ec5f0 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e8418 <line:622:1, line:623:61> col:61 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2ca9ec880 parent 0x7fd2ca9e5f08 prev 0x7fd2ca9e8500 <line:624:1, line:625:74> col:74 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2ca9ecab8 <line:627:1, line:671:1> line:628:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2ca9ec920 <line:627:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2ca9ecbf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2ca9ecde8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:628:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fd2ca9ecf38 <line:631:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fd2ca9ece90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fd2ca9ecfa0 <line:632:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fd2ca9ec960 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2ca9ec920 '_Tp'
| |   | |-AccessSpecDecl 0x7fd2caa9ea00 <line:633:1, col:7> col:1 public
| |   | |-VarDecl 0x7fd2caa9ea38 <line:634:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9eb10 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2caa9ec28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:635:99> col:61 constexpr min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa0c98 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd2caaa0c80 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd2caaa0c58 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa0c18 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caa9ecc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa9ed08 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa9ed70 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:636:99> col:61 constexpr max 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa0d70 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd2caaa0d58 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd2caaa0d30 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa0cf0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caa9ee08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa9ee50 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa9eeb8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:637:105> col:61 constexpr lowest 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa0e48 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fd2caaa0e30 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fd2caaa0e08 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa0dc8 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caa9ef50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa9ef98 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa9efc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:639:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9f058 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9f0b0 <line:640:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9f148 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9f1a0 <line:641:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9f238 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9f288 <line:642:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9f320 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9f370 <line:643:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9f408 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9f458 <line:644:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9f4f0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9f548 <line:645:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9f5e0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2caa9f678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:646:107> col:61 constexpr epsilon 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa0f20 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fd2caaa0f08 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fd2caaa0ee0 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa0ea0 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caa9f710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa9f758 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caa9f7c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:647:115> col:61 constexpr round_error 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa0ff8 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fd2caaa0fe0 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fd2caaa0fb8 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa0f78 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caa9f858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caa9f8a0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caa9f8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:649:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9f960 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9f9b8 <line:650:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9fa50 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9faa8 <line:651:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9fb40 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9fb98 <line:652:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9fc30 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9fc80 <line:654:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9fd18 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9fd68 <line:655:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9fe00 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9fe50 <line:656:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9fee8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caa9ff38 <line:657:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caa9ffd0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa0020 <line:658:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa00b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2caaa0150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:659:109> col:61 constexpr infinity 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa10d0 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fd2caaa10b8 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fd2caaa1090 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa1050 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa01e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa0230 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa0298 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:660:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa11a8 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fd2caaa1190 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fd2caaa1168 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa1128 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa0330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa0378 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa03e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:661:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa1280 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fd2caaa1268 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fd2caaa1240 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa1200 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa0478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa04c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa0528 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:662:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa1358 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fd2caaa1340 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fd2caaa1318 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa12d8 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa05c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa0608 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caaa0628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:664:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa06c0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa0710 <line:665:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa07a8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa07f8 <line:666:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa0890 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa08e0 <line:668:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa0978 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa0a00 <line:669:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa0a98 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fd2caaa0ae8 <line:670:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fd2caaa0b80 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fd2caaa1570 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9ea38 <line:673:1, line:674:64> col:64 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa1808 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9efc0 <line:675:1, line:676:63> col:63 digits 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa1aa8 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9f0b0 <line:677:1, line:678:63> col:63 digits10 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa1d48 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9f1a0 <line:679:1, line:680:63> col:63 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa1fe0 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9f288 <line:681:1, line:682:64> col:64 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa2270 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9f370 <line:683:1, line:684:64> col:64 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa2500 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9f458 <line:685:1, line:686:64> col:64 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa2798 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9f548 <line:687:1, line:688:63> col:63 radix 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa2a40 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9f8c8 <line:689:1, line:690:63> col:63 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa2cd8 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9f9b8 <line:691:1, line:692:63> col:63 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa2f78 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9faa8 <line:693:1, line:694:63> col:63 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa3218 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9fb98 <line:695:1, line:696:63> col:63 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa34b0 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9fc80 <line:697:1, line:698:64> col:64 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa3740 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9fd68 <line:699:1, line:700:64> col:64 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa39d0 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9fe50 <line:701:1, line:702:64> col:64 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa3c60 parent 0x7fd2ca9ecab8 prev 0x7fd2caa9ff38 <line:703:1, line:704:78> col:78 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fd2caaa3ef0 parent 0x7fd2ca9ecab8 prev 0x7fd2caaa0020 <line:705:1, line:706:64> col:64 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa4180 parent 0x7fd2ca9ecab8 prev 0x7fd2caaa0628 <line:707:1, line:708:64> col:64 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa4410 parent 0x7fd2ca9ecab8 prev 0x7fd2caaa0710 <line:709:1, line:710:64> col:64 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa46a0 parent 0x7fd2ca9ecab8 prev 0x7fd2caaa07f8 <line:711:1, line:712:64> col:64 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa4930 parent 0x7fd2ca9ecab8 prev 0x7fd2caaa08e0 <line:713:1, line:714:64> col:64 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa4bf0 parent 0x7fd2ca9ecab8 prev 0x7fd2caaa0a00 <line:715:1, line:716:64> col:64 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa4e80 parent 0x7fd2ca9ecab8 prev 0x7fd2caaa0ae8 <line:717:1, line:718:77> col:77 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd2caaa50b8 <line:720:1, line:764:1> line:721:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd2caaa4f20 <line:720:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd2caaa51f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd2caaa53e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:721:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fd2caaa5538 <line:724:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fd2caaa5490 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fd2caaa55a0 <line:725:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fd2caaa4f60 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd2caaa4f20 '_Tp'
| |   | |-AccessSpecDecl 0x7fd2caaa55f8 <line:726:1, col:7> col:1 public
| |   | |-VarDecl 0x7fd2caaa5630 <line:727:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa5700 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2caaa5818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:728:99> col:61 constexpr min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7860 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd2caaa7848 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd2caaa7820 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa77e0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa58b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa58f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa5960 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:729:99> col:61 constexpr max 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7938 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd2caaa7920 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd2caaa78f8 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa78b8 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa59f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa5a40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa5aa8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:730:105> col:61 constexpr lowest 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7a10 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fd2caaa79f8 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fd2caaa79d0 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa7990 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa5b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa5b88 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caaa5bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:732:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa5c48 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa5ca0 <line:733:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa5d38 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa5d90 <line:734:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa5e28 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa5e78 <line:735:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa5f10 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa5f60 <line:736:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa5ff8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6048 <line:737:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa60e0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6138 <line:738:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa61d0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2caaa6268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:739:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7ae8 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fd2caaa7ad0 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fd2caaa7aa8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa7a68 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa6300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa6348 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa63b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:740:115> col:61 constexpr round_error 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7bc0 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fd2caaa7ba8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fd2caaa7b80 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa7b40 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa6448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa6490 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caaa64b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:742:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6550 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa65a8 <line:743:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6640 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6698 <line:744:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6730 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6788 <line:745:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6820 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6870 <line:747:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6908 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6958 <line:748:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6a00 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6a50 <line:749:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6ae8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6b38 <line:750:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6bd0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa6c20 <line:751:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa6cb8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd2caaa6d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:752:109> col:61 constexpr infinity 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7c98 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fd2caaa7c80 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fd2caaa7c58 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa7c18 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa6de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa6e30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa6e98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:753:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7d70 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fd2caaa7d58 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fd2caaa7d30 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa7cf0 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa6f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa6f78 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa6fe0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:754:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7e48 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fd2caaa7e30 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fd2caaa7e08 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa7dc8 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa7078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa70c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd2caaa7128 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:755:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd2caaa7f20 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fd2caaa7f08 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fd2caaa7ee0 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd2caaa7ea0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd2caaa71c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd2caaa7208 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd2caaa7228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:757:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa72c0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa7310 <line:758:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa73a8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa73f8 <line:759:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa7490 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa74e0 <line:761:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa7578 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd2caaa75c8 <line:762:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd2caaa7660 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fd2caaa76b0 <line:763:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fd2caaa7748 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fd2caaa8130 parent 0x7fd2caaa50b8 prev 0x7fd2caaa5630 <line:766:1, line:767:70> col:70 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa83c8 parent 0x7fd2caaa50b8 prev 0x7fd2caaa5bb0 <line:768:1, line:769:69> col:69 digits 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa8668 parent 0x7fd2caaa50b8 prev 0x7fd2caaa5ca0 <line:770:1, line:771:69> col:69 digits10 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa8908 parent 0x7fd2caaa50b8 prev 0x7fd2caaa5d90 <line:772:1, line:773:69> col:69 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa8bb0 parent 0x7fd2caaa50b8 prev 0x7fd2caaa5e78 <line:774:1, line:775:70> col:70 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa8e40 parent 0x7fd2caaa50b8 prev 0x7fd2caaa5f60 <line:776:1, line:777:70> col:70 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa90d0 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6048 <line:778:1, line:779:70> col:70 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaa9368 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6138 <line:780:1, line:781:69> col:69 radix 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa9608 parent 0x7fd2caaa50b8 prev 0x7fd2caaa64b8 <line:782:1, line:783:69> col:69 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa98a8 parent 0x7fd2caaa50b8 prev 0x7fd2caaa65a8 <line:784:1, line:785:69> col:69 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa9b48 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6698 <line:786:1, line:787:69> col:69 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd2caaa9de8 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6788 <line:788:1, line:789:69> col:69 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd2caaaa080 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6870 <line:790:1, line:791:70> col:70 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaaa310 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6958 <line:792:1, line:793:70> col:70 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaaa5a0 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6a50 <line:794:1, line:795:70> col:70 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaaa830 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6b38 <line:796:1, line:797:84> col:84 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fd2caaaaac0 parent 0x7fd2caaa50b8 prev 0x7fd2caaa6c20 <line:798:1, line:799:70> col:70 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaaad50 parent 0x7fd2caaa50b8 prev 0x7fd2caaa7228 <line:800:1, line:801:70> col:70 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaaafe0 parent 0x7fd2caaa50b8 prev 0x7fd2caaa7310 <line:802:1, line:803:70> col:70 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaab270 parent 0x7fd2caaa50b8 prev 0x7fd2caaa73f8 <line:804:1, line:805:70> col:70 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaab500 parent 0x7fd2caaa50b8 prev 0x7fd2caaa74e0 <line:806:1, line:807:70> col:70 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fd2caaab790 parent 0x7fd2caaa50b8 prev 0x7fd2caaa75c8 <line:808:1, line:809:70> col:70 tinyness_before 'const _Bool' constexpr
| |   `-VarDecl 0x7fd2caaaba20 parent 0x7fd2caaa50b8 prev 0x7fd2caaa76b0 <line:810:1, line:811:83> col:83 round_style 'const enum std::__1::float_round_style' constexpr
| |-FunctionTemplateDecl 0x7fd2caaabd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:316:1, line:322:1> line:319:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7fd2caaabac0 <line:316:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaabc88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:322:1> line:319:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd2caaabb80 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaac490 <line:320:1, line:322:1>
| |   | `-ReturnStmt 0x7fd2caaac478 <line:321:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7fd2caaac460 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd2caaac440 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7fd2caaac410 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7fd2caaabe70 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd2caaabe18 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd2caaabdf8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd2caaabdd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd2caaabb80 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd2caaabe50 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd2caaabfe8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd2caaabfd0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd2caaabfa8 <col:37> 'int (float)' lvalue Function 0x7fd2ca8f8068 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd2caaabf80 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd2caaabf60 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd2caaabef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd2caaabb80 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd2caaac3e0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7fd2caaac0b8 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd2caaac060 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd2caaac040 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd2caaac018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd2caaabb80 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd2caaac098 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd2caaac230 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd2caaac218 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd2caaac1f0 <col:37> 'int (double)' lvalue Function 0x7fd2ca8f9da0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd2caaac1c8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd2caaac1a8 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd2caaac138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd2caaabb80 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd2caaac3b0 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7fd2caaac398 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd2caaac370 <col:37> 'int (long double)' lvalue Function 0x7fd2ca8fc418 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd2caaac348 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd2caaac328 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd2caaac2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd2caaabb80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaabd78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caaabdc0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caaaca98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:326:1, line:332:1> line:329:1 signbit
| | |-TemplateTypeParmDecl 0x7fd2caaac4b0 <line:326:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaaca00 <line:327:1, line:332:1> line:329:1 signbit 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaac8c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaace48 <line:330:1, line:332:1>
| |   | `-ReturnStmt 0x7fd2caaace30 <line:331:5, col:73>
| |   |   `-CallExpr 0x7fd2caaace00 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caaacb48 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7fd2caaabd20
| |   |     `-CStyleCastExpr 0x7fd2caaacdd8 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaacd90 <col:65> '_A1' lvalue ParmVar 0x7fd2caaac8c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaacaf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaacb38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaad590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:334:1, line:339:24> line:338:1 signbit
| | |-TemplateTypeParmDecl 0x7fd2caaace68 <line:334:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaad4f8 <line:335:1, line:339:24> line:338:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaad3e0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaad6c8 <line:339:1, col:24>
| |   | `-ReturnStmt 0x7fd2caaad6b0 <col:3, col:21>
| |   |   `-BinaryOperator 0x7fd2caaad688 <col:10, col:21> '<dependent type>' '<'
| |   |     |-DeclRefExpr 0x7fd2caaad640 <col:10> '_A1' lvalue ParmVar 0x7fd2caaad3e0 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fd2caaad668 <col:21> 'int' 0
| |   |-AlwaysInlineAttr 0x7fd2caaad5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaad630 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaadde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:341:1, line:346:17> line:345:1 signbit
| | |-TemplateTypeParmDecl 0x7fd2caaad6e8 <line:341:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaadd48 <line:342:1, line:346:17> line:345:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && !std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaadc30 <col:9> col:12 '_A1'
| |   |-CompoundStmt 0x7fd2caaadec0 <line:346:1, col:17>
| |   | `-ReturnStmt 0x7fd2caaadea8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fd2caaade90 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fd2caaade38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaade80 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaae148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:378:1, line:384:1> line:381:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7fd2caaadee0 <line:378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaae0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:384:1> line:381:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd2caaadfa0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaae8a0 <line:382:1, line:384:1>
| |   | `-ReturnStmt 0x7fd2caaae888 <line:383:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7fd2caaae868 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7fd2caaae838 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7fd2caaae298 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7fd2caaae240 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7fd2caaae220 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7fd2caaae1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd2caaadfa0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7fd2caaae278 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7fd2caaae410 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7fd2caaae3f8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7fd2caaae3d0 <col:37> 'int (float)' lvalue Function 0x7fd2ca865b98 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7fd2caaae3a8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7fd2caaae388 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7fd2caaae318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd2caaadfa0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7fd2caaae808 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7fd2caaae4e0 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd2caaae488 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd2caaae468 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd2caaae440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd2caaadfa0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd2caaae4c0 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7fd2caaae658 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd2caaae640 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd2caaae618 <col:37> 'int (double)' lvalue Function 0x7fd2ca865d18 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7fd2caaae5f0 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7fd2caaae5d0 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd2caaae560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd2caaadfa0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7fd2caaae7d8 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7fd2caaae7c0 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7fd2caaae798 <col:37> 'int (long double)' lvalue Function 0x7fd2ca865e98 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7fd2caaae770 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7fd2caaae750 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7fd2caaae6e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd2caaadfa0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaae1a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caaae1e8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caaaee60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:1, line:394:1> line:391:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fd2caaae8c0 <line:388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaaedc8 <line:389:1, line:394:1> line:391:1 fpclassify 'typename std::enable_if<std::is_floating_point<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaaecb0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaaf128 <line:392:1, line:394:1>
| |   | `-ReturnStmt 0x7fd2caaaf110 <line:393:5, col:76>
| |   |   `-CallExpr 0x7fd2caaaf0e0 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caaaef10 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7fd2caaae148
| |   |     `-CStyleCastExpr 0x7fd2caaaf0b8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaaf070 <col:68> '_A1' lvalue ParmVar 0x7fd2caaaecb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaaeeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaaef00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaaf6e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:396:1, line:400:47> line:399:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fd2caaaf148 <line:396:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaaf648 <line:397:1, line:400:47> line:399:1 fpclassify 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaaf530 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaaf888 <line:400:1, col:47>
| |   | `-ReturnStmt 0x7fd2caaaf870 <col:3, /usr/include/math.h:77:25>
| |   |   `-ConditionalOperator 0x7fd2caaaf840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, /usr/include/math.h:77:25> 'int'
| |   |     |-BinaryOperator 0x7fd2caaaf7d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, col:22> '<dependent type>' '=='
| |   |     | |-DeclRefExpr 0x7fd2caaaf790 <col:10> '_A1' lvalue ParmVar 0x7fd2caaaf530 '__lcpp_x' '_A1'
| |   |     | `-IntegerLiteral 0x7fd2caaaf7b8 <col:22> 'int' 0
| |   |     |-IntegerLiteral 0x7fd2caaaf800 </usr/include/math.h:76:25> 'int' 3
| |   |     `-IntegerLiteral 0x7fd2caaaf820 <line:77:25> 'int' 4
| |   |-AlwaysInlineAttr 0x7fd2caaaf738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaaf780 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaafad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:424:1, line:430:1> line:427:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7fd2caaaf8a8 <line:424:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaafa38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:430:1> line:427:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd2caaaf970 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab0240 <line:428:1, line:430:1>
| |   | `-ReturnStmt 0x7fd2caab0228 <line:429:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7fd2caab0210 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd2caab01f0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7fd2caab01c0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7fd2caaafc20 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd2caaafbc8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd2caaafba8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd2caaafb80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd2caaaf970 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd2caaafc00 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd2caaafd98 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd2caaafd80 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd2caaafd58 <col:37> 'int (float)' lvalue Function 0x7fd2ca8f4d90 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd2caaafd30 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd2caaafd10 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd2caaafca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd2caaaf970 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd2caab0190 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7fd2caaafe68 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd2caaafe10 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd2caaafdf0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd2caaafdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd2caaaf970 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd2caaafe48 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd2caaaffe0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd2caaaffc8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd2caaaffa0 <col:37> 'int (double)' lvalue Function 0x7fd2ca8f5600 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd2caaaff78 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd2caaaff58 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd2caaafee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd2caaaf970 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd2caab0160 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fd2caab0148 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd2caab0120 <col:37> 'int (long double)' lvalue Function 0x7fd2ca8f6300 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd2caab00f8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd2caab00d8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd2caab0068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd2caaaf970 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaafb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caaafb70 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caab0980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:434:1, line:442:1> line:439:1 isfinite
| | |-TemplateTypeParmDecl 0x7fd2caab0260 <line:434:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab08e8 <line:435:1, line:442:1> line:439:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab07d0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab0c58 <line:440:1, line:442:1>
| |   | `-ReturnStmt 0x7fd2caab0c40 <line:441:5, col:74>
| |   |   `-CallExpr 0x7fd2caab0c10 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caab0a48 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7fd2caaafad0
| |   |     `-CStyleCastExpr 0x7fd2caab0be8 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caab0ba0 <col:66> '_A1' lvalue ParmVar 0x7fd2caab07d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caab09d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab0a38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab1370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:444:1, line:450:16> line:449:1 isfinite
| | |-TemplateTypeParmDecl 0x7fd2caab0c78 <line:444:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab12d8 <line:445:1, line:450:16> line:449:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab11c0 <col:10> col:13 '_A1'
| |   |-CompoundStmt 0x7fd2caab1450 <line:450:1, col:16>
| |   | `-ReturnStmt 0x7fd2caab1438 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fd2caab1420 <col:10> '_Bool' true
| |   |-AlwaysInlineAttr 0x7fd2caab13c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab1410 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab1690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:458:1, line:464:1> line:461:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7fd2caab1470 <line:458:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab15f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:464:1> line:461:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd2caab1530 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab1e00 <line:462:1, line:464:1>
| |   | `-ReturnStmt 0x7fd2caab1de8 <line:463:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7fd2caab1dd0 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd2caab1db0 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7fd2caab1d80 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7fd2caab17e0 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd2caab1788 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd2caab1768 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd2caab1740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd2caab1530 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd2caab17c0 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd2caab1958 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd2caab1940 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd2caab1918 <col:37> 'int (float)' lvalue Function 0x7fd2ca8f6b70 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd2caab18f0 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd2caab18d0 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd2caab1860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd2caab1530 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd2caab1d50 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7fd2caab1a28 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd2caab19d0 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd2caab19b0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd2caab1988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd2caab1530 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd2caab1a08 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd2caab1ba0 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd2caab1b88 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd2caab1b60 <col:37> 'int (double)' lvalue Function 0x7fd2ca8f6e90 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd2caab1b38 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd2caab1b18 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd2caab1aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd2caab1530 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd2caab1d20 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fd2caab1d08 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd2caab1ce0 <col:37> 'int (long double)' lvalue Function 0x7fd2ca8f75b0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd2caab1cb8 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd2caab1c98 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd2caab1c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd2caab1530 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caab16e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caab1730 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caab2400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:468:1, line:476:1> line:473:1 isinf
| | |-TemplateTypeParmDecl 0x7fd2caab1e20 <line:468:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab2368 <line:469:1, line:476:1> line:473:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab2290 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab26c8 <line:474:1, line:476:1>
| |   | `-ReturnStmt 0x7fd2caab26b0 <line:475:5, col:71>
| |   |   `-CallExpr 0x7fd2caab2680 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caab24b0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7fd2caab1690
| |   |     `-CStyleCastExpr 0x7fd2caab2658 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caab2610 <col:63> '_A1' lvalue ParmVar 0x7fd2caab2290 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caab2458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab24a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab2d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:478:1, line:484:17> line:483:1 isinf
| | |-TemplateTypeParmDecl 0x7fd2caab26e8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab2c68 <line:479:1, line:484:17> line:483:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab2b90 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fd2caab2de0 <line:484:1, col:17>
| |   | `-ReturnStmt 0x7fd2caab2dc8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fd2caab2db0 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fd2caab2d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab2da0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab3020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:492:1, line:498:1> line:495:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7fd2caab2e00 <line:492:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab2f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:498:1> line:495:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd2caab2ec0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab3790 <line:496:1, line:498:1>
| |   | `-ReturnStmt 0x7fd2caab3778 <line:497:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7fd2caab3760 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd2caab3740 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7fd2caab3710 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7fd2caab3170 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd2caab3118 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd2caab30f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd2caab30d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd2caab2ec0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd2caab3150 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd2caab32e8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd2caab32d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd2caab32a8 <col:37> 'int (float)' lvalue Function 0x7fd2ca8f78d0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd2caab3280 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd2caab3260 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd2caab31f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd2caab2ec0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd2caab36e0 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7fd2caab33b8 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd2caab3360 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd2caab3340 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd2caab3318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd2caab2ec0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd2caab3398 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd2caab3530 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd2caab3518 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd2caab34f0 <col:37> 'int (double)' lvalue Function 0x7fd2ca8f7b58 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd2caab34c8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd2caab34a8 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd2caab3438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd2caab2ec0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd2caab36b0 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fd2caab3698 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd2caab3670 <col:37> 'int (long double)' lvalue Function 0x7fd2ca8f7de0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd2caab3648 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd2caab3628 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd2caab35b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd2caab2ec0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caab3078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caab30c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caab3c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:502:1, line:508:1> line:505:1 isnan
| | |-TemplateTypeParmDecl 0x7fd2caab37b0 <line:502:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab3bb8 <line:503:1, line:508:1> line:505:1 isnan 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab3ae0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab3f18 <line:506:1, line:508:1>
| |   | `-ReturnStmt 0x7fd2caab3f00 <line:507:5, col:71>
| |   |   `-CallExpr 0x7fd2caab3ed0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caab3d00 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7fd2caab3020
| |   |     `-CStyleCastExpr 0x7fd2caab3ea8 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caab3e60 <col:63> '_A1' lvalue ParmVar 0x7fd2caab3ae0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caab3ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab3cf0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab44d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:510:1, line:514:17> line:513:1 isnan
| | |-TemplateTypeParmDecl 0x7fd2caab3f38 <line:510:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab4438 <line:511:1, line:514:17> line:513:1 isnan 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab4320 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fd2caab45b0 <line:514:1, col:17>
| |   | `-ReturnStmt 0x7fd2caab4598 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fd2caab4580 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fd2caab4528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab4570 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab47f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:522:1, line:528:1> line:525:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7fd2caab45d0 <line:522:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab4758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:528:1> line:525:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd2caab4690 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab4f78 <line:526:1, line:528:1>
| |   | `-ReturnStmt 0x7fd2caab4f60 <line:527:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7fd2caab4f48 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd2caab4f28 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7fd2caab4ef8 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7fd2caab4940 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd2caab48e8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd2caab48c8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd2caab48a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd2caab4690 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd2caab4920 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd2caab4ad0 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd2caab4ab8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd2caab4a90 <col:37> 'int (float)' lvalue Function 0x7fd2ca8fe168 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd2caab4a68 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd2caab4a48 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd2caab49c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd2caab4690 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd2caab4ec8 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7fd2caab4ba0 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd2caab4b48 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd2caab4b28 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd2caab4b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd2caab4690 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd2caab4b80 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd2caab4d18 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd2caab4d00 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd2caab4cd8 <col:37> 'int (double)' lvalue Function 0x7fd2ca8fea00 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd2caab4cb0 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd2caab4c90 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd2caab4c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd2caab4690 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd2caab4e98 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fd2caab4e80 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd2caab4e58 <col:37> 'int (long double)' lvalue Function 0x7fd2ca8fee48 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd2caab4e30 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd2caab4e10 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd2caab4da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd2caab4690 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caab4848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caab4890 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caab5440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:532:1, line:538:1> line:535:1 isnormal
| | |-TemplateTypeParmDecl 0x7fd2caab4f98 <line:532:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab53a8 <line:533:1, line:538:1> line:535:1 isnormal 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab52d0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab5708 <line:536:1, line:538:1>
| |   | `-ReturnStmt 0x7fd2caab56f0 <line:537:5, col:74>
| |   |   `-CallExpr 0x7fd2caab56c0 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caab54f0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7fd2caab47f0
| |   |     `-CStyleCastExpr 0x7fd2caab5698 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caab5650 <col:66> '_A1' lvalue ParmVar 0x7fd2caab52d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caab5498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab54e0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab5bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:540:1, line:544:25> line:543:1 isnormal
| | |-TemplateTypeParmDecl 0x7fd2caab5728 <line:540:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caab5b38 <line:541:1, line:544:25> line:543:1 isnormal 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab5a60 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caab5d08 <line:544:1, col:25>
| |   | `-ReturnStmt 0x7fd2caab5cf0 <col:3, col:22>
| |   |   `-BinaryOperator 0x7fd2caab5cc8 <col:10, col:22> '<dependent type>' '!='
| |   |     |-DeclRefExpr 0x7fd2caab5c80 <col:10> '_A1' lvalue ParmVar 0x7fd2caab5a60 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fd2caab5ca8 <col:22> 'int' 0
| |   |-AlwaysInlineAttr 0x7fd2caab5c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab5c70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab6090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:552:1, line:558:1> line:555:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7fd2caab5d28 <line:552:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caab5d98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caab5ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:558:1> line:555:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd2caab5e68 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caab5ed8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caab63f8 <line:556:1, line:558:1>
| |   | `-ReturnStmt 0x7fd2caab63e0 <line:557:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7fd2caab63a8 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd2caab62f0 <col:25> '<builtin fn type>' Function 0x7fd2caab6200 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd2caab6340 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd2caab6318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:22> '_A1' lvalue ParmVar 0x7fd2caab5e68 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd2caab6388 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd2caab6360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:32> '_A2' lvalue ParmVar 0x7fd2caab5ed8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caab60f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caab6138 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caab6c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:562:1, line:574:1> line:570:1 isgreater
| | |-TemplateTypeParmDecl 0x7fd2caab6418 <line:562:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caab6488 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caab6bc8 <line:563:1, line:574:1> line:570:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab6a30 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caab6aa0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caab7150 <line:571:1, line:574:1>
| |   | |-DeclStmt 0x7fd2caab6fa8 <line:572:5, col:57>
| |   | | `-TypedefDecl 0x7fd2caab6f50 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caab6ee0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd2caab7138 <line:573:5, col:61>
| |   |   `-CallExpr 0x7fd2caab7100 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caab6fc0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7fd2caab6090
| |   |     |-CStyleCastExpr 0x7fd2caab7078 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caab7040 <col:37> '_A1' lvalue ParmVar 0x7fd2caab6a30 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caab70d8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caab70a0 <col:53> '_A2' lvalue ParmVar 0x7fd2caab6aa0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caab6cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab6d08 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab74a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:582:1, line:588:1> line:585:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7fd2caab7178 <line:582:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caab71e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caab7408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:588:1> line:585:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd2caab72b8 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caab7328 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caab77a0 <line:586:1, line:588:1>
| |   | `-ReturnStmt 0x7fd2caab7788 <line:587:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7fd2caab7750 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd2caab7698 <col:30> '<builtin fn type>' Function 0x7fd2caab75a8 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd2caab76e8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd2caab76c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:27> '_A1' lvalue ParmVar 0x7fd2caab72b8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd2caab7730 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd2caab7708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:37> '_A2' lvalue ParmVar 0x7fd2caab7328 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caab7500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caab7548 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caab7ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:592:1, line:604:1> line:600:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7fd2caab77c0 <line:592:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caab7828 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caab7e08 <line:593:1, line:604:1> line:600:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab7cb0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caab7d20 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caab82c0 <line:601:1, line:604:1>
| |   | |-DeclStmt 0x7fd2caab8118 <line:602:5, col:57>
| |   | | `-TypedefDecl 0x7fd2caab80c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caab8050 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd2caab82a8 <line:603:5, col:66>
| |   |   `-CallExpr 0x7fd2caab8270 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caab8130 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7fd2caab74a0
| |   |     |-CStyleCastExpr 0x7fd2caab81e8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caab81b0 <col:42> '_A1' lvalue ParmVar 0x7fd2caab7cb0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caab8248 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caab8210 <col:58> '_A2' lvalue ParmVar 0x7fd2caab7d20 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caab7f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab7f48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab8610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:612:1, line:618:1> line:615:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7fd2caab82e8 <line:612:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caab8358 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caab8578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:618:1> line:615:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd2caab8428 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caab8498 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caab8910 <line:616:1, line:618:1>
| |   | `-ReturnStmt 0x7fd2caab88f8 <line:617:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7fd2caab88c0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd2caab8808 <col:22> '<builtin fn type>' Function 0x7fd2caab8718 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd2caab8858 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd2caab8830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:19> '_A1' lvalue ParmVar 0x7fd2caab8428 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd2caab88a0 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd2caab8878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:29> '_A2' lvalue ParmVar 0x7fd2caab8498 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caab8670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caab86b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caab9030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:622:1, line:634:1> line:630:1 isless
| | |-TemplateTypeParmDecl 0x7fd2caab8930 <line:622:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caab8998 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caab8f98 <line:623:1, line:634:1> line:630:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab8e40 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caab8eb0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caab9450 <line:631:1, line:634:1>
| |   | |-DeclStmt 0x7fd2caab92a8 <line:632:5, col:57>
| |   | | `-TypedefDecl 0x7fd2caab9250 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caab91e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd2caab9438 <line:633:5, col:58>
| |   |   `-CallExpr 0x7fd2caab9400 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caab92c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7fd2caab8610
| |   |     |-CStyleCastExpr 0x7fd2caab9378 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caab9340 <col:34> '_A1' lvalue ParmVar 0x7fd2caab8e40 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caab93d8 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caab93a0 <col:50> '_A2' lvalue ParmVar 0x7fd2caab8eb0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caab9090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caab90d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caab97a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:642:1, line:648:1> line:645:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7fd2caab9478 <line:642:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caab94e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caab9708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:648:1> line:645:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd2caab95b8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caab9628 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caab9aa0 <line:646:1, line:648:1>
| |   | `-ReturnStmt 0x7fd2caab9a88 <line:647:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7fd2caab9a50 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd2caab9998 <col:27> '<builtin fn type>' Function 0x7fd2caab98a8 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd2caab99e8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd2caab99c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:24> '_A1' lvalue ParmVar 0x7fd2caab95b8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd2caab9a30 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd2caab9a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:34> '_A2' lvalue ParmVar 0x7fd2caab9628 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caab9800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caab9848 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caaba1a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:652:1, line:664:1> line:660:1 islessequal
| | |-TemplateTypeParmDecl 0x7fd2caab9ac0 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caab9b28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caaba108 <line:653:1, line:664:1> line:660:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caab9fb0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caaba020 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caaba5c0 <line:661:1, line:664:1>
| |   | |-DeclStmt 0x7fd2caaba418 <line:662:5, col:57>
| |   | | `-TypedefDecl 0x7fd2caaba3c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caaba350 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd2caaba5a8 <line:663:5, col:63>
| |   |   `-CallExpr 0x7fd2caaba570 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caaba430 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7fd2caab97a0
| |   |     |-CStyleCastExpr 0x7fd2caaba4e8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caaba4b0 <col:39> '_A1' lvalue ParmVar 0x7fd2caab9fb0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caaba548 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaba510 <col:55> '_A2' lvalue ParmVar 0x7fd2caaba020 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caaba200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaba248 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaba910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:672:1, line:678:1> line:675:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7fd2caaba5e8 <line:672:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caaba658 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caaba878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1> line:675:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd2caaba728 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caaba798 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caabac48 <line:676:1, line:678:1>
| |   | `-ReturnStmt 0x7fd2caabac30 <line:677:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7fd2caababf8 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd2caabab40 <col:29> '<builtin fn type>' Function 0x7fd2caabaa50 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd2caabab90 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd2caabab68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:26> '_A1' lvalue ParmVar 0x7fd2caaba728 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd2caababd8 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd2caababb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:36> '_A2' lvalue ParmVar 0x7fd2caaba798 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caaba970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caaba9b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caabb350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:682:1, line:694:1> line:690:1 islessgreater
| | |-TemplateTypeParmDecl 0x7fd2caabac68 <line:682:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caabacd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caabb2b8 <line:683:1, line:694:1> line:690:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caabb160 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caabb1d0 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caabb770 <line:691:1, line:694:1>
| |   | |-DeclStmt 0x7fd2caabb5c8 <line:692:5, col:57>
| |   | | `-TypedefDecl 0x7fd2caabb570 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caabb500 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd2caabb758 <line:693:5, col:65>
| |   |   `-CallExpr 0x7fd2caabb720 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caabb5e0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7fd2caaba910
| |   |     |-CStyleCastExpr 0x7fd2caabb698 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caabb660 <col:41> '_A1' lvalue ParmVar 0x7fd2caabb160 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caabb6f8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caabb6c0 <col:57> '_A2' lvalue ParmVar 0x7fd2caabb1d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caabb3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caabb3f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caabbac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:708:1> line:705:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7fd2caabb798 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caabb808 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caabba28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:708:1> line:705:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd2caabb8d8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caabb948 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caabbdc0 <line:706:1, line:708:1>
| |   | `-ReturnStmt 0x7fd2caabbda8 <line:707:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7fd2caabbd70 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd2caabbcb8 <col:27> '<builtin fn type>' Function 0x7fd2caabbbc8 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd2caabbd08 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd2caabbce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:24> '_A1' lvalue ParmVar 0x7fd2caabb8d8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd2caabbd50 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd2caabbd28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:34> '_A2' lvalue ParmVar 0x7fd2caabb948 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caabbb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd2caabbb68 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd2caabc4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:712:1, line:724:1> line:720:1 isunordered
| | |-TemplateTypeParmDecl 0x7fd2caabbde0 <line:712:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caabbe48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caabc428 <line:713:1, line:724:1> line:720:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caabc2d0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caabc340 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caabc8e0 <line:721:1, line:724:1>
| |   | |-DeclStmt 0x7fd2caabc738 <line:722:5, col:57>
| |   | | `-TypedefDecl 0x7fd2caabc6e0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caabc670 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd2caabc8c8 <line:723:5, col:63>
| |   |   `-CallExpr 0x7fd2caabc890 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caabc750 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7fd2caabbac0
| |   |     |-CStyleCastExpr 0x7fd2caabc808 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caabc7d0 <col:39> '_A1' lvalue ParmVar 0x7fd2caabc2d0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caabc868 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caabc830 <col:55> '_A2' lvalue ParmVar 0x7fd2caabc340 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caabc520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caabc568 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caabda00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:731:1, line:733:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caabc950 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caabdbf0 <col:31, col:57>
| | | `-ReturnStmt 0x7fd2caabdbd8 <col:32, col:55>
| | |   `-CallExpr 0x7fd2caabdb90 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caabdb78 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caabdb18 <col:39, col:41> 'float (float)' lvalue Function 0x7fd2ca90d2f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caabdbc0 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caabdb50 <col:47> 'float' lvalue ParmVar 0x7fd2caabc950 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caabdaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caabdae8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caabdcf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:735:1, line:737:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caabdc58 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7fd2caabdee0 <col:32, col:57>
| | | `-ReturnStmt 0x7fd2caabdec8 <col:33, col:55>
| | |   `-CallExpr 0x7fd2caabde80 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7fd2caabde68 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caabde08 <col:40, col:42> 'double (double)' lvalue Function 0x7fd2ca90d490 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7fd2caabdeb0 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caabde40 <col:47> 'double' lvalue ParmVar 0x7fd2caabdc58 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7fd2caabdd90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caabddd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caabdfe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:739:1, line:741:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caabdf48 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caabe1d0 <col:37, col:63>
| | | `-ReturnStmt 0x7fd2caabe1b8 <col:38, col:61>
| | |   `-CallExpr 0x7fd2caabe170 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caabe158 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caabe0f8 <col:45, col:47> 'long double (long double)' lvalue Function 0x7fd2ca90d630 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caabe1a0 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caabe130 <col:53> 'long double' lvalue ParmVar 0x7fd2caabdf48 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caabe080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caabe0c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caabe2d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:747:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caabe238 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caabe4c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caabe4a8 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caabe460 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caabe448 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caabe3e8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca8ff2a8 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caabe490 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caabe420 <col:99> 'float' lvalue ParmVar 0x7fd2caabe238 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caabe370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caabe3b8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caabe5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:748:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caabe528 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caabe7b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caabe798 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caabe750 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caabe738 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caabe6d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca8ff5e8 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caabe780 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caabe710 <col:99> 'long double' lvalue ParmVar 0x7fd2caabe528 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caabe660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caabe6a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caabed60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:751:1, line:754:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7fd2caabe7d0 <line:751:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caabecc8 <line:752:1, line:754:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caabebb0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caac0860 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caac0848 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caac0818 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caac0800 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caac07c8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca8ff448 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caabeee0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caabeea0 <col:53> '_A1' lvalue ParmVar 0x7fd2caabebb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caabedb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caabee00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac0960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:759:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac08c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caac0b50 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac0b38 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac0af0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caac0ad8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac0a78 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca8ff788 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caac0b20 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac0ab0 <col:99> 'float' lvalue ParmVar 0x7fd2caac08c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caac0a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac0a48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac0c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:760:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac0bb8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caac0e40 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac0e28 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac0de0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caac0dc8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac0d68 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca8ffaf0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caac0e10 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac0da0 <col:99> 'long double' lvalue ParmVar 0x7fd2caac0bb8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caac0cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac0d38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caac1300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:763:1, line:766:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7fd2caac0e60 <line:763:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caac1268 <line:764:1, line:766:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caac1190 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caac1820 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caac1808 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caac17d8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caac17c0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caac1788 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca8ff928 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caac1480 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caac1440 <col:53> '_A1' lvalue ParmVar 0x7fd2caac1190 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caac1358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caac13a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac1920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:771:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac1888 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caac1b40 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac1b28 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac1ae0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caac1ac8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac1a68 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca8ffc90 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caac1b10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac1aa0 <col:99> 'float' lvalue ParmVar 0x7fd2caac1888 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caac19c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac1a38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac1c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:772:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac1ba8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caac1e30 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac1e18 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac1dd0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caac1db8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac1d58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca8fffd0 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caac1e00 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac1d90 <col:99> 'long double' lvalue ParmVar 0x7fd2caac1ba8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caac1ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac1d28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caac22f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:775:1, line:778:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7fd2caac1e50 <line:775:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caac2258 <line:776:1, line:778:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caac2180 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caac2810 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caac27f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caac27c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caac27b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caac2778 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca8ffe30 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caac2470 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caac2430 <col:53> '_A1' lvalue ParmVar 0x7fd2caac2180 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caac2348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caac2390 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac2990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:783:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac2878 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fd2caac28f0 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caac2c00 <col:106, col:143>
| | | `-ReturnStmt 0x7fd2caac2be8 <col:107, col:141>
| | |   `-CallExpr 0x7fd2caac2b80 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caac2b68 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac2ab0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fd2ca900238 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caac2bb8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caac2ae8 <col:123> 'float' lvalue ParmVar 0x7fd2caac2878 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caac2bd0 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac2b10 <col:133> 'float' lvalue ParmVar 0x7fd2caac28f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caac2a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac2a80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac2d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:784:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac2c68 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fd2caac2ce0 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caac2ff0 <col:106, col:143>
| | | `-ReturnStmt 0x7fd2caac2fd8 <col:107, col:141>
| | |   `-CallExpr 0x7fd2caac2f70 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caac2f58 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac2ea0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fd2ca900798 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caac2fa8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caac2ed8 <col:123> 'long double' lvalue ParmVar 0x7fd2caac2c68 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caac2fc0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac2f00 <col:133> 'long double' lvalue ParmVar 0x7fd2caac2ce0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caac2e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac2e70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caac3950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:787:1, line:801:1> line:795:1 atan2
| | |-TemplateTypeParmDecl 0x7fd2caac3010 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caac3078 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caac38b8 <line:788:1, line:801:1> line:795:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caac3720 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7fd2caac3790 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7fd2caac5258 <line:796:1, line:801:1>
| |   | |-DeclStmt 0x7fd2caac4bc8 <line:797:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caac4b70 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caac4b00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caac50a0 <line:798:5, line:799:68>
| |   | | `-StaticAssertDecl 0x7fd2caac5068 <line:798:5, line:799:67> line:798:5
| |   | |   |-ParenExpr 0x7fd2caac5020 <col:19, line:799:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caac5000 <line:798:20, line:799:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caac4fe0 <line:798:21, line:799:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caac4fb8 <line:798:22, line:799:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caac4db8 <line:798:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caac4f78 <line:799:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caac5040 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caac5240 <line:800:5, col:68>
| |   |   `-CallExpr 0x7fd2caac5208 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caac50d8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7fd2ca9004e8 0x7fd2caac2990 0x7fd2caac2d80 0x7fd2caac3950
| |   |     |-CStyleCastExpr 0x7fd2caac5180 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caac5148 <col:35> '_A1' lvalue ParmVar 0x7fd2caac3720 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caac51e0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caac51a8 <col:60> '_A2' lvalue ParmVar 0x7fd2caac3790 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caac39b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caac4a00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac5368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac52d0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caac5558 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac5540 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac54f8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caac54e0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac5480 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca9102a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caac5528 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac54b8 <col:99> 'float' lvalue ParmVar 0x7fd2caac52d0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caac5408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac5450 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac5658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:807:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac55c0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caac5848 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac5830 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac57e8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caac57d0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac5770 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca9105e8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caac5818 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac57a8 <col:99> 'long double' lvalue ParmVar 0x7fd2caac55c0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caac56f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac5740 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caac5d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:810:1, line:813:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7fd2caac5868 <line:810:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caac5c78 <line:811:1, line:813:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caac5ba0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caac6230 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caac6218 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caac61e8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caac61d0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caac6198 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca910448 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caac5e90 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caac5e50 <col:53> '_A1' lvalue ParmVar 0x7fd2caac5ba0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caac5d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caac5db0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac6330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:818:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac6298 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caac6520 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caac6508 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caac64c0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caac64a8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac6448 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ca901200 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caac64f0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac6480 <col:97> 'float' lvalue ParmVar 0x7fd2caac6298 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caac63d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac6418 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac6620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:819:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac6588 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caac6810 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caac67f8 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caac67b0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caac6798 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac6738 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ca901540 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caac67e0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac6770 <col:97> 'long double' lvalue ParmVar 0x7fd2caac6588 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caac66c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac6708 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caac6d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:822:1, line:825:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7fd2caac6830 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caac6c68 <line:823:1, line:825:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caac6b90 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caac7220 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd2caac7208 <col:30, col:59>
| |   |   `-CallExpr 0x7fd2caac71d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caac71c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caac7188 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ca9013a0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caac6e80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caac6e40 <col:51> '_A1' lvalue ParmVar 0x7fd2caac6b90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caac6d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caac6da0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac7320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:830:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac7288 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caac7510 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac74f8 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac74b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caac7498 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac7438 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca903790 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caac74e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac7470 <col:99> 'float' lvalue ParmVar 0x7fd2caac7288 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caac73c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac7408 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac7610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:831:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac7578 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caac7800 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac77e8 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac77a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caac7788 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac7728 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca9042f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caac77d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac7760 <col:99> 'long double' lvalue ParmVar 0x7fd2caac7578 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caac76b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac76f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caac7cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:834:1, line:837:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7fd2caac7820 <line:834:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caac7c28 <line:835:1, line:837:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caac7b50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caac81e0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caac81c8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caac8198 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caac8180 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caac8148 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca903930 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caac7e40 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caac7e00 <col:53> '_A1' lvalue ParmVar 0x7fd2caac7b50 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caac7d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caac7d60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac82e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:842:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac8248 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caac84d0 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caac84b8 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caac8470 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caac8458 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac83f8 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ca904e50 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caac84a0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac8430 <col:97> 'float' lvalue ParmVar 0x7fd2caac8248 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caac8380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac83c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac85d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:843:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac8538 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caac87c0 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caac87a8 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caac8760 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caac8748 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac86e8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ca905200 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caac8790 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac8720 <col:97> 'long double' lvalue ParmVar 0x7fd2caac8538 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caac8670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac86b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caac8ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:846:1, line:849:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7fd2caac87e0 <line:846:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caac8c08 <line:847:1, line:849:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caac8b30 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caac91c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd2caac91a8 <col:30, col:59>
| |   |   `-CallExpr 0x7fd2caac9178 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caac9160 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caac9128 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ca904ff0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caac8e20 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caac8de0 <col:51> '_A1' lvalue ParmVar 0x7fd2caac8b30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caac8cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caac8d40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac92c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:854:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac9228 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caac94b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac9498 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac9450 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caac9438 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac93d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca90d2f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caac9480 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac9410 <col:99> 'float' lvalue ParmVar 0x7fd2caac9228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caac9360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac93a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caac95b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:855:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caac9518 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caac97a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caac9788 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caac9740 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caac9728 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caac96c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca90d630 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caac9770 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caac9700 <col:99> 'long double' lvalue ParmVar 0x7fd2caac9518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caac9650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caac9698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caac9c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:858:1, line:861:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7fd2caac97c0 <line:858:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caac9bc8 <line:859:1, line:861:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caac9af0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaca180 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caaca168 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caaca138 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caaca120 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaca0e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca90d490 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caac9de0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caac9da0 <col:53> '_A1' lvalue ParmVar 0x7fd2caac9af0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caac9cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caac9d00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaca280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:866:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaca1e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaca470 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caaca458 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caaca410 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaca3f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaca398 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca910788 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaca440 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaca3d0 <col:101> 'float' lvalue ParmVar 0x7fd2caaca1e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaca320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaca368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaca570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:867:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaca4d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaca760 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caaca748 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caaca700 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaca6e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaca688 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca910ac8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaca730 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaca6c0 <col:101> 'long double' lvalue ParmVar 0x7fd2caaca4d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaca610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaca658 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caacac40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:870:1, line:873:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7fd2caaca780 <line:870:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caacaba8 <line:871:1, line:873:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caacaad0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caacb160 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caacb148 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caacb118 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caacb100 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caacb0c8 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca910928 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caacadc0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caacad80 <col:55> '_A1' lvalue ParmVar 0x7fd2caacaad0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caacac98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caacace0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caacb2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:878:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caacb1c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caacb240 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caacb520 <col:105, col:141>
| | | `-ReturnStmt 0x7fd2caacb508 <col:106, col:139>
| | |   `-CallExpr 0x7fd2caacb4a0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caacb488 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caacb400 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fd2ca913760 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caacb4d8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caacb438 <col:121> 'float' lvalue ParmVar 0x7fd2caacb1c8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caacb4f0 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caacb460 <col:131> 'float' lvalue ParmVar 0x7fd2caacb240 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caacb388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caacb3d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caacb6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:879:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caacb588 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caacb600 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caacb8e0 <col:105, col:141>
| | | `-ReturnStmt 0x7fd2caacb8c8 <col:106, col:139>
| | |   `-CallExpr 0x7fd2caacb860 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caacb848 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caacb7c0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fd2ca913bb0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caacb898 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caacb7f8 <col:121> 'long double' lvalue ParmVar 0x7fd2caacb588 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caacb8b0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caacb820 <col:131> 'long double' lvalue ParmVar 0x7fd2caacb600 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caacb748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caacb790 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caacc140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:882:1, line:896:1> line:890:1 fmod
| | |-TemplateTypeParmDecl 0x7fd2caacb900 <line:882:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caacb968 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caacc0a8 <line:883:1, line:896:1> line:890:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caacbf50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caacbfc0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caacc968 <line:891:1, line:896:1>
| |   | |-DeclStmt 0x7fd2caacc3b8 <line:892:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caacc360 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caacc2f0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caacc7b0 <line:893:5, line:894:68>
| |   | | `-StaticAssertDecl 0x7fd2caacc778 <line:893:5, line:894:67> line:893:5
| |   | |   |-ParenExpr 0x7fd2caacc730 <col:19, line:894:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caacc710 <line:893:20, line:894:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caacc6f0 <line:893:21, line:894:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caacc6c8 <line:893:22, line:894:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caacc528 <line:893:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caacc688 <line:894:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caacc750 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caacc950 <line:895:5, col:67>
| |   |   `-CallExpr 0x7fd2caacc918 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caacc7e8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7fd2ca913988 0x7fd2caacb2e0 0x7fd2caacb6a0 0x7fd2caacc140
| |   |     |-CStyleCastExpr 0x7fd2caacc890 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caacc858 <col:34> '_A1' lvalue ParmVar 0x7fd2caacbf50 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caacc8f0 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caacc8b8 <col:59> '_A2' lvalue ParmVar 0x7fd2caacbfc0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caacc1a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caacc1e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaccb18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:901:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fd2caacca00 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caacca78 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fd2caaccdb0 <col:99, col:136>
| | | `-ReturnStmt 0x7fd2caaccd98 <col:100, col:134>
| | |   `-CallExpr 0x7fd2caaccd30 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaccd18 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaccc38 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7fd2ca90a788 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7fd2caaccd68 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaccc70 <col:116> 'float' lvalue ParmVar 0x7fd2caacca00 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caaccd80 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaccc98 <col:126> 'int *' lvalue ParmVar 0x7fd2caacca78 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fd2caaccbc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaccc08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaccf30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:902:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fd2caacce18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caacce90 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fd2caacd1d0 <col:99, col:136>
| | | `-ReturnStmt 0x7fd2caacd1b8 <col:100, col:134>
| | |   `-CallExpr 0x7fd2caacd150 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caacd138 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caacd050 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7fd2ca90acc8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7fd2caacd188 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caacd088 <col:116> 'long double' lvalue ParmVar 0x7fd2caacce18 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caacd1a0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caacd0b0 <col:126> 'int *' lvalue ParmVar 0x7fd2caacce90 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fd2caaccfd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caacd020 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caacd760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:905:1, line:908:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7fd2caacd1f0 <line:905:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caacd6c8 <line:906:1, line:908:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caacd520 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caacd598 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7fd2caacdcf8 <col:46, col:90>
| |   | `-ReturnStmt 0x7fd2caacdce0 <col:47, col:88>
| |   |   `-CallExpr 0x7fd2caacdc90 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caacdc78 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caacdc18 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7fd2ca90aa28 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7fd2caacd8e8 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caacd8a8 <col:70> '_A1' lvalue ParmVar 0x7fd2caacd520 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd2caacdcc8 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd2caacd910 <col:80> 'int *' lvalue ParmVar 0x7fd2caacd598 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7fd2caacd7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caacd808 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caacde78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:913:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fd2caacdd60 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caacddd8 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fd2caace0e0 <col:98, col:135>
| | | `-ReturnStmt 0x7fd2caace0c8 <col:99, col:133>
| | |   `-CallExpr 0x7fd2caace060 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caace048 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caacdf98 <col:106, col:108> 'float (float, int)' lvalue Function 0x7fd2ca908f38 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fd2caace098 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caacdfd0 <col:115> 'float' lvalue ParmVar 0x7fd2caacdd60 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caace0b0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caacdff8 <col:125> 'int' lvalue ParmVar 0x7fd2caacddd8 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fd2caacdf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caacdf68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caace260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:914:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fd2caace148 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caace1c0 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fd2caace4d0 <col:98, col:135>
| | | `-ReturnStmt 0x7fd2caace4b8 <col:99, col:133>
| | |   `-CallExpr 0x7fd2caace450 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caace438 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caace380 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7fd2ca90a4b8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fd2caace488 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caace3b8 <col:115> 'long double' lvalue ParmVar 0x7fd2caace148 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caace4a0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caace3e0 <col:125> 'int' lvalue ParmVar 0x7fd2caace1c0 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fd2caace308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caace350 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caacea98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:917:1, line:920:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7fd2caace4f0 <line:917:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caacea00 <line:918:1, line:920:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caace820 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caace898 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7fd2caacf038 <col:45, col:89>
| |   | `-ReturnStmt 0x7fd2caacf020 <col:46, col:87>
| |   |   `-CallExpr 0x7fd2caacefd0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caacefb8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caacef58 <col:53, col:55> 'double (double, int)' lvalue Function 0x7fd2ca90a200 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fd2caacec20 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caacebe0 <col:69> '_A1' lvalue ParmVar 0x7fd2caace820 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd2caacf008 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd2caacec48 <col:79> 'int' lvalue ParmVar 0x7fd2caace898 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7fd2caaceaf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaceb40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caacf138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:925:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caacf0a0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caacf328 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caacf310 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caacf2c8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caacf2b0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caacf250 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ca905d60 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caacf2f8 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caacf288 <col:97> 'float' lvalue ParmVar 0x7fd2caacf0a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caacf1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caacf220 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caacf428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:926:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caacf390 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caacf618 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caacf600 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caacf5b8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caacf5a0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caacf540 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ca9060a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caacf5e8 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caacf578 <col:97> 'long double' lvalue ParmVar 0x7fd2caacf390 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caacf4c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caacf510 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caacfae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:929:1, line:932:61> col:1 log
| | |-TemplateTypeParmDecl 0x7fd2caacf638 <line:929:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caacfa48 <line:930:1, line:932:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caacf970 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caad0000 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd2caacffe8 <col:30, col:59>
| |   |   `-CallExpr 0x7fd2caacffb8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caacffa0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caacff68 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ca905f00 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caacfc60 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caacfc20 <col:51> '_A1' lvalue ParmVar 0x7fd2caacf970 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caacfb38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caacfb80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad0100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:937:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad0068 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caad02f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caad02d8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caad0290 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caad0278 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad0218 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca906290 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caad02c0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad0250 <col:101> 'float' lvalue ParmVar 0x7fd2caad0068 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caad01a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad01e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad03f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:938:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad0358 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caad05e0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caad05c8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caad0580 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caad0568 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad0508 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca9065d0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caad05b0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad0540 <col:101> 'long double' lvalue ParmVar 0x7fd2caad0358 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caad0490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad04d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caad0ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:941:1, line:944:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7fd2caad0600 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caad0a40 <line:942:1, line:944:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caad0930 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caad1000 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caad0fe8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caad0fb8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caad0fa0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caad0f68 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca906430 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caad0c58 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caad0c18 <col:55> '_A1' lvalue ParmVar 0x7fd2caad0930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caad0b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caad0b78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad1180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:949:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad1068 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caad10e0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7fd2caad1420 <col:106, col:142>
| | | `-ReturnStmt 0x7fd2caad1408 <col:107, col:140>
| | |   `-CallExpr 0x7fd2caad13a0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caad1388 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad12a0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7fd2ca908718 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7fd2caad13d8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caad12d8 <col:122> 'float' lvalue ParmVar 0x7fd2caad1068 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caad13f0 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad1300 <col:132> 'float *' lvalue ParmVar 0x7fd2caad10e0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7fd2caad1228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad1270 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad15a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:950:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad1488 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caad1500 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7fd2caad1840 <col:106, col:142>
| | | `-ReturnStmt 0x7fd2caad1828 <col:107, col:140>
| | |   `-CallExpr 0x7fd2caad17c0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caad17a8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad16c0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7fd2ca908c98 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7fd2caad17f8 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caad16f8 <col:122> 'long double' lvalue ParmVar 0x7fd2caad1488 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caad1810 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad1720 <col:132> 'long double *' lvalue ParmVar 0x7fd2caad1500 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7fd2caad1648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad1690 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad19c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:956:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad18a8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caad1920 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caad1c00 <col:104, col:139>
| | | `-ReturnStmt 0x7fd2caad1be8 <col:105, col:137>
| | |   `-CallExpr 0x7fd2caad1b80 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caad1b68 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad1ae0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7fd2ca90e428 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caad1bb8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caad1b18 <col:119> 'float' lvalue ParmVar 0x7fd2caad18a8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caad1bd0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad1b40 <col:129> 'float' lvalue ParmVar 0x7fd2caad1920 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caad1a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad1ab0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad1d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:957:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad1c68 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caad1ce0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caad1fc0 <col:104, col:139>
| | | `-ReturnStmt 0x7fd2caad1fa8 <col:105, col:137>
| | |   `-CallExpr 0x7fd2caad1f40 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caad1f28 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad1ea0 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7fd2ca90e878 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caad1f78 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caad1ed8 <col:119> 'long double' lvalue ParmVar 0x7fd2caad1c68 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caad1f90 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad1f00 <col:129> 'long double' lvalue ParmVar 0x7fd2caad1ce0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caad1e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad1e70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caad2820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:960:1, line:974:1> line:968:1 pow
| | |-TemplateTypeParmDecl 0x7fd2caad1fe0 <line:960:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caad2048 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caad2788 <line:961:1, line:974:1> line:968:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caad2630 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caad26a0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caad3048 <line:969:1, line:974:1>
| |   | |-DeclStmt 0x7fd2caad2a98 <line:970:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caad2a40 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caad29d0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caad2e90 <line:971:5, line:972:68>
| |   | | `-StaticAssertDecl 0x7fd2caad2e58 <line:971:5, line:972:67> line:971:5
| |   | |   |-ParenExpr 0x7fd2caad2e10 <col:19, line:972:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caad2df0 <line:971:20, line:972:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caad2dd0 <line:971:21, line:972:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caad2da8 <line:971:22, line:972:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caad2c08 <line:971:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caad2d68 <line:972:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caad2e30 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caad3030 <line:973:5, col:66>
| |   |   `-CallExpr 0x7fd2caad2ff8 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caad2ec8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7fd2ca90e650 0x7fd2caad19c0 0x7fd2caad1d80 0x7fd2caad2820
| |   |     |-CStyleCastExpr 0x7fd2caad2f70 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caad2f38 <col:33> '_A1' lvalue ParmVar 0x7fd2caad2630 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caad2fd0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caad2f98 <col:58> '_A2' lvalue ParmVar 0x7fd2caad26a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caad2880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caad28c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad3158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:979:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad30c0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caad3348 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caad3330 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caad32e8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caad32d0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad3270 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ca9016e0 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caad3318 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad32a8 <col:97> 'float' lvalue ParmVar 0x7fd2caad30c0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caad31f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad3240 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad3448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:980:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad33b0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caad3638 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caad3620 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caad35d8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caad35c0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad3560 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ca901a20 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caad3608 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad3598 <col:97> 'long double' lvalue ParmVar 0x7fd2caad33b0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caad34e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad3530 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caad3b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:983:1, line:986:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7fd2caad3658 <line:983:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caad3a68 <line:984:1, line:986:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caad3990 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caad4020 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd2caad4008 <col:30, col:59>
| |   |   `-CallExpr 0x7fd2caad3fd8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caad3fc0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caad3f88 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ca901880 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caad3c80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caad3c40 <col:51> '_A1' lvalue ParmVar 0x7fd2caad3990 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caad3b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caad3ba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad4120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:991:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad4088 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caad4310 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caad42f8 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caad42b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caad4298 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad4238 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca904490 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caad42e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad4270 <col:99> 'float' lvalue ParmVar 0x7fd2caad4088 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caad41c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad4208 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad4410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:992:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad4378 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caad4600 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caad45e8 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caad45a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caad4588 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad4528 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca9047d0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caad45d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad4560 <col:99> 'long double' lvalue ParmVar 0x7fd2caad4378 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caad44b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad44f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caad6cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, line:998:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7fd2caad4620 <line:995:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caad6c40 <line:996:1, line:998:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caad4950 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caad7200 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caad71e8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caad71b8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caad71a0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caad7168 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca904630 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caad6e58 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caad6e18 <col:53> '_A1' lvalue ParmVar 0x7fd2caad4950 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caad6d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caad6d78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad7300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1003:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad7268 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caad74f0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caad74d8 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caad7490 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caad7478 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad7418 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca90ea20 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caad74c0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad7450 <col:99> 'float' lvalue ParmVar 0x7fd2caad7268 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caad73a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad73e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad75f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1004:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad7558 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caad77e0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caad77c8 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caad7780 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caad7768 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad7708 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca90ed60 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caad77b0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad7740 <col:99> 'long double' lvalue ParmVar 0x7fd2caad7558 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caad7690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad76d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caad7ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1007:1, line:1010:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7fd2caad7800 <line:1007:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caad7c08 <line:1008:1, line:1010:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caad7b30 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caad81c0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caad81a8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caad8178 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caad8160 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caad8128 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca90ebc0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caad7e20 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caad7de0 <col:53> '_A1' lvalue ParmVar 0x7fd2caad7b30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caad7cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caad7d40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad82c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1015:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad8228 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caad84b0 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caad8498 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caad8450 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caad8438 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad83d8 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ca901bc0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caad8480 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad8410 <col:97> 'float' lvalue ParmVar 0x7fd2caad8228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caad8360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad83a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad85b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1016:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad8518 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caad87a0 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caad8788 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caad8740 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caad8728 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad86c8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ca901f00 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caad8770 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad8700 <col:97> 'long double' lvalue ParmVar 0x7fd2caad8518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caad8650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad8698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caad8c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1019:1, line:1022:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7fd2caad87c0 <line:1019:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caad8c00 <line:1020:1, line:1022:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caad8af0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caad91c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd2caad91a8 <col:30, col:59>
| |   |   `-CallExpr 0x7fd2caad9178 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caad9160 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caad9128 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ca901d60 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caad8e18 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caad8dd8 <col:51> '_A1' lvalue ParmVar 0x7fd2caad8af0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caad8cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caad8d38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad92c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1027:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad9228 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caad94b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caad9498 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caad9450 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caad9438 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad93d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca904970 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caad9480 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad9410 <col:99> 'float' lvalue ParmVar 0x7fd2caad9228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caad9360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad93a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caad95b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1028:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caad9518 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caad97a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caad9788 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caad9740 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caad9728 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caad96c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca904cb0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caad9770 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caad9700 <col:99> 'long double' lvalue ParmVar 0x7fd2caad9518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caad9650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caad9698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caad9c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1031:1, line:1034:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7fd2caad97c0 <line:1031:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caad9bc8 <line:1032:1, line:1034:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caad9af0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caada180 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caada168 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caada138 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caada120 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caada0e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca904b10 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caad9de0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caad9da0 <col:53> '_A1' lvalue ParmVar 0x7fd2caad9af0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caad9cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caad9d00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caada280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1038:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caada1e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caada470 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caada458 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caada410 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caada3f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caada398 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca9020a0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caada440 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caada3d0 <col:101> 'float' lvalue ParmVar 0x7fd2caada1e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caada320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caada368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caada570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1039:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caada4d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caada760 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caada748 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caada700 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caada6e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caada688 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca902c30 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caada730 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caada6c0 <col:101> 'long double' lvalue ParmVar 0x7fd2caada4d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caada610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caada658 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caadac98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1041:1, line:1044:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7fd2caada780 <line:1041:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caadac00 <line:1042:1, line:1044:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caadaab0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caadb1c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caadb1a8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caadb178 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caadb160 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caadb128 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca902a90 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caadae18 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caadadd8 <col:55> '_A1' lvalue ParmVar 0x7fd2caadaab0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caadacf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caadad38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caadb2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1048:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caadb228 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caadb4b0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caadb498 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caadb450 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caadb438 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caadb3d8 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca902dd0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caadb480 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caadb410 <col:101> 'float' lvalue ParmVar 0x7fd2caadb228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caadb360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caadb3a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caadb5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1049:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caadb518 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caadb7a0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caadb788 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caadb740 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caadb728 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caadb6c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca903110 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caadb770 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caadb700 <col:101> 'long double' lvalue ParmVar 0x7fd2caadb518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caadb650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caadb698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caadbc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1051:1, line:1054:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7fd2caadb7c0 <line:1051:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caadbbc8 <line:1052:1, line:1054:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caadbaf0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caadc180 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caadc168 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caadc138 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caadc120 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caadc0e8 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca902f70 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caadbde0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caadbda0 <col:55> '_A1' lvalue ParmVar 0x7fd2caadbaf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caadbcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caadbd00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caadc280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1058:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caadc1e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caadc470 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caadc458 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caadc410 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caadc3f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caadc398 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca9032b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caadc440 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caadc3d0 <col:101> 'float' lvalue ParmVar 0x7fd2caadc1e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caadc320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caadc368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caadc570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1059:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caadc4d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caadc760 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caadc748 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caadc700 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caadc6e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caadc688 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca9035f0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caadc730 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caadc6c0 <col:101> 'long double' lvalue ParmVar 0x7fd2caadc4d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caadc610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caadc658 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caadcc98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1061:1, line:1064:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7fd2caadc780 <line:1061:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caadcc00 <line:1062:1, line:1064:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caadcab0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caadd1c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caadd1a8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caadd178 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caadd160 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caadd128 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca903450 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caadce18 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caadcdd8 <col:55> '_A1' lvalue ParmVar 0x7fd2caadcab0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caadccf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caadcd38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caadd2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1068:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caadd228 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caadd4b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caadd498 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caadd450 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caadd438 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caadd3d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca90d7d0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caadd480 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caadd410 <col:99> 'float' lvalue ParmVar 0x7fd2caadd228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caadd360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caadd3a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caadd5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1069:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caadd518 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caadd7a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caadd788 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caadd740 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caadd728 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caadd6c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca90db10 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caadd770 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caadd700 <col:99> 'long double' lvalue ParmVar 0x7fd2caadd518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caadd650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caadd698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaddc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1071:1, line:1074:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7fd2caadd7c0 <line:1071:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaddbc8 <line:1072:1, line:1074:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaddaf0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caade180 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caade168 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caade138 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caade120 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caade0e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca90d970 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaddde0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaddda0 <col:53> '_A1' lvalue ParmVar 0x7fd2caaddaf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaddcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaddd00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caade300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1078:1, line:1081:1> line:1078:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caade1e8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caade260 <line:1079:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caade540 <col:75, line:1081:1>
| | | `-ReturnStmt 0x7fd2caade528 <line:1080:3, col:40>
| | |   `-CallExpr 0x7fd2caade4c0 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caade4a8 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caade420 <col:10, col:12> 'float (float, float)' lvalue Function 0x7fd2ca914c40 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caade4f8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caade458 <col:22> 'float' lvalue ParmVar 0x7fd2caade1e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caade510 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caade480 <col:32> 'float' lvalue ParmVar 0x7fd2caade260 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caade3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caade3f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caade6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1082:1, line:1085:1> line:1083:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caade5a8 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caade620 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caade900 <col:64, line:1085:1>
| | | `-ReturnStmt 0x7fd2caade8e8 <line:1084:3, col:40>
| | |   `-CallExpr 0x7fd2caade880 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caade868 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caade7e0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7fd2ca915090 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caade8b8 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caade818 <col:22> 'long double' lvalue ParmVar 0x7fd2caade5a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caade8d0 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caade840 <col:32> 'long double' lvalue ParmVar 0x7fd2caade620 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caade768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caade7b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caadf180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1087:1, line:1101:1> line:1095:1 copysign
| | |-TemplateTypeParmDecl 0x7fd2caade920 <line:1087:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caade988 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caadf0e8 <line:1088:1, line:1101:1> line:1095:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caadef90 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caadf000 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caadf9a8 <line:1096:1, line:1101:1>
| |   | |-DeclStmt 0x7fd2caadf3f8 <line:1097:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caadf3a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caadf330 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caadf7f0 <line:1098:5, line:1099:68>
| |   | | `-StaticAssertDecl 0x7fd2caadf7b8 <line:1098:5, line:1099:67> line:1098:5
| |   | |   |-ParenExpr 0x7fd2caadf770 <col:19, line:1099:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caadf750 <line:1098:20, line:1099:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caadf730 <line:1098:21, line:1099:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caadf708 <line:1098:22, line:1099:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caadf568 <line:1098:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caadf6c8 <line:1099:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caadf790 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caadf990 <line:1100:5, col:71>
| |   |   `-CallExpr 0x7fd2caadf958 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caadf828 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7fd2ca914e68 0x7fd2caade300 0x7fd2caade6c0 0x7fd2caadf180
| |   |     |-CStyleCastExpr 0x7fd2caadf8d0 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caadf898 <col:38> '_A1' lvalue ParmVar 0x7fd2caadef90 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caadf930 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caadf8f8 <col:63> '_A2' lvalue ParmVar 0x7fd2caadf000 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caadf1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caadf228 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caadfab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1105:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caadfa20 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caadfca8 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caadfc90 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caadfc48 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caadfc30 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caadfbd0 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ca90ef00 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caadfc78 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caadfc08 <col:97> 'float' lvalue ParmVar 0x7fd2caadfa20 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caadfb58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caadfba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caadfda8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1106:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caadfd10 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caadff98 <col:82, col:107>
| | | `-ReturnStmt 0x7fd2caadff80 <col:83, col:105>
| | |   `-CallExpr 0x7fd2caadff38 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caadff20 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caadfec0 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ca90f290 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caadff68 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caadfef8 <col:97> 'long double' lvalue ParmVar 0x7fd2caadfd10 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caadfe48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caadfe90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caae0460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1108:1, line:1111:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7fd2caadffb8 <line:1108:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caae03c8 <line:1109:1, line:1111:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caae02f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caae0980 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd2caae0968 <col:30, col:59>
| |   |   `-CallExpr 0x7fd2caae0938 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caae0920 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caae08e8 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ca90f0a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caae05e0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caae05a0 <col:51> '_A1' lvalue ParmVar 0x7fd2caae02f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caae04b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caae0500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae0a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1115:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae09e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caae1c78 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caae1c60 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caae1c18 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caae1c00 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae0b98 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca90f430 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caae1c48 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae0bd0 <col:99> 'float' lvalue ParmVar 0x7fd2caae09e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caae0b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae0b68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae1d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae1ce0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caae1f68 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caae1f50 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caae1f08 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caae1ef0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae1e90 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca90f770 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caae1f38 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae1ec8 <col:99> 'long double' lvalue ParmVar 0x7fd2caae1ce0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caae1e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae1e60 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caae2430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1118:1, line:1121:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7fd2caae1f88 <line:1118:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caae2398 <line:1119:1, line:1121:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caae22c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caae2950 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caae2938 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caae2908 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caae28f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caae28b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca90f5d0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caae25b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caae2570 <col:53> '_A1' lvalue ParmVar 0x7fd2caae22c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caae2488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caae24d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae2a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1125:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae29b8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caae2c40 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caae2c28 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caae2be0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caae2bc8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae2b68 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca9053a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caae2c10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae2ba0 <col:99> 'float' lvalue ParmVar 0x7fd2caae29b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caae2af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae2b38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae2d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1126:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae2ca8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caae2f30 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caae2f18 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caae2ed0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caae2eb8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae2e58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca9056e0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caae2f00 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae2e90 <col:99> 'long double' lvalue ParmVar 0x7fd2caae2ca8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caae2de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae2e28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caae33f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1128:1, line:1131:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7fd2caae2f50 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caae3358 <line:1129:1, line:1131:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caae3280 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caae3910 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caae38f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caae38c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caae38b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caae3878 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca905540 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caae3570 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caae3530 <col:53> '_A1' lvalue ParmVar 0x7fd2caae3280 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caae3448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caae3490 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae3a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1135:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae3978 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caae3c00 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caae3be8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caae3ba0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caae3b88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae3b28 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca905880 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caae3bd0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae3b60 <col:101> 'float' lvalue ParmVar 0x7fd2caae3978 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caae3ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae3af8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae3d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1136:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae3c68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caae3ef0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caae3ed8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caae3e90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caae3e78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae3e18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca905bc0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caae3ec0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae3e50 <col:101> 'long double' lvalue ParmVar 0x7fd2caae3c68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caae3da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae3de8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caae43b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, line:1141:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7fd2caae3f10 <line:1138:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caae4318 <line:1139:1, line:1141:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caae4240 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caae48d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caae48b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caae4888 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caae4870 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caae4838 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca905a20 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caae4530 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caae44f0 <col:55> '_A1' lvalue ParmVar 0x7fd2caae4240 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caae4408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caae4450 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae4a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1145:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae4938 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caae49b0 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caae4c90 <col:105, col:141>
| | | `-ReturnStmt 0x7fd2caae4c78 <col:106, col:139>
| | |   `-CallExpr 0x7fd2caae4c10 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caae4bf8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae4b70 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fd2ca907768 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caae4c48 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caae4ba8 <col:121> 'float' lvalue ParmVar 0x7fd2caae4938 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caae4c60 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae4bd0 <col:131> 'float' lvalue ParmVar 0x7fd2caae49b0 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caae4af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae4b40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae4e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1146:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae4cf8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caae4d70 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caae5050 <col:105, col:141>
| | | `-ReturnStmt 0x7fd2caae5038 <col:106, col:139>
| | |   `-CallExpr 0x7fd2caae4fd0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caae4fb8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae4f30 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fd2ca907bb8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caae5008 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caae4f68 <col:121> 'long double' lvalue ParmVar 0x7fd2caae4cf8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caae5020 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae4f90 <col:131> 'long double' lvalue ParmVar 0x7fd2caae4d70 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caae4eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae4f00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caae58b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1148:1, line:1162:1> line:1156:1 fdim
| | |-TemplateTypeParmDecl 0x7fd2caae5070 <line:1148:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caae50d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caae5818 <line:1149:1, line:1162:1> line:1156:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caae56c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caae5730 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caae80f8 <line:1157:1, line:1162:1>
| |   | |-DeclStmt 0x7fd2caae5b28 <line:1158:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caae5ad0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caae5a60 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caae7f40 <line:1159:5, line:1160:68>
| |   | | `-StaticAssertDecl 0x7fd2caae7f08 <line:1159:5, line:1160:67> line:1159:5
| |   | |   |-ParenExpr 0x7fd2caae7ec0 <col:19, line:1160:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caae7ea0 <line:1159:20, line:1160:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caae7e80 <line:1159:21, line:1160:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caae7e58 <line:1159:22, line:1160:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caae7cb8 <line:1159:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caae7e18 <line:1160:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caae7ee0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caae80e0 <line:1161:5, col:67>
| |   |   `-CallExpr 0x7fd2caae80a8 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caae7f78 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7fd2ca907990 0x7fd2caae4a50 0x7fd2caae4e10 0x7fd2caae58b0
| |   |     |-CStyleCastExpr 0x7fd2caae8020 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caae7fe8 <col:34> '_A1' lvalue ParmVar 0x7fd2caae56c0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caae8080 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caae8048 <col:59> '_A2' lvalue ParmVar 0x7fd2caae5730 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caae5910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caae5958 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae8308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1166:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae8170 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caae81e8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fd2caae8260 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7fd2caae85c0 <col:126, col:171>
| | | `-ReturnStmt 0x7fd2caae85a8 <col:127, col:169>
| | |   `-CallExpr 0x7fd2caae8520 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caae8508 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae8430 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7fd2ca91aba8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caae8560 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caae8468 <col:141> 'float' lvalue ParmVar 0x7fd2caae8170 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fd2caae8578 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caae8490 <col:151> 'float' lvalue ParmVar 0x7fd2caae81e8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caae8590 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae84b8 <col:161> 'float' lvalue ParmVar 0x7fd2caae8260 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7fd2caae83b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae8400 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caae87c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1167:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caae8628 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caae86a0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fd2caae8718 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7fd2caae8a80 <col:126, col:171>
| | | `-ReturnStmt 0x7fd2caae8a68 <col:127, col:169>
| | |   `-CallExpr 0x7fd2caae89e0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caae89c8 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caae88e8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7fd2ca90b288 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caae8a20 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caae8920 <col:141> 'long double' lvalue ParmVar 0x7fd2caae8628 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caae8a38 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caae8948 <col:151> 'long double' lvalue ParmVar 0x7fd2caae86a0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caae8a50 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caae8970 <col:161> 'long double' lvalue ParmVar 0x7fd2caae8718 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caae8870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caae88b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caae96d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1169:1, line:1185:1> line:1178:1 fma
| | |-TemplateTypeParmDecl 0x7fd2caae8aa0 <line:1169:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caae8b08 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7fd2caae8b78 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7fd2caae9638 <line:1170:1, line:1185:1> line:1178:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caae9410 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caae9480 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fd2caae94f0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7fd2caaea290 <line:1179:1, line:1185:1>
| |   | |-DeclStmt 0x7fd2caae99d8 <line:1180:5, col:71>
| |   | | `-TypedefDecl 0x7fd2caae9980 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7fd2caae9910 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7fd2caaea070 <line:1181:5, line:1183:68>
| |   | | `-StaticAssertDecl 0x7fd2caaea038 <line:1181:5, line:1183:67> line:1181:5
| |   | |   |-ParenExpr 0x7fd2caae9ff0 <col:19, line:1183:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caae9fd0 <line:1181:20, line:1183:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caae9fb0 <line:1181:21, line:1183:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caae9f88 <line:1181:22, line:1183:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7fd2caae9da8 <line:1181:22, line:1182:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7fd2caae9ba8 <line:1181:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7fd2caae9d68 <line:1182:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caae9f48 <line:1183:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caaea010 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caaea278 <line:1184:5, col:91>
| |   |   `-CallExpr 0x7fd2caaea238 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caaea0a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7fd2ca91aef8 0x7fd2caae8308 0x7fd2caae87c0 0x7fd2caae96d0
| |   |     |-CStyleCastExpr 0x7fd2caaea150 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caaea118 <col:33> '_A1' lvalue ParmVar 0x7fd2caae9410 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fd2caaea1b0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caaea178 <col:58> '_A2' lvalue ParmVar 0x7fd2caae9480 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7fd2caaea210 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaea1d8 <col:83> '_A3' lvalue ParmVar 0x7fd2caae94f0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7fd2caae9738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caae9780 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaea420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaea308 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caaea380 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caaea660 <col:105, col:141>
| | | `-ReturnStmt 0x7fd2caaea648 <col:106, col:139>
| | |   `-CallExpr 0x7fd2caaea5e0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaea5c8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaea540 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fd2ca907de0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caaea618 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaea578 <col:121> 'float' lvalue ParmVar 0x7fd2caaea308 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caaea630 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaea5a0 <col:131> 'float' lvalue ParmVar 0x7fd2caaea380 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaea4c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaea510 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaea7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaea6c8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caaea740 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caaeaa20 <col:105, col:141>
| | | `-ReturnStmt 0x7fd2caaeaa08 <col:106, col:139>
| | |   `-CallExpr 0x7fd2caaea9a0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaea988 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaea900 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fd2ca91a238 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caaea9d8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaea938 <col:121> 'long double' lvalue ParmVar 0x7fd2caaea6c8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caaea9f0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaea960 <col:131> 'long double' lvalue ParmVar 0x7fd2caaea740 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaea888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaea8d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaeb280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1206:1> line:1200:1 fmax
| | |-TemplateTypeParmDecl 0x7fd2caaeaa40 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caaeaaa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caaeb1e8 <line:1193:1, line:1206:1> line:1200:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaeb090 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caaeb100 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caaebaa8 <line:1201:1, line:1206:1>
| |   | |-DeclStmt 0x7fd2caaeb4f8 <line:1202:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caaeb4a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caaeb430 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caaeb8f0 <line:1203:5, line:1204:68>
| |   | | `-StaticAssertDecl 0x7fd2caaeb8b8 <line:1203:5, line:1204:67> line:1203:5
| |   | |   |-ParenExpr 0x7fd2caaeb870 <col:19, line:1204:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caaeb850 <line:1203:20, line:1204:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caaeb830 <line:1203:21, line:1204:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caaeb808 <line:1203:22, line:1204:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caaeb668 <line:1203:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caaeb7c8 <line:1204:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caaeb890 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caaeba90 <line:1205:5, col:67>
| |   |   `-CallExpr 0x7fd2caaeba58 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caaeb928 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7fd2ca908008 0x7fd2caaea420 0x7fd2caaea7e0 0x7fd2caaeb280
| |   |     |-CStyleCastExpr 0x7fd2caaeb9d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caaeb998 <col:34> '_A1' lvalue ParmVar 0x7fd2caaeb090 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caaeba30 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaeb9f8 <col:59> '_A2' lvalue ParmVar 0x7fd2caaeb100 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caaeb2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaeb328 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaebc40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaebb20 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caaebb98 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caaebe80 <col:105, col:141>
| | | `-ReturnStmt 0x7fd2caaebe68 <col:106, col:139>
| | |   `-CallExpr 0x7fd2caaebe00 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaebde8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaebd60 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fd2ca91a460 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caaebe38 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaebd98 <col:121> 'float' lvalue ParmVar 0x7fd2caaebb20 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caaebe50 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaebdc0 <col:131> 'float' lvalue ParmVar 0x7fd2caaebb98 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaebce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaebd30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaec000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1211:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaebee8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caaebf60 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caaec240 <col:105, col:141>
| | | `-ReturnStmt 0x7fd2caaec228 <col:106, col:139>
| | |   `-CallExpr 0x7fd2caaec1c0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaec1a8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaec120 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fd2ca91a8b0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caaec1f8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaec158 <col:121> 'long double' lvalue ParmVar 0x7fd2caaebee8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caaec210 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaec180 <col:131> 'long double' lvalue ParmVar 0x7fd2caaebf60 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaec0a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaec0f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaecaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1213:1, line:1227:1> line:1221:1 fmin
| | |-TemplateTypeParmDecl 0x7fd2caaec260 <line:1213:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caaec2c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caaeca08 <line:1214:1, line:1227:1> line:1221:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaec8b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caaec920 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caaed2c8 <line:1222:1, line:1227:1>
| |   | |-DeclStmt 0x7fd2caaecd18 <line:1223:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caaeccc0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caaecc50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caaed110 <line:1224:5, line:1225:68>
| |   | | `-StaticAssertDecl 0x7fd2caaed0d8 <line:1224:5, line:1225:67> line:1224:5
| |   | |   |-ParenExpr 0x7fd2caaed090 <col:19, line:1225:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caaed070 <line:1224:20, line:1225:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caaed050 <line:1224:21, line:1225:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caaed028 <line:1224:22, line:1225:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caaece88 <line:1224:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caaecfe8 <line:1225:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caaed0b0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caaed2b0 <line:1226:5, col:67>
| |   |   `-CallExpr 0x7fd2caaed278 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caaed148 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7fd2ca91a688 0x7fd2caaebc40 0x7fd2caaec000 0x7fd2caaecaa0
| |   |     |-CStyleCastExpr 0x7fd2caaed1f0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caaed1b8 <col:34> '_A1' lvalue ParmVar 0x7fd2caaec8b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caaed250 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaed218 <col:59> '_A2' lvalue ParmVar 0x7fd2caaec920 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caaecb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaecb48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaed458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1231:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaed340 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caaed3b8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caaed698 <col:106, col:143>
| | | `-ReturnStmt 0x7fd2caaed680 <col:107, col:141>
| | |   `-CallExpr 0x7fd2caaed618 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaed600 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaed578 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fd2ca90dd30 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caaed650 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaed5b0 <col:123> 'float' lvalue ParmVar 0x7fd2caaed340 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caaed668 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaed5d8 <col:133> 'float' lvalue ParmVar 0x7fd2caaed3b8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaed500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaed548 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaed818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaed700 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caaed778 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caaeda58 <col:106, col:143>
| | | `-ReturnStmt 0x7fd2caaeda40 <col:107, col:141>
| | |   `-CallExpr 0x7fd2caaed9d8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaed9c0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaed938 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fd2ca90e200 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caaeda10 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaed970 <col:123> 'long double' lvalue ParmVar 0x7fd2caaed700 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caaeda28 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaed998 <col:133> 'long double' lvalue ParmVar 0x7fd2caaed778 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaed8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaed908 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaee300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1234:1, line:1248:1> line:1242:1 hypot
| | |-TemplateTypeParmDecl 0x7fd2caaeda78 <line:1234:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caaedae8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caaee268 <line:1235:1, line:1248:1> line:1242:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaee110 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caaee180 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caaeeb28 <line:1243:1, line:1248:1>
| |   | |-DeclStmt 0x7fd2caaee578 <line:1244:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caaee520 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caaee4b0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caaee970 <line:1245:5, line:1246:68>
| |   | | `-StaticAssertDecl 0x7fd2caaee938 <line:1245:5, line:1246:67> line:1245:5
| |   | |   |-ParenExpr 0x7fd2caaee8f0 <col:19, line:1246:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caaee8d0 <line:1245:20, line:1246:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caaee8b0 <line:1245:21, line:1246:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caaee888 <line:1245:22, line:1246:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caaee6e8 <line:1245:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caaee848 <line:1246:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caaee910 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caaeeb10 <line:1247:5, col:68>
| |   |   `-CallExpr 0x7fd2caaeead8 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caaee9a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7fd2ca90df58 0x7fd2caaed458 0x7fd2caaed818 0x7fd2caaee300
| |   |     |-CStyleCastExpr 0x7fd2caaeea50 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caaeea18 <col:35> '_A1' lvalue ParmVar 0x7fd2caaee110 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caaeeab0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaeea78 <col:60> '_A2' lvalue ParmVar 0x7fd2caaee180 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caaee360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaee3a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaeec38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaeeba0 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaeee28 <col:76, col:103>
| | | `-ReturnStmt 0x7fd2caaeee10 <col:77, col:101>
| | |   `-CallExpr 0x7fd2caaeedc8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fd2caaeedb0 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaeed50 <col:84, col:86> 'int (float)' lvalue Function 0x7fd2ca90aea0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaeedf8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaeed88 <col:93> 'float' lvalue ParmVar 0x7fd2caaeeba0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaeecd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaeed20 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaeef28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1253:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaeee90 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaef118 <col:76, col:103>
| | | `-ReturnStmt 0x7fd2caaef100 <col:77, col:101>
| | |   `-CallExpr 0x7fd2caaef0b8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fd2caaef0a0 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaef040 <col:84, col:86> 'int (long double)' lvalue Function 0x7fd2ca90c290 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaef0e8 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaef078 <col:93> 'long double' lvalue ParmVar 0x7fd2caaeee90 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaeefc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaef010 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaef5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1255:1, line:1258:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7fd2caaef138 <line:1255:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaef548 <line:1256:1, line:1258:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaef470 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaefdb8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caaefda0 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caaefd70 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7fd2caaefd58 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaefd20 <col:39, col:41> 'int (double)' lvalue Function 0x7fd2ca90b078 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaef760 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaef720 <col:55> '_A1' lvalue ParmVar 0x7fd2caaef470 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaef638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaef680 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaefeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaefe20 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf00a8 <col:85, col:113>
| | | `-ReturnStmt 0x7fd2caaf0090 <col:86, col:111>
| | |   `-CallExpr 0x7fd2caaf0048 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaf0030 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaeffd0 <col:93, col:95> 'float (float)' lvalue Function 0x7fd2ca90f910 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf0078 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf0008 <col:103> 'float' lvalue ParmVar 0x7fd2caaefe20 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaeff58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaeffa0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf01a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1263:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf0110 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf0398 <col:85, col:113>
| | | `-ReturnStmt 0x7fd2caaf0380 <col:86, col:111>
| | |   `-CallExpr 0x7fd2caaf0338 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaf0320 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf02c0 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fd2ca90fc30 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf0368 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf02f8 <col:103> 'long double' lvalue ParmVar 0x7fd2caaf0110 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf0248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf0290 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf0860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1265:1, line:1268:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7fd2caaf03b8 <line:1265:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf07c8 <line:1266:1, line:1268:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf06f0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf0d80 <col:32, col:67>
| |   | `-ReturnStmt 0x7fd2caaf0d68 <col:33, col:65>
| |   |   `-CallExpr 0x7fd2caaf0d38 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caaf0d20 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf0ce8 <col:40, col:42> 'double (double)' lvalue Function 0x7fd2ca90faa0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf09e0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf09a0 <col:57> '_A1' lvalue ParmVar 0x7fd2caaf06f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf08b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf0900 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf0e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf0de8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf10a0 <col:83, col:111>
| | | `-ReturnStmt 0x7fd2caaf1088 <col:84, col:109>
| | |   `-CallExpr 0x7fd2caaf1040 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fd2caaf1028 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf0f98 <col:91, col:93> 'long long (float)' lvalue Function 0x7fd2ca912688 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf1070 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf0fd0 <col:101> 'float' lvalue ParmVar 0x7fd2caaf0de8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf0f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf0f68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf11a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1273:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf1108 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf13c0 <col:83, col:111>
| | | `-ReturnStmt 0x7fd2caaf13a8 <col:84, col:109>
| | |   `-CallExpr 0x7fd2caaf1360 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fd2caaf1348 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf12b8 <col:91, col:93> 'long long (long double)' lvalue Function 0x7fd2ca912ac8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf1390 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf12f0 <col:101> 'long double' lvalue ParmVar 0x7fd2caaf1108 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf1240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf1288 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf1970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1275:1, line:1278:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7fd2caaf13e0 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf18d8 <line:1276:1, line:1278:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf17c0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf2148 <col:32, col:67>
| |   | `-ReturnStmt 0x7fd2caaf2130 <col:33, col:65>
| |   |   `-CallExpr 0x7fd2caaf2100 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7fd2caaf20e8 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf2088 <col:40, col:42> 'long long (double)' lvalue Function 0x7fd2ca9128a8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf1af0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf1ab0 <col:57> '_A1' lvalue ParmVar 0x7fd2caaf17c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf19c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf1a10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf2248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf21b0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf2438 <col:84, col:113>
| | | `-ReturnStmt 0x7fd2caaf2420 <col:85, col:111>
| | |   `-CallExpr 0x7fd2caaf23d8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fd2caaf23c0 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf2360 <col:92, col:94> 'long long (float)' lvalue Function 0x7fd2ca912ca8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf2408 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf2398 <col:103> 'float' lvalue ParmVar 0x7fd2caaf21b0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf22e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf2330 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf2538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1283:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf24a0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf2728 <col:84, col:113>
| | | `-ReturnStmt 0x7fd2caaf2710 <col:85, col:111>
| | |   `-CallExpr 0x7fd2caaf26c8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fd2caaf26b0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf2650 <col:92, col:94> 'long long (long double)' lvalue Function 0x7fd2ca912fe8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf26f8 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf2688 <col:103> 'long double' lvalue ParmVar 0x7fd2caaf24a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf25d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf2620 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf2bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1285:1, line:1288:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7fd2caaf2748 <line:1285:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf2b58 <line:1286:1, line:1288:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf2a80 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf3110 <col:33, col:69>
| |   | `-ReturnStmt 0x7fd2caaf30f8 <col:34, col:67>
| |   |   `-CallExpr 0x7fd2caaf30c8 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7fd2caaf30b0 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf3078 <col:41, col:43> 'long long (double)' lvalue Function 0x7fd2ca912e48 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf2d70 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf2d30 <col:59> '_A1' lvalue ParmVar 0x7fd2caaf2a80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf2c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf2c90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf3210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1292:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf3178 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf3400 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caaf33e8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caaf33a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaf3388 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf3328 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca906c50 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf33d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf3360 <col:101> 'float' lvalue ParmVar 0x7fd2caaf3178 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf32b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf32f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf3500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1293:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf3468 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf36f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2caaf36d8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2caaf3690 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaf3678 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf3618 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca906f90 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf36c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf3650 <col:101> 'long double' lvalue ParmVar 0x7fd2caaf3468 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf35a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf35e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf3bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1295:1, line:1298:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7fd2caaf3710 <line:1295:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf3b18 <line:1296:1, line:1298:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf3a40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf40d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caaf40b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caaf4088 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caaf4070 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf4038 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca906df0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf3d30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf3cf0 <col:55> '_A1' lvalue ParmVar 0x7fd2caaf3a40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf3c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf3c50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf41d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf4138 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf43c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caaf43a8 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caaf4360 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaf4348 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf42e8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca906770 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf4390 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf4320 <col:99> 'float' lvalue ParmVar 0x7fd2caaf4138 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf4270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf42b8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf44c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf4428 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf46b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caaf4698 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caaf4650 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaf4638 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf45d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca906ab0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf4680 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf4610 <col:99> 'long double' lvalue ParmVar 0x7fd2caaf4428 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf4560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf45a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf4b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7fd2caaf46d0 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf4ad8 <line:1306:1, line:1308:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf4a00 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf5090 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caaf5078 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caaf5048 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caaf5030 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf4ff8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca906910 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf4cf0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf4cb0 <col:53> '_A1' lvalue ParmVar 0x7fd2caaf4a00 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf4bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf4c10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf5190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf50f8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf5380 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caaf5368 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caaf5320 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaf5308 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf52a8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca907130 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf5350 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf52e0 <col:99> 'float' lvalue ParmVar 0x7fd2caaf50f8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf5230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf5278 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf5480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf53e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf5670 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caaf5658 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caaf5610 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaf55f8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf5598 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca908490 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf5640 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf55d0 <col:99> 'long double' lvalue ParmVar 0x7fd2caaf53e8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf5520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf5568 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf5b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1318:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7fd2caaf5690 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf5a98 <line:1316:1, line:1318:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf59c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf6050 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2caaf6038 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2caaf6008 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caaf5ff0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf5fb8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca9082f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf5cb0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf5c70 <col:53> '_A1' lvalue ParmVar 0x7fd2caaf59c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf5b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf5bd0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf6150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1322:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf60b8 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf6370 <col:77, col:104>
| | | `-ReturnStmt 0x7fd2caaf6358 <col:78, col:102>
| | |   `-CallExpr 0x7fd2caaf6310 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fd2caaf62f8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf6268 <col:85, col:87> 'long (float)' lvalue Function 0x7fd2ca911668 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf6340 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf62a0 <col:94> 'float' lvalue ParmVar 0x7fd2caaf60b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf61f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf6238 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf6470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1323:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf63d8 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf6690 <col:77, col:104>
| | | `-ReturnStmt 0x7fd2caaf6678 <col:78, col:102>
| | |   `-CallExpr 0x7fd2caaf6630 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fd2caaf6618 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf6588 <col:85, col:87> 'long (long double)' lvalue Function 0x7fd2ca911aa8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf6660 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf65c0 <col:94> 'long double' lvalue ParmVar 0x7fd2caaf63d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf6510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf6558 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf6c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1325:1, line:1328:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7fd2caaf66b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf6ba8 <line:1326:1, line:1328:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf6a90 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf73f8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2caaf73e0 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2caaf73b0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7fd2caaf7398 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf7338 <col:39, col:41> 'long (double)' lvalue Function 0x7fd2ca911888 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf6dc0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf6d80 <col:55> '_A1' lvalue ParmVar 0x7fd2caaf6a90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf6c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf6ce0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf74f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1332:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf7460 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf76e8 <col:78, col:106>
| | | `-ReturnStmt 0x7fd2caaf76d0 <col:79, col:104>
| | |   `-CallExpr 0x7fd2caaf7688 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fd2caaf7670 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf7610 <col:86, col:88> 'long (float)' lvalue Function 0x7fd2ca912168 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf76b8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf7648 <col:96> 'float' lvalue ParmVar 0x7fd2caaf7460 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf7598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf75e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf77e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf7750 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf79d8 <col:78, col:106>
| | | `-ReturnStmt 0x7fd2caaf79c0 <col:79, col:104>
| | |   `-CallExpr 0x7fd2caaf7978 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fd2caaf7960 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf7900 <col:86, col:88> 'long (long double)' lvalue Function 0x7fd2ca9124a8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf79a8 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf7938 <col:96> 'long double' lvalue ParmVar 0x7fd2caaf7750 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf7888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf78d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf7ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1335:1, line:1338:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7fd2caaf79f8 <line:1335:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf7e08 <line:1336:1, line:1338:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf7d30 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf83c0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fd2caaf83a8 <col:33, col:65>
| |   |   `-CallExpr 0x7fd2caaf8378 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7fd2caaf8360 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf8328 <col:40, col:42> 'long (double)' lvalue Function 0x7fd2ca912308 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf8020 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf7fe0 <col:57> '_A1' lvalue ParmVar 0x7fd2caaf7d30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf7ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf7f40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf84c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1344:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf8428 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaf86b0 <col:88, col:119>
| | | `-ReturnStmt 0x7fd2caaf8698 <col:89, col:117>
| | |   `-CallExpr 0x7fd2caaf8650 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaf8638 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf85d8 <col:96, col:98> 'float (float)' lvalue Function 0x7fd2ca910c68 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaf8680 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf8610 <col:109> 'float' lvalue ParmVar 0x7fd2caaf8428 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf8560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf85a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf87b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1345:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf8718 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaf89a0 <col:88, col:119>
| | | `-ReturnStmt 0x7fd2caaf8988 <col:89, col:117>
| | |   `-CallExpr 0x7fd2caaf8940 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaf8928 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf88c8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7fd2ca910fa8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaf8970 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf8900 <col:109> 'long double' lvalue ParmVar 0x7fd2caaf8718 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf8850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf8898 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaf8e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1347:1, line:1350:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7fd2caaf89c0 <line:1347:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaf8dc8 <line:1348:1, line:1350:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaf8cf0 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2caaf9380 <col:35, col:73>
| |   | `-ReturnStmt 0x7fd2caaf9368 <col:36, col:71>
| |   |   `-CallExpr 0x7fd2caaf9338 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caaf9320 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caaf92e8 <col:43, col:45> 'double (double)' lvalue Function 0x7fd2ca910e08 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaf8fe0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaf8fa0 <col:63> '_A1' lvalue ParmVar 0x7fd2caaf8cf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaf8eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaf8f00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf9500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf93e8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caaf9460 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caaf9740 <col:110, col:151>
| | | `-ReturnStmt 0x7fd2caaf9728 <col:111, col:149>
| | |   `-CallExpr 0x7fd2caaf96c0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaf96a8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf9620 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fd2ca915968 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caaf96f8 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaf9658 <col:131> 'float' lvalue ParmVar 0x7fd2caaf93e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caaf9710 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf9680 <col:141> 'float' lvalue ParmVar 0x7fd2caaf9460 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaf95a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf95f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaf98c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaf97a8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caaf9820 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caaf9b00 <col:110, col:151>
| | | `-ReturnStmt 0x7fd2caaf9ae8 <col:111, col:149>
| | |   `-CallExpr 0x7fd2caaf9a80 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaf9a68 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaf99e0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fd2ca915db8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caaf9ab8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caaf9a18 <col:131> 'long double' lvalue ParmVar 0x7fd2caaf97a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caaf9ad0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaf9a40 <col:141> 'long double' lvalue ParmVar 0x7fd2caaf9820 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaf9968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaf99b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caafa360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1371:1> line:1365:1 nextafter
| | |-TemplateTypeParmDecl 0x7fd2caaf9b20 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caaf9b88 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caafa2c8 <line:1358:1, line:1371:1> line:1365:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caafa170 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caafa1e0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caafab88 <line:1366:1, line:1371:1>
| |   | |-DeclStmt 0x7fd2caafa5d8 <line:1367:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caafa580 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caafa510 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caafa9d0 <line:1368:5, line:1369:68>
| |   | | `-StaticAssertDecl 0x7fd2caafa998 <line:1368:5, line:1369:67> line:1368:5
| |   | |   |-ParenExpr 0x7fd2caafa950 <col:19, line:1369:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caafa930 <line:1368:20, line:1369:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caafa910 <line:1368:21, line:1369:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caafa8e8 <line:1368:22, line:1369:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caafa748 <line:1368:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caafa8a8 <line:1369:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caafa970 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caafab70 <line:1370:5, col:72>
| |   |   `-CallExpr 0x7fd2caafab38 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caafaa08 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7fd2ca915b90 0x7fd2caaf9500 0x7fd2caaf98c0 0x7fd2caafa360
| |   |     |-CStyleCastExpr 0x7fd2caafaab0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caafaa78 <col:39> '_A1' lvalue ParmVar 0x7fd2caafa170 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caafab10 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caafaad8 <col:64> '_A2' lvalue ParmVar 0x7fd2caafa1e0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caafa3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caafa408 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caafad18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caafac00 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caafac78 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caafaf80 <col:111, col:153>
| | | `-ReturnStmt 0x7fd2caafaf68 <col:112, col:151>
| | |   `-CallExpr 0x7fd2caafaf00 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caafaee8 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caafae38 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7fd2ca9072d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caafaf38 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caafae70 <col:133> 'float' lvalue ParmVar 0x7fd2caafac00 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caafaf50 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caafae98 <col:143> 'long double' lvalue ParmVar 0x7fd2caafac78 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caafadc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caafae08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caafb100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1376:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caafafe8 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caafb060 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caafb340 <col:111, col:153>
| | | `-ReturnStmt 0x7fd2caafb328 <col:112, col:151>
| | |   `-CallExpr 0x7fd2caafb2c0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caafb2a8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caafb220 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7fd2ca907540 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caafb2f8 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caafb258 <col:133> 'long double' lvalue ParmVar 0x7fd2caafafe8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caafb310 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caafb280 <col:143> 'long double' lvalue ParmVar 0x7fd2caafb060 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caafb1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caafb1f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caafb8d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1378:1, line:1381:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7fd2caafb360 <line:1378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caafb838 <line:1379:1, line:1381:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caafb690 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caafb708 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7fd2caafbe68 <col:58, col:107>
| |   | `-ReturnStmt 0x7fd2caafbe50 <col:59, col:105>
| |   |   `-CallExpr 0x7fd2caafbe00 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2caafbde8 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2caafbd88 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7fd2ca916028 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7fd2caafba58 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caafba18 <col:87> '_A1' lvalue ParmVar 0x7fd2caafb690 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd2caafbe38 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd2caafba80 <col:97> 'long double' lvalue ParmVar 0x7fd2caafb708 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7fd2caafb930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caafb978 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caafbfe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caafbed0 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caafbf48 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2caafc228 <col:110, col:151>
| | | `-ReturnStmt 0x7fd2caafc210 <col:111, col:149>
| | |   `-CallExpr 0x7fd2caafc1a8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caafc190 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caafc108 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fd2ca913dd8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2caafc1e0 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caafc140 <col:131> 'float' lvalue ParmVar 0x7fd2caafbed0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caafc1f8 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caafc168 <col:141> 'float' lvalue ParmVar 0x7fd2caafbf48 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2caafc090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caafc0d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caafc3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1386:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caafc290 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caafc308 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2caafc5e8 <col:110, col:151>
| | | `-ReturnStmt 0x7fd2caafc5d0 <col:111, col:149>
| | |   `-CallExpr 0x7fd2caafc568 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caafc550 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caafc4c8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fd2ca914238 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2caafc5a0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caafc500 <col:131> 'long double' lvalue ParmVar 0x7fd2caafc290 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caafc5b8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caafc528 <col:141> 'long double' lvalue ParmVar 0x7fd2caafc308 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caafc450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caafc498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caafce50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1388:1, line:1402:1> line:1396:1 remainder
| | |-TemplateTypeParmDecl 0x7fd2caafc608 <line:1388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caafc678 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caafcdb8 <line:1389:1, line:1402:1> line:1396:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caafcc60 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caafccd0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2caafd678 <line:1397:1, line:1402:1>
| |   | |-DeclStmt 0x7fd2caafd0c8 <line:1398:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caafd070 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caafd000 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caafd4c0 <line:1399:5, line:1400:68>
| |   | | `-StaticAssertDecl 0x7fd2caafd488 <line:1399:5, line:1400:67> line:1399:5
| |   | |   |-ParenExpr 0x7fd2caafd440 <col:19, line:1400:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caafd420 <line:1399:20, line:1400:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caafd400 <line:1399:21, line:1400:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caafd3d8 <line:1399:22, line:1400:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caafd238 <line:1399:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caafd398 <line:1400:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caafd460 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caafd660 <line:1401:5, col:72>
| |   |   `-CallExpr 0x7fd2caafd628 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caafd4f8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7fd2ca914000 0x7fd2caafbfe8 0x7fd2caafc3a8 0x7fd2caafce50
| |   |     |-CStyleCastExpr 0x7fd2caafd5a0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caafd568 <col:39> '_A1' lvalue ParmVar 0x7fd2caafcc60 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2caafd600 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caafd5c8 <col:64> '_A2' lvalue ParmVar 0x7fd2caafccd0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2caafceb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caafcef8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caafd8d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1406:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fd2caafd6f0 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2caafd768 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fd2caafd7e0 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fd2caafdb90 <col:122, col:170>
| | | `-ReturnStmt 0x7fd2caafdb78 <col:123, col:168>
| | |   `-CallExpr 0x7fd2caafdaf0 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caafdad8 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caafd9f8 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7fd2ca914528 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7fd2caafdb30 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caafda30 <col:140> 'float' lvalue ParmVar 0x7fd2caafd6f0 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fd2caafdb48 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caafda58 <col:150> 'float' lvalue ParmVar 0x7fd2caafd768 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fd2caafdb60 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caafda80 <col:160> 'int *' lvalue ParmVar 0x7fd2caafd7e0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fd2caafd980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caafd9c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caafdde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fd2caafdc00 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2caafdc78 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fd2caafdcf0 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fd2caafe0a0 <col:122, col:170>
| | | `-ReturnStmt 0x7fd2caafe088 <col:123, col:168>
| | |   `-CallExpr 0x7fd2caafe000 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caafdfe8 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caafdf08 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7fd2ca914a68 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7fd2caafe040 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caafdf40 <col:140> 'long double' lvalue ParmVar 0x7fd2caafdc00 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caafe058 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2caafdf68 <col:150> 'long double' lvalue ParmVar 0x7fd2caafdc78 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2caafe070 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caafdf90 <col:160> 'int *' lvalue ParmVar 0x7fd2caafdcf0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fd2caafde90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caafded8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caafe9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1409:1, line:1423:1> line:1417:1 remquo
| | |-TemplateTypeParmDecl 0x7fd2caafe0c0 <line:1409:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2caafe128 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2caafe948 <line:1410:1, line:1423:1> line:1417:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caafe710 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2caafe780 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fd2caafe7f8 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7fd2caaff238 <line:1418:1, line:1423:1>
| |   | |-DeclStmt 0x7fd2caafec58 <line:1419:5, col:66>
| |   | | `-TypedefDecl 0x7fd2caafec00 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2caafeb90 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2caaff050 <line:1420:5, line:1421:68>
| |   | | `-StaticAssertDecl 0x7fd2caaff018 <line:1420:5, line:1421:67> line:1420:5
| |   | |   |-ParenExpr 0x7fd2caafefd0 <col:19, line:1421:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2caafefb0 <line:1420:20, line:1421:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2caafef90 <line:1420:21, line:1421:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2caafef68 <line:1420:22, line:1421:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2caafedc8 <line:1420:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2caafef28 <line:1421:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2caafeff0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2caaff220 <line:1422:5, col:79>
| |   |   `-CallExpr 0x7fd2caaff1e0 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2caaff088 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7fd2ca9147c8 0x7fd2caafd8d0 0x7fd2caafdde0 0x7fd2caafe9e0
| |   |     |-CStyleCastExpr 0x7fd2caaff130 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caaff0f8 <col:36> '_A1' lvalue ParmVar 0x7fd2caafe710 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fd2caaff190 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2caaff158 <col:61> '_A2' lvalue ParmVar 0x7fd2caafe780 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7fd2caaff1b8 <col:71> 'int *' lvalue ParmVar 0x7fd2caafe7f8 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7fd2caafea48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caafea90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaff348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1427:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaff2b0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2caaff538 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caaff520 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caaff4d8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2caaff4c0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaff460 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ca911148 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2caaff508 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaff498 <col:99> 'float' lvalue ParmVar 0x7fd2caaff2b0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2caaff3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaff430 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2caaff638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1428:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2caaff5a0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2caaff828 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2caaff810 <col:84, col:107>
| | |   `-CallExpr 0x7fd2caaff7c8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2caaff7b0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2caaff750 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ca911490 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2caaff7f8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2caaff788 <col:99> 'long double' lvalue ParmVar 0x7fd2caaff5a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2caaff6d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2caaff720 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2caaffcf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1430:1, line:1433:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7fd2caaff848 <line:1430:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2caaffc58 <line:1431:1, line:1433:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2caaffb80 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2cab00210 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2cab001f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2cab001c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2cab001b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2cab00178 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ca9112f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2caaffe70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2caaffe30 <col:53> '_A1' lvalue ParmVar 0x7fd2caaffb80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2caaffd48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2caaffd90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab00310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1437:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab00278 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2cab00500 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2cab004e8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2cab004a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2cab00488 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab00428 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca911c88 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2cab004d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab00460 <col:101> 'float' lvalue ParmVar 0x7fd2cab00278 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2cab003b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab003f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab00600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1438:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab00568 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2cab007f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2cab007d8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2cab00790 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2cab00778 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab00718 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca911fc8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2cab007c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab00750 <col:101> 'long double' lvalue ParmVar 0x7fd2cab00568 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2cab006a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab006e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2cab00cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1440:1, line:1443:65> col:1 round
| | |-TemplateTypeParmDecl 0x7fd2cab00810 <line:1440:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2cab00c18 <line:1441:1, line:1443:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2cab00b40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2cab011d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2cab011b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2cab01188 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2cab01170 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2cab01138 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca911e28 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2cab00e30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2cab00df0 <col:55> '_A1' lvalue ParmVar 0x7fd2cab00b40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2cab00d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2cab00d50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab01350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1447:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab01238 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2cab012b0 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fd2cab015c0 <col:101, col:140>
| | | `-ReturnStmt 0x7fd2cab015a8 <col:102, col:138>
| | |   `-CallExpr 0x7fd2cab01540 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7fd2cab01528 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab01470 <col:109, col:111> 'float (float, long)' lvalue Function 0x7fd2ca90cba8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7fd2cab01578 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2cab014a8 <col:120> 'float' lvalue ParmVar 0x7fd2cab01238 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2cab01590 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab014d0 <col:130> 'long' lvalue ParmVar 0x7fd2cab012b0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fd2cab013f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab01440 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab01740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1448:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab01628 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2cab016a0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fd2cab019b0 <col:101, col:140>
| | | `-ReturnStmt 0x7fd2cab01998 <col:102, col:138>
| | |   `-CallExpr 0x7fd2cab01930 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2cab01918 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab01860 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7fd2ca90d108 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7fd2cab01968 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2cab01898 <col:120> 'long double' lvalue ParmVar 0x7fd2cab01628 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2cab01980 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab018c0 <col:130> 'long' lvalue ParmVar 0x7fd2cab016a0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fd2cab017e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab01830 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2cab01f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1450:1, line:1453:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7fd2cab019d0 <line:1450:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2cab01ed8 <line:1451:1, line:1453:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7fd2cab01d30 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2cab01da8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7fd2cab02508 <col:48, col:94>
| |   | `-ReturnStmt 0x7fd2cab024f0 <col:49, col:92>
| |   |   `-CallExpr 0x7fd2cab024a0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2cab02488 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2cab02428 <col:56, col:58> 'double (double, long)' lvalue Function 0x7fd2ca90ce58 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7fd2cab020f8 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2cab020b8 <col:74> '_A1' lvalue ParmVar 0x7fd2cab01d30 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd2cab024d8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd2cab02120 <col:84> 'long' lvalue ParmVar 0x7fd2cab01da8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7fd2cab01fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2cab02018 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab02688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1457:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab02570 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2cab025e8 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fd2cab028c8 <col:99, col:137>
| | | `-ReturnStmt 0x7fd2cab028b0 <col:100, col:135>
| | |   `-CallExpr 0x7fd2cab02848 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7fd2cab02830 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab027a8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7fd2ca90c4e8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fd2cab02880 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2cab027e0 <col:117> 'float' lvalue ParmVar 0x7fd2cab02570 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2cab02898 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab02808 <col:127> 'int' lvalue ParmVar 0x7fd2cab025e8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fd2cab02730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab02778 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab02a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1458:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab02930 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2cab029a8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fd2cab02c88 <col:99, col:137>
| | | `-ReturnStmt 0x7fd2cab02c70 <col:100, col:135>
| | |   `-CallExpr 0x7fd2cab02c08 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2cab02bf0 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab02b68 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7fd2ca90c938 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fd2cab02c40 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2cab02ba0 <col:117> 'long double' lvalue ParmVar 0x7fd2cab02930 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2cab02c58 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab02bc8 <col:127> 'int' lvalue ParmVar 0x7fd2cab029a8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fd2cab02af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab02b38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2cab031e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1460:1, line:1463:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7fd2cab02ca8 <line:1460:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2cab03148 <line:1461:1, line:1463:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fd2cab02fe0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2cab03058 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7fd2cab03750 <col:46, col:91>
| |   | `-ReturnStmt 0x7fd2cab03738 <col:47, col:89>
| |   |   `-CallExpr 0x7fd2cab036e8 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2cab036d0 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2cab03698 <col:54, col:56> 'double (double, int)' lvalue Function 0x7fd2ca90c710 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fd2cab03368 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2cab03328 <col:71> '_A1' lvalue ParmVar 0x7fd2cab02fe0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd2cab03720 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd2cab03390 <col:81> 'int' lvalue ParmVar 0x7fd2cab03058 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7fd2cab03240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2cab03288 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab03850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1467:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab037b8 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2cab03a40 <col:85, col:113>
| | | `-ReturnStmt 0x7fd2cab03a28 <col:86, col:111>
| | |   `-CallExpr 0x7fd2cab039e0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fd2cab039c8 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab03968 <col:93, col:95> 'float (float)' lvalue Function 0x7fd2ca90fdc0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2cab03a10 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab039a0 <col:103> 'float' lvalue ParmVar 0x7fd2cab037b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2cab038f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab03938 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab03b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1468:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab03aa8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2cab03d30 <col:85, col:113>
| | | `-ReturnStmt 0x7fd2cab03d18 <col:86, col:111>
| | |   `-CallExpr 0x7fd2cab03cd0 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2cab03cb8 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab03c58 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fd2ca910100 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2cab03d00 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab03c90 <col:103> 'long double' lvalue ParmVar 0x7fd2cab03aa8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2cab03be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab03c28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2cab041f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1470:1, line:1473:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7fd2cab03d50 <line:1470:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2cab04158 <line:1471:1, line:1473:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2cab04080 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2cab04710 <col:32, col:67>
| |   | `-ReturnStmt 0x7fd2cab046f8 <col:33, col:65>
| |   |   `-CallExpr 0x7fd2cab046c8 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2cab046b0 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2cab04678 <col:40, col:42> 'double (double)' lvalue Function 0x7fd2ca90ff60 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2cab04370 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2cab04330 <col:57> '_A1' lvalue ParmVar 0x7fd2cab04080 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2cab04248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2cab04290 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab04810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1477:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab04778 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2cab04a00 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2cab049e8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2cab049a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2cab04988 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab04928 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ca913200 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2cab049d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab04960 <col:101> 'float' lvalue ParmVar 0x7fd2cab04778 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2cab048b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab048f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2cab04b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1478:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2cab04a68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2cab04cf0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2cab04cd8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2cab04c90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2cab04c78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2cab04c18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ca913540 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2cab04cc0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2cab04c50 <col:101> 'long double' lvalue ParmVar 0x7fd2cab04a68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2cab04ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2cab04be8 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fd2cab051b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1480:1, line:1483:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7fd2cab04d10 <line:1480:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7fd2cab05118 <line:1481:1, line:1483:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7fd2cab05040 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7fd2cab056d0 <col:31, col:65>
|     | `-ReturnStmt 0x7fd2cab056b8 <col:32, col:63>
|     |   `-CallExpr 0x7fd2cab05688 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7fd2cab05670 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7fd2cab05638 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ca9133a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7fd2cab05330 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7fd2cab052f0 <col:55> '_A1' lvalue ParmVar 0x7fd2cab05040 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7fd2cab05208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7fd2cab05250 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7fd2ca93aa58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:439:12> col:12 implicit C
| `-FunctionDecl 0x7fd2ca93aaa8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fd2ca93ab40 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fd2ca93aba8 <col:12> Implicit
|   `-ConstAttr 0x7fd2ca93abf0 <col:12> Implicit
|-LinkageSpecDecl 0x7fd2caa93b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:90> col:90 implicit C
| `-FunctionDecl 0x7fd2caa93b90 <col:90> col:90 implicit used __builtin_huge_valf 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2caa93c28 <col:90> Implicit
|   `-ConstAttr 0x7fd2caa93c70 <col:90> Implicit
|-LinkageSpecDecl 0x7fd2caa93d20 <line:332:91> col:91 implicit C
| `-FunctionDecl 0x7fd2caa93d70 <col:91> col:91 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd2caa93e08 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd2caa93e70 <col:91> Implicit
|   `-ConstAttr 0x7fd2caa93eb8 <col:91> Implicit
|-LinkageSpecDecl 0x7fd2caa94020 <line:333:95> col:95 implicit C
| `-FunctionDecl 0x7fd2caa94070 <col:95> col:95 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd2caa94108 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd2caa94170 <col:95> Implicit
|   `-ConstAttr 0x7fd2caa941b8 <col:95> Implicit
|-LinkageSpecDecl 0x7fd2caa96c70 <line:377:90> col:90 implicit C
| `-FunctionDecl 0x7fd2caa96cc0 <col:90> col:90 implicit used __builtin_huge_val 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2caa96d58 <col:90> Implicit
|   `-ConstAttr 0x7fd2caa96da0 <col:90> Implicit
|-LinkageSpecDecl 0x7fd2caa96e50 <line:378:91> col:91 implicit C
| `-FunctionDecl 0x7fd2caa96ea0 <col:91> col:91 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd2caa96f38 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd2caa96fa0 <col:91> Implicit
|   `-ConstAttr 0x7fd2caa96fe8 <col:91> Implicit
|-LinkageSpecDecl 0x7fd2caa97150 <line:379:95> col:95 implicit C
| `-FunctionDecl 0x7fd2caa971a0 <col:95> col:95 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd2caa97238 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd2caa972a0 <col:95> Implicit
|   `-ConstAttr 0x7fd2caa972e8 <col:95> Implicit
|-LinkageSpecDecl 0x7fd2caa99dc8 <line:423:90> col:90 implicit C
| `-FunctionDecl 0x7fd2caa99e18 <col:90> col:90 implicit used __builtin_huge_vall 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2caa99eb0 <col:90> Implicit
|   `-ConstAttr 0x7fd2caa99ef8 <col:90> Implicit
|-LinkageSpecDecl 0x7fd2caa99fa8 <line:424:91> col:91 implicit C
| `-FunctionDecl 0x7fd2caa99ff8 <col:91> col:91 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd2caa9a090 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd2caa9a0f8 <col:91> Implicit
|   `-ConstAttr 0x7fd2caa9a140 <col:91> Implicit
|-LinkageSpecDecl 0x7fd2caa9a2b0 <line:425:95> col:95 implicit C
| `-FunctionDecl 0x7fd2caa9a300 <col:95> col:95 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd2caa9a398 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd2caa9a400 <col:95> Implicit
|   `-ConstAttr 0x7fd2caa9a448 <col:95> Implicit
|-LinkageSpecDecl 0x7fd2caab61b0 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7fd2caab6200 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2caab6298 <col:25> Implicit
|   `-ConstAttr 0x7fd2caab62e0 <col:25> Implicit
|-LinkageSpecDecl 0x7fd2caab7558 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7fd2caab75a8 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2caab7640 <col:30> Implicit
|   `-ConstAttr 0x7fd2caab7688 <col:30> Implicit
|-LinkageSpecDecl 0x7fd2caab86c8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7fd2caab8718 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2caab87b0 <col:22> Implicit
|   `-ConstAttr 0x7fd2caab87f8 <col:22> Implicit
|-LinkageSpecDecl 0x7fd2caab9858 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7fd2caab98a8 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2caab9940 <col:27> Implicit
|   `-ConstAttr 0x7fd2caab9988 <col:27> Implicit
|-LinkageSpecDecl 0x7fd2caabaa00 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7fd2caabaa50 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2caabaae8 <col:29> Implicit
|   `-ConstAttr 0x7fd2caabab30 <col:29> Implicit
|-LinkageSpecDecl 0x7fd2caabbb78 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7fd2caabbbc8 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2caabbc60 <col:27> Implicit
|   `-ConstAttr 0x7fd2caabbca8 <col:27> Implicit
|-NamespaceDecl 0x7fd2cab056f0 prev 0x7fd2caa74d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fd2ca865658 'std'
| `-NamespaceDecl 0x7fd2cab05758 prev 0x7fd2caa74e00 <col:52, line:439:36> <scratch space>:440:1 __1 inline
|   |-original Namespace 0x7fd2ca8656c0 '__1'
|   |-UsingDecl 0x7fd2cab057c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7fd2cab05818 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaaca98 'signbit'
|   |-UsingShadowDecl 0x7fd2cab05860 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaad590 'signbit'
|   |-UsingShadowDecl 0x7fd2cab058a8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaadde0 'signbit'
|   |-UsingDecl 0x7fd2cab058f8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7fd2cab05948 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaaee60 'fpclassify'
|   |-UsingShadowDecl 0x7fd2cab05990 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaaf6e0 'fpclassify'
|   |-UsingDecl 0x7fd2cab059e0 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7fd2cab05a30 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab0980 'isfinite'
|   |-UsingShadowDecl 0x7fd2cab05a78 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab1370 'isfinite'
|   |-UsingDecl 0x7fd2cab05ac8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7fd2cab05b18 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab2400 'isinf'
|   |-UsingShadowDecl 0x7fd2cab05b60 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab2d00 'isinf'
|   |-UsingDecl 0x7fd2cab05bb0 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7fd2cab06c00 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab3c50 'isnan'
|   |-UsingShadowDecl 0x7fd2cab06c48 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab44d0 'isnan'
|   |-UsingDecl 0x7fd2cab06c98 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7fd2cab06ce8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab5440 'isnormal'
|   |-UsingShadowDecl 0x7fd2cab06d30 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab5bd0 'isnormal'
|   |-UsingDecl 0x7fd2cab06d80 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7fd2cab06dd0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab6c60 'isgreater'
|   |-UsingDecl 0x7fd2cab06e20 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7fd2cab06e70 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab7ea0 'isgreaterequal'
|   |-UsingDecl 0x7fd2cab06ec0 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7fd2cab06f10 <col:9> col:9 implicit FunctionTemplate 0x7fd2caab9030 'isless'
|   |-UsingDecl 0x7fd2cab06f60 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7fd2cab06fb0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaba1a0 'islessequal'
|   |-UsingDecl 0x7fd2cab07000 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7fd2cab07050 <col:9> col:9 implicit FunctionTemplate 0x7fd2caabb350 'islessgreater'
|   |-UsingDecl 0x7fd2cab070a0 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fd2cab070f0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caabc4c0 'isunordered'
|   |-UsingDecl 0x7fd2cab07140 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fd2cab07190 prev 0x7fd2cab070f0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caabc4c0 'isunordered'
|   |-UsingDecl 0x7fd2cab071e0 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7fd2cab07230 <col:9> col:9 implicit Typedef 0x7fd2ca865840 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fd2cab07280 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7fd2cab072d0 <col:9> col:9 implicit Typedef 0x7fd2ca8658b0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fd2cab07320 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7fd2cab07370 <col:9> col:9 implicit Function 0x7fd2caabda00 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab073b8 <col:9> col:9 implicit Function 0x7fd2caabdcf0 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07400 <col:9> col:9 implicit Function 0x7fd2caabdfe0 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7fd2cab07450 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7fd2cab074a0 <col:9> col:9 implicit Function 0x7fd2ca8ff448 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab074e8 <col:9> col:9 implicit Function 0x7fd2caabe2d0 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07530 <col:9> col:9 implicit Function 0x7fd2caabe5c0 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07578 <col:9> col:9 implicit FunctionTemplate 0x7fd2caabed60 'acos'
|   |-UsingDecl 0x7fd2cab075c8 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7fd2cab07618 <col:9> col:9 implicit Function 0x7fd2ca8ff2a8 'acosf' 'float (float)'
|   |-UsingDecl 0x7fd2cab07668 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7fd2cab076b8 <col:9> col:9 implicit Function 0x7fd2ca8ff928 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab07700 <col:9> col:9 implicit Function 0x7fd2caac0960 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07748 <col:9> col:9 implicit Function 0x7fd2caac0c50 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07790 <col:9> col:9 implicit FunctionTemplate 0x7fd2caac1300 'asin'
|   |-UsingDecl 0x7fd2cab077e0 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7fd2cab07830 <col:9> col:9 implicit Function 0x7fd2ca8ff788 'asinf' 'float (float)'
|   |-UsingDecl 0x7fd2cab07880 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7fd2cab078d0 <col:9> col:9 implicit Function 0x7fd2ca8ffe30 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab07918 <col:9> col:9 implicit Function 0x7fd2caac1920 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07960 <col:9> col:9 implicit Function 0x7fd2caac1c40 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab079a8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caac22f0 'atan'
|   |-UsingDecl 0x7fd2cab079f8 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7fd2cab07a48 <col:9> col:9 implicit Function 0x7fd2ca8ffc90 'atanf' 'float (float)'
|   |-UsingDecl 0x7fd2cab07a98 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7fd2cab07ae8 <col:9> col:9 implicit Function 0x7fd2ca9004e8 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab07b30 <col:9> col:9 implicit Function 0x7fd2caac2990 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07b78 <col:9> col:9 implicit Function 0x7fd2caac2d80 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07bc0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caac3950 'atan2'
|   |-UsingDecl 0x7fd2cab07c10 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7fd2cab07c60 <col:9> col:9 implicit Function 0x7fd2ca900238 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab07cb0 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7fd2cab07d00 <col:9> col:9 implicit Function 0x7fd2ca910448 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab07d48 <col:9> col:9 implicit Function 0x7fd2caac5368 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07d90 <col:9> col:9 implicit Function 0x7fd2caac5658 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07dd8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caac5d10 'ceil'
|   |-UsingDecl 0x7fd2cab07e28 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7fd2cab07e78 <col:9> col:9 implicit Function 0x7fd2ca9102a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7fd2cab07ec8 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7fd2cab07f18 <col:9> col:9 implicit Function 0x7fd2ca9013a0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab07f60 <col:9> col:9 implicit Function 0x7fd2caac6330 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07fa8 <col:9> col:9 implicit Function 0x7fd2caac6620 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab07ff0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caac6d00 'cos'
|   |-UsingDecl 0x7fd2cab08040 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7fd2cab08090 <col:9> col:9 implicit Function 0x7fd2ca901200 'cosf' 'float (float)'
|   |-UsingDecl 0x7fd2cab080e0 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7fd2cab08130 <col:9> col:9 implicit Function 0x7fd2ca903930 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab08178 <col:9> col:9 implicit Function 0x7fd2caac7320 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab081c0 <col:9> col:9 implicit Function 0x7fd2caac7610 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08208 <col:9> col:9 implicit FunctionTemplate 0x7fd2caac7cc0 'cosh'
|   |-UsingDecl 0x7fd2cab08258 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7fd2cab082a8 <col:9> col:9 implicit Function 0x7fd2ca903790 'coshf' 'float (float)'
|   |-UsingDecl 0x7fd2cab082f8 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7fd2cab08348 <col:9> col:9 implicit Function 0x7fd2ca904ff0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab08390 <col:9> col:9 implicit Function 0x7fd2caac82e0 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab083d8 <col:9> col:9 implicit Function 0x7fd2caac85d0 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08420 <col:9> col:9 implicit FunctionTemplate 0x7fd2caac8ca0 'exp'
|   |-UsingDecl 0x7fd2cab08470 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7fd2cab084c0 <col:9> col:9 implicit Function 0x7fd2ca904e50 'expf' 'float (float)'
|   |-UsingDecl 0x7fd2cab08510 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7fd2cab08560 <col:9> col:9 implicit Function 0x7fd2ca90d490 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab085a8 <col:9> col:9 implicit Function 0x7fd2caac92c0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab085f0 <col:9> col:9 implicit Function 0x7fd2caac95b0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08638 <col:9> col:9 implicit FunctionTemplate 0x7fd2caac9c60 'fabs'
|   |-UsingDecl 0x7fd2cab08688 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7fd2cab086d8 <col:9> col:9 implicit Function 0x7fd2ca90d2f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7fd2cab08728 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7fd2cab08778 <col:9> col:9 implicit Function 0x7fd2ca910928 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab087c0 <col:9> col:9 implicit Function 0x7fd2caaca280 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08808 <col:9> col:9 implicit Function 0x7fd2caaca570 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08850 <col:9> col:9 implicit FunctionTemplate 0x7fd2caacac40 'floor'
|   |-UsingDecl 0x7fd2cab088a0 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7fd2cab088f0 <col:9> col:9 implicit Function 0x7fd2ca910788 'floorf' 'float (float)'
|   |-UsingDecl 0x7fd2cab08940 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7fd2cab08990 <col:9> col:9 implicit Function 0x7fd2ca913988 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab089d8 <col:9> col:9 implicit Function 0x7fd2caacb2e0 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08a20 <col:9> col:9 implicit Function 0x7fd2caacb6a0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08a68 <col:9> col:9 implicit FunctionTemplate 0x7fd2caacc140 'fmod'
|   |-UsingDecl 0x7fd2cab08ab8 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7fd2cab08b08 <col:9> col:9 implicit Function 0x7fd2ca913760 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab08b58 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7fd2cab08ba8 <col:9> col:9 implicit Function 0x7fd2ca90aa28 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7fd2cab08bf0 <col:9> col:9 implicit Function 0x7fd2caaccb18 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08c38 <col:9> col:9 implicit Function 0x7fd2caaccf30 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08c80 <col:9> col:9 implicit FunctionTemplate 0x7fd2caacd760 'frexp'
|   |-UsingDecl 0x7fd2cab08cd0 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7fd2cab08d20 <col:9> col:9 implicit Function 0x7fd2ca90a788 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7fd2cab08d70 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7fd2cab08dc0 <col:9> col:9 implicit Function 0x7fd2ca90a200 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7fd2cab08e08 <col:9> col:9 implicit Function 0x7fd2caacde78 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08e50 <col:9> col:9 implicit Function 0x7fd2caace260 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fd2cab08e98 <col:9> col:9 implicit FunctionTemplate 0x7fd2caacea98 'ldexp'
|   |-UsingDecl 0x7fd2cab08ee8 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7fd2cab08f38 <col:9> col:9 implicit Function 0x7fd2ca908f38 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7fd2cab08f88 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7fd2cab08fd8 <col:9> col:9 implicit Function 0x7fd2ca905f00 'log' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab09020 <col:9> col:9 implicit Function 0x7fd2caacf138 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09068 <col:9> col:9 implicit Function 0x7fd2caacf428 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab090b0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caacfae0 'log'
|   |-UsingDecl 0x7fd2cab09100 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7fd2cab09150 <col:9> col:9 implicit Function 0x7fd2ca905d60 'logf' 'float (float)'
|   |-UsingDecl 0x7fd2cab091a0 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7fd2cab091f0 <col:9> col:9 implicit Function 0x7fd2ca906430 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab09238 <col:9> col:9 implicit Function 0x7fd2caad0100 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09280 <col:9> col:9 implicit Function 0x7fd2caad03f0 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab092c8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caad0ad8 'log10'
|   |-UsingDecl 0x7fd2cab09318 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7fd2cab09368 <col:9> col:9 implicit Function 0x7fd2ca906290 'log10f' 'float (float)'
|   |-UsingDecl 0x7fd2cab093b8 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7fd2cab09408 <col:9> col:9 implicit Function 0x7fd2ca9089d8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7fd2cab09450 <col:9> col:9 implicit Function 0x7fd2caad1180 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09498 <col:9> col:9 implicit Function 0x7fd2caad15a0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7fd2cab094e8 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7fd2cab09538 <col:9> col:9 implicit Function 0x7fd2ca908718 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7fd2cab09588 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7fd2cab095d8 <col:9> col:9 implicit Function 0x7fd2ca90e650 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab09620 <col:9> col:9 implicit Function 0x7fd2caad19c0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09668 <col:9> col:9 implicit Function 0x7fd2caad1d80 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab096b0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caad2820 'pow'
|   |-UsingDecl 0x7fd2cab09700 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7fd2cab09750 <col:9> col:9 implicit Function 0x7fd2ca90e428 'powf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab097a0 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7fd2cab097f0 <col:9> col:9 implicit Function 0x7fd2ca901880 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab09838 <col:9> col:9 implicit Function 0x7fd2caad3158 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09880 <col:9> col:9 implicit Function 0x7fd2caad3448 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab098c8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caad3b00 'sin'
|   |-UsingDecl 0x7fd2cab09918 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7fd2cab09968 <col:9> col:9 implicit Function 0x7fd2ca9016e0 'sinf' 'float (float)'
|   |-UsingDecl 0x7fd2cab099b8 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7fd2cab09a08 <col:9> col:9 implicit Function 0x7fd2ca904630 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab09a50 <col:9> col:9 implicit Function 0x7fd2caad4120 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09a98 <col:9> col:9 implicit Function 0x7fd2caad4410 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09ae0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caad6cd8 'sinh'
|   |-UsingDecl 0x7fd2cab09b30 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7fd2cab09b80 <col:9> col:9 implicit Function 0x7fd2ca904490 'sinhf' 'float (float)'
|   |-UsingDecl 0x7fd2cab09bd0 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7fd2cab09c20 <col:9> col:9 implicit Function 0x7fd2ca90ebc0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab09c68 <col:9> col:9 implicit Function 0x7fd2caad7300 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09cb0 <col:9> col:9 implicit Function 0x7fd2caad75f0 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09cf8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caad7ca0 'sqrt'
|   |-UsingDecl 0x7fd2cab09d48 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7fd2cab09d98 <col:9> col:9 implicit Function 0x7fd2ca90ea20 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7fd2cab09de8 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7fd2cab09e38 <col:9> col:9 implicit Function 0x7fd2ca901d60 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab09e80 <col:9> col:9 implicit Function 0x7fd2caad82c0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09ec8 <col:9> col:9 implicit Function 0x7fd2caad85b0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab09f10 <col:9> col:9 implicit FunctionTemplate 0x7fd2caad8c98 'tan'
|   |-UsingDecl 0x7fd2cab09f60 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7fd2cab09fb0 <col:9> col:9 implicit Function 0x7fd2ca901bc0 'tanf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0a000 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7fd2cab0a050 <col:9> col:9 implicit Function 0x7fd2ca904b10 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0a098 <col:9> col:9 implicit Function 0x7fd2caad92c0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a0e0 <col:9> col:9 implicit Function 0x7fd2caad95b0 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a128 <col:9> col:9 implicit FunctionTemplate 0x7fd2caad9c60 'tanh'
|   |-UsingDecl 0x7fd2cab0a178 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7fd2cab0a1c8 <col:9> col:9 implicit Function 0x7fd2ca904970 'tanhf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0a218 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7fd2cab0a268 <col:9> col:9 implicit Function 0x7fd2ca902a90 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0a2b0 <col:9> col:9 implicit Function 0x7fd2caada280 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a2f8 <col:9> col:9 implicit Function 0x7fd2caada570 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a340 <col:9> col:9 implicit FunctionTemplate 0x7fd2caadac98 'acosh'
|   |-UsingDecl 0x7fd2cab0a390 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7fd2cab0a3e0 <col:9> col:9 implicit Function 0x7fd2ca9020a0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0a430 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7fd2cab0a480 <col:9> col:9 implicit Function 0x7fd2ca902f70 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0a4c8 <col:9> col:9 implicit Function 0x7fd2caadb2c0 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a510 <col:9> col:9 implicit Function 0x7fd2caadb5b0 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a558 <col:9> col:9 implicit FunctionTemplate 0x7fd2caadbc60 'asinh'
|   |-UsingDecl 0x7fd2cab0a5a8 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7fd2cab0a5f8 <col:9> col:9 implicit Function 0x7fd2ca902dd0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0a648 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7fd2cab0a698 <col:9> col:9 implicit Function 0x7fd2ca903450 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0a6e0 <col:9> col:9 implicit Function 0x7fd2caadc280 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a728 <col:9> col:9 implicit Function 0x7fd2caadc570 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a770 <col:9> col:9 implicit FunctionTemplate 0x7fd2caadcc98 'atanh'
|   |-UsingDecl 0x7fd2cab0a7c0 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7fd2cab0a810 <col:9> col:9 implicit Function 0x7fd2ca9032b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0a860 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7fd2cab0a8b0 <col:9> col:9 implicit Function 0x7fd2ca90d970 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0a8f8 <col:9> col:9 implicit Function 0x7fd2caadd2c0 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a940 <col:9> col:9 implicit Function 0x7fd2caadd5b0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0a988 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaddc60 'cbrt'
|   |-UsingDecl 0x7fd2cab0a9d8 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7fd2cab0aa28 <col:9> col:9 implicit Function 0x7fd2ca90d7d0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0aa78 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7fd2cab0aac8 <col:9> col:9 implicit Function 0x7fd2ca914e68 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab0ab10 <col:9> col:9 implicit Function 0x7fd2caade300 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0ab58 <col:9> col:9 implicit Function 0x7fd2caade6c0 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0aba0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caadf180 'copysign'
|   |-UsingDecl 0x7fd2cab0ac00 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7fd2cab0ac50 <col:9> col:9 implicit Function 0x7fd2ca914c40 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab0aca0 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7fd2cab0acf0 <col:9> col:9 implicit Function 0x7fd2ca90f0a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0ad38 <col:9> col:9 implicit Function 0x7fd2caadfab8 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0ad80 <col:9> col:9 implicit Function 0x7fd2caadfda8 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0adc8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caae0460 'erf'
|   |-UsingDecl 0x7fd2cab0ae18 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7fd2cab0ae68 <col:9> col:9 implicit Function 0x7fd2ca90ef00 'erff' 'float (float)'
|   |-UsingDecl 0x7fd2cab0aeb8 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7fd2cab0af08 <col:9> col:9 implicit Function 0x7fd2ca90f5d0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0af50 <col:9> col:9 implicit Function 0x7fd2caae0a80 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0af98 <col:9> col:9 implicit Function 0x7fd2caae1d78 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0afe0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caae2430 'erfc'
|   |-UsingDecl 0x7fd2cab0b030 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7fd2cab0b080 <col:9> col:9 implicit Function 0x7fd2ca90f430 'erfcf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0b0d0 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7fd2cab0b120 <col:9> col:9 implicit Function 0x7fd2ca905540 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0b168 <col:9> col:9 implicit Function 0x7fd2caae2a50 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0b1b0 <col:9> col:9 implicit Function 0x7fd2caae2d40 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0b1f8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caae33f0 'exp2'
|   |-UsingDecl 0x7fd2cab0b248 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7fd2cab0b298 <col:9> col:9 implicit Function 0x7fd2ca9053a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7fd2cab0b2e8 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7fd2cab0b338 <col:9> col:9 implicit Function 0x7fd2ca905a20 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0b380 <col:9> col:9 implicit Function 0x7fd2caae3a10 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0b3c8 <col:9> col:9 implicit Function 0x7fd2caae3d00 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0b410 <col:9> col:9 implicit FunctionTemplate 0x7fd2caae43b0 'expm1'
|   |-UsingDecl 0x7fd2cab0b460 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7fd2cab0b4b0 <col:9> col:9 implicit Function 0x7fd2ca905880 'expm1f' 'float (float)'
|   |-UsingDecl 0x7fd2cab0b500 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7fd2cab0b550 <col:9> col:9 implicit Function 0x7fd2ca907990 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab0b598 <col:9> col:9 implicit Function 0x7fd2caae4a50 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0b5e0 <col:9> col:9 implicit Function 0x7fd2caae4e10 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0b628 <col:9> col:9 implicit FunctionTemplate 0x7fd2caae58b0 'fdim'
|   |-UsingDecl 0x7fd2cab0b678 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7fd2cab0b6c8 <col:9> col:9 implicit Function 0x7fd2ca907768 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab0b718 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7fd2cab0b768 <col:9> col:9 implicit Function 0x7fd2ca91aba8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7fd2cab0b7b8 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7fd2cab0b808 <col:9> col:9 implicit Function 0x7fd2ca91aef8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7fd2cab0b850 <col:9> col:9 implicit Function 0x7fd2caae8308 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0b898 <col:9> col:9 implicit Function 0x7fd2caae87c0 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0b8e0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caae96d0 'fma'
|   |-UsingDecl 0x7fd2cab0b930 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7fd2cab0b980 <col:9> col:9 implicit Function 0x7fd2ca908008 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab0b9c8 <col:9> col:9 implicit Function 0x7fd2caaea420 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0ba10 <col:9> col:9 implicit Function 0x7fd2caaea7e0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0ba58 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaeb280 'fmax'
|   |-UsingDecl 0x7fd2cab0baa8 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7fd2cab0baf8 <col:9> col:9 implicit Function 0x7fd2ca907de0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab0bb48 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7fd2cab0bb98 <col:9> col:9 implicit Function 0x7fd2ca91a688 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab0bbe0 <col:9> col:9 implicit Function 0x7fd2caaebc40 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0bc28 <col:9> col:9 implicit Function 0x7fd2caaec000 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0bc70 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaecaa0 'fmin'
|   |-UsingDecl 0x7fd2cab0bcc0 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7fd2cab0bd10 <col:9> col:9 implicit Function 0x7fd2ca91a460 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab0bd60 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7fd2cab0bdb0 <col:9> col:9 implicit Function 0x7fd2ca90df58 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab0bdf8 <col:9> col:9 implicit Function 0x7fd2caaed458 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0be40 <col:9> col:9 implicit Function 0x7fd2caaed818 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0be88 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaee300 'hypot'
|   |-UsingDecl 0x7fd2cab0bed8 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7fd2cab0bf28 <col:9> col:9 implicit Function 0x7fd2ca90dd30 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab0bf78 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7fd2cab0bfc8 <col:9> col:9 implicit Function 0x7fd2ca90b078 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7fd2cab0c010 <col:9> col:9 implicit Function 0x7fd2caaeec38 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c058 <col:9> col:9 implicit Function 0x7fd2caaeef28 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c0a0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaef5e0 'ilogb'
|   |-UsingDecl 0x7fd2cab0c0f0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7fd2cab0c140 <col:9> col:9 implicit Function 0x7fd2ca90aea0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7fd2cab0c190 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7fd2cab0c1e0 <col:9> col:9 implicit Function 0x7fd2ca90faa0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0c228 <col:9> col:9 implicit Function 0x7fd2caaefeb8 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c270 <col:9> col:9 implicit Function 0x7fd2caaf01a8 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c2b8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf0860 'lgamma'
|   |-UsingDecl 0x7fd2cab0c308 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7fd2cab0c358 <col:9> col:9 implicit Function 0x7fd2ca90f910 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0c3a8 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7fd2cab0c3f8 <col:9> col:9 implicit Function 0x7fd2ca9128a8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7fd2cab0c440 <col:9> col:9 implicit Function 0x7fd2caaf0e80 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c488 <col:9> col:9 implicit Function 0x7fd2caaf11a0 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c4d0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf1970 'llrint'
|   |-UsingDecl 0x7fd2cab0c520 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7fd2cab0c570 <col:9> col:9 implicit Function 0x7fd2ca912688 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7fd2cab0c5c0 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7fd2cab0c610 <col:9> col:9 implicit Function 0x7fd2ca912e48 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7fd2cab0c658 <col:9> col:9 implicit Function 0x7fd2caaf2248 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c6a0 <col:9> col:9 implicit Function 0x7fd2caaf2538 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c6e8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf2bf0 'llround'
|   |-UsingDecl 0x7fd2cab0c738 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7fd2cab0c788 <col:9> col:9 implicit Function 0x7fd2ca912ca8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7fd2cab0c7d8 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7fd2cab0c828 <col:9> col:9 implicit Function 0x7fd2ca906df0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0c870 <col:9> col:9 implicit Function 0x7fd2caaf3210 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c8b8 <col:9> col:9 implicit Function 0x7fd2caaf3500 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0c900 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf3bb0 'log1p'
|   |-UsingDecl 0x7fd2cab0c950 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7fd2cab0c9a0 <col:9> col:9 implicit Function 0x7fd2ca906c50 'log1pf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0c9f0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7fd2cab0ca40 <col:9> col:9 implicit Function 0x7fd2ca906910 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0ca88 <col:9> col:9 implicit Function 0x7fd2caaf41d0 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0cad0 <col:9> col:9 implicit Function 0x7fd2caaf44c0 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0cb18 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf4b70 'log2'
|   |-UsingDecl 0x7fd2cab0cb68 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7fd2cab0cbb8 <col:9> col:9 implicit Function 0x7fd2ca906770 'log2f' 'float (float)'
|   |-UsingDecl 0x7fd2cab0cc08 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7fd2cab0cc58 <col:9> col:9 implicit Function 0x7fd2ca9082f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0cca0 <col:9> col:9 implicit Function 0x7fd2caaf5190 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0cce8 <col:9> col:9 implicit Function 0x7fd2caaf5480 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0cd30 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf5b30 'logb'
|   |-UsingDecl 0x7fd2cab0cd80 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7fd2cab0cdd0 <col:9> col:9 implicit Function 0x7fd2ca907130 'logbf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0ce20 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7fd2cab0ce70 <col:9> col:9 implicit Function 0x7fd2ca911888 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7fd2cab0ceb8 <col:9> col:9 implicit Function 0x7fd2caaf6150 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0cf00 <col:9> col:9 implicit Function 0x7fd2caaf6470 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0cf48 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf6c40 'lrint'
|   |-UsingDecl 0x7fd2cab0cf98 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7fd2cab0cfe8 <col:9> col:9 implicit Function 0x7fd2ca911668 'lrintf' 'long (float)'
|   |-UsingDecl 0x7fd2cab0d038 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7fd2cab0d088 <col:9> col:9 implicit Function 0x7fd2ca912308 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7fd2cab0d0d0 <col:9> col:9 implicit Function 0x7fd2caaf74f8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0d118 <col:9> col:9 implicit Function 0x7fd2caaf77e8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0d160 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf7ea0 'lround'
|   |-UsingDecl 0x7fd2cab0d1b0 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7fd2cab0d200 <col:9> col:9 implicit Function 0x7fd2ca912168 'lroundf' 'long (float)'
|   |-UsingDecl 0x7fd2cab0d250 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7fd2cab0d2a0 <col:9> col:9 implicit Function 0x7fd2ca9154e8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7fd2cab0d2f0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7fd2cab0d340 <col:9> col:9 implicit Function 0x7fd2ca9152c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7fd2cab0d390 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7fd2cab0d3e0 <col:9> col:9 implicit Function 0x7fd2ca910e08 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0d428 <col:9> col:9 implicit Function 0x7fd2caaf84c0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0d470 <col:9> col:9 implicit Function 0x7fd2caaf87b0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0d4b8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaf8e60 'nearbyint'
|   |-UsingDecl 0x7fd2cab0d508 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7fd2cab0d558 <col:9> col:9 implicit Function 0x7fd2ca910c68 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0d5a8 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7fd2cab0d5f8 <col:9> col:9 implicit Function 0x7fd2ca915b90 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab0d640 <col:9> col:9 implicit Function 0x7fd2caaf9500 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0d688 <col:9> col:9 implicit Function 0x7fd2caaf98c0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0d6d0 <col:9> col:9 implicit FunctionTemplate 0x7fd2caafa360 'nextafter'
|   |-UsingDecl 0x7fd2cab0d720 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7fd2cab0d770 <col:9> col:9 implicit Function 0x7fd2ca915968 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab0d7c0 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7fd2cab0d810 <col:9> col:9 implicit Function 0x7fd2ca916028 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7fd2cab0d858 <col:9> col:9 implicit Function 0x7fd2caafad18 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0d8a0 <col:9> col:9 implicit Function 0x7fd2caafb100 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0d8e8 <col:9> col:9 implicit FunctionTemplate 0x7fd2caafb8d0 'nexttoward'
|   |-UsingDecl 0x7fd2cab0d938 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7fd2cab0d988 <col:9> col:9 implicit Function 0x7fd2ca9072d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7fd2cab0d9d8 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7fd2cab0da28 <col:9> col:9 implicit Function 0x7fd2ca914000 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2cab0da70 <col:9> col:9 implicit Function 0x7fd2caafbfe8 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0dab8 <col:9> col:9 implicit Function 0x7fd2caafc3a8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0db00 <col:9> col:9 implicit FunctionTemplate 0x7fd2caafce50 'remainder'
|   |-UsingDecl 0x7fd2cab0db50 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7fd2cab0dba0 <col:9> col:9 implicit Function 0x7fd2ca913dd8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7fd2cab0dbf0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7fd2cab0dc40 <col:9> col:9 implicit Function 0x7fd2ca9147c8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7fd2cab0dc88 <col:9> col:9 implicit Function 0x7fd2caafd8d0 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0dcd0 <col:9> col:9 implicit Function 0x7fd2caafdde0 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0dd18 <col:9> col:9 implicit FunctionTemplate 0x7fd2caafe9e0 'remquo'
|   |-UsingDecl 0x7fd2cab0dd68 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7fd2cab0ddb8 <col:9> col:9 implicit Function 0x7fd2ca914528 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7fd2cab0de08 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7fd2cab0de58 <col:9> col:9 implicit Function 0x7fd2ca9112f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0dea0 <col:9> col:9 implicit Function 0x7fd2caaff348 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0dee8 <col:9> col:9 implicit Function 0x7fd2caaff638 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0df30 <col:9> col:9 implicit FunctionTemplate 0x7fd2caaffcf0 'rint'
|   |-UsingDecl 0x7fd2cab0df80 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7fd2cab0dfd0 <col:9> col:9 implicit Function 0x7fd2ca911148 'rintf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0e020 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7fd2cab0e070 <col:9> col:9 implicit Function 0x7fd2ca911e28 'round' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0e0b8 <col:9> col:9 implicit Function 0x7fd2cab00310 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e100 <col:9> col:9 implicit Function 0x7fd2cab00600 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e148 <col:9> col:9 implicit FunctionTemplate 0x7fd2cab00cb0 'round'
|   |-UsingDecl 0x7fd2cab0e198 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7fd2cab0e1e8 <col:9> col:9 implicit Function 0x7fd2ca911c88 'roundf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0e238 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7fd2cab0e288 <col:9> col:9 implicit Function 0x7fd2ca90ce58 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7fd2cab0e2d0 <col:9> col:9 implicit Function 0x7fd2cab01350 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e318 <col:9> col:9 implicit Function 0x7fd2cab01740 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e360 <col:9> col:9 implicit FunctionTemplate 0x7fd2cab01f70 'scalbln'
|   |-UsingDecl 0x7fd2cab0e3b0 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7fd2cab0e400 <col:9> col:9 implicit Function 0x7fd2ca90cba8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7fd2cab0e450 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7fd2cab0e4a0 <col:9> col:9 implicit Function 0x7fd2ca90c710 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7fd2cab0e4e8 <col:9> col:9 implicit Function 0x7fd2cab02688 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e530 <col:9> col:9 implicit Function 0x7fd2cab02a48 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e578 <col:9> col:9 implicit FunctionTemplate 0x7fd2cab031e0 'scalbn'
|   |-UsingDecl 0x7fd2cab0e5c8 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7fd2cab0e618 <col:9> col:9 implicit Function 0x7fd2ca90c4e8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7fd2cab0e668 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7fd2cab0e6b8 <col:9> col:9 implicit Function 0x7fd2ca90ff60 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0e700 <col:9> col:9 implicit Function 0x7fd2cab03850 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e748 <col:9> col:9 implicit Function 0x7fd2cab03b40 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e790 <col:9> col:9 implicit FunctionTemplate 0x7fd2cab041f0 'tgamma'
|   |-UsingDecl 0x7fd2cab0e7e0 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7fd2cab0e830 <col:9> col:9 implicit Function 0x7fd2ca90fdc0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0e880 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7fd2cab0e8d0 <col:9> col:9 implicit Function 0x7fd2ca9133a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7fd2cab0e918 <col:9> col:9 implicit Function 0x7fd2cab04810 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e960 <col:9> col:9 implicit Function 0x7fd2cab04b00 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2cab0e9a8 <col:9> col:9 implicit FunctionTemplate 0x7fd2cab051b0 'trunc'
|   |-UsingDecl 0x7fd2cab0e9f8 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7fd2cab0ea48 <col:9> col:9 implicit Function 0x7fd2ca913200 'truncf' 'float (float)'
|   |-UsingDecl 0x7fd2cab0ea98 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7fd2cab0eae8 <col:9> col:9 implicit Function 0x7fd2ca8ff5e8 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab0eb38 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7fd2cab0eb88 <col:9> col:9 implicit Function 0x7fd2ca8ffaf0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab10c00 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7fd2cab10c50 <col:9> col:9 implicit Function 0x7fd2ca8fffd0 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab10ca0 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7fd2cab10cf0 <col:9> col:9 implicit Function 0x7fd2ca900798 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab10d40 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7fd2cab10d90 <col:9> col:9 implicit Function 0x7fd2ca9105e8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab10de0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7fd2cab10e30 <col:9> col:9 implicit Function 0x7fd2ca901540 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab10e80 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7fd2cab10ed0 <col:9> col:9 implicit Function 0x7fd2ca9042f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab10f20 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7fd2cab10f70 <col:9> col:9 implicit Function 0x7fd2ca905200 'expl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab10fc0 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7fd2cab11010 <col:9> col:9 implicit Function 0x7fd2ca90d630 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11060 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7fd2cab110b0 <col:9> col:9 implicit Function 0x7fd2ca910ac8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11100 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7fd2cab11150 <col:9> col:9 implicit Function 0x7fd2ca913bb0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab111a0 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7fd2cab111f0 <col:9> col:9 implicit Function 0x7fd2ca90acc8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7fd2cab11240 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7fd2cab11290 <col:9> col:9 implicit Function 0x7fd2ca90a4b8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7fd2cab112e0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7fd2cab11330 <col:9> col:9 implicit Function 0x7fd2ca9060a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11380 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7fd2cab113d0 <col:9> col:9 implicit Function 0x7fd2ca9065d0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11420 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7fd2cab11470 <col:9> col:9 implicit Function 0x7fd2ca908c98 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7fd2cab114c0 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7fd2cab11510 <col:9> col:9 implicit Function 0x7fd2ca90e878 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab11560 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7fd2cab115b0 <col:9> col:9 implicit Function 0x7fd2ca901a20 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11600 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7fd2cab11650 <col:9> col:9 implicit Function 0x7fd2ca9047d0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab116a0 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7fd2cab116f0 <col:9> col:9 implicit Function 0x7fd2ca90ed60 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11740 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7fd2cab11790 <col:9> col:9 implicit Function 0x7fd2ca901f00 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab117e0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7fd2cab11830 <col:9> col:9 implicit Function 0x7fd2ca904cb0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11880 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7fd2cab118d0 <col:9> col:9 implicit Function 0x7fd2ca902c30 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11920 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7fd2cab11970 <col:9> col:9 implicit Function 0x7fd2ca903110 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab119c0 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7fd2cab11a10 <col:9> col:9 implicit Function 0x7fd2ca9035f0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11a60 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7fd2cab11ab0 <col:9> col:9 implicit Function 0x7fd2ca90db10 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11b00 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7fd2cab11b50 <col:9> col:9 implicit Function 0x7fd2ca915090 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab11ba0 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7fd2cab11bf0 <col:9> col:9 implicit Function 0x7fd2ca90f290 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11c40 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7fd2cab11c90 <col:9> col:9 implicit Function 0x7fd2ca90f770 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11ce0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7fd2cab11d30 <col:9> col:9 implicit Function 0x7fd2ca9056e0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11d80 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7fd2cab11dd0 <col:9> col:9 implicit Function 0x7fd2ca905bc0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab11e20 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7fd2cab11e70 <col:9> col:9 implicit Function 0x7fd2ca907bb8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab11ec0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7fd2cab11f10 <col:9> col:9 implicit Function 0x7fd2ca90b288 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7fd2cab11f60 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7fd2cab11fb0 <col:9> col:9 implicit Function 0x7fd2ca91a238 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab12000 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7fd2cab12050 <col:9> col:9 implicit Function 0x7fd2ca91a8b0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab120a0 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7fd2cab120f0 <col:9> col:9 implicit Function 0x7fd2ca90e200 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab12140 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7fd2cab12190 <col:9> col:9 implicit Function 0x7fd2ca90c290 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7fd2cab121e0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7fd2cab12230 <col:9> col:9 implicit Function 0x7fd2ca90fc30 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab12280 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7fd2cab122d0 <col:9> col:9 implicit Function 0x7fd2ca912ac8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7fd2cab12320 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7fd2cab12370 <col:9> col:9 implicit Function 0x7fd2ca912fe8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7fd2cab123c0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7fd2cab12410 <col:9> col:9 implicit Function 0x7fd2ca906f90 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab12460 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7fd2cab124b0 <col:9> col:9 implicit Function 0x7fd2ca906ab0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab12500 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7fd2cab12550 <col:9> col:9 implicit Function 0x7fd2ca908490 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab125a0 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7fd2cab125f0 <col:9> col:9 implicit Function 0x7fd2ca911aa8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7fd2cab12640 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7fd2cab12690 <col:9> col:9 implicit Function 0x7fd2ca9124a8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7fd2cab126e0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7fd2cab12730 <col:9> col:9 implicit Function 0x7fd2ca915708 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7fd2cab12780 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7fd2cab127d0 <col:9> col:9 implicit Function 0x7fd2ca910fa8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab12820 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7fd2cab12870 <col:9> col:9 implicit Function 0x7fd2ca915db8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab128c0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7fd2cab12910 <col:9> col:9 implicit Function 0x7fd2ca907540 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab12960 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7fd2cab129b0 <col:9> col:9 implicit Function 0x7fd2ca914238 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2cab12a00 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7fd2cab12a50 <col:9> col:9 implicit Function 0x7fd2ca914a68 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7fd2cab12aa0 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7fd2cab12af0 <col:9> col:9 implicit Function 0x7fd2ca911490 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab12b40 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7fd2cab12b90 <col:9> col:9 implicit Function 0x7fd2ca911fc8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab12be0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7fd2cab12c30 <col:9> col:9 implicit Function 0x7fd2ca90d108 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7fd2cab12c80 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7fd2cab12cd0 <col:9> col:9 implicit Function 0x7fd2ca90c938 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7fd2cab12d20 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7fd2cab12d70 <col:9> col:9 implicit Function 0x7fd2ca910100 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7fd2cab12dc0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7fd2cab12e10 <col:9> col:9 implicit Function 0x7fd2ca913540 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7fd2cab132e0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fd2cab12e58 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2cab13248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2cab13170 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2cab13568 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7fd2cab13550 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7fd2cab13520 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fd2cab134d0 <col:12> '<builtin fn type>' Function 0x7fd2cab133e0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fd2cab134f8 <col:28> '_A1' lvalue ParmVar 0x7fd2cab13170 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2cab13338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2cab13380 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fd2cab13b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fd2cab13588 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2cab13a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2cab13950 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2cab13c80 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7fd2cab13c68 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7fd2cab13c38 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fd2cab13bb0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7fd2cab06c48 0x7fd2cab06c00
|   |   |     `-DeclRefExpr 0x7fd2cab13c10 <col:18> '_A1' lvalue ParmVar 0x7fd2cab13950 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2cab13b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2cab13ba0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fd2cab14120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fd2cab13ca0 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2cab14088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2cab13fb0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2cab143a8 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7fd2cab14390 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7fd2cab14360 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fd2cab14310 <col:12> '<builtin fn type>' Function 0x7fd2cab14220 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fd2cab14338 <col:28> '_A1' lvalue ParmVar 0x7fd2cab13fb0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2cab14178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2cab141c0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fd2cab14860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fd2cab143c8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2cab147c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2cab146f0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2cab149e0 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7fd2cab149c8 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7fd2cab14998 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fd2cab14910 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7fd2cab05b60 0x7fd2cab05b18
|   |   |     `-DeclRefExpr 0x7fd2cab14970 <col:18> '_A1' lvalue ParmVar 0x7fd2cab146f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2cab148b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2cab14900 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fd2cab1cea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7fd2cab14a00 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2cab1ce08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2cab1cd30 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2cab1d128 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7fd2cab1d110 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7fd2cab1d0e0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fd2cab1d090 <col:12> '<builtin fn type>' Function 0x7fd2cab1cfa0 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fd2cab1d0b8 <col:31> '_A1' lvalue ParmVar 0x7fd2cab1cd30 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2cab1cef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2cab1cf40 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7fd2cab1d5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7fd2cab1d148 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7fd2cab1d548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7fd2cab1d470 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7fd2cab1d760 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7fd2cab1d748 <line:606:5, col:29>
|       |   `-CallExpr 0x7fd2cab1d718 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7fd2cab1d690 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7fd2cab05a78 0x7fd2cab05a30
|       |     `-DeclRefExpr 0x7fd2cab1d6f0 <col:21> '_A1' lvalue ParmVar 0x7fd2cab1d470 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7fd2cab1d638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|       `-VisibilityAttr 0x7fd2cab1d680 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7fd2cab13390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7fd2cab133e0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2cab13478 <col:12> Implicit
|   `-ConstAttr 0x7fd2cab134c0 <col:12> Implicit
|-LinkageSpecDecl 0x7fd2cab141d0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7fd2cab14220 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2cab142b8 <col:12> Implicit
|   `-ConstAttr 0x7fd2cab14300 <col:12> Implicit
|-LinkageSpecDecl 0x7fd2cab1cf50 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7fd2cab1cfa0 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2cab1d038 <col:12> Implicit
|   `-ConstAttr 0x7fd2cab1d080 <col:12> Implicit
|-CXXRecordDecl 0x7fd2cab1d780 <object_model_refined/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7fd2cab1d8a8 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7fd2cab1d958 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7fd2cab1ef68 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fd2cab1f048 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7fd2cab1f048
| |-CXXConstructorDecl 0x7fd2cab1f308 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7fd2cab1f308
| | `-ParmVarDecl 0x7fd2cab1f430 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7fd2cab1f4c8 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7fd2cab1f4c8
|   `-ParmVarDecl 0x7fd2cab1f5f0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7fd2cab1d9c0 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7fd2cab1dae8 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7fd2cab1db98 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7fd2cab1f148 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fd2cab1f228 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7fd2cab1f228
| |-CXXConstructorDecl 0x7fd2cab1f658 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7fd2cab1f658
| | `-ParmVarDecl 0x7fd2cab1f780 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7fd2cab1f818 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7fd2cab1f818
|   `-ParmVarDecl 0x7fd2cab1f940 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7fd2cab1dc00 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7fd2cab1dda8 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7fd2cab1de58 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7fd2cab1ee68 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fd2cab1f9a8 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7fd2cab1f9a8
| | `-ParmVarDecl 0x7fd2cab1fad0 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7fd2cab1fb68 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7fd2cab1fb68
|   `-ParmVarDecl 0x7fd2cab1fc90 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7fd2cab1dfc8 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7fd2cab1def8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7fd2cab1e198 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7fd2cab1e180 <line:17:5, col:20>
|     `-BinaryOperator 0x7fd2cab1e158 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fd2cab1e128 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fd2cab1e090 <col:12, col:14> 'const double' lvalue .x 0x7fd2cab1d958
|       |   `-DeclRefExpr 0x7fd2cab1e068 <col:12> 'const struct P1' lvalue ParmVar 0x7fd2cab1def8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7fd2cab1e140 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fd2cab1e0f0 <col:18, col:20> 'const double' lvalue .x 0x7fd2cab1d958
|           `-DeclRefExpr 0x7fd2cab1e0c8 <col:18> 'const struct P1' lvalue ParmVar 0x7fd2cab1def8 'p' 'const struct P1 &'
|-FunctionDecl 0x7fd2cab1e2c8 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7fd2cab1e1f8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7fd2cab1e498 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7fd2cab1e480 <line:22:5, col:20>
|     `-BinaryOperator 0x7fd2cab1e458 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fd2cab1e428 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fd2cab1e390 <col:12, col:14> 'const double' lvalue .y 0x7fd2cab1db98
|       |   `-DeclRefExpr 0x7fd2cab1e368 <col:12> 'const struct P2' lvalue ParmVar 0x7fd2cab1e1f8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7fd2cab1e440 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fd2cab1e3f0 <col:18, col:20> 'const double' lvalue .y 0x7fd2cab1db98
|           `-DeclRefExpr 0x7fd2cab1e3c8 <col:18> 'const struct P2' lvalue ParmVar 0x7fd2cab1e1f8 'p' 'const struct P2 &'
|-FunctionDecl 0x7fd2cab1e5c8 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7fd2cab1e4f8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7fd2cab1ec88 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7fd2cab1ec70 <line:27:5, col:41>
|     `-CallExpr 0x7fd2cab1ec40 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7fd2cab1ec28 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7fd2cab1ebe8 <col:12, col:17> 'double (double)' lvalue Function 0x7fd2ca90ebc0 'sqrt' 'double (double)' (UsingShadow 0x7fd2cab09c20 'sqrt')
|       `-BinaryOperator 0x7fd2cab1e990 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7fd2cab1e800 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7fd2cab1e7e8 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7fd2cab1e790 <col:22> 'double (const struct P1 &)' lvalue Function 0x7fd2cab1dfc8 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7fd2cab1e830 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7fd2cab1e768 <col:28> 'const struct P3' lvalue ParmVar 0x7fd2cab1e4f8 'p' 'const struct P3 &'
|         `-CallExpr 0x7fd2cab1e940 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7fd2cab1e928 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fd2cab1e8d0 <col:33> 'double (const struct P2 &)' lvalue Function 0x7fd2cab1e2c8 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7fd2cab1e970 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7fd2cab1e8a8 <col:39> 'const struct P3' lvalue ParmVar 0x7fd2cab1e4f8 'p' 'const struct P3 &'
`-FunctionDecl 0x7fd2cab1ecd0 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7fd2cab20320 <line:31:1, line:37:1>
    |-DeclStmt 0x7fd2cab1ff38 <line:32:5, col:12>
    | `-VarDecl 0x7fd2cab1eda8 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7fd2cab1fcf8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7fd2cab20078 <line:33:5, col:17>
    | `-VarDecl 0x7fd2cab1ff88 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7fd2cab20058 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7fd2cab20038 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7fd2cab1ffe8 <col:15> 'struct P3' lvalue Var 0x7fd2cab1eda8 'p3' 'struct P3'
    |-DeclStmt 0x7fd2cab202d0 <line:35:5, col:23>
    | `-VarDecl 0x7fd2cab200a0 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7fd2cab201f0 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7fd2cab201d8 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fd2cab20180 <col:14> 'double (const struct P3 &)' lvalue Function 0x7fd2cab1e5c8 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7fd2cab20220 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7fd2cab20158 <col:20> 'struct P3' lvalue Var 0x7fd2cab1eda8 'p3' 'struct P3'
    `-ReturnStmt 0x7fd2cab20308 <line:36:5, col:12>
      `-IntegerLiteral 0x7fd2cab202e8 <col:12> 'int' 0
