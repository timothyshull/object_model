TranslationUnitDecl 0x7fdcd5819cd0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fdcd581a260 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fdcd5819f40 '__int128'
|-TypedefDecl 0x7fdcd581a2d0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fdcd5819f60 'unsigned __int128'
|-TypedefDecl 0x7fdcd581a618 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fdcd581a3c0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fdcd581a328 '__NSConstantString_tag'
|-TypedefDecl 0x7fdcd581a6b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fdcd581a670 'char *'
|   `-BuiltinType 0x7fdcd5819d60 'char'
|-TypedefDecl 0x7fdcd584d200 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fdcd581a990 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fdcd581a7a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fdcd581a708 '__va_list_tag'
|-NamespaceDecl 0x7fdcd584d258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7fdcd584d2c0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7fdcd584d3d8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7fdcd584d440 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7fdcd5819ec0 'float'
| |-TypedefDecl 0x7fdcd584d4b0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7fdcd5819ee0 'double'
| |-FunctionDecl 0x7fdcd584d5d8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7fdcd584d798 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7fdcd584d6c8 <col:26> col:31 'float'
| |-FunctionDecl 0x7fdcd584d918 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7fdcd584d850 <col:26> col:32 'double'
| |-FunctionDecl 0x7fdcd584da98 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7fdcd584d9d0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7fdcd584dbe0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd584db50 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fdcd584dc80 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd584dd70 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd584dce0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fdcd584de10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd584df00 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd584de70 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fdcd584dfa0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd584e090 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd584e000 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fdcd584e130 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4091c30 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd584e190 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fdcd4091cd0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4091dc0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd4091d30 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fdcd4091e60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4091f50 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd4091ec0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fdcd4091ff0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd40920e0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd4092050 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fdcd4092180 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4092270 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd40921e0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fdcd4092310 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4092400 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd4092370 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fdcd40924a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4092590 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd4092500 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fdcd4092630 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4092720 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd4092690 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fdcd40927c0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd40928b0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd4092820 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7fdcd4092950 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4092a40 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd40929b0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7fdcd4092ae0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4092c00 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd4092b40 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7fdcd4092ca0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4092d90 prev 0x7fdcd584dbe0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd4092d00 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fdcd4093538 <col:58, line:206:1>
| | | `-ReturnStmt 0x7fdcd4093520 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7fdcd4093508 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd40934e0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fdcd4092ef8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fdcd4092ec8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fdcd4092e78 <col:12> 'float' lvalue ParmVar 0x7fdcd4092d00 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7fdcd4092ee0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fdcd4092ea0 <col:19> 'float' lvalue ParmVar 0x7fdcd4092d00 '__x' 'float'
| | |       `-BinaryOperator 0x7fdcd40934b8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fdcd4093200 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7fdcd40931e8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fdcd4093140 <col:26> '<builtin fn type>' Function 0x7fdcd4092fe8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fdcd4093230 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fdcd4093168 <col:42> 'float' lvalue ParmVar 0x7fdcd4092d00 '__x' 'float'
| | |         `-CallExpr 0x7fdcd4093490 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7fdcd4093478 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fdcd40933f0 <col:50> '<builtin fn type>' Function 0x7fdcd4093300 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fdcd4092e30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd4093600 prev 0x7fdcd584dd70 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd4093570 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fdcd6000638 <col:59, line:209:1>
| | | `-ReturnStmt 0x7fdcd6000620 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7fdcd6000608 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd60005e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fdcd4093768 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fdcd4093738 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fdcd40936e8 <col:12> 'double' lvalue ParmVar 0x7fdcd4093570 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7fdcd4093750 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fdcd4093710 <col:19> 'double' lvalue ParmVar 0x7fdcd4093570 '__x' 'double'
| | |       `-BinaryOperator 0x7fdcd60005b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7fdcd4093a70 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7fdcd4093a58 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fdcd40939b0 <col:26> '<builtin fn type>' Function 0x7fdcd4093858 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fdcd4093aa0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fdcd40939d8 <col:41> 'double' lvalue ParmVar 0x7fdcd4093570 '__x' 'double'
| | |         `-CallExpr 0x7fdcd6000590 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7fdcd6000578 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fdcd60004f0 <col:49> '<builtin fn type>' Function 0x7fdcd6000400 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fdcd40936a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6000700 prev 0x7fdcd584df00 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd6000670 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fdcd6000ea8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7fdcd6000e90 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7fdcd6000e78 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd6000e50 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fdcd6000868 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fdcd6000838 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fdcd60007e8 <col:12> 'long double' lvalue ParmVar 0x7fdcd6000670 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7fdcd6000850 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fdcd6000810 <col:19> 'long double' lvalue ParmVar 0x7fdcd6000670 '__x' 'long double'
| | |       `-BinaryOperator 0x7fdcd6000e28 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fdcd6000b70 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7fdcd6000b58 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fdcd6000ab0 <col:26> '<builtin fn type>' Function 0x7fdcd6000958 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fdcd6000ba0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fdcd6000ad8 <col:42> 'long double' lvalue ParmVar 0x7fdcd6000670 '__x' 'long double'
| | |         `-CallExpr 0x7fdcd6000e00 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7fdcd6000de8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fdcd6000d60 <col:50> '<builtin fn type>' Function 0x7fdcd6000c70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fdcd60007a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6000f70 prev 0x7fdcd584e090 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd6000ee0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fdcd60011c8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7fdcd60011b0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7fdcd6001198 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd6001170 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fdcd60010c0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7fdcd60010a8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fdcd6001058 <col:12> '<builtin fn type>' Function 0x7fdcd4092fe8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7fdcd60010f0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fdcd6001080 <col:28> 'float' lvalue ParmVar 0x7fdcd6000ee0 '__x' 'float'
| | |       `-CallExpr 0x7fdcd6001148 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7fdcd6001130 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fdcd6001108 <col:36> '<builtin fn type>' Function 0x7fdcd4093300 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fdcd6001010 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6001290 prev 0x7fdcd4091c30 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd6001200 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fdcd60018e8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7fdcd60018d0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7fdcd60018b8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd6001890 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7fdcd60013e0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7fdcd60013c8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fdcd6001378 <col:12> '<builtin fn type>' Function 0x7fdcd4093858 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fdcd6001810 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fdcd60013a0 <col:27> 'double' lvalue ParmVar 0x7fdcd6001200 '__x' 'double'
| | |       `-CallExpr 0x7fdcd6001868 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7fdcd6001850 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fdcd6001828 <col:35> '<builtin fn type>' Function 0x7fdcd6000400 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fdcd6001330 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd60019b0 prev 0x7fdcd4091dc0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd6001920 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fdcd6001c08 <col:61, line:221:1>
| | | `-ReturnStmt 0x7fdcd6001bf0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7fdcd6001bd8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd6001bb0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fdcd6001b00 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7fdcd6001ae8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fdcd6001a98 <col:12> '<builtin fn type>' Function 0x7fdcd6000958 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fdcd6001b30 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fdcd6001ac0 <col:28> 'long double' lvalue ParmVar 0x7fdcd6001920 '__x' 'long double'
| | |       `-CallExpr 0x7fdcd6001b88 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7fdcd6001b70 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fdcd6001b48 <col:36> '<builtin fn type>' Function 0x7fdcd6000c70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fdcd6001a50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6001cd0 prev 0x7fdcd4091f50 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd6001c40 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fdcd6001e90 <col:55, line:224:1>
| | | `-ReturnStmt 0x7fdcd6001e78 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7fdcd6001e60 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd6001e38 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fdcd6001e08 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fdcd6001db8 <col:12> 'float' lvalue ParmVar 0x7fdcd6001c40 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7fdcd6001e20 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fdcd6001de0 <col:19> 'float' lvalue ParmVar 0x7fdcd6001c40 '__x' 'float'
| | `-AlwaysInlineAttr 0x7fdcd6001d70 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6001f58 prev 0x7fdcd40920e0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd6001ec8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fdcd6002118 <col:56, line:227:1>
| | | `-ReturnStmt 0x7fdcd6002100 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7fdcd60020e8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd60020c0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fdcd6002090 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fdcd6002040 <col:12> 'double' lvalue ParmVar 0x7fdcd6001ec8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7fdcd60020a8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fdcd6002068 <col:19> 'double' lvalue ParmVar 0x7fdcd6001ec8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7fdcd6001ff8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd60021e0 prev 0x7fdcd4092270 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd6002150 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fdcd60023a0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7fdcd6002388 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7fdcd6002370 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd6002348 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fdcd6002318 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fdcd60022c8 <col:12> 'long double' lvalue ParmVar 0x7fdcd6002150 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7fdcd6002330 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fdcd60022f0 <col:19> 'long double' lvalue ParmVar 0x7fdcd6002150 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7fdcd6002280 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6002468 prev 0x7fdcd40928b0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd60023d8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7fdcd68008d8 <col:57, line:235:1>
| | | |-DeclStmt 0x7fdcd68005b0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7fdcd6002550 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7fdcd6002690 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7fdcd60026f0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7fdcd6800080 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fdcd6800550 <col:5>
| | | | | |-CXXConstructorDecl 0x7fdcd68001c8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7fdcd68001c8
| | | | | | `-ParmVarDecl 0x7fdcd68002f0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7fdcd6800388 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7fdcd6800388
| | | | |   `-ParmVarDecl 0x7fdcd68004b0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7fdcd6800000 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7fdcd6800568 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fdcd6800668 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7fdcd68005f0 <col:5, col:9> 'float' lvalue .__f 0x7fdcd6002690
| | | | | `-DeclRefExpr 0x7fdcd68005c8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fdcd6800000 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7fdcd6800650 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fdcd6800628 <col:15> 'float' lvalue ParmVar 0x7fdcd60023d8 '__x' 'float'
| | | `-ReturnStmt 0x7fdcd68008c0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7fdcd6800898 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fdcd6800880 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fdcd6800860 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7fdcd68007f0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7fdcd68007d8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7fdcd6800780 <col:18, col:22> 'unsigned int' lvalue .__u 0x7fdcd60026f0
| | |           |   `-DeclRefExpr 0x7fdcd6800758 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fdcd6800000 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7fdcd68007b8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7fdcd6002508 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd68009b0 prev 0x7fdcd4092a40 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd6800920 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7fdcd6803fb0 <col:58, line:240:1>
| | | |-DeclStmt 0x7fdcd6803c88 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7fdcd6800a98 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7fdcd6800bd0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7fdcd6800c30 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7fdcd6800d70 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fdcd6803c28 <col:5>
| | | | | |-CXXConstructorDecl 0x7fdcd6800e88 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7fdcd6800e88
| | | | | | `-ParmVarDecl 0x7fdcd6803a00 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7fdcd6803a98 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7fdcd6803a98
| | | | |   `-ParmVarDecl 0x7fdcd6803bc0 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7fdcd6800cf0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7fdcd6803c40 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fdcd6803d40 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7fdcd6803cc8 <col:5, col:9> 'double' lvalue .__f 0x7fdcd6800bd0
| | | | | `-DeclRefExpr 0x7fdcd6803ca0 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fdcd6800cf0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7fdcd6803d28 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fdcd6803d00 <col:15> 'double' lvalue ParmVar 0x7fdcd6800920 '__x' 'double'
| | | `-ReturnStmt 0x7fdcd6803f98 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7fdcd6803f70 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fdcd6803f58 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fdcd6803f38 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7fdcd6803ec8 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7fdcd6803eb0 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7fdcd6803e58 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7fdcd6800c30
| | |           |   `-DeclRefExpr 0x7fdcd6803e30 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fdcd6800cf0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7fdcd6803e90 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7fdcd6800a50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6804088 prev 0x7fdcd4092c00 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd6803ff8 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7fdcd6806560 <col:63, line:249:1>
| | | |-DeclStmt 0x7fdcd6806138 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7fdcd6804170 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7fdcd68042b0 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7fdcd68042f8 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7fdcd6804430 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7fdcd6804490 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7fdcd68047a8 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7fdcd6804888 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fdcd6804888
| | | | | | |-CXXConstructorDecl 0x7fdcd6805bc8 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7fdcd6805bc8
| | | | | | | `-ParmVarDecl 0x7fdcd6805cf0 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7fdcd6805d88 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7fdcd6805d88
| | | | | |   `-ParmVarDecl 0x7fdcd6805eb0 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7fdcd6804550 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7fdcd68046a0 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fdcd68060d8 <col:5>
| | | | | |-CXXConstructorDecl 0x7fdcd6805a00 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7fdcd6805a00
| | | | | | `-ParmVarDecl 0x7fdcd6805b30 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7fdcd6805f48 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7fdcd6805f48
| | | | |   `-ParmVarDecl 0x7fdcd6806070 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7fdcd6804620 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7fdcd68060f0 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fdcd68061f0 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7fdcd6806178 <col:5, col:9> 'long double' lvalue .__ld 0x7fdcd68042b0
| | | | | `-DeclRefExpr 0x7fdcd6806150 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fdcd6804620 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7fdcd68061d8 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fdcd68061b0 <col:16> 'long double' lvalue ParmVar 0x7fdcd6803ff8 '__x' 'long double'
| | | `-ReturnStmt 0x7fdcd6806548 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7fdcd6806520 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7fdcd6806500 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7fdcd6806490 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7fdcd6806478 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7fdcd6806460 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7fdcd6806408 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7fdcd6804490
| | |         |     `-MemberExpr 0x7fdcd68063d0 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7fdcd6804550
| | |         |       `-DeclRefExpr 0x7fdcd68063a8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fdcd6804620 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7fdcd6806440 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7fdcd6804128 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6806638 prev 0x7fdcd4092400 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fdcd68065a8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fdcd68069c0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7fdcd68069a8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7fdcd6806990 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd6806968 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fdcd6806950 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fdcd6806810 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fdcd68067f8 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fdcd68067a0 <col:12> 'int (float)' lvalue Function 0x7fdcd4092d90 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7fdcd6806840 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fdcd6806778 <col:31> 'float' lvalue ParmVar 0x7fdcd68065a8 '__x' 'float'
| | |       `-BinaryOperator 0x7fdcd6806928 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7fdcd68068c0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7fdcd68068a8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fdcd6806858 <col:39> '<builtin fn type>' Function 0x7fdcd4092fe8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fdcd68068f0 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fdcd6806880 <col:55> 'float' lvalue ParmVar 0x7fdcd68065a8 '__x' 'float'
| | |         `-FloatingLiteral 0x7fdcd6806908 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7fdcd68066d8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6806e90 prev 0x7fdcd4092590 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fdcd6806e00 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fdcd6807210 <col:59, line:262:1>
| | | `-ReturnStmt 0x7fdcd68071f8 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7fdcd68071e0 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd68071b8 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fdcd68071a0 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fdcd6807060 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fdcd6807048 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fdcd6806ff8 <col:12> 'int (double)' lvalue Function 0x7fdcd4093600 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7fdcd6807090 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fdcd6806fd0 <col:31> 'double' lvalue ParmVar 0x7fdcd6806e00 '__x' 'double'
| | |       `-BinaryOperator 0x7fdcd6807178 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7fdcd6807110 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7fdcd68070f8 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fdcd68070a8 <col:39> '<builtin fn type>' Function 0x7fdcd4093858 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fdcd6807140 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fdcd68070d0 <col:54> 'double' lvalue ParmVar 0x7fdcd6806e00 '__x' 'double'
| | |         `-FloatingLiteral 0x7fdcd6807158 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7fdcd6806f30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd68072d8 prev 0x7fdcd4092720 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fdcd6807248 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fdcd6807670 <col:64, line:265:1>
| | | `-ReturnStmt 0x7fdcd6807658 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7fdcd6807640 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fdcd6807618 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fdcd6807600 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fdcd68074b0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fdcd6807498 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fdcd6807440 <col:12> 'int (long double)' lvalue Function 0x7fdcd6000700 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7fdcd68074e0 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fdcd6807418 <col:31> 'long double' lvalue ParmVar 0x7fdcd6807248 '__x' 'long double'
| | |       `-BinaryOperator 0x7fdcd68075d8 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7fdcd6807560 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7fdcd6807548 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fdcd68074f8 <col:39> '<builtin fn type>' Function 0x7fdcd6000958 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fdcd6807590 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fdcd6807520 <col:55> 'long double' lvalue ParmVar 0x7fdcd6807248 '__x' 'long double'
| | |         `-FloatingLiteral 0x7fdcd68075a8 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7fdcd6807378 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6807738 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd68076a8 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd68077d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6807820 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68078d8 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6807848 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd6807978 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd68079c0 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6807a78 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd68079e8 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd6807b18 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6807b60 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6807c18 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6807b88 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd6807cb8 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6807d00 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6807e00 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6807d28 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd6807ea0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6807ee8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6807fa0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6807f10 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd6808040 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6808088 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6808140 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd68080b0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd68081e0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6808228 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68082e0 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6808250 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd6808380 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd68083c8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6808480 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd68083f0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd6808520 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6808568 <col:20> Implicit
| |-FunctionDecl 0x7fdcd68086e8 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd6808590 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fdcd6808608 <col:28> col:33 'float'
| | |-ConstAttr 0x7fdcd68087d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6808818 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6808998 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd6808840 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fdcd68088b8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fdcd6808a80 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6808ac8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6808c48 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd6808af0 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fdcd6808b68 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fdcd6808d30 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6808d78 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6809630 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6808da0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fdcd68096d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6809718 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68097d0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6809740 <col:19> col:25 'double'
| | |-ConstAttr 0x7fdcd6809870 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd68098b8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6809970 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd68098e0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fdcd6809a10 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6809a58 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6809b10 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6809a80 <col:19> col:24 'float'
| | |-ConstAttr 0x7fdcd6809bb0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6809bf8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6809cb0 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6809c20 <col:19> col:25 'double'
| | |-ConstAttr 0x7fdcd6809d50 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6809d98 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6809e50 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6809dc0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fdcd6809ef0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6809f38 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6809ff0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6809f60 <col:19> col:24 'float'
| | |-ConstAttr 0x7fdcd680a090 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680a0d8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680a190 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680a100 <col:19> col:25 'double'
| | |-ConstAttr 0x7fdcd680a230 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680a278 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680a330 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680a2a0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fdcd680a3d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680a418 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680a4d0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680a440 <col:21> col:26 'float'
| | |-ConstAttr 0x7fdcd680a570 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680a5b8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680ae90 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680ae00 <col:21> col:27 'double'
| | |-ConstAttr 0x7fdcd680af30 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680af78 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680b030 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680afa0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fdcd680b0d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680b118 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680b1d0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680b140 <col:21> col:26 'float'
| | |-ConstAttr 0x7fdcd680b270 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680b2b8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680b370 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680b2e0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fdcd680b410 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680b458 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680b510 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680b480 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fdcd680b5b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680b5f8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680b6b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680b620 <col:21> col:26 'float'
| | |-ConstAttr 0x7fdcd680b750 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680b798 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680b850 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680b7c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fdcd680b8f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680b938 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680b9f0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680b960 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fdcd680ba90 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680bad8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680bb90 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680bb00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd680bc30 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680bc78 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680bd30 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680bca0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd680bdd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680c638 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680c6f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680c660 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd680c790 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680c7d8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680c890 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680c800 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd680c930 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680c978 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680ca30 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680c9a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd680cad0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680cb18 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680cbd0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680cb40 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd680cc70 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680ccb8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680cd70 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680cce0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd680ce10 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680ce58 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680cf10 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680ce80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd680cfb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680cff8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680d0b0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680d020 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd680d150 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680d198 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680d250 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680d1c0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fdcd680d2f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680d338 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680d3f0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680d360 <col:19> col:25 'double'
| | |-ConstAttr 0x7fdcd680d490 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680d4d8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680d600 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680d500 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fdcd680d6a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680d6e8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680d7a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680d710 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd680d840 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680d888 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680d940 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680d8b0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd680d9e0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680da28 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680dae0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680da50 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd680db80 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680dbc8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680dc80 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680dbf0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fdcd680dd20 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680dd68 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680de20 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680dd90 <col:21> col:27 'double'
| | |-ConstAttr 0x7fdcd680dec0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680df08 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680dfc0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680df30 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fdcd680e060 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680e0a8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680e160 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680e0d0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fdcd680e200 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680e248 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680e300 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680e270 <col:19> col:25 'double'
| | |-ConstAttr 0x7fdcd680e3a0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680e3e8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680e4a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680e410 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fdcd680e540 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680e588 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680e690 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680e600 <col:21> col:26 'float'
| | |-ConstAttr 0x7fdcd680e730 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680e778 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680e830 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680e7a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fdcd680e8d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680e918 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680e9d0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680e940 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fdcd680ea70 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680eab8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680eb70 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680eae0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd680ec10 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680ec58 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680ed10 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680ec80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd680edb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680edf8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680eeb0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680ee20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd680ef50 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680ef98 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680f050 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680efc0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fdcd680f0f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680f138 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680f1f0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd680f160 <col:21> col:27 'double'
| | |-ConstAttr 0x7fdcd680f290 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680f2d8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680f390 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd680f300 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fdcd680f430 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680f478 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680f530 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd680f4a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd680f5d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6810638 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68106f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6810660 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd6810790 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd68107d8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6810890 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6810800 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd6810930 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6810978 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6810b18 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7fdcd68109a0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fdcd6810a40 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7fdcd6810c00 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6810dd8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7fdcd6810c60 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fdcd6810d00 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7fdcd6810ec0 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6811098 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7fdcd6810f20 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fdcd6810fc0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7fdcd6811180 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6811338 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fdcd68111e0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fdcd6811258 <col:28> col:31 'int'
| | |-ConstAttr 0x7fdcd6811420 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6811468 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6812600 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7fdcd6811490 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fdcd6811508 <col:29> col:32 'int'
| | |-ConstAttr 0x7fdcd68126f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6812738 <col:15> Implicit
| |-FunctionDecl 0x7fdcd68128b8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fdcd6812760 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fdcd68127d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7fdcd68129a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd68129e8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6812b88 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7fdcd6812a10 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fdcd6812ab0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7fdcd6812c70 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6812e28 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7fdcd6812cd0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fdcd6812d48 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7fdcd6812f10 <col:15> Implicit
| |-FunctionDecl 0x7fdcd68130c8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7fdcd6812f70 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fdcd6812fe8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7fdcd68131b0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd68132a0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7fdcd6813210 <col:19> col:24 'float'
| | |-ConstAttr 0x7fdcd6813378 <col:12> Implicit
| | `-NoThrowAttr 0x7fdcd68133c0 <col:12> Implicit
| |-FunctionDecl 0x7fdcd6813478 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7fdcd68133e8 <col:18> col:24 'double'
| | |-ConstAttr 0x7fdcd6813558 <col:12> Implicit
| | `-NoThrowAttr 0x7fdcd68135a0 <col:12> Implicit
| |-FunctionDecl 0x7fdcd6814690 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7fdcd6814600 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7fdcd6814768 <col:12> Implicit
| | `-NoThrowAttr 0x7fdcd68147b0 <col:12> Implicit
| |-FunctionDecl 0x7fdcd68148e8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fdcd68147d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fdcd6814850 <col:29> col:32 'int'
| | |-ConstAttr 0x7fdcd6814990 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd68149d8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6814b10 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7fdcd6814a00 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fdcd6814a78 <col:30> col:33 'int'
| | |-ConstAttr 0x7fdcd6814bb8 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6814c00 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6814d38 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fdcd6814c28 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fdcd6814ca0 <col:41> col:44 'int'
| | |-ConstAttr 0x7fdcd6814de0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6814e28 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6814fa8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7fdcd6814e50 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7fdcd6814ec8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7fdcd6815090 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd68150d8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6815258 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7fdcd6815100 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7fdcd6815178 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7fdcd6815340 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6815388 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6815508 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7fdcd68153b0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7fdcd6815428 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7fdcd68155f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6815638 <col:20> Implicit
| |-FunctionDecl 0x7fdcd68156f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6815660 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fdcd6815790 <col:14> Implicit
| | `-ConstAttr 0x7fdcd68157d8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6815890 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6815800 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fdcd6815930 <col:15> Implicit
| | `-ConstAttr 0x7fdcd6815978 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6815a30 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd68159a0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fdcd6815ad0 <col:20> Implicit
| | `-ConstAttr 0x7fdcd6815b18 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6815bd0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6815b40 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd6815c70 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6815cb8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6815d70 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6815ce0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd6815e10 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6815e58 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6815f10 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6815e80 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd6815fb0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6815ff8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6816130 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd6816020 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fdcd6816098 <col:28> col:33 'float'
| | |-ConstAttr 0x7fdcd68161d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6816220 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6816358 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd6816248 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fdcd68162c0 <col:29> col:35 'double'
| | |-ConstAttr 0x7fdcd6816400 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6816448 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6816600 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd6816470 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fdcd68164e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fdcd68166a8 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd68166f0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6816828 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd6816718 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fdcd6816790 <col:26> col:31 'float'
| | |-ConstAttr 0x7fdcd68168d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6816918 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6816a50 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd6816940 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fdcd68169b8 <col:27> col:33 'double'
| | |-ConstAttr 0x7fdcd6816af8 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6816b40 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6816c78 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd6816b68 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fdcd6816be0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7fdcd6816d20 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6816d68 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6816e20 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6816d90 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd6816ec0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6816f08 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6816fc0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6816f30 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd6817060 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd68170a8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6817160 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd68170d0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd6817200 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6817248 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6817300 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6817270 <col:19> col:24 'float'
| | |-ConstAttr 0x7fdcd68173a0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd68173e8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68174a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6817410 <col:19> col:25 'double'
| | |-ConstAttr 0x7fdcd6817540 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6817588 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6817690 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6817600 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fdcd6817730 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6817778 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6817830 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd68177a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fdcd68178d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd6817918 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68179d0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6817940 <col:20> col:26 'double'
| | |-ConstAttr 0x7fdcd6817a70 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6817ab8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6817b70 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6817ae0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fdcd6817c10 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd6817c58 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6817d10 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6817c80 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7fdcd6817db0 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6817ea0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6817e10 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7fdcd6817f40 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6818030 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6817fa0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7fdcd68180d0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd68181c0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6818130 <col:22> col:27 'float'
| | |-ConstAttr 0x7fdcd6818260 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd68182a8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6818360 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd68182d0 <col:22> col:28 'double'
| | |-ConstAttr 0x7fdcd6818400 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6818448 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6818500 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6818470 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7fdcd68185a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd68185e8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd68186a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6818618 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fdcd6818748 <col:14> Implicit
| | `-ConstAttr 0x7fdcd6818790 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6818848 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd68187b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fdcd68188e8 <col:15> Implicit
| | `-ConstAttr 0x7fdcd6818930 <col:15> Implicit
| |-FunctionDecl 0x7fdcd68189e8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6818958 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fdcd6818a88 <col:20> Implicit
| | `-ConstAttr 0x7fdcd6818ad0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6818b88 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6818af8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fdcd6818c28 <col:14> Implicit
| | `-ConstAttr 0x7fdcd6818c70 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6818d28 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6818c98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fdcd6818dc8 <col:15> Implicit
| | `-ConstAttr 0x7fdcd6818e10 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6818ec8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6818e38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fdcd6818f68 <col:20> Implicit
| | `-ConstAttr 0x7fdcd6818fb0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6819068 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6818fd8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7fdcd6819108 <col:14> Implicit
| | `-ConstAttr 0x7fdcd6819150 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6819208 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6819178 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7fdcd68192a8 <col:15> Implicit
| | `-ConstAttr 0x7fdcd68192f0 <col:15> Implicit
| |-FunctionDecl 0x7fdcd68193a8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6819318 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7fdcd6819448 <col:20> Implicit
| | `-ConstAttr 0x7fdcd6819490 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6819548 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd68194b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fdcd68195e8 <col:14> Implicit
| | `-ConstAttr 0x7fdcd6819638 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68196f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6819660 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fdcd6819790 <col:15> Implicit
| | `-ConstAttr 0x7fdcd68197d8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6819890 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd6819800 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fdcd6819930 <col:20> Implicit
| | `-ConstAttr 0x7fdcd6819978 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6819a68 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7fdcd68199a0 <col:24> col:29 'float'
| | |-ConstAttr 0x7fdcd6819b48 <col:17> Implicit
| | `-NoThrowAttr 0x7fdcd6819b90 <col:17> Implicit
| |-FunctionDecl 0x7fdcd6819c88 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7fdcd6819bb8 <col:23> col:29 'double'
| | |-ConstAttr 0x7fdcd6819d68 <col:17> Implicit
| | `-NoThrowAttr 0x7fdcd6819db0 <col:17> Implicit
| |-FunctionDecl 0x7fdcd6819ea8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7fdcd6819dd8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7fdcd6819f88 <col:17> Implicit
| | `-NoThrowAttr 0x7fdcd6819fd0 <col:17> Implicit
| |-FunctionDecl 0x7fdcd681a088 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6819ff8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fdcd681a128 <col:14> Implicit
| | `-ConstAttr 0x7fdcd681a170 <col:14> Implicit
| |-FunctionDecl 0x7fdcd681a228 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd681a198 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fdcd681a2c8 <col:15> Implicit
| | `-ConstAttr 0x7fdcd681a310 <col:15> Implicit
| |-FunctionDecl 0x7fdcd681a3c8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd681a338 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fdcd681a468 <col:20> Implicit
| | `-ConstAttr 0x7fdcd681a4b0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd681a568 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7fdcd681a4d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7fdcd681a608 <col:17> Implicit
| | `-NoThrowAttr 0x7fdcd681a650 <col:17> Implicit
| |-FunctionDecl 0x7fdcd681a708 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7fdcd681a678 <col:24> col:30 'double'
| | |-ConstAttr 0x7fdcd681a7a8 <col:17> Implicit
| | `-NoThrowAttr 0x7fdcd681a7f0 <col:17> Implicit
| |-FunctionDecl 0x7fdcd681a8a8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7fdcd681a818 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fdcd681a948 <col:17> Implicit
| | `-NoThrowAttr 0x7fdcd681a990 <col:17> Implicit
| |-FunctionDecl 0x7fdcd681aa88 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7fdcd681a9b8 <col:30> col:35 'float'
| | |-ConstAttr 0x7fdcd681ab68 <col:22> Implicit
| | `-NoThrowAttr 0x7fdcd681abb0 <col:22> Implicit
| |-FunctionDecl 0x7fdcd681aca8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7fdcd681abd8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fdcd681ad88 <col:22> Implicit
| | `-NoThrowAttr 0x7fdcd681add0 <col:22> Implicit
| |-FunctionDecl 0x7fdcd681aec8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fdcd681adf8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7fdcd681afa8 <col:22> Implicit
| | `-NoThrowAttr 0x7fdcd681aff0 <col:22> Implicit
| |-FunctionDecl 0x7fdcd681b0a8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7fdcd681b018 <col:31> col:36 'float'
| | |-ConstAttr 0x7fdcd681b148 <col:22> Implicit
| | `-NoThrowAttr 0x7fdcd681b190 <col:22> Implicit
| |-FunctionDecl 0x7fdcd681b248 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7fdcd681b1b8 <col:30> col:36 'double'
| | |-ConstAttr 0x7fdcd681b2e8 <col:22> Implicit
| | `-NoThrowAttr 0x7fdcd681b330 <col:22> Implicit
| |-FunctionDecl 0x7fdcd681b3e8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fdcd681b358 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7fdcd681b488 <col:22> Implicit
| | `-NoThrowAttr 0x7fdcd681b4d0 <col:22> Implicit
| |-FunctionDecl 0x7fdcd681b600 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd681b4f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fdcd681b6a0 <col:14> Implicit
| | `-ConstAttr 0x7fdcd681b6e8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd681b7a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd681b710 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fdcd681b840 <col:15> Implicit
| | `-ConstAttr 0x7fdcd681b888 <col:15> Implicit
| |-FunctionDecl 0x7fdcd681b940 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fdcd681b8b0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fdcd681b9e0 <col:20> Implicit
| | `-ConstAttr 0x7fdcd681ba28 <col:20> Implicit
| |-FunctionDecl 0x7fdcd681bb60 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd681ba50 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fdcd681bac8 <col:27> col:32 'float'
| | |-ConstAttr 0x7fdcd681bc08 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd681bc50 <col:14> Implicit
| |-FunctionDecl 0x7fdcd681bd88 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd681bc78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fdcd681bcf0 <col:28> col:34 'double'
| | |-ConstAttr 0x7fdcd681be30 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd681be78 <col:15> Implicit
| |-FunctionDecl 0x7fdcd681bfb0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd681bea0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fdcd681bf18 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fdcd681c058 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd681c0a0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd681c1d8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd681c0c8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fdcd681c140 <col:32> col:37 'float'
| | |-ConstAttr 0x7fdcd681c280 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd681c2c8 <col:14> Implicit
| |-FunctionDecl 0x7fdcd681c400 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd681c2f0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fdcd681c368 <col:33> col:39 'double'
| | |-ConstAttr 0x7fdcd681c4a8 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd681c4f0 <col:15> Implicit
| |-FunctionDecl 0x7fdcd681c638 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd681c518 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fdcd681c590 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fdcd681c6e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd681c728 <col:20> Implicit
| |-FunctionDecl 0x7fdcd681c928 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7fdcd681c750 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fdcd681c7c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7fdcd681c840 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7fdcd681cbc8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7fdcd681c9f0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fdcd681ca68 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7fdcd681cae0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7fdcd681ce68 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7fdcd681cc90 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fdcd681cd08 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7fdcd681cd80 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7fdcd681d040 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd681cf30 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7fdcd681cfa8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7fdcd681d0e8 <col:14> Implicit
| | `-ConstAttr 0x7fdcd681d130 <col:14> Implicit
| |-FunctionDecl 0x7fdcd681d268 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd681d158 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7fdcd681d1d0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7fdcd681d310 <col:15> Implicit
| | `-ConstAttr 0x7fdcd681d358 <col:15> Implicit
| |-FunctionDecl 0x7fdcd681d490 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd681d380 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7fdcd681d3f8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7fdcd681d538 <col:20> Implicit
| | `-ConstAttr 0x7fdcd681d580 <col:20> Implicit
| |-FunctionDecl 0x7fdcd681d6c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7fdcd681d600 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fdcd681d7a8 <col:14> Implicit
| | `-ConstAttr 0x7fdcd681d7f0 <col:14> Implicit
| |-FunctionDecl 0x7fdcd681d8e8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7fdcd681d818 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fdcd681d9c8 <col:15> Implicit
| | `-ConstAttr 0x7fdcd681da10 <col:15> Implicit
| |-FunctionDecl 0x7fdcd681db08 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7fdcd681da38 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7fdcd681dbe8 <col:20> Implicit
| | `-ConstAttr 0x7fdcd681dc30 <col:20> Implicit
| |-FunctionDecl 0x7fdcd681dd68 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd681dc58 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fdcd681dcd0 <col:32> col:37 'float'
| | |-ConstAttr 0x7fdcd681de10 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd681de58 <col:14> Implicit
| |-FunctionDecl 0x7fdcd681df90 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd681de80 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fdcd681def8 <col:33> col:39 'double'
| | |-ConstAttr 0x7fdcd681e038 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd681e080 <col:15> Implicit
| |-FunctionDecl 0x7fdcd681e1b8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd681e0a8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fdcd681e120 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fdcd681e260 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd681e2a8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd681e428 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7fdcd681e2d0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7fdcd681e348 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7fdcd681e510 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd681e558 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680f6d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7fdcd681e580 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fdcd680f600 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7fdcd680f7c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680f808 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680f940 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd680f830 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7fdcd680f8a8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7fdcd680f9e8 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd680fa30 <col:20> Implicit
| |-FunctionDecl 0x7fdcd680fb68 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd680fa58 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fdcd680fad0 <col:27> col:32 'float'
| | |-ConstAttr 0x7fdcd680fc10 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd680fc58 <col:14> Implicit
| |-FunctionDecl 0x7fdcd680fd90 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd680fc80 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fdcd680fcf8 <col:28> col:34 'double'
| | |-ConstAttr 0x7fdcd680fe38 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd680fe80 <col:15> Implicit
| |-FunctionDecl 0x7fdcd680ffb8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd680fea8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fdcd680ff20 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fdcd6810060 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd68100a8 <col:20> Implicit
| |-FunctionDecl 0x7fdcd68101e0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd68100d0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fdcd6810148 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fdcd6810288 <col:14> Implicit
| | `-ConstAttr 0x7fdcd68102d0 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6810408 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd68102f8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fdcd6810370 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fdcd68104b0 <col:15> Implicit
| | `-ConstAttr 0x7fdcd68104f8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6822638 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd6810520 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fdcd6810598 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fdcd68226e0 <col:20> Implicit
| | `-ConstAttr 0x7fdcd6822728 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6822860 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fdcd6822750 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fdcd68227c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fdcd6822908 <col:14> Implicit
| | `-ConstAttr 0x7fdcd6822950 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6822a88 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd6822978 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fdcd68229f0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fdcd6822b30 <col:15> Implicit
| | `-ConstAttr 0x7fdcd6822b78 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6822cb0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd6822ba0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fdcd6822c18 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fdcd6822d58 <col:20> Implicit
| | `-ConstAttr 0x7fdcd6822da0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6822fa8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7fdcd6822dc8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fdcd6822e40 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fdcd6822eb8 <col:33> col:38 'float'
| | |-ConstAttr 0x7fdcd68230a8 <col:14> Implicit
| | `-NoThrowAttr 0x7fdcd68230f0 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68232f8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7fdcd6823118 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fdcd6823190 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7fdcd6823208 <col:35> col:41 'double'
| | |-ConstAttr 0x7fdcd68233f8 <col:15> Implicit
| | `-NoThrowAttr 0x7fdcd6823440 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6813688 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7fdcd6823468 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fdcd68234e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7fdcd6823558 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7fdcd6813788 <col:20> Implicit
| | `-NoThrowAttr 0x7fdcd68137d0 <col:20> Implicit
| |-FunctionDecl 0x7fdcd6813888 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7fdcd6813920 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fdcd6813a68 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7fdcd6813b00 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fdcd6813c48 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7fdcd6813ce0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fdcd6813e28 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7fdcd6813ec0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fdcd6814018 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6813f78 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fdcd68140b8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fdcd6814158 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7fdcd6814168 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6814230 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6814190 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fdcd68142d0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fdcd6814370 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7fdcd6814380 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6825600 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fdcd68143a8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7fdcd6814420 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7fdcd6814498 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fdcd68256b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd68258e0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fdcd6825710 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7fdcd6825788 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7fdcd6825800 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fdcd6825990 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6825a90 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd68259f0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fdcd6825b30 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fdcd6825bd0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7fdcd6825be0 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6825ca8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6825c08 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fdcd6825d48 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fdcd6825de8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7fdcd6825df8 <col:15> Implicit
| |-FunctionDecl 0x7fdcd6825ec0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6825e20 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fdcd6825f60 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fdcd6826000 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7fdcd6826010 <col:14> Implicit
| |-FunctionDecl 0x7fdcd68260d8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6826038 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fdcd6826178 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fdcd6826218 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7fdcd6826228 <col:15> Implicit
| |-FunctionDecl 0x7fdcd68262f0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7fdcd6826250 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fdcd6826390 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fdcd6826430 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7fdcd6826440 <col:14> Implicit
| |-FunctionDecl 0x7fdcd6826508 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6826468 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fdcd682c600 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fdcd682c6a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7fdcd682c6b0 <col:15> Implicit
| |-FunctionDecl 0x7fdcd682c860 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fdcd682c6d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7fdcd682c750 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7fdcd682c7c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fdcd682c910 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd682caf8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fdcd682c970 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7fdcd682c9e8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7fdcd682ca60 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fdcd682cba8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7fdcd682cbf0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7fdcd682cd18 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7fdcd682cdc8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7fdcd682ce28 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7fdcd6833e68 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fdcd6833f68 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7fdcd6833f68
| | |-CXXConstructorDecl 0x7fdcd6834078 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7fdcd6834078
| | | `-ParmVarDecl 0x7fdcd68341a0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7fdcd6834238 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fdcd6834360 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fdcd682cdc8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7fdcd68344b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fdcd6834480 <col:8> 'float' xvalue .__sinval 0x7fdcd682cdc8
| |   |     `-CXXStaticCastExpr 0x7fdcd6834450 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fdcd6834418 <col:8> 'struct __float2' lvalue ParmVar 0x7fdcd6834360 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fdcd682ce28 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7fdcd6834598 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fdcd6834560 <col:8> 'float' xvalue .__cosval 0x7fdcd682ce28
| |   |     `-CXXStaticCastExpr 0x7fdcd6834530 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fdcd68344f8 <col:8> 'struct __float2' lvalue ParmVar 0x7fdcd6834360 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7fdcd68345e8 <col:8>
| |-CXXRecordDecl 0x7fdcd682ce90 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7fdcd682cfb8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7fdcd682d068 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7fdcd682d0c8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7fdcd6834e88 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fdcd6834f88 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7fdcd6834f88
| | |-CXXConstructorDecl 0x7fdcd6835098 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7fdcd6835098
| | | `-ParmVarDecl 0x7fdcd68351c0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7fdcd6835258 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fdcd6835380 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fdcd682d068 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7fdcd68354d8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fdcd68354a0 <col:8> 'double' xvalue .__sinval 0x7fdcd682d068
| |   |     `-CXXStaticCastExpr 0x7fdcd6835470 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fdcd6835438 <col:8> 'struct __double2' lvalue ParmVar 0x7fdcd6835380 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fdcd682d0c8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7fdcd68355b8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fdcd6835580 <col:8> 'double' xvalue .__cosval 0x7fdcd682d0c8
| |   |     `-CXXStaticCastExpr 0x7fdcd6835550 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fdcd6835518 <col:8> 'struct __double2' lvalue ParmVar 0x7fdcd6835380 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7fdcd6835608 <col:8>
| |-FunctionDecl 0x7fdcd682d290 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fdcd682d148 <col:40> col:45 'float'
| |-FunctionDecl 0x7fdcd682d490 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fdcd682d348 <col:40> col:46 'double'
| |-FunctionDecl 0x7fdcd6833800 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fdcd682d548 <col:42> col:47 'float'
| |-FunctionDecl 0x7fdcd6833950 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fdcd68338b8 <col:42> col:48 'double'
| |-FunctionDecl 0x7fdcd6833b90 prev 0x7fdcd6825600 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fdcd6833a08 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7fdcd6833a80 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7fdcd6833af8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7fdcd68349e0 <col:80, line:664:1>
| | | |-DeclStmt 0x7fdcd6834650 <line:662:5, col:57>
| | | | `-VarDecl 0x7fdcd6833ca8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fdcd6834638 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fdcd6834600 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fdcd68343c8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fdcd6833e20 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fdcd6833e08 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fdcd6833d88 <col:37> 'struct __float2 (float)' lvalue Function 0x7fdcd682d290 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fdcd6833e50 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fdcd6833d60 <col:53> 'float' lvalue ParmVar 0x7fdcd6833a08 '__x' 'float'
| | | |-BinaryOperator 0x7fdcd6834740 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fdcd68346a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fdcd6834690 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fdcd6834668 <col:6> 'float *' lvalue ParmVar 0x7fdcd6833a80 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fdcd6834728 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fdcd68346f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7fdcd682cdc8
| | | |     `-DeclRefExpr 0x7fdcd68346c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fdcd6833ca8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fdcd68349b8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fdcd6834920 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fdcd6834908 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fdcd68348e0 <col:34> 'float *' lvalue ParmVar 0x7fdcd6833af8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fdcd68349a0 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fdcd6834968 <col:43, col:51> 'const float' lvalue .__cosval 0x7fdcd682ce28
| | |       `-DeclRefExpr 0x7fdcd6834940 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fdcd6833ca8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fdcd6833c40 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6834bb0 prev 0x7fdcd68258e0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fdcd6834a28 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7fdcd6834aa0 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7fdcd6834b18 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7fdcd68359e0 <col:82, line:669:1>
| | | |-DeclStmt 0x7fdcd6835670 <line:667:5, col:57>
| | | | `-VarDecl 0x7fdcd6834cc8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fdcd6835658 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fdcd6835620 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fdcd68353e8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fdcd6834e40 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fdcd6834e28 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fdcd6834da8 <col:38> 'struct __double2 (double)' lvalue Function 0x7fdcd682d490 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fdcd6834e70 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fdcd6834d80 <col:53> 'double' lvalue ParmVar 0x7fdcd6834a28 '__x' 'double'
| | | |-BinaryOperator 0x7fdcd6835760 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fdcd68356c8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fdcd68356b0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fdcd6835688 <col:6> 'double *' lvalue ParmVar 0x7fdcd6834aa0 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fdcd6835748 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fdcd6835710 <col:15, col:23> 'const double' lvalue .__sinval 0x7fdcd682d068
| | | |     `-DeclRefExpr 0x7fdcd68356e8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fdcd6834cc8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fdcd68359b8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fdcd6835920 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fdcd6835908 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fdcd68358e0 <col:34> 'double *' lvalue ParmVar 0x7fdcd6834b18 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fdcd68359a0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fdcd6835968 <col:43, col:51> 'const double' lvalue .__cosval 0x7fdcd682d0c8
| | |       `-DeclRefExpr 0x7fdcd6835940 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fdcd6834cc8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fdcd6834c60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6835bb0 prev 0x7fdcd682c860 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fdcd6835a28 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7fdcd6835aa0 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7fdcd6835b18 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7fdcd6836108 <col:82, line:674:1>
| | | |-DeclStmt 0x7fdcd6835e98 <line:672:5, col:59>
| | | | `-VarDecl 0x7fdcd6835cc8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fdcd6835e80 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fdcd6835e48 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fdcd6835e30 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fdcd6835de8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fdcd6835dd0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fdcd6835da8 <col:37> 'struct __float2 (float)' lvalue Function 0x7fdcd6833800 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fdcd6835e18 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fdcd6835d80 <col:55> 'float' lvalue ParmVar 0x7fdcd6835a28 '__x' 'float'
| | | |-BinaryOperator 0x7fdcd6835f88 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fdcd6835ef0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fdcd6835ed8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fdcd6835eb0 <col:6> 'float *' lvalue ParmVar 0x7fdcd6835aa0 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fdcd6835f70 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fdcd6835f38 <col:15, col:23> 'const float' lvalue .__sinval 0x7fdcd682cdc8
| | | |     `-DeclRefExpr 0x7fdcd6835f10 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fdcd6835cc8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fdcd68360e0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fdcd6836048 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fdcd6836030 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fdcd6836008 <col:34> 'float *' lvalue ParmVar 0x7fdcd6835b18 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fdcd68360c8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fdcd6836090 <col:43, col:51> 'const float' lvalue .__cosval 0x7fdcd682ce28
| | |       `-DeclRefExpr 0x7fdcd6836068 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fdcd6835cc8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fdcd6835c60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd68362d8 prev 0x7fdcd682caf8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fdcd6836150 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7fdcd68361c8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7fdcd6836240 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7fdcd6836c40 <col:84, line:679:1>
| | | |-DeclStmt 0x7fdcd68365c0 <line:677:5, col:59>
| | | | `-VarDecl 0x7fdcd68363f0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fdcd68365a8 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fdcd6836570 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fdcd6836558 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fdcd6836510 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fdcd68364f8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fdcd68364d0 <col:38> 'struct __double2 (double)' lvalue Function 0x7fdcd6833950 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fdcd6836540 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fdcd68364a8 <col:55> 'double' lvalue ParmVar 0x7fdcd6836150 '__x' 'double'
| | | |-BinaryOperator 0x7fdcd68366b0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fdcd6836618 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fdcd6836600 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fdcd68365d8 <col:6> 'double *' lvalue ParmVar 0x7fdcd68361c8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fdcd6836698 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fdcd6836660 <col:15, col:23> 'const double' lvalue .__sinval 0x7fdcd682d068
| | | |     `-DeclRefExpr 0x7fdcd6836638 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fdcd68363f0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fdcd6836c18 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fdcd6836770 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fdcd6836758 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fdcd6836730 <col:34> 'double *' lvalue ParmVar 0x7fdcd6836240 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fdcd6836c00 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fdcd68367b8 <col:43, col:51> 'const double' lvalue .__cosval 0x7fdcd682d0c8
| | |       `-DeclRefExpr 0x7fdcd6836790 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fdcd68363f0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fdcd6836388 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fdcd6836d28 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6836c88 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fdcd6836dc8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fdcd6836f20 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6836e80 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fdcd6836fc0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fdcd68371d8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fdcd6837078 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fdcd68370f0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fdcd6837280 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fdcd68373d8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6837338 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fdcd6837478 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fdcd68375d0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd6837530 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fdcd6837670 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fdcd6837848 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fdcd6837728 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fdcd68377a0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fdcd68378f0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fdcd6837ab8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd68379a8 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7fdcd6837a20 <col:29> col:35 'double'
| |-VarDecl 0x7fdcd6837b78 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7fdcd6839ca0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7fdcd6839c00 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7fdcd6839d40 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fdcd6839e98 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7fdcd6839df8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7fdcd6839f38 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fdcd683a110 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7fdcd6839ff0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fdcd683a068 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7fdcd683a1b8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fdcd683a310 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7fdcd683a270 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7fdcd683a3b0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fdcd683a508 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7fdcd683a468 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7fdcd683a5a8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7fdcd683a700 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7fdcd683a660 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7fdcd683a7a0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7fdcd4092f98 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7fdcd4092fe8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7fdcd4093080 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7fdcd40930e8 <col:26> Implicit
|   `-ConstAttr 0x7fdcd4093130 <col:26> Implicit
|-LinkageSpecDecl 0x7fdcd40932b0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fdcd4093300 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fdcd4093398 <col:50> Implicit
|   `-ConstAttr 0x7fdcd40933e0 <col:50> Implicit
|-LinkageSpecDecl 0x7fdcd4093808 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7fdcd4093858 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7fdcd40938f0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7fdcd4093958 <col:26> Implicit
|   `-ConstAttr 0x7fdcd40939a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fdcd4093b20 <col:49> col:49 implicit C
| `-FunctionDecl 0x7fdcd6000400 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fdcd6000498 <col:49> Implicit
|   `-ConstAttr 0x7fdcd60004e0 <col:49> Implicit
|-LinkageSpecDecl 0x7fdcd6000908 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7fdcd6000958 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7fdcd60009f0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7fdcd6000a58 <col:26> Implicit
|   `-ConstAttr 0x7fdcd6000aa0 <col:26> Implicit
|-LinkageSpecDecl 0x7fdcd6000c20 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fdcd6000c70 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fdcd6000d08 <col:50> Implicit
|   `-ConstAttr 0x7fdcd6000d50 <col:50> Implicit
|-LinkageSpecDecl 0x7fdcd683a8e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1485:1> line:307:8 C++
| |-TypedefDecl 0x7fdcd683a950 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7fdcd5819de0 'long'
| |-TypedefDecl 0x7fdcd683a9c0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7fdcd5819e80 'unsigned long'
| |-TypedefDecl 0x7fdcd683aa30 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7fdcd5819f00 'long double'
| |-NamespaceDecl 0x7fdcd683aa88 prev 0x7fdcd584d258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7fdcd584d258 'std'
| | `-TypedefDecl 0x7fdcd683ab48 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7fdcd683ab10 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7fdcd683aaf0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7fdcd581a210 'nullptr_t'
| |-NamespaceDecl 0x7fdcd683e800 prev 0x7fdcd683aa88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fdcd584d258 'std'
| | `-NamespaceDecl 0x7fdcd683e868 prev 0x7fdcd584d2c0 <col:52, line:439:36> <scratch space>:343:1 __1 inline
| |   |-original Namespace 0x7fdcd584d2c0 '__1'
| |   |-UsingDecl 0x7fdcd683e8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7fdcd683e940 <col:9> col:9 implicit Typedef 0x7fdcd683a950 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7fdcd683e990 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7fdcd683e9e0 <col:9> col:9 implicit Typedef 0x7fdcd683a9c0 'size_t'
| |   | `-TypedefType 0x7fdcd585c480 'size_t' sugar
| |   |   |-Typedef 0x7fdcd683a9c0 'size_t'
| |   |   `-BuiltinType 0x7fdcd5819e80 'unsigned long'
| |   |-UsingDecl 0x7fdcd683ea30 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7fdcd683ea80 <col:9> col:9 implicit Typedef 0x7fdcd683aa30 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7fdcd683eac8 prev 0x7fdcd683e800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fdcd584d258 'std'
| | `-NamespaceDecl 0x7fdcd683eb30 prev 0x7fdcd683e868 <col:52, line:439:36> <scratch space>:344:1 __1 inline
| |   |-original Namespace 0x7fdcd584d2c0 '__1'
| |   |-ClassTemplateDecl 0x7fdcd683ee40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7fdcd683eb98 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fdcd683ec38 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fdcd683eda8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7fdcd683f078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fdcd683f208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fdcd683f0c0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd683f170 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7fdcd683f418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fdcd683f5a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7fdcd683f460 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd683f510 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7fdcd683f7b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fdcd6841118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7fdcd6841000 <line:402:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fdcd6841080 <line:403:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7fdcd6841390 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7fdcd6841438 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7fdcd5819d20 'void'
| |   |-ClassTemplateDecl 0x7fdcd68415c8 <line:405:1, line:406:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7fdcd68414b0 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd6841530 <line:406:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7fdcd6841840 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7fdcd68418e8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd68414f0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd68414b0 '_Tp'
| |   |-ClassTemplateDecl 0x7fdcd6841b18 <line:408:1, line:409:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7fdcd6841960 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd68419d8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fdcd6841a80 <line:409:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7fdcd6841de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd6841e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7fdcd6842188 <line:411:1, line:412:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7fdcd6841f30 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fdcd6841f88 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fdcd6842000 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7fdcd68420f0 <line:412:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7fdcd6842490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd68424d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7fdcd6842580 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7fdcd6841fd0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fdcd6841f88 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd68428f8 <line:413:1, line:414:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fdcd68425f8 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7fdcd6842668 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7fdcd6842a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd6842c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7fdcd6842cd8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7fdcd68426b0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fdcd6842668 '_Then'
| |   |-TypeAliasTemplateDecl 0x7fdcd6844130 <line:417:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7fdcd6842d60 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fdcd6842db8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fdcd6842e28 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7fdcd68440d0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7fdcd6844060 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd6844340 <line:420:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fdcd6844190 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fdcd68441e8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fdcd68442a8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7fdcd6844600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd6844648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd6844910 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd6844700 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd6844a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd6844bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7fdcd6844d70 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7fdcd6844d00 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd6844fb0 <line:423:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fdcd6844df8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fdcd6844e60 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fdcd6844f18 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7fdcd6845270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fdcd68452b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd4129480 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7fdcd4129710 prev 0x7fdcd4129480 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd5966188 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7fdcd5966468 prev 0x7fdcd5966188 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd5968538 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7fdcd59687d0 prev 0x7fdcd5968538 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd596d7e8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7fdcd596da80 prev 0x7fdcd596d7e8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd6845580 <line:424:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd6845370 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd68456f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd6845860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7fdcd6845908 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd68453b0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd6845370 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fdcd6845ca0 <line:427:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7fdcd6845990 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fdcd68459f8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7fdcd6845c40 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7fdcd6845bd0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fdcd68460c8 <line:433:1, line:440:1> line:437:1 addressof
| |   | |-TemplateTypeParmDecl 0x7fdcd6845cf0 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd6846030 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fdcd6845eb8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7fdcd6846498 <line:438:1, line:440:1>
| |   |   | `-ReturnStmt 0x7fdcd6846480 <line:439:5, col:35>
| |   |   |   `-CallExpr 0x7fdcd6846450 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7fdcd6846400 <col:12> '<builtin fn type>' Function 0x7fdcd68462a8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7fdcd6846428 <col:32> '_Tp' lvalue ParmVar 0x7fdcd6845eb8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7fdcd6846120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   |-VisibilityAttr 0x7fdcd6846168 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7fdcd6846178 <line:296:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7fdcd6846780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7fdcd68464b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd68466e8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7fdcd68465a8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7fdcd68467d8 <line:499:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7fdcd68468f8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7fdcd68469d0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7fdcd6846bf8 <line:503:1, line:515:1> line:504:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7fdcd6846a38 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd6846ab8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7fdcd6846b60 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7fdcd6846ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fdcd6846f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7fdcd6847600 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fdcd6847660 <col:53> '_Tp' NonTypeTemplateParm 0x7fdcd6846ab8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7fdcd6847698 <line:507:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fdcd6846a80 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fdcd6846a38 '_Tp'
| |   | | |-TypedefDecl 0x7fdcd6847700 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7fdcd6846e30 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7fdcd6846b60 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fdcd6847898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7fdcd6847b68 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7fdcd6847b50 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7fdcd6847b28 <col:73> 'const _Tp' lvalue Var 0x7fdcd6847600 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd6847930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd6847978 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7fdcd68479e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7fdcd6847bc8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7fdcd6847bb0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7fdcd6847b88 <col:69> 'const _Tp' lvalue Var 0x7fdcd6847600 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7fdcd6847a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |   `-VisibilityAttr 0x7fdcd6847ac8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd68480a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7fdcd684a258 prev 0x7fdcd68480a8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fdcd684a300 <line:506:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fdcd684a388 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fdcd684a370 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7fdcd684a418 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fdcd6848070 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fdcd6846a80 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fdcd6846a38 '_Tp'
| |   | | |   `-BuiltinType 0x7fdcd5819d40 '_Bool'
| |   | | |-TypedefDecl 0x7fdcd684a480 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7fdcd68481b0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7fdcd68480a8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fdcd684a568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fdcd684a638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fdcd684a6b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fdcd684a758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd6848380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7fdcd68490a8 prev 0x7fdcd6848380 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fdcd6849150 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fdcd68491d8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fdcd68491c0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7fdcd6849268 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fdcd6848070 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fdcd6846a80 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fdcd6846a38 '_Tp'
| |   | | |   `-BuiltinType 0x7fdcd5819d40 '_Bool'
| |   | | |-TypedefDecl 0x7fdcd68492d0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7fdcd6848480 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7fdcd6848380 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fdcd6849408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fdcd68494d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fdcd6849550 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fdcd6849e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd589df00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7fdcd589e130 prev 0x7fdcd589df00 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7fdcd589e200 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7fdcd589e290 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7fdcd589e270 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7fdcd589e320 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7fdcd589deb0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7fdcd6846a80 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fdcd6846a38 '_Tp'
| |   |   |   `-BuiltinType 0x7fdcd5819e80 'unsigned long'
| |   |   |-TypedefDecl 0x7fdcd589e388 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7fdcd589e000 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7fdcd589df00 'integral_constant'
| |   |   |-CXXConversionDecl 0x7fdcd589e4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7fdcd589e588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-CXXMethodDecl 0x7fdcd589e600 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7fdcd589e6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |-VarDecl 0x7fdcd6847f70 parent 0x7fdcd6846b60 prev 0x7fdcd6847600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7fdcd68482c0 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7fdcd68481d0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fdcd6848038 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fdcd6848020 <line:528:31> '_Bool' true
| |   |   `-RecordType 0x7fdcd68481b0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7fdcd68480a8 'integral_constant'
| |   |-TypedefDecl 0x7fdcd6848590 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7fdcd68484a0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fdcd6848340 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fdcd6848328 <line:529:31> '_Bool' false
| |   |   `-RecordType 0x7fdcd6848480 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7fdcd6848380 'integral_constant'
| |   |-ClassTemplateDecl 0x7fdcd68487b0 <line:535:1, line:536:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7fdcd6848600 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7fdcd6848658 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fdcd6848718 <line:536:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7fdcd6849f78 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd6848d50 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fdcd6848a98 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fdcd6849e98 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6849f78 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fdcd684a7f0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd684aac0 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd684a8a8 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fdcd684b3f8 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd684b7e0 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fdcd684b4b0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fdcd684b518 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fdcd684bd78 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7fdcd684bfc0 <line:550:1, line:551:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7fdcd684be30 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fdcd684be98 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fdcd684bf28 <line:551:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fdcd684c4f8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7fdcd684c740 <line:555:1, line:556:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7fdcd684c5c0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7fdcd684c618 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fdcd684c6a8 <line:556:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7fdcd684d030 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd684cc50 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fdcd684c9f8 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fdcd684cf50 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7fdcd684d030 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fdcd684d2b8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd684d6a0 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fdcd684d370 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fdcd684d3d8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fdcd684dc38 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7fdcd684de80 <line:568:1, line:569:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7fdcd684dcf0 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fdcd684dd58 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fdcd684dde8 <line:569:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fdcd684e388 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7fdcd684e558 <line:573:1, line:574:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7fdcd684e440 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fdcd684e4c0 <line:574:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7fdcd684ea18 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7fdcd684ebe8 <line:577:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7fdcd684ead0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fdcd684eb50 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7fdcd684ee68 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd684ee68 <line:578:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fdcd684f0a0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd684f308 <line:580:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd684f158 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fdcd684f5b0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd684f8f8 <line:582:1, line:583:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fdcd684f668 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fdcd684f6d8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fdcd684ff00 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd68550b8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fdcd684ffb8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fdcd6850028 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fdcd6850098 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fdcd6850108 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fdcd68559f0 <line:586:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7fdcd6855bc8 <line:590:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7fdcd6855aa8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fdcd6855b30 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7fdcd6855e88 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6855e88 <line:591:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fdcd68560c0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd6856318 <line:593:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd6856178 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fdcd68565c0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd6856908 <line:595:1, line:596:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fdcd6856678 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fdcd68566e8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fdcd6856f10 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd6857468 <line:598:1, line:600:73> line:599:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fdcd6856fc8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fdcd6857038 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fdcd68570a8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fdcd6857118 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fdcd6858e00 <line:599:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7fdcd6858fd8 <line:603:1, line:604:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7fdcd6858eb8 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd6858f40 <line:604:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7fdcd6859580 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7fdcd6859788 <line:610:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7fdcd6859638 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd68596f0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fdcd6859a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd6859a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd6859cd8 <line:611:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd6859b40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd6859e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd6859fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7fdcd685a1b8 <line:620:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7fdcd685a068 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd685a120 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fdcd685a430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd685a4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd685a708 <line:621:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd685a570 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd685a848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd685a9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7fdcd685abc8 <line:630:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7fdcd685aa78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd685ab30 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7fdcd6843068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fdcd68430b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7fdcd6843158 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fdcd685aac0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fdcd685aa78 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd4128538 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fdcd4128780 prev 0x7fdcd4128538 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7fdcd4128858 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fdcd4128820 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fdcd685aac0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd685aa78 '_Tp'
| |   |       `-BuiltinType 0x7fdcd5819ee0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd6843368 <line:631:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd68431d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd68434a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd68435e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7fdcd6843688 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd6843210 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd68431d0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fdcd6843940 <line:633:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7fdcd6843700 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd68438e0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd6843870 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd6843ad8 <line:638:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7fdcd6843990 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd6843a40 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7fdcd6843d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fdcd6843d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7fdcd6843e40 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fdcd68439d0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fdcd6843990 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd4128940 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fdcd4128b90 prev 0x7fdcd4128940 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7fdcd4128c68 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fdcd4128c30 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fdcd68439d0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd6843990 '_Tp'
| |   |       `-BuiltinType 0x7fdcd5819ee0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd685ce88 <line:639:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd6843eb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd685cfc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd685d100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7fdcd685d1a8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd6843f00 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd6843eb8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fdcd685d460 <line:641:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fdcd685d220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd685d400 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd685d390 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd685d5f8 <line:646:1, line:647:80> line:646:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7fdcd685d4b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd685d560 <col:22, line:647:80> line:646:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7fdcd685d870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fdcd685d8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7fdcd685dc10 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7fdcd685dba0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd4128258 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fdcd4128468 prev 0x7fdcd4128258 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7fdcd4128d50 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7fdcd4128d00 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7fdcd4128ce0 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7fdcd4128c68 'type'
| |   |         `-SubstTemplateTypeParmType 0x7fdcd4128c30 'double' sugar
| |   |           |-TemplateTypeParmType 0x7fdcd68439d0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7fdcd6843990 '_Tp'
| |   |           `-BuiltinType 0x7fdcd5819ee0 'double'
| |   |-TypeAliasTemplateDecl 0x7fdcd685ded0 <line:649:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7fdcd685dc88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd685de70 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd685de00 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd685e038 <line:654:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7fdcd685df20 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd685dfa0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fdcd685e2f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7fdcd685e3c8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd685e3c8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fdcd685e630 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7fdcd685e838 <line:657:1, line:658:63> line:657:50 is_void
| |   | |-TemplateTypeParmDecl 0x7fdcd685e6e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd685e7a0 <col:22, line:658:63> line:657:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd685eab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd685ed18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7fdcd685ef18 <line:667:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7fdcd685ee00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd685ee80 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fdcd685f1d0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7fdcd685f2d0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd685f2d0 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7fdcd685f540 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7fdcd685f748 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7fdcd685f5f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd685f6b0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd685f9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd685fc28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7fdcd685fe98 <line:674:1, line:675:66> line:674:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd685fce0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd685fe00 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd6860110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd6860328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7fdcd68604f8 <line:685:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7fdcd68603e0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd6860460 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fdcd68607b0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7fdcd6860888 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6860bc8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6860f10 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6861260 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd68615a8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd68618e8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6861c28 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6861f88 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd68622d0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6862620 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6862970 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6862cc0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6863010 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6863360 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd68636b0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6863a20 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fdcd6863e00 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd4128e40 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fdcd4129060 prev 0x7fdcd4128e40 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6860888 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7fdcd6860af0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6860bc8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7fdcd6860e30 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6860f10 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7fdcd6861180 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6861260 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7fdcd68614d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd68615a8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7fdcd6861810 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd68618e8 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7fdcd6861b50 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6861c28 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7fdcd6861ea8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6861f88 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7fdcd68621f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd68622d0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7fdcd6862540 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6862620 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7fdcd6862890 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6862970 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7fdcd6862be0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6862cc0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7fdcd6862f30 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6863010 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7fdcd6863280 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6863360 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7fdcd68635d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd68636b0 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7fdcd6863920 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6863a20 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7fdcd6863c90 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6863e00 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7fdcd6864070 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7fdcd6864278 <line:708:1, line:709:67> line:708:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7fdcd6864128 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd68641e0 <col:22, line:709:67> line:708:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7fdcd68644f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fdcd6864758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd4128008 <col:1, line:709:67> line:708:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fdcd4129148 prev 0x7fdcd4128008 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7fdcd6864928 <line:718:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fdcd6864810 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd6864890 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fdcd6864be0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7fdcd6864cc0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7fdcd585ac10 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7fdcd585af60 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd6864cc0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7fdcd585ab30 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fdcd585ac10 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7fdcd585ae80 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fdcd585af60 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7fdcd585b1d0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7fdcd585b3d8 <line:723:1, line:724:73> line:723:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fdcd585b288 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd585b340 <col:22, line:724:73> line:723:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd585b650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd585b8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7fdcd585bac8 <line:733:1, line:734:26> line:733:50 is_array
| |   | |-TemplateTypeParmDecl 0x7fdcd585b970 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd585ba30 <col:22, line:734:26> line:733:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fdcd585bd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd585bdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd585c088 <line:735:1, line:736:25> line:735:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fdcd585be80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd585c1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd585c350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd585c6f8 <line:737:1, line:738:25> line:737:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fdcd585c408 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd585c4b0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fdcd585c848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd586ca00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7fdcd586cbd8 <line:747:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd586cab8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd586cb40 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fdcd586ce90 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd586d0e8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fdcd586cf48 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd586d360 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7fdcd586d568 <line:750:1, line:751:66> line:750:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd586d418 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd586d4d0 <col:22, line:751:66> line:750:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd586d7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd586e260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7fdcd586e468 <line:760:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fdcd586e318 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd586e3d0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fdcd586e6e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd586e768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd586e9e8 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fdcd586e820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd586eb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd586eca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7fdcd586eea8 <line:763:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fdcd586ed58 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd586ee10 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fdcd586f120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd586fa00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd586fcb8 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd586fab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd586fdf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd586ff70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7fdcd5870178 <line:768:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7fdcd5870028 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58700e0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58703f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5870478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58706f8 <line:769:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fdcd5870530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd5870838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd5873a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5873c88 <line:771:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd5873ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd5873dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd5873f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7fdcd5874148 <line:788:1, line:789:56> line:788:50 is_union
| |   | |-TemplateTypeParmDecl 0x7fdcd5873ff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58740b0 <col:22, line:789:56> line:788:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58743c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58745a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7fdcd58747a8 <line:808:1, line:809:56> line:808:50 is_class
| |   | |-TemplateTypeParmDecl 0x7fdcd5874660 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5874710 <col:22, line:809:56> line:808:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5874a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5874c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7fdcd5874ec0 <line:831:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7fdcd5874d00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5874d68 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fdcd5874e28 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5875160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58751e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58754a0 <line:832:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd58752a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd5875608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd58757b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7fdcd5875868 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7fdcd58758d0 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7fdcd5876a00 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7fdcd5876d18 <line:844:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fdcd5876ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fdcd5876c80 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7fdcd5876b78 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7fdcd5876f58 <line:845:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7fdcd5876d70 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fdcd5876ec0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7fdcd5876e00 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7fdcd5877118 <line:846:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fdcd5876fb0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fdcd5877080 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7fdcd58773d8 <line:847:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7fdcd5877168 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fdcd5877340 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7fdcd5877208 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7fdcd5877598 <line:848:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7fdcd5877430 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7fdcd5877500 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7fdcd5877d70 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7fdcd58775e8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5877c60 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd5877c28 <col:29, line:855:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fdcd5877af8 <line:851:29, line:854:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7fdcd58779a8 <line:851:29, line:853:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7fdcd5877878 <line:851:29, line:852:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7fdcd5877728 <line:851:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7fdcd5877838 <line:852:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7fdcd5877968 <line:853:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fdcd5877ab8 <line:854:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd5877be8 <line:855:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd5877cd8 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7fdcd58784c8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5878760 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd5878580 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5878a30 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7fdcd5878c38 <line:861:1, line:862:41> line:861:50 is_function
| |   | |-TemplateTypeParmDecl 0x7fdcd5878ae8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5878ba0 <col:22, line:862:41> line:861:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5878eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5879628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7fdcd58798d8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7fdcd58796e0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5879758 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58797c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7fdcd5879840 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7fdcd5879ce0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7fdcd5879eb8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd5879d98 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5879e20 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fdcd587a170 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd587a4c8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fdcd587a228 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fdcd587a298 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fdcd587a7c8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fdcd587aa00 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd587a880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd587a930 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7fdcd587ac80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd587afc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fdcd587b198 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd587b078 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd587b100 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fdcd587b450 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd587b778 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fdcd587b508 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd587b578 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fdcd587ba00 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7fdcd587bc08 <line:901:1, line:902:73> line:901:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd587bab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd587bb70 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd587be80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd587c0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7fdcd587c2e8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd587c1a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd587c250 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fdcd587c560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd587ca00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7fdcd587cc08 <line:924:1, line:925:55> line:924:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7fdcd587cab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd587cb70 <col:22, line:925:55> line:924:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd587ce80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd587d068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7fdcd587d268 <line:950:1, line:952:70> line:950:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7fdcd587d120 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd587d1d0 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fdcd587d4e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd587d918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7fdcd587e148 <line:961:1, line:964:66> line:961:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7fdcd587e000 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd587e0b0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fdcd587e3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd587e918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7fdcd587eb18 <line:973:1, line:978:71> line:973:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7fdcd587e9d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd587ea80 <col:22, line:978:71> line:973:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7fdcd587ed90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fdcd587f588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7fdcd587f690 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd587f690 <line:980:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7fdcd587f7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd587f940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7fdcd587fb48 <line:989:1, line:993:63> line:989:50 is_object
| |   | |-TemplateTypeParmDecl 0x7fdcd587f9f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd587fab0 <col:22, line:993:63> line:989:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fdcd587fdc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5880468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7fdcd5880668 <line:1002:1, line:1003:68> line:1002:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7fdcd5880520 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58805d0 <col:22, line:1003:68> line:1002:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58808e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5880bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7fdcd5880c90 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7fdcd5880db8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7fdcd58810c0 <line:1014:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7fdcd5880e50 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fdcd5881028 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7fdcd5880ee8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7fdcd5881258 <line:1015:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7fdcd5881118 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7fdcd58811c0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7fdcd58813e8 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7fdcd58812c8 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5881350 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7fdcd5881b88 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7fdcd5882148 <line:1025:1, line:1028:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7fdcd5881c40 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5882038 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd5882000 <col:29, line:1027:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fdcd5881ec8 <line:1025:29, line:1026:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fdcd5881d78 <line:1025:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fdcd5881e88 <line:1026:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd5881fb8 <line:1027:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd58820b0 <line:1028:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7fdcd5882410 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7fdcd58824b8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd5881c80 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd5881c40 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5882710 <line:1030:1, line:1031:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5882530 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd58829a0 <line:1031:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7fdcd5882a48 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7fdcd5882571 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7fdcd5882570 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd5882530 '_Tp'
| |   |-ClassTemplateDecl 0x7fdcd5882c08 <line:1033:1, line:1034:51> line:1033:50 add_const
| |   | |-TemplateTypeParmDecl 0x7fdcd5882ac0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5882b70 <col:22, line:1034:51> line:1033:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7fdcd5882e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd5882ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7fdcd58834c0 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7fdcd5883450 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd5883780 <line:1037:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7fdcd5883538 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd5883720 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58836b0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd5883cd0 <line:1042:1, line:1045:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7fdcd58837d0 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5883bc0 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd5883b88 <col:29, line:1044:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fdcd5883a58 <line:1042:29, line:1043:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fdcd5883908 <line:1042:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fdcd5883a18 <line:1043:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd5883b48 <line:1044:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd5883c38 <line:1045:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7fdcd5884600 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7fdcd58846a8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd5883810 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd58837d0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5884900 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5884720 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd5884b90 <line:1048:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7fdcd5884c38 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7fdcd5884764 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7fdcd5884760 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd5884720 '_Tp'
| |   |-ClassTemplateDecl 0x7fdcd5884df8 <line:1050:1, line:1051:54> line:1050:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7fdcd5884cb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5884d60 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7fdcd5885070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd58850b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7fdcd5885ca0 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7fdcd5885c30 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd5885f60 <line:1054:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fdcd5885d18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd5885f00 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd5885e90 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58860f8 <line:1059:1, line:1060:78> line:1059:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7fdcd5885fb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5886060 <col:22, line:1060:78> line:1059:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7fdcd5886370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd58863b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7fdcd5886710 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fdcd58866a0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58869d0 <line:1063:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7fdcd5886788 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd5886970 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd5886900 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd5886b68 <line:1068:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7fdcd5886a20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5886ad0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7fdcd5887430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd5887478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7fdcd5887520 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd5886a60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd5886a20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5887768 <line:1069:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fdcd5887598 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd58878a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58879e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fdcd5887a88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd58875e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd5887598 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5887cc8 <line:1071:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd5887b00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd5887e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd5887f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fdcd5887fe8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd5887b40 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd5887b00 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fdcd58888a0 <line:1075:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7fdcd5888060 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd5888840 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58881d0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd5888b88 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fdcd58888f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5888a78 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd5888a28 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd5888af0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fdcd5888e50 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7fdcd5888ef8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd5888930 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd58888f0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5889150 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd5888f70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd58893e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7fdcd58894b8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7fdcd5889480 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7fdcd5888fb0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd5888f70 '_Tp'
| |   |-ClassTemplateDecl 0x7fdcd5889678 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fdcd5889530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58895e0 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fdcd5889930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd5889978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7fdcd5889d10 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fdcd5889ca0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd5889fd0 <line:1087:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fdcd5889d88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd5889f70 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd5889f00 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd588a2b8 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fdcd588a020 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd588a1a8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd588a158 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd588a220 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fdcd588a580 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7fdcd588a628 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd588a060 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd588a020 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd588e8d0 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd588a6a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd588eb60 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7fdcd588ec38 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7fdcd588ec00 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7fdcd588a6e0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd588a6a0 '_Tp'
| |   |-ClassTemplateDecl 0x7fdcd588edf8 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fdcd588ecb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd588ed60 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fdcd588f070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd588f0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7fdcd588f430 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fdcd588f3c0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd588f6f0 <line:1099:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fdcd588f4a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd588f690 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd588f620 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fdcd588f9c8 <line:1106:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fdcd588f740 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd588f930 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7fdcd588f800 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7fdcd588fc58 <line:1107:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fdcd588fa20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd588fbc0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7fdcd588fab8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7fdcd5890050 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
| |   | |-TemplateTypeParmDecl 0x7fdcd588fcb0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd588ffb8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7fdcd58901b8 <line:1123:1, line:1126:1> line:1124:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7fdcd58900a0 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5890120 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7fdcd5890430 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7fdcd5890790 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fdcd5890720 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd5890938 <line:1128:1, line:1131:1> line:1129:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7fdcd5890820 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58908a0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7fdcd5890bb0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7fdcd5890f10 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fdcd5890ea0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58911d0 <line:1134:1, line:1135:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7fdcd5890f88 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd5891170 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd5891100 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58913b0 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7fdcd5891220 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5891288 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fdcd5891318 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7fdcd5893488 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7fdcd5893540 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7fdcd5893668 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7fdcd58937a0 <line:1146:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7fdcd58939b8 <line:1151:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd5893868 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5893920 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fdcd5893c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd5893c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7fdcd5893d20 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd58938b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd5893868 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5893f68 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fdcd5893d98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd58940a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd5895200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fdcd58952a8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd5893de0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd5893d98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58954e8 <line:1153:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7fdcd5895320 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd5895628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd5895760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fdcd5895808 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd5895360 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd5895320 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5895a48 <line:1154:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7fdcd5895880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd5895b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd5895cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fdcd5895d68 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd58958c0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd5895880 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5895fa8 <line:1155:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7fdcd5895de0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd58960e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd5896268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fdcd5896310 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd5895e20 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd5895de0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fdcd58965d0 <line:1158:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fdcd5896388 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd5896570 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd5896500 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd5896ba0 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7fdcd5896620 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5896a90 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd5896a58 <col:16, line:1165:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fdcd5896758 <line:1164:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd5896a18 <line:1165:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd5896b08 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7fdcd5896e60 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7fdcd5897080 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7fdcd5897030 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7fdcd5896fb0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5898330 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58970f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd58985c0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7fdcd5898668 <line:1169:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd5897140 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd58970f8 '_Tp'
| |   |-ClassTemplateDecl 0x7fdcd5898828 <line:1171:1, line:1172:58> line:1171:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7fdcd58986e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5898790 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fdcd5898aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd5898ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7fdcd58990b0 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fdcd5899040 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58993b0 <line:1175:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fdcd5899128 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd5899350 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58992e0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd5899698 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7fdcd5899400 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5899588 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd5899538 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd5899600 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7fdcd5899bf8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5899e90 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5899cb0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd589a160 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7fdcd589a4b8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7fdcd589a220 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd589a3a8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd589a358 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd589a420 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fdcd589a9b8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd589ac50 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd589aa70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd589af20 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7fdcd589b128 <line:1191:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7fdcd589afd8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd589b090 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fdcd589b430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd589b6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7fdcd589ba08 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7fdcd589b770 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd589b8f8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd589b8a8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd589b970 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7fdcd589bf68 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd589c200 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd589c020 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd589c4d0 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7fdcd589c828 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fdcd589c588 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd589c718 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd589c6c8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd589c790 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fdcd589cd28 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd589cfc0 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd589cde0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd589d2a8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7fdcd589d4a8 <line:1211:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fdcd589d360 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd589d410 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fdcd589d720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd589d9a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7fdcd589dba8 <line:1220:1, line:1221:44> line:1220:50 rank
| |   | |-TemplateTypeParmDecl 0x7fdcd589da60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd589db10 <col:22, line:1221:44> line:1220:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fdcd589de20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd589e740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd589e9d8 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fdcd589e7f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd589eb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd589ef48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd589f288 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fdcd589f000 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd589f078 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fdcd589f3d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd589f788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7fdcd589fa38 <line:1234:1, line:1235:44> line:1234:68 extent
| |   | |-TemplateTypeParmDecl 0x7fdcd589f840 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd589f8e0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7fdcd589f938 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7fdcd589f8a8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7fdcd589f9a0 <col:40, line:1235:44> line:1234:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fdcd589fd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd589fe88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a0200 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd589ff40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd58a0388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd58a0638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a09c0 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58a0868 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fdcd58a0770 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fdcd58a06f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58a0770 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7fdcd58a0b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd58a1058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a1430 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58a1110 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58a1188 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fdcd58a15b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd58a18b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a1cf0 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58a1b90 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fdcd58a1a58 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fdcd58a1970 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58a19e8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58a1a58 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7fdcd58a1e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd58a23b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7fdcd58a25b8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7fdcd58a2470 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58a2520 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7fdcd58a2830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd58a2878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7fdcd58a2920 <line:1253:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd58a24b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd58a2470 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a2b78 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fdcd58a2998 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd58a2cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58a2e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fdcd58a2ea8 <line:1255:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd58a29e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd58a2998 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a3200 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fdcd58a2f20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58a2f98 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fdcd58a3348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58a3480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fdcd58a3528 <line:1257:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fdcd58a2f60 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd58a2f20 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fdcd58a37e0 <line:1260:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7fdcd58a35a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd58a3780 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58a3710 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58a3978 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7fdcd58a3830 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58a38e0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7fdcd58a3bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd58a3c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7fdcd58a3ce0 <line:1266:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd58a3870 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fdcd58a3830 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a3f38 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fdcd58a3d58 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd58a4088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58a4200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fdcd58a4400 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58a4390 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a4708 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fdcd58a4478 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58a44f8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fdcd58a4858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58a4990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fdcd58a4b50 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58a4ae0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58a4dd0 <line:1273:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7fdcd58a4bc8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd58a4d70 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58a4d00 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58a4fa8 <line:1278:1, line:1281:1> line:1279:8 __decay
| |   | |-TemplateTypeParmDecl 0x7fdcd58a4e20 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58a4e98 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fdcd58a4f10 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7fdcd58a6290 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7fdcd58a6450 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7fdcd58a63e0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58a66b0 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58a64c8 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7fdcd58a6940 <line:1284:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7fdcd58a69d8 <line:1285:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7fdcd58a7470 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7fdcd58a7400 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58a7638 <line:1299:1, line:1306:1> line:1300:29 decay
| |   | |-TemplateTypeParmDecl 0x7fdcd58a74e8 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58a75a0 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7fdcd58a78b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd58a78f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7fdcd58a7990 <line:1302:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7fdcd58a7ae0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7fdcd58a7a70 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7fdcd58a7b38 <line:1304:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7fdcd58a7f00 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7fdcd58a7e90 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58a8200 <line:1309:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7fdcd58a7f78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd58a8160 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58a80f0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58a8398 <line:1314:1, line:1315:59> line:1314:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7fdcd58a8250 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58a8300 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58a8610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58a87f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7fdcd58a89f8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7fdcd58a88b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58a8960 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58a8c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58a8e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7fdcd58a9058 <line:1333:1, line:1334:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7fdcd58a8f10 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58a8fc0 <col:22, line:1334:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58a92e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58a9468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7fdcd58a96e0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7fdcd58a9520 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fdcd58a9588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7fdcd58a9648 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58a9980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58a9b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7fdcd58a9df0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7fdcd58a9c30 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fdcd58a9c98 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fdcd58a9d58 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58aa090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58ab448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7fdcd58ab648 <line:1489:1, line:1491:56> line:1490:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7fdcd58ab500 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58ab5b0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58ab8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58abaa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7fdcd58abca8 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7fdcd58abb60 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58abc10 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58abf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58ac108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7fdcd58ac308 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7fdcd58ac1c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58ac270 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58ac580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58ac768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7fdcd58ac968 <line:1567:1, line:1568:59> line:1567:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7fdcd58ac820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58ac8d0 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd58acbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58acdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7fdcd58ad010 <line:1577:1, line:1582:1> line:1578:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7fdcd58ace80 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fdcd58acee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7fdcd58acf78 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7fdcd58ad2f0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fdcd58ad398 <line:1580:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7fdcd58acec0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fdcd58ace80 '_Hp'
| |   | | `-TypedefDecl 0x7fdcd58ad400 <line:1581:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fdcd58acf30 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd58acee8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b0d18 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b0f30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b1140 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b1350 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b1600 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b1810 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b1a20 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b1c30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b1e40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b2050 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d00e8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d0300 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d0510 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d0720 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d0930 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d0b40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7fdcd58d8888 prev 0x7fdcd58d0b40 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fdcd58d8958 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7fdcd58d8920 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7fdcd58acec0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fdcd58ace80 '_Hp'
| |   | | |   `-BuiltinType 0x7fdcd5819d80 'signed char'
| |   | | `-TypedefDecl 0x7fdcd58d89e8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7fdcd58d89b0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7fdcd58acf30 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7fdcd58acee8 '_Tp'
| |   | |     `-RecordType 0x7fdcd58d0a30 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7fdcd58d0930 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d0e40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d1050 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d1260 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d1470 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58d1690 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd58d18a0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7fdcd58e0168 prev 0x7fdcd58d18a0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7fdcd58e0238 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7fdcd58e0200 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7fdcd58acec0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fdcd58ace80 '_Hp'
| |   |   |   `-BuiltinType 0x7fdcd5819e20 'unsigned char'
| |   |   `-TypedefDecl 0x7fdcd58e02c8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7fdcd58e0290 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7fdcd58acf30 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7fdcd58acee8 '_Tp'
| |   |       `-RecordType 0x7fdcd58d1790 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7fdcd58d1690 '__type_list'
| |   |-CXXRecordDecl 0x7fdcd58ad478 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7fdcd58ad598 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7fdcd58ad698 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7fdcd58ad840 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fdcd58ad778 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7fdcd58ad9f0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fdcd58ad900 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7fdcd58adae0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fdcd58adae0
| |   |-ClassTemplateDecl 0x7fdcd58adcd8 <line:1594:1, line:1599:1> line:1595:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7fdcd58adbb8 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd58adc40 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7fdcd58adf50 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7fdcd58adff8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7fdcd58ae128 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7fdcd58ae178 <line:1598:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fdcd58adc00 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fdcd58adbb8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58ae700 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58ae8d0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58aeaa0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58aec70 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58aee40 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58af010 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b0600 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b07c8 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7fdcd58b0988 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7fdcd58b0b50 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7fdcd58ae200 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7fdcd58ae328 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7fdcd58ae3d8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7fdcd58ae440 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7fdcd58ae568 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7fdcd58ae680 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7fdcd58b2260 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7fdcd58b2170 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7fdcd58b2150 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fdcd58b2050 '__type_list'
| |   |-ClassTemplateDecl 0x7fdcd58b2448 <line:1618:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7fdcd58b22b8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b2338 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7fdcd58b23b0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58b2ab0 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58b2950 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b2768 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fdcd58b26e8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b2768 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7fdcd58b2d80 <line:1621:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fdcd58b31c0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7fdcd58b3150 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58b3670 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58b34c0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b3328 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fdcd58b3238 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fdcd58b32a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b3328 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7fdcd58b3940 <line:1631:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fdcd58b3f90 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7fdcd58b3f20 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58b4198 <line:1640:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7fdcd58b4008 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b4088 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fdcd58b4100 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58b4760 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58b4600 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4478 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fdcd58b43f8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b4478 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fdcd58b4c48 <line:1643:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fdcd58b4ef8 <line:1645:1, line:1653:1> line:1646:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b4d10 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b4d78 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b4de0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7fdcd58b4e60 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7fdcd58b5250 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7fdcd58b52e8 <line:1648:1, col:8> col:1 private
| |   |   |-VarDecl 0x7fdcd58b5320 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fdcd58b5448 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fdcd58b53d0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fdcd58b5380 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4de0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fdcd58b53a8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4d78 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fdcd58b53f8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4de0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fdcd58b5420 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4d78 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7fdcd58b5488 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fdcd58b55b0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fdcd58b5538 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fdcd58b54e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4d78 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fdcd58b5510 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4de0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fdcd58b5560 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4de0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fdcd58b5588 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4d78 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7fdcd58b5a00 <line:1651:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fdcd58b5a38 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7fdcd58b5ba8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7fdcd58b5b78 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7fdcd58b5b00 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7fdcd58b5a98 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b4d10 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7fdcd58b5ae8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7fdcd58b5ac0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fdcd58b5488 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7fdcd58b5b28 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fdcd58b5320 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7fdcd58b5b50 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fdcd58b5488 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58b5fc0 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58b5e60 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b5cc8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fdcd58b5be0 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fdcd58b5c48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b5cc8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7fdcd58b68d8 <line:1656:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fdcd58b6d38 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b69a0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b6bf8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd58b6ba8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd58b6ca0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7fdcd58b7020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd58b7068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7fdcd58b7320 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7fdcd58b72b0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7fdcd58b75c0 <line:1663:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7fdcd58b74f8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7fdcd58b74b8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7fdcd58b7598 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7fdcd58b75f8 <line:1664:5, line:1668:5> line:1664:11 union type definition
| |   |     |-CXXRecordDecl 0x7fdcd58b7718 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7fdcd58b77c0 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7fdcd58b7e28 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7fdcd58b8330 <line:1672:1, line:1673:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b7ec0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b8088 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd58b8038 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7fdcd58b82d0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7fdcd58b8260 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58b85c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58b8430 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58b8390 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58b8390 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58b8728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58b8890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58b8948 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58b8a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58b8928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7fdcd58b8ab8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58b8d88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58ba460 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58ba2d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58ba230 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58ba230 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58ba5c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58ba730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58ba7e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58ba908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58ba7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7fdcd58ba958 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58bac28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58baef0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58bad60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58bacc0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58bacc0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58bb058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58bb200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58bb2b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58bb3d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58bb298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7fdcd58bb428 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58bb6f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58bb9c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58bb830 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58bb790 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58bb790 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58bbb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58bbc90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58bbd48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58bbe68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58bbd28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7fdcd58bbeb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58bc188 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58bc460 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58bc2d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58bc230 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58bc230 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58bc5c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58bc730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58bc7e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58bc908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58bc7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7fdcd58bc958 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58bcc28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58bcef0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58bcd60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58bccc0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58bccc0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58bd058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58bd1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58bd278 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58bd398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58bd258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7fdcd58bd3e8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58bd6b8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58bd980 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58bd7f0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58bd750 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58bd750 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58bdae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58bdc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58bdd08 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58bde28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58bdce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7fdcd58bde78 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58be148 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58be430 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58be2a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58be200 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58be200 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58be598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58be700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58be7b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58be8d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58be798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7fdcd58be928 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58bebf8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58beec0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58bed30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58bec90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58bec90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58bf028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58bf190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58bf248 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58bf368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58bf228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7fdcd58bf3b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58bf688 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58bf950 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58bf7c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58bf720 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58bf720 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58bfab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58bfc20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58bfcd8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58bfdf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58bfcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7fdcd58bfe48 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58c0118 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58c0430 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58c02a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c0200 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c0200 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58c0598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58c0700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58c07b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58c08d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58c0798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7fdcd58c0928 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58c0bf8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58c0ec0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58c0d30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c0c90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c0c90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58c1028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58c1190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58c1248 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58c1368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58c1228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7fdcd58c13b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58c1688 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58c1950 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58c17c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c1720 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c1720 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58c1ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58c1c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58c1cd8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58c1df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58c1cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7fdcd58c1e48 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58c2118 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58c2430 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58c22a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c2200 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c2200 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58c2598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58c2700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58c27b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58c28d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58c2798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7fdcd58c2928 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58c2bf8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58c2ec0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58c2d30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c2c90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c2c90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fdcd58c3028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd58c3190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fdcd58c3248 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fdcd58c3368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fdcd58c3228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7fdcd58c33b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fdcd58c3688 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7fdcd58c3898 <line:1711:1, line:1712:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c3720 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c3788 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7fdcd58c3800 <line:1712:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58c3d10 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58c3be8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c3b78 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c3b78 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7fdcd58c3fa0 <line:1715:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fdcd58c4048 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7fdcd58c40a8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c3b78 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58c44e0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58c4280 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c4100 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7fdcd58c42a8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c4168 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7fdcd58c42f8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7fdcd58c42d0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c4200 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c4100 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c4168 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c4200 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7fdcd58c47e0 <line:1721:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fdcd58c4888 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7fdcd58c4db8 <col:33, line:1724:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7fdcd58c4938 <line:1723:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7fdcd58c48e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c4100 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7fdcd58c4910 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58c4168 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7fdcd58c4b48 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7fdcd58c4d78 <line:1724:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fdcd58c5038 <line:1727:1, line:1735:1> line:1728:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c4e18 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fdcd58c4e70 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7fdcd58c4ed8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7fdcd58c4fa0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7fdcd58c53d0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7fdcd58c5478 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd58c56d8 <col:43, line:1731:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd58c5728 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd58c5a08 <col:33, line:1733:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7fdcd58c5cb0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7fdcd58c5c40 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58c60d0 <line:1738:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58c5d38 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fdcd58c5d90 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7fdcd58c6070 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7fdcd58c6000 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58c7098 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7fdcd58c6120 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd58c7000 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7fdcd58c7310 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7fdcd58c73f8 <line:1746:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7fdcd58c7538 <line:1747:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c74a8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7fdcd58c76b8 <line:1748:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c75e8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7fdcd58c7838 <line:1749:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c7770 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7fdcd58c79b8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c78f0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7fdcd58c7b38 <line:1751:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c7a70 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7fdcd58c7cb8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c7bf0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7fdcd58c7e38 <line:1753:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c7d70 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7fdcd58c7fb8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c7ef0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7fdcd58c8100 <line:1755:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c8070 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7fdcd58c8248 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7fdcd58c81b8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7fdcd58c8508 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7fdcd58c84d0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7fdcd58c8460 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7fdcd58c82e8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fdcd58c8248 0x7fdcd58c8100 0x7fdcd58c7fb8 0x7fdcd58c7e38 0x7fdcd58c7cb8 0x7fdcd58c7b38 0x7fdcd58c79b8 0x7fdcd58c7838 0x7fdcd58c76b8 0x7fdcd58c7538 0x7fdcd58c73f8
| |   | | |     `-CallExpr 0x7fdcd58c8438 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7fdcd58c83a0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fdcd5890050
| |   | | `-VarDecl 0x7fdcd58c8570 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7fdcd58c8798 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd58c8758 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7fdcd58c87f8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58c87f8 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fdcd58c8a20 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7fdcd58c8ac8 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fdcd58c8b28 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7fdcd58ca6a0 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7fdcd58c8bb8 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fdcd58c8c38 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fdcd58c8cb8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58ca580 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd58ca548 <col:18, line:1773:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7fdcd58c8f98 <line:1771:18, line:1772:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fdcd58c8df8 <line:1771:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fdcd58c8f58 <line:1772:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd58ca508 <line:1773:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd58ca608 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7fdcd58ca9c0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7fdcd58caa58 <line:1776:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fdcd58caa90 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fdcd58caaf0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58caee0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58cab28 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fdcd58cab98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7fdcd58cac08 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7fdcd58cb220 <line:1781:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fdcd58cb2b8 <line:1783:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fdcd58cb890 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fdcd58cb820 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fdcd58cbe40 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fdcd58cbdd0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7fdcd58cce00 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7fdcd58cc380 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7fdcd58cce58 <line:1787:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fdcd58cd058 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7fdcd58cd020 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7fdcd58ccfb8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7fdcd58ccf38 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7fdcd58cceb0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7fdcd58ccf10 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fdcd58ccf90 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7fdcd58cd0c0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fdcd58cd120 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58cd490 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58cd158 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fdcd58cd1c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7fdcd58cd7d0 <line:1793:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fdcd58cd868 <line:1795:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fdcd58cdcc0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fdcd58cdc50 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fdcd58ce150 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fdcd58ce0e0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7fdcd58ce1a8 <line:1798:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fdcd58ce328 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7fdcd58ce2f0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7fdcd58ce288 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7fdcd58ce200 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fdcd58ce260 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7fdcd58ce390 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fdcd58ce3f0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58ce6f0 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58ce428 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7fdcd58cea30 <line:1804:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fdcd58ceac8 <line:1806:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fdcd58cec40 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7fdcd58cebd0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7fdcd58ceca8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fdcd58ced08 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7fdcd58cf768 <line:1811:1, line:1812:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7fdcd58ced40 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fdcd58cedb8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fdcd58cf638 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fdcd58cf6d0 <line:1812:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7fdcd58cff98 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7fdcd58d0d50 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fdcd58d0c60 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fdcd58d0c40 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fdcd58d0b40 '__type_list'
| |   |-TypedefDecl 0x7fdcd58d1ab0 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fdcd58d19c0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fdcd58d19a0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fdcd58d18a0 '__type_list'
| |   |-ClassTemplateDecl 0x7fdcd58d1e50 <line:1846:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7fdcd58d1b08 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58d1b88 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58d1d38 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd58d1d00 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7fdcd58d1be0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58d1b88 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7fdcd58d1ce0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7fdcd58d1db8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d2578 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58d23a0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58d2208 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58d2118 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d2188 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58d2208 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fdcd58d28b0 <line:1849:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fdcd58d2958 <line:1851:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7fdcd58d2160 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd58d2118 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d2e28 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd58d2c50 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fdcd58d2ab8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58d29d0 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d2a38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58d2ab8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fdcd58d3160 <line:1855:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fdcd58d3600 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7fdcd58d3540 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58d3dc8 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7fdcd58d3678 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d36e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58d39d8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd58d3988 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58d3ca8 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd58d3c58 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd58d3d30 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7fdcd58d4110 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7fdcd58d41b8 <line:1864:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7fdcd58d3730 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fdcd58d36e8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d4570 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58d4230 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d4298 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58d48c0 <line:1868:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fdcd58d4968 <line:1870:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7fdcd58d42e1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7fdcd58d42e0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fdcd58d4298 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d4d20 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58d49e0 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d4a48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58d5070 <line:1874:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fdcd58d5118 <line:1876:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7fdcd58d4a94 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7fdcd58d4a90 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fdcd58d4a48 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d54d0 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58d5190 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d51f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58d5870 <line:1880:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fdcd58d5918 <line:1882:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7fdcd58d5245 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7fdcd58d5240 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fdcd58d51f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d5d00 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58d5990 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d59f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58d6050 <line:1886:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fdcd58d6158 <line:1888:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7fdcd58d6120 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7fdcd58d5a40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fdcd58d59f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d6540 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58d61d0 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d6238 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58d6890 <line:1892:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fdcd58d6998 <line:1894:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7fdcd58d6960 'const _Up &' dependent
| |   |     `-QualType 0x7fdcd58d6281 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7fdcd58d6280 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fdcd58d6238 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d6d80 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58d6a10 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d6a78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58d70d0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fdcd58d71d8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7fdcd58d71a0 'volatile _Up &' dependent
| |   |     `-QualType 0x7fdcd58d6ac4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7fdcd58d6ac0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fdcd58d6a78 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d7600 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58d7250 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58d72b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58d7950 <line:1904:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fdcd58d7a58 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7fdcd58d7a20 'const volatile _Up &' dependent
| |   |     `-QualType 0x7fdcd58d7305 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7fdcd58d7300 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fdcd58d72b8 '_Up'
| |   |-ClassTemplateDecl 0x7fdcd58d7ea0 <line:1909:1, line:1910:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7fdcd58d7ad0 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58d7d90 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd58d7d58 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fdcd58d7c08 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd58d7d18 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fdcd58d7e08 <line:1910:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7fdcd58d8160 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7fdcd58d8dd0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58d9138 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58d9518 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58db118 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58db4f8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58db8d8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58dbcb8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58dc098 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58dc478 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fdcd58dc850 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7fdcd58dcc18 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58d8400 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58d8218 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd58d8690 <line:1913:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58d8d20 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fdcd58d8cb0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58d8dd0 <line:1918:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fdcd58d9040 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58d9138 <line:1919:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58d93b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58d9460 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fdcd5819da0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58d9518 <line:1920:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58dafb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58db060 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fdcd5819da0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58db118 <line:1921:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58db390 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58db440 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fdcd5819dc0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58db4f8 <line:1922:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58db770 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58db820 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fdcd5819dc0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58db8d8 <line:1923:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58dbb50 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58dbc00 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fdcd5819de0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58dbcb8 <line:1924:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58dbf30 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58dbfe0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fdcd5819de0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58dc098 <line:1925:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58dc310 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58dc3c0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fdcd5819e00 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58dc478 <line:1926:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58dc6f0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58dc7a0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fdcd5819e00 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58dc850 <line:1928:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58dcac0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58dcb68 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fdcd68639f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fdcd581a260 '__int128_t'
| |   |     `-BuiltinType 0x7fdcd5819f40 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58dcc18 <line:1929:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58dcec0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fdcd58dcf68 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fdcd68639f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fdcd581a260 '__int128_t'
| |   |     `-BuiltinType 0x7fdcd5819f40 '__int128'
| |   |-ClassTemplateDecl 0x7fdcd58dd128 <line:1932:1, line:1936:1> line:1933:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7fdcd58dcfe0 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58dd090 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7fdcd58dd3a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd58dd3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7fdcd58de0a0 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fdcd58de030 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58de360 <line:1939:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7fdcd58de118 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd58de300 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58de290 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58de780 <line:1942:1, line:1943:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fdcd58de3b0 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58de670 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd58de638 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fdcd58de4e8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd58de5f8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fdcd58de6e8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7fdcd58dea40 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7fdcd58e06b0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58e0a18 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58e0df8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58e11d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58e15b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58e1998 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58e9e00 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58ea1d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58ea5b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fdcd58ea990 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7fdcd58ead58 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58dece0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58deaf8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd58dff70 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58e0600 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fdcd58e0590 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58e06b0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fdcd58e0920 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58e0a18 <line:1952:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58e0c90 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58e0d40 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fdcd5819e40 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58e0df8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58e1070 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58e1120 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fdcd5819e40 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58e11d8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58e1450 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58e1500 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fdcd5819e60 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58e15b8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58e1830 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58e18e0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fdcd5819e60 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58e1998 <line:1956:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58e1c10 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58e1cc0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fdcd5819e80 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58e9e00 <line:1957:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58ea070 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58ea120 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fdcd5819e80 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58ea1d8 <line:1958:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58ea450 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58ea500 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fdcd5819ea0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58ea5b8 <line:1959:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58ea830 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58ea8e0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fdcd5819ea0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58ea990 <line:1961:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58eac00 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58eaca8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fdcd6863d60 '__uint128_t' sugar
| |   |     |-Typedef 0x7fdcd581a2d0 '__uint128_t'
| |   |     `-BuiltinType 0x7fdcd5819f60 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd58ead58 <line:1962:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd58eafd0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fdcd58eb078 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fdcd6863d60 '__uint128_t' sugar
| |   |     |-Typedef 0x7fdcd581a2d0 '__uint128_t'
| |   |     `-BuiltinType 0x7fdcd5819f60 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7fdcd58eb238 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fdcd58eb0f0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58eb1a0 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7fdcd58eb4b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd58eb4f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7fdcd58ec0b0 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fdcd58ec040 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58ec370 <line:1972:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7fdcd58ec128 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd58ec310 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd58ec2a0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58ec508 <line:2010:1, line:2011:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7fdcd58ec3c0 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7fdcd58ec470 <line:2011:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7fdcd58ec7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd58ec828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58ecaa8 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd58ec8e0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd58ecc18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd58ecef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fdcd58ed1c8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7fdcd58ecfb0 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58ed018 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fdcd58ed098 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fdcd58ed130 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7fdcd58ed4a0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58edc98 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd58ed558 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58ed5c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58ee3c0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7fdcd58ee880 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7fdcd58ee810 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd58ef790 <line:2035:1, line:2043:6> line:2038:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7fdcd58ee8f8 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58ee968 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fdcd58eeb00 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd58eed20 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7fdcd58ef730 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7fdcd58ef6c0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58efa98 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fdcd58ef7e0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58ef848 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7fdcd58efc48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd58f1ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fdcd58f1c98 <line:2051:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7fdcd58f1b78 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7fdcd58f1c00 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7fdcd58f20b0 <line:2053:1, line:2054:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7fdcd58f1f08 <line:2053:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58f1f88 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fdcd58f2018 <line:2054:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7fdcd58f2350 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58f2ba0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd58f2408 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58f2478 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fdcd58f2f20 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7fdcd58f3180 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7fdcd58f3110 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58f3a00 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd58f31f8 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58f3268 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fdcd58f32d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7fdcd58f41e8 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd58f4678 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fdcd58f42a0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58f4308 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fdcd58f4378 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7fdcd58f4868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd58f4d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7fdcd58f50b0 <line:2078:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7fdcd58f4e00 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7fdcd58f5050 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7fdcd58f4fe0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd58f5290 <line:2085:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7fdcd58f5100 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58f5168 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fdcd58f51f8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7fdcd58f5530 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7fdcd58f55d8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fdcd58f51b0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fdcd58f5168 '_Tp'
| |   |-FunctionTemplateDecl 0x7fdcd58f5dc8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fdcd58f5650 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58f56b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7fdcd58f5d30 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7fdcd58f5c18 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7fdcd58f6038 <line:2091:1, line:2092:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fdcd58f5e20 <line:2091:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fdcd58f5e88 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7fdcd58f5fa0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7fdcd58f6528 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7fdcd58f6088 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58f60f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7fdcd58f6410 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fdcd58f63d8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fdcd58f6238 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fdcd58f6398 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd58f6490 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7fdcd58f6a98 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5903ea0 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd58f6b50 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd58f6bb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fdcd59041c0 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7fdcd5904410 <line:2105:1, line:2107:46> line:2106:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd5904278 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd59042e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fdcd5904378 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7fdcd5904aa8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7fdcd5904ca8 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd5904b60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5904c10 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5904f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5905488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7fdcd5905688 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd5905540 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd59055f0 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5905900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5905cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7fdcd5905e98 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7fdcd5905d80 <line:2149:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fdcd5905e00 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7fdcd5906110 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7fdcd59061c0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7fdcd5819dc0 'int'
| |   |-ClassTemplateDecl 0x7fdcd5906358 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7fdcd5906238 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd59062c0 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7fdcd59065d0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7fdcd5906ce8 <line:2154:5, line:2157:5> line:2155:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fdcd5906668 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fdcd5906c50 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7fdcd5906b20 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7fdcd5906e78 <line:2159:5, line:2160:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fdcd5906d40 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fdcd5906de0 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7fdcd5906ed8 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7fdcd59070c0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7fdcd5907070 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7fdcd5907050 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7fdcd5907020 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7fdcd5906f60 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fdcd5906e78 0x7fdcd5906ce8
| |   |       |     `-IntegerLiteral 0x7fdcd5907000 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7fdcd59070a0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7fdcd5907298 <line:2165:1, line:2166:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7fdcd5907108 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5907188 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fdcd5907200 <line:2166:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59076e0 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd59074f8 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5908218 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59084b0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd59082d0 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd59087f0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7fdcd5908a38 <line:2177:1, line:2178:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7fdcd59088a8 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5908928 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fdcd59089a0 <line:2178:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5908e80 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5908c98 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd59093c8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5909660 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd5909480 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd59099a0 <line:2184:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7fdcd5909b78 <line:2186:1, line:2188:73> line:2187:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7fdcd5909a58 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd5909ae0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7fdcd590a0a8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7fdcd590a6c8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd590a328 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fdcd590a160 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd590a5f0 <line:2191:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7fdcd590a6c8 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fdcd590a970 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7fdcd590ae38 <line:2207:1, line:2214:1> line:2210:1 move
| |   | |-TemplateTypeParmDecl 0x7fdcd590aa28 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd590ada0 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fdcd590ac18 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fdcd590b150 <line:2211:1, line:2214:1>
| |   |   | |-DeclStmt 0x7fdcd590b068 <line:2212:5, col:53>
| |   |   | | `-TypedefDecl 0x7fdcd590b010 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7fdcd590afa0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7fdcd590b138 <line:2213:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fdcd590b108 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fdcd590b0a0 <col:31> '_Tp' lvalue ParmVar 0x7fdcd590ac18 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd590ae90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd590aed8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd590b580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
| |   | |-TemplateTypeParmDecl 0x7fdcd590b178 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd590b4e8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fdcd590b3b0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7fdcd590b6b0 <line:2220:1, line:2222:1>
| |   |   | `-ReturnStmt 0x7fdcd590b698 <line:2221:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fdcd590b668 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fdcd590b630 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fdcd590b3b0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7fdcd590b5d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd590b620 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd590baa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
| |   | |-TemplateTypeParmDecl 0x7fdcd590b6d0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd590ba08 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fdcd590b8d0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7fdcd590be18 <line:2228:1, line:2232:1>
| |   |   | |-DeclStmt 0x7fdcd590bd80 <line:2229:5, line:2230:60>
| |   |   | | `-StaticAssertDecl 0x7fdcd590bd48 <line:2229:5, line:2230:59> line:2229:5
| |   |   | |   |-UnaryOperator 0x7fdcd590bc58 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7fdcd590bc18 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7fdcd590bcf8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7fdcd590be00 <line:2231:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fdcd590bdd0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fdcd590bd98 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fdcd590b8d0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd590baf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd590bb40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd590c200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7fdcd590be40 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd590c140 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7fdcd590c028 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fdcd590c418 <line:2281:1, line:2283:1>
| |   |   | `-ReturnStmt 0x7fdcd590c400 <line:2282:5, col:35>
| |   |   |   `-CallExpr 0x7fdcd590c3d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fdcd590c308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     `-DeclRefExpr 0x7fdcd590c3a8 <col:32> '_Tp' lvalue ParmVar 0x7fdcd590c028 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd590c258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd590c2a0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd590c9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd590c438 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd590c4a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd590c518 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd590ccd0 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd590cd78 <line:2302:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fdcd590c4f0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fdcd590c4a8 '_Class'
| |   | |-TypedefDecl 0x7fdcd590cde0 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd590c480 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd590c438 '_Rp'
| |   | `-TypedefDecl 0x7fdcd590ced8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd590c710 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd590c6d0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd590c480 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd590c438 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd590c5f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd590c560 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd590c518 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd590d4c8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd590cf50 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd590cfb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd590d028 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd590d7e0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd590d888 <line:2310:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fdcd590d000 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fdcd590cfb8 '_Class'
| |   | |-TypedefDecl 0x7fdcd590d8f0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd590cf90 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd590cf50 '_Rp'
| |   | `-TypedefDecl 0x7fdcd590d9e8 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd590d220 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd590d1e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd590cf90 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd590cf50 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd590d100 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd590d070 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd590d028 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd590dfd8 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd590da60 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd590dac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd590db38 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd590eb50 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd590ebf8 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fdcd590db11 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fdcd590db10 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd590dac8 '_Class'
| |   | |-TypedefDecl 0x7fdcd590ec60 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd590daa0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd590da60 '_Rp'
| |   | `-TypedefDecl 0x7fdcd590edc8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd590ed70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd590ed30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd590daa0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd590da60 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd590dc10 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd590db80 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd590db38 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd590f3b8 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd590ee40 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd590eea8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd590ef18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd590f6d0 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd590f778 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fdcd590eef1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fdcd590eef0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd590eea8 '_Class'
| |   | |-TypedefDecl 0x7fdcd590f7e0 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd590ee80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd590ee40 '_Rp'
| |   | `-TypedefDecl 0x7fdcd590f948 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd590f8f0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd590f8b0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd590ee80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd590ee40 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd590eff0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd590ef60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd590ef18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd590ff38 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd590f9c0 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd590fa28 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd590fa98 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd5910250 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd59102f8 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fdcd590fa74 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fdcd590fa70 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd590fa28 '_Class'
| |   | |-TypedefDecl 0x7fdcd5910360 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd590fa00 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd590f9c0 '_Rp'
| |   | `-TypedefDecl 0x7fdcd59104c8 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd5910470 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5910430 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd590fa00 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd590f9c0 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd590fb70 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd590fae0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd590fa98 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5911718 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5910540 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd59105a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5910618 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd5911a30 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd5911ad8 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fdcd59105f4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fdcd59105f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd59105a8 '_Class'
| |   | |-TypedefDecl 0x7fdcd5911b40 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd5910580 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd5910540 '_Rp'
| |   | `-TypedefDecl 0x7fdcd5911ca8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd5911c50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5911c10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd5910580 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd5910540 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd59106f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd5910660 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd5910618 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5912298 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5911d20 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5911d88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5911df8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd59125b0 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd5912658 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fdcd5911dd5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fdcd5911dd0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd5911d88 '_Class'
| |   | |-TypedefDecl 0x7fdcd59126c0 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd5911d60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd5911d20 '_Rp'
| |   | `-TypedefDecl 0x7fdcd5912828 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd59127d0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5912790 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd5911d60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd5911d20 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd5911ed0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd5911e40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd5911df8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5912e18 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd59128a0 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5912908 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5912978 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd5913130 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd59131d8 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fdcd5912955 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fdcd5912950 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd5912908 '_Class'
| |   | |-TypedefDecl 0x7fdcd5913240 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd59128e0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd59128a0 '_Rp'
| |   | `-TypedefDecl 0x7fdcd59133a8 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd5913350 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5913310 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd59128e0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd59128a0 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd5912a50 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd59129c0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd5912978 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5914598 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5913420 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5913488 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd59134f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd59148b0 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd5914988 <line:2369:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fdcd5914950 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fdcd59134d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd5913488 '_Class'
| |   | |-TypedefDecl 0x7fdcd59149f0 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd5913460 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd5913420 '_Rp'
| |   | `-TypedefDecl 0x7fdcd5914b58 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd5914b00 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5914ac0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd5913460 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd5913420 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd59135d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd5913540 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd59134f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5915148 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5914bd0 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5914c38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5914ca8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd5915460 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd5915538 <line:2377:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fdcd5915500 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fdcd5914c80 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd5914c38 '_Class'
| |   | |-TypedefDecl 0x7fdcd59155a0 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd5914c10 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd5914bd0 '_Rp'
| |   | `-TypedefDecl 0x7fdcd5915708 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd59156b0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5915670 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd5914c10 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd5914bd0 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd5914d80 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd5914cf0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd5914ca8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5915cf8 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5915780 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd59157e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5915858 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd5916010 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd59160e8 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fdcd59160b0 'const _Class &' dependent
| |   | |   `-QualType 0x7fdcd5915831 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fdcd5915830 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd59157e8 '_Class'
| |   | |-TypedefDecl 0x7fdcd5916150 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd59157c0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd5915780 '_Rp'
| |   | `-TypedefDecl 0x7fdcd5916ef8 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd5916ea0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5916e60 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd59157c0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd5915780 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd5915930 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd59158a0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd5915858 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59174e8 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5916f70 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5916fd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5917048 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd5917800 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd59178d8 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fdcd59178a0 'const _Class &' dependent
| |   | |   `-QualType 0x7fdcd5917021 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fdcd5917020 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd5916fd8 '_Class'
| |   | |-TypedefDecl 0x7fdcd5917940 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd5916fb0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd5916f70 '_Rp'
| |   | `-TypedefDecl 0x7fdcd5917aa8 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd5917a50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5917a10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd5916fb0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd5916f70 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd5917120 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd5917090 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd5917048 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5918098 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5917b20 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5917b88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5917bf8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd59183b0 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd5918488 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fdcd5918450 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fdcd5917bd4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fdcd5917bd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd5917b88 '_Class'
| |   | |-TypedefDecl 0x7fdcd59184f0 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd5917b60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd5917b20 '_Rp'
| |   | `-TypedefDecl 0x7fdcd5918658 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd5918600 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd59185c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd5917b60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd5917b20 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd5917cd0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd5917c40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd5917bf8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5918c48 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd59186d0 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5918738 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd59187a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd5919770 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd5919848 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fdcd5919810 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fdcd5918784 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fdcd5918780 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd5918738 '_Class'
| |   | |-TypedefDecl 0x7fdcd59198b0 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd5918710 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd59186d0 '_Rp'
| |   | `-TypedefDecl 0x7fdcd5919a18 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd59199c0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd5919980 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd5918710 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd59186d0 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd5918880 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd59187f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd59187a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd591a008 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5919a90 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5919af8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5919b68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd591a320 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd591a3f8 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fdcd591a3c0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fdcd5919b45 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fdcd5919b40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd5919af8 '_Class'
| |   | |-TypedefDecl 0x7fdcd591a460 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd5919ad0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd5919a90 '_Rp'
| |   | `-TypedefDecl 0x7fdcd591a5c8 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd591a570 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd591a530 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd5919ad0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd5919a90 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd5919c40 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd5919bb0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd5919b68 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd591abb8 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd591a640 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd591a6a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd591a718 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd591aed0 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd591afa8 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fdcd591af70 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fdcd591a6f5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fdcd591a6f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd591a6a8 '_Class'
| |   | |-TypedefDecl 0x7fdcd591b010 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd591a680 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd591a640 '_Rp'
| |   | `-TypedefDecl 0x7fdcd591b178 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd591b120 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd591b0e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd591a680 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd591a640 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd591a7f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd591a760 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd591a718 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd588b598 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd591b1f0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd591b258 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd591b2c8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd588b8b0 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd588b9b8 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fdcd588b980 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fdcd591b2a0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd591b258 '_Class'
| |   | |-TypedefDecl 0x7fdcd588ba20 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd591b230 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd591b1f0 '_Rp'
| |   | `-TypedefDecl 0x7fdcd588bb88 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd588bb30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd588baf0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd591b230 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd591b1f0 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd591b3a0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd591b310 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd591b2c8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd588c178 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd588bc00 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd588bc68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd588bcd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd588c490 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd588c568 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fdcd588c530 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fdcd588bcb0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fdcd588bc68 '_Class'
| |   | |-TypedefDecl 0x7fdcd588c5d0 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd588bc40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd588bc00 '_Rp'
| |   | `-TypedefDecl 0x7fdcd588c738 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd588c6e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd588c6a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd588bc40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd588bc00 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd588bdb0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd588bd20 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd588bcd8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd588cd28 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd588c7b0 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd588c818 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd588c888 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd588d040 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd588d148 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fdcd588d110 'const _Class &&' dependent
| |   | |   `-QualType 0x7fdcd588c861 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fdcd588c860 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd588c818 '_Class'
| |   | |-TypedefDecl 0x7fdcd588d1b0 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd588c7f0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd588c7b0 '_Rp'
| |   | `-TypedefDecl 0x7fdcd588d318 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd588d2c0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd588d280 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd588c7f0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd588c7b0 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd588c960 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd588c8d0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd588c888 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd591c508 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd588d390 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd591c000 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd591c068 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd591c820 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd591c8f8 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fdcd591c8c0 'const _Class &&' dependent
| |   | |   `-QualType 0x7fdcd591c041 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fdcd591c040 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd591c000 '_Class'
| |   | |-TypedefDecl 0x7fdcd591c960 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd588d3d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd588d390 '_Rp'
| |   | `-TypedefDecl 0x7fdcd591cac8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd591ca70 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd591ca30 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd588d3d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd588d390 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd591c140 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd591c0b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd591c068 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd591d0b8 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd591cb40 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd591cba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd591cc18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd591d3d0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd591d4d8 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fdcd591d4a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fdcd591cbf4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fdcd591cbf0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd591cba8 '_Class'
| |   | |-TypedefDecl 0x7fdcd591d540 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd591cb80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd591cb40 '_Rp'
| |   | `-TypedefDecl 0x7fdcd591d6a8 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd591d650 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd591d610 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd591cb80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd591cb40 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd591ccf0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd591cc60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd591cc18 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd591dc98 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd591d720 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd591d788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd591d7f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd591e000 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd591e0d8 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fdcd591e0a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fdcd591d7d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fdcd591d7d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd591d788 '_Class'
| |   | |-TypedefDecl 0x7fdcd591e140 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd591d760 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd591d720 '_Rp'
| |   | `-TypedefDecl 0x7fdcd591e2a8 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd591e250 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd591e210 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd591d760 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd591d720 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd591d8d0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd591d840 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd591d7f8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd591e898 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd591e320 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd591e388 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd591e3f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd591ebb0 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd591ecb8 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fdcd591ec80 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fdcd591e3d5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fdcd591e3d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd591e388 '_Class'
| |   | |-TypedefDecl 0x7fdcd591ed20 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd591e360 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd591e320 '_Rp'
| |   | `-TypedefDecl 0x7fdcd591ee88 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fdcd591ee30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd591edf0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd591e360 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd591e320 '_Rp'
| |   |       `-PackExpansionType 0x7fdcd591e4d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fdcd591e440 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fdcd591e3f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd591f478 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd591ef00 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd591ef68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd591efd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fdcd591f790 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd591f868 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fdcd591f830 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fdcd591efb5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fdcd591efb0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fdcd591ef68 '_Class'
| |   | |-TypedefDecl 0x7fdcd591f8d0 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fdcd591ef40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd591ef00 '_Rp'
| |   | `-TypedefDecl 0x7fdcd591fa38 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fdcd591f9e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fdcd591f9a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fdcd591ef40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fdcd591ef00 '_Rp'
| |   |       |-PackExpansionType 0x7fdcd591f0b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fdcd591f020 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fdcd591efd8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd591fe08 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd591fab0 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd591fb18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7fdcd5920d50 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fdcd5920df8 <line:2759:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fdcd591fb60 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fdcd591fb18 '_Class'
| |   | `-TypedefDecl 0x7fdcd5920e60 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7fdcd591faf0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fdcd591fab0 '_Rp'
| |   |-ClassTemplateDecl 0x7fdcd5920ff8 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7fdcd5920ed8 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7fdcd5920f60 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7fdcd5921778 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7fdcd5921948 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7fdcd5921830 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7fdcd59218b0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7fdcd5921bc0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5921ee8 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fdcd5921c78 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fdcd5921ce8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7fdcd5922130 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7fdcd59221d8 <line:2780:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7fdcd5921d30 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fdcd5921ce8 '_ClassType'
| |   |-ClassTemplateDecl 0x7fdcd5922368 <line:2785:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7fdcd5922250 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7fdcd59222d0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7fdcd5922578 <line:2937:1, line:2940:1> line:2937:11 __is_construct
| |   | `-CXXRecordDecl 0x7fdcd59225e0 <line:2939:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7fdcd5922708 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7fdcd5922980 <line:3059:1, line:3062:6> line:3060:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd59227c0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5922828 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd59228e8 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5923090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5923298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7fdcd5923498 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd5923350 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5923400 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5923710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5923878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7fdcd5923a78 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd5923930 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd59239e0 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5923cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd59240e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7fdcd59242e8 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd59241a0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5924250 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5924560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5924848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7fdcd5924ac0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd5924900 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5924968 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd5924a28 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5924dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5929000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7fdcd5929208 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd59290b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5929170 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5929480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd59295e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7fdcd59297e8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd59296a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5929750 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5929a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5929dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7fdcd5929fd8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd5929e90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5929f40 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd592a250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd592a538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7fdcd592a780 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd592a5f0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd592a658 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fdcd592a6e8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7fdcd592abd8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7fdcd592add8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd592ac90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd592ad40 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd592d268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd592d738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7fdcd592d938 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd592d7f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd592d8a0 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd592dbb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd592df78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7fdcd592e178 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7fdcd592e030 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd592e0e0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd592e3f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd592e738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7fdcd592ea60 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7fdcd592e800 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7fdcd592e868 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7fdcd592e8c0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd592e928 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd592e9c8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd592f200 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fdcd592eda8 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd592ee18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd592f848 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7fdcd592fb30 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7fdcd592f900 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd592fa98 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7fdcd592f990 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7fdcd592fb88 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd592ff10 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fdcd592fba0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd592fc08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fdcd59305c8 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5930aa0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd59307f8 <col:69> '_Bool' NonTypeTemplateParm 0x7fdcd59306f8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fdcd5930680 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd59306f8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7fdcd5930750 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd5930e40 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fdcd59310c0 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd5930ef8 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5930f68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd5931028 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7fdcd59314b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5931a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5931d70 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7fdcd5931ac0 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5931b38 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fdcd5931ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd5932418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fdcd5932618 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd59324d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5932580 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5932890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd59329f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7fdcd5932bf8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd5932ab0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5932b60 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5932e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5935278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7fdcd5935478 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fdcd5935330 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd59353e0 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd59356f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd59359d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7fdcd5935c98 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7fdcd5935aa0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fdcd5935af8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5935b68 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7fdcd5935c00 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5936208 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fdcd5935f38 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5935fa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fdcd5936530 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59368b8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fdcd59365e8 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5936658 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fdcd5936f58 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fdcd5939200 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd5937010 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fdcd5937078 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fdcd5937138 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7fdcd59394a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5939818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fdcd5939a18 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd59398d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5939980 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd5939c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd593a168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7fdcd593a368 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fdcd593a220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593a2d0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd593a5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd593a9a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7fdcd593abf0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7fdcd593aa70 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fdcd593aac8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593ab58 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd593b030 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd593ae48 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593b300 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd593b5a0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd593b3b8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593bb48 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fdcd593bd48 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7fdcd593bc00 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593bcb0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7fdcd593bfc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd593c278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd593c5b8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fdcd593c330 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd593c3a8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fdcd593c708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd593c8f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd593cb78 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fdcd593c9b0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd593ccb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd593ce30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd593d0b8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd593cee8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd593d200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd593d380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fdcd593d588 <line:3925:1, line:3926:54> line:3925:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7fdcd593d438 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593d4f0 <col:22, line:3926:54> line:3925:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd593d800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd593d9e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7fdcd593dbe8 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7fdcd593daa0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593db50 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd593de60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd593e048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7fdcd593e248 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7fdcd593e100 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593e1b0 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd593e4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd593e6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7fdcd593e8a8 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7fdcd593e760 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593e810 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd593eb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd593ed08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7fdcd593ef08 <line:3993:1, line:4000:6> line:3993:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7fdcd593edc0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd593ee70 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fdcd593f180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fdcd5940378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7fdcd5940548 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7fdcd5940430 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd59404b0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fdcd5940800 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5940ad8 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7fdcd59408b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5940d80 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7fdcd5940f58 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fdcd5940e38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5940ec0 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7fdcd59413e8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7fdcd59415b8 <line:4016:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7fdcd59414a0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7fdcd5941520 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7fdcd5941838 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd5941838 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fdcd5941a30 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5941e98 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fdcd5941ae8 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fdcd5941b58 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7fdcd5941bc8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7fdcd59424e0 <line:4024:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59427a8 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd5942598 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7fdcd5942b68 <line:4031:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5942d68 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd5942c20 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd5942fd0 <line:4037:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7fdcd59431b8 <line:4039:5, col:60> col:5
| |   |   |-BinaryOperator 0x7fdcd59430d0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7fdcd5943078 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7fdcd59430b8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7fdcd5943098 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7fdcd5943178 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59433d8 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fdcd5943210 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5943728 <line:4043:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59439a8 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd59437e0 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd5943cf8 <line:4049:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5944200 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fdcd5943db0 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5943e18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd5944568 <line:4055:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5944988 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fdcd5944620 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd5944c10 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5944fd8 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fdcd5944cc8 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5944d38 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd5945338 <line:4066:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5945678 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fdcd59453f0 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd59458f0 <line:4072:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5945df8 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7fdcd59459a8 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5945a18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5945a88 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd5946200 <line:4077:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5946708 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7fdcd59462b8 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5946328 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5946398 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd5946a78 <line:4083:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5946f78 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7fdcd5946b30 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5946b98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5946c08 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd59472e8 <line:4089:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59477e8 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7fdcd59473a0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5947408 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5947478 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd5947b58 <line:4095:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5948058 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7fdcd5947c10 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5947c78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5947ce8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd59483d8 <line:4101:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59488d8 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7fdcd5948490 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd59484f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5948568 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd5948c48 <line:4107:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd5949148 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7fdcd5948d00 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5948d68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5948dd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd59494b8 <line:4113:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd59499b8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7fdcd5949570 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd59495d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5949648 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd5949d28 <line:4119:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd594a240 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd5949de0 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd5949e48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd5949eb8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd594a5a8 <line:4125:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd594aaa8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd594a660 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd594a6c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd594a738 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd594ae18 <line:4131:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd594b318 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd594aed0 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd594af38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd594afa8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd594b688 <line:4137:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd594bb88 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fdcd594b740 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd594b7a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fdcd594b818 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fdcd594bef8 <line:4143:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd594c288 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fdcd594bfb0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fdcd594c018 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fdcd594c5e8 <line:4149:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7fdcd594d2a0 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7fdcd594c6a0 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd594c708 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd594c8a0 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd594ca30 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd594cc50 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fdcd594d240 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fdcd594d1d0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd594dbf0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7fdcd594d2f0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd594d358 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd594d4f0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd594d680 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fdcd594db90 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fdcd594db20 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd594fa10 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7fdcd594dc40 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd594dca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd594de40 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd594dfd0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd594e160 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fdcd594f9b0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fdcd594f940 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd5950530 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7fdcd594fa60 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd594fac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd594fc60 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd594fdf0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd594ff80 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fdcd59504d0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fdcd5950460 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd5950e10 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7fdcd5950580 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd59505e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd5950780 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd5950910 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fdcd5950db0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fdcd5950d40 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fdcd5952a50 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7fdcd5950e60 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd5950ec8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd5951060 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd59511f0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fdcd5951380 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fdcd59529f0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fdcd5952980 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7fdcd5952e48 <line:4223:1, line:4224:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7fdcd5952aa0 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fdcd5952db0 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fdcd5952b30 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fdcd5952c68 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fdcd5953198 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fdcd5952ea8 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fdcd5953100 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fdcd5952f40 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fdcd5953018 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fdcd5956ae8 <line:4231:1, line:4221:27> line:4235:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fdcd59531f8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd5953268 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd59532d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fdcd5953e28 <line:4232:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd5956a50 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fdcd5953f38 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd5953fd8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fdcd5954118 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fdcd5956f38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd5956f20 <col:7, line:4236:88>
| |   |   |   `-CallExpr 0x7fdcd5956ef0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fdcd5956d60 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fdcd5956d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fdcd5956ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fdcd5956c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     |   | `-DeclRefExpr 0x7fdcd5956cb8 <col:44> '_A0' lvalue ParmVar 0x7fdcd5953fd8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fdcd5956d10 <col:51> '_Fp' lvalue ParmVar 0x7fdcd5953f38 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fdcd5956ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd5956ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fdcd5956dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |         `-DeclRefExpr 0x7fdcd5956e78 <col:78> '_Args &&...' lvalue ParmVar 0x7fdcd5954118 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fdcd5956b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd5956b98 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd5958400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fdcd5956f58 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd5956fc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd5957038 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fdcd5957868 <line:4239:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd5958340 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fdcd5957978 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd5957a18 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fdcd5957af8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fdcd5958850 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd5958838 <col:7, line:4243:88>
| |   |   |   `-CallExpr 0x7fdcd5958808 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fdcd5958678 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fdcd5958650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fdcd59585f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fdcd5958530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     |   | `-DeclRefExpr 0x7fdcd59585d0 <col:44> '_A0' lvalue ParmVar 0x7fdcd5957a18 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fdcd5958628 <col:51> '_Fp' lvalue ParmVar 0x7fdcd5957978 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fdcd59587e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd59587b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fdcd59586f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |         `-DeclRefExpr 0x7fdcd5958790 <col:78> '_Args &&...' lvalue ParmVar 0x7fdcd5957af8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fdcd5958468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd59584b0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd5959c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fdcd5958870 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd59588d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd5958948 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fdcd5959208 <line:4246:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd5959bf0 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fdcd5959318 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd59593b8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fdcd5959498 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fdcd595a018 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd595a000 <col:7, line:4250:73>
| |   |   |   `-CallExpr 0x7fdcd5959fd0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fdcd5959e40 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fdcd5959e18 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fdcd5959dc8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fdcd5959d70 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fdcd5959d48 <col:24> '_A0' lvalue ParmVar 0x7fdcd59593b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fdcd5959df0 <col:36> '_Fp' lvalue ParmVar 0x7fdcd5959318 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fdcd5959fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd5959f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fdcd5959eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |         `-DeclRefExpr 0x7fdcd5959f58 <col:63> '_Args &&...' lvalue ParmVar 0x7fdcd5959498 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fdcd5959cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd5959d38 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd40949f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fdcd595a038 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd595a0a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd595a118 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fdcd4094008 <line:4253:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd4094960 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fdcd4094118 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd40941b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fdcd4094298 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fdcd4094d88 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd4094d70 <col:7, line:4257:73>
| |   |   |   `-CallExpr 0x7fdcd4094d40 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fdcd4094bb0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fdcd4094b88 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fdcd4094b38 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fdcd4094ae0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fdcd4094ab8 <col:24> '_A0' lvalue ParmVar 0x7fdcd40941b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fdcd4094b60 <col:36> '_Fp' lvalue ParmVar 0x7fdcd4094118 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fdcd4094d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd4094cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fdcd4094c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |         `-DeclRefExpr 0x7fdcd4094cc8 <col:63> '_Args &&...' lvalue ParmVar 0x7fdcd4094298 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fdcd4094a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd4094aa8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd4096608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fdcd4094da8 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd4094e18 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd4094e88 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fdcd40959b8 <line:4260:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd4096570 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fdcd4095ac8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd4095b68 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fdcd4095c48 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fdcd4096a80 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd4096a68 <col:7, line:4264:91>
| |   |   |   `-CallExpr 0x7fdcd4096a38 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fdcd40968a8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fdcd4096880 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fdcd4096838 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fdcd4096818 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fdcd40967e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fdcd4096720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     |   |     `-DeclRefExpr 0x7fdcd40967c0 <col:46> '_A0' lvalue ParmVar 0x7fdcd4095b68 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fdcd4096858 <col:54> '_Fp' lvalue ParmVar 0x7fdcd4095ac8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fdcd4096a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd40969e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fdcd4096920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |         `-DeclRefExpr 0x7fdcd40969c0 <col:81> '_Args &&...' lvalue ParmVar 0x7fdcd4095c48 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fdcd4096670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd40966b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd40980c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fdcd4096aa0 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd4096b08 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd4096b78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fdcd4097508 <line:4267:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd4098030 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fdcd4097618 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd40976b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fdcd4097798 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fdcd4098540 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd4098528 <col:7, line:4271:91>
| |   |   |   `-CallExpr 0x7fdcd40984f8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fdcd4098368 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fdcd4098340 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fdcd40982f8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fdcd40982d8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fdcd40982a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fdcd40981e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     |   |     `-DeclRefExpr 0x7fdcd4098280 <col:46> '_A0' lvalue ParmVar 0x7fdcd40976b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fdcd4098318 <col:54> '_Fp' lvalue ParmVar 0x7fdcd4097618 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fdcd40984d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd40984a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fdcd40983e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |         `-DeclRefExpr 0x7fdcd4098480 <col:81> '_Args &&...' lvalue ParmVar 0x7fdcd4097798 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fdcd4098130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd4098178 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd4099738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fdcd4098560 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40985c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd4098ff8 <line:4276:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd40996a0 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fdcd40990f8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd4099198 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fdcd40999a8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd4099990 <col:7, line:4280:50>
| |   |   |   `-BinaryOperator 0x7fdcd4099968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fdcd4099910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fdcd4099848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     | `-DeclRefExpr 0x7fdcd40998e8 <col:43> '_A0' lvalue ParmVar 0x7fdcd4099198 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fdcd4099940 <col:50> '_Fp' lvalue ParmVar 0x7fdcd40990f8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd4099798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd40997e0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd409a948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fdcd40999c8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd4099a38 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd409a288 <line:4283:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd409a8b0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fdcd409a388 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd409a428 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fdcd409abb8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd409aba0 <col:7, line:4287:50>
| |   |   |   `-BinaryOperator 0x7fdcd409ab78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fdcd409ab20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fdcd409aa58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     | `-DeclRefExpr 0x7fdcd409aaf8 <col:43> '_A0' lvalue ParmVar 0x7fdcd409a428 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fdcd409ab50 <col:50> '_Fp' lvalue ParmVar 0x7fdcd409a388 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd409a9a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd409a9f0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd409ba98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fdcd409abd8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd409ac48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd409b4a8 <line:4290:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd409ba00 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fdcd409b5a8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd409b648 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fdcd409bc68 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd409bc50 <col:7, line:4294:35>
| |   |   |   `-BinaryOperator 0x7fdcd409bc28 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fdcd409bbd0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fdcd409bb78 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fdcd409bb50 <col:23> '_A0' lvalue ParmVar 0x7fdcd409b648 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fdcd409bc00 <col:35> '_Fp' lvalue ParmVar 0x7fdcd409b5a8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd409baf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd409bb40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd409c958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fdcd409bc88 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd409bcf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd409c3e8 <line:4297:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd409c8c0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fdcd409c4e8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd409c588 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fdcd409cb20 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd409cb08 <col:7, line:4301:35>
| |   |   |   `-BinaryOperator 0x7fdcd409cae0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fdcd409ca90 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fdcd409ca38 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fdcd409ca10 <col:23> '_A0' lvalue ParmVar 0x7fdcd409c588 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fdcd409cab8 <col:35> '_Fp' lvalue ParmVar 0x7fdcd409c4e8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd409c9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd409ca00 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd409de98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fdcd409cb40 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd409cba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd409d6d8 <line:4304:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd409de00 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fdcd409d7d8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd409d878 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fdcd409e148 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd409e130 <col:7, line:4308:53>
| |   |   |   `-BinaryOperator 0x7fdcd409e108 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fdcd409e0c0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fdcd409e0a0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fdcd409e070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fdcd409dfa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     |     `-DeclRefExpr 0x7fdcd409e048 <col:45> '_A0' lvalue ParmVar 0x7fdcd409d878 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fdcd409e0e0 <col:53> '_Fp' lvalue ParmVar 0x7fdcd409d7d8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd409def8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd409df40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd409f2a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fdcd409e168 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd409e1d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fdcd409eb68 <line:4311:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fdcd409f210 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fdcd409ec68 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd409ed08 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fdcd409f558 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd409f540 <col:7, line:4315:53>
| |   |   |   `-BinaryOperator 0x7fdcd409f518 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fdcd409f4d0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fdcd409f4b0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fdcd409f480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fdcd409f3b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     |     `-DeclRefExpr 0x7fdcd409f458 <col:45> '_A0' lvalue ParmVar 0x7fdcd409ed08 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fdcd409f4f0 <col:53> '_Fp' lvalue ParmVar 0x7fdcd409ec68 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fdcd409f308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd409f350 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd40a0078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fdcd409f578 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd409f5e8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fdcd409ffe0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fdcd409f6e8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd409f828 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fdcd40a0438 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd40a0420 <col:7, line:4323:80>
| |   |   |   `-CallExpr 0x7fdcd40a03f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fdcd40a0250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fdcd40a0188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     | `-DeclRefExpr 0x7fdcd40a0228 <col:43> '_Fp' lvalue ParmVar 0x7fdcd409f6e8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fdcd40a03d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd40a03a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fdcd40a02d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |         `-DeclRefExpr 0x7fdcd40a0378 <col:70> '_Args &&...' lvalue ParmVar 0x7fdcd409f828 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fdcd40a00d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd40a0120 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd40a0e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fdcd40a0458 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a04c8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fdcd40a0dd0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fdcd40a05c8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fdcd40a06a8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fdcd40a1228 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fdcd40a1210 <col:7, line:4329:80>
| |   |   |   `-CallExpr 0x7fdcd40a11e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fdcd40a1040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fdcd40a0f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |     | `-DeclRefExpr 0x7fdcd40a1018 <col:43> '_Fp' lvalue ParmVar 0x7fdcd40a05c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fdcd40a11c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd40a1190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fdcd40a10c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fdcd590b580 0x7fdcd590baa0
| |   |   |         `-DeclRefExpr 0x7fdcd40a1168 <col:70> '_Args &&...' lvalue ParmVar 0x7fdcd40a06a8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fdcd40a0ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd40a0f10 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fdcd40a1458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7fdcd40a1248 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fdcd40a12b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a1328 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd40a13c0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7fdcd40a1878 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7fdcd40a1cb8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7fdcd40a1c80 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7fdcd40a1c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fdcd40a1940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fdcd5952e48 0x7fdcd5956ae8 0x7fdcd5959c88 0x7fdcd4096608 0x7fdcd4099738 0x7fdcd409ba98 0x7fdcd409de98 0x7fdcd40a0078
| |   |   |     |-CallExpr 0x7fdcd40a1aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7fdcd40a1a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   |   |     `-PackExpansionExpr 0x7fdcd40a1bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7fdcd40a1ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7fdcd40a1b10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   |   `-VarDecl 0x7fdcd40a1d28 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fdcd40a2640 <line:4343:9, line:4351:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7fdcd40a2a58 <line:4354:1, line:4355:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7fdcd40a26a0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a2708 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7fdcd40a29f8 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fdcd40a28c0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fdcd40a2dc8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd40a2ab8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7fdcd40a2b20 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7fdcd40a2b78 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7fdcd40a2be8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a2c58 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd40a2d30 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7fdcd40a31e0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7fdcd40a3288 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fdcd40a32e8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40a37b8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fdcd40a3320 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fdcd40a3388 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a33f8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fdcd40a4e00 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7fdcd40a4ea8 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7fdcd40a3920 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7fdcd40a37b8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7fdcd40a5160 <line:4367:5, line:4368:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7fdcd40a4f00 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fdcd40a50c8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7fdcd40a4f90 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7fdcd40a51c8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fdcd40a56a8 <col:31, line:4371:76> '_Bool'
| |   |     `-CallExpr 0x7fdcd40a5678 <line:4370:40, line:4371:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fdcd40a52c8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fdcd40a5160
| |   |       `-CallExpr 0x7fdcd40a5640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7fdcd40a5390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fdcd5952e48 0x7fdcd5956ae8 0x7fdcd5959c88 0x7fdcd4096608 0x7fdcd4099738 0x7fdcd409ba98 0x7fdcd409de98 0x7fdcd40a0078
| |   |         |-CallExpr 0x7fdcd40a54f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7fdcd40a5460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   |         `-PackExpansionExpr 0x7fdcd40a5620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
| |   |           `-CallExpr 0x7fdcd40a55f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7fdcd40a5560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40a5b88 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fdcd40a56f0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fdcd40a5758 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a57c8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fdcd40a5f60 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7fdcd40a6008 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fdcd40a6380 <col:31, line:4378:75> '_Bool'
| |   |     `-CallExpr 0x7fdcd40a6348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fdcd40a6098 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fdcd5952e48 0x7fdcd5956ae8 0x7fdcd5959c88 0x7fdcd4096608 0x7fdcd4099738 0x7fdcd409ba98 0x7fdcd409de98 0x7fdcd40a0078
| |   |       |-CallExpr 0x7fdcd40a6200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7fdcd40a6168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   |       `-PackExpansionExpr 0x7fdcd40a6328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
| |   |         `-CallExpr 0x7fdcd40a6300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7fdcd40a6268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   |-TypeAliasTemplateDecl 0x7fdcd40a6bd8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7fdcd40a63c8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fdcd40a6438 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a64a8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7fdcd40a6b78 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fdcd40a69b0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fdcd40a6710 <line:4384:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fdcd40a6830 <line:4385:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fdcd40a6e00 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7fdcd40a6c28 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a6c98 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fdcd40a6d28 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7fdcd40a7868 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40a7c28 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fdcd40a7920 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fdcd40a7988 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7fdcd40a7d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fdcd40a7ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7fdcd40a82f0 <line:4406:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7fdcd40a80b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd40a8290 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd40a8220 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd40a8458 <line:4440:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fdcd40a8340 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40a83c0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7fdcd40a8788 <line:4441:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fdcd40a8668 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40a86f0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7fdcd40a9368 <line:4443:1, line:4460:1> line:4454:1 swap
| |   | |-TemplateTypeParmDecl 0x7fdcd40a8998 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd40a92d0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fdcd40a8eb8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7fdcd40a8f28 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7fdcd40a9848 <line:4456:1, line:4460:1>
| |   |   | |-DeclStmt 0x7fdcd40a95d0 <line:4457:5, col:30>
| |   |   | | `-VarDecl 0x7fdcd40a94b8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7fdcd40a95a0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7fdcd40a9540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7fdcd40a9450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fdcd590ae38
| |   |   | |       `-DeclRefExpr 0x7fdcd40a9518 <col:25> '_Tp' lvalue ParmVar 0x7fdcd40a8eb8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7fdcd40a96f0 <line:4458:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7fdcd40a95e8 <col:5> '_Tp' lvalue ParmVar 0x7fdcd40a8eb8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7fdcd40a96c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7fdcd40a9640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fdcd590ae38
| |   |   | |   `-DeclRefExpr 0x7fdcd40a9698 <col:23> '_Tp' lvalue ParmVar 0x7fdcd40a8f28 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7fdcd40a9820 <line:4459:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7fdcd40a9718 <col:5> '_Tp' lvalue ParmVar 0x7fdcd40a8f28 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7fdcd40a97f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fdcd40a9770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fdcd590ae38
| |   |   |     `-DeclRefExpr 0x7fdcd40a97c8 <col:23> '_Tp' lvalue Var 0x7fdcd40a94b8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fdcd40a93c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd40a9410 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd40aa1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
| |   | |-TemplateTypeParmDecl 0x7fdcd40a9878 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd40a98f8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7fdcd40aa140 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fdcd40a9d98 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7fdcd40a9ee8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7fdcd40aa238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd40aa280 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd40aa8f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7fdcd40aa290 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7fdcd40aa2f8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7fdcd40aa860 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7fdcd40aa3c8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7fdcd40aa438 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7fdcd40aaad8 <line:4476:1, line:4478:1>
| |   |   | `-CallExpr 0x7fdcd40aaaa0 <line:4477:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7fdcd40aa9b0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fdcd40aa1d8 0x7fdcd40a9368
| |   |   |   |-UnaryOperator 0x7fdcd40aaa38 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7fdcd40aaa10 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fdcd40aa3c8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7fdcd40aaa80 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7fdcd40aaa58 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fdcd40aa438 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7fdcd40aa958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd40aa9a0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7fdcd40aaaf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
| |   | |-ClassTemplateDecl 0x7fdcd40aaff8 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fdcd40aab60 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fdcd40aabd8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fdcd40aaee0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7fdcd40aaea8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7fdcd40aad58 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7fdcd40aad18 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7fdcd40aae88 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7fdcd40aae48 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fdcd40aaf60 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fdcd40ab300 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7fdcd40ab9b8 <line:4490:5, line:4492:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fdcd40ab398 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7fdcd40ab408 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7fdcd40ab920 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7fdcd40ab778 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7fdcd40abc78 <line:4493:5, line:4494:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fdcd40aba10 <line:4493:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7fdcd40aba78 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7fdcd40abbe0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7fdcd40abb20 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7fdcd40abec8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7fdcd40abe90 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fdcd40abe28 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fdcd40abdf8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fdcd40abd08 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fdcd40abc78 0x7fdcd40ab9b8
| |   | |   |       `-IntegerLiteral 0x7fdcd40abdd8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7fdcd40ac118 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7fdcd40ac0e0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fdcd40ac078 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fdcd40ac048 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fdcd40abf58 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fdcd40abc78 0x7fdcd40ab9b8
| |   | |   |       `-IntegerLiteral 0x7fdcd40ac028 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7fdcd40ac180 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fdcd40ac5b8 <col:31, line:4501:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7fdcd40ac3a8 <line:4500:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7fdcd40ac368 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7fdcd40ac598 <line:4501:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7fdcd40ac558 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7fdcd40ac8c8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7fdcd40ac600 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fdcd40ac668 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7fdcd40acbf0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7fdcd40ad340 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fdcd40acca8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fdcd40acd28 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fdcd40ad228 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7fdcd40ad1d8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fdcd40ad2a8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fdcd40ad640 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7fdcd40ad6e8 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fdcd40adcc8 <line:4511:7, line:4512:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7fdcd40ad9e0 <line:4511:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7fdcd40ad9a8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7fdcd40ad748 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fdcd40aa1d8 0x7fdcd40a9368
| |   | |       |   |-CallExpr 0x7fdcd40ad880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7fdcd40ad7e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   | |       |   `-CallExpr 0x7fdcd40ad980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7fdcd40ad8e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   | |       `-CXXNoexceptExpr 0x7fdcd40adca0 <line:4512:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7fdcd40adc68 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7fdcd40ada08 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fdcd40aa1d8 0x7fdcd40a9368
| |   | |           |-CallExpr 0x7fdcd40adb40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7fdcd40adaa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   | |           `-CallExpr 0x7fdcd40adc40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7fdcd40adba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fdcd5890050
| |   | `-ClassTemplatePartialSpecializationDecl 0x7fdcd40adfd8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7fdcd40add10 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7fdcd40add78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7fdcd40ae300 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7fdcd40ae4d8 prev 0x7fdcd40a8458 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fdcd40ae3b8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40ae440 prev 0x7fdcd40a83c0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fdcd40aec48 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7fdcd40aee98 prev 0x7fdcd40a8788 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fdcd40aed00 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40aee00 prev 0x7fdcd40a86f0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fdcd40af6c8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7fdcd40af898 <line:4589:1, line:4593:1> line:4590:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7fdcd40af780 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40af800 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7fdcd40afb10 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7fdcd40afc50 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7fdcd40afc00 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7fdcd40af7c0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7fdcd40af780 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fdcd40aff10 <line:4596:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7fdcd40afcc8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fdcd40afeb0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7fdcd40afe40 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fdcd40b01f8 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7fdcd40aff60 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd40b00e8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd40b0098 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fdcd40b0160 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7fdcd40b04c0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7fdcd40b0680 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7fdcd40b0610 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7fdcd40b0838 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7fdcd40b0800 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7fdcd40b0798 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7fdcd40b0758 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7fdcd40b0730 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7fdcd40b0700 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7fdcd40b0778 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40b0a90 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd40b08b0 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40b0d20 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7fdcd40b22e8 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7fdcd40b2220 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7fdcd40b2438 <col:38, col:54>
| |   | | `-ReturnStmt 0x7fdcd40b2420 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7fdcd40b2408 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fdcd40b23e0 <col:47> 'int' lvalue ParmVar 0x7fdcd40b2220 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7fdcd40b2388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fdcd40b23d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fdcd40b2568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7fdcd40b24a0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7fdcd40b26b8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7fdcd40b26a0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7fdcd40b2688 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fdcd40b2660 <col:57> 'unsigned int' lvalue ParmVar 0x7fdcd40b24a0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7fdcd40b2608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fdcd40b2650 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fdcd40b27e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7fdcd40b2720 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7fdcd40b2938 <col:40, col:56>
| |   | | `-ReturnStmt 0x7fdcd40b2920 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7fdcd40b2908 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fdcd40b28e0 <col:49> 'long' lvalue ParmVar 0x7fdcd40b2720 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7fdcd40b2888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fdcd40b28d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fdcd40b2a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7fdcd40b29a0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7fdcd40b2bb8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7fdcd40b2ba0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7fdcd40b2b88 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fdcd40b2b60 <col:67> 'unsigned long' lvalue ParmVar 0x7fdcd40b29a0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7fdcd40b2b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fdcd40b2b50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fdcd40b2ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7fdcd40b2c20 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7fdcd40b2e38 <col:50, col:66>
| |   | | `-ReturnStmt 0x7fdcd40b2e20 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7fdcd40b2e08 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fdcd40b2de0 <col:59> 'long long' lvalue ParmVar 0x7fdcd40b2c20 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7fdcd40b2d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fdcd40b2dd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fdcd40b2f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7fdcd40b2ea0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7fdcd40b30b8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7fdcd40b30a0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7fdcd40b3088 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fdcd40b3060 <col:76> 'unsigned long long' lvalue ParmVar 0x7fdcd40b2ea0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7fdcd40b3008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fdcd40b3050 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fdcd40b3220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7fdcd40b3118 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7fdcd40b3370 <col:52, col:68>
| |   | | `-ReturnStmt 0x7fdcd40b3358 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7fdcd40b3340 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fdcd40b3318 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fdcd40b3118 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7fdcd40b32c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fdcd40b3308 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fdcd40b34d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7fdcd40b33d0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7fdcd40b3620 <col:54, col:70>
| |   | | `-ReturnStmt 0x7fdcd40b3608 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7fdcd40b35f0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fdcd40b35c8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fdcd40b33d0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7fdcd40b3570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fdcd40b35b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fdcd40b3b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7fdcd40b3640 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fdcd40b3ad0 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7fdcd40b39c0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7fdcd40b3c58 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7fdcd40b3c40 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7fdcd40b3c18 <col:43> '_Tp' lvalue ParmVar 0x7fdcd40b39c0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fdcd40b3bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fdcd40b3c08 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fdcd40b3d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7fdcd40b3c78 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40b3d00 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7fdcd40b4010 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7fdcd40b4718 <line:4658:5, line:4660:95> line:4659:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fdcd40b40a8 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fdcd40b4680 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fdcd40b4148 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fdcd40b49b8 <line:4661:5, line:4662:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fdcd40b4770 <line:4661:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fdcd40b4920 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fdcd40b4808 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fdcd40b4a20 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fdcd40b4c58 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fdcd40b4dd8 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7fdcd40b4cb8 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40b4d40 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7fdcd40b5050 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7fdcd40b5758 <line:4670:5, line:4672:94> line:4671:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fdcd40b50e8 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fdcd40b56c0 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fdcd40b5188 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fdcd40b5978 <line:4673:5, line:4674:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fdcd40b57b0 <line:4673:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fdcd40b58e0 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fdcd40b5848 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fdcd40b59e0 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fdcd40b5bd8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fdcd40b5d58 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7fdcd40b5c38 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40b5cc0 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7fdcd40b6bf8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7fdcd40b6cb0 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7fdcd40b6dd8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7fdcd40b6e90 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7fdcd40b6fb8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7fdcd40b7070 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7fdcd40b7198 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7fdcd40b75b8 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7fdcd40b7250 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fdcd40b72b8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fdcd40b7490 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fdcd40b7520 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7fdcd40b7cf0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40b82c8 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7fdcd40b7da8 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7fdcd40b7e18 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fdcd40b7e88 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7fdcd40b7ef8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7fdcd40c9c60 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7fdcd40ca0c0 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7fdcd40c9d18 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fdcd40c9d88 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fdcd40c9df8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7fdcd40c9f90 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fdcd40ca028 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7fdcd40ca708 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40cab60 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7fdcd40ca7c0 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fdcd40ca828 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fdcd40ca898 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7fdcd40caee0 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7fdcd4129278 parent 0x7fdcd6848380 prev 0x7fdcd6849150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-NamespaceDecl 0x7fdcd40caf98 prev 0x7fdcd683eac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fdcd584d258 'std'
| | `-NamespaceDecl 0x7fdcd40cb000 prev 0x7fdcd683eb30 <col:52, line:439:36> <scratch space>:432:1 __1 inline
| |   |-original Namespace 0x7fdcd584d2c0 '__1'
| |   |-EnumDecl 0x7fdcd40cb068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:125:1, line:132:1> line:125:6 referenced float_round_style
| |   | |-EnumConstantDecl 0x7fdcd40cb160 <line:127:5, col:34> col:5 round_indeterminate 'enum std::__1::float_round_style'
| |   | | `-UnaryOperator 0x7fdcd40cb140 <col:33, col:34> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fdcd40cb120 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fdcd40cb1c8 <line:128:5, col:34> col:5 referenced round_toward_zero 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fdcd40cb1a8 <col:34> 'int' 0
| |   | |-EnumConstantDecl 0x7fdcd40cb230 <line:129:5, col:34> col:5 referenced round_to_nearest 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fdcd40cb210 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fdcd40cb298 <line:130:5, col:34> col:5 round_toward_infinity 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fdcd40cb278 <col:34> 'int' 2
| |   | `-EnumConstantDecl 0x7fdcd40cb300 <line:131:5, col:34> col:5 round_toward_neg_infinity 'enum std::__1::float_round_style'
| |   |   `-IntegerLiteral 0x7fdcd40cb2e0 <col:34> 'int' 3
| |   |-EnumDecl 0x7fdcd40cb348 <line:134:1, line:139:1> line:134:6 referenced float_denorm_style
| |   | |-EnumConstantDecl 0x7fdcd40cb440 <line:136:5, col:29> col:5 denorm_indeterminate 'enum std::__1::float_denorm_style'
| |   | | `-UnaryOperator 0x7fdcd40cb420 <col:28, col:29> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fdcd40cb400 <col:29> 'int' 1
| |   | |-EnumConstantDecl 0x7fdcd40cb4a8 <line:137:5, col:21> col:5 referenced denorm_absent 'enum std::__1::float_denorm_style'
| |   | | `-IntegerLiteral 0x7fdcd40cb488 <col:21> 'int' 0
| |   | `-EnumConstantDecl 0x7fdcd40cb510 <line:138:5, col:22> col:5 referenced denorm_present 'enum std::__1::float_denorm_style'
| |   |   `-IntegerLiteral 0x7fdcd40cb4f0 <col:22> 'int' 1
| |   |-ClassTemplateDecl 0x7fdcd40cb7f8 <line:141:1, line:184:1> line:142:7 __libcpp_numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fdcd40cb558 <line:141:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd40cb6e8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd40cb698 <col:29, col:49> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fdcd40cb760 <line:142:1, line:184:1> line:142:7 class __libcpp_numeric_limits definition
| |   | | |-CXXRecordDecl 0x7fdcd40cdaf0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | | |-AccessSpecDecl 0x7fdcd40cdb88 <line:144:1, col:10> col:1 protected
| |   | | |-TypedefDecl 0x7fdcd40cdbc0 <line:145:5, col:17> col:17 referenced type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fdcd40cb5a0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fdcd40cb558 '_Tp'
| |   | | |-VarDecl 0x7fdcd40cdc28 <line:147:5, col:59> col:42 is_specialized 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40cdc88 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fdcd40cdda8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:148:92> col:61 constexpr min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf598 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fdcd40cf580 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf558 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40cde40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40cde88 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fdcd40cdef0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:149:92> col:61 constexpr max 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf608 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fdcd40cf5f0 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf5c8 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40cdf88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40cdfd0 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fdcd40ce038 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:150:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf678 <col:80, col:95>
| |   | | | | `-ReturnStmt 0x7fdcd40cf660 <col:81, col:93>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf638 <col:88, col:93> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40ce0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40ce118 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fdcd40ce140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:152:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fdcd40ce1a0 <col:50> 'int' 0
| |   | | |-VarDecl 0x7fdcd40ce1d8 <line:153:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fdcd40ce238 <col:52> 'int' 0
| |   | | |-VarDecl 0x7fdcd40ce270 <line:154:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fdcd40ce2d0 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fdcd40ce300 <line:155:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40ce360 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40ce388 <line:156:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40ce3e8 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40ce410 <line:157:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40ce470 <col:52> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40ce4a0 <line:158:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fdcd40ce500 <col:49> 'int' 0
| |   | | |-CXXMethodDecl 0x7fdcd40ce578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:159:96> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf6e8 <col:81, col:96>
| |   | | | | `-ReturnStmt 0x7fdcd40cf6d0 <col:82, col:94>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf6a8 <col:89, col:94> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40ce610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40ce658 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fdcd40ce6c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:160:100> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf758 <col:85, col:100>
| |   | | | | `-ReturnStmt 0x7fdcd40cf740 <col:86, col:98>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf718 <col:93, col:98> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40ce758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40ce7a0 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fdcd40ce7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:162:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fdcd40ce828 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fdcd40ce860 <line:163:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fdcd40ce8c0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fdcd40ce8f8 <line:164:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fdcd40ce958 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fdcd40ce990 <line:165:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fdcd40ce9f0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fdcd40cea20 <line:167:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40cea80 <col:56> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40ceaa8 <line:168:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40ceb08 <col:57> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40ceb30 <line:169:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40ceb90 <col:61> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40cebb8 <line:170:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fdcd40cec18 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fdcd40cb4a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | | |-VarDecl 0x7fdcd40cec50 <line:171:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40cecb0 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fdcd40ced20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:172:97> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf7c8 <col:82, col:97>
| |   | | | | `-ReturnStmt 0x7fdcd40cf7b0 <col:83, col:95>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf788 <col:90, col:95> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40cedb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40cee00 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fdcd40cee68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:173:98> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf838 <col:83, col:98>
| |   | | | | `-ReturnStmt 0x7fdcd40cf820 <col:84, col:96>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf7f8 <col:91, col:96> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40cef00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40cef48 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fdcd40cefb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:174:102> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf8a8 <col:87, col:102>
| |   | | | | `-ReturnStmt 0x7fdcd40cf890 <col:88, col:100>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf868 <col:95, col:100> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40cf048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40cf090 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fdcd40cf0f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:175:99> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fdcd40cf918 <col:84, col:99>
| |   | | | | `-ReturnStmt 0x7fdcd40cf900 <col:85, col:97>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40cf8d8 <col:92, col:97> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fdcd40cf190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fdcd40cf1d8 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fdcd40cf1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:177:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40cf258 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40cf280 <line:178:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40cf2e0 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40cf308 <line:179:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40cf368 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40cf390 <line:181:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40cf3f0 <col:49> '_Bool' false
| |   | | |-VarDecl 0x7fdcd40cf418 <line:182:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fdcd40cf478 <col:59> '_Bool' false
| |   | | `-VarDecl 0x7fdcd40cf4a0 <line:183:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   | |   `-DeclRefExpr 0x7fdcd40cf500 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fdcd40cb1c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   | |-ClassTemplateSpecialization 0x7fdcd40eb5e0 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fdcd40ee280 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fdcd40f1360 '__libcpp_numeric_limits'
| |   | `-ClassTemplateSpecialization 0x7fdcd40f4490 '__libcpp_numeric_limits'
| |   |-ClassTemplateDecl 0x7fdcd40cfb80 <line:186:1, line:190:1> line:187:8 __libcpp_compute_min
| |   | |-TemplateTypeParmDecl 0x7fdcd40cf938 <line:186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd40cfa00 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-NonTypeTemplateParmDecl 0x7fdcd40cfa68 <col:36, col:41> col:41 '_Bool' depth 0 index 2 _IsSigned
| |   | `-CXXRecordDecl 0x7fdcd40cfae8 <line:187:1, line:190:1> line:187:8 struct __libcpp_compute_min definition
| |   |   |-CXXRecordDecl 0x7fdcd40cfeb0 <col:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   |   `-VarDecl 0x7fdcd40cff58 <line:189:5, col:70> col:40 value 'const _Tp' static constexpr cinit
| |   |     `-CXXUnresolvedConstructExpr 0x7fdcd40d0078 <col:48, col:70> '_Tp'
| |   |       `-BinaryOperator 0x7fdcd40d0050 <col:52, col:62> '<dependent type>' '<<'
| |   |         |-CXXUnresolvedConstructExpr 0x7fdcd40cfff8 <col:52, col:57> '_Tp'
| |   |         | `-IntegerLiteral 0x7fdcd40cffd8 <col:56> 'int' 1
| |   |         `-DeclRefExpr 0x7fdcd40d0028 <col:62> 'int' NonTypeTemplateParm 0x7fdcd40cfa00 '__digits' 'int'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40d03b8 <line:192:1, line:196:1> line:193:8 struct __libcpp_compute_min definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fdcd40d01d8 <col:34> 'int' NonTypeTemplateParm 0x7fdcd40d0150 '__digits' 'int'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fdcd40d00c8 <line:192:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fdcd40d0150 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-CXXRecordDecl 0x7fdcd40d0690 <line:193:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   | `-VarDecl 0x7fdcd40d0738 <line:195:5, col:53> col:40 value 'const _Tp' static constexpr cinit
| |   |   `-CXXUnresolvedConstructExpr 0x7fdcd40d07c8 <col:48, col:53> '_Tp'
| |   |     `-IntegerLiteral 0x7fdcd40d07a8 <col:52> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40d0a00 <line:198:1, line:249:1> line:199:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fdcd40d0818 <line:198:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fdcd40d0c90 <line:199:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fdcd40d0d28 <line:201:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fdcd40d0d60 <line:202:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fdcd40d0860 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd40d0818 '_Tp'
| |   | |-VarDecl 0x7fdcd40d0dc8 <line:204:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40d0e28 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fdcd40d0e50 <line:206:5, col:70> col:41 referenced is_signed 'const _Bool' static constexpr cinit
| |   | | `-BinaryOperator 0x7fdcd40d0fb0 <col:53, col:70> '<dependent type>' '<'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fdcd40d0f20 <col:53, col:60> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-UnaryOperator 0x7fdcd40d0f00 <col:58, col:59> 'int' prefix '-'
| |   | |   |   `-IntegerLiteral 0x7fdcd40d0ee0 <col:59> 'int' 1
| |   | |   `-CXXUnresolvedConstructExpr 0x7fdcd40d0f80 <col:64, col:70> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-IntegerLiteral 0x7fdcd40d0f60 <col:69> 'int' 0
| |   | |-VarDecl 0x7fdcd40d0ff0 <line:207:5, col:106> col:41 referenced digits 'const int' static constexpr cinit
| |   | | `-CXXStaticCastExpr 0x7fdcd40d1190 <col:50, col:106> 'int' static_cast<int> <NoOp>
| |   | |   `-ImplicitCastExpr 0x7fdcd40d1178 <col:67, col:97> 'int' <IntegralCast>
| |   | |     `-BinaryOperator 0x7fdcd40d1138 <col:67, col:97> 'unsigned long' '-'
| |   | |       |-BinaryOperator 0x7fdcd40d10b8 <col:67, <built-in>:66:22> 'unsigned long' '*'
| |   | |       | |-UnaryExprOrTypeTraitExpr 0x7fdcd40d1060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:67, col:78> 'unsigned long' sizeof 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |       | `-ImplicitCastExpr 0x7fdcd40d10a0 <<built-in>:66:22> 'unsigned long' <IntegralCast>
| |   | |       |   `-IntegerLiteral 0x7fdcd40d1080 <col:22> 'int' 8
| |   | |       `-ImplicitCastExpr 0x7fdcd40d1120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:97> 'unsigned long' <IntegralCast>
| |   | |         `-ImplicitCastExpr 0x7fdcd40d1108 <col:97> '_Bool' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x7fdcd40d10e0 <col:97> 'const _Bool' lvalue Var 0x7fdcd40d0e50 'is_signed' 'const _Bool'
| |   | |-VarDecl 0x7fdcd40d11d8 <line:208:5, col:65> col:41 digits10 'const int' static constexpr cinit
| |   | | `-BinaryOperator 0x7fdcd40d12e0 <col:52, col:65> 'int' '/'
| |   | |   |-BinaryOperator 0x7fdcd40d1298 <col:52, col:61> 'int' '*'
| |   | |   | |-ImplicitCastExpr 0x7fdcd40d1280 <col:52> 'int' <LValueToRValue>
| |   | |   | | `-DeclRefExpr 0x7fdcd40d1238 <col:52> 'const int' lvalue Var 0x7fdcd40d0ff0 'digits' 'const int'
| |   | |   | `-IntegerLiteral 0x7fdcd40d1260 <col:61> 'int' 3
| |   | |   `-IntegerLiteral 0x7fdcd40d12c0 <col:65> 'int' 10
| |   | |-VarDecl 0x7fdcd40d1320 <line:209:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40d1380 <col:56> 'int' 0
| |   | |-VarDecl 0x7fdcd40d13b0 <line:210:5, col:96> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd40d1638 <col:49, col:96> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd40d1688 <line:211:5, col:93> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-ConditionalOperator 0x7fdcd40d18b8 <col:49, col:93> '<dependent type>'
| |   | |   |-ImplicitCastExpr 0x7fdcd40d18a0 <col:49> '_Bool' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0x7fdcd40d16e8 <col:49> 'const _Bool' lvalue Var 0x7fdcd40d0e50 'is_signed' 'const _Bool'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fdcd40d17f0 <col:61, col:82> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-BinaryOperator 0x7fdcd40d17c8 <col:66, col:77> '<dependent type>' '^'
| |   | |   |   |-CXXUnresolvedConstructExpr 0x7fdcd40d1770 <col:66, col:73> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   |   | `-UnaryOperator 0x7fdcd40d1750 <col:71, col:72> 'int' prefix '~'
| |   | |   |   |   `-IntegerLiteral 0x7fdcd40d1730 <col:72> 'int' 0
| |   | |   |   `-DeclRefExpr 0x7fdcd40d17a0 <col:77> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fdcd40d13b0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | |   `-CXXUnresolvedConstructExpr 0x7fdcd40d1870 <col:86, col:93> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-UnaryOperator 0x7fdcd40d1850 <col:91, col:92> 'int' prefix '~'
| |   | |       `-IntegerLiteral 0x7fdcd40d1830 <col:92> 'int' 0
| |   | |-CXXMethodDecl 0x7fdcd40e9a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:212:91> col:61 referenced constexpr min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb110 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fdcd40eb0f8 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fdcd40eb0d0 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fdcd40d13b0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fdcd40e9a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40e9ae0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40e9b48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:213:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb170 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fdcd40eb158 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fdcd40eb130 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fdcd40d1688 '__max' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fdcd40e9be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40e9c28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40e9c90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:214:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb1f8 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fdcd40eb1e0 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fdcd40eb1b8 <col:88, col:92> '<dependent type>'
| |   | | |     `-DeclRefExpr 0x7fdcd40eb190 <col:88> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' lvalue CXXMethod 0x7fdcd40e9a00 'min' 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fdcd40e9d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40e9d70 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40e9d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:216:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40e9df0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fdcd40e9e18 <line:217:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40e9e78 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fdcd40e9ea8 <line:218:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40e9f08 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fdcd40e9f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:219:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb290 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fdcd40eb278 <col:82, col:95>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40eb248 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fdcd40eb228 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ea018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ea060 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ea0c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:220:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb328 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fdcd40eb310 <col:86, col:99>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40eb2e0 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fdcd40eb2c0 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ea160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ea1a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40ea1d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:222:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ea230 <col:56> 'int' 0
| |   | |-VarDecl 0x7fdcd40ea268 <line:223:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ea2c8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fdcd40ea300 <line:224:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ea360 <col:56> 'int' 0
| |   | |-VarDecl 0x7fdcd40ea398 <line:225:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ea3f8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fdcd40ea428 <line:227:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ea488 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ea4b0 <line:228:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ea510 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ea538 <line:229:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ea598 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ea5c0 <line:230:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fdcd40ea620 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fdcd40cb4a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fdcd40ea658 <line:231:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ea6b8 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fdcd40ea728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:232:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb3c0 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fdcd40eb3a8 <col:83, col:96>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40eb378 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fdcd40eb358 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ea7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ea808 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ea870 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:233:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb458 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fdcd40eb440 <col:84, col:97>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40eb410 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fdcd40eb3f0 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ea908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ea950 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ea9b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:234:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb4f0 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fdcd40eb4d8 <col:88, col:101>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40eb4a8 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fdcd40eb488 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40eaa50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40eaa98 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40eab00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:235:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eb588 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fdcd40eb570 <col:85, col:98>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fdcd40eb540 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fdcd40eb520 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40eab98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40eabe0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40eac00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:237:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40eac60 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fdcd40eac88 <line:238:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40eace8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fdcd40ead10 <line:239:5, col:77> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-UnaryOperator 0x7fdcd40eaee8 <col:53, col:77> '<dependent type>' prefix '!'
| |   | |   `-DependentScopeDeclRefExpr 0x7fdcd40eaea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:239:77> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd40eaf18 <line:243:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40eaf78 <col:49> '_Bool' true
| |   | |-VarDecl 0x7fdcd40eafa0 <line:247:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40eb000 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fdcd40eb028 <line:248:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fdcd40eb088 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fdcd40cb1c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd40eb5e0 <line:251:1, line:297:1> line:252:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd40eb850 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fdcd40eb8e8 <line:254:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fdcd40eb920 <line:255:5, col:18> col:18 referenced type '_Bool'
| |   | | `-BuiltinType 0x7fdcd5819d40 '_Bool'
| |   | |-VarDecl 0x7fdcd40eb988 <line:257:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40eb9e8 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fdcd40eba68 <line:259:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ebac8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ebb50 <line:260:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ebbb0 <col:50> 'int' 1
| |   | |-VarDecl 0x7fdcd40ebc40 <line:261:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ebca0 <col:52> 'int' 0
| |   | |-VarDecl 0x7fdcd40ebd30 <line:262:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ebd90 <col:56> 'int' 0
| |   | |-VarDecl 0x7fdcd40ebe40 <line:263:5, col:49> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ebea0 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ebf20 <line:264:5, col:49> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ebf80 <col:49> '_Bool' true
| |   | |-CXXMethodDecl 0x7fdcd40ec0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:265:91> col:61 used constexpr min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40edcb8 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fdcd40edca0 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fdcd40edc88 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fdcd40edc60 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fdcd40ebe40 '__min' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fdcd40ec170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ec1b8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ec220 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:266:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40edd30 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fdcd40edd18 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fdcd40edd00 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fdcd40edcd8 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fdcd40ebf20 '__max' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fdcd40ec2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ec300 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ec368 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:267:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40ede30 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fdcd40ede18 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fdcd40eddf0 <col:88, col:92> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40eddd8 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |       `-DeclRefExpr 0x7fdcd40edd50 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' lvalue CXXMethod 0x7fdcd40ec0d8 'min' 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fdcd40ec400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ec448 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40ec468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:269:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ec4c8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fdcd40ec548 <line:270:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ec5a8 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fdcd40ec630 <line:271:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ec690 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fdcd40ec760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:272:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40eded8 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fdcd40edec0 <col:82, col:95>
| |   | | |   `-CXXFunctionalCastExpr 0x7fdcd40ede98 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fdcd40ede80 <col:94> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fdcd40ede60 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ec7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ec840 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ec8a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:273:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40edf80 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fdcd40edf68 <col:86, col:99>
| |   | | |   `-CXXFunctionalCastExpr 0x7fdcd40edf40 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fdcd40edf28 <col:98> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fdcd40edf08 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ec940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ec988 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40ec9b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:275:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40eca10 <col:56> 'int' 0
| |   | |-VarDecl 0x7fdcd40ecaa0 <line:276:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ecb00 <col:58> 'int' 0
| |   | |-VarDecl 0x7fdcd40ecb90 <line:277:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ecbf0 <col:56> 'int' 0
| |   | |-VarDecl 0x7fdcd40ecc80 <line:278:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ecce0 <col:58> 'int' 0
| |   | |-VarDecl 0x7fdcd40ecd68 <line:280:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ecdc8 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ece48 <line:281:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ecea8 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ecf28 <line:282:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ecf88 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ed008 <line:283:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fdcd40ed068 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fdcd40cb4a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fdcd40ed0f8 <line:284:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ed158 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fdcd40ed220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:285:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40ee028 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fdcd40ee010 <col:83, col:96>
| |   | | |   `-CXXFunctionalCastExpr 0x7fdcd40edfe8 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fdcd40edfd0 <col:95> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fdcd40edfb0 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ed2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ed300 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ed368 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:286:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40ee0d0 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fdcd40ee0b8 <col:84, col:97>
| |   | | |   `-CXXFunctionalCastExpr 0x7fdcd40ee090 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fdcd40ee078 <col:96> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fdcd40ee058 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ed400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ed448 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ed4b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:287:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40ee178 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fdcd40ee160 <col:88, col:101>
| |   | | |   `-CXXFunctionalCastExpr 0x7fdcd40ee138 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fdcd40ee120 <col:100> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fdcd40ee100 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ed548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ed590 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ed5f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:288:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40ee220 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fdcd40ee208 <col:85, col:98>
| |   | | |   `-CXXFunctionalCastExpr 0x7fdcd40ee1e0 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fdcd40ee1c8 <col:97> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fdcd40ee1a8 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fdcd40ed690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ed6d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40ed6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:290:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ed758 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ed7d8 <line:291:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ed838 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fdcd40ed8b8 <line:292:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ed918 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ed998 <line:294:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40eda00 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fdcd40eda80 <line:295:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40edae0 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fdcd40edb60 <line:296:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fdcd40edbc0 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fdcd40cb1c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd40ee280 <line:299:1, line:343:1> line:300:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'float'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd40ee4f0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fdcd40ee588 <line:302:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fdcd40ee5c8 <line:303:5, col:19> col:19 referenced type 'float'
| |   | | `-BuiltinType 0x7fdcd5819ec0 'float'
| |   | |-VarDecl 0x7fdcd40ee630 <line:305:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ee690 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fdcd40ee710 <line:307:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ee770 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fdcd40ee7f8 <line:308:5, <built-in>:139:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:308:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ee858 <<built-in>:139:26> 'int' 24
| |   | |-VarDecl 0x7fdcd40ee8e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:5, <built-in>:134:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ee948 <<built-in>:134:21> 'int' 6
| |   | |-VarDecl 0x7fdcd40ee9d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:310:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fdcd40eeba0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fdcd40eeb78 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fdcd40eeb60 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fdcd40eea38 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fdcd40eeb38 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fdcd40eeaf8 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fdcd40eead0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fdcd40eeab8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fdcd40eeaa0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fdcd40eea58 <col:59> 'const int' lvalue Var 0x7fdcd40ee7f8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fdcd40eea80 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fdcd40eeb18 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fdcd40eece8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:311:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f0928 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fdcd40f0910 <col:78, <built-in>:145:21>
| |   | | |   `-FloatingLiteral 0x7fdcd40f08f0 <col:21> 'float' 1.175494e-38
| |   | | |-AlwaysInlineAttr 0x7fdcd40eed80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40eedc8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40eee30 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:312:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f0980 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fdcd40f0968 <col:78, <built-in>:142:21>
| |   | | |   `-FloatingLiteral 0x7fdcd40f0948 <col:21> 'float' 3.402823e+38
| |   | | |-AlwaysInlineAttr 0x7fdcd40eeec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40eef10 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40eef78 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:313:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f0a70 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fdcd40f0a58 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fdcd40f0a38 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float' prefix '-'
| |   | | |     `-CallExpr 0x7fdcd40f0a10 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float'
| |   | | |       `-ImplicitCastExpr 0x7fdcd40f09f8 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fdcd40f09a0 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' lvalue CXXMethod 0x7fdcd40eee30 'max' 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fdcd40ef010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ef058 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40ef078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:315:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ef0d8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ef158 <line:316:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40ef1b8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fdcd40ef240 <line:317:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:317:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ef2a0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fdcd40ef370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:318:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f0ac8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fdcd40f0ab0 <col:82, <built-in>:136:25>
| |   | | |   `-FloatingLiteral 0x7fdcd40f0a90 <col:25> 'float' 1.192093e-07
| |   | | |-AlwaysInlineAttr 0x7fdcd40ef408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ef450 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40ef4b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:319:98> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f0b20 <col:85, col:98>
| |   | | | `-ReturnStmt 0x7fdcd40f0b08 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fdcd40f0ae8 <col:93> 'float' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fdcd40ef550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40ef598 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40ef5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:5, <built-in>:144:30> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fdcd40ef660 <<built-in>:144:25, col:30> 'int'
| |   | |   `-UnaryOperator 0x7fdcd40ef640 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fdcd40ef620 <col:27> 'int' 125
| |   | |-VarDecl 0x7fdcd40ef6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:5, <built-in>:143:32> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fdcd40ef790 <<built-in>:143:28, col:32> 'int'
| |   | |   `-UnaryOperator 0x7fdcd40ef770 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fdcd40ef750 <col:30> 'int' 37
| |   | |-VarDecl 0x7fdcd40ef820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:5, <built-in>:141:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ef880 <<built-in>:141:25> 'int' 128
| |   | |-VarDecl 0x7fdcd40ef910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:5, <built-in>:140:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40ef970 <<built-in>:140:28> 'int' 38
| |   | |-VarDecl 0x7fdcd40efa00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:326:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40efa60 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fdcd40efae0 <line:327:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40efb40 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fdcd40efbc0 <line:328:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40efc20 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fdcd40efca0 <line:329:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fdcd40efd00 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fdcd40cb510 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fdcd40efd90 <line:330:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40efdf0 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fdcd40efeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f0d00 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fdcd40f0ce8 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fdcd40f0cc0 <col:90, col:110> 'float'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f0ca8 <col:90> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fdcd40f0c80 <col:90> '<builtin fn type>' Function 0x7fdcd40f0b90 '__builtin_huge_valf' 'float (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fdcd40eff50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40eff98 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f0000 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:332:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f1000 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fdcd40f0fe8 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fdcd40f0fa0 <col:91, col:108> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fdcd40f0f88 <col:91> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fdcd40f0ec8 <col:91> '<builtin fn type>' Function 0x7fdcd40f0d70 '__builtin_nanf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f0fd0 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fdcd40f0ef0 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fdcd40f0098 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f00e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f0148 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:333:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f12a8 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fdcd40f1290 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fdcd40f1248 <col:95, col:113> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fdcd40f1230 <col:95> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fdcd40f11c8 <col:95> '<builtin fn type>' Function 0x7fdcd40f1070 '__builtin_nansf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f1278 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fdcd40f11f0 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fdcd40f01e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f0228 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f0290 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:334:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f1300 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fdcd40f12e8 <col:85, <built-in>:132:28>
| |   | | |   `-FloatingLiteral 0x7fdcd40f12c8 <col:28> 'float' 1.401298e-45
| |   | | |-AlwaysInlineAttr 0x7fdcd40f0328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f0370 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40f0390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:336:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f03f0 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f0470 <line:337:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f04d0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f0550 <line:338:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f05b0 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f0630 <line:340:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f0690 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f0710 <line:341:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f0770 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fdcd40f07f0 <line:342:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fdcd40f0850 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fdcd40cb230 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd40f1360 <line:345:1, line:389:1> line:346:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd40f15d0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fdcd40f1668 <line:348:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fdcd40f16a8 <line:349:5, col:20> col:20 referenced type 'double'
| |   | | `-BuiltinType 0x7fdcd5819ee0 'double'
| |   | |-VarDecl 0x7fdcd40f1710 <line:351:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f1770 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f17f0 <line:353:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f1850 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f18d8 <line:354:5, <built-in>:153:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:354:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f1938 <<built-in>:153:26> 'int' 53
| |   | |-VarDecl 0x7fdcd40f1a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:5, <built-in>:148:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f1a60 <<built-in>:148:21> 'int' 15
| |   | |-VarDecl 0x7fdcd40f1af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:356:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fdcd40f1cb8 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fdcd40f1c90 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fdcd40f1c78 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fdcd40f1b50 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fdcd40f1c50 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fdcd40f1c10 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fdcd40f1be8 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fdcd40f1bd0 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fdcd40f1bb8 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fdcd40f1b70 <col:59> 'const int' lvalue Var 0x7fdcd40f18d8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fdcd40f1b98 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fdcd40f1c30 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fdcd40f1e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:357:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f3a58 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fdcd40f3a40 <col:78, <built-in>:159:21>
| |   | | |   `-FloatingLiteral 0x7fdcd40f3a20 <col:21> 'double' 2.225074e-308
| |   | | |-AlwaysInlineAttr 0x7fdcd40f1ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f1ee8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f1f50 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:358:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f3ab0 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fdcd40f3a98 <col:78, <built-in>:156:21>
| |   | | |   `-FloatingLiteral 0x7fdcd40f3a78 <col:21> 'double' 1.797693e+308
| |   | | |-AlwaysInlineAttr 0x7fdcd40f1fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f2030 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f2098 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:359:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f3ba0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fdcd40f3b88 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fdcd40f3b68 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double' prefix '-'
| |   | | |     `-CallExpr 0x7fdcd40f3b40 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double'
| |   | | |       `-ImplicitCastExpr 0x7fdcd40f3b28 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fdcd40f3ad0 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' lvalue CXXMethod 0x7fdcd40f1f50 'max' 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fdcd40f2130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f2178 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40f2198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:361:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f21f8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f2278 <line:362:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f22d8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f2360 <line:363:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:363:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f23c0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fdcd40f2490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:364:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f3bf8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fdcd40f3be0 <col:82, <built-in>:150:25>
| |   | | |   `-FloatingLiteral 0x7fdcd40f3bc0 <col:25> 'double' 2.220446e-16
| |   | | |-AlwaysInlineAttr 0x7fdcd40f2528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f2570 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f25d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:365:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f3c50 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fdcd40f3c38 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fdcd40f3c18 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fdcd40f2670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f26b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40f26e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:5, <built-in>:158:31> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fdcd40f2780 <<built-in>:158:25, col:31> 'int'
| |   | |   `-UnaryOperator 0x7fdcd40f2760 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fdcd40f2740 <col:27> 'int' 1021
| |   | |-VarDecl 0x7fdcd40f2810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:5, <built-in>:157:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fdcd40f28b0 <<built-in>:157:28, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fdcd40f2890 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fdcd40f2870 <col:30> 'int' 307
| |   | |-VarDecl 0x7fdcd40f2940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:5, <built-in>:155:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f29a0 <<built-in>:155:25> 'int' 1024
| |   | |-VarDecl 0x7fdcd40f2a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:5, <built-in>:154:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f2a90 <<built-in>:154:28> 'int' 308
| |   | |-VarDecl 0x7fdcd40f2b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:372:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f2b78 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f2bf8 <line:373:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f2c58 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f2cd8 <line:374:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f2d38 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f2db8 <line:375:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fdcd40f2e18 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fdcd40cb510 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fdcd40f2ea8 <line:376:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f2f08 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fdcd40f2fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:377:111> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f3e30 <col:82, col:111>
| |   | | | `-ReturnStmt 0x7fdcd40f3e18 <col:83, col:109>
| |   | | |   `-CallExpr 0x7fdcd40f3df0 <col:90, col:109> 'double'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f3dd8 <col:90> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fdcd40f3db0 <col:90> '<builtin fn type>' Function 0x7fdcd40f3cc0 '__builtin_huge_val' 'double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fdcd40f3068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f30b0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f3118 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:378:109> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f4130 <col:83, col:109>
| |   | | | `-ReturnStmt 0x7fdcd40f4118 <col:84, col:107>
| |   | | |   `-CallExpr 0x7fdcd40f40d0 <col:91, col:107> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fdcd40f40b8 <col:91> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fdcd40f3ff8 <col:91> '<builtin fn type>' Function 0x7fdcd40f3ea0 '__builtin_nan' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f4100 <col:105> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fdcd40f4020 <col:105> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fdcd40f31b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f31f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f3260 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:379:114> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f43d8 <col:87, col:114>
| |   | | | `-ReturnStmt 0x7fdcd40f43c0 <col:88, col:112>
| |   | | |   `-CallExpr 0x7fdcd40f4378 <col:95, col:112> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fdcd40f4360 <col:95> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fdcd40f42f8 <col:95> '<builtin fn type>' Function 0x7fdcd40f41a0 '__builtin_nans' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f43a8 <col:110> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fdcd40f4320 <col:110> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fdcd40f32f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f3340 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f33a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:380:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f4430 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fdcd40f4418 <col:85, <built-in>:146:28>
| |   | | |   `-FloatingLiteral 0x7fdcd40f43f8 <col:28> 'double' 4.940656e-324
| |   | | |-AlwaysInlineAttr 0x7fdcd40f3440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f3488 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40f34a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:382:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f3508 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f3588 <line:383:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f35e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f3668 <line:384:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f36c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f3748 <line:386:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f37a8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f3828 <line:387:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f3888 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fdcd40f3908 <line:388:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fdcd40f3968 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fdcd40cb230 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fdcd40f4490 <line:391:1, line:439:1> line:392:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'long double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fdcd40f4700 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fdcd40f4798 <line:394:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fdcd40f47d8 <line:395:5, col:25> col:25 referenced type 'long double'
| |   | | `-BuiltinType 0x7fdcd5819f00 'long double'
| |   | |-VarDecl 0x7fdcd40f4840 <line:397:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f48a0 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f4920 <line:399:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f4980 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f4a08 <line:400:5, <built-in>:167:27> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:400:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f4a68 <<built-in>:167:27> 'int' 64
| |   | |-VarDecl 0x7fdcd40f4af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:5, <built-in>:162:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f4b58 <<built-in>:162:22> 'int' 18
| |   | |-VarDecl 0x7fdcd40f4be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:402:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fdcd40f4db0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fdcd40f4d88 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fdcd40f4d70 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fdcd40f4c48 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fdcd40f4d48 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fdcd40f4d08 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fdcd40f4ce0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fdcd40f4cc8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fdcd40f4cb0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fdcd40f4c68 <col:59> 'const int' lvalue Var 0x7fdcd40f4a08 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fdcd40f4c90 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fdcd40f4d28 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fdcd40f4ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:403:98> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f6b80 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fdcd40f6b68 <col:78, <built-in>:173:22>
| |   | | |   `-FloatingLiteral 0x7fdcd40f6b38 <col:22> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fdcd40f4f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f4fd8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f5040 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:404:98> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f6be8 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fdcd40f6bd0 <col:78, <built-in>:170:22>
| |   | | |   `-FloatingLiteral 0x7fdcd40f6ba0 <col:22> 'long double' INF
| |   | | |-AlwaysInlineAttr 0x7fdcd40f50d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f5120 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f5188 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:405:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f6cd0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fdcd40f6cb8 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fdcd40f6c98 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' prefix '-'
| |   | | |     `-CallExpr 0x7fdcd40f6c70 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double'
| |   | | |       `-ImplicitCastExpr 0x7fdcd40f6c58 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fdcd40f6c08 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' lvalue CXXMethod 0x7fdcd40f5040 'max' 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fdcd40f5220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f5268 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40f5288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:407:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f52e8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f5368 <line:408:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f53c8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f5450 <line:409:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:409:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f54b0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fdcd40f5580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:410:106> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f6d38 <col:81, col:106>
| |   | | | `-ReturnStmt 0x7fdcd40f6d20 <col:82, <built-in>:164:26>
| |   | | |   `-FloatingLiteral 0x7fdcd40f6cf0 <col:26> 'long double' 1.084202e-19
| |   | | |-AlwaysInlineAttr 0x7fdcd40f5618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f5660 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f56c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:411:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f6da8 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fdcd40f6d90 <col:86, col:93>
| |   | | |   `-ImplicitCastExpr 0x7fdcd40f6d78 <col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' <FloatingCast>
| |   | | |     `-FloatingLiteral 0x7fdcd40f6d58 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fdcd40f5760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f57a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40f57d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:5, <built-in>:172:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fdcd40f5870 <<built-in>:172:26, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fdcd40f5850 <col:27, col:28> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fdcd40f5830 <col:28> 'int' 16381
| |   | |-VarDecl 0x7fdcd40f5900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:5, <built-in>:171:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fdcd40f59a0 <<built-in>:171:29, col:35> 'int'
| |   | |   `-UnaryOperator 0x7fdcd40f5980 <col:30, col:31> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fdcd40f5960 <col:31> 'int' 4931
| |   | |-VarDecl 0x7fdcd40f5a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:5, <built-in>:169:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f5ad0 <<built-in>:169:26> 'int' 16384
| |   | |-VarDecl 0x7fdcd40f5b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:5, <built-in>:168:29> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fdcd40f5bc0 <<built-in>:168:29> 'int' 4932
| |   | |-VarDecl 0x7fdcd40f5c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:418:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f5ca8 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f5d28 <line:419:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f5d88 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f5e08 <line:420:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f5e68 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f5ee8 <line:421:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fdcd40f5f48 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fdcd40cb510 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fdcd40f5fd8 <line:422:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f6038 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fdcd40f6100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:423:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f6f88 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fdcd40f6f70 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fdcd40f6f48 <col:90, col:110> 'long double'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f6f30 <col:90> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fdcd40f6f08 <col:90> '<builtin fn type>' Function 0x7fdcd40f6e18 '__builtin_huge_vall' 'long double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fdcd40f6198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f61e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f6248 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:424:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f7290 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fdcd40f7278 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fdcd40f7230 <col:91, col:108> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fdcd40f7218 <col:91> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fdcd40f7150 <col:91> '<builtin fn type>' Function 0x7fdcd40f6ff8 '__builtin_nanl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f7260 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fdcd40f7178 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fdcd40f62e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f6328 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f6390 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:425:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f7538 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fdcd40f7520 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fdcd40f74d8 <col:95, col:113> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fdcd40f74c0 <col:95> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fdcd40f7458 <col:95> '<builtin fn type>' Function 0x7fdcd40f7300 '__builtin_nansl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fdcd40f7508 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fdcd40f7480 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fdcd40f6428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f6470 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd40f64d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:426:112> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd40f75a0 <col:84, col:112>
| |   | | | `-ReturnStmt 0x7fdcd40f7588 <col:85, <built-in>:160:29>
| |   | | |   `-FloatingLiteral 0x7fdcd40f7558 <col:29> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fdcd40f6570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd40f65b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd40f65d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:431:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f6638 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f66b8 <line:433:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f6718 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fdcd40f6798 <line:434:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f67f8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f6878 <line:436:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f68d8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fdcd40f6958 <line:437:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fdcd40f69b8 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fdcd40f6a38 <line:438:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fdcd40f6a98 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fdcd40cb230 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateDecl 0x7fdcd40f7708 <line:441:1, line:485:1> line:442:28 numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fdcd40f75c0 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fdcd40f7670 <line:442:1, line:485:1> line:442:28 class numeric_limits definition
| |   |   |-private '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fdcd40f7980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fdcd40f7da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:442:1, col:28> col:28 implicit class numeric_limits
| |   |   |-TypedefDecl 0x7fdcd40f80f8 <line:445:5, col:68> col:68 referenced __base '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   | `-TemplateSpecializationType 0x7fdcd40f8050 '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>' dependent __libcpp_numeric_limits
| |   |   |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |   |   |-TypedefDecl 0x7fdcd40f8260 <line:446:5, col:35> col:35 referenced type 'typename __base::type'
| |   |   | `-DependentNameType 0x7fdcd40f81f0 'typename __base::type' dependent
| |   |   |-AccessSpecDecl 0x7fdcd40f82b8 <line:447:1, col:7> col:1 public
| |   |   |-VarDecl 0x7fdcd40f82f0 <line:448:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f8388 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fdcd40f84d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:449:99> col:61 constexpr min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40fa510 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fdcd40fa4f8 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fdcd40fa4d0 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40fa490 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f8570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f85b8 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fdcd40f8620 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:450:99> col:61 constexpr max 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40fa5e8 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fdcd40fa5d0 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fdcd40fa5a8 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40fa568 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f86b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f8700 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fdcd40f8768 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:451:105> col:61 constexpr lowest 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40fa6c0 <col:80, col:105>
| |   |   | | `-ReturnStmt 0x7fdcd40fa6a8 <col:81, col:103>
| |   |   | |   `-CallExpr 0x7fdcd40fa680 <col:88, col:103> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40fa640 <col:88, col:96> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f8800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f8848 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fdcd40f8870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:453:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f8908 <col:50, col:58> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f8960 <line:454:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f89f8 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f8a50 <line:455:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f8ae8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f8b38 <line:456:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f8bd0 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f8c20 <line:457:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f8cb8 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f8d08 <line:458:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f8da0 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f8df8 <line:459:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f8e90 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fdcd40f8f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:460:107> col:61 constexpr epsilon 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40fa798 <col:81, col:107>
| |   |   | | `-ReturnStmt 0x7fdcd40fa780 <col:82, col:105>
| |   |   | |   `-CallExpr 0x7fdcd40fa758 <col:89, col:105> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40fa718 <col:89, col:97> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f8fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f9008 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fdcd40f9070 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:461:115> col:61 constexpr round_error 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40fa870 <col:85, col:115>
| |   |   | | `-ReturnStmt 0x7fdcd40fa858 <col:86, col:113>
| |   |   | |   `-CallExpr 0x7fdcd40fa830 <col:93, col:113> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40fa7f0 <col:93, col:101> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f9108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f9150 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fdcd40f9178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:463:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f9210 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f9268 <line:464:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f9300 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f9358 <line:465:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f93f0 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f9448 <line:466:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f94e0 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f9530 <line:468:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f95c8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f9618 <line:469:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f96b0 <col:57, col:65> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f9700 <line:470:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f9798 <col:61, col:69> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f97e8 <line:471:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f9880 <col:68, col:76> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f98d0 <line:472:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f9968 <col:59, col:67> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fdcd40f9a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:473:109> col:61 constexpr infinity 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40fa948 <col:82, col:109>
| |   |   | | `-ReturnStmt 0x7fdcd40fa930 <col:83, col:107>
| |   |   | |   `-CallExpr 0x7fdcd40fa908 <col:90, col:107> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40fa8c8 <col:90, col:98> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f9a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f9ae0 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fdcd40f9b48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:474:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40faa20 <col:83, col:111>
| |   |   | | `-ReturnStmt 0x7fdcd40faa08 <col:84, col:109>
| |   |   | |   `-CallExpr 0x7fdcd40fa9e0 <col:91, col:109> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40fa9a0 <col:91, col:99> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f9be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f9c28 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fdcd40f9c90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:475:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40faaf8 <col:87, col:119>
| |   |   | | `-ReturnStmt 0x7fdcd40faae0 <col:88, col:117>
| |   |   | |   `-CallExpr 0x7fdcd40faab8 <col:95, col:117> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40faa78 <col:95, col:103> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f9d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f9d70 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fdcd40f9dd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:476:113> col:61 constexpr denorm_min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fdcd40fabd0 <col:84, col:113>
| |   |   | | `-ReturnStmt 0x7fdcd40fabb8 <col:85, col:111>
| |   |   | |   `-CallExpr 0x7fdcd40fab90 <col:92, col:111> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fdcd40fab50 <col:92, col:100> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fdcd40f9e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fdcd40f9eb8 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fdcd40f9ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:478:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40f9f70 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40f9fc0 <line:479:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40fa058 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40fa0a8 <line:480:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40fa140 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40fa190 <line:482:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40fa228 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fdcd40fa278 <line:483:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fdcd40fa310 <col:59, col:67> '<dependent type>' lvalue
| |   |   `-VarDecl 0x7fdcd40fa360 <line:484:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fdcd40fa3f8 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fdcd40fade0 parent 0x7fdcd40f7670 prev 0x7fdcd40f82f0 <line:487:1, line:488:55> col:55 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fb078 parent 0x7fdcd40f7670 prev 0x7fdcd40f8870 <line:489:1, line:490:54> col:54 digits 'const int' constexpr
| |   |-VarDecl 0x7fdcd40fb318 parent 0x7fdcd40f7670 prev 0x7fdcd40f8960 <line:491:1, line:492:54> col:54 digits10 'const int' constexpr
| |   |-VarDecl 0x7fdcd40fb5b8 parent 0x7fdcd40f7670 prev 0x7fdcd40f8a50 <line:493:1, line:494:54> col:54 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fdcd40fb850 parent 0x7fdcd40f7670 prev 0x7fdcd40f8b38 <line:495:1, line:496:55> col:55 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fbaf0 parent 0x7fdcd40f7670 prev 0x7fdcd40f8c20 <line:497:1, line:498:55> col:55 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fbd80 parent 0x7fdcd40f7670 prev 0x7fdcd40f8d08 <line:499:1, line:500:55> col:55 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fc018 parent 0x7fdcd40f7670 prev 0x7fdcd40f8df8 <line:501:1, line:502:54> col:54 radix 'const int' constexpr
| |   |-VarDecl 0x7fdcd40fc2b8 parent 0x7fdcd40f7670 prev 0x7fdcd40f9178 <line:503:1, line:504:54> col:54 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fdcd40fc558 parent 0x7fdcd40f7670 prev 0x7fdcd40f9268 <line:505:1, line:506:54> col:54 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fdcd40fc7f8 parent 0x7fdcd40f7670 prev 0x7fdcd40f9358 <line:507:1, line:508:54> col:54 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fdcd40fca98 parent 0x7fdcd40f7670 prev 0x7fdcd40f9448 <line:509:1, line:510:54> col:54 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fdcd40fcd30 parent 0x7fdcd40f7670 prev 0x7fdcd40f9530 <line:511:1, line:512:55> col:55 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fcfc0 parent 0x7fdcd40f7670 prev 0x7fdcd40f9618 <line:513:1, line:514:55> col:55 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fd250 parent 0x7fdcd40f7670 prev 0x7fdcd40f9700 <line:515:1, line:516:55> col:55 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fd4e0 parent 0x7fdcd40f7670 prev 0x7fdcd40f97e8 <line:517:1, line:518:69> col:69 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fdcd40fd770 parent 0x7fdcd40f7670 prev 0x7fdcd40f98d0 <line:519:1, line:520:55> col:55 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fea00 parent 0x7fdcd40f7670 prev 0x7fdcd40f9ed8 <line:521:1, line:522:55> col:55 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fec90 parent 0x7fdcd40f7670 prev 0x7fdcd40f9fc0 <line:523:1, line:524:55> col:55 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40fef20 parent 0x7fdcd40f7670 prev 0x7fdcd40fa0a8 <line:525:1, line:526:55> col:55 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40ff1b0 parent 0x7fdcd40f7670 prev 0x7fdcd40fa190 <line:527:1, line:528:55> col:55 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40ff440 parent 0x7fdcd40f7670 prev 0x7fdcd40fa278 <line:529:1, line:530:55> col:55 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd40ff6d0 parent 0x7fdcd40f7670 prev 0x7fdcd40fa360 <line:531:1, line:532:68> col:68 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd40ff908 <line:534:1, line:578:1> line:535:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd40ff770 <line:534:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd40ffa48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd40ffc38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:535:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fdcd40ffd88 <line:538:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fdcd40ffce0 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fdcd40ffdf0 <line:539:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fdcd40ff7b0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd40ff770 '_Tp'
| |   | |-AccessSpecDecl 0x7fdcd40ffe48 <line:540:1, col:7> col:1 public
| |   | |-VarDecl 0x7fdcd40ffe80 <line:541:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd40fff50 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd4100068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:542:99> col:61 constexpr min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd41020b0 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fdcd4102098 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fdcd4102070 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4102030 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4100100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4100148 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd41001b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:543:99> col:61 constexpr max 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4102188 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fdcd4102170 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fdcd4102148 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4102108 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4100248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4100290 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd41002f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:544:105> col:61 constexpr lowest 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4102260 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fdcd4102248 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fdcd4102220 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd41021e0 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4100390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd41003d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd4100400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:546:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100498 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41004f0 <line:547:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100588 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41005e0 <line:548:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100678 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41006c8 <line:549:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100760 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41007b0 <line:550:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100848 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4100898 <line:551:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100930 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4100988 <line:552:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100a30 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd4100ac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:553:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4102338 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fdcd4102320 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fdcd41022f8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd41022b8 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4100b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4100ba8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd4100c10 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:554:115> col:61 constexpr round_error 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4102410 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fdcd41023f8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fdcd41023d0 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4102390 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4100ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4100cf0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd4100d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:556:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100db0 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4100e08 <line:557:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100ea0 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4100ef8 <line:558:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4100f90 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4100fe8 <line:559:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101080 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41010d0 <line:561:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101168 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41011b8 <line:562:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101250 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41012a0 <line:563:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101338 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4101388 <line:564:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101420 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4101470 <line:565:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101508 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd41015a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:566:109> col:61 constexpr infinity 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd41024e8 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fdcd41024d0 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fdcd41024a8 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4102468 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4101638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4101680 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd41016e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:567:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd41025c0 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fdcd41025a8 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fdcd4102580 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4102540 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4101780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd41017c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd4101830 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:568:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4102698 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fdcd4102680 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fdcd4102658 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4102618 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd41018c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4101910 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd4101978 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:569:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4102770 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fdcd4102758 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fdcd4102730 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd41026f0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4101a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4101a58 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd4101a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:571:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101b10 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4101b60 <line:572:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101bf8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4101c48 <line:573:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101ce0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4101d30 <line:575:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101dc8 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4101e18 <line:576:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4101eb0 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fdcd4101f00 <line:577:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fdcd4101f98 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fdcd4102980 parent 0x7fdcd40ff908 prev 0x7fdcd40ffe80 <line:580:1, line:581:61> col:61 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4102c38 parent 0x7fdcd40ff908 prev 0x7fdcd4100400 <line:582:1, line:583:60> col:60 digits 'const int' constexpr
| |   |-VarDecl 0x7fdcd4102ed8 parent 0x7fdcd40ff908 prev 0x7fdcd41004f0 <line:584:1, line:585:60> col:60 digits10 'const int' constexpr
| |   |-VarDecl 0x7fdcd4103178 parent 0x7fdcd40ff908 prev 0x7fdcd41005e0 <line:586:1, line:587:60> col:60 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fdcd4103410 parent 0x7fdcd40ff908 prev 0x7fdcd41006c8 <line:588:1, line:589:61> col:61 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd41036a0 parent 0x7fdcd40ff908 prev 0x7fdcd41007b0 <line:590:1, line:591:61> col:61 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4103930 parent 0x7fdcd40ff908 prev 0x7fdcd4100898 <line:592:1, line:593:61> col:61 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4103bc8 parent 0x7fdcd40ff908 prev 0x7fdcd4100988 <line:594:1, line:595:60> col:60 radix 'const int' constexpr
| |   |-VarDecl 0x7fdcd4103e68 parent 0x7fdcd40ff908 prev 0x7fdcd4100d18 <line:596:1, line:597:60> col:60 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fdcd4104108 parent 0x7fdcd40ff908 prev 0x7fdcd4100e08 <line:598:1, line:599:60> col:60 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fdcd41043a8 parent 0x7fdcd40ff908 prev 0x7fdcd4100ef8 <line:600:1, line:601:60> col:60 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fdcd4104648 parent 0x7fdcd40ff908 prev 0x7fdcd4100fe8 <line:602:1, line:603:60> col:60 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fdcd41048e0 parent 0x7fdcd40ff908 prev 0x7fdcd41010d0 <line:604:1, line:605:61> col:61 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4104b70 parent 0x7fdcd40ff908 prev 0x7fdcd41011b8 <line:606:1, line:607:61> col:61 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4104e00 parent 0x7fdcd40ff908 prev 0x7fdcd41012a0 <line:608:1, line:609:61> col:61 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4105090 parent 0x7fdcd40ff908 prev 0x7fdcd4101388 <line:610:1, line:611:75> col:75 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fdcd4105320 parent 0x7fdcd40ff908 prev 0x7fdcd4101470 <line:612:1, line:613:61> col:61 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd41055b0 parent 0x7fdcd40ff908 prev 0x7fdcd4101a78 <line:614:1, line:615:61> col:61 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4105840 parent 0x7fdcd40ff908 prev 0x7fdcd4101b60 <line:616:1, line:617:61> col:61 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4105ad0 parent 0x7fdcd40ff908 prev 0x7fdcd4101c48 <line:618:1, line:619:61> col:61 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4105d60 parent 0x7fdcd40ff908 prev 0x7fdcd4101d30 <line:620:1, line:621:61> col:61 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4105ff0 parent 0x7fdcd40ff908 prev 0x7fdcd4101e18 <line:622:1, line:623:61> col:61 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4106280 parent 0x7fdcd40ff908 prev 0x7fdcd4101f00 <line:624:1, line:625:74> col:74 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd41064b8 <line:627:1, line:671:1> line:628:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd4106320 <line:627:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd41065f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd41067e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:628:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fdcd4106938 <line:631:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fdcd4106890 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fdcd41069a0 <line:632:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fdcd4106360 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd4106320 '_Tp'
| |   | |-AccessSpecDecl 0x7fdcd4106a00 <line:633:1, col:7> col:1 public
| |   | |-VarDecl 0x7fdcd4106a38 <line:634:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4106b10 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd4106c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:635:99> col:61 constexpr min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4108c98 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fdcd4108c80 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fdcd4108c58 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4108c18 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4106cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4106d08 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd4106d70 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:636:99> col:61 constexpr max 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4108d70 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fdcd4108d58 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fdcd4108d30 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4108cf0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4106e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4106e50 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd4106eb8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:637:105> col:61 constexpr lowest 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4108e48 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fdcd4108e30 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fdcd4108e08 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4108dc8 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4106f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4106f98 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd4106fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:639:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107058 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41070b0 <line:640:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107148 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41071a0 <line:641:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107238 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107288 <line:642:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107320 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107370 <line:643:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107408 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107458 <line:644:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd41074f0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107548 <line:645:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd41075e0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd4107678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:646:107> col:61 constexpr epsilon 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4108f20 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fdcd4108f08 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fdcd4108ee0 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4108ea0 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4107710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4107758 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd41077c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:647:115> col:61 constexpr round_error 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4108ff8 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fdcd4108fe0 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fdcd4108fb8 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4108f78 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4107858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd41078a0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd41078c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:649:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107960 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41079b8 <line:650:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107a50 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107aa8 <line:651:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107b40 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107b98 <line:652:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107c30 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107c80 <line:654:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107d18 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107d68 <line:655:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107e00 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107e50 <line:656:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107ee8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4107f38 <line:657:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4107fd0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4108020 <line:658:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd41080b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd4108150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:659:109> col:61 constexpr infinity 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd41090d0 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fdcd41090b8 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fdcd4109090 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4109050 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd41081e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4108230 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd4108298 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:660:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd41091a8 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fdcd4109190 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fdcd4109168 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4109128 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4108330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4108378 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd41083e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:661:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4109280 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fdcd4109268 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fdcd4109240 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd4109200 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd4108478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd41084c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd4108528 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:662:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd4109358 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fdcd4109340 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fdcd4109318 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd41092d8 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd41085c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd4108608 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd4108628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:664:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd41086c0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4108710 <line:665:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd41087a8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41087f8 <line:666:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4108890 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd41088e0 <line:668:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4108978 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd4108a00 <line:669:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd4108a98 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fdcd4108ae8 <line:670:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fdcd4108b80 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fdcd4109570 parent 0x7fdcd41064b8 prev 0x7fdcd4106a38 <line:673:1, line:674:64> col:64 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4109808 parent 0x7fdcd41064b8 prev 0x7fdcd4106fc0 <line:675:1, line:676:63> col:63 digits 'const int' constexpr
| |   |-VarDecl 0x7fdcd4109aa8 parent 0x7fdcd41064b8 prev 0x7fdcd41070b0 <line:677:1, line:678:63> col:63 digits10 'const int' constexpr
| |   |-VarDecl 0x7fdcd4109d48 parent 0x7fdcd41064b8 prev 0x7fdcd41071a0 <line:679:1, line:680:63> col:63 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fdcd4109fe0 parent 0x7fdcd41064b8 prev 0x7fdcd4107288 <line:681:1, line:682:64> col:64 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410a270 parent 0x7fdcd41064b8 prev 0x7fdcd4107370 <line:683:1, line:684:64> col:64 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410a500 parent 0x7fdcd41064b8 prev 0x7fdcd4107458 <line:685:1, line:686:64> col:64 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410a798 parent 0x7fdcd41064b8 prev 0x7fdcd4107548 <line:687:1, line:688:63> col:63 radix 'const int' constexpr
| |   |-VarDecl 0x7fdcd410aa40 parent 0x7fdcd41064b8 prev 0x7fdcd41078c8 <line:689:1, line:690:63> col:63 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fdcd410acd8 parent 0x7fdcd41064b8 prev 0x7fdcd41079b8 <line:691:1, line:692:63> col:63 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fdcd410af78 parent 0x7fdcd41064b8 prev 0x7fdcd4107aa8 <line:693:1, line:694:63> col:63 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fdcd410b218 parent 0x7fdcd41064b8 prev 0x7fdcd4107b98 <line:695:1, line:696:63> col:63 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fdcd410b4b0 parent 0x7fdcd41064b8 prev 0x7fdcd4107c80 <line:697:1, line:698:64> col:64 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410b740 parent 0x7fdcd41064b8 prev 0x7fdcd4107d68 <line:699:1, line:700:64> col:64 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410b9d0 parent 0x7fdcd41064b8 prev 0x7fdcd4107e50 <line:701:1, line:702:64> col:64 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410bc60 parent 0x7fdcd41064b8 prev 0x7fdcd4107f38 <line:703:1, line:704:78> col:78 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fdcd410bef0 parent 0x7fdcd41064b8 prev 0x7fdcd4108020 <line:705:1, line:706:64> col:64 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410c180 parent 0x7fdcd41064b8 prev 0x7fdcd4108628 <line:707:1, line:708:64> col:64 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410c410 parent 0x7fdcd41064b8 prev 0x7fdcd4108710 <line:709:1, line:710:64> col:64 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410c6a0 parent 0x7fdcd41064b8 prev 0x7fdcd41087f8 <line:711:1, line:712:64> col:64 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410c930 parent 0x7fdcd41064b8 prev 0x7fdcd41088e0 <line:713:1, line:714:64> col:64 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410cbf0 parent 0x7fdcd41064b8 prev 0x7fdcd4108a00 <line:715:1, line:716:64> col:64 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd410ce80 parent 0x7fdcd41064b8 prev 0x7fdcd4108ae8 <line:717:1, line:718:77> col:77 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fdcd410d0b8 <line:720:1, line:764:1> line:721:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fdcd410cf20 <line:720:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fdcd410d1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fdcd410d3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:721:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fdcd410d538 <line:724:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fdcd410d490 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fdcd410d5a0 <line:725:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fdcd410cf60 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fdcd410cf20 '_Tp'
| |   | |-AccessSpecDecl 0x7fdcd410d5f8 <line:726:1, col:7> col:1 public
| |   | |-VarDecl 0x7fdcd410d630 <line:727:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410d700 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd410d818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:728:99> col:61 constexpr min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410f860 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fdcd410f848 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fdcd410f820 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410f7e0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410d8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410d8f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd410d960 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:729:99> col:61 constexpr max 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410f938 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fdcd410f920 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fdcd410f8f8 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410f8b8 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410d9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410da40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd410daa8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:730:105> col:61 constexpr lowest 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410fa10 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fdcd410f9f8 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fdcd410f9d0 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410f990 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410db40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410db88 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd410dbb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:732:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410dc48 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410dca0 <line:733:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410dd38 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410dd90 <line:734:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410de28 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410de78 <line:735:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410df10 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410df60 <line:736:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410dff8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410e048 <line:737:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410e0e0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410e138 <line:738:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410e1d0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd410e268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:739:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410fae8 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fdcd410fad0 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fdcd410faa8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410fa68 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410e300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410e348 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd410e3b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:740:115> col:61 constexpr round_error 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410fbc0 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fdcd410fba8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fdcd410fb80 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410fb40 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410e448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410e490 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd410e4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:742:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410e550 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410e5a8 <line:743:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410e640 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410e698 <line:744:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410e730 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410e788 <line:745:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410e820 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410e870 <line:747:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410e908 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410e958 <line:748:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410ea00 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410ea50 <line:749:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410eae8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410eb38 <line:750:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410ebd0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410ec20 <line:751:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410ecb8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fdcd410ed50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:752:109> col:61 constexpr infinity 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410fc98 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fdcd410fc80 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fdcd410fc58 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410fc18 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410ede8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410ee30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd410ee98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:753:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410fd70 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fdcd410fd58 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fdcd410fd30 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410fcf0 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410ef30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410ef78 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd410efe0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:754:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410fe48 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fdcd410fe30 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fdcd410fe08 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410fdc8 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410f078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410f0c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fdcd410f128 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:755:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fdcd410ff20 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fdcd410ff08 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fdcd410fee0 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fdcd410fea0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fdcd410f1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fdcd410f208 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fdcd410f228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:757:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410f2c0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410f310 <line:758:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410f3a8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410f3f8 <line:759:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410f490 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410f4e0 <line:761:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410f578 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fdcd410f5c8 <line:762:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fdcd410f660 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fdcd410f6b0 <line:763:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fdcd410f748 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fdcd4110130 parent 0x7fdcd410d0b8 prev 0x7fdcd410d630 <line:766:1, line:767:70> col:70 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd41103c8 parent 0x7fdcd410d0b8 prev 0x7fdcd410dbb0 <line:768:1, line:769:69> col:69 digits 'const int' constexpr
| |   |-VarDecl 0x7fdcd4110668 parent 0x7fdcd410d0b8 prev 0x7fdcd410dca0 <line:770:1, line:771:69> col:69 digits10 'const int' constexpr
| |   |-VarDecl 0x7fdcd4110908 parent 0x7fdcd410d0b8 prev 0x7fdcd410dd90 <line:772:1, line:773:69> col:69 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fdcd4110bb0 parent 0x7fdcd410d0b8 prev 0x7fdcd410de78 <line:774:1, line:775:70> col:70 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4110e40 parent 0x7fdcd410d0b8 prev 0x7fdcd410df60 <line:776:1, line:777:70> col:70 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd41110d0 parent 0x7fdcd410d0b8 prev 0x7fdcd410e048 <line:778:1, line:779:70> col:70 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4111368 parent 0x7fdcd410d0b8 prev 0x7fdcd410e138 <line:780:1, line:781:69> col:69 radix 'const int' constexpr
| |   |-VarDecl 0x7fdcd4111608 parent 0x7fdcd410d0b8 prev 0x7fdcd410e4b8 <line:782:1, line:783:69> col:69 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fdcd41118a8 parent 0x7fdcd410d0b8 prev 0x7fdcd410e5a8 <line:784:1, line:785:69> col:69 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fdcd4111b48 parent 0x7fdcd410d0b8 prev 0x7fdcd410e698 <line:786:1, line:787:69> col:69 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fdcd4111de8 parent 0x7fdcd410d0b8 prev 0x7fdcd410e788 <line:788:1, line:789:69> col:69 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fdcd4112080 parent 0x7fdcd410d0b8 prev 0x7fdcd410e870 <line:790:1, line:791:70> col:70 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4112310 parent 0x7fdcd410d0b8 prev 0x7fdcd410e958 <line:792:1, line:793:70> col:70 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd41125a0 parent 0x7fdcd410d0b8 prev 0x7fdcd410ea50 <line:794:1, line:795:70> col:70 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4112830 parent 0x7fdcd410d0b8 prev 0x7fdcd410eb38 <line:796:1, line:797:84> col:84 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fdcd4112ac0 parent 0x7fdcd410d0b8 prev 0x7fdcd410ec20 <line:798:1, line:799:70> col:70 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4112d50 parent 0x7fdcd410d0b8 prev 0x7fdcd410f228 <line:800:1, line:801:70> col:70 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4112fe0 parent 0x7fdcd410d0b8 prev 0x7fdcd410f310 <line:802:1, line:803:70> col:70 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4113270 parent 0x7fdcd410d0b8 prev 0x7fdcd410f3f8 <line:804:1, line:805:70> col:70 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4113500 parent 0x7fdcd410d0b8 prev 0x7fdcd410f4e0 <line:806:1, line:807:70> col:70 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fdcd4113790 parent 0x7fdcd410d0b8 prev 0x7fdcd410f5c8 <line:808:1, line:809:70> col:70 tinyness_before 'const _Bool' constexpr
| |   `-VarDecl 0x7fdcd4113a20 parent 0x7fdcd410d0b8 prev 0x7fdcd410f6b0 <line:810:1, line:811:83> col:83 round_style 'const enum std::__1::float_round_style' constexpr
| |-FunctionTemplateDecl 0x7fdcd4113d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:316:1, line:322:1> line:319:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7fdcd4113ac0 <line:316:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4113c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:322:1> line:319:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fdcd4113b80 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4114490 <line:320:1, line:322:1>
| |   | `-ReturnStmt 0x7fdcd4114478 <line:321:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7fdcd4114460 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fdcd4114440 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7fdcd4114410 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7fdcd4113e70 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fdcd4113e18 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fdcd4113df8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fdcd4113dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fdcd4113b80 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fdcd4113e50 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fdcd4113fe8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7fdcd4113fd0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fdcd4113fa8 <col:37> 'int (float)' lvalue Function 0x7fdcd6002468 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fdcd4113f80 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fdcd4113f60 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fdcd4113ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fdcd4113b80 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fdcd41143e0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7fdcd41140b8 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fdcd4114060 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fdcd4114040 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fdcd4114018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fdcd4113b80 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fdcd4114098 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fdcd4114230 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7fdcd4114218 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fdcd41141f0 <col:37> 'int (double)' lvalue Function 0x7fdcd68009b0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fdcd41141c8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fdcd41141a8 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fdcd4114138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fdcd4113b80 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fdcd41143b0 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7fdcd4114398 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fdcd4114370 <col:37> 'int (long double)' lvalue Function 0x7fdcd6804088 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fdcd4114348 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fdcd4114328 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fdcd41142b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fdcd4113b80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4113d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd4113dc0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd4114a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:326:1, line:332:1> line:329:1 signbit
| | |-TemplateTypeParmDecl 0x7fdcd41144b0 <line:326:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4114a00 <line:327:1, line:332:1> line:329:1 signbit 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd41148c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4114e48 <line:330:1, line:332:1>
| |   | `-ReturnStmt 0x7fdcd4114e30 <line:331:5, col:73>
| |   |   `-CallExpr 0x7fdcd4114e00 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd4114b48 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7fdcd4113d20
| |   |     `-CStyleCastExpr 0x7fdcd4114dd8 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4114d90 <col:65> '_A1' lvalue ParmVar 0x7fdcd41148c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4114af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4114b38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4115590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:334:1, line:339:24> line:338:1 signbit
| | |-TemplateTypeParmDecl 0x7fdcd4114e68 <line:334:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd41154f8 <line:335:1, line:339:24> line:338:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd41153e0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd41156c8 <line:339:1, col:24>
| |   | `-ReturnStmt 0x7fdcd41156b0 <col:3, col:21>
| |   |   `-BinaryOperator 0x7fdcd4115688 <col:10, col:21> '<dependent type>' '<'
| |   |     |-DeclRefExpr 0x7fdcd4115640 <col:10> '_A1' lvalue ParmVar 0x7fdcd41153e0 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fdcd4115668 <col:21> 'int' 0
| |   |-AlwaysInlineAttr 0x7fdcd41155e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4115630 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4115de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:341:1, line:346:17> line:345:1 signbit
| | |-TemplateTypeParmDecl 0x7fdcd41156e8 <line:341:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4115d48 <line:342:1, line:346:17> line:345:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && !std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4115c30 <col:9> col:12 '_A1'
| |   |-CompoundStmt 0x7fdcd4115ec0 <line:346:1, col:17>
| |   | `-ReturnStmt 0x7fdcd4115ea8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fdcd4115e90 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fdcd4115e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4115e80 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4116148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:378:1, line:384:1> line:381:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7fdcd4115ee0 <line:378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd41160b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:384:1> line:381:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7fdcd4115fa0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd41168a0 <line:382:1, line:384:1>
| |   | `-ReturnStmt 0x7fdcd4116888 <line:383:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7fdcd4116868 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7fdcd4116838 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7fdcd4116298 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7fdcd4116240 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7fdcd4116220 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7fdcd41161f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fdcd4115fa0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7fdcd4116278 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7fdcd4116410 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7fdcd41163f8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7fdcd41163d0 <col:37> 'int (float)' lvalue Function 0x7fdcd584d798 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7fdcd41163a8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7fdcd4116388 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7fdcd4116318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fdcd4115fa0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7fdcd4116808 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7fdcd41164e0 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fdcd4116488 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fdcd4116468 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fdcd4116440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fdcd4115fa0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fdcd41164c0 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7fdcd4116658 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7fdcd4116640 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fdcd4116618 <col:37> 'int (double)' lvalue Function 0x7fdcd584d918 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7fdcd41165f0 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7fdcd41165d0 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fdcd4116560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fdcd4115fa0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7fdcd41167d8 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7fdcd41167c0 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7fdcd4116798 <col:37> 'int (long double)' lvalue Function 0x7fdcd584da98 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7fdcd4116770 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7fdcd4116750 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7fdcd41166e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fdcd4115fa0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd41161a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd41161e8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd4116e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:1, line:394:1> line:391:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fdcd41168c0 <line:388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4116dc8 <line:389:1, line:394:1> line:391:1 fpclassify 'typename std::enable_if<std::is_floating_point<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4116cb0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4117128 <line:392:1, line:394:1>
| |   | `-ReturnStmt 0x7fdcd4117110 <line:393:5, col:76>
| |   |   `-CallExpr 0x7fdcd41170e0 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd4116f10 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7fdcd4116148
| |   |     `-CStyleCastExpr 0x7fdcd41170b8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4117070 <col:68> '_A1' lvalue ParmVar 0x7fdcd4116cb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4116eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4116f00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd41176e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:396:1, line:400:47> line:399:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fdcd4117148 <line:396:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4117648 <line:397:1, line:400:47> line:399:1 fpclassify 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4117530 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4117888 <line:400:1, col:47>
| |   | `-ReturnStmt 0x7fdcd4117870 <col:3, /usr/include/math.h:77:25>
| |   |   `-ConditionalOperator 0x7fdcd4117840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, /usr/include/math.h:77:25> 'int'
| |   |     |-BinaryOperator 0x7fdcd41177d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, col:22> '<dependent type>' '=='
| |   |     | |-DeclRefExpr 0x7fdcd4117790 <col:10> '_A1' lvalue ParmVar 0x7fdcd4117530 '__lcpp_x' '_A1'
| |   |     | `-IntegerLiteral 0x7fdcd41177b8 <col:22> 'int' 0
| |   |     |-IntegerLiteral 0x7fdcd4117800 </usr/include/math.h:76:25> 'int' 3
| |   |     `-IntegerLiteral 0x7fdcd4117820 <line:77:25> 'int' 4
| |   |-AlwaysInlineAttr 0x7fdcd4117738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4117780 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4117ad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:424:1, line:430:1> line:427:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7fdcd41178a8 <line:424:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4117a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:430:1> line:427:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fdcd4117970 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4118240 <line:428:1, line:430:1>
| |   | `-ReturnStmt 0x7fdcd4118228 <line:429:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7fdcd4118210 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fdcd41181f0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7fdcd41181c0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7fdcd4117c20 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fdcd4117bc8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fdcd4117ba8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fdcd4117b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fdcd4117970 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fdcd4117c00 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fdcd4117d98 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fdcd4117d80 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fdcd4117d58 <col:37> 'int (float)' lvalue Function 0x7fdcd4092d90 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fdcd4117d30 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fdcd4117d10 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fdcd4117ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fdcd4117970 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fdcd4118190 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7fdcd4117e68 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fdcd4117e10 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fdcd4117df0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fdcd4117dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fdcd4117970 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fdcd4117e48 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fdcd4117fe0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fdcd4117fc8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fdcd4117fa0 <col:37> 'int (double)' lvalue Function 0x7fdcd4093600 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fdcd4117f78 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fdcd4117f58 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fdcd4117ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fdcd4117970 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fdcd4118160 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fdcd4118148 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fdcd4118120 <col:37> 'int (long double)' lvalue Function 0x7fdcd6000700 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fdcd41180f8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fdcd41180d8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fdcd4118068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fdcd4117970 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4117b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd4117b70 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd4118980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:434:1, line:442:1> line:439:1 isfinite
| | |-TemplateTypeParmDecl 0x7fdcd4118260 <line:434:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd41188e8 <line:435:1, line:442:1> line:439:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd41187d0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4119c58 <line:440:1, line:442:1>
| |   | `-ReturnStmt 0x7fdcd4119c40 <line:441:5, col:74>
| |   |   `-CallExpr 0x7fdcd4119c10 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd4119a48 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7fdcd4117ad0
| |   |     `-CStyleCastExpr 0x7fdcd4119be8 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4119ba0 <col:66> '_A1' lvalue ParmVar 0x7fdcd41187d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd41189d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4119a38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd411a370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:444:1, line:450:16> line:449:1 isfinite
| | |-TemplateTypeParmDecl 0x7fdcd4119c78 <line:444:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411a2d8 <line:445:1, line:450:16> line:449:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd411a1c0 <col:10> col:13 '_A1'
| |   |-CompoundStmt 0x7fdcd411a450 <line:450:1, col:16>
| |   | `-ReturnStmt 0x7fdcd411a438 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fdcd411a420 <col:10> '_Bool' true
| |   |-AlwaysInlineAttr 0x7fdcd411a3c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd411a410 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd411a690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:458:1, line:464:1> line:461:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7fdcd411a470 <line:458:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411a5f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:464:1> line:461:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fdcd411a530 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd411ae00 <line:462:1, line:464:1>
| |   | `-ReturnStmt 0x7fdcd411ade8 <line:463:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7fdcd411add0 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fdcd411adb0 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7fdcd411ad80 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7fdcd411a7e0 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fdcd411a788 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fdcd411a768 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fdcd411a740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fdcd411a530 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fdcd411a7c0 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fdcd411a958 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fdcd411a940 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fdcd411a918 <col:37> 'int (float)' lvalue Function 0x7fdcd6000f70 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fdcd411a8f0 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fdcd411a8d0 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fdcd411a860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fdcd411a530 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fdcd411ad50 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7fdcd411aa28 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fdcd411a9d0 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fdcd411a9b0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fdcd411a988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fdcd411a530 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fdcd411aa08 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fdcd411aba0 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fdcd411ab88 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fdcd411ab60 <col:37> 'int (double)' lvalue Function 0x7fdcd6001290 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fdcd411ab38 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fdcd411ab18 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fdcd411aaa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fdcd411a530 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fdcd411ad20 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fdcd411ad08 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fdcd411ace0 <col:37> 'int (long double)' lvalue Function 0x7fdcd60019b0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fdcd411acb8 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fdcd411ac98 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fdcd411ac28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fdcd411a530 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd411a6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd411a730 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd411b400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:468:1, line:476:1> line:473:1 isinf
| | |-TemplateTypeParmDecl 0x7fdcd411ae20 <line:468:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411b368 <line:469:1, line:476:1> line:473:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd411b290 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd411b6c8 <line:474:1, line:476:1>
| |   | `-ReturnStmt 0x7fdcd411b6b0 <line:475:5, col:71>
| |   |   `-CallExpr 0x7fdcd411b680 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd411b4b0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7fdcd411a690
| |   |     `-CStyleCastExpr 0x7fdcd411b658 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd411b610 <col:63> '_A1' lvalue ParmVar 0x7fdcd411b290 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd411b458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd411b4a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd411bd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:478:1, line:484:17> line:483:1 isinf
| | |-TemplateTypeParmDecl 0x7fdcd411b6e8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411bc68 <line:479:1, line:484:17> line:483:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd411bb90 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fdcd411bde0 <line:484:1, col:17>
| |   | `-ReturnStmt 0x7fdcd411bdc8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fdcd411bdb0 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fdcd411bd58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd411bda0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd411c020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:492:1, line:498:1> line:495:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7fdcd411be00 <line:492:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411bf88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:498:1> line:495:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fdcd411bec0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd411c790 <line:496:1, line:498:1>
| |   | `-ReturnStmt 0x7fdcd411c778 <line:497:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7fdcd411c760 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fdcd411c740 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7fdcd411c710 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7fdcd411c170 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fdcd411c118 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fdcd411c0f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fdcd411c0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fdcd411bec0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fdcd411c150 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fdcd411c2e8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fdcd411c2d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fdcd411c2a8 <col:37> 'int (float)' lvalue Function 0x7fdcd6001cd0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fdcd411c280 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fdcd411c260 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fdcd411c1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fdcd411bec0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fdcd411c6e0 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7fdcd411c3b8 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fdcd411c360 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fdcd411c340 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fdcd411c318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fdcd411bec0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fdcd411c398 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fdcd411c530 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fdcd411c518 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fdcd411c4f0 <col:37> 'int (double)' lvalue Function 0x7fdcd6001f58 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fdcd411c4c8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fdcd411c4a8 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fdcd411c438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fdcd411bec0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fdcd411c6b0 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fdcd411c698 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fdcd411c670 <col:37> 'int (long double)' lvalue Function 0x7fdcd60021e0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fdcd411c648 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fdcd411c628 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fdcd411c5b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fdcd411bec0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd411c078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd411c0c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd411cc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:502:1, line:508:1> line:505:1 isnan
| | |-TemplateTypeParmDecl 0x7fdcd411c7b0 <line:502:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411cbb8 <line:503:1, line:508:1> line:505:1 isnan 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd411cae0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd411cf18 <line:506:1, line:508:1>
| |   | `-ReturnStmt 0x7fdcd411cf00 <line:507:5, col:71>
| |   |   `-CallExpr 0x7fdcd411ced0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd411cd00 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7fdcd411c020
| |   |     `-CStyleCastExpr 0x7fdcd411cea8 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd411ce60 <col:63> '_A1' lvalue ParmVar 0x7fdcd411cae0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd411cca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd411ccf0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd411d4d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:510:1, line:514:17> line:513:1 isnan
| | |-TemplateTypeParmDecl 0x7fdcd411cf38 <line:510:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411d438 <line:511:1, line:514:17> line:513:1 isnan 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd411d320 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fdcd411d5b0 <line:514:1, col:17>
| |   | `-ReturnStmt 0x7fdcd411d598 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fdcd411d580 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fdcd411d528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd411d570 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd411d7f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:522:1, line:528:1> line:525:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7fdcd411d5d0 <line:522:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411d758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:528:1> line:525:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fdcd411d690 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd411df78 <line:526:1, line:528:1>
| |   | `-ReturnStmt 0x7fdcd411df60 <line:527:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7fdcd411df48 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fdcd411df28 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7fdcd411def8 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7fdcd411d940 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fdcd411d8e8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fdcd411d8c8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fdcd411d8a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fdcd411d690 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fdcd411d920 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fdcd411dad0 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fdcd411dab8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fdcd411da90 <col:37> 'int (float)' lvalue Function 0x7fdcd6806638 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fdcd411da68 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fdcd411da48 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fdcd411d9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fdcd411d690 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fdcd411dec8 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7fdcd411dba0 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fdcd411db48 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fdcd411db28 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fdcd411db00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fdcd411d690 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fdcd411db80 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fdcd411dd18 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fdcd411dd00 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fdcd411dcd8 <col:37> 'int (double)' lvalue Function 0x7fdcd6806e90 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fdcd411dcb0 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fdcd411dc90 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fdcd411dc20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fdcd411d690 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fdcd411de98 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fdcd411de80 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fdcd411de58 <col:37> 'int (long double)' lvalue Function 0x7fdcd68072d8 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fdcd411de30 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fdcd411de10 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fdcd411dda0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fdcd411d690 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd411d848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd411d890 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd411e440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:532:1, line:538:1> line:535:1 isnormal
| | |-TemplateTypeParmDecl 0x7fdcd411df98 <line:532:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411e3a8 <line:533:1, line:538:1> line:535:1 isnormal 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd411e2d0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd411e708 <line:536:1, line:538:1>
| |   | `-ReturnStmt 0x7fdcd411e6f0 <line:537:5, col:74>
| |   |   `-CallExpr 0x7fdcd411e6c0 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd411e4f0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7fdcd411d7f0
| |   |     `-CStyleCastExpr 0x7fdcd411e698 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd411e650 <col:66> '_A1' lvalue ParmVar 0x7fdcd411e2d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd411e498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd411e4e0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd411ebd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:540:1, line:544:25> line:543:1 isnormal
| | |-TemplateTypeParmDecl 0x7fdcd411e728 <line:540:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd411eb38 <line:541:1, line:544:25> line:543:1 isnormal 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd411ea60 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd411ed08 <line:544:1, col:25>
| |   | `-ReturnStmt 0x7fdcd411ecf0 <col:3, col:22>
| |   |   `-BinaryOperator 0x7fdcd411ecc8 <col:10, col:22> '<dependent type>' '!='
| |   |     |-DeclRefExpr 0x7fdcd411ec80 <col:10> '_A1' lvalue ParmVar 0x7fdcd411ea60 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fdcd411eca8 <col:22> 'int' 0
| |   |-AlwaysInlineAttr 0x7fdcd411ec28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd411ec70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd411f090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:552:1, line:558:1> line:555:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7fdcd411ed28 <line:552:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd411ed98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd411eff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:558:1> line:555:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fdcd411ee68 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd411eed8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd411f3f8 <line:556:1, line:558:1>
| |   | `-ReturnStmt 0x7fdcd411f3e0 <line:557:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7fdcd411f3a8 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fdcd411f2f0 <col:25> '<builtin fn type>' Function 0x7fdcd411f200 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fdcd411f340 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fdcd411f318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:22> '_A1' lvalue ParmVar 0x7fdcd411ee68 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fdcd411f388 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fdcd411f360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:32> '_A2' lvalue ParmVar 0x7fdcd411eed8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd411f0f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd411f138 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd411fc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:562:1, line:574:1> line:570:1 isgreater
| | |-TemplateTypeParmDecl 0x7fdcd411f418 <line:562:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd411f488 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd411fbc8 <line:563:1, line:574:1> line:570:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd411fa30 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd411faa0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd4120150 <line:571:1, line:574:1>
| |   | |-DeclStmt 0x7fdcd411ffa8 <line:572:5, col:57>
| |   | | `-TypedefDecl 0x7fdcd411ff50 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd411fee0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fdcd4120138 <line:573:5, col:61>
| |   |   `-CallExpr 0x7fdcd4120100 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd411ffc0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7fdcd411f090
| |   |     |-CStyleCastExpr 0x7fdcd4120078 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd4120040 <col:37> '_A1' lvalue ParmVar 0x7fdcd411fa30 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd41200d8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd41200a0 <col:53> '_A2' lvalue ParmVar 0x7fdcd411faa0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd411fcc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd411fd08 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd41204a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:582:1, line:588:1> line:585:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7fdcd4120178 <line:582:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd41201e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4120408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:588:1> line:585:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fdcd41202b8 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4120328 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd41207a0 <line:586:1, line:588:1>
| |   | `-ReturnStmt 0x7fdcd4120788 <line:587:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7fdcd4120750 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fdcd4120698 <col:30> '<builtin fn type>' Function 0x7fdcd41205a8 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fdcd41206e8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fdcd41206c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:27> '_A1' lvalue ParmVar 0x7fdcd41202b8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fdcd4120730 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fdcd4120708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:37> '_A2' lvalue ParmVar 0x7fdcd4120328 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4120500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd4120548 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd4120ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:592:1, line:604:1> line:600:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7fdcd41207c0 <line:592:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd4120828 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4120e08 <line:593:1, line:604:1> line:600:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4120cb0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4120d20 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd41212c0 <line:601:1, line:604:1>
| |   | |-DeclStmt 0x7fdcd4121118 <line:602:5, col:57>
| |   | | `-TypedefDecl 0x7fdcd41210c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd4121050 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fdcd41212a8 <line:603:5, col:66>
| |   |   `-CallExpr 0x7fdcd4121270 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd4121130 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7fdcd41204a0
| |   |     |-CStyleCastExpr 0x7fdcd41211e8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd41211b0 <col:42> '_A1' lvalue ParmVar 0x7fdcd4120cb0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd4121248 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4121210 <col:58> '_A2' lvalue ParmVar 0x7fdcd4120d20 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4120f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4120f48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4121610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:612:1, line:618:1> line:615:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7fdcd41212e8 <line:612:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd4121358 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4121578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:618:1> line:615:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fdcd4121428 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4121498 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd4121910 <line:616:1, line:618:1>
| |   | `-ReturnStmt 0x7fdcd41218f8 <line:617:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7fdcd41218c0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fdcd4121808 <col:22> '<builtin fn type>' Function 0x7fdcd4121718 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fdcd4121858 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fdcd4121830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:19> '_A1' lvalue ParmVar 0x7fdcd4121428 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fdcd41218a0 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fdcd4121878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:29> '_A2' lvalue ParmVar 0x7fdcd4121498 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4121670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd41216b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd4122030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:622:1, line:634:1> line:630:1 isless
| | |-TemplateTypeParmDecl 0x7fdcd4121930 <line:622:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd4121998 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4121f98 <line:623:1, line:634:1> line:630:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4121e40 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4121eb0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd4122450 <line:631:1, line:634:1>
| |   | |-DeclStmt 0x7fdcd41222a8 <line:632:5, col:57>
| |   | | `-TypedefDecl 0x7fdcd4122250 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd41221e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fdcd4122438 <line:633:5, col:58>
| |   |   `-CallExpr 0x7fdcd4122400 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd41222c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7fdcd4121610
| |   |     |-CStyleCastExpr 0x7fdcd4122378 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd4122340 <col:34> '_A1' lvalue ParmVar 0x7fdcd4121e40 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd41223d8 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd41223a0 <col:50> '_A2' lvalue ParmVar 0x7fdcd4121eb0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4122090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd41220d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd41227a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:642:1, line:648:1> line:645:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7fdcd4122478 <line:642:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd41224e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4122708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:648:1> line:645:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fdcd41225b8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4122628 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd4122aa0 <line:646:1, line:648:1>
| |   | `-ReturnStmt 0x7fdcd4122a88 <line:647:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7fdcd4122a50 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fdcd4122998 <col:27> '<builtin fn type>' Function 0x7fdcd41228a8 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fdcd41229e8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fdcd41229c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:24> '_A1' lvalue ParmVar 0x7fdcd41225b8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fdcd4122a30 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fdcd4122a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:34> '_A2' lvalue ParmVar 0x7fdcd4122628 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4122800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd4122848 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd41231a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:652:1, line:664:1> line:660:1 islessequal
| | |-TemplateTypeParmDecl 0x7fdcd4122ac0 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd4122b28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4123108 <line:653:1, line:664:1> line:660:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4122fb0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4123020 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd41235c0 <line:661:1, line:664:1>
| |   | |-DeclStmt 0x7fdcd4123418 <line:662:5, col:57>
| |   | | `-TypedefDecl 0x7fdcd41233c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd4123350 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fdcd41235a8 <line:663:5, col:63>
| |   |   `-CallExpr 0x7fdcd4123570 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd4123430 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7fdcd41227a0
| |   |     |-CStyleCastExpr 0x7fdcd41234e8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd41234b0 <col:39> '_A1' lvalue ParmVar 0x7fdcd4122fb0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd4123548 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4123510 <col:55> '_A2' lvalue ParmVar 0x7fdcd4123020 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4123200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4123248 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4123910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:672:1, line:678:1> line:675:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7fdcd41235e8 <line:672:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd4123658 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4123878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1> line:675:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fdcd4123728 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4123798 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd4123c48 <line:676:1, line:678:1>
| |   | `-ReturnStmt 0x7fdcd4123c30 <line:677:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7fdcd4123bf8 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fdcd4123b40 <col:29> '<builtin fn type>' Function 0x7fdcd4123a50 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fdcd4123b90 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fdcd4123b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:26> '_A1' lvalue ParmVar 0x7fdcd4123728 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fdcd4123bd8 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fdcd4123bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:36> '_A2' lvalue ParmVar 0x7fdcd4123798 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4123970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd41239b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd4124350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:682:1, line:694:1> line:690:1 islessgreater
| | |-TemplateTypeParmDecl 0x7fdcd4123c68 <line:682:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd4123cd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd41242b8 <line:683:1, line:694:1> line:690:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4124160 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd41241d0 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd4124770 <line:691:1, line:694:1>
| |   | |-DeclStmt 0x7fdcd41245c8 <line:692:5, col:57>
| |   | | `-TypedefDecl 0x7fdcd4124570 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd4124500 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fdcd4124758 <line:693:5, col:65>
| |   |   `-CallExpr 0x7fdcd4124720 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd41245e0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7fdcd4123910
| |   |     |-CStyleCastExpr 0x7fdcd4124698 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd4124660 <col:41> '_A1' lvalue ParmVar 0x7fdcd4124160 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd41246f8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd41246c0 <col:57> '_A2' lvalue ParmVar 0x7fdcd41241d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd41243b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd41243f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4124ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:708:1> line:705:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7fdcd4124798 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd4124808 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4124a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:708:1> line:705:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fdcd41248d8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4124948 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd4124dc0 <line:706:1, line:708:1>
| |   | `-ReturnStmt 0x7fdcd4124da8 <line:707:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7fdcd4124d70 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fdcd4124cb8 <col:27> '<builtin fn type>' Function 0x7fdcd4124bc8 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fdcd4124d08 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fdcd4124ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:24> '_A1' lvalue ParmVar 0x7fdcd41248d8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fdcd4124d50 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fdcd4124d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:34> '_A2' lvalue ParmVar 0x7fdcd4124948 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4124b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fdcd4124b68 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fdcd41254c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:712:1, line:724:1> line:720:1 isunordered
| | |-TemplateTypeParmDecl 0x7fdcd4124de0 <line:712:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd4124e48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd4125428 <line:713:1, line:724:1> line:720:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd41252d0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4125340 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd41258e0 <line:721:1, line:724:1>
| |   | |-DeclStmt 0x7fdcd4125738 <line:722:5, col:57>
| |   | | `-TypedefDecl 0x7fdcd41256e0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd4125670 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fdcd41258c8 <line:723:5, col:63>
| |   |   `-CallExpr 0x7fdcd4125890 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd4125750 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7fdcd4124ac0
| |   |     |-CStyleCastExpr 0x7fdcd4125808 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd41257d0 <col:39> '_A1' lvalue ParmVar 0x7fdcd41252d0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd4125868 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4125830 <col:55> '_A2' lvalue ParmVar 0x7fdcd4125340 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd4125520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4125568 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4126a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:731:1, line:733:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4125950 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd4126bf0 <col:31, col:57>
| | | `-ReturnStmt 0x7fdcd4126bd8 <col:32, col:55>
| | |   `-CallExpr 0x7fdcd4126b90 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4126b78 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4126b18 <col:39, col:41> 'float (float)' lvalue Function 0x7fdcd68156f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd4126bc0 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4126b50 <col:47> 'float' lvalue ParmVar 0x7fdcd4125950 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd4126aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4126ae8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4126cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:735:1, line:737:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4126c58 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7fdcd4126ee0 <col:32, col:57>
| | | `-ReturnStmt 0x7fdcd4126ec8 <col:33, col:55>
| | |   `-CallExpr 0x7fdcd4126e80 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7fdcd4126e68 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4126e08 <col:40, col:42> 'double (double)' lvalue Function 0x7fdcd6815890 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7fdcd4126eb0 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4126e40 <col:47> 'double' lvalue ParmVar 0x7fdcd4126c58 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7fdcd4126d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4126dd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4126fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:739:1, line:741:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4126f48 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd41271d0 <col:37, col:63>
| | | `-ReturnStmt 0x7fdcd41271b8 <col:38, col:61>
| | |   `-CallExpr 0x7fdcd4127170 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4127158 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd41270f8 <col:45, col:47> 'long double (long double)' lvalue Function 0x7fdcd6815a30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd41271a0 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4127130 <col:53> 'long double' lvalue ParmVar 0x7fdcd4126f48 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd4127080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41270c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd41272d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:747:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4127238 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd41274c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd41274a8 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd4127460 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4127448 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd41273e8 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd6807738 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd4127490 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4127420 <col:99> 'float' lvalue ParmVar 0x7fdcd4127238 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd4127370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41273b8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd41275c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:748:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4127528 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd41277b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd4127798 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd4127750 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4127738 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd41276d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6807a78 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd4127780 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4127710 <col:99> 'long double' lvalue ParmVar 0x7fdcd4127528 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd4127660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41276a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4127d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:751:1, line:754:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7fdcd41277d0 <line:751:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4127cc8 <line:752:1, line:754:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4127bb0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4129860 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd4129848 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd4129818 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd4129800 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd41297c8 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd68078d8 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd4127ee0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4127ea0 <col:53> '_A1' lvalue ParmVar 0x7fdcd4127bb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4127db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4127e00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4129960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:759:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd41298c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd4129b50 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd4129b38 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd4129af0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4129ad8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4129a78 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd6807c18 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd4129b20 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4129ab0 <col:99> 'float' lvalue ParmVar 0x7fdcd41298c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd4129a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4129a48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4129c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:760:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4129bb8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd4129e40 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd4129e28 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd4129de0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4129dc8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4129d68 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6807fa0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd4129e10 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4129da0 <col:99> 'long double' lvalue ParmVar 0x7fdcd4129bb8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd4129cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4129d38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd412a300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:763:1, line:766:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7fdcd4129e60 <line:763:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd412a268 <line:764:1, line:766:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd412a190 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd412a820 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd412a808 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd412a7d8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd412a7c0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd412a788 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd6807e00 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd412a480 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd412a440 <col:53> '_A1' lvalue ParmVar 0x7fdcd412a190 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd412a358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd412a3a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd412a920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:771:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd412a888 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd412ab40 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd412ab28 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd412aae0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd412aac8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd412aa68 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd6808140 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd412ab10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd412aaa0 <col:99> 'float' lvalue ParmVar 0x7fdcd412a888 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd412a9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd412aa38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd412ac40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:772:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd412aba8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd412ae30 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd412ae18 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd412add0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd412adb8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd412ad58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6808480 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd412ae00 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd412ad90 <col:99> 'long double' lvalue ParmVar 0x7fdcd412aba8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd412ace0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd412ad28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd412b2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:775:1, line:778:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7fdcd412ae50 <line:775:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd412b258 <line:776:1, line:778:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd412b180 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd412b810 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd412b7f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd412b7c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd412b7b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd412b778 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd68082e0 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd412b470 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd412b430 <col:53> '_A1' lvalue ParmVar 0x7fdcd412b180 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd412b348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd412b390 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd412b990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:783:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd412b878 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fdcd412b8f0 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd412bc00 <col:106, col:143>
| | | `-ReturnStmt 0x7fdcd412bbe8 <col:107, col:141>
| | |   `-CallExpr 0x7fdcd412bb80 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd412bb68 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd412bab0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fdcd68086e8 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd412bbb8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd412bae8 <col:123> 'float' lvalue ParmVar 0x7fdcd412b878 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd412bbd0 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd412bb10 <col:133> 'float' lvalue ParmVar 0x7fdcd412b8f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd412ba38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd412ba80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd412bd80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:784:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd412bc68 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fdcd412bce0 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd412bff0 <col:106, col:143>
| | | `-ReturnStmt 0x7fdcd412bfd8 <col:107, col:141>
| | |   `-CallExpr 0x7fdcd412bf70 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd412bf58 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd412bea0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fdcd6808c48 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd412bfa8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd412bed8 <col:123> 'long double' lvalue ParmVar 0x7fdcd412bc68 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd412bfc0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd412bf00 <col:133> 'long double' lvalue ParmVar 0x7fdcd412bce0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd412be28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd412be70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd412c950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:787:1, line:801:1> line:795:1 atan2
| | |-TemplateTypeParmDecl 0x7fdcd412c010 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd412c078 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd412c8b8 <line:788:1, line:801:1> line:795:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd412c720 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7fdcd412c790 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7fdcd412e258 <line:796:1, line:801:1>
| |   | |-DeclStmt 0x7fdcd412dbc8 <line:797:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd412db70 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd412db00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd412e0a0 <line:798:5, line:799:68>
| |   | | `-StaticAssertDecl 0x7fdcd412e068 <line:798:5, line:799:67> line:798:5
| |   | |   |-ParenExpr 0x7fdcd412e020 <col:19, line:799:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd412e000 <line:798:20, line:799:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd412dfe0 <line:798:21, line:799:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd412dfb8 <line:798:22, line:799:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd412ddb8 <line:798:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd412df78 <line:799:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd412e040 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd412e240 <line:800:5, col:68>
| |   |   `-CallExpr 0x7fdcd412e208 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd412e0d8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7fdcd6808998 0x7fdcd412b990 0x7fdcd412bd80 0x7fdcd412c950
| |   |     |-CStyleCastExpr 0x7fdcd412e180 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd412e148 <col:35> '_A1' lvalue ParmVar 0x7fdcd412c720 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd412e1e0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd412e1a8 <col:60> '_A2' lvalue ParmVar 0x7fdcd412c790 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd412c9b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd412da00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd412e368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd412e2d0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd412e558 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd412e540 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd412e4f8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd412e4e0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd412e480 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd68186a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd412e528 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd412e4b8 <col:99> 'float' lvalue ParmVar 0x7fdcd412e2d0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd412e408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd412e450 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd412e658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:807:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd412e5c0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd412e848 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd412e830 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd412e7e8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd412e7d0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd412e770 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd68189e8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd412e818 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd412e7a8 <col:99> 'long double' lvalue ParmVar 0x7fdcd412e5c0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd412e6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd412e740 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd412ed10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:810:1, line:813:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7fdcd412e868 <line:810:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd412ec78 <line:811:1, line:813:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd412eba0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd412f230 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd412f218 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd412f1e8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd412f1d0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd412f198 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd6818848 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd412ee90 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd412ee50 <col:53> '_A1' lvalue ParmVar 0x7fdcd412eba0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd412ed68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd412edb0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd412f330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:818:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd412f298 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd412f520 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd412f508 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd412f4c0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd412f4a8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd412f448 <col:90, col:92> 'float (float)' lvalue Function 0x7fdcd6809630 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd412f4f0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd412f480 <col:97> 'float' lvalue ParmVar 0x7fdcd412f298 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd412f3d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd412f418 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd412f620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:819:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd412f588 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd412f810 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd412f7f8 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd412f7b0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd412f798 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd412f738 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fdcd6809970 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd412f7e0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd412f770 <col:97> 'long double' lvalue ParmVar 0x7fdcd412f588 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd412f6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd412f708 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd412fd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:822:1, line:825:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7fdcd412f830 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd412fc68 <line:823:1, line:825:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd412fb90 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4130220 <col:29, col:61>
| |   | `-ReturnStmt 0x7fdcd4130208 <col:30, col:59>
| |   |   `-CallExpr 0x7fdcd41301d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd41301c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd4130188 <col:37, col:39> 'double (double)' lvalue Function 0x7fdcd68097d0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd412fe80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd412fe40 <col:51> '_A1' lvalue ParmVar 0x7fdcd412fb90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd412fd58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd412fda0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4130320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:830:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4130288 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd4130510 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd41304f8 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd41304b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4130498 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4130438 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd680bb90 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd41304e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4130470 <col:99> 'float' lvalue ParmVar 0x7fdcd4130288 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd41303c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4130408 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4130610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:831:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4130578 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd4130800 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd41307e8 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd41307a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4130788 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4130728 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd680c6f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd41307d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4130760 <col:99> 'long double' lvalue ParmVar 0x7fdcd4130578 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd41306b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41306f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4130cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:834:1, line:837:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7fdcd4130820 <line:834:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4130c28 <line:835:1, line:837:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4130b50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd41311e0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd41311c8 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd4131198 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd4131180 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd4131148 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd680bd30 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd4130e40 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4130e00 <col:53> '_A1' lvalue ParmVar 0x7fdcd4130b50 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4130d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4130d60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd41312e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:842:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4131248 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd41314d0 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd41314b8 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd4131470 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4131458 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd41313f8 <col:90, col:92> 'float (float)' lvalue Function 0x7fdcd680d250 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd41314a0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4131430 <col:97> 'float' lvalue ParmVar 0x7fdcd4131248 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd4131380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41313c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd41315d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:843:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4131538 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd41317c0 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd41317a8 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd4131760 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4131748 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd41316e8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fdcd680d600 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd4131790 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4131720 <col:97> 'long double' lvalue ParmVar 0x7fdcd4131538 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd4131670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41316b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4131ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:846:1, line:849:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7fdcd41317e0 <line:846:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4131c08 <line:847:1, line:849:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4131b30 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd41321c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fdcd41321a8 <col:30, col:59>
| |   |   `-CallExpr 0x7fdcd4132178 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd4132160 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd4132128 <col:37, col:39> 'double (double)' lvalue Function 0x7fdcd680d3f0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd4131e20 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4131de0 <col:51> '_A1' lvalue ParmVar 0x7fdcd4131b30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4131cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4131d40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd41322c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:854:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4132228 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd41324b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd4132498 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd4132450 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4132438 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd41323d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd68156f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd4132480 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4132410 <col:99> 'float' lvalue ParmVar 0x7fdcd4132228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd4132360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41323a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd41325b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:855:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4132518 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd41327a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd4132788 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd4132740 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4132728 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd41326c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6815a30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd4132770 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4132700 <col:99> 'long double' lvalue ParmVar 0x7fdcd4132518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd4132650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4132698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4132c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:858:1, line:861:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7fdcd41327c0 <line:858:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4132bc8 <line:859:1, line:861:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4132af0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4133180 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd4133168 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd4133138 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd4133120 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd41330e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd6815890 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd4132de0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4132da0 <col:53> '_A1' lvalue ParmVar 0x7fdcd4132af0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4132cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4132d00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4133280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:866:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd41331e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd4133470 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd4133458 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd4133410 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd41333f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4133398 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd6818b88 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd4133440 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd41333d0 <col:101> 'float' lvalue ParmVar 0x7fdcd41331e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd4133320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4133368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4133570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:867:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd41334d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd4133760 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd4133748 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd4133700 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd41336e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4133688 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd6818ec8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd4133730 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd41336c0 <col:101> 'long double' lvalue ParmVar 0x7fdcd41334d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd4133610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4133658 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd6003a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:870:1, line:873:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7fdcd4133780 <line:870:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd60039a8 <line:871:1, line:873:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd60038d0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd6003f60 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd6003f48 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd6003f18 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd6003f00 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd6003ec8 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd6818d28 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd6003bc0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd6003b80 <col:55> '_A1' lvalue ParmVar 0x7fdcd60038d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd6003a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd6003ae0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd60040e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:878:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd6003fc8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd6004040 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd6004320 <col:105, col:141>
| | | `-ReturnStmt 0x7fdcd6004308 <col:106, col:139>
| | |   `-CallExpr 0x7fdcd60042a0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd6004288 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd6004200 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fdcd681bb60 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd60042d8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd6004238 <col:121> 'float' lvalue ParmVar 0x7fdcd6003fc8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd60042f0 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd6004260 <col:131> 'float' lvalue ParmVar 0x7fdcd6004040 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd6004188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd60041d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd60044a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:879:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd6004388 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd6004400 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd60046e0 <col:105, col:141>
| | | `-ReturnStmt 0x7fdcd60046c8 <col:106, col:139>
| | |   `-CallExpr 0x7fdcd6004660 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd6004648 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd60045c0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fdcd681bfb0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd6004698 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd60045f8 <col:121> 'long double' lvalue ParmVar 0x7fdcd6004388 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd60046b0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd6004620 <col:131> 'long double' lvalue ParmVar 0x7fdcd6004400 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd6004548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd6004590 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd6004f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:882:1, line:896:1> line:890:1 fmod
| | |-TemplateTypeParmDecl 0x7fdcd6004700 <line:882:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd6004768 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd6004ea8 <line:883:1, line:896:1> line:890:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd6004d50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd6004dc0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd6005768 <line:891:1, line:896:1>
| |   | |-DeclStmt 0x7fdcd60051b8 <line:892:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd6005160 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd60050f0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd60055b0 <line:893:5, line:894:68>
| |   | | `-StaticAssertDecl 0x7fdcd6005578 <line:893:5, line:894:67> line:893:5
| |   | |   |-ParenExpr 0x7fdcd6005530 <col:19, line:894:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd6005510 <line:893:20, line:894:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd60054f0 <line:893:21, line:894:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd60054c8 <line:893:22, line:894:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd6005328 <line:893:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd6005488 <line:894:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd6005550 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd6005750 <line:895:5, col:67>
| |   |   `-CallExpr 0x7fdcd6005718 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd60055e8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7fdcd681bd88 0x7fdcd60040e0 0x7fdcd60044a0 0x7fdcd6004f40
| |   |     |-CStyleCastExpr 0x7fdcd6005690 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd6005658 <col:34> '_A1' lvalue ParmVar 0x7fdcd6004d50 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd60056f0 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd60056b8 <col:59> '_A2' lvalue ParmVar 0x7fdcd6004dc0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd6004fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd6004fe8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4133b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:901:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4133a00 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd4133a78 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fdcd4133db0 <col:99, col:136>
| | | `-ReturnStmt 0x7fdcd4133d98 <col:100, col:134>
| | |   `-CallExpr 0x7fdcd4133d30 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4133d18 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4133c38 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7fdcd6812b88 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7fdcd4133d68 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd4133c70 <col:116> 'float' lvalue ParmVar 0x7fdcd4133a00 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd4133d80 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4133c98 <col:126> 'int *' lvalue ParmVar 0x7fdcd4133a78 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fdcd4133bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4133c08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4133f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:902:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4133e18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd4133e90 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fdcd41341d0 <col:99, col:136>
| | | `-ReturnStmt 0x7fdcd41341b8 <col:100, col:134>
| | |   `-CallExpr 0x7fdcd4134150 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4134138 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4134050 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7fdcd68130c8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7fdcd4134188 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd4134088 <col:116> 'long double' lvalue ParmVar 0x7fdcd4133e18 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd41341a0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd41340b0 <col:126> 'int *' lvalue ParmVar 0x7fdcd4133e90 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fdcd4133fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4134020 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4134760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:905:1, line:908:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7fdcd41341f0 <line:905:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd41346c8 <line:906:1, line:908:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4134520 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4134598 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7fdcd4134cf8 <col:46, col:90>
| |   | `-ReturnStmt 0x7fdcd4134ce0 <col:47, col:88>
| |   |   `-CallExpr 0x7fdcd4134c90 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd4134c78 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd4134c18 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7fdcd6812e28 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7fdcd41348e8 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd41348a8 <col:70> '_A1' lvalue ParmVar 0x7fdcd4134520 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fdcd4134cc8 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fdcd4134910 <col:80> 'int *' lvalue ParmVar 0x7fdcd4134598 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7fdcd41347c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4134808 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4134e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:913:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4134d60 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd4134dd8 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fdcd41350e0 <col:98, col:135>
| | | `-ReturnStmt 0x7fdcd41350c8 <col:99, col:133>
| | |   `-CallExpr 0x7fdcd4135060 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4135048 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4134f98 <col:106, col:108> 'float (float, int)' lvalue Function 0x7fdcd6811338 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fdcd4135098 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd4134fd0 <col:115> 'float' lvalue ParmVar 0x7fdcd4134d60 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd41350b0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4134ff8 <col:125> 'int' lvalue ParmVar 0x7fdcd4134dd8 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fdcd4134f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4134f68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4135260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:914:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4135148 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd41351c0 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fdcd41354d0 <col:98, col:135>
| | | `-ReturnStmt 0x7fdcd41354b8 <col:99, col:133>
| | |   `-CallExpr 0x7fdcd4135450 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4135438 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4135380 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7fdcd68128b8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fdcd4135488 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd41353b8 <col:115> 'long double' lvalue ParmVar 0x7fdcd4135148 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd41354a0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd41353e0 <col:125> 'int' lvalue ParmVar 0x7fdcd41351c0 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fdcd4135308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4135350 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4135a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:917:1, line:920:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7fdcd41354f0 <line:917:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4135a00 <line:918:1, line:920:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4135820 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd4135898 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7fdcd4136038 <col:45, col:89>
| |   | `-ReturnStmt 0x7fdcd4136020 <col:46, col:87>
| |   |   `-CallExpr 0x7fdcd4135fd0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd4135fb8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd4135f58 <col:53, col:55> 'double (double, int)' lvalue Function 0x7fdcd6812600 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fdcd4135c20 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd4135be0 <col:69> '_A1' lvalue ParmVar 0x7fdcd4135820 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fdcd4136008 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fdcd4135c48 <col:79> 'int' lvalue ParmVar 0x7fdcd4135898 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7fdcd4135af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4135b40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4136138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:925:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd41360a0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd4136328 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd4136310 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd41362c8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd41362b0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4136250 <col:90, col:92> 'float (float)' lvalue Function 0x7fdcd680e160 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd41362f8 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4136288 <col:97> 'float' lvalue ParmVar 0x7fdcd41360a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd41361d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4136220 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4136428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:926:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4136390 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd4136618 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd4136600 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd41365b8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd41365a0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4136540 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fdcd680e4a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd41365e8 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4136578 <col:97> 'long double' lvalue ParmVar 0x7fdcd4136390 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd41364c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd4136510 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd4136ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:929:1, line:932:61> col:1 log
| | |-TemplateTypeParmDecl 0x7fdcd4136638 <line:929:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd4136a48 <line:930:1, line:932:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4136970 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd4137000 <col:29, col:61>
| |   | `-ReturnStmt 0x7fdcd4136fe8 <col:30, col:59>
| |   |   `-CallExpr 0x7fdcd4136fb8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd4136fa0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd4136f68 <col:37, col:39> 'double (double)' lvalue Function 0x7fdcd680e300 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd4136c60 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd4136c20 <col:51> '_A1' lvalue ParmVar 0x7fdcd4136970 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd4136b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd4136b80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd4137100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:937:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4137068 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd41372f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd41372d8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd4137290 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd4137278 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4137218 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd680e690 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd41372c0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4137250 <col:101> 'float' lvalue ParmVar 0x7fdcd4137068 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd41371a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41371e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd41373f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:938:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd4137358 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd41375e0 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd41375c8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd4137580 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd4137568 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd4137508 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd680e9d0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd41375b0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd4137540 <col:101> 'long double' lvalue ParmVar 0x7fdcd4137358 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd4137490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd41374d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58e1ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:941:1, line:944:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7fdcd4137600 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58e1e40 <line:942:1, line:944:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd4137930 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58e2400 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd58e23e8 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd58e23b8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58e23a0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58e2368 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd680e830 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58e2058 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58e2018 <col:55> '_A1' lvalue ParmVar 0x7fdcd4137930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58e1f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58e1f78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58e2580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:949:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58e2468 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd58e24e0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7fdcd58e2820 <col:106, col:142>
| | | `-ReturnStmt 0x7fdcd58e2808 <col:107, col:140>
| | |   `-CallExpr 0x7fdcd58e27a0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58e2788 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58e26a0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7fdcd6810b18 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7fdcd58e27d8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd58e26d8 <col:122> 'float' lvalue ParmVar 0x7fdcd58e2468 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd58e27f0 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58e2700 <col:132> 'float *' lvalue ParmVar 0x7fdcd58e24e0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7fdcd58e2628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58e2670 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58e29a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:950:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58e2888 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd58e2900 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7fdcd58e2c40 <col:106, col:142>
| | | `-ReturnStmt 0x7fdcd58e2c28 <col:107, col:140>
| | |   `-CallExpr 0x7fdcd58e2bc0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58e2ba8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58e2ac0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7fdcd6811098 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7fdcd58e2bf8 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd58e2af8 <col:122> 'long double' lvalue ParmVar 0x7fdcd58e2888 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd58e2c10 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58e2b20 <col:132> 'long double *' lvalue ParmVar 0x7fdcd58e2900 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7fdcd58e2a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58e2a90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58e2dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:956:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58e2ca8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd58e2d20 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd58e3000 <col:104, col:139>
| | | `-ReturnStmt 0x7fdcd58e2fe8 <col:105, col:137>
| | |   `-CallExpr 0x7fdcd58e2f80 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58e2f68 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58e2ee0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7fdcd6816828 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd58e2fb8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd58e2f18 <col:119> 'float' lvalue ParmVar 0x7fdcd58e2ca8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd58e2fd0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58e2f40 <col:129> 'float' lvalue ParmVar 0x7fdcd58e2d20 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58e2e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58e2eb0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58e3180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:957:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58e3068 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd58e30e0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd58e33c0 <col:104, col:139>
| | | `-ReturnStmt 0x7fdcd58e33a8 <col:105, col:137>
| | |   `-CallExpr 0x7fdcd58e3340 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58e3328 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58e32a0 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7fdcd6816c78 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd58e3378 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd58e32d8 <col:119> 'long double' lvalue ParmVar 0x7fdcd58e3068 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd58e3390 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58e3300 <col:129> 'long double' lvalue ParmVar 0x7fdcd58e30e0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58e3228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58e3270 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58e3c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:960:1, line:974:1> line:968:1 pow
| | |-TemplateTypeParmDecl 0x7fdcd58e33e0 <line:960:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd58e3448 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd58e3b88 <line:961:1, line:974:1> line:968:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58e3a30 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd58e3aa0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd58e4448 <line:969:1, line:974:1>
| |   | |-DeclStmt 0x7fdcd58e3e98 <line:970:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd58e3e40 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd58e3dd0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd58e4290 <line:971:5, line:972:68>
| |   | | `-StaticAssertDecl 0x7fdcd58e4258 <line:971:5, line:972:67> line:971:5
| |   | |   |-ParenExpr 0x7fdcd58e4210 <col:19, line:972:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd58e41f0 <line:971:20, line:972:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd58e41d0 <line:971:21, line:972:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd58e41a8 <line:971:22, line:972:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd58e4008 <line:971:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd58e4168 <line:972:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd58e4230 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd58e4430 <line:973:5, col:66>
| |   |   `-CallExpr 0x7fdcd58e43f8 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd58e42c8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7fdcd6816a50 0x7fdcd58e2dc0 0x7fdcd58e3180 0x7fdcd58e3c20
| |   |     |-CStyleCastExpr 0x7fdcd58e4370 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd58e4338 <col:33> '_A1' lvalue ParmVar 0x7fdcd58e3a30 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd58e43d0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58e4398 <col:58> '_A2' lvalue ParmVar 0x7fdcd58e3aa0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd58e3c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58e3cc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58e4558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:979:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58e44c0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58e4748 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd58e4730 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd58e46e8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58e46d0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58e4670 <col:90, col:92> 'float (float)' lvalue Function 0x7fdcd6809b10 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58e4718 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58e46a8 <col:97> 'float' lvalue ParmVar 0x7fdcd58e44c0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58e45f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58e4640 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58e4848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:980:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58e47b0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58e4a38 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd58e4a20 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd58e49d8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58e49c0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58e4960 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fdcd6809e50 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58e4a08 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58e4998 <col:97> 'long double' lvalue ParmVar 0x7fdcd58e47b0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58e48e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58e4930 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58e4f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:983:1, line:986:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7fdcd58e4a58 <line:983:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58e4e68 <line:984:1, line:986:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58e4d90 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58e5420 <col:29, col:61>
| |   | `-ReturnStmt 0x7fdcd58e5408 <col:30, col:59>
| |   |   `-CallExpr 0x7fdcd58e53d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58e53c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58e5388 <col:37, col:39> 'double (double)' lvalue Function 0x7fdcd6809cb0 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58e5080 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58e5040 <col:51> '_A1' lvalue ParmVar 0x7fdcd58e4d90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58e4f58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58e4fa0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58e5520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:991:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58e5488 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58e5710 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd58e56f8 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd58e56b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58e5698 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58e5638 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd680c890 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58e56e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58e5670 <col:99> 'float' lvalue ParmVar 0x7fdcd58e5488 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58e55c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58e5608 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58e5810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:992:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58e5778 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58e5a00 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd58e59e8 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd58e59a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58e5988 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58e5928 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd680cbd0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58e59d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58e5960 <col:99> 'long double' lvalue ParmVar 0x7fdcd58e5778 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58e58b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58e58f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58f6ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, line:998:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7fdcd58e5a20 <line:995:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58f6e40 <line:996:1, line:998:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58e5d50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58f7400 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd58f73e8 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd58f73b8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58f73a0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58f7368 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd680ca30 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58f7058 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58f7018 <col:53> '_A1' lvalue ParmVar 0x7fdcd58e5d50 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58f6f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58f6f78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58f7500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1003:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58f7468 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58f76f0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd58f76d8 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd58f7690 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58f7678 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58f7618 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd6816e20 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58f76c0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58f7650 <col:99> 'float' lvalue ParmVar 0x7fdcd58f7468 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58f75a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58f75e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58f77f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1004:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58f7758 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58f79e0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd58f79c8 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd58f7980 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58f7968 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58f7908 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6817160 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58f79b0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58f7940 <col:99> 'long double' lvalue ParmVar 0x7fdcd58f7758 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58f7890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58f78d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58f7ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1007:1, line:1010:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7fdcd58f7a00 <line:1007:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58f7e08 <line:1008:1, line:1010:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58f7d30 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58f83c0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd58f83a8 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd58f8378 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58f8360 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58f8328 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd6816fc0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58f8020 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58f7fe0 <col:53> '_A1' lvalue ParmVar 0x7fdcd58f7d30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58f7ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58f7f40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58f84c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1015:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58f8428 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58f86b0 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd58f8698 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd58f8650 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58f8638 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58f85d8 <col:90, col:92> 'float (float)' lvalue Function 0x7fdcd6809ff0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58f8680 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58f8610 <col:97> 'float' lvalue ParmVar 0x7fdcd58f8428 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58f8560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58f85a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58f87b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1016:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58f8718 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58f89a0 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd58f8988 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd58f8940 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58f8928 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58f88c8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fdcd680a330 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58f8970 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58f8900 <col:97> 'long double' lvalue ParmVar 0x7fdcd58f8718 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58f8850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58f8898 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58f8e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1019:1, line:1022:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7fdcd58f89c0 <line:1019:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58f8e00 <line:1020:1, line:1022:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58f8cf0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58f93c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fdcd58f93a8 <col:30, col:59>
| |   |   `-CallExpr 0x7fdcd58f9378 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58f9360 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58f9328 <col:37, col:39> 'double (double)' lvalue Function 0x7fdcd680a190 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58f9018 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58f8fd8 <col:51> '_A1' lvalue ParmVar 0x7fdcd58f8cf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58f8ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58f8f38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58f94c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1027:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58f9428 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58f96b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd58f9698 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd58f9650 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58f9638 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58f95d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd680cd70 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58f9680 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58f9610 <col:99> 'float' lvalue ParmVar 0x7fdcd58f9428 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58f9560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58f95a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58f97b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1028:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58f9718 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58f99a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd58f9988 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd58f9940 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58f9928 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58f98c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd680d0b0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58f9970 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58f9900 <col:99> 'long double' lvalue ParmVar 0x7fdcd58f9718 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58f9850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58f9898 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58f9e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1031:1, line:1034:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7fdcd58f99c0 <line:1031:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58f9dc8 <line:1032:1, line:1034:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58f9cf0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58fa380 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd58fa368 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd58fa338 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58fa320 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58fa2e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd680cf10 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58f9fe0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58f9fa0 <col:53> '_A1' lvalue ParmVar 0x7fdcd58f9cf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58f9eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58f9f00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fa480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1038:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fa3e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58fa670 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd58fa658 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd58fa610 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58fa5f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fa598 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd680a4d0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58fa640 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fa5d0 <col:101> 'float' lvalue ParmVar 0x7fdcd58fa3e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58fa520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fa568 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fa770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1039:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fa6d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58fa960 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd58fa948 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd58fa900 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58fa8e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fa888 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd680b030 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58fa930 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fa8c0 <col:101> 'long double' lvalue ParmVar 0x7fdcd58fa6d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58fa810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fa858 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58fae98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1041:1, line:1044:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7fdcd58fa980 <line:1041:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58fae00 <line:1042:1, line:1044:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58facb0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58fb3c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd58fb3a8 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd58fb378 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58fb360 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58fb328 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd680ae90 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58fb018 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58fafd8 <col:55> '_A1' lvalue ParmVar 0x7fdcd58facb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58faef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58faf38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fb4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1048:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fb428 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58fb6b0 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd58fb698 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd58fb650 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58fb638 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fb5d8 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd680b1d0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58fb680 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fb610 <col:101> 'float' lvalue ParmVar 0x7fdcd58fb428 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58fb560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fb5a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fb7b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1049:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fb718 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58fb9a0 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd58fb988 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd58fb940 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58fb928 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fb8c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd680b510 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58fb970 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fb900 <col:101> 'long double' lvalue ParmVar 0x7fdcd58fb718 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58fb850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fb898 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58fbe60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1051:1, line:1054:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7fdcd58fb9c0 <line:1051:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58fbdc8 <line:1052:1, line:1054:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58fbcf0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58fc380 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd58fc368 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd58fc338 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58fc320 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58fc2e8 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd680b370 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58fbfe0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58fbfa0 <col:55> '_A1' lvalue ParmVar 0x7fdcd58fbcf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58fbeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58fbf00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fc480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1058:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fc3e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58fc670 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd58fc658 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd58fc610 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58fc5f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fc598 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd680b6b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58fc640 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fc5d0 <col:101> 'float' lvalue ParmVar 0x7fdcd58fc3e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58fc520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fc568 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fc770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1059:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fc6d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58fc960 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd58fc948 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd58fc900 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58fc8e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fc888 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd680b9f0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58fc930 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fc8c0 <col:101> 'long double' lvalue ParmVar 0x7fdcd58fc6d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58fc810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fc858 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58fce98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1061:1, line:1064:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7fdcd58fc980 <line:1061:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58fce00 <line:1062:1, line:1064:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58fccb0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58fd3c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd58fd3a8 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd58fd378 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58fd360 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58fd328 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd680b850 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58fd018 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58fcfd8 <col:55> '_A1' lvalue ParmVar 0x7fdcd58fccb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58fcef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58fcf38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fd4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1068:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fd428 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58fd6b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd58fd698 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd58fd650 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58fd638 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fd5d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd6815bd0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58fd680 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fd610 <col:99> 'float' lvalue ParmVar 0x7fdcd58fd428 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58fd560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fd5a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fd7b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1069:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fd718 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd58fd9a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd58fd988 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd58fd940 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58fd928 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fd8c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6815f10 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd58fd970 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fd900 <col:99> 'long double' lvalue ParmVar 0x7fdcd58fd718 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58fd850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fd898 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58fde60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1071:1, line:1074:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7fdcd58fd9c0 <line:1071:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd58fddc8 <line:1072:1, line:1074:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58fdcf0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd58fe380 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd58fe368 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd58fe338 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd58fe320 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd58fe2e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd6815d70 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd58fdfe0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58fdfa0 <col:53> '_A1' lvalue ParmVar 0x7fdcd58fdcf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd58fdeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58fdf00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fe500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1078:1, line:1081:1> line:1078:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fe3e8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd58fe460 <line:1079:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd58fe740 <col:75, line:1081:1>
| | | `-ReturnStmt 0x7fdcd58fe728 <line:1080:3, col:40>
| | |   `-CallExpr 0x7fdcd58fe6c0 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58fe6a8 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fe620 <col:10, col:12> 'float (float, float)' lvalue Function 0x7fdcd681d040 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd58fe6f8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd58fe658 <col:22> 'float' lvalue ParmVar 0x7fdcd58fe3e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd58fe710 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fe680 <col:32> 'float' lvalue ParmVar 0x7fdcd58fe460 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58fe5a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fe5f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fe8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1082:1, line:1085:1> line:1083:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fe7a8 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd58fe820 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd58feb00 <col:64, line:1085:1>
| | | `-ReturnStmt 0x7fdcd58feae8 <line:1084:3, col:40>
| | |   `-CallExpr 0x7fdcd58fea80 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd58fea68 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58fe9e0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7fdcd681d490 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd58feab8 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd58fea18 <col:22> 'long double' lvalue ParmVar 0x7fdcd58fe7a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd58fead0 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58fea40 <col:32> 'long double' lvalue ParmVar 0x7fdcd58fe820 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd58fe968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58fe9b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd58ff380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1087:1, line:1101:1> line:1095:1 copysign
| | |-TemplateTypeParmDecl 0x7fdcd58feb20 <line:1087:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd58feb88 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd58ff2e8 <line:1088:1, line:1101:1> line:1095:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd58ff190 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd58ff200 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd58ffba8 <line:1096:1, line:1101:1>
| |   | |-DeclStmt 0x7fdcd58ff5f8 <line:1097:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd58ff5a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd58ff530 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd58ff9f0 <line:1098:5, line:1099:68>
| |   | | `-StaticAssertDecl 0x7fdcd58ff9b8 <line:1098:5, line:1099:67> line:1098:5
| |   | |   |-ParenExpr 0x7fdcd58ff970 <col:19, line:1099:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd58ff950 <line:1098:20, line:1099:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd58ff930 <line:1098:21, line:1099:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd58ff908 <line:1098:22, line:1099:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd58ff768 <line:1098:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd58ff8c8 <line:1099:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd58ff990 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd58ffb90 <line:1100:5, col:71>
| |   |   `-CallExpr 0x7fdcd58ffb58 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd58ffa28 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7fdcd681d268 0x7fdcd58fe500 0x7fdcd58fe8c0 0x7fdcd58ff380
| |   |     |-CStyleCastExpr 0x7fdcd58ffad0 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd58ffa98 <col:38> '_A1' lvalue ParmVar 0x7fdcd58ff190 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd58ffb30 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd58ffaf8 <col:63> '_A2' lvalue ParmVar 0x7fdcd58ff200 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd58ff3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd58ff428 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58ffcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1105:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58ffc20 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd58ffea8 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd58ffe90 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd58ffe48 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd58ffe30 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd58ffdd0 <col:90, col:92> 'float (float)' lvalue Function 0x7fdcd6817300 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd58ffe78 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd58ffe08 <col:97> 'float' lvalue ParmVar 0x7fdcd58ffc20 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd58ffd58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd58ffda0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd58fffa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1106:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd58fff10 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5900198 <col:82, col:107>
| | | `-ReturnStmt 0x7fdcd5900180 <col:83, col:105>
| | |   `-CallExpr 0x7fdcd5900138 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5900120 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd59000c0 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fdcd6817690 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5900168 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd59000f8 <col:97> 'long double' lvalue ParmVar 0x7fdcd58fff10 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5900048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5900090 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5900660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1108:1, line:1111:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7fdcd59001b8 <line:1108:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd59005c8 <line:1109:1, line:1111:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd59004f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd5900b80 <col:29, col:61>
| |   | `-ReturnStmt 0x7fdcd5900b68 <col:30, col:59>
| |   |   `-CallExpr 0x7fdcd5900b38 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd5900b20 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5900ae8 <col:37, col:39> 'double (double)' lvalue Function 0x7fdcd68174a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd59007e0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd59007a0 <col:51> '_A1' lvalue ParmVar 0x7fdcd59004f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd59006b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5900700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5900c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1115:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5900be8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd5900e78 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd5900e60 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd5900e18 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5900e00 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5900d98 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd6817830 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5900e48 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5900dd0 <col:99> 'float' lvalue ParmVar 0x7fdcd5900be8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5900d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5900d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5900f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5900ee0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5901168 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd5901150 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd5901108 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd59010f0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5901090 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6817b70 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5901138 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd59010c8 <col:99> 'long double' lvalue ParmVar 0x7fdcd5900ee0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5901018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5901060 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5901630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1118:1, line:1121:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7fdcd5901188 <line:1118:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5901598 <line:1119:1, line:1121:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd59014c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd5901b50 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd5901b38 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd5901b08 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd5901af0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5901ab8 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd68179d0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd59017b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd5901770 <col:53> '_A1' lvalue ParmVar 0x7fdcd59014c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd5901688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd59016d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5901c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1125:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5901bb8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd5901e40 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd5901e28 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd5901de0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5901dc8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5901d68 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd680d7a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5901e10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5901da0 <col:99> 'float' lvalue ParmVar 0x7fdcd5901bb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5901cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5901d38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5901f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1126:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5901ea8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5902130 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd5902118 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd59020d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd59020b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5902058 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd680dae0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5902100 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5902090 <col:99> 'long double' lvalue ParmVar 0x7fdcd5901ea8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5901fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5902028 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd59025f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1128:1, line:1131:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7fdcd5902150 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5902558 <line:1129:1, line:1131:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5902480 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd5902b10 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd5902af8 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd5902ac8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd5902ab0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5902a78 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd680d940 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd5902770 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd5902730 <col:53> '_A1' lvalue ParmVar 0x7fdcd5902480 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd5902648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5902690 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5902c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1135:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5902b78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd595a400 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd5902de8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd5902da0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5902d88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5902d28 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd680dc80 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5902dd0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5902d60 <col:101> 'float' lvalue ParmVar 0x7fdcd5902b78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5902cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5902cf8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd595a500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1136:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd595a468 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd595a6f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd595a6d8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd595a690 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd595a678 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd595a618 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd680dfc0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd595a6c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd595a650 <col:101> 'long double' lvalue ParmVar 0x7fdcd595a468 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd595a5a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd595a5e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd595abb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, line:1141:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7fdcd595a710 <line:1138:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd595ab18 <line:1139:1, line:1141:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd595aa40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd595b0d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd595b0b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd595b088 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd595b070 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd595b038 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd680de20 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd595ad30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd595acf0 <col:55> '_A1' lvalue ParmVar 0x7fdcd595aa40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd595ac08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd595ac50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd595b250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1145:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd595b138 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd595b1b0 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd595b490 <col:105, col:141>
| | | `-ReturnStmt 0x7fdcd595b478 <col:106, col:139>
| | |   `-CallExpr 0x7fdcd595b410 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd595b3f8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd595b370 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fdcd680fb68 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd595b448 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd595b3a8 <col:121> 'float' lvalue ParmVar 0x7fdcd595b138 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd595b460 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd595b3d0 <col:131> 'float' lvalue ParmVar 0x7fdcd595b1b0 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd595b2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd595b340 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd595b610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1146:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd595b4f8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd595b570 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd595b850 <col:105, col:141>
| | | `-ReturnStmt 0x7fdcd595b838 <col:106, col:139>
| | |   `-CallExpr 0x7fdcd595b7d0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd595b7b8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd595b730 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fdcd680ffb8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd595b808 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd595b768 <col:121> 'long double' lvalue ParmVar 0x7fdcd595b4f8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd595b820 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd595b790 <col:131> 'long double' lvalue ParmVar 0x7fdcd595b570 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd595b6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd595b700 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd595c0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1148:1, line:1162:1> line:1156:1 fdim
| | |-TemplateTypeParmDecl 0x7fdcd595b870 <line:1148:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd595b8d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd595c018 <line:1149:1, line:1162:1> line:1156:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd595bec0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd595bf30 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd595e8f8 <line:1157:1, line:1162:1>
| |   | |-DeclStmt 0x7fdcd595c328 <line:1158:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd595c2d0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd595c260 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd595e740 <line:1159:5, line:1160:68>
| |   | | `-StaticAssertDecl 0x7fdcd595e708 <line:1159:5, line:1160:67> line:1159:5
| |   | |   |-ParenExpr 0x7fdcd595e6c0 <col:19, line:1160:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd595e6a0 <line:1159:20, line:1160:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd595e680 <line:1159:21, line:1160:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd595e658 <line:1159:22, line:1160:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd595e4b8 <line:1159:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd595e618 <line:1160:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd595e6e0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd595e8e0 <line:1161:5, col:67>
| |   |   `-CallExpr 0x7fdcd595e8a8 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd595e778 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7fdcd680fd90 0x7fdcd595b250 0x7fdcd595b610 0x7fdcd595c0b0
| |   |     |-CStyleCastExpr 0x7fdcd595e820 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd595e7e8 <col:34> '_A1' lvalue ParmVar 0x7fdcd595bec0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd595e880 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd595e848 <col:59> '_A2' lvalue ParmVar 0x7fdcd595bf30 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd595c110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd595c158 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd595eb08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1166:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd595e970 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd595e9e8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fdcd595ea60 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7fdcd595edc0 <col:126, col:171>
| | | `-ReturnStmt 0x7fdcd595eda8 <col:127, col:169>
| | |   `-CallExpr 0x7fdcd595ed20 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd595ed08 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd595ec30 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7fdcd6822fa8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd595ed60 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd595ec68 <col:141> 'float' lvalue ParmVar 0x7fdcd595e970 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fdcd595ed78 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd595ec90 <col:151> 'float' lvalue ParmVar 0x7fdcd595e9e8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd595ed90 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd595ecb8 <col:161> 'float' lvalue ParmVar 0x7fdcd595ea60 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7fdcd595ebb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd595ec00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd595efc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1167:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd595ee28 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd595eea0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fdcd595ef18 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7fdcd595f280 <col:126, col:171>
| | | `-ReturnStmt 0x7fdcd595f268 <col:127, col:169>
| | |   `-CallExpr 0x7fdcd595f1e0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd595f1c8 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd595f0e8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7fdcd6813688 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd595f220 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd595f120 <col:141> 'long double' lvalue ParmVar 0x7fdcd595ee28 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd595f238 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd595f148 <col:151> 'long double' lvalue ParmVar 0x7fdcd595eea0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd595f250 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd595f170 <col:161> 'long double' lvalue ParmVar 0x7fdcd595ef18 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd595f070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd595f0b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd595fed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1169:1, line:1185:1> line:1178:1 fma
| | |-TemplateTypeParmDecl 0x7fdcd595f2a0 <line:1169:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd595f308 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7fdcd595f378 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7fdcd595fe38 <line:1170:1, line:1185:1> line:1178:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd595fc10 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd595fc80 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fdcd595fcf0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7fdcd5960a90 <line:1179:1, line:1185:1>
| |   | |-DeclStmt 0x7fdcd59601d8 <line:1180:5, col:71>
| |   | | `-TypedefDecl 0x7fdcd5960180 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7fdcd5960110 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7fdcd5960870 <line:1181:5, line:1183:68>
| |   | | `-StaticAssertDecl 0x7fdcd5960838 <line:1181:5, line:1183:67> line:1181:5
| |   | |   |-ParenExpr 0x7fdcd59607f0 <col:19, line:1183:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd59607d0 <line:1181:20, line:1183:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd59607b0 <line:1181:21, line:1183:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd5960788 <line:1181:22, line:1183:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7fdcd59605a8 <line:1181:22, line:1182:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7fdcd59603a8 <line:1181:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7fdcd5960568 <line:1182:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd5960748 <line:1183:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd5960810 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd5960a78 <line:1184:5, col:91>
| |   |   `-CallExpr 0x7fdcd5960a38 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd59608a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7fdcd68232f8 0x7fdcd595eb08 0x7fdcd595efc0 0x7fdcd595fed0
| |   |     |-CStyleCastExpr 0x7fdcd5960950 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5960918 <col:33> '_A1' lvalue ParmVar 0x7fdcd595fc10 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fdcd59609b0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5960978 <col:58> '_A2' lvalue ParmVar 0x7fdcd595fc80 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7fdcd5960a10 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd59609d8 <col:83> '_A3' lvalue ParmVar 0x7fdcd595fcf0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7fdcd595ff38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd595ff80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5960c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5960b08 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd5960b80 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd5960e60 <col:105, col:141>
| | | `-ReturnStmt 0x7fdcd5960e48 <col:106, col:139>
| | |   `-CallExpr 0x7fdcd5960de0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5960dc8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5960d40 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fdcd68101e0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd5960e18 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5960d78 <col:121> 'float' lvalue ParmVar 0x7fdcd5960b08 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd5960e30 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5960da0 <col:131> 'float' lvalue ParmVar 0x7fdcd5960b80 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5960cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5960d10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5960fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5960ec8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd5960f40 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd5961220 <col:105, col:141>
| | | `-ReturnStmt 0x7fdcd5961208 <col:106, col:139>
| | |   `-CallExpr 0x7fdcd59611a0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5961188 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5961100 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fdcd6822638 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd59611d8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5961138 <col:121> 'long double' lvalue ParmVar 0x7fdcd5960ec8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd59611f0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5961160 <col:131> 'long double' lvalue ParmVar 0x7fdcd5960f40 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5961088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd59610d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5961a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1206:1> line:1200:1 fmax
| | |-TemplateTypeParmDecl 0x7fdcd5961240 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd59612a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd59619e8 <line:1193:1, line:1206:1> line:1200:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5961890 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd5961900 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd59622a8 <line:1201:1, line:1206:1>
| |   | |-DeclStmt 0x7fdcd5961cf8 <line:1202:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd5961ca0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd5961c30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd59620f0 <line:1203:5, line:1204:68>
| |   | | `-StaticAssertDecl 0x7fdcd59620b8 <line:1203:5, line:1204:67> line:1203:5
| |   | |   |-ParenExpr 0x7fdcd5962070 <col:19, line:1204:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd5962050 <line:1203:20, line:1204:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd5962030 <line:1203:21, line:1204:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd5962008 <line:1203:22, line:1204:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd5961e68 <line:1203:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd5961fc8 <line:1204:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd5962090 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd5962290 <line:1205:5, col:67>
| |   |   `-CallExpr 0x7fdcd5962258 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd5962128 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7fdcd6810408 0x7fdcd5960c20 0x7fdcd5960fe0 0x7fdcd5961a80
| |   |     |-CStyleCastExpr 0x7fdcd59621d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5962198 <col:34> '_A1' lvalue ParmVar 0x7fdcd5961890 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd5962230 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd59621f8 <col:59> '_A2' lvalue ParmVar 0x7fdcd5961900 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd5961ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5961b28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5962440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5962320 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd5962398 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd5962680 <col:105, col:141>
| | | `-ReturnStmt 0x7fdcd5962668 <col:106, col:139>
| | |   `-CallExpr 0x7fdcd5962600 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd59625e8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5962560 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fdcd6822860 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd5962638 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5962598 <col:121> 'float' lvalue ParmVar 0x7fdcd5962320 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd5962650 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd59625c0 <col:131> 'float' lvalue ParmVar 0x7fdcd5962398 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd59624e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5962530 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5962800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1211:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd59626e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd5962760 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd5962a40 <col:105, col:141>
| | | `-ReturnStmt 0x7fdcd5962a28 <col:106, col:139>
| | |   `-CallExpr 0x7fdcd59629c0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd59629a8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5962920 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fdcd6822cb0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd59629f8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5962958 <col:121> 'long double' lvalue ParmVar 0x7fdcd59626e8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd5962a10 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5962980 <col:131> 'long double' lvalue ParmVar 0x7fdcd5962760 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd59628a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd59628f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd59632a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1213:1, line:1227:1> line:1221:1 fmin
| | |-TemplateTypeParmDecl 0x7fdcd5962a60 <line:1213:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd5962ac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd5963208 <line:1214:1, line:1227:1> line:1221:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd59630b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd5963120 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd5963ac8 <line:1222:1, line:1227:1>
| |   | |-DeclStmt 0x7fdcd5963518 <line:1223:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd59634c0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd5963450 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd5963910 <line:1224:5, line:1225:68>
| |   | | `-StaticAssertDecl 0x7fdcd59638d8 <line:1224:5, line:1225:67> line:1224:5
| |   | |   |-ParenExpr 0x7fdcd5963890 <col:19, line:1225:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd5963870 <line:1224:20, line:1225:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd5963850 <line:1224:21, line:1225:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd5963828 <line:1224:22, line:1225:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd5963688 <line:1224:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd59637e8 <line:1225:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd59638b0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd5963ab0 <line:1226:5, col:67>
| |   |   `-CallExpr 0x7fdcd5963a78 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd5963948 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7fdcd6822a88 0x7fdcd5962440 0x7fdcd5962800 0x7fdcd59632a0
| |   |     |-CStyleCastExpr 0x7fdcd59639f0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd59639b8 <col:34> '_A1' lvalue ParmVar 0x7fdcd59630b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd5963a50 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd5963a18 <col:59> '_A2' lvalue ParmVar 0x7fdcd5963120 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd5963300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5963348 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5963c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1231:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5963b40 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd5963bb8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd5963e98 <col:106, col:143>
| | | `-ReturnStmt 0x7fdcd5963e80 <col:107, col:141>
| | |   `-CallExpr 0x7fdcd5963e18 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5963e00 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5963d78 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fdcd6816130 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd5963e50 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5963db0 <col:123> 'float' lvalue ParmVar 0x7fdcd5963b40 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd5963e68 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5963dd8 <col:133> 'float' lvalue ParmVar 0x7fdcd5963bb8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5963d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5963d48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5964018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5963f00 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd5963f78 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd5964258 <col:106, col:143>
| | | `-ReturnStmt 0x7fdcd5964240 <col:107, col:141>
| | |   `-CallExpr 0x7fdcd59641d8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd59641c0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5964138 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fdcd6816600 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd5964210 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5964170 <col:123> 'long double' lvalue ParmVar 0x7fdcd5963f00 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd5964228 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5964198 <col:133> 'long double' lvalue ParmVar 0x7fdcd5963f78 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd59640c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5964108 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5964b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1234:1, line:1248:1> line:1242:1 hypot
| | |-TemplateTypeParmDecl 0x7fdcd5964278 <line:1234:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd59642e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd5964a68 <line:1235:1, line:1248:1> line:1242:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5964910 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd5964980 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd5965328 <line:1243:1, line:1248:1>
| |   | |-DeclStmt 0x7fdcd5964d78 <line:1244:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd5964d20 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd5964cb0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd5965170 <line:1245:5, line:1246:68>
| |   | | `-StaticAssertDecl 0x7fdcd5965138 <line:1245:5, line:1246:67> line:1245:5
| |   | |   |-ParenExpr 0x7fdcd59650f0 <col:19, line:1246:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd59650d0 <line:1245:20, line:1246:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd59650b0 <line:1245:21, line:1246:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd5965088 <line:1245:22, line:1246:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd5964ee8 <line:1245:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd5965048 <line:1246:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd5965110 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd5965310 <line:1247:5, col:68>
| |   |   `-CallExpr 0x7fdcd59652d8 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd59651a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7fdcd6816358 0x7fdcd5963c58 0x7fdcd5964018 0x7fdcd5964b00
| |   |     |-CStyleCastExpr 0x7fdcd5965250 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5965218 <col:35> '_A1' lvalue ParmVar 0x7fdcd5964910 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd59652b0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd5965278 <col:60> '_A2' lvalue ParmVar 0x7fdcd5964980 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd5964b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5964ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5965438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd59653a0 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd5965628 <col:76, col:103>
| | | `-ReturnStmt 0x7fdcd5965610 <col:77, col:101>
| | |   `-CallExpr 0x7fdcd59655c8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fdcd59655b0 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5965550 <col:84, col:86> 'int (float)' lvalue Function 0x7fdcd68132a0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7fdcd59655f8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5965588 <col:93> 'float' lvalue ParmVar 0x7fdcd59653a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd59654d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5965520 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5965728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1253:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5965690 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5965918 <col:76, col:103>
| | | `-ReturnStmt 0x7fdcd5965900 <col:77, col:101>
| | |   `-CallExpr 0x7fdcd59658b8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fdcd59658a0 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5965840 <col:84, col:86> 'int (long double)' lvalue Function 0x7fdcd6814690 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd59658e8 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5965878 <col:93> 'long double' lvalue ParmVar 0x7fdcd5965690 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd59657c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5965810 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5965de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1255:1, line:1258:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7fdcd5965938 <line:1255:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5965d48 <line:1256:1, line:1258:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5965c70 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd59665b8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd59665a0 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd5966570 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7fdcd5966558 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5966520 <col:39, col:41> 'int (double)' lvalue Function 0x7fdcd6813478 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7fdcd5965f60 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd5965f20 <col:55> '_A1' lvalue ParmVar 0x7fdcd5965c70 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd5965e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5965e80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd59666b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5966620 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd59668a8 <col:85, col:113>
| | | `-ReturnStmt 0x7fdcd5966890 <col:86, col:111>
| | |   `-CallExpr 0x7fdcd5966848 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5966830 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd59667d0 <col:93, col:95> 'float (float)' lvalue Function 0x7fdcd6817d10 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5966878 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5966808 <col:103> 'float' lvalue ParmVar 0x7fdcd5966620 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5966758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd59667a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd59669a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1263:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5966910 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5966b98 <col:85, col:113>
| | | `-ReturnStmt 0x7fdcd5966b80 <col:86, col:111>
| | |   `-CallExpr 0x7fdcd5966b38 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5966b20 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5966ac0 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fdcd6818030 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5966b68 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5966af8 <col:103> 'long double' lvalue ParmVar 0x7fdcd5966910 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5966a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5966a90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5967060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1265:1, line:1268:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7fdcd5966bb8 <line:1265:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5966fc8 <line:1266:1, line:1268:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5966ef0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd5967580 <col:32, col:67>
| |   | `-ReturnStmt 0x7fdcd5967568 <col:33, col:65>
| |   |   `-CallExpr 0x7fdcd5967538 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd5967520 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd59674e8 <col:40, col:42> 'double (double)' lvalue Function 0x7fdcd6817ea0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd59671e0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd59671a0 <col:57> '_A1' lvalue ParmVar 0x7fdcd5966ef0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd59670b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5967100 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5967680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd59675e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd59678a0 <col:83, col:111>
| | | `-ReturnStmt 0x7fdcd5967888 <col:84, col:109>
| | |   `-CallExpr 0x7fdcd5967840 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fdcd5967828 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5967798 <col:91, col:93> 'long long (float)' lvalue Function 0x7fdcd681aa88 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5967870 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd59677d0 <col:101> 'float' lvalue ParmVar 0x7fdcd59675e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5967720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5967768 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd59679a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1273:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5967908 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5967bc0 <col:83, col:111>
| | | `-ReturnStmt 0x7fdcd5967ba8 <col:84, col:109>
| | |   `-CallExpr 0x7fdcd5967b60 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fdcd5967b48 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5967ab8 <col:91, col:93> 'long long (long double)' lvalue Function 0x7fdcd681aec8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5967b90 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5967af0 <col:101> 'long double' lvalue ParmVar 0x7fdcd5967908 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5967a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5967a88 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5968170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1275:1, line:1278:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7fdcd5967be0 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd59680d8 <line:1276:1, line:1278:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5967fc0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd5968948 <col:32, col:67>
| |   | `-ReturnStmt 0x7fdcd5968930 <col:33, col:65>
| |   |   `-CallExpr 0x7fdcd5968900 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7fdcd59688e8 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5968888 <col:40, col:42> 'long long (double)' lvalue Function 0x7fdcd681aca8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fdcd59682f0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd59682b0 <col:57> '_A1' lvalue ParmVar 0x7fdcd5967fc0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd59681c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5968210 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5968a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd59689b0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd5968c38 <col:84, col:113>
| | | `-ReturnStmt 0x7fdcd5968c20 <col:85, col:111>
| | |   `-CallExpr 0x7fdcd5968bd8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fdcd5968bc0 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5968b60 <col:92, col:94> 'long long (float)' lvalue Function 0x7fdcd681b0a8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5968c08 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5968b98 <col:103> 'float' lvalue ParmVar 0x7fdcd59689b0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5968ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5968b30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5968d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1283:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5968ca0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5968f28 <col:84, col:113>
| | | `-ReturnStmt 0x7fdcd5968f10 <col:85, col:111>
| | |   `-CallExpr 0x7fdcd5968ec8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fdcd5968eb0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5968e50 <col:92, col:94> 'long long (long double)' lvalue Function 0x7fdcd681b3e8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5968ef8 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5968e88 <col:103> 'long double' lvalue ParmVar 0x7fdcd5968ca0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5968dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5968e20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd59693f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1285:1, line:1288:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7fdcd5968f48 <line:1285:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5969358 <line:1286:1, line:1288:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5969280 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd5969910 <col:33, col:69>
| |   | `-ReturnStmt 0x7fdcd59698f8 <col:34, col:67>
| |   |   `-CallExpr 0x7fdcd59698c8 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7fdcd59698b0 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5969878 <col:41, col:43> 'long long (double)' lvalue Function 0x7fdcd681b248 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fdcd5969570 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd5969530 <col:59> '_A1' lvalue ParmVar 0x7fdcd5969280 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd5969448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5969490 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5969a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1292:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5969978 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd5969c00 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd5969be8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd5969ba0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5969b88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5969b28 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd680f050 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5969bd0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5969b60 <col:101> 'float' lvalue ParmVar 0x7fdcd5969978 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5969ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5969af8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5969d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1293:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5969c68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5969ef0 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd5969ed8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd5969e90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5969e78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5969e18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd680f390 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5969ec0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5969e50 <col:101> 'long double' lvalue ParmVar 0x7fdcd5969c68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5969da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5969de8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd596a3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1295:1, line:1298:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7fdcd5969f10 <line:1295:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd596a318 <line:1296:1, line:1298:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd596a240 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd596a8d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd596a8b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd596a888 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd596a870 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd596a838 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd680f1f0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd596a530 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd596a4f0 <col:55> '_A1' lvalue ParmVar 0x7fdcd596a240 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd596a408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd596a450 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596a9d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596a938 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd596abc0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd596aba8 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd596ab60 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd596ab48 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596aae8 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd680eb70 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd596ab90 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596ab20 <col:99> 'float' lvalue ParmVar 0x7fdcd596a938 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd596aa70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596aab8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596acc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596ac28 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd596aeb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd596ae98 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd596ae50 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd596ae38 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596add8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd680eeb0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd596ae80 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596ae10 <col:99> 'long double' lvalue ParmVar 0x7fdcd596ac28 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd596ad60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596ada8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd596b370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7fdcd596aed0 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd596b2d8 <line:1306:1, line:1308:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd596b200 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd596b890 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd596b878 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd596b848 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd596b830 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd596b7f8 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd680ed10 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd596b4f0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd596b4b0 <col:53> '_A1' lvalue ParmVar 0x7fdcd596b200 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd596b3c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd596b410 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596b990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596b8f8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd596bb80 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd596bb68 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd596bb20 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd596bb08 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596baa8 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd680f530 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd596bb50 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596bae0 <col:99> 'float' lvalue ParmVar 0x7fdcd596b8f8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd596ba30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596ba78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596bc80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596bbe8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd596be70 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd596be58 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd596be10 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd596bdf8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596bd98 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6810890 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd596be40 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596bdd0 <col:99> 'long double' lvalue ParmVar 0x7fdcd596bbe8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd596bd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596bd68 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd596c330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1318:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7fdcd596be90 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd596c298 <line:1316:1, line:1318:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd596c1c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd596c850 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd596c838 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd596c808 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd596c7f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd596c7b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd68106f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd596c4b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd596c470 <col:53> '_A1' lvalue ParmVar 0x7fdcd596c1c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd596c388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd596c3d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596c950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1322:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596c8b8 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd596cb70 <col:77, col:104>
| | | `-ReturnStmt 0x7fdcd596cb58 <col:78, col:102>
| | |   `-CallExpr 0x7fdcd596cb10 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fdcd596caf8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596ca68 <col:85, col:87> 'long (float)' lvalue Function 0x7fdcd6819a68 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fdcd596cb40 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596caa0 <col:94> 'float' lvalue ParmVar 0x7fdcd596c8b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd596c9f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596ca38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596cc70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1323:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596cbd8 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd596ce90 <col:77, col:104>
| | | `-ReturnStmt 0x7fdcd596ce78 <col:78, col:102>
| | |   `-CallExpr 0x7fdcd596ce30 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fdcd596ce18 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596cd88 <col:85, col:87> 'long (long double)' lvalue Function 0x7fdcd6819ea8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd596ce60 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596cdc0 <col:94> 'long double' lvalue ParmVar 0x7fdcd596cbd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd596cd10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596cd58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd596d440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1325:1, line:1328:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7fdcd596ceb0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd596d3a8 <line:1326:1, line:1328:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd596d290 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd596dbf8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd596dbe0 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd596dbb0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7fdcd596db98 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd596db38 <col:39, col:41> 'long (double)' lvalue Function 0x7fdcd6819c88 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fdcd596d5c0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd596d580 <col:55> '_A1' lvalue ParmVar 0x7fdcd596d290 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd596d498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd596d4e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596dcf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1332:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596dc60 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd596dee8 <col:78, col:106>
| | | `-ReturnStmt 0x7fdcd596ded0 <col:79, col:104>
| | |   `-CallExpr 0x7fdcd596de88 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fdcd596de70 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596de10 <col:86, col:88> 'long (float)' lvalue Function 0x7fdcd681a568 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fdcd596deb8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596de48 <col:96> 'float' lvalue ParmVar 0x7fdcd596dc60 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd596dd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596dde0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596dfe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596df50 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd596e1d8 <col:78, col:106>
| | | `-ReturnStmt 0x7fdcd596e1c0 <col:79, col:104>
| | |   `-CallExpr 0x7fdcd596e178 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fdcd596e160 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596e100 <col:86, col:88> 'long (long double)' lvalue Function 0x7fdcd681a8a8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd596e1a8 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596e138 <col:96> 'long double' lvalue ParmVar 0x7fdcd596df50 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd596e088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596e0d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd596e6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1335:1, line:1338:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7fdcd596e1f8 <line:1335:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd596e608 <line:1336:1, line:1338:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd596e530 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd596ebc0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fdcd596eba8 <col:33, col:65>
| |   |   `-CallExpr 0x7fdcd596eb78 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7fdcd596eb60 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd596eb28 <col:40, col:42> 'long (double)' lvalue Function 0x7fdcd681a708 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fdcd596e820 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd596e7e0 <col:57> '_A1' lvalue ParmVar 0x7fdcd596e530 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd596e6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd596e740 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596ecc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1344:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596ec28 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd596eeb0 <col:88, col:119>
| | | `-ReturnStmt 0x7fdcd596ee98 <col:89, col:117>
| | |   `-CallExpr 0x7fdcd596ee50 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd596ee38 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596edd8 <col:96, col:98> 'float (float)' lvalue Function 0x7fdcd6819068 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd596ee80 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596ee10 <col:109> 'float' lvalue ParmVar 0x7fdcd596ec28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd596ed60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596eda8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596efb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1345:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596ef18 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd596f1a0 <col:88, col:119>
| | | `-ReturnStmt 0x7fdcd596f188 <col:89, col:117>
| | |   `-CallExpr 0x7fdcd596f140 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd596f128 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596f0c8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7fdcd68193a8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd596f170 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596f100 <col:109> 'long double' lvalue ParmVar 0x7fdcd596ef18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd596f050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596f098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd596f660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1347:1, line:1350:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7fdcd596f1c0 <line:1347:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd596f5c8 <line:1348:1, line:1350:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd596f4f0 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd596fb80 <col:35, col:73>
| |   | `-ReturnStmt 0x7fdcd596fb68 <col:36, col:71>
| |   |   `-CallExpr 0x7fdcd596fb38 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd596fb20 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd596fae8 <col:43, col:45> 'double (double)' lvalue Function 0x7fdcd6819208 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd596f7e0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd596f7a0 <col:63> '_A1' lvalue ParmVar 0x7fdcd596f4f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd596f6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd596f700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd596fd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596fbe8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd596fc60 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd596ff40 <col:110, col:151>
| | | `-ReturnStmt 0x7fdcd596ff28 <col:111, col:149>
| | |   `-CallExpr 0x7fdcd596fec0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd596fea8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd596fe20 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fdcd681dd68 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd596fef8 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd596fe58 <col:131> 'float' lvalue ParmVar 0x7fdcd596fbe8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd596ff10 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd596fe80 <col:141> 'float' lvalue ParmVar 0x7fdcd596fc60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd596fda8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd596fdf0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd59700c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd596ffa8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd5970020 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd5970300 <col:110, col:151>
| | | `-ReturnStmt 0x7fdcd59702e8 <col:111, col:149>
| | |   `-CallExpr 0x7fdcd5970280 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5970268 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd59701e0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fdcd681e1b8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd59702b8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5970218 <col:131> 'long double' lvalue ParmVar 0x7fdcd596ffa8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd59702d0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5970240 <col:141> 'long double' lvalue ParmVar 0x7fdcd5970020 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5970168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd59701b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5970b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1371:1> line:1365:1 nextafter
| | |-TemplateTypeParmDecl 0x7fdcd5970320 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd5970388 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd5970ac8 <line:1358:1, line:1371:1> line:1365:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5970970 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd59709e0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd5971388 <line:1366:1, line:1371:1>
| |   | |-DeclStmt 0x7fdcd5970dd8 <line:1367:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd5970d80 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd5970d10 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd59711d0 <line:1368:5, line:1369:68>
| |   | | `-StaticAssertDecl 0x7fdcd5971198 <line:1368:5, line:1369:67> line:1368:5
| |   | |   |-ParenExpr 0x7fdcd5971150 <col:19, line:1369:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd5971130 <line:1368:20, line:1369:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd5971110 <line:1368:21, line:1369:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd59710e8 <line:1368:22, line:1369:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd5970f48 <line:1368:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd59710a8 <line:1369:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd5971170 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd5971370 <line:1370:5, col:72>
| |   |   `-CallExpr 0x7fdcd5971338 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd5971208 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7fdcd681df90 0x7fdcd596fd00 0x7fdcd59700c0 0x7fdcd5970b60
| |   |     |-CStyleCastExpr 0x7fdcd59712b0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5971278 <col:39> '_A1' lvalue ParmVar 0x7fdcd5970970 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd5971310 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd59712d8 <col:64> '_A2' lvalue ParmVar 0x7fdcd59709e0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd5970bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5970c08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5971518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5971400 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd5971478 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd5971780 <col:111, col:153>
| | | `-ReturnStmt 0x7fdcd5971768 <col:112, col:151>
| | |   `-CallExpr 0x7fdcd5971700 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd59716e8 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5971638 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7fdcd680f6d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd5971738 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5971670 <col:133> 'float' lvalue ParmVar 0x7fdcd5971400 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd5971750 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5971698 <col:143> 'long double' lvalue ParmVar 0x7fdcd5971478 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd59715c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5971608 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5971900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1376:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd59717e8 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd5971860 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd5971b40 <col:111, col:153>
| | | `-ReturnStmt 0x7fdcd5971b28 <col:112, col:151>
| | |   `-CallExpr 0x7fdcd5971ac0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5971aa8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5971a20 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7fdcd680f940 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd5971af8 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5971a58 <col:133> 'long double' lvalue ParmVar 0x7fdcd59717e8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd5971b10 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5971a80 <col:143> 'long double' lvalue ParmVar 0x7fdcd5971860 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd59719a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd59719f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd59720d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1378:1, line:1381:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7fdcd5971b60 <line:1378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5972038 <line:1379:1, line:1381:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5971e90 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd5971f08 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7fdcd5972668 <col:58, col:107>
| |   | `-ReturnStmt 0x7fdcd5972650 <col:59, col:105>
| |   |   `-CallExpr 0x7fdcd5972600 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd59725e8 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5972588 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7fdcd681e428 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7fdcd5972258 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5972218 <col:87> '_A1' lvalue ParmVar 0x7fdcd5971e90 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fdcd5972638 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fdcd5972280 <col:97> 'long double' lvalue ParmVar 0x7fdcd5971f08 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7fdcd5972130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5972178 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd59727e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd59726d0 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd5972748 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fdcd5972a28 <col:110, col:151>
| | | `-ReturnStmt 0x7fdcd5972a10 <col:111, col:149>
| | |   `-CallExpr 0x7fdcd59729a8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5972990 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5972908 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fdcd681c1d8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fdcd59729e0 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5972940 <col:131> 'float' lvalue ParmVar 0x7fdcd59726d0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd59729f8 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5972968 <col:141> 'float' lvalue ParmVar 0x7fdcd5972748 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5972890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd59728d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5972ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1386:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5972a90 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd5972b08 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fdcd5972de8 <col:110, col:151>
| | | `-ReturnStmt 0x7fdcd5972dd0 <col:111, col:149>
| | |   `-CallExpr 0x7fdcd5972d68 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5972d50 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5972cc8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fdcd681c638 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fdcd5972da0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5972d00 <col:131> 'long double' lvalue ParmVar 0x7fdcd5972a90 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd5972db8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5972d28 <col:141> 'long double' lvalue ParmVar 0x7fdcd5972b08 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5972c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5972c98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5973650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1388:1, line:1402:1> line:1396:1 remainder
| | |-TemplateTypeParmDecl 0x7fdcd5972e08 <line:1388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd5972e78 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd59735b8 <line:1389:1, line:1402:1> line:1396:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5973460 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd59734d0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fdcd5973e78 <line:1397:1, line:1402:1>
| |   | |-DeclStmt 0x7fdcd59738c8 <line:1398:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd5973870 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd5973800 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd5973cc0 <line:1399:5, line:1400:68>
| |   | | `-StaticAssertDecl 0x7fdcd5973c88 <line:1399:5, line:1400:67> line:1399:5
| |   | |   |-ParenExpr 0x7fdcd5973c40 <col:19, line:1400:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd5973c20 <line:1399:20, line:1400:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd5973c00 <line:1399:21, line:1400:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd5973bd8 <line:1399:22, line:1400:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd5973a38 <line:1399:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd5973b98 <line:1400:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd5973c60 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd5973e60 <line:1401:5, col:72>
| |   |   `-CallExpr 0x7fdcd5973e28 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd5973cf8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7fdcd681c400 0x7fdcd59727e8 0x7fdcd5972ba8 0x7fdcd5973650
| |   |     |-CStyleCastExpr 0x7fdcd5973da0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5973d68 <col:39> '_A1' lvalue ParmVar 0x7fdcd5973460 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fdcd5973e00 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd5973dc8 <col:64> '_A2' lvalue ParmVar 0x7fdcd59734d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fdcd59736b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd59736f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd59740d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1406:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5973ef0 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd5973f68 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fdcd5973fe0 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fdcd5974390 <col:122, col:170>
| | | `-ReturnStmt 0x7fdcd5974378 <col:123, col:168>
| | |   `-CallExpr 0x7fdcd59742f0 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd59742d8 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd59741f8 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7fdcd681c928 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7fdcd5974330 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5974230 <col:140> 'float' lvalue ParmVar 0x7fdcd5973ef0 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5974348 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5974258 <col:150> 'float' lvalue ParmVar 0x7fdcd5973f68 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd5974360 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5974280 <col:160> 'int *' lvalue ParmVar 0x7fdcd5973fe0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fdcd5974180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd59741c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd59745e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5974400 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd5974478 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fdcd59744f0 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fdcd59748a0 <col:122, col:170>
| | | `-ReturnStmt 0x7fdcd5974888 <col:123, col:168>
| | |   `-CallExpr 0x7fdcd5974800 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd59747e8 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5974708 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7fdcd681ce68 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7fdcd5974840 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5974740 <col:140> 'long double' lvalue ParmVar 0x7fdcd5974400 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5974858 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5974768 <col:150> 'long double' lvalue ParmVar 0x7fdcd5974478 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd5974870 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5974790 <col:160> 'int *' lvalue ParmVar 0x7fdcd59744f0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fdcd5974690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd59746d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd59751e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1409:1, line:1423:1> line:1417:1 remquo
| | |-TemplateTypeParmDecl 0x7fdcd59748c0 <line:1409:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fdcd5974928 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fdcd5975148 <line:1410:1, line:1423:1> line:1417:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5974f10 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd5974f80 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fdcd5974ff8 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7fdcd5975a38 <line:1418:1, line:1423:1>
| |   | |-DeclStmt 0x7fdcd5975458 <line:1419:5, col:66>
| |   | | `-TypedefDecl 0x7fdcd5975400 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fdcd5975390 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fdcd5975850 <line:1420:5, line:1421:68>
| |   | | `-StaticAssertDecl 0x7fdcd5975818 <line:1420:5, line:1421:67> line:1420:5
| |   | |   |-ParenExpr 0x7fdcd59757d0 <col:19, line:1421:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fdcd59757b0 <line:1420:20, line:1421:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fdcd5975790 <line:1420:21, line:1421:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fdcd5975768 <line:1420:22, line:1421:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fdcd59755c8 <line:1420:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fdcd5975728 <line:1421:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fdcd59757f0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fdcd5975a20 <line:1422:5, col:79>
| |   |   `-CallExpr 0x7fdcd59759e0 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fdcd5975888 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7fdcd681cbc8 0x7fdcd59740d0 0x7fdcd59745e0 0x7fdcd59751e0
| |   |     |-CStyleCastExpr 0x7fdcd5975930 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd59758f8 <col:36> '_A1' lvalue ParmVar 0x7fdcd5974f10 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fdcd5975990 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5975958 <col:61> '_A2' lvalue ParmVar 0x7fdcd5974f80 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7fdcd59759b8 <col:71> 'int *' lvalue ParmVar 0x7fdcd5974ff8 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7fdcd5975248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5975290 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5975b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1427:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5975ab0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd5975d38 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd5975d20 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd5975cd8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5975cc0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5975c60 <col:91, col:93> 'float (float)' lvalue Function 0x7fdcd6819548 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5975d08 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5975c98 <col:99> 'float' lvalue ParmVar 0x7fdcd5975ab0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5975be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5975c30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5975e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1428:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5975da0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5976028 <col:83, col:109>
| | | `-ReturnStmt 0x7fdcd5976010 <col:84, col:107>
| | |   `-CallExpr 0x7fdcd5975fc8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5975fb0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5975f50 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fdcd6819890 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5975ff8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5975f88 <col:99> 'long double' lvalue ParmVar 0x7fdcd5975da0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5975ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5975f20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd59764f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1430:1, line:1433:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7fdcd5976048 <line:1430:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5976458 <line:1431:1, line:1433:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5976380 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd5976a10 <col:30, col:63>
| |   | `-ReturnStmt 0x7fdcd59769f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fdcd59769c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd59769b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5976978 <col:38, col:40> 'double (double)' lvalue Function 0x7fdcd68196f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd5976670 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd5976630 <col:53> '_A1' lvalue ParmVar 0x7fdcd5976380 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd5976548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5976590 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5976b10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1437:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5976a78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd5976d00 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd5976ce8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd5976ca0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5976c88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5976c28 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd681a088 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd5976cd0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5976c60 <col:101> 'float' lvalue ParmVar 0x7fdcd5976a78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd5976bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5976bf8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5976e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1438:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5976d68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd5976ff0 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd5976fd8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd5976f90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5976f78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5976f18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd681a3c8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd5976fc0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5976f50 <col:101> 'long double' lvalue ParmVar 0x7fdcd5976d68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd5976ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5976ee8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd59774b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1440:1, line:1443:65> col:1 round
| | |-TemplateTypeParmDecl 0x7fdcd5977010 <line:1440:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5977418 <line:1441:1, line:1443:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5977340 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd59779d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fdcd59779b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fdcd5977988 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd5977970 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5977938 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd681a228 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd5977630 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd59775f0 <col:55> '_A1' lvalue ParmVar 0x7fdcd5977340 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd5977508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5977550 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5977b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1447:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5977a38 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd5977ab0 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fdcd5977dc0 <col:101, col:140>
| | | `-ReturnStmt 0x7fdcd5977da8 <col:102, col:138>
| | |   `-CallExpr 0x7fdcd5977d40 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5977d28 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5977c70 <col:109, col:111> 'float (float, long)' lvalue Function 0x7fdcd6814fa8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7fdcd5977d78 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5977ca8 <col:120> 'float' lvalue ParmVar 0x7fdcd5977a38 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd5977d90 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5977cd0 <col:130> 'long' lvalue ParmVar 0x7fdcd5977ab0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fdcd5977bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5977c40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5977f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1448:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5977e28 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd5977ea0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fdcd59781b0 <col:101, col:140>
| | | `-ReturnStmt 0x7fdcd5978198 <col:102, col:138>
| | |   `-CallExpr 0x7fdcd5978130 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd5978118 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5978060 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7fdcd6815508 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7fdcd5978168 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5978098 <col:120> 'long double' lvalue ParmVar 0x7fdcd5977e28 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd5978180 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd59780c0 <col:130> 'long' lvalue ParmVar 0x7fdcd5977ea0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fdcd5977fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5978030 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd5978770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1450:1, line:1453:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7fdcd59781d0 <line:1450:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd59786d8 <line:1451:1, line:1453:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd5978530 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd59785a8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7fdcd5978d08 <col:48, col:94>
| |   | `-ReturnStmt 0x7fdcd5978cf0 <col:49, col:92>
| |   |   `-CallExpr 0x7fdcd5978ca0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd5978c88 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5978c28 <col:56, col:58> 'double (double, long)' lvalue Function 0x7fdcd6815258 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7fdcd59788f8 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd59788b8 <col:74> '_A1' lvalue ParmVar 0x7fdcd5978530 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fdcd5978cd8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fdcd5978920 <col:84> 'long' lvalue ParmVar 0x7fdcd59785a8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7fdcd59787d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5978818 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5978e88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1457:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5978d70 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fdcd5978de8 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fdcd59790c8 <col:99, col:137>
| | | `-ReturnStmt 0x7fdcd59790b0 <col:100, col:135>
| | |   `-CallExpr 0x7fdcd5979048 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd5979030 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5978fa8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7fdcd68148e8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fdcd5979080 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd5978fe0 <col:117> 'float' lvalue ParmVar 0x7fdcd5978d70 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fdcd5979098 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd5979008 <col:127> 'int' lvalue ParmVar 0x7fdcd5978de8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fdcd5978f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5978f78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd5979248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1458:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5979130 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fdcd59791a8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fdcd5979488 <col:99, col:137>
| | | `-ReturnStmt 0x7fdcd5979470 <col:100, col:135>
| | |   `-CallExpr 0x7fdcd5979408 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd59793f0 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd5979368 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7fdcd6814d38 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fdcd5979440 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fdcd59793a0 <col:117> 'long double' lvalue ParmVar 0x7fdcd5979130 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fdcd5979458 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd59793c8 <col:127> 'int' lvalue ParmVar 0x7fdcd59791a8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fdcd59792f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd5979338 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd59799e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1460:1, line:1463:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7fdcd59794a8 <line:1460:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd5979948 <line:1461:1, line:1463:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd59797e0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fdcd5979858 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7fdcd5979f50 <col:46, col:91>
| |   | `-ReturnStmt 0x7fdcd5979f38 <col:47, col:89>
| |   |   `-CallExpr 0x7fdcd5979ee8 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd5979ed0 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd5979e98 <col:54, col:56> 'double (double, int)' lvalue Function 0x7fdcd6814b10 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fdcd5979b68 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fdcd5979b28 <col:71> '_A1' lvalue ParmVar 0x7fdcd59797e0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fdcd5979f20 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fdcd5979b90 <col:81> 'int' lvalue ParmVar 0x7fdcd5979858 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7fdcd5979a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd5979a88 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd597a050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1467:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd5979fb8 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd597a240 <col:85, col:113>
| | | `-ReturnStmt 0x7fdcd597a228 <col:86, col:111>
| | |   `-CallExpr 0x7fdcd597a1e0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd597a1c8 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd597a168 <col:93, col:95> 'float (float)' lvalue Function 0x7fdcd68181c0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd597a210 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd597a1a0 <col:103> 'float' lvalue ParmVar 0x7fdcd5979fb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd597a0f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd597a138 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd597a340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1468:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd597a2a8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd597a530 <col:85, col:113>
| | | `-ReturnStmt 0x7fdcd597a518 <col:86, col:111>
| | |   `-CallExpr 0x7fdcd597a4d0 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd597a4b8 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd597a458 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fdcd6818500 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd597a500 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd597a490 <col:103> 'long double' lvalue ParmVar 0x7fdcd597a2a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd597a3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd597a428 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fdcd597a9f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1470:1, line:1473:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7fdcd597a550 <line:1470:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fdcd597a958 <line:1471:1, line:1473:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fdcd597a880 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fdcd597af10 <col:32, col:67>
| |   | `-ReturnStmt 0x7fdcd597aef8 <col:33, col:65>
| |   |   `-CallExpr 0x7fdcd597aec8 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fdcd597aeb0 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fdcd597ae78 <col:40, col:42> 'double (double)' lvalue Function 0x7fdcd6818360 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fdcd597ab70 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fdcd597ab30 <col:57> '_A1' lvalue ParmVar 0x7fdcd597a880 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fdcd597aa48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fdcd597aa90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd597b010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1477:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fdcd597af78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fdcd597b200 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd597b1e8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd597b1a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fdcd597b188 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd597b128 <col:92, col:94> 'float (float)' lvalue Function 0x7fdcd681b600 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fdcd597b1d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd597b160 <col:101> 'float' lvalue ParmVar 0x7fdcd597af78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fdcd597b0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd597b0f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fdcd597b300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1478:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fdcd597b268 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fdcd597b4f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fdcd597b4d8 <col:85, col:109>
| | |   `-CallExpr 0x7fdcd597b490 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fdcd597b478 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fdcd597b418 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fdcd681b940 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fdcd597b4c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fdcd597b450 <col:101> 'long double' lvalue ParmVar 0x7fdcd597b268 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fdcd597b3a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fdcd597b3e8 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fdcd597b9b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1480:1, line:1483:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7fdcd597b510 <line:1480:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7fdcd597b918 <line:1481:1, line:1483:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7fdcd597b840 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7fdcd597bed0 <col:31, col:65>
|     | `-ReturnStmt 0x7fdcd597beb8 <col:32, col:63>
|     |   `-CallExpr 0x7fdcd597be88 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7fdcd597be70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7fdcd597be38 <col:39, col:41> 'double (double)' lvalue Function 0x7fdcd681b7a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7fdcd597bb30 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7fdcd597baf0 <col:55> '_A1' lvalue ParmVar 0x7fdcd597b840 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7fdcd597ba08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7fdcd597ba50 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7fdcd6846258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:439:12> col:12 implicit C
| `-FunctionDecl 0x7fdcd68462a8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fdcd6846340 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fdcd68463a8 <col:12> Implicit
|   `-ConstAttr 0x7fdcd68463f0 <col:12> Implicit
|-LinkageSpecDecl 0x7fdcd40f0b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:90> col:90 implicit C
| `-FunctionDecl 0x7fdcd40f0b90 <col:90> col:90 implicit used __builtin_huge_valf 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fdcd40f0c28 <col:90> Implicit
|   `-ConstAttr 0x7fdcd40f0c70 <col:90> Implicit
|-LinkageSpecDecl 0x7fdcd40f0d20 <line:332:91> col:91 implicit C
| `-FunctionDecl 0x7fdcd40f0d70 <col:91> col:91 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fdcd40f0e08 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fdcd40f0e70 <col:91> Implicit
|   `-ConstAttr 0x7fdcd40f0eb8 <col:91> Implicit
|-LinkageSpecDecl 0x7fdcd40f1020 <line:333:95> col:95 implicit C
| `-FunctionDecl 0x7fdcd40f1070 <col:95> col:95 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fdcd40f1108 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fdcd40f1170 <col:95> Implicit
|   `-ConstAttr 0x7fdcd40f11b8 <col:95> Implicit
|-LinkageSpecDecl 0x7fdcd40f3c70 <line:377:90> col:90 implicit C
| `-FunctionDecl 0x7fdcd40f3cc0 <col:90> col:90 implicit used __builtin_huge_val 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fdcd40f3d58 <col:90> Implicit
|   `-ConstAttr 0x7fdcd40f3da0 <col:90> Implicit
|-LinkageSpecDecl 0x7fdcd40f3e50 <line:378:91> col:91 implicit C
| `-FunctionDecl 0x7fdcd40f3ea0 <col:91> col:91 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fdcd40f3f38 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fdcd40f3fa0 <col:91> Implicit
|   `-ConstAttr 0x7fdcd40f3fe8 <col:91> Implicit
|-LinkageSpecDecl 0x7fdcd40f4150 <line:379:95> col:95 implicit C
| `-FunctionDecl 0x7fdcd40f41a0 <col:95> col:95 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fdcd40f4238 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fdcd40f42a0 <col:95> Implicit
|   `-ConstAttr 0x7fdcd40f42e8 <col:95> Implicit
|-LinkageSpecDecl 0x7fdcd40f6dc8 <line:423:90> col:90 implicit C
| `-FunctionDecl 0x7fdcd40f6e18 <col:90> col:90 implicit used __builtin_huge_vall 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fdcd40f6eb0 <col:90> Implicit
|   `-ConstAttr 0x7fdcd40f6ef8 <col:90> Implicit
|-LinkageSpecDecl 0x7fdcd40f6fa8 <line:424:91> col:91 implicit C
| `-FunctionDecl 0x7fdcd40f6ff8 <col:91> col:91 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fdcd40f7090 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fdcd40f70f8 <col:91> Implicit
|   `-ConstAttr 0x7fdcd40f7140 <col:91> Implicit
|-LinkageSpecDecl 0x7fdcd40f72b0 <line:425:95> col:95 implicit C
| `-FunctionDecl 0x7fdcd40f7300 <col:95> col:95 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fdcd40f7398 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fdcd40f7400 <col:95> Implicit
|   `-ConstAttr 0x7fdcd40f7448 <col:95> Implicit
|-LinkageSpecDecl 0x7fdcd411f1b0 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7fdcd411f200 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd411f298 <col:25> Implicit
|   `-ConstAttr 0x7fdcd411f2e0 <col:25> Implicit
|-LinkageSpecDecl 0x7fdcd4120558 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7fdcd41205a8 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd4120640 <col:30> Implicit
|   `-ConstAttr 0x7fdcd4120688 <col:30> Implicit
|-LinkageSpecDecl 0x7fdcd41216c8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7fdcd4121718 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd41217b0 <col:22> Implicit
|   `-ConstAttr 0x7fdcd41217f8 <col:22> Implicit
|-LinkageSpecDecl 0x7fdcd4122858 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7fdcd41228a8 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd4122940 <col:27> Implicit
|   `-ConstAttr 0x7fdcd4122988 <col:27> Implicit
|-LinkageSpecDecl 0x7fdcd4123a00 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7fdcd4123a50 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd4123ae8 <col:29> Implicit
|   `-ConstAttr 0x7fdcd4123b30 <col:29> Implicit
|-LinkageSpecDecl 0x7fdcd4124b78 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7fdcd4124bc8 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd4124c60 <col:27> Implicit
|   `-ConstAttr 0x7fdcd4124ca8 <col:27> Implicit
|-NamespaceDecl 0x7fdcd597bef0 prev 0x7fdcd40caf98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fdcd584d258 'std'
| `-NamespaceDecl 0x7fdcd597bf58 prev 0x7fdcd40cb000 <col:52, line:439:36> <scratch space>:440:1 __1 inline
|   |-original Namespace 0x7fdcd584d2c0 '__1'
|   |-UsingDecl 0x7fdcd597bfc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7fdcd597c018 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4114a98 'signbit'
|   |-UsingShadowDecl 0x7fdcd597c060 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4115590 'signbit'
|   |-UsingShadowDecl 0x7fdcd597c0a8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4115de0 'signbit'
|   |-UsingDecl 0x7fdcd597c0f8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7fdcd597c148 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4116e60 'fpclassify'
|   |-UsingShadowDecl 0x7fdcd597c190 <col:9> col:9 implicit FunctionTemplate 0x7fdcd41176e0 'fpclassify'
|   |-UsingDecl 0x7fdcd597c1e0 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7fdcd597c230 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4118980 'isfinite'
|   |-UsingShadowDecl 0x7fdcd597c278 <col:9> col:9 implicit FunctionTemplate 0x7fdcd411a370 'isfinite'
|   |-UsingDecl 0x7fdcd597c2c8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7fdcd597c318 <col:9> col:9 implicit FunctionTemplate 0x7fdcd411b400 'isinf'
|   |-UsingShadowDecl 0x7fdcd597c360 <col:9> col:9 implicit FunctionTemplate 0x7fdcd411bd00 'isinf'
|   |-UsingDecl 0x7fdcd597c3b0 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7fdcd597d400 <col:9> col:9 implicit FunctionTemplate 0x7fdcd411cc50 'isnan'
|   |-UsingShadowDecl 0x7fdcd597d448 <col:9> col:9 implicit FunctionTemplate 0x7fdcd411d4d0 'isnan'
|   |-UsingDecl 0x7fdcd597d498 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7fdcd597d4e8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd411e440 'isnormal'
|   |-UsingShadowDecl 0x7fdcd597d530 <col:9> col:9 implicit FunctionTemplate 0x7fdcd411ebd0 'isnormal'
|   |-UsingDecl 0x7fdcd597d580 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7fdcd597d5d0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd411fc60 'isgreater'
|   |-UsingDecl 0x7fdcd597d620 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7fdcd597d670 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4120ea0 'isgreaterequal'
|   |-UsingDecl 0x7fdcd597d6c0 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7fdcd597d710 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4122030 'isless'
|   |-UsingDecl 0x7fdcd597d760 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7fdcd597d7b0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd41231a0 'islessequal'
|   |-UsingDecl 0x7fdcd597d800 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7fdcd597d850 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4124350 'islessgreater'
|   |-UsingDecl 0x7fdcd597d8a0 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fdcd597d8f0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd41254c0 'isunordered'
|   |-UsingDecl 0x7fdcd597d940 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fdcd597d990 prev 0x7fdcd597d8f0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd41254c0 'isunordered'
|   |-UsingDecl 0x7fdcd597d9e0 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7fdcd597da30 <col:9> col:9 implicit Typedef 0x7fdcd584d440 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fdcd597da80 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7fdcd597dad0 <col:9> col:9 implicit Typedef 0x7fdcd584d4b0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fdcd597db20 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7fdcd597db70 <col:9> col:9 implicit Function 0x7fdcd4126a00 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597dbb8 <col:9> col:9 implicit Function 0x7fdcd4126cf0 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597dc00 <col:9> col:9 implicit Function 0x7fdcd4126fe0 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7fdcd597dc50 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7fdcd597dca0 <col:9> col:9 implicit Function 0x7fdcd68078d8 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597dce8 <col:9> col:9 implicit Function 0x7fdcd41272d0 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597dd30 <col:9> col:9 implicit Function 0x7fdcd41275c0 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597dd78 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4127d60 'acos'
|   |-UsingDecl 0x7fdcd597ddc8 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7fdcd597de18 <col:9> col:9 implicit Function 0x7fdcd6807738 'acosf' 'float (float)'
|   |-UsingDecl 0x7fdcd597de68 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7fdcd597deb8 <col:9> col:9 implicit Function 0x7fdcd6807e00 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597df00 <col:9> col:9 implicit Function 0x7fdcd4129960 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597df48 <col:9> col:9 implicit Function 0x7fdcd4129c50 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597df90 <col:9> col:9 implicit FunctionTemplate 0x7fdcd412a300 'asin'
|   |-UsingDecl 0x7fdcd597dfe0 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7fdcd597e030 <col:9> col:9 implicit Function 0x7fdcd6807c18 'asinf' 'float (float)'
|   |-UsingDecl 0x7fdcd597e080 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7fdcd597e0d0 <col:9> col:9 implicit Function 0x7fdcd68082e0 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597e118 <col:9> col:9 implicit Function 0x7fdcd412a920 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e160 <col:9> col:9 implicit Function 0x7fdcd412ac40 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e1a8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd412b2f0 'atan'
|   |-UsingDecl 0x7fdcd597e1f8 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7fdcd597e248 <col:9> col:9 implicit Function 0x7fdcd6808140 'atanf' 'float (float)'
|   |-UsingDecl 0x7fdcd597e298 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7fdcd597e2e8 <col:9> col:9 implicit Function 0x7fdcd6808998 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd597e330 <col:9> col:9 implicit Function 0x7fdcd412b990 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e378 <col:9> col:9 implicit Function 0x7fdcd412bd80 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e3c0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd412c950 'atan2'
|   |-UsingDecl 0x7fdcd597e410 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7fdcd597e460 <col:9> col:9 implicit Function 0x7fdcd68086e8 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7fdcd597e4b0 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7fdcd597e500 <col:9> col:9 implicit Function 0x7fdcd6818848 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597e548 <col:9> col:9 implicit Function 0x7fdcd412e368 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e590 <col:9> col:9 implicit Function 0x7fdcd412e658 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e5d8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd412ed10 'ceil'
|   |-UsingDecl 0x7fdcd597e628 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7fdcd597e678 <col:9> col:9 implicit Function 0x7fdcd68186a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7fdcd597e6c8 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7fdcd597e718 <col:9> col:9 implicit Function 0x7fdcd68097d0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597e760 <col:9> col:9 implicit Function 0x7fdcd412f330 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e7a8 <col:9> col:9 implicit Function 0x7fdcd412f620 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e7f0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd412fd00 'cos'
|   |-UsingDecl 0x7fdcd597e840 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7fdcd597e890 <col:9> col:9 implicit Function 0x7fdcd6809630 'cosf' 'float (float)'
|   |-UsingDecl 0x7fdcd597e8e0 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7fdcd597e930 <col:9> col:9 implicit Function 0x7fdcd680bd30 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597e978 <col:9> col:9 implicit Function 0x7fdcd4130320 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597e9c0 <col:9> col:9 implicit Function 0x7fdcd4130610 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597ea08 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4130cc0 'cosh'
|   |-UsingDecl 0x7fdcd597ea58 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7fdcd597eaa8 <col:9> col:9 implicit Function 0x7fdcd680bb90 'coshf' 'float (float)'
|   |-UsingDecl 0x7fdcd597eaf8 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7fdcd597eb48 <col:9> col:9 implicit Function 0x7fdcd680d3f0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597eb90 <col:9> col:9 implicit Function 0x7fdcd41312e0 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597ebd8 <col:9> col:9 implicit Function 0x7fdcd41315d0 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597ec20 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4131ca0 'exp'
|   |-UsingDecl 0x7fdcd597ec70 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7fdcd597ecc0 <col:9> col:9 implicit Function 0x7fdcd680d250 'expf' 'float (float)'
|   |-UsingDecl 0x7fdcd597ed10 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7fdcd597ed60 <col:9> col:9 implicit Function 0x7fdcd6815890 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597eda8 <col:9> col:9 implicit Function 0x7fdcd41322c0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597edf0 <col:9> col:9 implicit Function 0x7fdcd41325b0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597ee38 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4132c60 'fabs'
|   |-UsingDecl 0x7fdcd597ee88 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7fdcd597eed8 <col:9> col:9 implicit Function 0x7fdcd68156f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7fdcd597ef28 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7fdcd597ef78 <col:9> col:9 implicit Function 0x7fdcd6818d28 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597efc0 <col:9> col:9 implicit Function 0x7fdcd4133280 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f008 <col:9> col:9 implicit Function 0x7fdcd4133570 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f050 <col:9> col:9 implicit FunctionTemplate 0x7fdcd6003a40 'floor'
|   |-UsingDecl 0x7fdcd597f0a0 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7fdcd597f0f0 <col:9> col:9 implicit Function 0x7fdcd6818b88 'floorf' 'float (float)'
|   |-UsingDecl 0x7fdcd597f140 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7fdcd597f190 <col:9> col:9 implicit Function 0x7fdcd681bd88 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd597f1d8 <col:9> col:9 implicit Function 0x7fdcd60040e0 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f220 <col:9> col:9 implicit Function 0x7fdcd60044a0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f268 <col:9> col:9 implicit FunctionTemplate 0x7fdcd6004f40 'fmod'
|   |-UsingDecl 0x7fdcd597f2b8 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7fdcd597f308 <col:9> col:9 implicit Function 0x7fdcd681bb60 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd597f358 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7fdcd597f3a8 <col:9> col:9 implicit Function 0x7fdcd6812e28 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7fdcd597f3f0 <col:9> col:9 implicit Function 0x7fdcd4133b18 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f438 <col:9> col:9 implicit Function 0x7fdcd4133f30 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f480 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4134760 'frexp'
|   |-UsingDecl 0x7fdcd597f4d0 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7fdcd597f520 <col:9> col:9 implicit Function 0x7fdcd6812b88 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7fdcd597f570 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7fdcd597f5c0 <col:9> col:9 implicit Function 0x7fdcd6812600 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7fdcd597f608 <col:9> col:9 implicit Function 0x7fdcd4134e78 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f650 <col:9> col:9 implicit Function 0x7fdcd4135260 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f698 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4135a98 'ldexp'
|   |-UsingDecl 0x7fdcd597f6e8 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7fdcd597f738 <col:9> col:9 implicit Function 0x7fdcd6811338 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7fdcd597f788 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7fdcd597f7d8 <col:9> col:9 implicit Function 0x7fdcd680e300 'log' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597f820 <col:9> col:9 implicit Function 0x7fdcd4136138 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f868 <col:9> col:9 implicit Function 0x7fdcd4136428 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597f8b0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd4136ae0 'log'
|   |-UsingDecl 0x7fdcd597f900 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7fdcd597f950 <col:9> col:9 implicit Function 0x7fdcd680e160 'logf' 'float (float)'
|   |-UsingDecl 0x7fdcd597f9a0 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7fdcd597f9f0 <col:9> col:9 implicit Function 0x7fdcd680e830 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd597fa38 <col:9> col:9 implicit Function 0x7fdcd4137100 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597fa80 <col:9> col:9 implicit Function 0x7fdcd41373f0 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597fac8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58e1ed8 'log10'
|   |-UsingDecl 0x7fdcd597fb18 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7fdcd597fb68 <col:9> col:9 implicit Function 0x7fdcd680e690 'log10f' 'float (float)'
|   |-UsingDecl 0x7fdcd597fbb8 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7fdcd597fc08 <col:9> col:9 implicit Function 0x7fdcd6810dd8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7fdcd597fc50 <col:9> col:9 implicit Function 0x7fdcd58e2580 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7fdcd597fc98 <col:9> col:9 implicit Function 0x7fdcd58e29a0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7fdcd597fce8 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7fdcd597fd38 <col:9> col:9 implicit Function 0x7fdcd6810b18 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7fdcd597fd88 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7fdcd597fdd8 <col:9> col:9 implicit Function 0x7fdcd6816a50 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd597fe20 <col:9> col:9 implicit Function 0x7fdcd58e2dc0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd597fe68 <col:9> col:9 implicit Function 0x7fdcd58e3180 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd597feb0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58e3c20 'pow'
|   |-UsingDecl 0x7fdcd597ff00 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7fdcd597ff50 <col:9> col:9 implicit Function 0x7fdcd6816828 'powf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd597ffa0 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7fdcd597fff0 <col:9> col:9 implicit Function 0x7fdcd6809cb0 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5980038 <col:9> col:9 implicit Function 0x7fdcd58e4558 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980080 <col:9> col:9 implicit Function 0x7fdcd58e4848 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59800c8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58e4f00 'sin'
|   |-UsingDecl 0x7fdcd5980118 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7fdcd5980168 <col:9> col:9 implicit Function 0x7fdcd6809b10 'sinf' 'float (float)'
|   |-UsingDecl 0x7fdcd59801b8 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7fdcd5980208 <col:9> col:9 implicit Function 0x7fdcd680ca30 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5980250 <col:9> col:9 implicit Function 0x7fdcd58e5520 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980298 <col:9> col:9 implicit Function 0x7fdcd58e5810 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59802e0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58f6ed8 'sinh'
|   |-UsingDecl 0x7fdcd5980330 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7fdcd5980380 <col:9> col:9 implicit Function 0x7fdcd680c890 'sinhf' 'float (float)'
|   |-UsingDecl 0x7fdcd59803d0 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7fdcd5980420 <col:9> col:9 implicit Function 0x7fdcd6816fc0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5980468 <col:9> col:9 implicit Function 0x7fdcd58f7500 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59804b0 <col:9> col:9 implicit Function 0x7fdcd58f77f0 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59804f8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58f7ea0 'sqrt'
|   |-UsingDecl 0x7fdcd5980548 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7fdcd5980598 <col:9> col:9 implicit Function 0x7fdcd6816e20 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7fdcd59805e8 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7fdcd5980638 <col:9> col:9 implicit Function 0x7fdcd680a190 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5980680 <col:9> col:9 implicit Function 0x7fdcd58f84c0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59806c8 <col:9> col:9 implicit Function 0x7fdcd58f87b0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980710 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58f8e98 'tan'
|   |-UsingDecl 0x7fdcd5980760 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7fdcd59807b0 <col:9> col:9 implicit Function 0x7fdcd6809ff0 'tanf' 'float (float)'
|   |-UsingDecl 0x7fdcd5980800 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7fdcd5980850 <col:9> col:9 implicit Function 0x7fdcd680cf10 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5980898 <col:9> col:9 implicit Function 0x7fdcd58f94c0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59808e0 <col:9> col:9 implicit Function 0x7fdcd58f97b0 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980928 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58f9e60 'tanh'
|   |-UsingDecl 0x7fdcd5980978 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7fdcd59809c8 <col:9> col:9 implicit Function 0x7fdcd680cd70 'tanhf' 'float (float)'
|   |-UsingDecl 0x7fdcd5980a18 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7fdcd5980a68 <col:9> col:9 implicit Function 0x7fdcd680ae90 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5980ab0 <col:9> col:9 implicit Function 0x7fdcd58fa480 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980af8 <col:9> col:9 implicit Function 0x7fdcd58fa770 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980b40 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58fae98 'acosh'
|   |-UsingDecl 0x7fdcd5980b90 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7fdcd5980be0 <col:9> col:9 implicit Function 0x7fdcd680a4d0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7fdcd5980c30 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7fdcd5980c80 <col:9> col:9 implicit Function 0x7fdcd680b370 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5980cc8 <col:9> col:9 implicit Function 0x7fdcd58fb4c0 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980d10 <col:9> col:9 implicit Function 0x7fdcd58fb7b0 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980d58 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58fbe60 'asinh'
|   |-UsingDecl 0x7fdcd5980da8 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7fdcd5980df8 <col:9> col:9 implicit Function 0x7fdcd680b1d0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7fdcd5980e48 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7fdcd5980e98 <col:9> col:9 implicit Function 0x7fdcd680b850 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5980ee0 <col:9> col:9 implicit Function 0x7fdcd58fc480 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980f28 <col:9> col:9 implicit Function 0x7fdcd58fc770 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5980f70 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58fce98 'atanh'
|   |-UsingDecl 0x7fdcd5980fc0 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7fdcd5981010 <col:9> col:9 implicit Function 0x7fdcd680b6b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7fdcd5981060 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7fdcd59810b0 <col:9> col:9 implicit Function 0x7fdcd6815d70 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd59810f8 <col:9> col:9 implicit Function 0x7fdcd58fd4c0 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981140 <col:9> col:9 implicit Function 0x7fdcd58fd7b0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981188 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58fde60 'cbrt'
|   |-UsingDecl 0x7fdcd59811d8 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7fdcd5981228 <col:9> col:9 implicit Function 0x7fdcd6815bd0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7fdcd5981278 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7fdcd59812c8 <col:9> col:9 implicit Function 0x7fdcd681d268 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd5981310 <col:9> col:9 implicit Function 0x7fdcd58fe500 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981358 <col:9> col:9 implicit Function 0x7fdcd58fe8c0 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59813a0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd58ff380 'copysign'
|   |-UsingDecl 0x7fdcd5981400 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7fdcd5981450 <col:9> col:9 implicit Function 0x7fdcd681d040 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd59814a0 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7fdcd59814f0 <col:9> col:9 implicit Function 0x7fdcd68174a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5981538 <col:9> col:9 implicit Function 0x7fdcd58ffcb8 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981580 <col:9> col:9 implicit Function 0x7fdcd58fffa8 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59815c8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5900660 'erf'
|   |-UsingDecl 0x7fdcd5981618 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7fdcd5981668 <col:9> col:9 implicit Function 0x7fdcd6817300 'erff' 'float (float)'
|   |-UsingDecl 0x7fdcd59816b8 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7fdcd5981708 <col:9> col:9 implicit Function 0x7fdcd68179d0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5981750 <col:9> col:9 implicit Function 0x7fdcd5900c80 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981798 <col:9> col:9 implicit Function 0x7fdcd5900f78 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59817e0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5901630 'erfc'
|   |-UsingDecl 0x7fdcd5981830 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7fdcd5981880 <col:9> col:9 implicit Function 0x7fdcd6817830 'erfcf' 'float (float)'
|   |-UsingDecl 0x7fdcd59818d0 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7fdcd5981920 <col:9> col:9 implicit Function 0x7fdcd680d940 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5981968 <col:9> col:9 implicit Function 0x7fdcd5901c50 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59819b0 <col:9> col:9 implicit Function 0x7fdcd5901f40 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59819f8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd59025f0 'exp2'
|   |-UsingDecl 0x7fdcd5981a48 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7fdcd5981a98 <col:9> col:9 implicit Function 0x7fdcd680d7a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7fdcd5981ae8 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7fdcd5981b38 <col:9> col:9 implicit Function 0x7fdcd680de20 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5981b80 <col:9> col:9 implicit Function 0x7fdcd5902c10 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981bc8 <col:9> col:9 implicit Function 0x7fdcd595a500 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981c10 <col:9> col:9 implicit FunctionTemplate 0x7fdcd595abb0 'expm1'
|   |-UsingDecl 0x7fdcd5981c60 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7fdcd5981cb0 <col:9> col:9 implicit Function 0x7fdcd680dc80 'expm1f' 'float (float)'
|   |-UsingDecl 0x7fdcd5981d00 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7fdcd5981d50 <col:9> col:9 implicit Function 0x7fdcd680fd90 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd5981d98 <col:9> col:9 implicit Function 0x7fdcd595b250 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981de0 <col:9> col:9 implicit Function 0x7fdcd595b610 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5981e28 <col:9> col:9 implicit FunctionTemplate 0x7fdcd595c0b0 'fdim'
|   |-UsingDecl 0x7fdcd5981e78 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7fdcd5981ec8 <col:9> col:9 implicit Function 0x7fdcd680fb68 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd5981f18 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7fdcd5981f68 <col:9> col:9 implicit Function 0x7fdcd6822fa8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7fdcd5981fb8 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7fdcd5982008 <col:9> col:9 implicit Function 0x7fdcd68232f8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7fdcd5982050 <col:9> col:9 implicit Function 0x7fdcd595eb08 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982098 <col:9> col:9 implicit Function 0x7fdcd595efc0 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59820e0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd595fed0 'fma'
|   |-UsingDecl 0x7fdcd5982130 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7fdcd5982180 <col:9> col:9 implicit Function 0x7fdcd6810408 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd59821c8 <col:9> col:9 implicit Function 0x7fdcd5960c20 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982210 <col:9> col:9 implicit Function 0x7fdcd5960fe0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982258 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5961a80 'fmax'
|   |-UsingDecl 0x7fdcd59822a8 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7fdcd59822f8 <col:9> col:9 implicit Function 0x7fdcd68101e0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd5982348 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7fdcd5982398 <col:9> col:9 implicit Function 0x7fdcd6822a88 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd59823e0 <col:9> col:9 implicit Function 0x7fdcd5962440 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982428 <col:9> col:9 implicit Function 0x7fdcd5962800 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982470 <col:9> col:9 implicit FunctionTemplate 0x7fdcd59632a0 'fmin'
|   |-UsingDecl 0x7fdcd59824c0 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7fdcd5982510 <col:9> col:9 implicit Function 0x7fdcd6822860 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd5982560 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7fdcd59825b0 <col:9> col:9 implicit Function 0x7fdcd6816358 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd59825f8 <col:9> col:9 implicit Function 0x7fdcd5963c58 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982640 <col:9> col:9 implicit Function 0x7fdcd5964018 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982688 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5964b00 'hypot'
|   |-UsingDecl 0x7fdcd59826d8 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7fdcd5982728 <col:9> col:9 implicit Function 0x7fdcd6816130 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd5982778 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7fdcd59827c8 <col:9> col:9 implicit Function 0x7fdcd6813478 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7fdcd5982810 <col:9> col:9 implicit Function 0x7fdcd5965438 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982858 <col:9> col:9 implicit Function 0x7fdcd5965728 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59828a0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5965de0 'ilogb'
|   |-UsingDecl 0x7fdcd59828f0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7fdcd5982940 <col:9> col:9 implicit Function 0x7fdcd68132a0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7fdcd5982990 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7fdcd59829e0 <col:9> col:9 implicit Function 0x7fdcd6817ea0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5982a28 <col:9> col:9 implicit Function 0x7fdcd59666b8 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982a70 <col:9> col:9 implicit Function 0x7fdcd59669a8 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982ab8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5967060 'lgamma'
|   |-UsingDecl 0x7fdcd5982b08 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7fdcd5982b58 <col:9> col:9 implicit Function 0x7fdcd6817d10 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7fdcd5982ba8 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7fdcd5982bf8 <col:9> col:9 implicit Function 0x7fdcd681aca8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7fdcd5982c40 <col:9> col:9 implicit Function 0x7fdcd5967680 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982c88 <col:9> col:9 implicit Function 0x7fdcd59679a0 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982cd0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5968170 'llrint'
|   |-UsingDecl 0x7fdcd5982d20 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7fdcd5982d70 <col:9> col:9 implicit Function 0x7fdcd681aa88 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7fdcd5982dc0 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7fdcd5982e10 <col:9> col:9 implicit Function 0x7fdcd681b248 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7fdcd5982e58 <col:9> col:9 implicit Function 0x7fdcd5968a48 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982ea0 <col:9> col:9 implicit Function 0x7fdcd5968d38 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5982ee8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd59693f0 'llround'
|   |-UsingDecl 0x7fdcd5982f38 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7fdcd5982f88 <col:9> col:9 implicit Function 0x7fdcd681b0a8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7fdcd5982fd8 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7fdcd5983028 <col:9> col:9 implicit Function 0x7fdcd680f1f0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5983070 <col:9> col:9 implicit Function 0x7fdcd5969a10 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59830b8 <col:9> col:9 implicit Function 0x7fdcd5969d00 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983100 <col:9> col:9 implicit FunctionTemplate 0x7fdcd596a3b0 'log1p'
|   |-UsingDecl 0x7fdcd5983150 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7fdcd59831a0 <col:9> col:9 implicit Function 0x7fdcd680f050 'log1pf' 'float (float)'
|   |-UsingDecl 0x7fdcd59831f0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7fdcd5983240 <col:9> col:9 implicit Function 0x7fdcd680ed10 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5983288 <col:9> col:9 implicit Function 0x7fdcd596a9d0 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59832d0 <col:9> col:9 implicit Function 0x7fdcd596acc0 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983318 <col:9> col:9 implicit FunctionTemplate 0x7fdcd596b370 'log2'
|   |-UsingDecl 0x7fdcd5983368 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7fdcd59833b8 <col:9> col:9 implicit Function 0x7fdcd680eb70 'log2f' 'float (float)'
|   |-UsingDecl 0x7fdcd5983408 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7fdcd5983458 <col:9> col:9 implicit Function 0x7fdcd68106f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd59834a0 <col:9> col:9 implicit Function 0x7fdcd596b990 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59834e8 <col:9> col:9 implicit Function 0x7fdcd596bc80 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983530 <col:9> col:9 implicit FunctionTemplate 0x7fdcd596c330 'logb'
|   |-UsingDecl 0x7fdcd5983580 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7fdcd59835d0 <col:9> col:9 implicit Function 0x7fdcd680f530 'logbf' 'float (float)'
|   |-UsingDecl 0x7fdcd5983620 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7fdcd5983670 <col:9> col:9 implicit Function 0x7fdcd6819c88 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7fdcd59836b8 <col:9> col:9 implicit Function 0x7fdcd596c950 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983700 <col:9> col:9 implicit Function 0x7fdcd596cc70 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983748 <col:9> col:9 implicit FunctionTemplate 0x7fdcd596d440 'lrint'
|   |-UsingDecl 0x7fdcd5983798 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7fdcd59837e8 <col:9> col:9 implicit Function 0x7fdcd6819a68 'lrintf' 'long (float)'
|   |-UsingDecl 0x7fdcd5983838 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7fdcd5983888 <col:9> col:9 implicit Function 0x7fdcd681a708 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7fdcd59838d0 <col:9> col:9 implicit Function 0x7fdcd596dcf8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983918 <col:9> col:9 implicit Function 0x7fdcd596dfe8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983960 <col:9> col:9 implicit FunctionTemplate 0x7fdcd596e6a0 'lround'
|   |-UsingDecl 0x7fdcd59839b0 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7fdcd5983a00 <col:9> col:9 implicit Function 0x7fdcd681a568 'lroundf' 'long (float)'
|   |-UsingDecl 0x7fdcd5983a50 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7fdcd5983aa0 <col:9> col:9 implicit Function 0x7fdcd681d8e8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7fdcd5983af0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7fdcd5983b40 <col:9> col:9 implicit Function 0x7fdcd681d6c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7fdcd5983b90 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7fdcd5983be0 <col:9> col:9 implicit Function 0x7fdcd6819208 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5983c28 <col:9> col:9 implicit Function 0x7fdcd596ecc0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983c70 <col:9> col:9 implicit Function 0x7fdcd596efb0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983cb8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd596f660 'nearbyint'
|   |-UsingDecl 0x7fdcd5983d08 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7fdcd5983d58 <col:9> col:9 implicit Function 0x7fdcd6819068 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7fdcd5983da8 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7fdcd5983df8 <col:9> col:9 implicit Function 0x7fdcd681df90 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd5983e40 <col:9> col:9 implicit Function 0x7fdcd596fd00 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983e88 <col:9> col:9 implicit Function 0x7fdcd59700c0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5983ed0 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5970b60 'nextafter'
|   |-UsingDecl 0x7fdcd5983f20 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7fdcd5983f70 <col:9> col:9 implicit Function 0x7fdcd681dd68 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd5983fc0 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7fdcd5984010 <col:9> col:9 implicit Function 0x7fdcd681e428 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7fdcd5984058 <col:9> col:9 implicit Function 0x7fdcd5971518 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59840a0 <col:9> col:9 implicit Function 0x7fdcd5971900 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59840e8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd59720d0 'nexttoward'
|   |-UsingDecl 0x7fdcd5984138 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7fdcd5984188 <col:9> col:9 implicit Function 0x7fdcd680f6d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7fdcd59841d8 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7fdcd5984228 <col:9> col:9 implicit Function 0x7fdcd681c400 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7fdcd5984270 <col:9> col:9 implicit Function 0x7fdcd59727e8 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59842b8 <col:9> col:9 implicit Function 0x7fdcd5972ba8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984300 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5973650 'remainder'
|   |-UsingDecl 0x7fdcd5984350 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7fdcd59843a0 <col:9> col:9 implicit Function 0x7fdcd681c1d8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7fdcd59843f0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7fdcd5984440 <col:9> col:9 implicit Function 0x7fdcd681cbc8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7fdcd5984488 <col:9> col:9 implicit Function 0x7fdcd59740d0 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7fdcd59844d0 <col:9> col:9 implicit Function 0x7fdcd59745e0 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984518 <col:9> col:9 implicit FunctionTemplate 0x7fdcd59751e0 'remquo'
|   |-UsingDecl 0x7fdcd5984568 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7fdcd59845b8 <col:9> col:9 implicit Function 0x7fdcd681c928 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7fdcd5984608 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7fdcd5984658 <col:9> col:9 implicit Function 0x7fdcd68196f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd59846a0 <col:9> col:9 implicit Function 0x7fdcd5975b48 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd59846e8 <col:9> col:9 implicit Function 0x7fdcd5975e38 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984730 <col:9> col:9 implicit FunctionTemplate 0x7fdcd59764f0 'rint'
|   |-UsingDecl 0x7fdcd5984780 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7fdcd59847d0 <col:9> col:9 implicit Function 0x7fdcd6819548 'rintf' 'float (float)'
|   |-UsingDecl 0x7fdcd5984820 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7fdcd5984870 <col:9> col:9 implicit Function 0x7fdcd681a228 'round' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd59848b8 <col:9> col:9 implicit Function 0x7fdcd5976b10 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984900 <col:9> col:9 implicit Function 0x7fdcd5976e00 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984948 <col:9> col:9 implicit FunctionTemplate 0x7fdcd59774b0 'round'
|   |-UsingDecl 0x7fdcd5984998 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7fdcd59849e8 <col:9> col:9 implicit Function 0x7fdcd681a088 'roundf' 'float (float)'
|   |-UsingDecl 0x7fdcd5984a38 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7fdcd5984a88 <col:9> col:9 implicit Function 0x7fdcd6815258 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7fdcd5984ad0 <col:9> col:9 implicit Function 0x7fdcd5977b50 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984b18 <col:9> col:9 implicit Function 0x7fdcd5977f40 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984b60 <col:9> col:9 implicit FunctionTemplate 0x7fdcd5978770 'scalbln'
|   |-UsingDecl 0x7fdcd5984bb0 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7fdcd5984c00 <col:9> col:9 implicit Function 0x7fdcd6814fa8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7fdcd5984c50 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7fdcd5984ca0 <col:9> col:9 implicit Function 0x7fdcd6814b10 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7fdcd5984ce8 <col:9> col:9 implicit Function 0x7fdcd5978e88 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984d30 <col:9> col:9 implicit Function 0x7fdcd5979248 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984d78 <col:9> col:9 implicit FunctionTemplate 0x7fdcd59799e0 'scalbn'
|   |-UsingDecl 0x7fdcd5984dc8 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7fdcd5984e18 <col:9> col:9 implicit Function 0x7fdcd68148e8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7fdcd5984e68 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7fdcd5984eb8 <col:9> col:9 implicit Function 0x7fdcd6818360 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5984f00 <col:9> col:9 implicit Function 0x7fdcd597a050 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984f48 <col:9> col:9 implicit Function 0x7fdcd597a340 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd5984f90 <col:9> col:9 implicit FunctionTemplate 0x7fdcd597a9f0 'tgamma'
|   |-UsingDecl 0x7fdcd5984fe0 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7fdcd5985030 <col:9> col:9 implicit Function 0x7fdcd68181c0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7fdcd5985080 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7fdcd59850d0 <col:9> col:9 implicit Function 0x7fdcd681b7a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7fdcd5985118 <col:9> col:9 implicit Function 0x7fdcd597b010 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fdcd5985160 <col:9> col:9 implicit Function 0x7fdcd597b300 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fdcd59851a8 <col:9> col:9 implicit FunctionTemplate 0x7fdcd597b9b0 'trunc'
|   |-UsingDecl 0x7fdcd59851f8 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7fdcd5985248 <col:9> col:9 implicit Function 0x7fdcd681b600 'truncf' 'float (float)'
|   |-UsingDecl 0x7fdcd5985298 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7fdcd59852e8 <col:9> col:9 implicit Function 0x7fdcd6807a78 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5985338 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7fdcd5985388 <col:9> col:9 implicit Function 0x7fdcd6807fa0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987400 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7fdcd5987450 <col:9> col:9 implicit Function 0x7fdcd6808480 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd59874a0 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7fdcd59874f0 <col:9> col:9 implicit Function 0x7fdcd6808c48 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd5987540 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7fdcd5987590 <col:9> col:9 implicit Function 0x7fdcd68189e8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7fdcd59875e0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7fdcd5987630 <col:9> col:9 implicit Function 0x7fdcd6809970 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987680 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7fdcd59876d0 <col:9> col:9 implicit Function 0x7fdcd680c6f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987720 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7fdcd5987770 <col:9> col:9 implicit Function 0x7fdcd680d600 'expl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd59877c0 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7fdcd5987810 <col:9> col:9 implicit Function 0x7fdcd6815a30 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987860 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7fdcd59878b0 <col:9> col:9 implicit Function 0x7fdcd6818ec8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987900 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7fdcd5987950 <col:9> col:9 implicit Function 0x7fdcd681bfb0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd59879a0 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7fdcd59879f0 <col:9> col:9 implicit Function 0x7fdcd68130c8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7fdcd5987a40 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7fdcd5987a90 <col:9> col:9 implicit Function 0x7fdcd68128b8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7fdcd5987ae0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7fdcd5987b30 <col:9> col:9 implicit Function 0x7fdcd680e4a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987b80 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7fdcd5987bd0 <col:9> col:9 implicit Function 0x7fdcd680e9d0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987c20 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7fdcd5987c70 <col:9> col:9 implicit Function 0x7fdcd6811098 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7fdcd5987cc0 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7fdcd5987d10 <col:9> col:9 implicit Function 0x7fdcd6816c78 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd5987d60 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7fdcd5987db0 <col:9> col:9 implicit Function 0x7fdcd6809e50 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987e00 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7fdcd5987e50 <col:9> col:9 implicit Function 0x7fdcd680cbd0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987ea0 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7fdcd5987ef0 <col:9> col:9 implicit Function 0x7fdcd6817160 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987f40 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7fdcd5987f90 <col:9> col:9 implicit Function 0x7fdcd680a330 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5987fe0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7fdcd5988030 <col:9> col:9 implicit Function 0x7fdcd680d0b0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988080 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7fdcd59880d0 <col:9> col:9 implicit Function 0x7fdcd680b030 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988120 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7fdcd5988170 <col:9> col:9 implicit Function 0x7fdcd680b510 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd59881c0 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7fdcd5988210 <col:9> col:9 implicit Function 0x7fdcd680b9f0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988260 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7fdcd59882b0 <col:9> col:9 implicit Function 0x7fdcd6815f10 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988300 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7fdcd5988350 <col:9> col:9 implicit Function 0x7fdcd681d490 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd59883a0 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7fdcd59883f0 <col:9> col:9 implicit Function 0x7fdcd6817690 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988440 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7fdcd5988490 <col:9> col:9 implicit Function 0x7fdcd6817b70 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd59884e0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7fdcd5988530 <col:9> col:9 implicit Function 0x7fdcd680dae0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988580 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7fdcd59885d0 <col:9> col:9 implicit Function 0x7fdcd680dfc0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988620 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7fdcd5988670 <col:9> col:9 implicit Function 0x7fdcd680ffb8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd59886c0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7fdcd5988710 <col:9> col:9 implicit Function 0x7fdcd6813688 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7fdcd5988760 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7fdcd59887b0 <col:9> col:9 implicit Function 0x7fdcd6822638 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd5988800 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7fdcd5988850 <col:9> col:9 implicit Function 0x7fdcd6822cb0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd59888a0 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7fdcd59888f0 <col:9> col:9 implicit Function 0x7fdcd6816600 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd5988940 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7fdcd5988990 <col:9> col:9 implicit Function 0x7fdcd6814690 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7fdcd59889e0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7fdcd5988a30 <col:9> col:9 implicit Function 0x7fdcd6818030 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988a80 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7fdcd5988ad0 <col:9> col:9 implicit Function 0x7fdcd681aec8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7fdcd5988b20 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7fdcd5988b70 <col:9> col:9 implicit Function 0x7fdcd681b3e8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7fdcd5988bc0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7fdcd5988c10 <col:9> col:9 implicit Function 0x7fdcd680f390 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988c60 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7fdcd5988cb0 <col:9> col:9 implicit Function 0x7fdcd680eeb0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988d00 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7fdcd5988d50 <col:9> col:9 implicit Function 0x7fdcd6810890 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5988da0 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7fdcd5988df0 <col:9> col:9 implicit Function 0x7fdcd6819ea8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7fdcd5988e40 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7fdcd5988e90 <col:9> col:9 implicit Function 0x7fdcd681a8a8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7fdcd5988ee0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7fdcd5988f30 <col:9> col:9 implicit Function 0x7fdcd681db08 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7fdcd5988f80 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7fdcd5988fd0 <col:9> col:9 implicit Function 0x7fdcd68193a8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5989020 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7fdcd5989070 <col:9> col:9 implicit Function 0x7fdcd681e1b8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd59890c0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7fdcd5989110 <col:9> col:9 implicit Function 0x7fdcd680f940 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd5989160 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7fdcd59891b0 <col:9> col:9 implicit Function 0x7fdcd681c638 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fdcd5989200 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7fdcd5989250 <col:9> col:9 implicit Function 0x7fdcd681ce68 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7fdcd59892a0 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7fdcd59892f0 <col:9> col:9 implicit Function 0x7fdcd6819890 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd5989340 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7fdcd5989390 <col:9> col:9 implicit Function 0x7fdcd681a3c8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7fdcd59893e0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7fdcd5989430 <col:9> col:9 implicit Function 0x7fdcd6815508 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7fdcd5989480 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7fdcd59894d0 <col:9> col:9 implicit Function 0x7fdcd6814d38 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7fdcd5989520 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7fdcd5989570 <col:9> col:9 implicit Function 0x7fdcd6818500 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7fdcd59895c0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7fdcd5989610 <col:9> col:9 implicit Function 0x7fdcd681b940 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7fdcd5989ae0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fdcd5989658 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fdcd5989a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fdcd5989970 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fdcd5989d68 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7fdcd5989d50 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7fdcd5989d20 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fdcd5989cd0 <col:12> '<builtin fn type>' Function 0x7fdcd5989be0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fdcd5989cf8 <col:28> '_A1' lvalue ParmVar 0x7fdcd5989970 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fdcd5989b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fdcd5989b80 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fdcd598a300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fdcd5989d88 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fdcd598a268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fdcd598a150 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fdcd598a480 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7fdcd598a468 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7fdcd598a438 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fdcd598a3b0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7fdcd597d448 0x7fdcd597d400
|   |   |     `-DeclRefExpr 0x7fdcd598a410 <col:18> '_A1' lvalue ParmVar 0x7fdcd598a150 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fdcd598a358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fdcd598a3a0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fdcd598a920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fdcd598a4a0 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fdcd598a888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fdcd598a7b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fdcd598aba8 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7fdcd598ab90 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7fdcd598ab60 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fdcd598ab10 <col:12> '<builtin fn type>' Function 0x7fdcd598aa20 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fdcd598ab38 <col:28> '_A1' lvalue ParmVar 0x7fdcd598a7b0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fdcd598a978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fdcd598a9c0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fdcd598b060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fdcd598abc8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fdcd598afc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fdcd598aef0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fdcd598b1e0 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7fdcd598b1c8 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7fdcd598b198 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fdcd598b110 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7fdcd597c360 0x7fdcd597c318
|   |   |     `-DeclRefExpr 0x7fdcd598b170 <col:18> '_A1' lvalue ParmVar 0x7fdcd598aef0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fdcd598b0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fdcd598b100 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fdcd59936a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7fdcd598b200 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fdcd5993608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fdcd5993530 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fdcd5993928 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7fdcd5993910 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7fdcd59938e0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fdcd5993890 <col:12> '<builtin fn type>' Function 0x7fdcd59937a0 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fdcd59938b8 <col:31> '_A1' lvalue ParmVar 0x7fdcd5993530 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fdcd59936f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fdcd5993740 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7fdcd5993de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7fdcd5993948 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7fdcd5993d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7fdcd5993c70 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7fdcd5993f60 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7fdcd5993f48 <line:606:5, col:29>
|       |   `-CallExpr 0x7fdcd5993f18 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7fdcd5993e90 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7fdcd597c278 0x7fdcd597c230
|       |     `-DeclRefExpr 0x7fdcd5993ef0 <col:21> '_A1' lvalue ParmVar 0x7fdcd5993c70 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7fdcd5993e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|       `-VisibilityAttr 0x7fdcd5993e80 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7fdcd5989b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7fdcd5989be0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd5989c78 <col:12> Implicit
|   `-ConstAttr 0x7fdcd5989cc0 <col:12> Implicit
|-LinkageSpecDecl 0x7fdcd598a9d0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7fdcd598aa20 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd598aab8 <col:12> Implicit
|   `-ConstAttr 0x7fdcd598ab00 <col:12> Implicit
|-LinkageSpecDecl 0x7fdcd5993750 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7fdcd59937a0 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fdcd5993838 <col:12> Implicit
|   `-ConstAttr 0x7fdcd5993880 <col:12> Implicit
|-CXXRecordDecl 0x7fdcd5993f80 <object_model/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7fdcd59940a8 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7fdcd5994158 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7fdcd5995768 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fdcd5995848 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7fdcd5995848
| |-CXXConstructorDecl 0x7fdcd5995b08 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7fdcd5995b08
| | `-ParmVarDecl 0x7fdcd5995c30 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7fdcd5995cc8 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7fdcd5995cc8
|   `-ParmVarDecl 0x7fdcd5995df0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7fdcd59941c0 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7fdcd59942e8 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7fdcd5994398 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7fdcd5995948 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fdcd5995a28 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7fdcd5995a28
| |-CXXConstructorDecl 0x7fdcd5995e58 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7fdcd5995e58
| | `-ParmVarDecl 0x7fdcd5995f80 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7fdcd5996018 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7fdcd5996018
|   `-ParmVarDecl 0x7fdcd5996140 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7fdcd5994400 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7fdcd59945a8 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7fdcd5994658 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7fdcd5995668 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fdcd59961a8 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7fdcd59961a8
| | `-ParmVarDecl 0x7fdcd59962d0 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7fdcd5996368 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7fdcd5996368
|   `-ParmVarDecl 0x7fdcd5996490 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7fdcd59947c8 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7fdcd59946f8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7fdcd5994998 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7fdcd5994980 <line:17:5, col:20>
|     `-BinaryOperator 0x7fdcd5994958 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fdcd5994928 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fdcd5994890 <col:12, col:14> 'const double' lvalue .x 0x7fdcd5994158
|       |   `-DeclRefExpr 0x7fdcd5994868 <col:12> 'const struct P1' lvalue ParmVar 0x7fdcd59946f8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7fdcd5994940 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fdcd59948f0 <col:18, col:20> 'const double' lvalue .x 0x7fdcd5994158
|           `-DeclRefExpr 0x7fdcd59948c8 <col:18> 'const struct P1' lvalue ParmVar 0x7fdcd59946f8 'p' 'const struct P1 &'
|-FunctionDecl 0x7fdcd5994ac8 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7fdcd59949f8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7fdcd5994c98 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7fdcd5994c80 <line:22:5, col:20>
|     `-BinaryOperator 0x7fdcd5994c58 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fdcd5994c28 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fdcd5994b90 <col:12, col:14> 'const double' lvalue .y 0x7fdcd5994398
|       |   `-DeclRefExpr 0x7fdcd5994b68 <col:12> 'const struct P2' lvalue ParmVar 0x7fdcd59949f8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7fdcd5994c40 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fdcd5994bf0 <col:18, col:20> 'const double' lvalue .y 0x7fdcd5994398
|           `-DeclRefExpr 0x7fdcd5994bc8 <col:18> 'const struct P2' lvalue ParmVar 0x7fdcd59949f8 'p' 'const struct P2 &'
|-FunctionDecl 0x7fdcd5994dc8 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7fdcd5994cf8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7fdcd5995488 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7fdcd5995470 <line:27:5, col:41>
|     `-CallExpr 0x7fdcd5995440 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7fdcd5995428 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7fdcd59953e8 <col:12, col:17> 'double (double)' lvalue Function 0x7fdcd6816fc0 'sqrt' 'double (double)' (UsingShadow 0x7fdcd5980420 'sqrt')
|       `-BinaryOperator 0x7fdcd5995190 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7fdcd5995000 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7fdcd5994fe8 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7fdcd5994f90 <col:22> 'double (const struct P1 &)' lvalue Function 0x7fdcd59947c8 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7fdcd5995030 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7fdcd5994f68 <col:28> 'const struct P3' lvalue ParmVar 0x7fdcd5994cf8 'p' 'const struct P3 &'
|         `-CallExpr 0x7fdcd5995140 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7fdcd5995128 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fdcd59950d0 <col:33> 'double (const struct P2 &)' lvalue Function 0x7fdcd5994ac8 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7fdcd5995170 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7fdcd59950a8 <col:39> 'const struct P3' lvalue ParmVar 0x7fdcd5994cf8 'p' 'const struct P3 &'
`-FunctionDecl 0x7fdcd59954d0 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7fdcd5996b50 <line:31:1, line:37:1>
    |-DeclStmt 0x7fdcd5996768 <line:32:5, col:12>
    | `-VarDecl 0x7fdcd59955a8 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7fdcd59964f8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7fdcd59968a8 <line:33:5, col:17>
    | `-VarDecl 0x7fdcd59967b8 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7fdcd5996888 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7fdcd5996868 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7fdcd5996818 <col:15> 'struct P3' lvalue Var 0x7fdcd59955a8 'p3' 'struct P3'
    |-DeclStmt 0x7fdcd5996b00 <line:35:5, col:23>
    | `-VarDecl 0x7fdcd59968d0 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7fdcd5996a20 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7fdcd5996a08 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fdcd59969b0 <col:14> 'double (const struct P3 &)' lvalue Function 0x7fdcd5994dc8 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7fdcd5996a50 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7fdcd5996988 <col:20> 'struct P3' lvalue Var 0x7fdcd59955a8 'p3' 'struct P3'
    `-ReturnStmt 0x7fdcd5996b38 <line:36:5, col:12>
      `-IntegerLiteral 0x7fdcd5996b18 <col:12> 'int' 0
