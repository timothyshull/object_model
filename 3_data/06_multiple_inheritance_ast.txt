TranslationUnitDecl 0x7fb7c18326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fb7c1832c60 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fb7c1832940 '__int128'
|-TypedefDecl 0x7fb7c1832cd0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fb7c1832960 'unsigned __int128'
|-TypedefDecl 0x7fb7c1833018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fb7c1832dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fb7c1832d28 '__NSConstantString_tag'
|-TypedefDecl 0x7fb7c18330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fb7c1833070 'char *'
|   `-BuiltinType 0x7fb7c1832760 'char'
|-TypedefDecl 0x7fb7c1865c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fb7c1833390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fb7c18331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fb7c1833108 '__va_list_tag'
|-NamespaceDecl 0x7fb7c1865c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7fb7c1865cc0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7fb7c1865dd8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7fb7c1865e40 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7fb7c18328c0 'float'
| |-TypedefDecl 0x7fb7c1865eb0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7fb7c18328e0 'double'
| |-FunctionDecl 0x7fb7c1865fd8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7fb7c1866198 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7fb7c18660c8 <col:26> col:31 'float'
| |-FunctionDecl 0x7fb7c1866318 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7fb7c1866250 <col:26> col:32 'double'
| |-FunctionDecl 0x7fb7c1866498 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7fb7c18663d0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7fb7c18665e0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c1866550 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fb7c1866680 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c1866770 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c18666e0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fb7c1866810 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c1866900 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c1866870 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fb7c18669a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c1866a90 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c1866a00 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fb7c1866b30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286bc30 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c1866b90 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fb7c286bcd0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286bdc0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c286bd30 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fb7c286be60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286bf50 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c286bec0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fb7c286bff0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286c0e0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c286c050 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fb7c286c180 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286c270 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c286c1e0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fb7c286c310 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286c400 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c286c370 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fb7c286c4a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286c590 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c286c500 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fb7c286c630 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286c720 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c286c690 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fb7c286c7c0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286c8b0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c286c820 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7fb7c286c950 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286ca40 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c286c9b0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7fb7c286cae0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286cc00 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c286cb40 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7fb7c286cca0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286cd90 prev 0x7fb7c18665e0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c286cd00 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fb7c286d538 <col:58, line:206:1>
| | | `-ReturnStmt 0x7fb7c286d520 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7fb7c286d508 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286d4e0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fb7c286cef8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fb7c286cec8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fb7c286ce78 <col:12> 'float' lvalue ParmVar 0x7fb7c286cd00 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7fb7c286cee0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb7c286cea0 <col:19> 'float' lvalue ParmVar 0x7fb7c286cd00 '__x' 'float'
| | |       `-BinaryOperator 0x7fb7c286d4b8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fb7c286d200 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7fb7c286d1e8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb7c286d140 <col:26> '<builtin fn type>' Function 0x7fb7c286cfe8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb7c286d230 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb7c286d168 <col:42> 'float' lvalue ParmVar 0x7fb7c286cd00 '__x' 'float'
| | |         `-CallExpr 0x7fb7c286d490 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7fb7c286d478 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fb7c286d3f0 <col:50> '<builtin fn type>' Function 0x7fb7c286d300 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb7c286ce30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286d600 prev 0x7fb7c1866770 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c286d570 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fb7c286e238 <col:59, line:209:1>
| | | `-ReturnStmt 0x7fb7c286e220 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7fb7c286e208 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286e1e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fb7c286d768 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fb7c286d738 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fb7c286d6e8 <col:12> 'double' lvalue ParmVar 0x7fb7c286d570 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7fb7c286d750 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb7c286d710 <col:19> 'double' lvalue ParmVar 0x7fb7c286d570 '__x' 'double'
| | |       `-BinaryOperator 0x7fb7c286e1b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7fb7c286da70 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7fb7c286da58 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb7c286d9b0 <col:26> '<builtin fn type>' Function 0x7fb7c286d858 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb7c286daa0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb7c286d9d8 <col:41> 'double' lvalue ParmVar 0x7fb7c286d570 '__x' 'double'
| | |         `-CallExpr 0x7fb7c286e190 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7fb7c286e178 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fb7c286e0f0 <col:49> '<builtin fn type>' Function 0x7fb7c286e000 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb7c286d6a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286e300 prev 0x7fb7c1866900 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c286e270 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fb7c286eaa8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7fb7c286ea90 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7fb7c286ea78 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286ea50 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fb7c286e468 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fb7c286e438 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fb7c286e3e8 <col:12> 'long double' lvalue ParmVar 0x7fb7c286e270 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7fb7c286e450 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb7c286e410 <col:19> 'long double' lvalue ParmVar 0x7fb7c286e270 '__x' 'long double'
| | |       `-BinaryOperator 0x7fb7c286ea28 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fb7c286e770 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7fb7c286e758 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb7c286e6b0 <col:26> '<builtin fn type>' Function 0x7fb7c286e558 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb7c286e7a0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb7c286e6d8 <col:42> 'long double' lvalue ParmVar 0x7fb7c286e270 '__x' 'long double'
| | |         `-CallExpr 0x7fb7c286ea00 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7fb7c286e9e8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fb7c286e960 <col:50> '<builtin fn type>' Function 0x7fb7c286e870 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb7c286e3a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286eb70 prev 0x7fb7c1866a90 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c286eae0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fb7c286edc8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7fb7c286edb0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7fb7c286ed98 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286ed70 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fb7c286ecc0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7fb7c286eca8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fb7c286ec58 <col:12> '<builtin fn type>' Function 0x7fb7c286cfe8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7fb7c286ecf0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb7c286ec80 <col:28> 'float' lvalue ParmVar 0x7fb7c286eae0 '__x' 'float'
| | |       `-CallExpr 0x7fb7c286ed48 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7fb7c286ed30 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fb7c286ed08 <col:36> '<builtin fn type>' Function 0x7fb7c286d300 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb7c286ec10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286ee90 prev 0x7fb7c286bc30 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c286ee00 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fb7c286f4e8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7fb7c286f4d0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7fb7c286f4b8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286f490 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7fb7c286efe0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7fb7c286efc8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fb7c286ef78 <col:12> '<builtin fn type>' Function 0x7fb7c286d858 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fb7c286f410 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb7c286efa0 <col:27> 'double' lvalue ParmVar 0x7fb7c286ee00 '__x' 'double'
| | |       `-CallExpr 0x7fb7c286f468 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7fb7c286f450 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fb7c286f428 <col:35> '<builtin fn type>' Function 0x7fb7c286e000 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb7c286ef30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286f5b0 prev 0x7fb7c286bdc0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c286f520 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fb7c286f808 <col:61, line:221:1>
| | | `-ReturnStmt 0x7fb7c286f7f0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7fb7c286f7d8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286f7b0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fb7c286f700 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7fb7c286f6e8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fb7c286f698 <col:12> '<builtin fn type>' Function 0x7fb7c286e558 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fb7c286f730 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb7c286f6c0 <col:28> 'long double' lvalue ParmVar 0x7fb7c286f520 '__x' 'long double'
| | |       `-CallExpr 0x7fb7c286f788 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7fb7c286f770 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fb7c286f748 <col:36> '<builtin fn type>' Function 0x7fb7c286e870 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb7c286f650 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286f8d0 prev 0x7fb7c286bf50 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c286f840 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fb7c286fa90 <col:55, line:224:1>
| | | `-ReturnStmt 0x7fb7c286fa78 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7fb7c286fa60 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286fa38 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fb7c286fa08 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fb7c286f9b8 <col:12> 'float' lvalue ParmVar 0x7fb7c286f840 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7fb7c286fa20 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fb7c286f9e0 <col:19> 'float' lvalue ParmVar 0x7fb7c286f840 '__x' 'float'
| | `-AlwaysInlineAttr 0x7fb7c286f970 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286fb58 prev 0x7fb7c286c0e0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c286fac8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fb7c286fd18 <col:56, line:227:1>
| | | `-ReturnStmt 0x7fb7c286fd00 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7fb7c286fce8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286fcc0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fb7c286fc90 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fb7c286fc40 <col:12> 'double' lvalue ParmVar 0x7fb7c286fac8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7fb7c286fca8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fb7c286fc68 <col:19> 'double' lvalue ParmVar 0x7fb7c286fac8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7fb7c286fbf8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c286fde0 prev 0x7fb7c286c270 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c286fd50 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fb7c286ffa0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7fb7c286ff88 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7fb7c286ff70 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c286ff48 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fb7c286ff18 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fb7c286fec8 <col:12> 'long double' lvalue ParmVar 0x7fb7c286fd50 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7fb7c286ff30 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fb7c286fef0 <col:19> 'long double' lvalue ParmVar 0x7fb7c286fd50 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7fb7c286fe80 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c2870068 prev 0x7fb7c286c8b0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c286ffd8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7fb7c2871cd8 <col:57, line:235:1>
| | | |-DeclStmt 0x7fb7c28719b0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7fb7c2870150 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7fb7c2870290 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7fb7c28702f0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7fb7c2871480 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fb7c2871950 <col:5>
| | | | | |-CXXConstructorDecl 0x7fb7c28715c8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7fb7c28715c8
| | | | | | `-ParmVarDecl 0x7fb7c28716f0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7fb7c2871788 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7fb7c2871788
| | | | |   `-ParmVarDecl 0x7fb7c28718b0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7fb7c2871400 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7fb7c2871968 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fb7c2871a68 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7fb7c28719f0 <col:5, col:9> 'float' lvalue .__f 0x7fb7c2870290
| | | | | `-DeclRefExpr 0x7fb7c28719c8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fb7c2871400 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7fb7c2871a50 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fb7c2871a28 <col:15> 'float' lvalue ParmVar 0x7fb7c286ffd8 '__x' 'float'
| | | `-ReturnStmt 0x7fb7c2871cc0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7fb7c2871c98 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fb7c2871c80 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fb7c2871c60 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7fb7c2871bf0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7fb7c2871bd8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7fb7c2871b80 <col:18, col:22> 'unsigned int' lvalue .__u 0x7fb7c28702f0
| | |           |   `-DeclRefExpr 0x7fb7c2871b58 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fb7c2871400 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7fb7c2871bb8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7fb7c2870108 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c2871db0 prev 0x7fb7c286ca40 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c2871d20 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7fb7c28743b0 <col:58, line:240:1>
| | | |-DeclStmt 0x7fb7c2874088 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7fb7c2871e98 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7fb7c2871fd0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7fb7c2872030 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7fb7c2872170 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fb7c2874028 <col:5>
| | | | | |-CXXConstructorDecl 0x7fb7c2872288 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7fb7c2872288
| | | | | | `-ParmVarDecl 0x7fb7c2873e00 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7fb7c2873e98 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7fb7c2873e98
| | | | |   `-ParmVarDecl 0x7fb7c2873fc0 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7fb7c28720f0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7fb7c2874040 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fb7c2874140 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7fb7c28740c8 <col:5, col:9> 'double' lvalue .__f 0x7fb7c2871fd0
| | | | | `-DeclRefExpr 0x7fb7c28740a0 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fb7c28720f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7fb7c2874128 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fb7c2874100 <col:15> 'double' lvalue ParmVar 0x7fb7c2871d20 '__x' 'double'
| | | `-ReturnStmt 0x7fb7c2874398 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7fb7c2874370 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fb7c2874358 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fb7c2874338 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7fb7c28742c8 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7fb7c28742b0 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7fb7c2874258 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7fb7c2872030
| | |           |   `-DeclRefExpr 0x7fb7c2874230 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fb7c28720f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7fb7c2874290 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7fb7c2871e50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c2874488 prev 0x7fb7c286cc00 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c28743f8 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7fb7c2876160 <col:63, line:249:1>
| | | |-DeclStmt 0x7fb7c2875d38 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7fb7c2874570 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7fb7c28746b0 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7fb7c28746f8 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7fb7c2874830 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7fb7c2874890 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7fb7c2874ba8 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7fb7c2874c88 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fb7c2874c88
| | | | | | |-CXXConstructorDecl 0x7fb7c28757c8 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7fb7c28757c8
| | | | | | | `-ParmVarDecl 0x7fb7c28758f0 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7fb7c2875988 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7fb7c2875988
| | | | | |   `-ParmVarDecl 0x7fb7c2875ab0 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7fb7c2874950 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7fb7c2874aa0 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fb7c2875cd8 <col:5>
| | | | | |-CXXConstructorDecl 0x7fb7c2875600 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7fb7c2875600
| | | | | | `-ParmVarDecl 0x7fb7c2875730 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7fb7c2875b48 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7fb7c2875b48
| | | | |   `-ParmVarDecl 0x7fb7c2875c70 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7fb7c2874a20 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7fb7c2875cf0 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fb7c2875df0 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7fb7c2875d78 <col:5, col:9> 'long double' lvalue .__ld 0x7fb7c28746b0
| | | | | `-DeclRefExpr 0x7fb7c2875d50 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fb7c2874a20 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7fb7c2875dd8 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fb7c2875db0 <col:16> 'long double' lvalue ParmVar 0x7fb7c28743f8 '__x' 'long double'
| | | `-ReturnStmt 0x7fb7c2876148 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7fb7c2876120 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7fb7c2876100 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7fb7c2876090 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7fb7c2876078 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7fb7c2876060 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7fb7c2876008 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7fb7c2874890
| | |         |     `-MemberExpr 0x7fb7c2875fd0 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7fb7c2874950
| | |         |       `-DeclRefExpr 0x7fb7c2875fa8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fb7c2874a20 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7fb7c2876040 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7fb7c2874528 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c2876238 prev 0x7fb7c286c400 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fb7c28761a8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fb7c28765c0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7fb7c28765a8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7fb7c2876590 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c2876568 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fb7c2876550 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fb7c2876410 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fb7c28763f8 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fb7c28763a0 <col:12> 'int (float)' lvalue Function 0x7fb7c286cd90 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7fb7c2876440 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fb7c2876378 <col:31> 'float' lvalue ParmVar 0x7fb7c28761a8 '__x' 'float'
| | |       `-BinaryOperator 0x7fb7c2876528 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7fb7c28764c0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7fb7c28764a8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb7c2876458 <col:39> '<builtin fn type>' Function 0x7fb7c286cfe8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb7c28764f0 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb7c2876480 <col:55> 'float' lvalue ParmVar 0x7fb7c28761a8 '__x' 'float'
| | |         `-FloatingLiteral 0x7fb7c2876508 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7fb7c28762d8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c2876a90 prev 0x7fb7c286c590 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fb7c2876a00 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fb7c2876e10 <col:59, line:262:1>
| | | `-ReturnStmt 0x7fb7c2876df8 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7fb7c2876de0 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c2876db8 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fb7c2876da0 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fb7c2876c60 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fb7c2876c48 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fb7c2876bf8 <col:12> 'int (double)' lvalue Function 0x7fb7c286d600 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7fb7c2876c90 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fb7c2876bd0 <col:31> 'double' lvalue ParmVar 0x7fb7c2876a00 '__x' 'double'
| | |       `-BinaryOperator 0x7fb7c2876d78 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7fb7c2876d10 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7fb7c2876cf8 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb7c2876ca8 <col:39> '<builtin fn type>' Function 0x7fb7c286d858 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb7c2876d40 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb7c2876cd0 <col:54> 'double' lvalue ParmVar 0x7fb7c2876a00 '__x' 'double'
| | |         `-FloatingLiteral 0x7fb7c2876d58 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7fb7c2876b30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c2876ed8 prev 0x7fb7c286c720 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fb7c2876e48 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fb7c2877270 <col:64, line:265:1>
| | | `-ReturnStmt 0x7fb7c2877258 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7fb7c2877240 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb7c2877218 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fb7c2877200 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fb7c28770b0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fb7c2877098 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fb7c2877040 <col:12> 'int (long double)' lvalue Function 0x7fb7c286e300 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7fb7c28770e0 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fb7c2877018 <col:31> 'long double' lvalue ParmVar 0x7fb7c2876e48 '__x' 'long double'
| | |       `-BinaryOperator 0x7fb7c28771d8 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7fb7c2877160 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7fb7c2877148 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb7c28770f8 <col:39> '<builtin fn type>' Function 0x7fb7c286e558 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb7c2877190 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb7c2877120 <col:55> 'long double' lvalue ParmVar 0x7fb7c2876e48 '__x' 'long double'
| | |         `-FloatingLiteral 0x7fb7c28771a8 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7fb7c2876f78 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c2877338 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c28772a8 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c28773d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2877420 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28774d8 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2877448 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c2877578 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c28775c0 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2877678 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c28775e8 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c2877718 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2877760 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2877818 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2877788 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c28778b8 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2877900 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2877a00 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2877928 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c2877aa0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2877ae8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2877ba0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2877b10 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c2877c40 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2877c88 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2877d40 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2877cb0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c2877de0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2877e28 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2877ee0 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2877e50 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c2877f80 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2877fc8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2878080 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2877ff0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c2878120 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2878168 <col:20> Implicit
| |-FunctionDecl 0x7fb7c28782e8 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c2878190 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fb7c2878208 <col:28> col:33 'float'
| | |-ConstAttr 0x7fb7c28783d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2878418 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2878598 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c2878440 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fb7c28784b8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fb7c2878680 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c28786c8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2878848 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c28786f0 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fb7c2878768 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fb7c2878930 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2878978 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2879230 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c28789a0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb7c28792d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2879318 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28793d0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2879340 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb7c2879470 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c28794b8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2879570 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c28794e0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb7c2879610 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2879658 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2879710 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2879680 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb7c28797b0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c28797f8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28798b0 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2879820 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb7c2879950 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2879998 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2879a50 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c28799c0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb7c2879af0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2879b38 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2879bf0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2879b60 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb7c2879c90 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2879cd8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2879d90 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2879d00 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb7c2879e30 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2879e78 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2879f30 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2879ea0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb7c2879fd0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287a018 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287a0d0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287a040 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb7c287a170 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287a1b8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287aa90 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287aa00 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb7c287ab30 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287ab78 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287ac30 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287aba0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb7c287acd0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287ad18 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287add0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287ad40 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb7c287ae70 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287aeb8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287af70 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287aee0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb7c287b010 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287b058 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287b110 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287b080 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb7c287b1b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287b1f8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287b2b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287b220 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb7c287b350 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287b398 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287b450 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287b3c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb7c287b4f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287b538 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287b5f0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287b560 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb7c287b690 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287b6d8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287b790 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287b700 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c287b830 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287b878 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287b930 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287b8a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c287b9d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287c238 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287c2f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287c260 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c287c390 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287c3d8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287c490 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287c400 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c287c530 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287c578 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287c630 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287c5a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c287c6d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287c718 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287c7d0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287c740 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c287c870 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287c8b8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287c970 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287c8e0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c287ca10 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287ca58 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287cb10 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287ca80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c287cbb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287cbf8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287ccb0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287cc20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c287cd50 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287cd98 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287ce50 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287cdc0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb7c287cef0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287cf38 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287cff0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287cf60 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb7c287d090 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287d0d8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287d200 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287d100 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb7c287d2a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287d2e8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287d3a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287d310 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c287d440 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287d488 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287d540 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287d4b0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c287d5e0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287d628 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287d6e0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287d650 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c287d780 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287d7c8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287d880 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287d7f0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb7c287d920 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287d968 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287da20 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287d990 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb7c287dac0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287db08 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287dbc0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287db30 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb7c287dc60 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287dca8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287dd60 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287dcd0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb7c287de00 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287de48 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287df00 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287de70 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb7c287dfa0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287dfe8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287e0a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287e010 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb7c287e140 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287e188 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287e290 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287e200 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb7c287e330 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287e378 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287e430 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287e3a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb7c287e4d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287e518 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287e5d0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287e540 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb7c287e670 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287e6b8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287e770 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287e6e0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c287e810 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287e858 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287e910 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287e880 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c287e9b0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287e9f8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287eab0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287ea20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c287eb50 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287eb98 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287ec50 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287ebc0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb7c287ecf0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287ed38 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287edf0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c287ed60 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb7c287ee90 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287eed8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287ef90 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c287ef00 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb7c287f030 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287f078 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287f130 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c287f0a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c287f1d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2880238 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28802f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2880260 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c2880390 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c28803d8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2880490 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2880400 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c2880530 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2880578 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2880718 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7fb7c28805a0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb7c2880640 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7fb7c2880800 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28809d8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7fb7c2880860 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb7c2880900 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7fb7c2880ac0 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2880c98 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7fb7c2880b20 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb7c2880bc0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7fb7c2880d80 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2880f38 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fb7c2880de0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fb7c2880e58 <col:28> col:31 'int'
| | |-ConstAttr 0x7fb7c2881020 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2881068 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2882200 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7fb7c2881090 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fb7c2881108 <col:29> col:32 'int'
| | |-ConstAttr 0x7fb7c28822f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2882338 <col:15> Implicit
| |-FunctionDecl 0x7fb7c28824b8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fb7c2882360 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fb7c28823d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7fb7c28825a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c28825e8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2882788 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7fb7c2882610 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fb7c28826b0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7fb7c2882870 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2882a28 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7fb7c28828d0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fb7c2882948 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7fb7c2882b10 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2882cc8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7fb7c2882b70 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fb7c2882be8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7fb7c2882db0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2882ea0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7fb7c2882e10 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb7c2882f78 <col:12> Implicit
| | `-NoThrowAttr 0x7fb7c2882fc0 <col:12> Implicit
| |-FunctionDecl 0x7fb7c2883078 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7fb7c2882fe8 <col:18> col:24 'double'
| | |-ConstAttr 0x7fb7c2883158 <col:12> Implicit
| | `-NoThrowAttr 0x7fb7c28831a0 <col:12> Implicit
| |-FunctionDecl 0x7fb7c2884290 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7fb7c2884200 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7fb7c2884368 <col:12> Implicit
| | `-NoThrowAttr 0x7fb7c28843b0 <col:12> Implicit
| |-FunctionDecl 0x7fb7c28844e8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fb7c28843d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fb7c2884450 <col:29> col:32 'int'
| | |-ConstAttr 0x7fb7c2884590 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c28845d8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2884710 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7fb7c2884600 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fb7c2884678 <col:30> col:33 'int'
| | |-ConstAttr 0x7fb7c28847b8 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2884800 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2884938 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fb7c2884828 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fb7c28848a0 <col:41> col:44 'int'
| | |-ConstAttr 0x7fb7c28849e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2884a28 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2884ba8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7fb7c2884a50 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7fb7c2884ac8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7fb7c2884c90 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2884cd8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2884e58 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7fb7c2884d00 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7fb7c2884d78 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7fb7c2884f40 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2884f88 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2885108 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7fb7c2884fb0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7fb7c2885028 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7fb7c28851f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2885238 <col:20> Implicit
| |-FunctionDecl 0x7fb7c28852f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2885260 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fb7c2885390 <col:14> Implicit
| | `-ConstAttr 0x7fb7c28853d8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2885490 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2885400 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fb7c2885530 <col:15> Implicit
| | `-ConstAttr 0x7fb7c2885578 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2885630 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c28855a0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fb7c28856d0 <col:20> Implicit
| | `-ConstAttr 0x7fb7c2885718 <col:20> Implicit
| |-FunctionDecl 0x7fb7c28857d0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2885740 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c2885870 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c28858b8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2885970 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c28858e0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c2885a10 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2885a58 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2885b10 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2885a80 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c2885bb0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2885bf8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2885d30 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c2885c20 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fb7c2885c98 <col:28> col:33 'float'
| | |-ConstAttr 0x7fb7c2885dd8 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2885e20 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2885f58 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c2885e48 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fb7c2885ec0 <col:29> col:35 'double'
| | |-ConstAttr 0x7fb7c2886000 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2886048 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2886200 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c2886070 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fb7c28860e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fb7c28862a8 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c28862f0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2886428 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c2886318 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fb7c2886390 <col:26> col:31 'float'
| | |-ConstAttr 0x7fb7c28864d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2886518 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2886650 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c2886540 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fb7c28865b8 <col:27> col:33 'double'
| | |-ConstAttr 0x7fb7c28866f8 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2886740 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2886878 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c2886768 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fb7c28867e0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7fb7c2886920 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2886968 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2886a20 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2886990 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c2886ac0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2886b08 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2886bc0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2886b30 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c2886c60 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2886ca8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2886d60 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2886cd0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c2886e00 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2886e48 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2886f00 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2886e70 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb7c2886fa0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2886fe8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28870a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2887010 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb7c2887140 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2887188 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2887290 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2887200 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb7c2887330 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2887378 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2887430 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c28873a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb7c28874d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2887518 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28875d0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2887540 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb7c2887670 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c28876b8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2887770 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c28876e0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb7c2887810 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c2887858 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2887910 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2887880 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7fb7c28879b0 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2887aa0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2887a10 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7fb7c2887b40 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2887c30 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2887ba0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7fb7c2887cd0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2887dc0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2887d30 <col:22> col:27 'float'
| | |-ConstAttr 0x7fb7c2887e60 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2887ea8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2887f60 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2887ed0 <col:22> col:28 'double'
| | |-ConstAttr 0x7fb7c2888000 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2888048 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2888100 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2888070 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7fb7c28881a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c28881e8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c28882a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2888218 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fb7c2888348 <col:14> Implicit
| | `-ConstAttr 0x7fb7c2888390 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2888448 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c28883b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fb7c28884e8 <col:15> Implicit
| | `-ConstAttr 0x7fb7c2888530 <col:15> Implicit
| |-FunctionDecl 0x7fb7c28885e8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2888558 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fb7c2888688 <col:20> Implicit
| | `-ConstAttr 0x7fb7c28886d0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2888788 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c28886f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fb7c2888828 <col:14> Implicit
| | `-ConstAttr 0x7fb7c2888870 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2888928 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2888898 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fb7c28889c8 <col:15> Implicit
| | `-ConstAttr 0x7fb7c2888a10 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2888ac8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2888a38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fb7c2888b68 <col:20> Implicit
| | `-ConstAttr 0x7fb7c2888bb0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2888c68 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2888bd8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7fb7c2888d08 <col:14> Implicit
| | `-ConstAttr 0x7fb7c2888d50 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2888e08 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2888d78 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7fb7c2888ea8 <col:15> Implicit
| | `-ConstAttr 0x7fb7c2888ef0 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2888fa8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2888f18 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7fb7c2889048 <col:20> Implicit
| | `-ConstAttr 0x7fb7c2889090 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2889148 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c28890b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fb7c28891e8 <col:14> Implicit
| | `-ConstAttr 0x7fb7c2889238 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28892f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2889260 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fb7c2889390 <col:15> Implicit
| | `-ConstAttr 0x7fb7c28893d8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2889490 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2889400 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fb7c2889530 <col:20> Implicit
| | `-ConstAttr 0x7fb7c2889578 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2889668 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7fb7c28895a0 <col:24> col:29 'float'
| | |-ConstAttr 0x7fb7c2889748 <col:17> Implicit
| | `-NoThrowAttr 0x7fb7c2889790 <col:17> Implicit
| |-FunctionDecl 0x7fb7c2889888 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7fb7c28897b8 <col:23> col:29 'double'
| | |-ConstAttr 0x7fb7c2889968 <col:17> Implicit
| | `-NoThrowAttr 0x7fb7c28899b0 <col:17> Implicit
| |-FunctionDecl 0x7fb7c2889aa8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7fb7c28899d8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7fb7c2889b88 <col:17> Implicit
| | `-NoThrowAttr 0x7fb7c2889bd0 <col:17> Implicit
| |-FunctionDecl 0x7fb7c2889c88 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2889bf8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fb7c2889d28 <col:14> Implicit
| | `-ConstAttr 0x7fb7c2889d70 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2889e28 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2889d98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fb7c2889ec8 <col:15> Implicit
| | `-ConstAttr 0x7fb7c2889f10 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2889fc8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c2889f38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fb7c288a068 <col:20> Implicit
| | `-ConstAttr 0x7fb7c288a0b0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c288a168 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7fb7c288a0d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7fb7c288a208 <col:17> Implicit
| | `-NoThrowAttr 0x7fb7c288a250 <col:17> Implicit
| |-FunctionDecl 0x7fb7c288a308 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7fb7c288a278 <col:24> col:30 'double'
| | |-ConstAttr 0x7fb7c288a3a8 <col:17> Implicit
| | `-NoThrowAttr 0x7fb7c288a3f0 <col:17> Implicit
| |-FunctionDecl 0x7fb7c288a4a8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7fb7c288a418 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb7c288a548 <col:17> Implicit
| | `-NoThrowAttr 0x7fb7c288a590 <col:17> Implicit
| |-FunctionDecl 0x7fb7c288a688 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7fb7c288a5b8 <col:30> col:35 'float'
| | |-ConstAttr 0x7fb7c288a768 <col:22> Implicit
| | `-NoThrowAttr 0x7fb7c288a7b0 <col:22> Implicit
| |-FunctionDecl 0x7fb7c288a8a8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7fb7c288a7d8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fb7c288a988 <col:22> Implicit
| | `-NoThrowAttr 0x7fb7c288a9d0 <col:22> Implicit
| |-FunctionDecl 0x7fb7c288aac8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fb7c288a9f8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7fb7c288aba8 <col:22> Implicit
| | `-NoThrowAttr 0x7fb7c288abf0 <col:22> Implicit
| |-FunctionDecl 0x7fb7c288aca8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7fb7c288ac18 <col:31> col:36 'float'
| | |-ConstAttr 0x7fb7c288ad48 <col:22> Implicit
| | `-NoThrowAttr 0x7fb7c288ad90 <col:22> Implicit
| |-FunctionDecl 0x7fb7c288ae48 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7fb7c288adb8 <col:30> col:36 'double'
| | |-ConstAttr 0x7fb7c288aee8 <col:22> Implicit
| | `-NoThrowAttr 0x7fb7c288af30 <col:22> Implicit
| |-FunctionDecl 0x7fb7c288afe8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fb7c288af58 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7fb7c288b088 <col:22> Implicit
| | `-NoThrowAttr 0x7fb7c288b0d0 <col:22> Implicit
| |-FunctionDecl 0x7fb7c288b200 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c288b0f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fb7c288b2a0 <col:14> Implicit
| | `-ConstAttr 0x7fb7c288b2e8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c288b3a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c288b310 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fb7c288b440 <col:15> Implicit
| | `-ConstAttr 0x7fb7c288b488 <col:15> Implicit
| |-FunctionDecl 0x7fb7c288b540 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb7c288b4b0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fb7c288b5e0 <col:20> Implicit
| | `-ConstAttr 0x7fb7c288b628 <col:20> Implicit
| |-FunctionDecl 0x7fb7c288b760 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c288b650 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb7c288b6c8 <col:27> col:32 'float'
| | |-ConstAttr 0x7fb7c288b808 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c288b850 <col:14> Implicit
| |-FunctionDecl 0x7fb7c288b988 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c288b878 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb7c288b8f0 <col:28> col:34 'double'
| | |-ConstAttr 0x7fb7c288ba30 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c288ba78 <col:15> Implicit
| |-FunctionDecl 0x7fb7c288bbb0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c288baa0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb7c288bb18 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fb7c288bc58 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c288bca0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c288bdd8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c288bcc8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fb7c288bd40 <col:32> col:37 'float'
| | |-ConstAttr 0x7fb7c288be80 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c288bec8 <col:14> Implicit
| |-FunctionDecl 0x7fb7c288c000 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c288bef0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fb7c288bf68 <col:33> col:39 'double'
| | |-ConstAttr 0x7fb7c288c0a8 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c288c0f0 <col:15> Implicit
| |-FunctionDecl 0x7fb7c288c238 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c288c118 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fb7c288c190 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fb7c288c2e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c288c328 <col:20> Implicit
| |-FunctionDecl 0x7fb7c288c528 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7fb7c288c350 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fb7c288c3c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7fb7c288c440 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7fb7c288c7c8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7fb7c288c5f0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fb7c288c668 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7fb7c288c6e0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7fb7c288ca68 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7fb7c288c890 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fb7c288c908 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7fb7c288c980 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7fb7c288cc40 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c288cb30 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7fb7c288cba8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7fb7c288cce8 <col:14> Implicit
| | `-ConstAttr 0x7fb7c288cd30 <col:14> Implicit
| |-FunctionDecl 0x7fb7c288ce68 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c288cd58 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7fb7c288cdd0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7fb7c288cf10 <col:15> Implicit
| | `-ConstAttr 0x7fb7c288cf58 <col:15> Implicit
| |-FunctionDecl 0x7fb7c288d090 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c288cf80 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7fb7c288cff8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7fb7c288d138 <col:20> Implicit
| | `-ConstAttr 0x7fb7c288d180 <col:20> Implicit
| |-FunctionDecl 0x7fb7c288d2c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7fb7c288d200 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fb7c288d3a8 <col:14> Implicit
| | `-ConstAttr 0x7fb7c288d3f0 <col:14> Implicit
| |-FunctionDecl 0x7fb7c288d4e8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7fb7c288d418 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fb7c288d5c8 <col:15> Implicit
| | `-ConstAttr 0x7fb7c288d610 <col:15> Implicit
| |-FunctionDecl 0x7fb7c288d708 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7fb7c288d638 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7fb7c288d7e8 <col:20> Implicit
| | `-ConstAttr 0x7fb7c288d830 <col:20> Implicit
| |-FunctionDecl 0x7fb7c288d968 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c288d858 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fb7c288d8d0 <col:32> col:37 'float'
| | |-ConstAttr 0x7fb7c288da10 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c288da58 <col:14> Implicit
| |-FunctionDecl 0x7fb7c288db90 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c288da80 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fb7c288daf8 <col:33> col:39 'double'
| | |-ConstAttr 0x7fb7c288dc38 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c288dc80 <col:15> Implicit
| |-FunctionDecl 0x7fb7c288ddb8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c288dca8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fb7c288dd20 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fb7c288de60 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c288dea8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c288e028 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7fb7c288ded0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7fb7c288df48 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7fb7c288e110 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c288e158 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287f2d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7fb7c288e180 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fb7c287f200 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7fb7c287f3c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287f408 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287f540 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c287f430 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7fb7c287f4a8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7fb7c287f5e8 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287f630 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287f768 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c287f658 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb7c287f6d0 <col:27> col:32 'float'
| | |-ConstAttr 0x7fb7c287f810 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c287f858 <col:14> Implicit
| |-FunctionDecl 0x7fb7c287f990 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c287f880 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb7c287f8f8 <col:28> col:34 'double'
| | |-ConstAttr 0x7fb7c287fa38 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c287fa80 <col:15> Implicit
| |-FunctionDecl 0x7fb7c287fbb8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c287faa8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb7c287fb20 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fb7c287fc60 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c287fca8 <col:20> Implicit
| |-FunctionDecl 0x7fb7c287fde0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c287fcd0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb7c287fd48 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fb7c287fe88 <col:14> Implicit
| | `-ConstAttr 0x7fb7c287fed0 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2880008 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c287fef8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb7c287ff70 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fb7c28800b0 <col:15> Implicit
| | `-ConstAttr 0x7fb7c28800f8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2892238 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c2880120 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb7c2880198 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fb7c28922e0 <col:20> Implicit
| | `-ConstAttr 0x7fb7c2892328 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2892460 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb7c2892350 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb7c28923c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fb7c2892508 <col:14> Implicit
| | `-ConstAttr 0x7fb7c2892550 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2892688 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c2892578 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb7c28925f0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fb7c2892730 <col:15> Implicit
| | `-ConstAttr 0x7fb7c2892778 <col:15> Implicit
| |-FunctionDecl 0x7fb7c28928b0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c28927a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb7c2892818 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fb7c2892958 <col:20> Implicit
| | `-ConstAttr 0x7fb7c28929a0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2892ba8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7fb7c28929c8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fb7c2892a40 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fb7c2892ab8 <col:33> col:38 'float'
| | |-ConstAttr 0x7fb7c2892ca8 <col:14> Implicit
| | `-NoThrowAttr 0x7fb7c2892cf0 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2892ef8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7fb7c2892d18 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fb7c2892d90 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7fb7c2892e08 <col:35> col:41 'double'
| | |-ConstAttr 0x7fb7c2892ff8 <col:15> Implicit
| | `-NoThrowAttr 0x7fb7c2893040 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2883288 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7fb7c2893068 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fb7c28930e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7fb7c2893158 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7fb7c2883388 <col:20> Implicit
| | `-NoThrowAttr 0x7fb7c28833d0 <col:20> Implicit
| |-FunctionDecl 0x7fb7c2883488 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7fb7c2883520 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb7c2883668 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7fb7c2883700 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb7c2883848 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7fb7c28838e0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb7c2883a28 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7fb7c2883ac0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb7c2883c18 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2883b78 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fb7c2883cb8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb7c2883d58 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7fb7c2883d68 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2883e30 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2883d90 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fb7c2883ed0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb7c2883f70 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7fb7c2883f80 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2895200 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fb7c2883fa8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7fb7c2884020 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7fb7c2884098 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fb7c28952b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c28954e0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fb7c2895310 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7fb7c2895388 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7fb7c2895400 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fb7c2895590 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c2895690 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c28955f0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fb7c2895730 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb7c28957d0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7fb7c28957e0 <col:14> Implicit
| |-FunctionDecl 0x7fb7c28958a8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2895808 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fb7c2895948 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb7c28959e8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7fb7c28959f8 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2895ac0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2895a20 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fb7c2895b60 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb7c2895c00 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7fb7c2895c10 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2895cd8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2895c38 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fb7c2895d78 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb7c2895e18 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7fb7c2895e28 <col:15> Implicit
| |-FunctionDecl 0x7fb7c2895ef0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7fb7c2895e50 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fb7c2895f90 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb7c2896030 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7fb7c2896040 <col:14> Implicit
| |-FunctionDecl 0x7fb7c2896108 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c2896068 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fb7c289c200 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb7c289c2a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7fb7c289c2b0 <col:15> Implicit
| |-FunctionDecl 0x7fb7c289c460 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fb7c289c2d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7fb7c289c350 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7fb7c289c3c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fb7c289c510 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c289c6f8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fb7c289c570 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7fb7c289c5e8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7fb7c289c660 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fb7c289c7a8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7fb7c289c7f0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7fb7c289c918 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7fb7c289c9c8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7fb7c289ca28 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7fb7c28a3a68 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fb7c28a3b68 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7fb7c28a3b68
| | |-CXXConstructorDecl 0x7fb7c28a3c78 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7fb7c28a3c78
| | | `-ParmVarDecl 0x7fb7c28a3da0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7fb7c28a3e38 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fb7c28a3f60 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fb7c289c9c8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7fb7c28a40b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fb7c28a4080 <col:8> 'float' xvalue .__sinval 0x7fb7c289c9c8
| |   |     `-CXXStaticCastExpr 0x7fb7c28a4050 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fb7c28a4018 <col:8> 'struct __float2' lvalue ParmVar 0x7fb7c28a3f60 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fb7c289ca28 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7fb7c28a4198 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fb7c28a4160 <col:8> 'float' xvalue .__cosval 0x7fb7c289ca28
| |   |     `-CXXStaticCastExpr 0x7fb7c28a4130 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fb7c28a40f8 <col:8> 'struct __float2' lvalue ParmVar 0x7fb7c28a3f60 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7fb7c28a41e8 <col:8>
| |-CXXRecordDecl 0x7fb7c289ca90 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7fb7c289cbb8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7fb7c289cc68 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7fb7c289ccc8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7fb7c283b888 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fb7c283b988 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7fb7c283b988
| | |-CXXConstructorDecl 0x7fb7c283ba98 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7fb7c283ba98
| | | `-ParmVarDecl 0x7fb7c283bbc0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7fb7c283bc58 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fb7c283bd80 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fb7c289cc68 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7fb7c283bed8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fb7c283bea0 <col:8> 'double' xvalue .__sinval 0x7fb7c289cc68
| |   |     `-CXXStaticCastExpr 0x7fb7c283be70 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fb7c283be38 <col:8> 'struct __double2' lvalue ParmVar 0x7fb7c283bd80 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fb7c289ccc8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7fb7c283bfb8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fb7c283bf80 <col:8> 'double' xvalue .__cosval 0x7fb7c289ccc8
| |   |     `-CXXStaticCastExpr 0x7fb7c283bf50 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fb7c283bf18 <col:8> 'struct __double2' lvalue ParmVar 0x7fb7c283bd80 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7fb7c283c008 <col:8>
| |-FunctionDecl 0x7fb7c289ce90 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fb7c289cd48 <col:40> col:45 'float'
| |-FunctionDecl 0x7fb7c289d090 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fb7c289cf48 <col:40> col:46 'double'
| |-FunctionDecl 0x7fb7c28a3400 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fb7c289d148 <col:42> col:47 'float'
| |-FunctionDecl 0x7fb7c28a3550 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fb7c28a34b8 <col:42> col:48 'double'
| |-FunctionDecl 0x7fb7c28a3790 prev 0x7fb7c2895200 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fb7c28a3608 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7fb7c28a3680 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7fb7c28a36f8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7fb7c283b3e0 <col:80, line:664:1>
| | | |-DeclStmt 0x7fb7c28a4250 <line:662:5, col:57>
| | | | `-VarDecl 0x7fb7c28a38a8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fb7c28a4238 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fb7c28a4200 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fb7c28a3fc8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fb7c28a3a20 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fb7c28a3a08 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fb7c28a3988 <col:37> 'struct __float2 (float)' lvalue Function 0x7fb7c289ce90 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fb7c28a3a50 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fb7c28a3960 <col:53> 'float' lvalue ParmVar 0x7fb7c28a3608 '__x' 'float'
| | | |-BinaryOperator 0x7fb7c28a4340 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fb7c28a42a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fb7c28a4290 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fb7c28a4268 <col:6> 'float *' lvalue ParmVar 0x7fb7c28a3680 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fb7c28a4328 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fb7c28a42f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7fb7c289c9c8
| | | |     `-DeclRefExpr 0x7fb7c28a42c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fb7c28a38a8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fb7c283b3b8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fb7c283b320 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fb7c283b308 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fb7c283b2e0 <col:34> 'float *' lvalue ParmVar 0x7fb7c28a36f8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fb7c283b3a0 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fb7c283b368 <col:43, col:51> 'const float' lvalue .__cosval 0x7fb7c289ca28
| | |       `-DeclRefExpr 0x7fb7c283b340 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fb7c28a38a8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fb7c28a3840 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c283b5b0 prev 0x7fb7c28954e0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fb7c283b428 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7fb7c283b4a0 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7fb7c283b518 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7fb7c283c3e0 <col:82, line:669:1>
| | | |-DeclStmt 0x7fb7c283c070 <line:667:5, col:57>
| | | | `-VarDecl 0x7fb7c283b6c8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fb7c283c058 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fb7c283c020 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fb7c283bde8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fb7c283b840 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fb7c283b828 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fb7c283b7a8 <col:38> 'struct __double2 (double)' lvalue Function 0x7fb7c289d090 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fb7c283b870 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fb7c283b780 <col:53> 'double' lvalue ParmVar 0x7fb7c283b428 '__x' 'double'
| | | |-BinaryOperator 0x7fb7c283c160 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fb7c283c0c8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fb7c283c0b0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fb7c283c088 <col:6> 'double *' lvalue ParmVar 0x7fb7c283b4a0 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fb7c283c148 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fb7c283c110 <col:15, col:23> 'const double' lvalue .__sinval 0x7fb7c289cc68
| | | |     `-DeclRefExpr 0x7fb7c283c0e8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fb7c283b6c8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fb7c283c3b8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fb7c283c320 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fb7c283c308 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fb7c283c2e0 <col:34> 'double *' lvalue ParmVar 0x7fb7c283b518 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fb7c283c3a0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fb7c283c368 <col:43, col:51> 'const double' lvalue .__cosval 0x7fb7c289ccc8
| | |       `-DeclRefExpr 0x7fb7c283c340 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fb7c283b6c8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fb7c283b660 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c283c5b0 prev 0x7fb7c289c460 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fb7c283c428 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7fb7c283c4a0 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7fb7c283c518 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7fb7c283cb08 <col:82, line:674:1>
| | | |-DeclStmt 0x7fb7c283c898 <line:672:5, col:59>
| | | | `-VarDecl 0x7fb7c283c6c8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fb7c283c880 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fb7c283c848 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fb7c283c830 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fb7c283c7e8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fb7c283c7d0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fb7c283c7a8 <col:37> 'struct __float2 (float)' lvalue Function 0x7fb7c28a3400 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fb7c283c818 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fb7c283c780 <col:55> 'float' lvalue ParmVar 0x7fb7c283c428 '__x' 'float'
| | | |-BinaryOperator 0x7fb7c283c988 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fb7c283c8f0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fb7c283c8d8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fb7c283c8b0 <col:6> 'float *' lvalue ParmVar 0x7fb7c283c4a0 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fb7c283c970 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fb7c283c938 <col:15, col:23> 'const float' lvalue .__sinval 0x7fb7c289c9c8
| | | |     `-DeclRefExpr 0x7fb7c283c910 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fb7c283c6c8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fb7c283cae0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fb7c283ca48 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fb7c283ca30 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fb7c283ca08 <col:34> 'float *' lvalue ParmVar 0x7fb7c283c518 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fb7c283cac8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fb7c283ca90 <col:43, col:51> 'const float' lvalue .__cosval 0x7fb7c289ca28
| | |       `-DeclRefExpr 0x7fb7c283ca68 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fb7c283c6c8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fb7c283c660 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c283ccd8 prev 0x7fb7c289c6f8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fb7c283cb50 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7fb7c283cbc8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7fb7c283cc40 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7fb7c283d240 <col:84, line:679:1>
| | | |-DeclStmt 0x7fb7c283cfc0 <line:677:5, col:59>
| | | | `-VarDecl 0x7fb7c283cdf0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fb7c283cfa8 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fb7c283cf70 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fb7c283cf58 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fb7c283cf10 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fb7c283cef8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fb7c283ced0 <col:38> 'struct __double2 (double)' lvalue Function 0x7fb7c28a3550 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fb7c283cf40 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fb7c283cea8 <col:55> 'double' lvalue ParmVar 0x7fb7c283cb50 '__x' 'double'
| | | |-BinaryOperator 0x7fb7c283d0b0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fb7c283d018 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fb7c283d000 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fb7c283cfd8 <col:6> 'double *' lvalue ParmVar 0x7fb7c283cbc8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fb7c283d098 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fb7c283d060 <col:15, col:23> 'const double' lvalue .__sinval 0x7fb7c289cc68
| | | |     `-DeclRefExpr 0x7fb7c283d038 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fb7c283cdf0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fb7c283d218 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fb7c283d170 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fb7c283d158 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fb7c283d130 <col:34> 'double *' lvalue ParmVar 0x7fb7c283cc40 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fb7c283d200 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fb7c283d1b8 <col:43, col:51> 'const double' lvalue .__cosval 0x7fb7c289ccc8
| | |       `-DeclRefExpr 0x7fb7c283d190 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fb7c283cdf0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fb7c283cd88 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb7c283d328 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c283d288 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fb7c283d3c8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb7c283d520 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c283d480 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fb7c283d5c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb7c283d7d8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fb7c283d678 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fb7c283d6f0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fb7c283d880 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb7c283d9d8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c283d938 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fb7c283da78 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb7c283dbd0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c283db30 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fb7c283dc70 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb7c283de48 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fb7c283dd28 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fb7c283dda0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fb7c283def0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb7c283e0b8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c283dfa8 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7fb7c283e020 <col:29> col:35 'double'
| |-VarDecl 0x7fb7c283e178 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7fb7c28a64a0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7fb7c28a6400 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7fb7c28a6540 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb7c28a6698 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7fb7c28a65f8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7fb7c28a6738 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb7c28a6910 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb7c28a67f0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb7c28a6868 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7fb7c28a69b8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb7c28a6b10 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7fb7c28a6a70 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7fb7c28a6bb0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb7c28a6d08 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7fb7c28a6c68 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7fb7c28a6da8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7fb7c28a6f00 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7fb7c28a6e60 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7fb7c28a6fa0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7fb7c286cf98 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7fb7c286cfe8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7fb7c286d080 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7fb7c286d0e8 <col:26> Implicit
|   `-ConstAttr 0x7fb7c286d130 <col:26> Implicit
|-LinkageSpecDecl 0x7fb7c286d2b0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fb7c286d300 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fb7c286d398 <col:50> Implicit
|   `-ConstAttr 0x7fb7c286d3e0 <col:50> Implicit
|-LinkageSpecDecl 0x7fb7c286d808 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7fb7c286d858 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7fb7c286d8f0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7fb7c286d958 <col:26> Implicit
|   `-ConstAttr 0x7fb7c286d9a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fb7c286db20 <col:49> col:49 implicit C
| `-FunctionDecl 0x7fb7c286e000 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fb7c286e098 <col:49> Implicit
|   `-ConstAttr 0x7fb7c286e0e0 <col:49> Implicit
|-LinkageSpecDecl 0x7fb7c286e508 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7fb7c286e558 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7fb7c286e5f0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7fb7c286e658 <col:26> Implicit
|   `-ConstAttr 0x7fb7c286e6a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fb7c286e820 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fb7c286e870 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fb7c286e908 <col:50> Implicit
|   `-ConstAttr 0x7fb7c286e950 <col:50> Implicit
|-LinkageSpecDecl 0x7fb7c28a70e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1485:1> line:307:8 C++
| |-TypedefDecl 0x7fb7c28a7150 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7fb7c18327e0 'long'
| |-TypedefDecl 0x7fb7c28a71c0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7fb7c1832880 'unsigned long'
| |-TypedefDecl 0x7fb7c28a7230 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7fb7c1832900 'long double'
| |-NamespaceDecl 0x7fb7c28a7288 prev 0x7fb7c1865c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7fb7c1865c58 'std'
| | `-TypedefDecl 0x7fb7c28a7348 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7fb7c28a7310 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7fb7c28a72f0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7fb7c1832c10 'nullptr_t'
| |-NamespaceDecl 0x7fb7c28aa800 prev 0x7fb7c28a7288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fb7c1865c58 'std'
| | `-NamespaceDecl 0x7fb7c28aa868 prev 0x7fb7c1865cc0 <col:52, line:439:36> <scratch space>:343:1 __1 inline
| |   |-original Namespace 0x7fb7c1865cc0 '__1'
| |   |-UsingDecl 0x7fb7c28aa8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7fb7c28aa940 <col:9> col:9 implicit Typedef 0x7fb7c28a7150 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7fb7c28aa990 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7fb7c28aa9e0 <col:9> col:9 implicit Typedef 0x7fb7c28a71c0 'size_t'
| |   | `-TypedefType 0x7fb7c28d3480 'size_t' sugar
| |   |   |-Typedef 0x7fb7c28a71c0 'size_t'
| |   |   `-BuiltinType 0x7fb7c1832880 'unsigned long'
| |   |-UsingDecl 0x7fb7c28aaa30 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7fb7c28aaa80 <col:9> col:9 implicit Typedef 0x7fb7c28a7230 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7fb7c28aaac8 prev 0x7fb7c28aa800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fb7c1865c58 'std'
| | `-NamespaceDecl 0x7fb7c28aab30 prev 0x7fb7c28aa868 <col:52, line:439:36> <scratch space>:344:1 __1 inline
| |   |-original Namespace 0x7fb7c1865cc0 '__1'
| |   |-ClassTemplateDecl 0x7fb7c28aae40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7fb7c28aab98 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fb7c28aac38 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fb7c28aada8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7fb7c28ab078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fb7c28ab208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fb7c28ab0c0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28ab170 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7fb7c28ab418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fb7c28ab5a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7fb7c28ab460 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28ab510 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7fb7c28ab7b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fb7c28acd18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28acc00 <line:402:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fb7c28acc80 <line:403:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7fb7c28acf90 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7fb7c28ad038 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7fb7c1832720 'void'
| |   |-ClassTemplateDecl 0x7fb7c28ad1c8 <line:405:1, line:406:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7fb7c28ad0b0 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28ad130 <line:406:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7fb7c28ad440 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7fb7c28ad4e8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c28ad0f0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28ad0b0 '_Tp'
| |   |-ClassTemplateDecl 0x7fb7c28ad718 <line:408:1, line:409:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7fb7c28ad560 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28ad5d8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fb7c28ad680 <line:409:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7fb7c28ad9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28ada68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7fb7c28add88 <line:411:1, line:412:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28adb30 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fb7c28adb88 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fb7c28adc00 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7fb7c28adcf0 <line:412:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28ae090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28ae0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7fb7c28ae180 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7fb7c28adbd0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb7c28adb88 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28ae4f8 <line:413:1, line:414:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb7c28ae1f8 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7fb7c28ae268 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7fb7c28ae690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28ae830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7fb7c28ae8d8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7fb7c28ae2b0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fb7c28ae268 '_Then'
| |   |-TypeAliasTemplateDecl 0x7fb7c28afd30 <line:417:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28ae960 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fb7c28ae9b8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fb7c28aea28 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7fb7c28afcd0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7fb7c28afc60 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28aff40 <line:420:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28afd90 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28afde8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28afea8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28b0200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28b0248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28b0510 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28b0300 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28b0680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28b07f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7fb7c28b0970 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7fb7c28b0900 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28b0bb0 <line:423:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28b09f8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28b0a60 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fb7c28b0b18 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7fb7c28b0e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fb7c28b0eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c19a4c80 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7fb7c19a4f10 prev 0x7fb7c19a4c80 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c19d4188 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7fb7c288e268 prev 0x7fb7c19d4188 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c28ef338 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7fb7c28ef5d0 prev 0x7fb7c28ef338 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c28975e8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7fb7c2897880 prev 0x7fb7c28975e8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28b1180 <line:424:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28b0f70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28b12f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28b1460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7fb7c28b1508 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28b0fb0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28b0f70 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb7c28b18a0 <line:427:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28b1590 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fb7c28b15f8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7fb7c28b1840 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28b17d0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fb7c28b1cc8 <line:433:1, line:440:1> line:437:1 addressof
| |   | |-TemplateTypeParmDecl 0x7fb7c28b18f0 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c28b1c30 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fb7c28b1ab8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7fb7c28b2098 <line:438:1, line:440:1>
| |   |   | `-ReturnStmt 0x7fb7c28b2080 <line:439:5, col:35>
| |   |   |   `-CallExpr 0x7fb7c28b2050 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7fb7c28b2000 <col:12> '<builtin fn type>' Function 0x7fb7c28b1ea8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7fb7c28b2028 <col:32> '_Tp' lvalue ParmVar 0x7fb7c28b1ab8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7fb7c28b1d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   |-VisibilityAttr 0x7fb7c28b1d68 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7fb7c28b1d78 <line:296:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7fb7c28b2380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7fb7c28b20b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c28b22e8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7fb7c28b21a8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7fb7c28b23d8 <line:499:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7fb7c28b24f8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7fb7c28b25d0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7fb7c28b27f8 <line:503:1, line:515:1> line:504:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7fb7c28b2638 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28b26b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7fb7c28b2760 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7fb7c28b2ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fb7c28b2b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7fb7c28b3200 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fb7c28b3260 <col:53> '_Tp' NonTypeTemplateParm 0x7fb7c28b26b8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7fb7c28b3298 <line:507:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fb7c28b2680 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fb7c28b2638 '_Tp'
| |   | | |-TypedefDecl 0x7fb7c28b3300 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7fb7c28b2a30 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7fb7c28b2760 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fb7c28b3498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7fb7c28b3768 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7fb7c28b3750 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7fb7c28b3728 <col:73> 'const _Tp' lvalue Var 0x7fb7c28b3200 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c28b3530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c28b3578 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7fb7c28b35e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7fb7c28b37c8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7fb7c28b37b0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7fb7c28b3788 <col:69> 'const _Tp' lvalue Var 0x7fb7c28b3200 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7fb7c28b3680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |   `-VisibilityAttr 0x7fb7c28b36c8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c28b3ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7fb7c28b6258 prev 0x7fb7c28b3ca8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fb7c28b6300 <line:506:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fb7c28b6388 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fb7c28b6370 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7fb7c28b6418 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fb7c28b3c70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fb7c28b2680 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fb7c28b2638 '_Tp'
| |   | | |   `-BuiltinType 0x7fb7c1832740 '_Bool'
| |   | | |-TypedefDecl 0x7fb7c28b6480 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7fb7c28b3db0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7fb7c28b3ca8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fb7c28b6568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fb7c28b6638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fb7c28b66b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fb7c28b6758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c28b3f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7fb7c28b50a8 prev 0x7fb7c28b3f80 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fb7c28b5150 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fb7c28b51d8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fb7c28b51c0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7fb7c28b5268 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fb7c28b3c70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fb7c28b2680 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fb7c28b2638 '_Tp'
| |   | | |   `-BuiltinType 0x7fb7c1832740 '_Bool'
| |   | | |-TypedefDecl 0x7fb7c28b52d0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7fb7c28b4080 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7fb7c28b3f80 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fb7c28b5408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fb7c28b54d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fb7c28b5550 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fb7c28b5e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c2900900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7fb7c2900b30 prev 0x7fb7c2900900 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7fb7c2900c00 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7fb7c2900c90 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7fb7c2900c70 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7fb7c2900d20 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7fb7c29008b0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7fb7c28b2680 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fb7c28b2638 '_Tp'
| |   |   |   `-BuiltinType 0x7fb7c1832880 'unsigned long'
| |   |   |-TypedefDecl 0x7fb7c2900d88 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7fb7c2900a00 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7fb7c2900900 'integral_constant'
| |   |   |-CXXConversionDecl 0x7fb7c2900eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7fb7c2900f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-CXXMethodDecl 0x7fb7c2901000 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7fb7c29010a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |-VarDecl 0x7fb7c28b3b70 parent 0x7fb7c28b2760 prev 0x7fb7c28b3200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7fb7c28b3ec0 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7fb7c28b3dd0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fb7c28b3c38 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fb7c28b3c20 <line:528:31> '_Bool' true
| |   |   `-RecordType 0x7fb7c28b3db0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7fb7c28b3ca8 'integral_constant'
| |   |-TypedefDecl 0x7fb7c28b4190 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7fb7c28b40a0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fb7c28b3f40 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fb7c28b3f28 <line:529:31> '_Bool' false
| |   |   `-RecordType 0x7fb7c28b4080 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7fb7c28b3f80 'integral_constant'
| |   |-ClassTemplateDecl 0x7fb7c28b47b0 <line:535:1, line:536:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28b4600 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7fb7c28b4658 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fb7c28b4718 <line:536:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7fb7c28b5f78 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28b4d50 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fb7c28b4a98 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fb7c28b5e98 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28b5f78 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb7c28b67f0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28b6ac0 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28b68a8 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fb7c28b73f8 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28b77e0 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fb7c28b74b0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb7c28b7518 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fb7c28b7d78 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7fb7c28b7fc0 <line:550:1, line:551:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7fb7c28b7e30 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fb7c28b7e98 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fb7c28b7f28 <line:551:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fb7c28b84f8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7fb7c28b8740 <line:555:1, line:556:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28b85c0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7fb7c28b8618 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fb7c28b86a8 <line:556:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7fb7c28b9030 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28b8c50 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fb7c28b89f8 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fb7c28b8f50 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28b9030 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb7c28b92b8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28b96a0 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fb7c28b9370 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb7c28b93d8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fb7c28b9c38 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7fb7c28b9e80 <line:568:1, line:569:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7fb7c28b9cf0 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fb7c28b9d58 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fb7c28b9de8 <line:569:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fb7c28ba388 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7fb7c28ba558 <line:573:1, line:574:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7fb7c28ba440 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fb7c28ba4c0 <line:574:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7fb7c28baa18 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7fb7c28babe8 <line:577:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7fb7c28baad0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fb7c28bab50 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7fb7c28bae68 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28bae68 <line:578:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb7c28bb0a0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c0b08 <line:580:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28bb158 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fb7c28c0db0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c10f8 <line:582:1, line:583:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb7c28c0e68 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fb7c28c0ed8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fb7c28c1700 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c1cb8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fb7c28c17b8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fb7c28c1828 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fb7c28c1898 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fb7c28c1908 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fb7c28c25f0 <line:586:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7fb7c28c27c8 <line:590:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7fb7c28c26a8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fb7c28c2730 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7fb7c28c2a88 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28c2a88 <line:591:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb7c28c2cc0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c2f18 <line:593:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28c2d78 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fb7c28c31c0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c3508 <line:595:1, line:596:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb7c28c3278 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fb7c28c32e8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fb7c28c3b10 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c4068 <line:598:1, line:600:73> line:599:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fb7c28c3bc8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fb7c28c3c38 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fb7c28c3ca8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fb7c28c3d18 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fb7c28c5a00 <line:599:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7fb7c28c5bd8 <line:603:1, line:604:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7fb7c28c5ab8 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28c5b40 <line:604:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7fb7c28c6180 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7fb7c28c6388 <line:610:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7fb7c28c6238 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28c62f0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28c6600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28c6688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c68d8 <line:611:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28c6740 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28c6a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28c6bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7fb7c28c6db8 <line:620:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7fb7c28c6c68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28c6d20 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28c7030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28c70b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c7308 <line:621:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28c7170 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28c7448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28c75c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7fb7c28c77c8 <line:630:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7fb7c28c7678 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28c7730 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7fb7c28aec68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fb7c28aecb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7fb7c28aed58 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fb7c28c76c0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fb7c28c7678 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c19a3d38 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fb7c19a3f80 prev 0x7fb7c19a3d38 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7fb7c19a4058 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fb7c19a4020 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fb7c28c76c0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c28c7678 '_Tp'
| |   |       `-BuiltinType 0x7fb7c18328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28aef68 <line:631:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28aedd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28af0a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28af1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7fb7c28af288 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28aee10 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28aedd0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb7c28af540 <line:633:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28af300 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28af4e0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28af470 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28af6d8 <line:638:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7fb7c28af590 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28af640 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7fb7c28af950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fb7c28af998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7fb7c28afa40 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fb7c28af5d0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fb7c28af590 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c19a4140 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fb7c19a4390 prev 0x7fb7c19a4140 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7fb7c19a4468 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fb7c19a4430 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fb7c28af5d0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c28af590 '_Tp'
| |   |       `-BuiltinType 0x7fb7c18328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c9a88 <line:639:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28afab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28c9bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28c9d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7fb7c28c9da8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28afb00 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28afab8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb7c28ca060 <line:641:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28c9e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28ca000 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28c9f90 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28ca1f8 <line:646:1, line:647:80> line:646:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7fb7c28ca0b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28ca160 <col:22, line:647:80> line:646:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7fb7c28ca470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fb7c28ca4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7fb7c28ca810 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7fb7c28ca7a0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c19a3a58 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fb7c19a3c68 prev 0x7fb7c19a3a58 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7fb7c19a4550 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7fb7c19a4500 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7fb7c19a44e0 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7fb7c19a4468 'type'
| |   |         `-SubstTemplateTypeParmType 0x7fb7c19a4430 'double' sugar
| |   |           |-TemplateTypeParmType 0x7fb7c28af5d0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7fb7c28af590 '_Tp'
| |   |           `-BuiltinType 0x7fb7c18328e0 'double'
| |   |-TypeAliasTemplateDecl 0x7fb7c28caad0 <line:649:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28ca888 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28caa70 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28caa00 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28cac38 <line:654:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7fb7c28cab20 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28caba0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fb7c28caef0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7fb7c28cafc8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cafc8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb7c28cb230 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7fb7c28cb438 <line:657:1, line:658:63> line:657:50 is_void
| |   | |-TemplateTypeParmDecl 0x7fb7c28cb2e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28cb3a0 <col:22, line:658:63> line:657:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28cb6b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28cb918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7fb7c28cbb18 <line:667:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7fb7c28cba00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28cba80 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fb7c28cbdd0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7fb7c28cbed0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cbed0 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7fb7c28cc140 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7fb7c28cc348 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28cc1f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28cc2b0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28cc5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28cc828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7fb7c28cca98 <line:674:1, line:675:66> line:674:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28cc8e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28cca00 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28ccd10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28ccf28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7fb7c28cd0f8 <line:685:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7fb7c28ccfe0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28cd060 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fb7c28cd3b0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7fb7c28cd488 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28cd7c8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28cdb10 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28cde60 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28ce1a8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28ce4e8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28ce828 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28ceb88 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28ceed0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28cf220 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28cf570 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28cf8c0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28cfc10 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28cff60 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28d02b0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28d0620 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb7c28d0a00 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c19a4640 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fb7c19a4860 prev 0x7fb7c19a4640 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cd488 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7fb7c28cd6f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cd7c8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7fb7c28cda30 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cdb10 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7fb7c28cdd80 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cde60 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7fb7c28ce0d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28ce1a8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7fb7c28ce410 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28ce4e8 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7fb7c28ce750 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28ce828 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7fb7c28ceaa8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28ceb88 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7fb7c28cedf0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28ceed0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7fb7c28cf140 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cf220 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7fb7c28cf490 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cf570 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7fb7c28cf7e0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cf8c0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7fb7c28cfb30 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cfc10 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7fb7c28cfe80 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28cff60 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7fb7c28d01d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28d02b0 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7fb7c28d0520 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28d0620 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7fb7c28d0890 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28d0a00 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7fb7c28d0c70 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7fb7c28d0e78 <line:708:1, line:709:67> line:708:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7fb7c28d0d28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28d0de0 <col:22, line:709:67> line:708:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7fb7c28d10f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fb7c28d1358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c19a3808 <col:1, line:709:67> line:708:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fb7c19a4948 prev 0x7fb7c19a3808 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7fb7c28d1528 <line:718:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fb7c28d1410 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28d1490 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fb7c28d17e0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7fb7c28d18c0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7fb7c28d1c10 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7fb7c28d1f60 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28d18c0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7fb7c28d1b30 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28d1c10 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7fb7c28d1e80 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28d1f60 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7fb7c28d21d0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7fb7c28d23d8 <line:723:1, line:724:73> line:723:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fb7c28d2288 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d2340 <col:22, line:724:73> line:723:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28d2650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28d28b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7fb7c28d2ac8 <line:733:1, line:734:26> line:733:50 is_array
| |   | |-TemplateTypeParmDecl 0x7fb7c28d2970 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d2a30 <col:22, line:734:26> line:733:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28d2d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28d2dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28d3088 <line:735:1, line:736:25> line:735:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb7c28d2e80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28d31d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28d3350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28d36f8 <line:737:1, line:738:25> line:737:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb7c28d3408 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28d34b0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb7c28d3848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28d3a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7fb7c28d3bd8 <line:747:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28d3ab8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d3b40 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fb7c28d3e90 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28d40e8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fb7c28d3f48 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d4360 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7fb7c28d4568 <line:750:1, line:751:66> line:750:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28d4418 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d44d0 <col:22, line:751:66> line:750:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28d47e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28d5260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7fb7c28d5468 <line:760:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fb7c28d5318 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d53d0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28d56e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28d5768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28d59e8 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb7c28d5820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28d5b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28d5ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7fb7c28d5ea8 <line:763:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fb7c28d5d58 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d5e10 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28d6120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28d6a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28d6cb8 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c28d6ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28d6df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28d6f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7fb7c28d7178 <line:768:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7fb7c28d7028 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d70e0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28d73f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28d7478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28d76f8 <line:769:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb7c28d7530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28d7838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28d8a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28d8c88 <line:771:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c28d8ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28d8dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28d8f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7fb7c28d9148 <line:788:1, line:789:56> line:788:50 is_union
| |   | |-TemplateTypeParmDecl 0x7fb7c28d8ff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d90b0 <col:22, line:789:56> line:788:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28d93c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28d95a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7fb7c28d97a8 <line:808:1, line:809:56> line:808:50 is_class
| |   | |-TemplateTypeParmDecl 0x7fb7c28d9660 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28d9710 <col:22, line:809:56> line:808:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28d9a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28d9c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7fb7c28d9ec0 <line:831:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7fb7c28d9d00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c28d9d68 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fb7c28d9e28 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28da160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28da1e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28da4a0 <line:832:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c28da2a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28da608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28da7b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7fb7c28da868 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7fb7c28da8d0 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7fb7c28dba00 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7fb7c28dbd18 <line:844:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fb7c28dbab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fb7c28dbc80 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7fb7c28dbb78 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7fb7c28dbf58 <line:845:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7fb7c28dbd70 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fb7c28dbec0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7fb7c28dbe00 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7fb7c28dc118 <line:846:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fb7c28dbfb0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fb7c28dc080 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7fb7c28dc3d8 <line:847:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7fb7c28dc168 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fb7c28dc340 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7fb7c28dc208 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7fb7c28dc598 <line:848:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7fb7c28dc430 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7fb7c28dc500 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7fb7c28dcd70 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7fb7c28dc5e8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28dcc60 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c28dcc28 <col:29, line:855:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fb7c28dcaf8 <line:851:29, line:854:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7fb7c28dc9a8 <line:851:29, line:853:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7fb7c28dc878 <line:851:29, line:852:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7fb7c28dc728 <line:851:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7fb7c28dc838 <line:852:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7fb7c28dc968 <line:853:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fb7c28dcab8 <line:854:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c28dcbe8 <line:855:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28dccd8 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7fb7c28dd4c8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28dd760 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c28dd580 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28dda30 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7fb7c28ddc38 <line:861:1, line:862:41> line:861:50 is_function
| |   | |-TemplateTypeParmDecl 0x7fb7c28ddae8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28ddba0 <col:22, line:862:41> line:861:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28ddeb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28de628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7fb7c28de8d8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7fb7c28de6e0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28de758 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28de7c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7fb7c28de840 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7fb7c28dece0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7fb7c28deeb8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28ded98 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28dee20 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fb7c28df170 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28df4c8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fb7c28df228 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb7c28df298 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fb7c28df7c8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fb7c28dfa00 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28df880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28df930 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7fb7c28dfc80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28dffc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fb7c28e0198 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28e0078 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e0100 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fb7c28e0450 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28e0778 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fb7c28e0508 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c28e0578 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fb7c28e0a00 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7fb7c28e0c08 <line:901:1, line:902:73> line:901:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28e0ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e0b70 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28e0e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28e10e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7fb7c28e12e8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28e11a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e1250 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28e1560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28e1a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7fb7c28e1c08 <line:924:1, line:925:55> line:924:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7fb7c28e1ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e1b70 <col:22, line:925:55> line:924:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28e1e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28e2068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7fb7c28e2268 <line:950:1, line:952:70> line:950:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7fb7c28e2120 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e21d0 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28e24e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28e2918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7fb7c28e2b48 <line:961:1, line:964:66> line:961:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7fb7c28e2a00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e2ab0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28e2dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28e3318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7fb7c28e3518 <line:973:1, line:978:71> line:973:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7fb7c28e33d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28e3480 <col:22, line:978:71> line:973:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7fb7c28e3790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fb7c28e3f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7fb7c28e4090 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c28e4090 <line:980:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7fb7c28e41c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c28e4340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7fb7c28e4548 <line:989:1, line:993:63> line:989:50 is_object
| |   | |-TemplateTypeParmDecl 0x7fb7c28e43f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e44b0 <col:22, line:993:63> line:989:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28e47c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28e4e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7fb7c28e5068 <line:1002:1, line:1003:68> line:1002:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7fb7c28e4f20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e4fd0 <col:22, line:1003:68> line:1002:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28e52e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28e55d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7fb7c28e5690 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7fb7c28e57b8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7fb7c28e5ac0 <line:1014:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7fb7c28e5850 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fb7c28e5a28 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7fb7c28e58e8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7fb7c28e5c58 <line:1015:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7fb7c28e5b18 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7fb7c28e5bc0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7fb7c28e5de8 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7fb7c28e5cc8 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e5d50 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7fb7c28e6588 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7fb7c28e6b48 <line:1025:1, line:1028:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7fb7c28e6640 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28e6a38 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c28e6a00 <col:29, line:1027:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fb7c28e68c8 <line:1025:29, line:1026:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fb7c28e6778 <line:1025:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fb7c28e6888 <line:1026:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c28e69b8 <line:1027:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28e6ab0 <line:1028:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7fb7c28e6e10 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7fb7c28e6eb8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c28e6680 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28e6640 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28e7110 <line:1030:1, line:1031:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28e6f30 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28e73a0 <line:1031:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7fb7c28e7448 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7fb7c28e6f71 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7fb7c28e6f70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28e6f30 '_Tp'
| |   |-ClassTemplateDecl 0x7fb7c28e7608 <line:1033:1, line:1034:51> line:1033:50 add_const
| |   | |-TemplateTypeParmDecl 0x7fb7c28e74c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e7570 <col:22, line:1034:51> line:1033:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28e7880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28e78c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7fb7c28e7ec0 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7fb7c28e7e50 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c28e8180 <line:1037:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28e7f38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28e8120 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28e80b0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28e86d0 <line:1042:1, line:1045:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7fb7c28e81d0 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28e85c0 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c28e8588 <col:29, line:1044:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fb7c28e8458 <line:1042:29, line:1043:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fb7c28e8308 <line:1042:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fb7c28e8418 <line:1043:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c28e8548 <line:1044:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28e8638 <line:1045:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7fb7c28e9000 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7fb7c28e90a8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c28e8210 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28e81d0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28e9300 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28e9120 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28e9590 <line:1048:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7fb7c28e9638 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7fb7c28e9164 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7fb7c28e9160 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28e9120 '_Tp'
| |   |-ClassTemplateDecl 0x7fb7c28e97f8 <line:1050:1, line:1051:54> line:1050:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7fb7c28e96b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28e9760 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28e9a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28e9ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7fb7c28ea6a0 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7fb7c28ea630 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c28ea960 <line:1054:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28ea718 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28ea900 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28ea890 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28eaaf8 <line:1059:1, line:1060:78> line:1059:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7fb7c28ea9b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28eaa60 <col:22, line:1060:78> line:1059:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28ead70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28eadb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7fb7c28eb110 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fb7c28eb0a0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c28eb3d0 <line:1063:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28eb188 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28eb370 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28eb300 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28eb568 <line:1068:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7fb7c28eb420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28eb4d0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28ebe30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28ebe78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7fb7c28ebf20 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c28eb460 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28eb420 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28ec168 <line:1069:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb7c28ebf98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28ec2a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28ec3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fb7c28ec488 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28ebfe0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28ebf98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28ec6c8 <line:1071:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c28ec500 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28ec808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28ec940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fb7c28ec9e8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28ec540 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28ec500 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb7c28ed2a0 <line:1075:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28eca60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28ed240 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28ecbd0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28ed588 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fb7c28ed2f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28ed478 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c28ed428 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28ed4f0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fb7c28ed850 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7fb7c28ed8f8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c28ed330 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28ed2f0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28edb50 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c28ed970 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28edde0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7fb7c28edeb8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7fb7c28ede80 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7fb7c28ed9b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28ed970 '_Tp'
| |   |-ClassTemplateDecl 0x7fb7c28ee078 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fb7c28edf30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28edfe0 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28ee330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28ee378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7fb7c28ee710 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fb7c28ee6a0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c28ee9d0 <line:1087:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28ee788 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28ee970 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28ee900 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28eecb8 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fb7c28eea20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28eeba8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c28eeb58 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28eec20 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fb7c28eef80 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7fb7c28ef028 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c28eea60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28eea20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28f32d0 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c28ef0a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28f3560 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7fb7c28f3638 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7fb7c28f3600 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7fb7c28ef0e0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28ef0a0 '_Tp'
| |   |-ClassTemplateDecl 0x7fb7c28f37f8 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fb7c28f36b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28f3760 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28f3a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28f3ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7fb7c28f3e30 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fb7c28f3dc0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c28f40f0 <line:1099:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28f3ea8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28f4090 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28f4020 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fb7c28f43c8 <line:1106:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fb7c28f4140 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c28f4330 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7fb7c28f4200 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7fb7c28f4658 <line:1107:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fb7c28f4420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c28f45c0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7fb7c28f44b8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7fb7c28f4a50 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
| |   | |-TemplateTypeParmDecl 0x7fb7c28f46b0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c28f49b8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7fb7c28f4bb8 <line:1123:1, line:1126:1> line:1124:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7fb7c28f4aa0 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28f4b20 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7fb7c28f4e30 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7fb7c28f5190 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fb7c28f5120 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28f5338 <line:1128:1, line:1131:1> line:1129:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7fb7c28f5220 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28f52a0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7fb7c28f55b0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7fb7c28f5910 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fb7c28f58a0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c28f5bd0 <line:1134:1, line:1135:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28f5988 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28f5b70 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28f5b00 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28f5db0 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7fb7c28f5c20 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c28f5c88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fb7c28f5d18 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7fb7c28c8c88 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7fb7c28c8d40 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7fb7c28c8e68 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7fb7c28c8fa0 <line:1146:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7fb7c28c91b8 <line:1151:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28c9068 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28c9120 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28c9430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28c9478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7fb7c28c9520 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c28c90b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c28c9068 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28c9768 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fb7c28c9598 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28c98a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28f7c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fb7c28f7ca8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28c95e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28c9598 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28f7ee8 <line:1153:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7fb7c28f7d20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28f8028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28f8160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fb7c28f8208 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28f7d60 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28f7d20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28f8448 <line:1154:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7fb7c28f8280 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28f8588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28f86c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fb7c28f8768 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28f82c0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28f8280 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28f89a8 <line:1155:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7fb7c28f87e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c28f8ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c28f8c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fb7c28f8d10 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28f8820 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28f87e0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb7c28f8fd0 <line:1158:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28f8d88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28f8f70 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28f8f00 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28f95a0 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7fb7c28f9020 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28f9490 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c28f9458 <col:16, line:1165:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fb7c28f9158 <line:1164:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c28f9418 <line:1165:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28f9508 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7fb7c28f9860 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7fb7c28f9a80 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7fb7c28f9a30 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7fb7c28f99b0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28fad30 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28f9af8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c28fafc0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7fb7c28fb068 <line:1169:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c28f9b40 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c28f9af8 '_Tp'
| |   |-ClassTemplateDecl 0x7fb7c28fb228 <line:1171:1, line:1172:58> line:1171:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7fb7c28fb0e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28fb190 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fb7c28fb4a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c28fb4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7fb7c28fbab0 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fb7c28fba40 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c28fbdb0 <line:1175:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fb7c28fbb28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c28fbd50 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c28fbce0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c28fc098 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7fb7c28fbe00 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28fbf88 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c28fbf38 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28fc000 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7fb7c28fc5f8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28fc890 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28fc6b0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28fcb60 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7fb7c28fceb8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7fb7c28fcc20 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28fcda8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c28fcd58 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28fce20 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fb7c28fd3b8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28fd650 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28fd470 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28fd920 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7fb7c28fdb28 <line:1191:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7fb7c28fd9d8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28fda90 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb7c28fde30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c28fe0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7fb7c28fe408 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7fb7c28fe170 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28fe2f8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c28fe2a8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28fe370 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7fb7c28fe968 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28fec00 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28fea20 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28feed0 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7fb7c28ff228 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fb7c28fef88 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c28ff118 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c28ff0c8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c28ff190 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fb7c28ff728 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c28ff9c0 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c28ff7e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28ffca8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7fb7c28ffea8 <line:1211:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fb7c28ffd60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c28ffe10 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb7c2900120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c29003a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7fb7c29005a8 <line:1220:1, line:1221:44> line:1220:50 rank
| |   | |-TemplateTypeParmDecl 0x7fb7c2900460 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c2900510 <col:22, line:1221:44> line:1220:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fb7c2900820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c2901140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c29013d8 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb7c29011f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c2901528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c2901948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2901c88 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb7c2901a00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2901a78 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb7c2901dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c2902188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7fb7c2902438 <line:1234:1, line:1235:44> line:1234:68 extent
| |   | |-TemplateTypeParmDecl 0x7fb7c2902240 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c29022e0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7fb7c2902338 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7fb7c29022a8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7fb7c29023a0 <col:40, line:1235:44> line:1234:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fb7c2902700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c2902888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2902c00 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c2902940 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c2902d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c2903038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c29033c0 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2903268 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fb7c2903170 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fb7c29030f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2903170 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7fb7c2903528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c2903a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2903e30 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c2903b10 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2903b88 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb7c2903fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c29042b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c29046f0 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2904590 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fb7c2904458 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fb7c2904370 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c29043e8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2904458 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7fb7c2904858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c2904db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7fb7c2904fb8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7fb7c2904e70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c2904f20 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7fb7c2905230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c2905278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7fb7c2905320 <line:1253:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c2904eb0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c2904e70 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2905578 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb7c2905398 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c29056c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2905800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fb7c29058a8 <line:1255:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c29053e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c2905398 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2905c00 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb7c2905920 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2905998 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb7c2905d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2905e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fb7c2905f28 <line:1257:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb7c2905960 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c2905920 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb7c29061e0 <line:1260:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7fb7c2905fa0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c2906180 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c2906110 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c2906378 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7fb7c2906230 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c29062e0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7fb7c29065f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c2906638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7fb7c29066e0 <line:1266:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c2906270 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb7c2906230 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2906938 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb7c2906758 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c2906a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2906c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fb7c2906e00 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c2906d90 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2907108 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb7c2906e78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2906ef8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb7c2907258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2907390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fb7c2907550 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c29074e0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c29077d0 <line:1273:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7fb7c29075c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c2907770 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c2907700 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c29079a8 <line:1278:1, line:1281:1> line:1279:8 __decay
| |   | |-TemplateTypeParmDecl 0x7fb7c2907820 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2907898 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fb7c2907910 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7fb7c2908c90 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7fb7c2908e50 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7fb7c2908de0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c29090b0 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c2908ec8 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7fb7c2909340 <line:1284:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7fb7c29093d8 <line:1285:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7fb7c2909e70 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7fb7c2909e00 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c290a038 <line:1299:1, line:1306:1> line:1300:29 decay
| |   | |-TemplateTypeParmDecl 0x7fb7c2909ee8 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c2909fa0 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7fb7c290a2b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c290a2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7fb7c290a390 <line:1302:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7fb7c290a4e0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7fb7c290a470 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7fb7c290a538 <line:1304:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7fb7c290a900 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7fb7c290a890 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c290ac00 <line:1309:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7fb7c290a978 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c290ab60 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c290aaf0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c290ad98 <line:1314:1, line:1315:59> line:1314:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7fb7c290ac50 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c290ad00 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290b010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290b1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7fb7c290b3f8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7fb7c290b2b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c290b360 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290b670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290b858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7fb7c290ba58 <line:1333:1, line:1334:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7fb7c290b910 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c290b9c0 <col:22, line:1334:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290bce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290be68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7fb7c290c0e0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7fb7c290bf20 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fb7c290bf88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7fb7c290c048 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290c380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290c578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7fb7c290c7f0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7fb7c290c630 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fb7c290c698 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fb7c290c758 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290ca90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290de48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7fb7c290e048 <line:1489:1, line:1491:56> line:1490:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7fb7c290df00 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c290dfb0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290e2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290e4a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7fb7c290e6a8 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7fb7c290e560 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c290e610 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290e920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290eb08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7fb7c290ed08 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7fb7c290ebc0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c290ec70 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290ef80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290f168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7fb7c290f368 <line:1567:1, line:1568:59> line:1567:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7fb7c290f220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c290f2d0 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c290f5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c290f7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7fb7c290fa10 <line:1577:1, line:1582:1> line:1578:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7fb7c290f880 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb7c290f8e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7fb7c290f978 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7fb7c290fcf0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fb7c290fd98 <line:1580:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7fb7c290f8c0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fb7c290f880 '_Hp'
| |   | | `-TypedefDecl 0x7fb7c290fe00 <line:1581:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fb7c290f930 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c290f8e8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2913718 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2913930 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2913b40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2913d50 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2914000 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2914210 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2914420 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2914630 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2914840 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2914a50 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c18972e8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1897500 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1897710 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1897920 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1897b30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1897d40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7fb7c18a0088 prev 0x7fb7c1897d40 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fb7c18a0158 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7fb7c18a0120 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7fb7c290f8c0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fb7c290f880 '_Hp'
| |   | | |   `-BuiltinType 0x7fb7c1832780 'signed char'
| |   | | `-TypedefDecl 0x7fb7c18a01e8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7fb7c18a01b0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7fb7c290f930 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7fb7c290f8e8 '_Tp'
| |   | |     `-RecordType 0x7fb7c1897c30 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7fb7c1897b30 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1898040 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1898250 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1898460 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1898670 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c1898890 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c1898aa0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7fb7c18a7968 prev 0x7fb7c1898aa0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7fb7c18a7a38 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7fb7c18a7a00 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7fb7c290f8c0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fb7c290f880 '_Hp'
| |   |   |   `-BuiltinType 0x7fb7c1832820 'unsigned char'
| |   |   `-TypedefDecl 0x7fb7c18a7ac8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7fb7c18a7a90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7fb7c290f930 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7fb7c290f8e8 '_Tp'
| |   |       `-RecordType 0x7fb7c1898990 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7fb7c1898890 '__type_list'
| |   |-CXXRecordDecl 0x7fb7c290fe78 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7fb7c290ff98 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7fb7c2910098 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7fb7c2910240 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fb7c2910178 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7fb7c29103f0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fb7c2910300 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7fb7c29104e0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fb7c29104e0
| |   |-ClassTemplateDecl 0x7fb7c29106d8 <line:1594:1, line:1599:1> line:1595:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7fb7c29105b8 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c2910640 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7fb7c2910950 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7fb7c29109f8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7fb7c2910b28 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7fb7c2910b78 <line:1598:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fb7c2910600 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fb7c29105b8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2911100 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c29112d0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c29114a0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2911670 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2911840 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2911a10 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2913000 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c29131c8 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7fb7c2913388 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7fb7c2913550 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7fb7c2910c00 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7fb7c2910d28 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7fb7c2910dd8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7fb7c2910e40 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7fb7c2910f68 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7fb7c2911080 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7fb7c2914c60 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7fb7c2914b70 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7fb7c2914b50 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fb7c2914a50 '__type_list'
| |   |-ClassTemplateDecl 0x7fb7c2914e48 <line:1618:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7fb7c2914cb8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2914d38 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7fb7c2914db0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c29154b0 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2915350 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2915168 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fb7c29150e8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2915168 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7fb7c2915780 <line:1621:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fb7c2915bc0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7fb7c2915b50 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2916070 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2915ec0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2915d28 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fb7c2915c38 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb7c2915ca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2915d28 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7fb7c2916340 <line:1631:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fb7c2916990 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7fb7c2916920 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c2916b98 <line:1640:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7fb7c2916a08 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2916a88 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fb7c2916b00 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2917160 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2917000 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2916e78 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fb7c2916df8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2916e78 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fb7c2917648 <line:1643:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fb7c29178f8 <line:1645:1, line:1653:1> line:1646:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2917710 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2917778 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7fb7c29177e0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7fb7c2917860 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7fb7c2917c50 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7fb7c2917ce8 <line:1648:1, col:8> col:1 private
| |   |   |-VarDecl 0x7fb7c2917d20 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fb7c2917e48 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fb7c2917dd0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fb7c2917d80 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c29177e0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fb7c2917da8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2917778 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fb7c2917df8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c29177e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fb7c2917e20 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2917778 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7fb7c2917e88 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fb7c2917fb0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fb7c2917f38 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fb7c2917ee8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2917778 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fb7c2917f10 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c29177e0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fb7c2917f60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c29177e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fb7c2917f88 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2917778 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7fb7c2918000 <line:1651:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fb7c2918038 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7fb7c29181a8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7fb7c2918178 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7fb7c2918100 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7fb7c2918098 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2917710 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7fb7c29180e8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7fb7c29180c0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fb7c2917e88 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7fb7c2918128 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fb7c2917d20 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7fb7c2918150 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fb7c2917e88 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c29185c0 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2918460 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c29182c8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fb7c29181e0 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb7c2918248 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c29182c8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7fb7c2918ed8 <line:1656:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fb7c2919338 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2918fa0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fb7c29191f8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c29191a8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c29192a0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7fb7c2919620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c2919668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7fb7c2919920 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7fb7c29198b0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7fb7c2919bc0 <line:1663:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7fb7c2919af8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7fb7c2919ab8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7fb7c2919b98 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7fb7c2919bf8 <line:1664:5, line:1668:5> line:1664:11 union type definition
| |   |     |-CXXRecordDecl 0x7fb7c2919d18 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7fb7c2919dc0 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7fb7c291a428 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7fb7c291a930 <line:1672:1, line:1673:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291a4c0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291a688 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c291a638 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7fb7c291a8d0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7fb7c291a860 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c291abc0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c291aa30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c291a990 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291a990 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c291ad28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c291ae90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c291af48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c291b068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c291af28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7fb7c291b0b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c291b388 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c291ca60 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c291c8d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c291c830 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291c830 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c291cbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c291cd30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c291cde8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c291cf08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c291cdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7fb7c291cf58 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c291d228 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c291d4f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c291d360 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c291d2c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291d2c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c291d658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c291d800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c291d8b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c291d9d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c291d898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7fb7c291da28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c291dcf8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c291dfc0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c291de30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c291dd90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291dd90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c291e128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c291e290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c291e348 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c291e468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c291e328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7fb7c291e4b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c291e788 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c291ea60 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c291e8d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c291e830 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291e830 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c291ebc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c291ed30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c291ede8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c291ef08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c291edc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7fb7c291ef58 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c291f228 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c291f4f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c291f360 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c291f2c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291f2c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c291f658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c291f7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c291f878 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c291f998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c291f858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7fb7c291f9e8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c291fcb8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c291ff80 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c291fdf0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c291fd50 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7fb7c291fd50 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c29200e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2920250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c2920308 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c2920428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c29202e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7fb7c2920478 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c2920748 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2920a30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c29208a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2920800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2920800 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c2920b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2920d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c2920db8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c2920ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c2920d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7fb7c2920f28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c29211f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c29214c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2921330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2921290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2921290 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c2921628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2921790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c2921848 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c2921968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c2921828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7fb7c29219b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c2921c88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2921f50 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2921dc0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2921d20 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2921d20 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c29220b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2922220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c29222d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c29223f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c29222b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7fb7c2922448 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c2922718 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2922a30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c29228a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2922800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2922800 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c2922b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2922d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c2922db8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c2922ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c2922d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7fb7c2922f28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c29231f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c29234c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2923330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2923290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2923290 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c2923628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2923790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c2923848 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c2923968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c2923828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7fb7c29239b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c2923c88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c2923f50 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c2923dc0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c2923d20 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7fb7c2923d20 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c29240b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c2924220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c29242d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c29243f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c29242b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7fb7c2924448 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c2924718 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c188fa30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c188f8a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c188f800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7fb7c188f800 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c188fb98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c188fd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c188fdb8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c188fed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c188fd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7fb7c188ff28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c18901f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18904c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c1890330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1890290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1890290 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb7c1890628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c1890790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb7c1890848 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb7c1890968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb7c1890828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7fb7c18909b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb7c1890c88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7fb7c1890e98 <line:1711:1, line:1712:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1890d20 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1890d88 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7fb7c1890e00 <line:1712:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1891310 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c18911e8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1891178 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1891178 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7fb7c18915a0 <line:1715:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fb7c1891648 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7fb7c18916a8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1891178 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18856e0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c1885480 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1891700 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7fb7c18854a8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1891768 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7fb7c18854f8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7fb7c18854d0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1885400 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1891700 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1891768 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1885400 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7fb7c18859e0 <line:1721:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fb7c1885a88 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7fb7c1885fb8 <col:33, line:1724:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7fb7c1885b38 <line:1723:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7fb7c1885ae8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1891700 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7fb7c1885b10 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1891768 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7fb7c1885d48 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7fb7c1885f78 <line:1724:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fb7c1886238 <line:1727:1, line:1735:1> line:1728:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1886018 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fb7c1886070 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7fb7c18860d8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7fb7c18861a0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7fb7c18865d0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7fb7c1886678 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c18868d8 <col:43, line:1731:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1886928 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1886c08 <col:33, line:1733:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7fb7c1886eb0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7fb7c1886e40 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c18872d0 <line:1738:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1886f38 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fb7c1886f90 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7fb7c1887270 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7fb7c1887200 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c1887498 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7fb7c1887320 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c1887400 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7fb7c1887710 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7fb7c18877f8 <line:1746:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7fb7c1887938 <line:1747:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7fb7c18878a8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7fb7c1887ab8 <line:1748:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7fb7c18879e8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7fb7c1887c38 <line:1749:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7fb7c1887b70 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7fb7c1887db8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7fb7c1887cf0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7fb7c1887f38 <line:1751:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7fb7c1887e70 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7fb7c18880b8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7fb7c1887ff0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7fb7c1888238 <line:1753:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7fb7c1888170 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7fb7c18883b8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7fb7c18882f0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7fb7c1888500 <line:1755:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7fb7c1888470 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7fb7c1888648 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7fb7c18885b8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7fb7c1888908 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7fb7c18888d0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7fb7c1888860 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7fb7c18886e8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fb7c1888648 0x7fb7c1888500 0x7fb7c18883b8 0x7fb7c1888238 0x7fb7c18880b8 0x7fb7c1887f38 0x7fb7c1887db8 0x7fb7c1887c38 0x7fb7c1887ab8 0x7fb7c1887938 0x7fb7c18877f8
| |   | | |     `-CallExpr 0x7fb7c1888838 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7fb7c18887a0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fb7c28f4a50
| |   | | `-VarDecl 0x7fb7c1888970 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7fb7c1888b98 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1888b58 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7fb7c1888bf8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c1888bf8 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fb7c1888e20 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7fb7c1888ec8 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fb7c1888f28 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7fb7c1891ca0 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7fb7c1888fb8 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fb7c1889038 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fb7c18890b8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1891b80 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c1891b48 <col:18, line:1773:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7fb7c1889398 <line:1771:18, line:1772:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fb7c18891f8 <line:1771:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fb7c1889358 <line:1772:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1891b08 <line:1773:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c1891c08 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7fb7c1891fc0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7fb7c1892058 <line:1776:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fb7c1892090 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fb7c18920f0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18924e0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c1892128 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fb7c1892198 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7fb7c1892208 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7fb7c1892820 <line:1781:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fb7c18928b8 <line:1783:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fb7c1892e90 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fb7c1892e20 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fb7c1893440 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fb7c18933d0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7fb7c1894400 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7fb7c1893980 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7fb7c1894458 <line:1787:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fb7c1894658 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7fb7c1894620 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7fb7c18945b8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7fb7c1894538 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7fb7c18944b0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7fb7c1894510 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fb7c1894590 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7fb7c18946c0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fb7c1894720 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1894a90 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c1894758 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fb7c18947c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7fb7c1894dd0 <line:1793:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fb7c1894e68 <line:1795:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fb7c18952c0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fb7c1895250 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fb7c1895750 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fb7c18956e0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7fb7c18957a8 <line:1798:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fb7c1895928 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7fb7c18958f0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7fb7c1895888 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7fb7c1895800 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fb7c1895860 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7fb7c1895990 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fb7c18959f0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1895cf0 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c1895a28 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7fb7c1896030 <line:1804:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fb7c18960c8 <line:1806:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fb7c1896240 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7fb7c18961d0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7fb7c18962a8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fb7c1896308 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7fb7c1896968 <line:1811:1, line:1812:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7fb7c1896340 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fb7c18963b8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fb7c1896838 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb7c18968d0 <line:1812:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7fb7c1897198 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7fb7c1897f50 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fb7c1897e60 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fb7c1897e40 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fb7c1897d40 '__type_list'
| |   |-TypedefDecl 0x7fb7c1898cb0 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fb7c1898bc0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fb7c1898ba0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fb7c1898aa0 '__type_list'
| |   |-ClassTemplateDecl 0x7fb7c1899050 <line:1846:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7fb7c1898d08 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1898d88 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1898f38 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c1898f00 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7fb7c1898de0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1898d88 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7fb7c1898ee0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7fb7c1898fb8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1899778 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c18995a0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1899408 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c1899318 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb7c1899388 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1899408 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fb7c1899ab0 <line:1849:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fb7c1899b58 <line:1851:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7fb7c1899360 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c1899318 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189a028 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c1899e50 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb7c1899cb8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c1899bd0 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb7c1899c38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1899cb8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fb7c189a360 <line:1855:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fb7c189ae00 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7fb7c189a740 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c189b5c8 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7fb7c189ae78 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c189aee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fb7c189b1d8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c189b188 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7fb7c189b4a8 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c189b458 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c189b530 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7fb7c189b910 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7fb7c189b9b8 <line:1864:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7fb7c189af30 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb7c189aee8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189bd70 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c189ba30 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c189ba98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c189c0c0 <line:1868:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb7c189c168 <line:1870:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7fb7c189bae1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7fb7c189bae0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb7c189ba98 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189c520 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c189c1e0 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c189c248 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c189c870 <line:1874:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb7c189c918 <line:1876:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7fb7c189c294 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7fb7c189c290 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb7c189c248 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189ccd0 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c189c990 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c189c9f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c189d070 <line:1880:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb7c189d118 <line:1882:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7fb7c189ca45 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7fb7c189ca40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb7c189c9f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189d500 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c189d190 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c189d1f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c189d850 <line:1886:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb7c189d958 <line:1888:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7fb7c189d920 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7fb7c189d240 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb7c189d1f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189dd40 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c189d9d0 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c189da38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c189e090 <line:1892:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb7c189e198 <line:1894:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7fb7c189e160 'const _Up &' dependent
| |   |     `-QualType 0x7fb7c189da81 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7fb7c189da80 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fb7c189da38 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189e580 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c189e210 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c189e278 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c189e8d0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb7c189e9d8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7fb7c189e9a0 'volatile _Up &' dependent
| |   |     `-QualType 0x7fb7c189e2c4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7fb7c189e2c0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fb7c189e278 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189ee00 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c189ea50 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c189eab8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c189f150 <line:1904:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb7c189f258 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7fb7c189f220 'const volatile _Up &' dependent
| |   |     `-QualType 0x7fb7c189eb05 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7fb7c189eb00 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fb7c189eab8 '_Up'
| |   |-ClassTemplateDecl 0x7fb7c189f6a0 <line:1909:1, line:1910:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7fb7c189f2d0 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c189f590 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c189f558 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fb7c189f408 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c189f518 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fb7c189f608 <line:1910:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7fb7c189f960 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7fb7c18a05d0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a0938 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a0d18 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a2918 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a2cf8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a30d8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a34b8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a3898 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a3c78 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a4050 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7fb7c18a4418 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c189fc00 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c189fa18 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c189fe90 <line:1913:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a0520 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fb7c18a04b0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a05d0 <line:1918:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fb7c18a0840 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a0938 <line:1919:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a0bb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a0c60 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fb7c18327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a0d18 <line:1920:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a27b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a2860 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fb7c18327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a2918 <line:1921:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a2b90 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a2c40 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fb7c18327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a2cf8 <line:1922:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a2f70 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a3020 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fb7c18327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a30d8 <line:1923:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a3350 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a3400 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fb7c18327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a34b8 <line:1924:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a3730 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a37e0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fb7c18327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a3898 <line:1925:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a3b10 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a3bc0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fb7c1832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a3c78 <line:1926:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a3ef0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a3fa0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fb7c1832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a4050 <line:1928:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a42c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a4368 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fb7c28d05f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fb7c1832c60 '__int128_t'
| |   |     `-BuiltinType 0x7fb7c1832940 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a4418 <line:1929:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a46c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb7c18a4768 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fb7c28d05f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fb7c1832c60 '__int128_t'
| |   |     `-BuiltinType 0x7fb7c1832940 '__int128'
| |   |-ClassTemplateDecl 0x7fb7c18a4928 <line:1932:1, line:1936:1> line:1933:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7fb7c18a47e0 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18a4890 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7fb7c18a4ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c18a4be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7fb7c18a58a0 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fb7c18a5830 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c18a5b60 <line:1939:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7fb7c18a5918 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c18a5b00 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c18a5a90 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c18a5f80 <line:1942:1, line:1943:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fb7c18a5bb0 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18a5e70 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c18a5e38 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fb7c18a5ce8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c18a5df8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fb7c18a5ee8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7fb7c18a6240 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7fb7c18a7eb0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a8218 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a85f8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a89d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a8db8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18a9198 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18b1a00 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18b1dd8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18b21b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb7c18b2590 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7fb7c18b2958 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18a64e0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c18a62f8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c18a7770 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18a7e00 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fb7c18a7d90 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a7eb0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fb7c18a8120 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a8218 <line:1952:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a8490 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18a8540 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fb7c1832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a85f8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a8870 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18a8920 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fb7c1832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a89d8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a8c50 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18a8d00 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fb7c1832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a8db8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a9030 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18a90e0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fb7c1832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18a9198 <line:1956:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18a9410 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18a94c0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fb7c1832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18b1a00 <line:1957:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18b1c70 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18b1d20 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fb7c1832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18b1dd8 <line:1958:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18b2050 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18b2100 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fb7c18328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18b21b8 <line:1959:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18b2430 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18b24e0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fb7c18328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18b2590 <line:1961:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18b2800 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18b28a8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fb7c28d0960 '__uint128_t' sugar
| |   |     |-Typedef 0x7fb7c1832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7fb7c1832960 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18b2958 <line:1962:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18b2bd0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb7c18b2c78 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fb7c28d0960 '__uint128_t' sugar
| |   |     |-Typedef 0x7fb7c1832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7fb7c1832960 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7fb7c18b2e38 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fb7c18b2cf0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18b2da0 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7fb7c18b30b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c18b30f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7fb7c18b3cb0 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fb7c18b3c40 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c18b3f70 <line:1972:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7fb7c18b3d28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c18b3f10 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c18b3ea0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c18b4108 <line:2010:1, line:2011:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7fb7c18b3fc0 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7fb7c18b4070 <line:2011:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7fb7c18b43e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18b4428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18b46a8 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c18b44e0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c18b4818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c18b4af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fb7c18b4dc8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7fb7c18b4bb0 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18b4c18 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fb7c18b4c98 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb7c18b4d30 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7fb7c18b50a0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18b5898 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c18b5158 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18b51c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c18b5fc0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7fb7c18b6480 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7fb7c18b6410 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c18b7390 <line:2035:1, line:2043:6> line:2038:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7fb7c18b64f8 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18b6568 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fb7c18b6700 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c18b6920 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7fb7c18b7330 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7fb7c18b72c0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18b7698 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb7c18b73e0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18b7448 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7fb7c18b7848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c18b9cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fb7c18b9e98 <line:2051:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7fb7c18b9d78 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7fb7c18b9e00 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7fb7c18ba2b0 <line:2053:1, line:2054:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7fb7c18ba108 <line:2053:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18ba188 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb7c18ba218 <line:2054:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7fb7c18ba550 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18bada0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c18ba608 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18ba678 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb7c18bb120 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7fb7c18bb380 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7fb7c18bb310 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18bbc00 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c18bb3f8 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18bb468 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fb7c18bb4d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7fb7c18bc3e8 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18bc878 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb7c18bc4a0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18bc508 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fb7c18bc578 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7fb7c18bca68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c18bcf18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7fb7c18bd2b0 <line:2078:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7fb7c18bd000 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7fb7c18bd250 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7fb7c18bd1e0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c18bd490 <line:2085:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7fb7c18bd300 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18bd368 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18bd3f8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7fb7c18bd730 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7fb7c18bd7d8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb7c18bd3b0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb7c18bd368 '_Tp'
| |   |-FunctionTemplateDecl 0x7fb7c18bdfc8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fb7c18bd850 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18bd8b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7fb7c18bdf30 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7fb7c18bde18 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7fb7c18be238 <line:2091:1, line:2092:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fb7c18be020 <line:2091:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18be088 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7fb7c18be1a0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7fb7c18be728 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7fb7c18be288 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18be2f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18be610 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb7c18be5d8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fb7c18be438 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb7c18be598 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c18be690 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7fb7c18bec98 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18cc0a0 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c18bed50 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18bedb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb7c18cc3c0 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7fb7c18cc610 <line:2105:1, line:2107:46> line:2106:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c18cc478 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18cc4e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb7c18cc578 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7fb7c18ccca8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7fb7c18ccea8 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c18ccd60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18cce10 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18cd120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18cd688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7fb7c18cd888 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c18cd740 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18cd7f0 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18cdb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18cdec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7fb7c18ce098 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7fb7c18cdf80 <line:2149:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fb7c18ce000 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7fb7c18ce310 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7fb7c18ce3c0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7fb7c18327c0 'int'
| |   |-ClassTemplateDecl 0x7fb7c18ce558 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7fb7c18ce438 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18ce4c0 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7fb7c18ce7d0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7fb7c18ceee8 <line:2154:5, line:2157:5> line:2155:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb7c18ce868 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fb7c18cee50 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7fb7c18ced20 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7fb7c18cf078 <line:2159:5, line:2160:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb7c18cef40 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fb7c18cefe0 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7fb7c18cf0d8 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7fb7c18cf2c0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7fb7c18cf270 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7fb7c18cf250 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7fb7c18cf220 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7fb7c18cf160 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fb7c18cf078 0x7fb7c18ceee8
| |   |       |     `-IntegerLiteral 0x7fb7c18cf200 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7fb7c18cf2a0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7fb7c18cf498 <line:2165:1, line:2166:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7fb7c18cf308 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18cf388 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fb7c18cf400 <line:2166:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18cf8e0 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18cf6f8 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18d0418 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d06b0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c18d04d0 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18d09f0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7fb7c18d0c38 <line:2177:1, line:2178:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7fb7c18d0aa8 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18d0b28 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fb7c18d0ba0 <line:2178:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d1080 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18d0e98 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18d15c8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d1860 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c18d1680 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18d1ba0 <line:2184:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7fb7c18d1d78 <line:2186:1, line:2188:73> line:2187:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18d1c58 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c18d1ce0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7fb7c18d22a8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7fb7c18d28c8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d2528 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb7c18d2360 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18d27f0 <line:2191:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18d28c8 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb7c18d2b70 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7fb7c18d3038 <line:2207:1, line:2214:1> line:2210:1 move
| |   | |-TemplateTypeParmDecl 0x7fb7c18d2c28 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c18d2fa0 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fb7c18d2e18 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fb7c18d3350 <line:2211:1, line:2214:1>
| |   |   | |-DeclStmt 0x7fb7c18d3268 <line:2212:5, col:53>
| |   |   | | `-TypedefDecl 0x7fb7c18d3210 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7fb7c18d31a0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7fb7c18d3338 <line:2213:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fb7c18d3308 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fb7c18d32a0 <col:31> '_Tp' lvalue ParmVar 0x7fb7c18d2e18 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c18d3090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c18d30d8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c18d3780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
| |   | |-TemplateTypeParmDecl 0x7fb7c18d3378 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c18d36e8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fb7c18d35b0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7fb7c18d38b0 <line:2220:1, line:2222:1>
| |   |   | `-ReturnStmt 0x7fb7c18d3898 <line:2221:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fb7c18d3868 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fb7c18d3830 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fb7c18d35b0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7fb7c18d37d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c18d3820 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c18d3ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
| |   | |-TemplateTypeParmDecl 0x7fb7c18d38d0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c18d3c08 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fb7c18d3ad0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7fb7c18d4018 <line:2228:1, line:2232:1>
| |   |   | |-DeclStmt 0x7fb7c18d3f80 <line:2229:5, line:2230:60>
| |   |   | | `-StaticAssertDecl 0x7fb7c18d3f48 <line:2229:5, line:2230:59> line:2229:5
| |   |   | |   |-UnaryOperator 0x7fb7c18d3e58 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7fb7c18d3e18 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7fb7c18d3ef8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7fb7c18d4000 <line:2231:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fb7c18d3fd0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fb7c18d3f98 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fb7c18d3ad0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c18d3cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c18d3d40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c18d4400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7fb7c18d4040 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c18d4340 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7fb7c18d4228 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fb7c18d4618 <line:2281:1, line:2283:1>
| |   |   | `-ReturnStmt 0x7fb7c18d4600 <line:2282:5, col:35>
| |   |   |   `-CallExpr 0x7fb7c18d45d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fb7c18d4508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     `-DeclRefExpr 0x7fb7c18d45a8 <col:32> '_Tp' lvalue ParmVar 0x7fb7c18d4228 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c18d4458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c18d44a0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d4bb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18d4638 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18d46a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18d4718 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18d4ed0 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18d4f78 <line:2302:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fb7c18d46f0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fb7c18d46a8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18d4fe0 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18d4680 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18d4638 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18d50d8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18d4910 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18d48d0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18d4680 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18d4638 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18d47f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18d4760 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18d4718 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d56c8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18d5150 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18d51b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18d5228 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18d59e0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18d5a88 <line:2310:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fb7c18d5200 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fb7c18d51b8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18d5af0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18d5190 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18d5150 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18d5be8 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18d5420 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18d53e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18d5190 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18d5150 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18d5300 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18d5270 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18d5228 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d61d8 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18d5c60 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18d5cc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18d5d38 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18d6d50 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18d6df8 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fb7c18d5d11 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fb7c18d5d10 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18d5cc8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18d6e60 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18d5ca0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18d5c60 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18d6fc8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18d6f70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18d6f30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18d5ca0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18d5c60 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18d5e10 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18d5d80 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18d5d38 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d75b8 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18d7040 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18d70a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18d7118 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18d78d0 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18d7978 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fb7c18d70f1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fb7c18d70f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18d70a8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18d79e0 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18d7080 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18d7040 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18d7b48 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18d7af0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18d7ab0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18d7080 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18d7040 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18d71f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18d7160 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18d7118 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d8138 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18d7bc0 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18d7c28 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18d7c98 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18d8450 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18d84f8 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fb7c18d7c74 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fb7c18d7c70 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18d7c28 '_Class'
| |   | |-TypedefDecl 0x7fb7c18d8560 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18d7c00 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18d7bc0 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18d86c8 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18d8670 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18d8630 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18d7c00 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18d7bc0 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18d7d70 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18d7ce0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18d7c98 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18d9918 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18d8740 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18d87a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18d8818 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18d9c30 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18d9cd8 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fb7c18d87f4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fb7c18d87f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18d87a8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18d9d40 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18d8780 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18d8740 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18d9ea8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18d9e50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18d9e10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18d8780 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18d8740 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18d88f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18d8860 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18d8818 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18da498 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18d9f20 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18d9f88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18d9ff8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18da7b0 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18da858 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fb7c18d9fd5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fb7c18d9fd0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18d9f88 '_Class'
| |   | |-TypedefDecl 0x7fb7c18da8c0 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18d9f60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18d9f20 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18daa28 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18da9d0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18da990 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18d9f60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18d9f20 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18da0d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18da040 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18d9ff8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18db018 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18daaa0 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18dab08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18dab78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18db330 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18db3d8 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fb7c18dab55 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fb7c18dab50 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18dab08 '_Class'
| |   | |-TypedefDecl 0x7fb7c18db440 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18daae0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18daaa0 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18db5a8 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18db550 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18db510 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18daae0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18daaa0 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18dac50 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18dabc0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18dab78 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18dc798 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18db620 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18db688 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18db6f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18dcab0 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18dcb88 <line:2369:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fb7c18dcb50 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fb7c18db6d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18db688 '_Class'
| |   | |-TypedefDecl 0x7fb7c18dcbf0 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18db660 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18db620 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18dcd58 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18dcd00 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18dccc0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18db660 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18db620 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18db7d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18db740 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18db6f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18dd348 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18dcdd0 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18dce38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18dcea8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18dd660 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18dd738 <line:2377:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fb7c18dd700 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fb7c18dce80 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18dce38 '_Class'
| |   | |-TypedefDecl 0x7fb7c18dd7a0 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18dce10 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18dcdd0 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18dd908 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18dd8b0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18dd870 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18dce10 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18dcdd0 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18dcf80 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18dcef0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18dcea8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18ddef8 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18dd980 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18dd9e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18dda58 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18de210 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18de2e8 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fb7c18de2b0 'const _Class &' dependent
| |   | |   `-QualType 0x7fb7c18dda31 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fb7c18dda30 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18dd9e8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18de350 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18dd9c0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18dd980 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18df0f8 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18df0a0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18df060 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18dd9c0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18dd980 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18ddb30 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18ddaa0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18dda58 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18df6e8 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18df170 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18df1d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18df248 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18dfa00 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18dfad8 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fb7c18dfaa0 'const _Class &' dependent
| |   | |   `-QualType 0x7fb7c18df221 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fb7c18df220 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18df1d8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18dfb40 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18df1b0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18df170 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18dfca8 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18dfc50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18dfc10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18df1b0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18df170 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18df320 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18df290 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18df248 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e0298 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18dfd20 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18dfd88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18dfdf8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e05b0 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e0688 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fb7c18e0650 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fb7c18dfdd4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fb7c18dfdd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18dfd88 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e06f0 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18dfd60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18dfd20 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e0858 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18e0800 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e07c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18dfd60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18dfd20 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18dfed0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18dfe40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18dfdf8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e0e48 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e08d0 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e0938 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e09a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e1970 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e1a48 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fb7c18e1a10 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fb7c18e0984 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fb7c18e0980 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18e0938 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e1ab0 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e0910 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e08d0 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e1c18 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18e1bc0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e1b80 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e0910 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e08d0 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18e0a80 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18e09f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18e09a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e2208 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e1c90 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e1cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e1d68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e2520 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e25f8 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fb7c18e25c0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fb7c18e1d45 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fb7c18e1d40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18e1cf8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e2660 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e1cd0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e1c90 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e27c8 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18e2770 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e2730 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e1cd0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e1c90 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18e1e40 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18e1db0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18e1d68 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e2db8 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e2840 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e28a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e2918 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e30d0 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e31a8 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fb7c18e3170 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fb7c18e28f5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fb7c18e28f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18e28a8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e3210 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e2880 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e2840 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e3378 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18e3320 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e32e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e2880 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e2840 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18e29f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18e2960 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18e2918 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e4f98 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e33f0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e3458 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e34c8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e52b0 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e53b8 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fb7c18e5380 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fb7c18e34a0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18e3458 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e5420 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e3430 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e33f0 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e5588 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18e5530 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e54f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e3430 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e33f0 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18e35a0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18e3510 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18e34c8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e5b78 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e5600 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e5668 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e56d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e5e90 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e5f68 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fb7c18e5f30 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fb7c18e56b0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb7c18e5668 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e5fd0 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e5640 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e5600 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e6138 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18e60e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e60a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e5640 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e5600 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18e57b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18e5720 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18e56d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e6728 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e61b0 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e6218 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e6288 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e6a40 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e6b48 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fb7c18e6b10 'const _Class &&' dependent
| |   | |   `-QualType 0x7fb7c18e6261 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fb7c18e6260 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18e6218 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e6bb0 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e61f0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e61b0 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e6d18 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18e6cc0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e6c80 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e61f0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e61b0 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18e6360 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18e62d0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18e6288 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e7f08 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e6d90 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e7a00 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e7a68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e8220 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e82f8 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fb7c18e82c0 'const _Class &&' dependent
| |   | |   `-QualType 0x7fb7c18e7a41 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fb7c18e7a40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18e7a00 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e8360 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e6dd0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e6d90 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e84c8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18e8470 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e8430 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e6dd0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e6d90 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18e7b40 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18e7ab0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18e7a68 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e8ab8 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e8540 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e85a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e8618 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18e8dd0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18e8ed8 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fb7c18e8ea0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fb7c18e85f4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fb7c18e85f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18e85a8 '_Class'
| |   | |-TypedefDecl 0x7fb7c18e8f40 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e8580 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e8540 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18e90a8 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18e9050 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18e9010 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e8580 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e8540 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18e86f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18e8660 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18e8618 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18e9698 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18e9120 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18e9188 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18e91f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18ea200 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18ea2d8 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fb7c18ea2a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fb7c18e91d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fb7c18e91d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18e9188 '_Class'
| |   | |-TypedefDecl 0x7fb7c18ea340 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18e9160 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18e9120 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18ea4a8 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18ea450 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18ea410 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18e9160 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18e9120 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18e92d0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18e9240 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18e91f8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18eaa98 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18ea520 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18ea588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18ea5f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18eadb0 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18eaeb8 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fb7c18eae80 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fb7c18ea5d5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fb7c18ea5d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18ea588 '_Class'
| |   | |-TypedefDecl 0x7fb7c18eaf20 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18ea560 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18ea520 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18eb088 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb7c18eb030 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18eaff0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18ea560 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18ea520 '_Rp'
| |   |       `-PackExpansionType 0x7fb7c18ea6d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb7c18ea640 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb7c18ea5f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18eb678 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18eb100 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18eb168 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c18eb1d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb7c18eb990 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18eba68 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fb7c18eba30 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fb7c18eb1b5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fb7c18eb1b0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb7c18eb168 '_Class'
| |   | |-TypedefDecl 0x7fb7c18ebad0 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb7c18eb140 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18eb100 '_Rp'
| |   | `-TypedefDecl 0x7fb7c18ebc38 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb7c18ebbe0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb7c18ebba0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb7c18eb140 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb7c18eb100 '_Rp'
| |   |       |-PackExpansionType 0x7fb7c18eb2b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb7c18eb220 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb7c18eb1d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18ec008 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c18ebcb0 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c18ebd18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7fb7c18ecf50 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb7c18ecff8 <line:2759:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fb7c18ebd60 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fb7c18ebd18 '_Class'
| |   | `-TypedefDecl 0x7fb7c18ed060 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7fb7c18ebcf0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb7c18ebcb0 '_Rp'
| |   |-ClassTemplateDecl 0x7fb7c18ed1f8 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7fb7c18ed0d8 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7fb7c18ed160 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7fb7c18ed978 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7fb7c18edb48 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7fb7c18eda30 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7fb7c18edab0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7fb7c18eddc0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18ee0e8 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fb7c18ede78 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb7c18edee8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7fb7c18ee330 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7fb7c18ee3d8 <line:2780:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7fb7c18edf30 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fb7c18edee8 '_ClassType'
| |   |-ClassTemplateDecl 0x7fb7c18ee568 <line:2785:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7fb7c18ee450 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7fb7c18ee4d0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7fb7c18ee778 <line:2937:1, line:2940:1> line:2937:11 __is_construct
| |   | `-CXXRecordDecl 0x7fb7c18ee7e0 <line:2939:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7fb7c18ee908 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7fb7c18eeb80 <line:3059:1, line:3062:6> line:3060:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18ee9c0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18eea28 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c18eeae8 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18ef290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18ef498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7fb7c18ef698 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18ef550 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18ef600 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18ef910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18efa78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7fb7c18efc78 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18efb30 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18efbe0 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18efef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18f02e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7fb7c18f04e8 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18f03a0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18f0450 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18f0760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18f0a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7fb7c18f0cc0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18f0b00 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18f0b68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c18f0c28 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18f0fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18f5200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7fb7c18f5408 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18f52b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18f5370 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18f5680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18f57e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7fb7c18f59e8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18f58a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18f5950 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18f5c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18f5fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7fb7c18f61d8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18f6090 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18f6140 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18f6450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18f6738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7fb7c18f6980 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c18f67f0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18f6858 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb7c18f68e8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7fb7c18f6dd8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7fb7c18f6fd8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c18f6e90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18f6f40 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18f9468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18f9938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7fb7c18f9b38 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c18f99f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18f9aa0 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18f9db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18fa178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7fb7c18fa378 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18fa230 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18fa2e0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18fa5f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18fa938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7fb7c18fac60 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18faa00 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18faa68 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7fb7c18faac0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18fab28 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c18fabc8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18fb400 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fb7c18fafa8 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18fb018 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c18fba48 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7fb7c18fbd30 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7fb7c18fbb00 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c18fbc98 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7fb7c18fbb90 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7fb7c18fbd88 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18fc110 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb7c18fbda0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18fbe08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb7c18fc7c8 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18fcca0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c18fc9f8 <col:69> '_Bool' NonTypeTemplateParm 0x7fb7c18fc8f8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb7c18fc880 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18fc8f8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7fb7c18fc950 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c18fd040 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fb7c18fd2c0 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18fd0f8 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c18fd168 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c18fd228 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18fd6b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18fdc08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18fdf70 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7fb7c18fdcc0 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18fdd38 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fb7c18fe0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c18fe618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fb7c18fe818 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18fe6d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18fe780 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18fea90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c18febf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7fb7c18fedf8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c18fecb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c18fed60 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c18ff070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c1901478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7fb7c1901678 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fb7c1901530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c19015e0 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c19018f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c1901bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7fb7c1901e98 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1901ca0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb7c1901cf8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c1901d68 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7fb7c1901e00 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1902408 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb7c1902138 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c19021a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb7c1902730 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1902ab8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb7c19027e8 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c1902858 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb7c1903158 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fb7c1906400 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c1903210 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb7c1903278 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb7c1903338 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7fb7c19066a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c1906a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fb7c1906c18 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c1906ad0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1906b80 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c1906e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c1907368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7fb7c1907568 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fb7c1907420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c19074d0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c19077e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c1907ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7fb7c1907df0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1907c70 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb7c1907cc8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1907d58 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1908230 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c1908048 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1908500 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c19087a0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c19085b8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1908d48 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fb7c1908f48 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7fb7c1908e00 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1908eb0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb7c19091c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c1909478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c19097b8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb7c1909530 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c19095a8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fb7c1909908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c1909af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1909d78 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb7c1909bb0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c1909eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c190a030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c190a2b8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c190a0e8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c190a400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c190a580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fb7c190a788 <line:3925:1, line:3926:54> line:3925:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7fb7c190a638 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c190a6f0 <col:22, line:3926:54> line:3925:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c190aa00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c190abe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7fb7c190ade8 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7fb7c190aca0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c190ad50 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c190b060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c190b248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7fb7c190b448 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7fb7c190b300 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c190b3b0 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c190b6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c190b8a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7fb7c190baa8 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7fb7c190b960 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c190ba10 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c190bd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c190bf08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7fb7c190c108 <line:3993:1, line:4000:6> line:3993:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7fb7c190bfc0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c190c070 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb7c190c380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb7c190e578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7fb7c190e748 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7fb7c190e630 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c190e6b0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fb7c190ea00 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c190ecd8 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7fb7c190eab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c190ef80 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7fb7c190f158 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fb7c190f038 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c190f0c0 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7fb7c190f5e8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7fb7c190f7b8 <line:4016:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7fb7c190f6a0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7fb7c190f720 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7fb7c190fa38 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c190fa38 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb7c190fc30 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1910098 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb7c190fce8 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb7c190fd58 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7fb7c190fdc8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7fb7c19106e0 <line:4024:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c19109a8 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c1910798 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7fb7c1910d68 <line:4031:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1910f68 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c1910e20 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c19111d0 <line:4037:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7fb7c19113b8 <line:4039:5, col:60> col:5
| |   |   |-BinaryOperator 0x7fb7c19112d0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7fb7c1911278 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7fb7c19112b8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7fb7c1911298 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7fb7c1911378 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c19115d8 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb7c1911410 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1911928 <line:4043:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1911ba8 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c19119e0 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1911ef8 <line:4049:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1912800 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fb7c1911fb0 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1912018 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1912b68 <line:4055:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1912f88 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fb7c1912c20 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1913210 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c19135d8 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fb7c19132c8 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1913338 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1913938 <line:4066:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1913c78 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fb7c19139f0 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1913ef0 <line:4072:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c19143f8 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7fb7c1913fa8 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1914018 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1914088 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1914800 <line:4077:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1914d08 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7fb7c19148b8 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1914928 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1914998 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1915078 <line:4083:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1915578 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7fb7c1915130 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1915198 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1915208 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c19158e8 <line:4089:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1915de8 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7fb7c19159a0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1915a08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1915a78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1916158 <line:4095:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1916658 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7fb7c1916210 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1916278 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c19162e8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c19173d8 <line:4101:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c19178d8 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7fb7c1917490 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c19174f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1917568 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1917c48 <line:4107:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1918148 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7fb7c1917d00 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1917d68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1917dd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c19184b8 <line:4113:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c19189b8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7fb7c1918570 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c19185d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1918648 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1918d28 <line:4119:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1919240 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c1918de0 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1918e48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1918eb8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c19195a8 <line:4125:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1919aa8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c1919660 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c19196c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1919738 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c1919e18 <line:4131:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c191a318 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c1919ed0 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c1919f38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c1919fa8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c191a688 <line:4137:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c191ab88 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fb7c191a740 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c191a7a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb7c191a818 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb7c191aef8 <line:4143:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c191b288 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fb7c191afb0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb7c191b018 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fb7c191b5e8 <line:4149:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7fb7c191c2a0 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7fb7c191b6a0 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c191b708 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c191b8a0 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c191ba30 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c191bc50 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fb7c191c240 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb7c191c1d0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c191cbf0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7fb7c191c2f0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c191c358 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c191c4f0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c191c680 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fb7c191cb90 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb7c191cb20 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c191ea10 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7fb7c191cc40 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c191cca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c191ce40 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c191cfd0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c191d160 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fb7c191e9b0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb7c191e940 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c191f530 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7fb7c191ea60 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c191eac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c191ec60 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c191edf0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c191ef80 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fb7c191f4d0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb7c191f460 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c191fe10 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7fb7c191f580 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c191f5e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c191f780 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c191f910 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fb7c191fdb0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb7c191fd40 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb7c1921a50 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7fb7c191fe60 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c191fec8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c1920060 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c19201f0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fb7c1920380 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fb7c19219f0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb7c1921980 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7fb7c1921e48 <line:4223:1, line:4224:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb7c1921aa0 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fb7c1921db0 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fb7c1921b30 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fb7c1921c68 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fb7c1922198 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb7c1921ea8 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fb7c1922100 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fb7c1921f40 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fb7c1922018 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fb7c1925ae8 <line:4231:1, line:4221:27> line:4235:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb7c19221f8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1922268 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c19222d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb7c1922e28 <line:4232:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c1925a50 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb7c1922f38 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c1922fd8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb7c1923118 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb7c1925f38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1925f20 <col:7, line:4236:88>
| |   |   |   `-CallExpr 0x7fb7c1925ef0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb7c1925d60 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb7c1925d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fb7c1925ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fb7c1925c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     |   | `-DeclRefExpr 0x7fb7c1925cb8 <col:44> '_A0' lvalue ParmVar 0x7fb7c1922fd8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb7c1925d10 <col:51> '_Fp' lvalue ParmVar 0x7fb7c1922f38 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb7c1925ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c1925ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb7c1925dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |         `-DeclRefExpr 0x7fb7c1925e78 <col:78> '_Args &&...' lvalue ParmVar 0x7fb7c1923118 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb7c1925b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1925b98 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1927400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb7c1925f58 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1925fc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c1926038 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb7c1926868 <line:4239:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c1927340 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb7c1926978 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c1926a18 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb7c1926af8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb7c1927850 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1927838 <col:7, line:4243:88>
| |   |   |   `-CallExpr 0x7fb7c1927808 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb7c1927678 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb7c1927650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fb7c19275f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fb7c1927530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     |   | `-DeclRefExpr 0x7fb7c19275d0 <col:44> '_A0' lvalue ParmVar 0x7fb7c1926a18 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb7c1927628 <col:51> '_Fp' lvalue ParmVar 0x7fb7c1926978 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb7c19277e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c19277b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb7c19276f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |         `-DeclRefExpr 0x7fb7c1927790 <col:78> '_Args &&...' lvalue ParmVar 0x7fb7c1926af8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb7c1927468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c19274b0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1928c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb7c1927870 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c19278d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c1927948 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb7c1928208 <line:4246:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c1928bf0 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb7c1928318 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c19283b8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb7c1928498 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb7c1929018 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1929000 <col:7, line:4250:73>
| |   |   |   `-CallExpr 0x7fb7c1928fd0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb7c1928e40 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb7c1928e18 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fb7c1928dc8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fb7c1928d70 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fb7c1928d48 <col:24> '_A0' lvalue ParmVar 0x7fb7c19283b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb7c1928df0 <col:36> '_Fp' lvalue ParmVar 0x7fb7c1928318 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb7c1928fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c1928f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb7c1928eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |         `-DeclRefExpr 0x7fb7c1928f58 <col:63> '_Args &&...' lvalue ParmVar 0x7fb7c1928498 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb7c1928cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1928d38 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c192a1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb7c1929038 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c19290a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c1929118 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb7c1929808 <line:4253:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c192a160 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb7c1929918 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c19299b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb7c1929a98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb7c192a588 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c192a570 <col:7, line:4257:73>
| |   |   |   `-CallExpr 0x7fb7c192a540 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb7c192a3b0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb7c192a388 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fb7c192a338 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fb7c192a2e0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fb7c192a2b8 <col:24> '_A0' lvalue ParmVar 0x7fb7c19299b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb7c192a360 <col:36> '_Fp' lvalue ParmVar 0x7fb7c1929918 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb7c192a520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c192a4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb7c192a428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |         `-DeclRefExpr 0x7fb7c192a4c8 <col:63> '_Args &&...' lvalue ParmVar 0x7fb7c1929a98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb7c192a260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c192a2a8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c192be08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb7c192a5a8 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c192a618 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c192a688 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb7c192b1b8 <line:4260:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c192bd70 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb7c192b2c8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c192b368 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb7c192b448 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb7c192c280 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c192c268 <col:7, line:4264:91>
| |   |   |   `-CallExpr 0x7fb7c192c238 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb7c192c0a8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb7c192c080 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fb7c192c038 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fb7c192c018 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fb7c192bfe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fb7c192bf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     |   |     `-DeclRefExpr 0x7fb7c192bfc0 <col:46> '_A0' lvalue ParmVar 0x7fb7c192b368 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb7c192c058 <col:54> '_Fp' lvalue ParmVar 0x7fb7c192b2c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb7c192c218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c192c1e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb7c192c120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |         `-DeclRefExpr 0x7fb7c192c1c0 <col:81> '_Args &&...' lvalue ParmVar 0x7fb7c192b448 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb7c192be70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c192beb8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c192d8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb7c192c2a0 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c192c308 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c192c378 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb7c192cd08 <line:4267:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c192d830 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb7c192ce18 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c192ceb8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb7c192cf98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb7c192dd40 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c192dd28 <col:7, line:4271:91>
| |   |   |   `-CallExpr 0x7fb7c192dcf8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb7c192db68 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb7c192db40 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fb7c192daf8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fb7c192dad8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fb7c192daa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fb7c192d9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     |   |     `-DeclRefExpr 0x7fb7c192da80 <col:46> '_A0' lvalue ParmVar 0x7fb7c192ceb8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb7c192db18 <col:54> '_Fp' lvalue ParmVar 0x7fb7c192ce18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb7c192dcd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c192dca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb7c192dbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |         `-DeclRefExpr 0x7fb7c192dc80 <col:81> '_Args &&...' lvalue ParmVar 0x7fb7c192cf98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb7c192d930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c192d978 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c192ef38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb7c192dd60 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c192ddc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c192e7f8 <line:4276:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c192eea0 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb7c192e8f8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c192e998 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb7c192f1a8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c192f190 <col:7, line:4280:50>
| |   |   |   `-BinaryOperator 0x7fb7c192f168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fb7c192f110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fb7c192f048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     | `-DeclRefExpr 0x7fb7c192f0e8 <col:43> '_A0' lvalue ParmVar 0x7fb7c192e998 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb7c192f140 <col:50> '_Fp' lvalue ParmVar 0x7fb7c192e8f8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c192ef98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c192efe0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1930148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb7c192f1c8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c192f238 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c192fa88 <line:4283:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c19300b0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb7c192fb88 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c192fc28 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb7c19303b8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c19303a0 <col:7, line:4287:50>
| |   |   |   `-BinaryOperator 0x7fb7c1930378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fb7c1930320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fb7c1930258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     | `-DeclRefExpr 0x7fb7c19302f8 <col:43> '_A0' lvalue ParmVar 0x7fb7c192fc28 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb7c1930350 <col:50> '_Fp' lvalue ParmVar 0x7fb7c192fb88 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c19301a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c19301f0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1931298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb7c19303d8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1930448 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c1930ca8 <line:4290:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c1931200 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb7c1930da8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c1930e48 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb7c1931468 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1931450 <col:7, line:4294:35>
| |   |   |   `-BinaryOperator 0x7fb7c1931428 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fb7c19313d0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fb7c1931378 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fb7c1931350 <col:23> '_A0' lvalue ParmVar 0x7fb7c1930e48 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb7c1931400 <col:35> '_Fp' lvalue ParmVar 0x7fb7c1930da8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c19312f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1931340 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1932158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb7c1931488 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c19314f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c1931be8 <line:4297:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c19320c0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb7c1931ce8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c1931d88 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb7c1932320 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1932308 <col:7, line:4301:35>
| |   |   |   `-BinaryOperator 0x7fb7c19322e0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fb7c1932290 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fb7c1932238 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fb7c1932210 <col:23> '_A0' lvalue ParmVar 0x7fb7c1931d88 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb7c19322b8 <col:35> '_Fp' lvalue ParmVar 0x7fb7c1931ce8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c19321b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1932200 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1933698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb7c1932340 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c19323a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c1932ed8 <line:4304:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c1933600 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb7c1932fd8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c1933078 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb7c1933948 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1933930 <col:7, line:4308:53>
| |   |   |   `-BinaryOperator 0x7fb7c1933908 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fb7c19338c0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fb7c19338a0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fb7c1933870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fb7c19337a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     |     `-DeclRefExpr 0x7fb7c1933848 <col:45> '_A0' lvalue ParmVar 0x7fb7c1933078 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb7c19338e0 <col:53> '_Fp' lvalue ParmVar 0x7fb7c1932fd8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c19336f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1933740 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1934aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb7c1933968 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c19339d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb7c1934368 <line:4311:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb7c1934a10 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb7c1934468 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c1934508 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb7c1934d58 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1934d40 <col:7, line:4315:53>
| |   |   |   `-BinaryOperator 0x7fb7c1934d18 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fb7c1934cd0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fb7c1934cb0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fb7c1934c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fb7c1934bb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     |     `-DeclRefExpr 0x7fb7c1934c58 <col:45> '_A0' lvalue ParmVar 0x7fb7c1934508 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb7c1934cf0 <col:53> '_Fp' lvalue ParmVar 0x7fb7c1934468 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb7c1934b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1934b50 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1936878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb7c1934d78 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1934de8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fb7c19367e0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb7c1934ee8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c1935028 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb7c1936c38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1936c20 <col:7, line:4323:80>
| |   |   |   `-CallExpr 0x7fb7c1936bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fb7c1936a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fb7c1936988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     | `-DeclRefExpr 0x7fb7c1936a28 <col:43> '_Fp' lvalue ParmVar 0x7fb7c1934ee8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb7c1936bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c1936ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb7c1936ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |         `-DeclRefExpr 0x7fb7c1936b78 <col:70> '_Args &&...' lvalue ParmVar 0x7fb7c1935028 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb7c19368d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1936920 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c1937668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb7c1936c58 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1936cc8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fb7c19375d0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb7c1936dc8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb7c1936ea8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb7c1937a28 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb7c1937a10 <col:7, line:4329:80>
| |   |   |   `-CallExpr 0x7fb7c19379e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fb7c1937840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fb7c1937778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |     | `-DeclRefExpr 0x7fb7c1937818 <col:43> '_Fp' lvalue ParmVar 0x7fb7c1936dc8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb7c19379c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c1937990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb7c19378c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb7c18d3780 0x7fb7c18d3ca0
| |   |   |         `-DeclRefExpr 0x7fb7c1937968 <col:70> '_Args &&...' lvalue ParmVar 0x7fb7c1936ea8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb7c19376c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1937710 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fb7c1937c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7fb7c1937a48 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb7c1937ab8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1937b28 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c1937bc0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7fb7c1938078 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7fb7c19384b8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7fb7c1938480 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7fb7c1938400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fb7c1938140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fb7c1921e48 0x7fb7c1925ae8 0x7fb7c1928c88 0x7fb7c192be08 0x7fb7c192ef38 0x7fb7c1931298 0x7fb7c1933698 0x7fb7c1936878
| |   |   |     |-CallExpr 0x7fb7c19382a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7fb7c1938210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   |   |     `-PackExpansionExpr 0x7fb7c19383d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb7c19383a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7fb7c1938310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   |   `-VarDecl 0x7fb7c1938528 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fb7c1938e40 <line:4343:9, line:4351:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7fb7c1939258 <line:4354:1, line:4355:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7fb7c1938ea0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1938f08 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7fb7c19391f8 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fb7c19390c0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fb7c19395c8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c19392b8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1939320 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7fb7c1939378 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb7c19393e8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1939458 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c1939530 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7fb7c19399e0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7fb7c1939a88 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fb7c1939ae8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1939fb8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb7c1939b20 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb7c1939b88 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c1939bf8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fb7c193b600 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7fb7c193b6a8 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7fb7c193a120 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7fb7c1939fb8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7fb7c193b960 <line:4367:5, line:4368:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7fb7c193b700 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fb7c193b8c8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7fb7c193b790 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7fb7c193b9c8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fb7c193bea8 <col:31, line:4371:76> '_Bool'
| |   |     `-CallExpr 0x7fb7c193be78 <line:4370:40, line:4371:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fb7c193bac8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fb7c193b960
| |   |       `-CallExpr 0x7fb7c193be40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7fb7c193bb90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fb7c1921e48 0x7fb7c1925ae8 0x7fb7c1928c88 0x7fb7c192be08 0x7fb7c192ef38 0x7fb7c1931298 0x7fb7c1933698 0x7fb7c1936878
| |   |         |-CallExpr 0x7fb7c193bcf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7fb7c193bc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   |         `-PackExpansionExpr 0x7fb7c193be20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
| |   |           `-CallExpr 0x7fb7c193bdf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7fb7c193bd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c193c388 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb7c193bef0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb7c193bf58 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c193bfc8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fb7c193c760 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7fb7c193c808 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fb7c193cb80 <col:31, line:4378:75> '_Bool'
| |   |     `-CallExpr 0x7fb7c193cb48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fb7c193c898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fb7c1921e48 0x7fb7c1925ae8 0x7fb7c1928c88 0x7fb7c192be08 0x7fb7c192ef38 0x7fb7c1931298 0x7fb7c1933698 0x7fb7c1936878
| |   |       |-CallExpr 0x7fb7c193ca00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7fb7c193c968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   |       `-PackExpansionExpr 0x7fb7c193cb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
| |   |         `-CallExpr 0x7fb7c193cb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7fb7c193ca68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   |-TypeAliasTemplateDecl 0x7fb7c193d3d8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7fb7c193cbc8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb7c193cc38 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c193cca8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7fb7c193d378 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fb7c193d1b0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fb7c193cf10 <line:4384:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fb7c193d030 <line:4385:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fb7c193d600 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7fb7c193d428 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c193d498 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb7c193d528 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7fb7c193e068 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c193e428 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fb7c193e120 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb7c193e188 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7fb7c193e580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb7c193e7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7fb7c193eaf0 <line:4406:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7fb7c193e8b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c193ea90 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c193ea20 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c193ec58 <line:4440:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fb7c193eb40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c193ebc0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7fb7c193ef88 <line:4441:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fb7c193ee68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c193eef0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7fb7c193fb68 <line:4443:1, line:4460:1> line:4454:1 swap
| |   | |-TemplateTypeParmDecl 0x7fb7c193f198 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c193fad0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fb7c193f6b8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7fb7c193f728 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7fb7c1940048 <line:4456:1, line:4460:1>
| |   |   | |-DeclStmt 0x7fb7c193fdd0 <line:4457:5, col:30>
| |   |   | | `-VarDecl 0x7fb7c193fcb8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7fb7c193fda0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7fb7c193fd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7fb7c193fc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fb7c18d3038
| |   |   | |       `-DeclRefExpr 0x7fb7c193fd18 <col:25> '_Tp' lvalue ParmVar 0x7fb7c193f6b8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7fb7c193fef0 <line:4458:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7fb7c193fde8 <col:5> '_Tp' lvalue ParmVar 0x7fb7c193f6b8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7fb7c193fec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7fb7c193fe40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fb7c18d3038
| |   |   | |   `-DeclRefExpr 0x7fb7c193fe98 <col:23> '_Tp' lvalue ParmVar 0x7fb7c193f728 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7fb7c1940020 <line:4459:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7fb7c193ff18 <col:5> '_Tp' lvalue ParmVar 0x7fb7c193f728 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7fb7c193fff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fb7c193ff70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fb7c18d3038
| |   |   |     `-DeclRefExpr 0x7fb7c193ffc8 <col:23> '_Tp' lvalue Var 0x7fb7c193fcb8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fb7c193fbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c193fc10 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c19409d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
| |   | |-TemplateTypeParmDecl 0x7fb7c1940078 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c19400f8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7fb7c1940940 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fb7c1940598 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7fb7c19406e8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7fb7c1940a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c1940a80 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c19410f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7fb7c1940a90 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7fb7c1940af8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7fb7c1941060 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7fb7c1940bc8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7fb7c1940c38 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7fb7c19412d8 <line:4476:1, line:4478:1>
| |   |   | `-CallExpr 0x7fb7c19412a0 <line:4477:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7fb7c19411b0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fb7c19409d8 0x7fb7c193fb68
| |   |   |   |-UnaryOperator 0x7fb7c1941238 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7fb7c1941210 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fb7c1940bc8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7fb7c1941280 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7fb7c1941258 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fb7c1940c38 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7fb7c1941158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c19411a0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7fb7c19412f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
| |   | |-ClassTemplateDecl 0x7fb7c19417f8 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fb7c1941360 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fb7c19413d8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fb7c19416e0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7fb7c19416a8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7fb7c1941558 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7fb7c1941518 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7fb7c1941688 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7fb7c1941648 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fb7c1941760 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fb7c1941b00 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7fb7c19421b8 <line:4490:5, line:4492:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fb7c1941b98 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7fb7c1941c08 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7fb7c1942120 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7fb7c1941f78 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7fb7c1942478 <line:4493:5, line:4494:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fb7c1942210 <line:4493:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7fb7c1942278 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7fb7c19423e0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7fb7c1942320 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7fb7c19426c8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7fb7c1942690 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fb7c1942628 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fb7c19425f8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fb7c1942508 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fb7c1942478 0x7fb7c19421b8
| |   | |   |       `-IntegerLiteral 0x7fb7c19425d8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7fb7c1942918 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7fb7c19428e0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fb7c1942878 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fb7c1942848 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fb7c1942758 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fb7c1942478 0x7fb7c19421b8
| |   | |   |       `-IntegerLiteral 0x7fb7c1942828 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7fb7c1942980 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fb7c1942db8 <col:31, line:4501:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7fb7c1942ba8 <line:4500:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7fb7c1942b68 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7fb7c1942d98 <line:4501:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7fb7c1942d58 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7fb7c19430c8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7fb7c1942e00 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fb7c1942e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7fb7c19433f0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7fb7c1943f40 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fb7c19434a8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fb7c1943528 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fb7c1943e28 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7fb7c1943dd8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fb7c1943ea8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fb7c1944240 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7fb7c19442e8 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fb7c19448c8 <line:4511:7, line:4512:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7fb7c19445e0 <line:4511:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7fb7c19445a8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7fb7c1944348 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fb7c19409d8 0x7fb7c193fb68
| |   | |       |   |-CallExpr 0x7fb7c1944480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7fb7c19443e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   | |       |   `-CallExpr 0x7fb7c1944580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7fb7c19444e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   | |       `-CXXNoexceptExpr 0x7fb7c19448a0 <line:4512:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7fb7c1944868 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7fb7c1944608 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fb7c19409d8 0x7fb7c193fb68
| |   | |           |-CallExpr 0x7fb7c1944740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7fb7c19446a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   | |           `-CallExpr 0x7fb7c1944840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7fb7c19447a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb7c28f4a50
| |   | `-ClassTemplatePartialSpecializationDecl 0x7fb7c1944bd8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7fb7c1944910 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7fb7c1944978 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7fb7c1944f00 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7fb7c19450d8 prev 0x7fb7c193ec58 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fb7c1944fb8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1945040 prev 0x7fb7c193ebc0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fb7c1945848 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7fb7c1945a98 prev 0x7fb7c193ef88 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fb7c1945900 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1945a00 prev 0x7fb7c193eef0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fb7c19462c8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7fb7c1946498 <line:4589:1, line:4593:1> line:4590:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7fb7c1946380 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1946400 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7fb7c1946710 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7fb7c1946850 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7fb7c1946800 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7fb7c19463c0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7fb7c1946380 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb7c1946b10 <line:4596:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7fb7c19468c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb7c1946ab0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7fb7c1946a40 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb7c1946df8 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7fb7c1946b60 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c1946ce8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c1946c98 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb7c1946d60 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7fb7c19470c0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7fb7c1947280 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7fb7c1947210 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7fb7c1947438 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7fb7c1947400 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7fb7c1947398 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7fb7c1947358 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7fb7c1947330 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7fb7c1947300 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7fb7c1947378 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1947690 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c19474b0 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c1947920 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7fb7c1948ee8 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7fb7c1948e20 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7fb7c1949038 <col:38, col:54>
| |   | | `-ReturnStmt 0x7fb7c1949020 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7fb7c1949008 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb7c1948fe0 <col:47> 'int' lvalue ParmVar 0x7fb7c1948e20 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7fb7c1948f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb7c1948fd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb7c1949168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7fb7c19490a0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7fb7c19492b8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7fb7c19492a0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7fb7c1949288 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb7c1949260 <col:57> 'unsigned int' lvalue ParmVar 0x7fb7c19490a0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7fb7c1949208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb7c1949250 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb7c19493e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7fb7c1949320 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7fb7c1949538 <col:40, col:56>
| |   | | `-ReturnStmt 0x7fb7c1949520 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7fb7c1949508 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb7c19494e0 <col:49> 'long' lvalue ParmVar 0x7fb7c1949320 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7fb7c1949488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb7c19494d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb7c1949668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7fb7c19495a0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7fb7c19497b8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7fb7c19497a0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7fb7c1949788 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb7c1949760 <col:67> 'unsigned long' lvalue ParmVar 0x7fb7c19495a0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7fb7c1949708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb7c1949750 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb7c19498e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7fb7c1949820 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7fb7c1949a38 <col:50, col:66>
| |   | | `-ReturnStmt 0x7fb7c1949a20 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7fb7c1949a08 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb7c19499e0 <col:59> 'long long' lvalue ParmVar 0x7fb7c1949820 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7fb7c1949988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb7c19499d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb7c1949b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7fb7c1949aa0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7fb7c1949cb8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7fb7c1949ca0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7fb7c1949c88 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb7c1949c60 <col:76> 'unsigned long long' lvalue ParmVar 0x7fb7c1949aa0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7fb7c1949c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb7c1949c50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb7c1949e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7fb7c1949d18 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7fb7c1949f70 <col:52, col:68>
| |   | | `-ReturnStmt 0x7fb7c1949f58 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7fb7c1949f40 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb7c1949f18 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fb7c1949d18 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7fb7c1949ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb7c1949f08 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb7c194a0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7fb7c1949fd0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7fb7c194a220 <col:54, col:70>
| |   | | `-ReturnStmt 0x7fb7c194a208 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7fb7c194a1f0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb7c194a1c8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fb7c1949fd0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7fb7c194a170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb7c194a1b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb7c194a768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7fb7c194a240 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb7c194a6d0 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7fb7c194a5c0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7fb7c194a858 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7fb7c194a840 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7fb7c194a818 <col:43> '_Tp' lvalue ParmVar 0x7fb7c194a5c0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fb7c194a7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb7c194a808 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fb7c194a998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7fb7c194a878 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c194a900 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7fb7c194ac10 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7fb7c194b318 <line:4658:5, line:4660:95> line:4659:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb7c194aca8 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fb7c194b280 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fb7c194ad48 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fb7c194b5b8 <line:4661:5, line:4662:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb7c194b370 <line:4661:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fb7c194b520 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fb7c194b408 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fb7c194b620 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fb7c194b858 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fb7c194b9d8 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7fb7c194b8b8 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c194b940 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7fb7c194bc50 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7fb7c194c358 <line:4670:5, line:4672:94> line:4671:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb7c194bce8 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fb7c194c2c0 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fb7c194bd88 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fb7c194c578 <line:4673:5, line:4674:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb7c194c3b0 <line:4673:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fb7c194c4e0 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fb7c194c448 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fb7c194c5e0 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fb7c194c7d8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fb7c194c958 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7fb7c194c838 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c194c8c0 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7fb7c194d7f8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7fb7c194d8b0 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7fb7c194d9d8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7fb7c194da90 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7fb7c194dbb8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7fb7c194dc70 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7fb7c194dd98 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7fb7c194e1b8 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7fb7c194de50 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fb7c194deb8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fb7c194e090 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fb7c194e120 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7fb7c194e8f0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c194eec8 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7fb7c194e9a8 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7fb7c194ea18 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fb7c194ea88 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7fb7c194eaf8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7fb7c1960860 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7fb7c1960cc0 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7fb7c1960918 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fb7c1960988 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fb7c19609f8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7fb7c1960b90 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fb7c1960c28 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7fb7c1961308 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c1961760 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7fb7c19613c0 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fb7c1961428 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fb7c1961498 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7fb7c1961ae0 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7fb7c19a4a78 parent 0x7fb7c28b3f80 prev 0x7fb7c28b5150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-NamespaceDecl 0x7fb7c1961b98 prev 0x7fb7c28aaac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fb7c1865c58 'std'
| | `-NamespaceDecl 0x7fb7c1961c00 prev 0x7fb7c28aab30 <col:52, line:439:36> <scratch space>:432:1 __1 inline
| |   |-original Namespace 0x7fb7c1865cc0 '__1'
| |   |-EnumDecl 0x7fb7c1961c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:125:1, line:132:1> line:125:6 referenced float_round_style
| |   | |-EnumConstantDecl 0x7fb7c1961d60 <line:127:5, col:34> col:5 round_indeterminate 'enum std::__1::float_round_style'
| |   | | `-UnaryOperator 0x7fb7c1961d40 <col:33, col:34> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fb7c1961d20 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fb7c1961dc8 <line:128:5, col:34> col:5 referenced round_toward_zero 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fb7c1961da8 <col:34> 'int' 0
| |   | |-EnumConstantDecl 0x7fb7c1961e30 <line:129:5, col:34> col:5 referenced round_to_nearest 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fb7c1961e10 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fb7c1961e98 <line:130:5, col:34> col:5 round_toward_infinity 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fb7c1961e78 <col:34> 'int' 2
| |   | `-EnumConstantDecl 0x7fb7c1961f00 <line:131:5, col:34> col:5 round_toward_neg_infinity 'enum std::__1::float_round_style'
| |   |   `-IntegerLiteral 0x7fb7c1961ee0 <col:34> 'int' 3
| |   |-EnumDecl 0x7fb7c1961f48 <line:134:1, line:139:1> line:134:6 referenced float_denorm_style
| |   | |-EnumConstantDecl 0x7fb7c1962040 <line:136:5, col:29> col:5 denorm_indeterminate 'enum std::__1::float_denorm_style'
| |   | | `-UnaryOperator 0x7fb7c1962020 <col:28, col:29> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fb7c1962000 <col:29> 'int' 1
| |   | |-EnumConstantDecl 0x7fb7c19620a8 <line:137:5, col:21> col:5 referenced denorm_absent 'enum std::__1::float_denorm_style'
| |   | | `-IntegerLiteral 0x7fb7c1962088 <col:21> 'int' 0
| |   | `-EnumConstantDecl 0x7fb7c1962110 <line:138:5, col:22> col:5 referenced denorm_present 'enum std::__1::float_denorm_style'
| |   |   `-IntegerLiteral 0x7fb7c19620f0 <col:22> 'int' 1
| |   |-ClassTemplateDecl 0x7fb7c19623f8 <line:141:1, line:184:1> line:142:7 __libcpp_numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fb7c1962158 <line:141:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c19622e8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c1962298 <col:29, col:49> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fb7c1962360 <line:142:1, line:184:1> line:142:7 class __libcpp_numeric_limits definition
| |   | | |-CXXRecordDecl 0x7fb7c18aaaf0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | | |-AccessSpecDecl 0x7fb7c18aab88 <line:144:1, col:10> col:1 protected
| |   | | |-TypedefDecl 0x7fb7c18aabc0 <line:145:5, col:17> col:17 referenced type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fb7c19621a0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fb7c1962158 '_Tp'
| |   | | |-VarDecl 0x7fb7c18aac28 <line:147:5, col:59> col:42 is_specialized 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18aac88 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fb7c18aada8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:148:92> col:61 constexpr min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac598 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fb7c18ac580 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac558 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18aae40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18aae88 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb7c18aaef0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:149:92> col:61 constexpr max 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac608 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fb7c18ac5f0 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac5c8 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18aaf88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18aafd0 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb7c18ab038 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:150:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac678 <col:80, col:95>
| |   | | | | `-ReturnStmt 0x7fb7c18ac660 <col:81, col:93>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac638 <col:88, col:93> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18ab0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18ab118 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fb7c18ab140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:152:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb7c18ab1a0 <col:50> 'int' 0
| |   | | |-VarDecl 0x7fb7c18ab1d8 <line:153:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb7c18ab238 <col:52> 'int' 0
| |   | | |-VarDecl 0x7fb7c18ab270 <line:154:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb7c18ab2d0 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fb7c18ab300 <line:155:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18ab360 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18ab388 <line:156:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18ab3e8 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18ab410 <line:157:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18ab470 <col:52> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18ab4a0 <line:158:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb7c18ab500 <col:49> 'int' 0
| |   | | |-CXXMethodDecl 0x7fb7c18ab578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:159:96> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac6e8 <col:81, col:96>
| |   | | | | `-ReturnStmt 0x7fb7c18ac6d0 <col:82, col:94>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac6a8 <col:89, col:94> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18ab610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18ab658 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb7c18ab6c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:160:100> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac758 <col:85, col:100>
| |   | | | | `-ReturnStmt 0x7fb7c18ac740 <col:86, col:98>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac718 <col:93, col:98> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18ab758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18ab7a0 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fb7c18ab7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:162:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb7c18ab828 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fb7c18ab860 <line:163:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb7c18ab8c0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fb7c18ab8f8 <line:164:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb7c18ab958 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fb7c18ab990 <line:165:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb7c18ab9f0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fb7c18aba20 <line:167:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18aba80 <col:56> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18abaa8 <line:168:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18abb08 <col:57> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18abb30 <line:169:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18abb90 <col:61> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18abbb8 <line:170:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fb7c18abc18 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb7c19620a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | | |-VarDecl 0x7fb7c18abc50 <line:171:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18abcb0 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fb7c18abd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:172:97> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac7c8 <col:82, col:97>
| |   | | | | `-ReturnStmt 0x7fb7c18ac7b0 <col:83, col:95>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac788 <col:90, col:95> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18abdb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18abe00 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb7c18abe68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:173:98> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac838 <col:83, col:98>
| |   | | | | `-ReturnStmt 0x7fb7c18ac820 <col:84, col:96>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac7f8 <col:91, col:96> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18abf00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18abf48 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb7c18abfb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:174:102> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac8a8 <col:87, col:102>
| |   | | | | `-ReturnStmt 0x7fb7c18ac890 <col:88, col:100>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac868 <col:95, col:100> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18ac048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18ac090 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb7c18ac0f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:175:99> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb7c18ac918 <col:84, col:99>
| |   | | | | `-ReturnStmt 0x7fb7c18ac900 <col:85, col:97>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ac8d8 <col:92, col:97> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb7c18ac190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb7c18ac1d8 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fb7c18ac1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:177:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18ac258 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18ac280 <line:178:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18ac2e0 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18ac308 <line:179:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18ac368 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18ac390 <line:181:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18ac3f0 <col:49> '_Bool' false
| |   | | |-VarDecl 0x7fb7c18ac418 <line:182:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb7c18ac478 <col:59> '_Bool' false
| |   | | `-VarDecl 0x7fb7c18ac4a0 <line:183:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   | |   `-DeclRefExpr 0x7fb7c18ac500 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb7c1961dc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   | |-ClassTemplateSpecialization 0x7fb7c18b0de0 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fb7c197ea80 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fb7c3001960 '__libcpp_numeric_limits'
| |   | `-ClassTemplateSpecialization 0x7fb7c3004e90 '__libcpp_numeric_limits'
| |   |-ClassTemplateDecl 0x7fb7c18ad380 <line:186:1, line:190:1> line:187:8 __libcpp_compute_min
| |   | |-TemplateTypeParmDecl 0x7fb7c18ac938 <line:186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18ad200 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18ad268 <col:36, col:41> col:41 '_Bool' depth 0 index 2 _IsSigned
| |   | `-CXXRecordDecl 0x7fb7c18ad2e8 <line:187:1, line:190:1> line:187:8 struct __libcpp_compute_min definition
| |   |   |-CXXRecordDecl 0x7fb7c18ad6b0 <col:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   |   `-VarDecl 0x7fb7c18ad758 <line:189:5, col:70> col:40 value 'const _Tp' static constexpr cinit
| |   |     `-CXXUnresolvedConstructExpr 0x7fb7c18ad878 <col:48, col:70> '_Tp'
| |   |       `-BinaryOperator 0x7fb7c18ad850 <col:52, col:62> '<dependent type>' '<<'
| |   |         |-CXXUnresolvedConstructExpr 0x7fb7c18ad7f8 <col:52, col:57> '_Tp'
| |   |         | `-IntegerLiteral 0x7fb7c18ad7d8 <col:56> 'int' 1
| |   |         `-DeclRefExpr 0x7fb7c18ad828 <col:62> 'int' NonTypeTemplateParm 0x7fb7c18ad200 '__digits' 'int'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18adbb8 <line:192:1, line:196:1> line:193:8 struct __libcpp_compute_min definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb7c18ad9d8 <col:34> 'int' NonTypeTemplateParm 0x7fb7c18ad950 '__digits' 'int'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb7c18ad8c8 <line:192:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb7c18ad950 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-CXXRecordDecl 0x7fb7c18ade90 <line:193:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   | `-VarDecl 0x7fb7c18adf38 <line:195:5, col:53> col:40 value 'const _Tp' static constexpr cinit
| |   |   `-CXXUnresolvedConstructExpr 0x7fb7c18adfc8 <col:48, col:53> '_Tp'
| |   |     `-IntegerLiteral 0x7fb7c18adfa8 <col:52> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18ae200 <line:198:1, line:249:1> line:199:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb7c18ae018 <line:198:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb7c18ae490 <line:199:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb7c18ae528 <line:201:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb7c18ae560 <line:202:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fb7c18ae060 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18ae018 '_Tp'
| |   | |-VarDecl 0x7fb7c18ae5c8 <line:204:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18ae628 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb7c18ae650 <line:206:5, col:70> col:41 referenced is_signed 'const _Bool' static constexpr cinit
| |   | | `-BinaryOperator 0x7fb7c18ae7b0 <col:53, col:70> '<dependent type>' '<'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fb7c18ae720 <col:53, col:60> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-UnaryOperator 0x7fb7c18ae700 <col:58, col:59> 'int' prefix '-'
| |   | |   |   `-IntegerLiteral 0x7fb7c18ae6e0 <col:59> 'int' 1
| |   | |   `-CXXUnresolvedConstructExpr 0x7fb7c18ae780 <col:64, col:70> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-IntegerLiteral 0x7fb7c18ae760 <col:69> 'int' 0
| |   | |-VarDecl 0x7fb7c18ae7f0 <line:207:5, col:106> col:41 referenced digits 'const int' static constexpr cinit
| |   | | `-CXXStaticCastExpr 0x7fb7c18ae990 <col:50, col:106> 'int' static_cast<int> <NoOp>
| |   | |   `-ImplicitCastExpr 0x7fb7c18ae978 <col:67, col:97> 'int' <IntegralCast>
| |   | |     `-BinaryOperator 0x7fb7c18ae938 <col:67, col:97> 'unsigned long' '-'
| |   | |       |-BinaryOperator 0x7fb7c18ae8b8 <col:67, <built-in>:66:22> 'unsigned long' '*'
| |   | |       | |-UnaryExprOrTypeTraitExpr 0x7fb7c18ae860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:67, col:78> 'unsigned long' sizeof 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |       | `-ImplicitCastExpr 0x7fb7c18ae8a0 <<built-in>:66:22> 'unsigned long' <IntegralCast>
| |   | |       |   `-IntegerLiteral 0x7fb7c18ae880 <col:22> 'int' 8
| |   | |       `-ImplicitCastExpr 0x7fb7c18ae920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:97> 'unsigned long' <IntegralCast>
| |   | |         `-ImplicitCastExpr 0x7fb7c18ae908 <col:97> '_Bool' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x7fb7c18ae8e0 <col:97> 'const _Bool' lvalue Var 0x7fb7c18ae650 'is_signed' 'const _Bool'
| |   | |-VarDecl 0x7fb7c18ae9d8 <line:208:5, col:65> col:41 digits10 'const int' static constexpr cinit
| |   | | `-BinaryOperator 0x7fb7c18aeae0 <col:52, col:65> 'int' '/'
| |   | |   |-BinaryOperator 0x7fb7c18aea98 <col:52, col:61> 'int' '*'
| |   | |   | |-ImplicitCastExpr 0x7fb7c18aea80 <col:52> 'int' <LValueToRValue>
| |   | |   | | `-DeclRefExpr 0x7fb7c18aea38 <col:52> 'const int' lvalue Var 0x7fb7c18ae7f0 'digits' 'const int'
| |   | |   | `-IntegerLiteral 0x7fb7c18aea60 <col:61> 'int' 3
| |   | |   `-IntegerLiteral 0x7fb7c18aeac0 <col:65> 'int' 10
| |   | |-VarDecl 0x7fb7c18aeb20 <line:209:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c18aeb80 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb7c18aebb0 <line:210:5, col:96> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18aee38 <col:49, col:96> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18aee88 <line:211:5, col:93> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-ConditionalOperator 0x7fb7c18af0b8 <col:49, col:93> '<dependent type>'
| |   | |   |-ImplicitCastExpr 0x7fb7c18af0a0 <col:49> '_Bool' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0x7fb7c18aeee8 <col:49> 'const _Bool' lvalue Var 0x7fb7c18ae650 'is_signed' 'const _Bool'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fb7c18aeff0 <col:61, col:82> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-BinaryOperator 0x7fb7c18aefc8 <col:66, col:77> '<dependent type>' '^'
| |   | |   |   |-CXXUnresolvedConstructExpr 0x7fb7c18aef70 <col:66, col:73> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   |   | `-UnaryOperator 0x7fb7c18aef50 <col:71, col:72> 'int' prefix '~'
| |   | |   |   |   `-IntegerLiteral 0x7fb7c18aef30 <col:72> 'int' 0
| |   | |   |   `-DeclRefExpr 0x7fb7c18aefa0 <col:77> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fb7c18aebb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | |   `-CXXUnresolvedConstructExpr 0x7fb7c18af070 <col:86, col:93> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-UnaryOperator 0x7fb7c18af050 <col:91, col:92> 'int' prefix '~'
| |   | |       `-IntegerLiteral 0x7fb7c18af030 <col:92> 'int' 0
| |   | |-CXXMethodDecl 0x7fb7c18af200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:212:91> col:61 referenced constexpr min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b0910 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fb7c18b08f8 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fb7c18b08d0 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fb7c18aebb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fb7c18af298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18af2e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18af348 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:213:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b0970 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fb7c18b0958 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fb7c18b0930 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fb7c18aee88 '__max' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fb7c18af3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18af428 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18af490 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:214:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b09f8 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fb7c18b09e0 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fb7c18b09b8 <col:88, col:92> '<dependent type>'
| |   | | |     `-DeclRefExpr 0x7fb7c18b0990 <col:88> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' lvalue CXXMethod 0x7fb7c18af200 'min' 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb7c18af528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18af570 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c18af590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:216:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18af5f0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb7c18af618 <line:217:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18af678 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fb7c18af6a8 <line:218:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c18af708 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fb7c18af780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:219:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b0a90 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fb7c18b0a78 <col:82, col:95>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18b0a48 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb7c18b0a28 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c18af818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18af860 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18af8c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:220:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b0b28 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fb7c18b0b10 <col:86, col:99>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18b0ae0 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb7c18b0ac0 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c18af960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18af9a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c18af9d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:222:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c18afa30 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb7c18afa68 <line:223:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c18afac8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fb7c18afb00 <line:224:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c18afb60 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb7c18afb98 <line:225:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c18afbf8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fb7c18afc28 <line:227:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18afc88 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fb7c18afcb0 <line:228:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18afd10 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fb7c18afd38 <line:229:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18afd98 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fb7c18afdc0 <line:230:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb7c18afe20 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb7c19620a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb7c18afe58 <line:231:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18afeb8 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb7c18aff28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:232:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b0bc0 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fb7c18b0ba8 <col:83, col:96>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18b0b78 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb7c18b0b58 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c18affc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18b0008 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18b0070 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:233:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b0c58 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fb7c18b0c40 <col:84, col:97>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18b0c10 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb7c18b0bf0 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c18b0108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18b0150 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18b01b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:234:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b0cf0 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fb7c18b0cd8 <col:88, col:101>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18b0ca8 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb7c18b0c88 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c18b0250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18b0298 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18b0300 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:235:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18b0d88 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fb7c18b0d70 <col:85, col:98>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb7c18b0d40 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb7c18b0d20 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c18b0398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18b03e0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c18b0400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:237:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18b0460 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb7c18b0488 <line:238:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18b04e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb7c18b0510 <line:239:5, col:77> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-UnaryOperator 0x7fb7c18b06e8 <col:53, col:77> '<dependent type>' prefix '!'
| |   | |   `-DependentScopeDeclRefExpr 0x7fb7c18b06a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:239:77> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18b0718 <line:243:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18b0778 <col:49> '_Bool' true
| |   | |-VarDecl 0x7fb7c18b07a0 <line:247:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18b0800 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb7c18b0828 <line:248:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb7c18b0888 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb7c1961dc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c18b0de0 <line:251:1, line:297:1> line:252:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c18b1050 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb7c18b10e8 <line:254:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb7c18b1120 <line:255:5, col:18> col:18 referenced type '_Bool'
| |   | | `-BuiltinType 0x7fb7c1832740 '_Bool'
| |   | |-VarDecl 0x7fb7c18b1188 <line:257:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c18b11e8 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb7c197c268 <line:259:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197c2c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb7c197c350 <line:260:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197c3b0 <col:50> 'int' 1
| |   | |-VarDecl 0x7fb7c197c440 <line:261:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197c4a0 <col:52> 'int' 0
| |   | |-VarDecl 0x7fb7c197c530 <line:262:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197c590 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb7c197c640 <line:263:5, col:49> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197c6a0 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb7c197c720 <line:264:5, col:49> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197c780 <col:49> '_Bool' true
| |   | |-CXXMethodDecl 0x7fb7c197c8d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:265:91> col:61 used constexpr min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197e4b8 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fb7c197e4a0 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fb7c197e488 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fb7c197e460 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fb7c197c640 '__min' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fb7c197c970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197c9b8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197ca20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:266:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197e530 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fb7c197e518 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fb7c197e500 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fb7c197e4d8 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fb7c197c720 '__max' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fb7c197cab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197cb00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197cb68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:267:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197e630 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fb7c197e618 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fb7c197e5f0 <col:88, col:92> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool'
| |   | | |     `-ImplicitCastExpr 0x7fb7c197e5d8 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |       `-DeclRefExpr 0x7fb7c197e550 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' lvalue CXXMethod 0x7fb7c197c8d8 'min' 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb7c197cc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197cc48 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c197cc68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:269:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197ccc8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb7c197cd48 <line:270:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197cda8 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fb7c197ce30 <line:271:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197ce90 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fb7c197cf60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:272:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197e6d8 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fb7c197e6c0 <col:82, col:95>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb7c197e698 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb7c197e680 <col:94> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb7c197e660 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c197cff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197d040 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197d0a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:273:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197e780 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fb7c197e768 <col:86, col:99>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb7c197e740 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb7c197e728 <col:98> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb7c197e708 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c197d140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197d188 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c197d1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:275:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197d210 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb7c197d2a0 <line:276:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197d300 <col:58> 'int' 0
| |   | |-VarDecl 0x7fb7c197d390 <line:277:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197d3f0 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb7c197d480 <line:278:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197d4e0 <col:58> 'int' 0
| |   | |-VarDecl 0x7fb7c197d568 <line:280:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197d5c8 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fb7c197d648 <line:281:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197d6a8 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fb7c197d728 <line:282:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197d788 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fb7c197d808 <line:283:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb7c197d868 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb7c19620a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb7c197d8f8 <line:284:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197d958 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb7c197da20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:285:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197e828 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fb7c197e810 <col:83, col:96>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb7c197e7e8 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb7c197e7d0 <col:95> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb7c197e7b0 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c197dab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197db00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197db68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:286:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197e8d0 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fb7c197e8b8 <col:84, col:97>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb7c197e890 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb7c197e878 <col:96> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb7c197e858 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c197dc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197dc48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197dcb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:287:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197e978 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fb7c197e960 <col:88, col:101>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb7c197e938 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb7c197e920 <col:100> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb7c197e900 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c197dd48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197dd90 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197ddf8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:288:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c197ea20 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fb7c197ea08 <col:85, col:98>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb7c197e9e0 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb7c197e9c8 <col:97> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb7c197e9a8 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb7c197de90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197ded8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c197def8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:290:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197df58 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb7c197dfd8 <line:291:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197e038 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb7c197e0b8 <line:292:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197e118 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb7c197e198 <line:294:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197e200 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb7c197e280 <line:295:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197e2e0 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb7c197e360 <line:296:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb7c197e3c0 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb7c1961dc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c197ea80 <line:299:1, line:343:1> line:300:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'float'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c197ecf0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb7c197ed88 <line:302:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb7c197edc8 <line:303:5, col:19> col:19 referenced type 'float'
| |   | | `-BuiltinType 0x7fb7c18328c0 'float'
| |   | |-VarDecl 0x7fb7c197ee30 <line:305:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197ee90 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb7c197ef10 <line:307:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197ef70 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb7c197eff8 <line:308:5, <built-in>:139:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:308:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197f058 <<built-in>:139:26> 'int' 24
| |   | |-VarDecl 0x7fb7c197f0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:5, <built-in>:134:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197f148 <<built-in>:134:21> 'int' 6
| |   | |-VarDecl 0x7fb7c197f1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:310:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fb7c197f3a0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fb7c197f378 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fb7c197f360 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fb7c197f238 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fb7c197f338 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fb7c197f2f8 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fb7c197f2d0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fb7c197f2b8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fb7c197f2a0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fb7c197f258 <col:59> 'const int' lvalue Var 0x7fb7c197eff8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fb7c197f280 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fb7c197f318 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fb7c197f4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:311:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3000f28 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fb7c3000f10 <col:78, <built-in>:145:21>
| |   | | |   `-FloatingLiteral 0x7fb7c3000ef0 <col:21> 'float' 1.175494e-38
| |   | | |-AlwaysInlineAttr 0x7fb7c197f580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197f5c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197f630 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:312:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3000f80 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fb7c3000f68 <col:78, <built-in>:142:21>
| |   | | |   `-FloatingLiteral 0x7fb7c3000f48 <col:21> 'float' 3.402823e+38
| |   | | |-AlwaysInlineAttr 0x7fb7c197f6c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197f710 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197f778 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:313:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3001070 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fb7c3001058 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fb7c3001038 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float' prefix '-'
| |   | | |     `-CallExpr 0x7fb7c3001010 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float'
| |   | | |       `-ImplicitCastExpr 0x7fb7c3000ff8 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fb7c3000fa0 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' lvalue CXXMethod 0x7fb7c197f630 'max' 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb7c197f810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197f858 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c197f878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:315:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197f8d8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fb7c197f958 <line:316:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c197f9b8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fb7c197fa40 <line:317:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:317:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c197faa0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fb7c197fb70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:318:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c30010c8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fb7c30010b0 <col:82, <built-in>:136:25>
| |   | | |   `-FloatingLiteral 0x7fb7c3001090 <col:25> 'float' 1.192093e-07
| |   | | |-AlwaysInlineAttr 0x7fb7c197fc08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197fc50 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c197fcb8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:319:98> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3001120 <col:85, col:98>
| |   | | | `-ReturnStmt 0x7fb7c3001108 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fb7c30010e8 <col:93> 'float' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fb7c197fd50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c197fd98 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c197fdc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:5, <built-in>:144:30> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb7c197fe60 <<built-in>:144:25, col:30> 'int'
| |   | |   `-UnaryOperator 0x7fb7c197fe40 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb7c197fe20 <col:27> 'int' 125
| |   | |-VarDecl 0x7fb7c197fef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:5, <built-in>:143:32> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb7c197ff90 <<built-in>:143:28, col:32> 'int'
| |   | |   `-UnaryOperator 0x7fb7c197ff70 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb7c197ff50 <col:30> 'int' 37
| |   | |-VarDecl 0x7fb7c1980020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:5, <built-in>:141:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c1980080 <<built-in>:141:25> 'int' 128
| |   | |-VarDecl 0x7fb7c1980110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:5, <built-in>:140:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c1980170 <<built-in>:140:28> 'int' 38
| |   | |-VarDecl 0x7fb7c3000000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:326:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3000060 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fb7c30000e0 <line:327:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3000140 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fb7c30001c0 <line:328:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3000220 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fb7c30002a0 <line:329:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb7c3000300 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb7c1962110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb7c3000390 <line:330:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c30003f0 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb7c30004b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3001300 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fb7c30012e8 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fb7c30012c0 <col:90, col:110> 'float'
| |   | | |     `-ImplicitCastExpr 0x7fb7c30012a8 <col:90> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fb7c3001280 <col:90> '<builtin fn type>' Function 0x7fb7c3001190 '__builtin_huge_valf' 'float (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb7c3000550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3000598 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3000600 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:332:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3001600 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fb7c30015e8 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fb7c30015a0 <col:91, col:108> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fb7c3001588 <col:91> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb7c30014c8 <col:91> '<builtin fn type>' Function 0x7fb7c3001370 '__builtin_nanf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb7c30015d0 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb7c30014f0 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb7c3000698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c30006e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3000748 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:333:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c30018a8 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fb7c3001890 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fb7c3001848 <col:95, col:113> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fb7c3001830 <col:95> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb7c30017c8 <col:95> '<builtin fn type>' Function 0x7fb7c3001670 '__builtin_nansf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb7c3001878 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb7c30017f0 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb7c30007e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3000828 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3000890 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:334:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3001900 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fb7c30018e8 <col:85, <built-in>:132:28>
| |   | | |   `-FloatingLiteral 0x7fb7c30018c8 <col:28> 'float' 1.401298e-45
| |   | | |-AlwaysInlineAttr 0x7fb7c3000928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3000970 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c3000990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:336:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c30009f0 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb7c3000a70 <line:337:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3000ad0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb7c3000b50 <line:338:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3000bb0 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb7c3000c30 <line:340:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3000c90 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb7c3000d10 <line:341:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3000d70 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb7c3000df0 <line:342:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb7c3000e50 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb7c1961e30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c3001960 <line:345:1, line:389:1> line:346:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c3001bd0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb7c3001c68 <line:348:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb7c3001ca8 <line:349:5, col:20> col:20 referenced type 'double'
| |   | | `-BuiltinType 0x7fb7c18328e0 'double'
| |   | |-VarDecl 0x7fb7c3001d10 <line:351:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3001d70 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb7c3001df0 <line:353:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3001e50 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb7c3001ed8 <line:354:5, <built-in>:153:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:354:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c3001f38 <<built-in>:153:26> 'int' 53
| |   | |-VarDecl 0x7fb7c3002400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:5, <built-in>:148:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c3002460 <<built-in>:148:21> 'int' 15
| |   | |-VarDecl 0x7fb7c30024f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:356:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fb7c30026b8 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fb7c3002690 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fb7c3002678 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fb7c3002550 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fb7c3002650 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fb7c3002610 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fb7c30025e8 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fb7c30025d0 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fb7c30025b8 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fb7c3002570 <col:59> 'const int' lvalue Var 0x7fb7c3001ed8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fb7c3002598 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fb7c3002630 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fb7c3002808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:357:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3004458 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fb7c3004440 <col:78, <built-in>:159:21>
| |   | | |   `-FloatingLiteral 0x7fb7c3004420 <col:21> 'double' 2.225074e-308
| |   | | |-AlwaysInlineAttr 0x7fb7c30028a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c30028e8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3002950 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:358:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c30044b0 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fb7c3004498 <col:78, <built-in>:156:21>
| |   | | |   `-FloatingLiteral 0x7fb7c3004478 <col:21> 'double' 1.797693e+308
| |   | | |-AlwaysInlineAttr 0x7fb7c30029e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3002a30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3002a98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:359:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c30045a0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fb7c3004588 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fb7c3004568 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double' prefix '-'
| |   | | |     `-CallExpr 0x7fb7c3004540 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double'
| |   | | |       `-ImplicitCastExpr 0x7fb7c3004528 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fb7c30044d0 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' lvalue CXXMethod 0x7fb7c3002950 'max' 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb7c3002b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3002b78 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c3002b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:361:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3002bf8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fb7c3002c78 <line:362:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3002cd8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fb7c3002d60 <line:363:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:363:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c3002dc0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fb7c3002e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:364:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c30045f8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fb7c30045e0 <col:82, <built-in>:150:25>
| |   | | |   `-FloatingLiteral 0x7fb7c30045c0 <col:25> 'double' 2.220446e-16
| |   | | |-AlwaysInlineAttr 0x7fb7c3002f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3002f70 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3002fd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:365:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3004650 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fb7c3004638 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fb7c3004618 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fb7c3003070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c30030b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c30030e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:5, <built-in>:158:31> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb7c3003180 <<built-in>:158:25, col:31> 'int'
| |   | |   `-UnaryOperator 0x7fb7c3003160 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb7c3003140 <col:27> 'int' 1021
| |   | |-VarDecl 0x7fb7c3003210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:5, <built-in>:157:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb7c30032b0 <<built-in>:157:28, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fb7c3003290 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb7c3003270 <col:30> 'int' 307
| |   | |-VarDecl 0x7fb7c3003340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:5, <built-in>:155:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c30033a0 <<built-in>:155:25> 'int' 1024
| |   | |-VarDecl 0x7fb7c3003430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:5, <built-in>:154:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c3003490 <<built-in>:154:28> 'int' 308
| |   | |-VarDecl 0x7fb7c3003518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:372:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3003578 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fb7c30035f8 <line:373:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3003658 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fb7c30036d8 <line:374:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3003738 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fb7c30037b8 <line:375:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb7c3003818 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb7c1962110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb7c30038a8 <line:376:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3003908 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb7c30039d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:377:111> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3004830 <col:82, col:111>
| |   | | | `-ReturnStmt 0x7fb7c3004818 <col:83, col:109>
| |   | | |   `-CallExpr 0x7fb7c30047f0 <col:90, col:109> 'double'
| |   | | |     `-ImplicitCastExpr 0x7fb7c30047d8 <col:90> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fb7c30047b0 <col:90> '<builtin fn type>' Function 0x7fb7c30046c0 '__builtin_huge_val' 'double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb7c3003a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3003ab0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3003b18 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:378:109> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3004b30 <col:83, col:109>
| |   | | | `-ReturnStmt 0x7fb7c3004b18 <col:84, col:107>
| |   | | |   `-CallExpr 0x7fb7c3004ad0 <col:91, col:107> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fb7c3004ab8 <col:91> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb7c30049f8 <col:91> '<builtin fn type>' Function 0x7fb7c30048a0 '__builtin_nan' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb7c3004b00 <col:105> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb7c3004a20 <col:105> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb7c3003bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3003bf8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3003c60 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:379:114> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3004dd8 <col:87, col:114>
| |   | | | `-ReturnStmt 0x7fb7c3004dc0 <col:88, col:112>
| |   | | |   `-CallExpr 0x7fb7c3004d78 <col:95, col:112> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fb7c3004d60 <col:95> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb7c3004cf8 <col:95> '<builtin fn type>' Function 0x7fb7c3004ba0 '__builtin_nans' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb7c3004da8 <col:110> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb7c3004d20 <col:110> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb7c3003cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3003d40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3003da8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:380:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3004e30 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fb7c3004e18 <col:85, <built-in>:146:28>
| |   | | |   `-FloatingLiteral 0x7fb7c3004df8 <col:28> 'double' 4.940656e-324
| |   | | |-AlwaysInlineAttr 0x7fb7c3003e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3003e88 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c3003ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:382:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3003f08 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb7c3003f88 <line:383:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3003fe8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb7c3004068 <line:384:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c30040c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb7c3004148 <line:386:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c30041a8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb7c3004228 <line:387:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3004288 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb7c3004308 <line:388:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb7c3004368 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb7c1961e30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fb7c3004e90 <line:391:1, line:439:1> line:392:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'long double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb7c3005100 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb7c3005198 <line:394:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb7c30051d8 <line:395:5, col:25> col:25 referenced type 'long double'
| |   | | `-BuiltinType 0x7fb7c1832900 'long double'
| |   | |-VarDecl 0x7fb7c3005240 <line:397:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c30052a0 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb7c3005320 <line:399:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3005380 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb7c3005408 <line:400:5, <built-in>:167:27> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:400:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c3005468 <<built-in>:167:27> 'int' 64
| |   | |-VarDecl 0x7fb7c30054f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:5, <built-in>:162:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c3005558 <<built-in>:162:22> 'int' 18
| |   | |-VarDecl 0x7fb7c30055e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:402:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fb7c30057b0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fb7c3005788 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fb7c3005770 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fb7c3005648 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fb7c3005748 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fb7c3005708 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fb7c30056e0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fb7c30056c8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fb7c30056b0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fb7c3005668 <col:59> 'const int' lvalue Var 0x7fb7c3005408 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fb7c3005690 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fb7c3005728 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fb7c30058f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:403:98> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3007980 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fb7c3007968 <col:78, <built-in>:173:22>
| |   | | |   `-FloatingLiteral 0x7fb7c3007938 <col:22> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fb7c3005990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c30059d8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3005a40 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:404:98> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c30079e8 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fb7c30079d0 <col:78, <built-in>:170:22>
| |   | | |   `-FloatingLiteral 0x7fb7c30079a0 <col:22> 'long double' INF
| |   | | |-AlwaysInlineAttr 0x7fb7c3005ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3005b20 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3005b88 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:405:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3007ad0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fb7c3007ab8 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fb7c3007a98 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' prefix '-'
| |   | | |     `-CallExpr 0x7fb7c3007a70 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double'
| |   | | |       `-ImplicitCastExpr 0x7fb7c3007a58 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fb7c3007a08 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' lvalue CXXMethod 0x7fb7c3005a40 'max' 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb7c3005c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3005c68 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c3005c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:407:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3005ce8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fb7c3005d68 <line:408:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3005dc8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fb7c3005e50 <line:409:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:409:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c3005eb0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fb7c3005f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:410:106> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3007b38 <col:81, col:106>
| |   | | | `-ReturnStmt 0x7fb7c3007b20 <col:82, <built-in>:164:26>
| |   | | |   `-FloatingLiteral 0x7fb7c3007af0 <col:26> 'long double' 1.084202e-19
| |   | | |-AlwaysInlineAttr 0x7fb7c3006018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3006060 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c30060c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:411:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3007ba8 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fb7c3007b90 <col:86, col:93>
| |   | | |   `-ImplicitCastExpr 0x7fb7c3007b78 <col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' <FloatingCast>
| |   | | |     `-FloatingLiteral 0x7fb7c3007b58 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fb7c3006160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c30061a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c30061d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:5, <built-in>:172:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb7c3006270 <<built-in>:172:26, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fb7c3006250 <col:27, col:28> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb7c3006230 <col:28> 'int' 16381
| |   | |-VarDecl 0x7fb7c3006300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:5, <built-in>:171:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb7c30063a0 <<built-in>:171:29, col:35> 'int'
| |   | |   `-UnaryOperator 0x7fb7c3006380 <col:30, col:31> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb7c3006360 <col:31> 'int' 4931
| |   | |-VarDecl 0x7fb7c3006870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:5, <built-in>:169:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c30068d0 <<built-in>:169:26> 'int' 16384
| |   | |-VarDecl 0x7fb7c3006960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:5, <built-in>:168:29> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb7c30069c0 <<built-in>:168:29> 'int' 4932
| |   | |-VarDecl 0x7fb7c3006a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:418:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3006aa8 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fb7c3006b28 <line:419:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3006b88 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fb7c3006c08 <line:420:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3006c68 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fb7c3006ce8 <line:421:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb7c3006d48 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb7c1962110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb7c3006dd8 <line:422:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3006e38 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb7c3006f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:423:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3007d88 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fb7c3007d70 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fb7c3007d48 <col:90, col:110> 'long double'
| |   | | |     `-ImplicitCastExpr 0x7fb7c3007d30 <col:90> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fb7c3007d08 <col:90> '<builtin fn type>' Function 0x7fb7c3007c18 '__builtin_huge_vall' 'long double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb7c3006f98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3006fe0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3007048 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:424:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3008090 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fb7c3008078 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fb7c3008030 <col:91, col:108> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fb7c3008018 <col:91> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb7c3007f50 <col:91> '<builtin fn type>' Function 0x7fb7c3007df8 '__builtin_nanl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb7c3008060 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb7c3007f78 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb7c30070e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3007128 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c3007190 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:425:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c3008338 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fb7c3008320 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fb7c30082d8 <col:95, col:113> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fb7c30082c0 <col:95> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb7c3008258 <col:95> '<builtin fn type>' Function 0x7fb7c3008100 '__builtin_nansl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb7c3008308 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb7c3008280 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb7c3007228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c3007270 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c30072d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:426:112> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c30083a0 <col:84, col:112>
| |   | | | `-ReturnStmt 0x7fb7c3008388 <col:85, <built-in>:160:29>
| |   | | |   `-FloatingLiteral 0x7fb7c3008358 <col:29> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fb7c3007370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c30073b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c30073d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:431:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3007438 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb7c30074b8 <line:433:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c3007518 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb7c3007598 <line:434:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c30075f8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb7c3007678 <line:436:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c30076d8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb7c3007758 <line:437:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb7c30077b8 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb7c3007838 <line:438:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb7c3007898 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb7c1961e30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateDecl 0x7fb7c3008508 <line:441:1, line:485:1> line:442:28 numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fb7c30083c0 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb7c3008470 <line:442:1, line:485:1> line:442:28 class numeric_limits definition
| |   |   |-private '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb7c3008780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb7c19805a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:442:1, col:28> col:28 implicit class numeric_limits
| |   |   |-TypedefDecl 0x7fb7c19808f8 <line:445:5, col:68> col:68 referenced __base '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   | `-TemplateSpecializationType 0x7fb7c1980850 '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>' dependent __libcpp_numeric_limits
| |   |   |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |   |   |-TypedefDecl 0x7fb7c1980a60 <line:446:5, col:35> col:35 referenced type 'typename __base::type'
| |   |   | `-DependentNameType 0x7fb7c19809f0 'typename __base::type' dependent
| |   |   |-AccessSpecDecl 0x7fb7c1980ab8 <line:447:1, col:7> col:1 public
| |   |   |-VarDecl 0x7fb7c1980af0 <line:448:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1980b88 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fb7c1980cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:449:99> col:61 constexpr min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c1982d10 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fb7c1982cf8 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fb7c1982cd0 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1982c90 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c1980d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c1980db8 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb7c1980e20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:450:99> col:61 constexpr max 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c1982de8 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fb7c1982dd0 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fb7c1982da8 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1982d68 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c1980eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c1980f00 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb7c1980f68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:451:105> col:61 constexpr lowest 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c1982ec0 <col:80, col:105>
| |   |   | | `-ReturnStmt 0x7fb7c1982ea8 <col:81, col:103>
| |   |   | |   `-CallExpr 0x7fb7c1982e80 <col:88, col:103> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1982e40 <col:88, col:96> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c1981000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c1981048 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fb7c1981070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:453:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981108 <col:50, col:58> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981160 <line:454:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c19811f8 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981250 <line:455:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c19812e8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981338 <line:456:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c19813d0 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981420 <line:457:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c19814b8 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981508 <line:458:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c19815a0 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c19815f8 <line:459:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981690 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fb7c1981728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:460:107> col:61 constexpr epsilon 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c1982f98 <col:81, col:107>
| |   |   | | `-ReturnStmt 0x7fb7c1982f80 <col:82, col:105>
| |   |   | |   `-CallExpr 0x7fb7c1982f58 <col:89, col:105> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1982f18 <col:89, col:97> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c19817c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c1981808 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb7c1981870 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:461:115> col:61 constexpr round_error 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c1983070 <col:85, col:115>
| |   |   | | `-ReturnStmt 0x7fb7c1983058 <col:86, col:113>
| |   |   | |   `-CallExpr 0x7fb7c1983030 <col:93, col:113> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1982ff0 <col:93, col:101> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c1981908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c1981950 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fb7c1981978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:463:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981a10 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981a68 <line:464:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981b00 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981b58 <line:465:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981bf0 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981c48 <line:466:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981ce0 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981d30 <line:468:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981dc8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981e18 <line:469:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981eb0 <col:57, col:65> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981f00 <line:470:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1981f98 <col:61, col:69> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1981fe8 <line:471:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1982080 <col:68, col:76> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c19820d0 <line:472:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1982168 <col:59, col:67> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fb7c1982200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:473:109> col:61 constexpr infinity 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c1983148 <col:82, col:109>
| |   |   | | `-ReturnStmt 0x7fb7c1983130 <col:83, col:107>
| |   |   | |   `-CallExpr 0x7fb7c1983108 <col:90, col:107> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c19830c8 <col:90, col:98> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c1982298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c19822e0 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb7c1982348 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:474:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c1983220 <col:83, col:111>
| |   |   | | `-ReturnStmt 0x7fb7c1983208 <col:84, col:109>
| |   |   | |   `-CallExpr 0x7fb7c19831e0 <col:91, col:109> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c19831a0 <col:91, col:99> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c19823e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c1982428 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb7c1982490 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:475:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c19832f8 <col:87, col:119>
| |   |   | | `-ReturnStmt 0x7fb7c19832e0 <col:88, col:117>
| |   |   | |   `-CallExpr 0x7fb7c19832b8 <col:95, col:117> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1983278 <col:95, col:103> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c1982528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c1982570 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb7c19825d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:476:113> col:61 constexpr denorm_min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb7c19833d0 <col:84, col:113>
| |   |   | | `-ReturnStmt 0x7fb7c19833b8 <col:85, col:111>
| |   |   | |   `-CallExpr 0x7fb7c1983390 <col:92, col:111> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb7c1983350 <col:92, col:100> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb7c1982670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb7c19826b8 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fb7c19826d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:478:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1982770 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c19827c0 <line:479:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1982858 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c19828a8 <line:480:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1982940 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1982990 <line:482:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1982a28 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb7c1982a78 <line:483:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb7c1982b10 <col:59, col:67> '<dependent type>' lvalue
| |   |   `-VarDecl 0x7fb7c1982b60 <line:484:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fb7c1982bf8 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fb7c19835e0 parent 0x7fb7c3008470 prev 0x7fb7c1980af0 <line:487:1, line:488:55> col:55 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1983878 parent 0x7fb7c3008470 prev 0x7fb7c1981070 <line:489:1, line:490:54> col:54 digits 'const int' constexpr
| |   |-VarDecl 0x7fb7c1983b18 parent 0x7fb7c3008470 prev 0x7fb7c1981160 <line:491:1, line:492:54> col:54 digits10 'const int' constexpr
| |   |-VarDecl 0x7fb7c1983db8 parent 0x7fb7c3008470 prev 0x7fb7c1981250 <line:493:1, line:494:54> col:54 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fb7c1984050 parent 0x7fb7c3008470 prev 0x7fb7c1981338 <line:495:1, line:496:55> col:55 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18bf0f0 parent 0x7fb7c3008470 prev 0x7fb7c1981420 <line:497:1, line:498:55> col:55 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18bf380 parent 0x7fb7c3008470 prev 0x7fb7c1981508 <line:499:1, line:500:55> col:55 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18bf618 parent 0x7fb7c3008470 prev 0x7fb7c19815f8 <line:501:1, line:502:54> col:54 radix 'const int' constexpr
| |   |-VarDecl 0x7fb7c18bf8b8 parent 0x7fb7c3008470 prev 0x7fb7c1981978 <line:503:1, line:504:54> col:54 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb7c18bfb58 parent 0x7fb7c3008470 prev 0x7fb7c1981a68 <line:505:1, line:506:54> col:54 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb7c18bfdf8 parent 0x7fb7c3008470 prev 0x7fb7c1981b58 <line:507:1, line:508:54> col:54 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c0098 parent 0x7fb7c3008470 prev 0x7fb7c1981c48 <line:509:1, line:510:54> col:54 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c0330 parent 0x7fb7c3008470 prev 0x7fb7c1981d30 <line:511:1, line:512:55> col:55 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c05c0 parent 0x7fb7c3008470 prev 0x7fb7c1981e18 <line:513:1, line:514:55> col:55 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c0850 parent 0x7fb7c3008470 prev 0x7fb7c1981f00 <line:515:1, line:516:55> col:55 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c0ae0 parent 0x7fb7c3008470 prev 0x7fb7c1981fe8 <line:517:1, line:518:69> col:69 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fb7c18c0d70 parent 0x7fb7c3008470 prev 0x7fb7c19820d0 <line:519:1, line:520:55> col:55 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c2000 parent 0x7fb7c3008470 prev 0x7fb7c19826d8 <line:521:1, line:522:55> col:55 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c2290 parent 0x7fb7c3008470 prev 0x7fb7c19827c0 <line:523:1, line:524:55> col:55 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c2520 parent 0x7fb7c3008470 prev 0x7fb7c19828a8 <line:525:1, line:526:55> col:55 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c27b0 parent 0x7fb7c3008470 prev 0x7fb7c1982990 <line:527:1, line:528:55> col:55 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c2a40 parent 0x7fb7c3008470 prev 0x7fb7c1982a78 <line:529:1, line:530:55> col:55 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c2cd0 parent 0x7fb7c3008470 prev 0x7fb7c1982b60 <line:531:1, line:532:68> col:68 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18c2f08 <line:534:1, line:578:1> line:535:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c18c2d70 <line:534:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c18c3048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c18c3238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:535:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fb7c18c3388 <line:538:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fb7c18c32e0 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fb7c18c33f0 <line:539:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fb7c18c2db0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18c2d70 '_Tp'
| |   | |-AccessSpecDecl 0x7fb7c18c3448 <line:540:1, col:7> col:1 public
| |   | |-VarDecl 0x7fb7c18c3480 <line:541:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c3550 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c18c3668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:542:99> col:61 constexpr min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c56b0 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb7c18c5698 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb7c18c5670 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c5630 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c3700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c3748 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18c37b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:543:99> col:61 constexpr max 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c5788 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb7c18c5770 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb7c18c5748 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c5708 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c3848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c3890 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18c38f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:544:105> col:61 constexpr lowest 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c5860 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fb7c18c5848 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fb7c18c5820 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c57e0 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c3990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c39d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c18c3a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:546:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c3a98 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c3af0 <line:547:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c3b88 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c3be0 <line:548:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c3c78 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c3cc8 <line:549:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c3d60 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c3db0 <line:550:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c3e48 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c3e98 <line:551:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c3f30 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c3f88 <line:552:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c4030 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c18c40c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:553:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c5938 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fb7c18c5920 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fb7c18c58f8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c58b8 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c4160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c41a8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18c4210 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:554:115> col:61 constexpr round_error 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c5a10 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fb7c18c59f8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fb7c18c59d0 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c5990 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c42a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c42f0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c18c4318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:556:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c43b0 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c4408 <line:557:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c44a0 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c44f8 <line:558:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c4590 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c45e8 <line:559:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c4680 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c46d0 <line:561:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c4768 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c47b8 <line:562:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c4850 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c48a0 <line:563:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c4938 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c4988 <line:564:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c4a20 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c4a70 <line:565:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c4b08 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c18c4ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:566:109> col:61 constexpr infinity 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c5ae8 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fb7c18c5ad0 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fb7c18c5aa8 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c5a68 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c4c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c4c80 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18c4ce8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:567:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c5bc0 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fb7c18c5ba8 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fb7c18c5b80 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c5b40 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c4d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c4dc8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18c4e30 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:568:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c5c98 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fb7c18c5c80 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fb7c18c5c58 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c5c18 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c4ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c4f10 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c18c4f78 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:569:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c18c5d70 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fb7c18c5d58 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fb7c18c5d30 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c18c5cf0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c18c5010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c18c5058 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c18c5078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:571:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c5110 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c5160 <line:572:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c51f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c5248 <line:573:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c52e0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c5330 <line:575:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c53c8 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c18c5418 <line:576:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c18c54b0 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fb7c18c5500 <line:577:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fb7c18c5598 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fb7c18c5f80 parent 0x7fb7c18c2f08 prev 0x7fb7c18c3480 <line:580:1, line:581:61> col:61 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c6238 parent 0x7fb7c18c2f08 prev 0x7fb7c18c3a00 <line:582:1, line:583:60> col:60 digits 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c64d8 parent 0x7fb7c18c2f08 prev 0x7fb7c18c3af0 <line:584:1, line:585:60> col:60 digits10 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c6778 parent 0x7fb7c18c2f08 prev 0x7fb7c18c3be0 <line:586:1, line:587:60> col:60 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c6a10 parent 0x7fb7c18c2f08 prev 0x7fb7c18c3cc8 <line:588:1, line:589:61> col:61 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c6ca0 parent 0x7fb7c18c2f08 prev 0x7fb7c18c3db0 <line:590:1, line:591:61> col:61 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c6f30 parent 0x7fb7c18c2f08 prev 0x7fb7c18c3e98 <line:592:1, line:593:61> col:61 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c71c8 parent 0x7fb7c18c2f08 prev 0x7fb7c18c3f88 <line:594:1, line:595:60> col:60 radix 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c7468 parent 0x7fb7c18c2f08 prev 0x7fb7c18c4318 <line:596:1, line:597:60> col:60 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c7708 parent 0x7fb7c18c2f08 prev 0x7fb7c18c4408 <line:598:1, line:599:60> col:60 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c79a8 parent 0x7fb7c18c2f08 prev 0x7fb7c18c44f8 <line:600:1, line:601:60> col:60 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c7c48 parent 0x7fb7c18c2f08 prev 0x7fb7c18c45e8 <line:602:1, line:603:60> col:60 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb7c18c7ee0 parent 0x7fb7c18c2f08 prev 0x7fb7c18c46d0 <line:604:1, line:605:61> col:61 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c8170 parent 0x7fb7c18c2f08 prev 0x7fb7c18c47b8 <line:606:1, line:607:61> col:61 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c8400 parent 0x7fb7c18c2f08 prev 0x7fb7c18c48a0 <line:608:1, line:609:61> col:61 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c8690 parent 0x7fb7c18c2f08 prev 0x7fb7c18c4988 <line:610:1, line:611:75> col:75 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fb7c18c8920 parent 0x7fb7c18c2f08 prev 0x7fb7c18c4a70 <line:612:1, line:613:61> col:61 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c8bb0 parent 0x7fb7c18c2f08 prev 0x7fb7c18c5078 <line:614:1, line:615:61> col:61 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c8e40 parent 0x7fb7c18c2f08 prev 0x7fb7c18c5160 <line:616:1, line:617:61> col:61 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c90d0 parent 0x7fb7c18c2f08 prev 0x7fb7c18c5248 <line:618:1, line:619:61> col:61 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c9360 parent 0x7fb7c18c2f08 prev 0x7fb7c18c5330 <line:620:1, line:621:61> col:61 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c95f0 parent 0x7fb7c18c2f08 prev 0x7fb7c18c5418 <line:622:1, line:623:61> col:61 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c18c9880 parent 0x7fb7c18c2f08 prev 0x7fb7c18c5500 <line:624:1, line:625:74> col:74 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c18c9ab8 <line:627:1, line:671:1> line:628:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c18c9920 <line:627:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c18c9bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c18c9de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:628:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fb7c18c9f38 <line:631:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fb7c18c9e90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fb7c18c9fa0 <line:632:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fb7c18c9960 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c18c9920 '_Tp'
| |   | |-AccessSpecDecl 0x7fb7c1984200 <line:633:1, col:7> col:1 public
| |   | |-VarDecl 0x7fb7c1984238 <line:634:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1984310 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c1984428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:635:99> col:61 constexpr min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c1986498 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb7c1986480 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb7c1986458 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c1986418 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c19844c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c1984508 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c1984570 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:636:99> col:61 constexpr max 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c1986570 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb7c1986558 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb7c1986530 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c19864f0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c1984608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c1984650 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c19846b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:637:105> col:61 constexpr lowest 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c1986648 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fb7c1986630 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fb7c1986608 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c19865c8 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c1984750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c1984798 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c19847c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:639:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1984858 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c19848b0 <line:640:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1984948 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c19849a0 <line:641:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1984a38 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1984a88 <line:642:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1984b20 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1984b70 <line:643:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1984c08 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1984c58 <line:644:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1984cf0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1984d48 <line:645:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1984de0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c1984e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:646:107> col:61 constexpr epsilon 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c1986720 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fb7c1986708 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fb7c19866e0 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c19866a0 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c1984f10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c1984f58 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c1984fc0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:647:115> col:61 constexpr round_error 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c19867f8 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fb7c19867e0 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fb7c19867b8 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c1986778 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c1985058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c19850a0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c19850c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:649:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1985160 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c19851b8 <line:650:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1985250 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c19852a8 <line:651:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1985340 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1985398 <line:652:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1985430 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1985480 <line:654:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1985518 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1985568 <line:655:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1985600 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1985650 <line:656:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c19856e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1985738 <line:657:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c19857d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1985820 <line:658:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c19858b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c1985950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:659:109> col:61 constexpr infinity 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c19868d0 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fb7c19868b8 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fb7c1986890 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c1986850 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c19859e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c1985a30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c1985a98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:660:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c19869a8 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fb7c1986990 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fb7c1986968 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c1986928 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c1985b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c1985b78 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c1985be0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:661:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c1986a80 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fb7c1986a68 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fb7c1986a40 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c1986a00 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c1985c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c1985cc0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c1985d28 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:662:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c1986b58 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fb7c1986b40 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fb7c1986b18 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c1986ad8 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c1985dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c1985e08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c1985e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:664:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1985ec0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1985f10 <line:665:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1985fa8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1985ff8 <line:666:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1986090 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c19860e0 <line:668:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1986178 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c1986200 <line:669:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c1986298 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fb7c19862e8 <line:670:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fb7c1986380 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fb7c1986d70 parent 0x7fb7c18c9ab8 prev 0x7fb7c1984238 <line:673:1, line:674:64> col:64 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1987008 parent 0x7fb7c18c9ab8 prev 0x7fb7c19847c0 <line:675:1, line:676:63> col:63 digits 'const int' constexpr
| |   |-VarDecl 0x7fb7c19872a8 parent 0x7fb7c18c9ab8 prev 0x7fb7c19848b0 <line:677:1, line:678:63> col:63 digits10 'const int' constexpr
| |   |-VarDecl 0x7fb7c1987548 parent 0x7fb7c18c9ab8 prev 0x7fb7c19849a0 <line:679:1, line:680:63> col:63 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fb7c19877e0 parent 0x7fb7c18c9ab8 prev 0x7fb7c1984a88 <line:681:1, line:682:64> col:64 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1987a70 parent 0x7fb7c18c9ab8 prev 0x7fb7c1984b70 <line:683:1, line:684:64> col:64 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1987d00 parent 0x7fb7c18c9ab8 prev 0x7fb7c1984c58 <line:685:1, line:686:64> col:64 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1987f98 parent 0x7fb7c18c9ab8 prev 0x7fb7c1984d48 <line:687:1, line:688:63> col:63 radix 'const int' constexpr
| |   |-VarDecl 0x7fb7c1988240 parent 0x7fb7c18c9ab8 prev 0x7fb7c19850c8 <line:689:1, line:690:63> col:63 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb7c19884d8 parent 0x7fb7c18c9ab8 prev 0x7fb7c19851b8 <line:691:1, line:692:63> col:63 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb7c1988778 parent 0x7fb7c18c9ab8 prev 0x7fb7c19852a8 <line:693:1, line:694:63> col:63 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb7c1988a18 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985398 <line:695:1, line:696:63> col:63 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb7c1988cb0 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985480 <line:697:1, line:698:64> col:64 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1988f40 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985568 <line:699:1, line:700:64> col:64 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c19891d0 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985650 <line:701:1, line:702:64> col:64 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1989460 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985738 <line:703:1, line:704:78> col:78 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fb7c19896f0 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985820 <line:705:1, line:706:64> col:64 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1989980 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985e28 <line:707:1, line:708:64> col:64 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1989c10 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985f10 <line:709:1, line:710:64> col:64 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1989ea0 parent 0x7fb7c18c9ab8 prev 0x7fb7c1985ff8 <line:711:1, line:712:64> col:64 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198a130 parent 0x7fb7c18c9ab8 prev 0x7fb7c19860e0 <line:713:1, line:714:64> col:64 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198a3f0 parent 0x7fb7c18c9ab8 prev 0x7fb7c1986200 <line:715:1, line:716:64> col:64 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198a680 parent 0x7fb7c18c9ab8 prev 0x7fb7c19862e8 <line:717:1, line:718:77> col:77 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb7c198a8b8 <line:720:1, line:764:1> line:721:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb7c198a720 <line:720:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb7c198a9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb7c198abe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:721:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fb7c198ad38 <line:724:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fb7c198ac90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fb7c198ada0 <line:725:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fb7c198a760 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb7c198a720 '_Tp'
| |   | |-AccessSpecDecl 0x7fb7c198adf8 <line:726:1, col:7> col:1 public
| |   | |-VarDecl 0x7fb7c198ae30 <line:727:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198af00 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c198b018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:728:99> col:61 constexpr min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d060 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb7c198d048 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb7c198d020 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198cfe0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198b0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198b0f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c198b160 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:729:99> col:61 constexpr max 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d138 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb7c198d120 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb7c198d0f8 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198d0b8 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198b1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198b240 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c198b2a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:730:105> col:61 constexpr lowest 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d210 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fb7c198d1f8 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fb7c198d1d0 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198d190 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198b340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198b388 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c198b3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:732:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198b448 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198b4a0 <line:733:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198b538 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198b590 <line:734:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198b628 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198b678 <line:735:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198b710 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198b760 <line:736:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198b7f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198b848 <line:737:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198b8e0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198b938 <line:738:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198b9d0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c198ba68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:739:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d2e8 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fb7c198d2d0 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fb7c198d2a8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198d268 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198bb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198bb48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c198bbb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:740:115> col:61 constexpr round_error 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d3c0 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fb7c198d3a8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fb7c198d380 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198d340 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198bc48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198bc90 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c198bcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:742:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198bd50 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198bda8 <line:743:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198be40 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198be98 <line:744:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198bf30 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198bf88 <line:745:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198c020 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198c070 <line:747:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198c108 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198c158 <line:748:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198c200 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198c250 <line:749:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198c2e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198c338 <line:750:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198c3d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198c420 <line:751:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198c4b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb7c198c550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:752:109> col:61 constexpr infinity 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d498 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fb7c198d480 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fb7c198d458 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198d418 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198c5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198c630 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c198c698 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:753:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d570 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fb7c198d558 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fb7c198d530 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198d4f0 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198c730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198c778 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c198c7e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:754:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d648 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fb7c198d630 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fb7c198d608 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198d5c8 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198c878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198c8c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb7c198c928 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:755:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb7c198d720 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fb7c198d708 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fb7c198d6e0 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb7c198d6a0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb7c198c9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb7c198ca08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb7c198ca28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:757:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198cac0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198cb10 <line:758:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198cba8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198cbf8 <line:759:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198cc90 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198cce0 <line:761:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198cd78 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb7c198cdc8 <line:762:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb7c198ce60 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fb7c198ceb0 <line:763:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fb7c198cf48 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fb7c198d930 parent 0x7fb7c198a8b8 prev 0x7fb7c198ae30 <line:766:1, line:767:70> col:70 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198dbc8 parent 0x7fb7c198a8b8 prev 0x7fb7c198b3b0 <line:768:1, line:769:69> col:69 digits 'const int' constexpr
| |   |-VarDecl 0x7fb7c198de68 parent 0x7fb7c198a8b8 prev 0x7fb7c198b4a0 <line:770:1, line:771:69> col:69 digits10 'const int' constexpr
| |   |-VarDecl 0x7fb7c198e108 parent 0x7fb7c198a8b8 prev 0x7fb7c198b590 <line:772:1, line:773:69> col:69 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fb7c198e3b0 parent 0x7fb7c198a8b8 prev 0x7fb7c198b678 <line:774:1, line:775:70> col:70 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198e640 parent 0x7fb7c198a8b8 prev 0x7fb7c198b760 <line:776:1, line:777:70> col:70 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198e8d0 parent 0x7fb7c198a8b8 prev 0x7fb7c198b848 <line:778:1, line:779:70> col:70 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198eb68 parent 0x7fb7c198a8b8 prev 0x7fb7c198b938 <line:780:1, line:781:69> col:69 radix 'const int' constexpr
| |   |-VarDecl 0x7fb7c198ee08 parent 0x7fb7c198a8b8 prev 0x7fb7c198bcb8 <line:782:1, line:783:69> col:69 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb7c198f0a8 parent 0x7fb7c198a8b8 prev 0x7fb7c198bda8 <line:784:1, line:785:69> col:69 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb7c198f348 parent 0x7fb7c198a8b8 prev 0x7fb7c198be98 <line:786:1, line:787:69> col:69 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb7c198f5e8 parent 0x7fb7c198a8b8 prev 0x7fb7c198bf88 <line:788:1, line:789:69> col:69 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb7c198f880 parent 0x7fb7c198a8b8 prev 0x7fb7c198c070 <line:790:1, line:791:70> col:70 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198fb10 parent 0x7fb7c198a8b8 prev 0x7fb7c198c158 <line:792:1, line:793:70> col:70 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c198fda0 parent 0x7fb7c198a8b8 prev 0x7fb7c198c250 <line:794:1, line:795:70> col:70 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1990030 parent 0x7fb7c198a8b8 prev 0x7fb7c198c338 <line:796:1, line:797:84> col:84 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fb7c19902c0 parent 0x7fb7c198a8b8 prev 0x7fb7c198c420 <line:798:1, line:799:70> col:70 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1990550 parent 0x7fb7c198a8b8 prev 0x7fb7c198ca28 <line:800:1, line:801:70> col:70 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c19907e0 parent 0x7fb7c198a8b8 prev 0x7fb7c198cb10 <line:802:1, line:803:70> col:70 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1990a70 parent 0x7fb7c198a8b8 prev 0x7fb7c198cbf8 <line:804:1, line:805:70> col:70 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1990d00 parent 0x7fb7c198a8b8 prev 0x7fb7c198cce0 <line:806:1, line:807:70> col:70 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fb7c1990f90 parent 0x7fb7c198a8b8 prev 0x7fb7c198cdc8 <line:808:1, line:809:70> col:70 tinyness_before 'const _Bool' constexpr
| |   `-VarDecl 0x7fb7c1991220 parent 0x7fb7c198a8b8 prev 0x7fb7c198ceb0 <line:810:1, line:811:83> col:83 round_style 'const enum std::__1::float_round_style' constexpr
| |-FunctionTemplateDecl 0x7fb7c1991520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:316:1, line:322:1> line:319:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7fb7c19912c0 <line:316:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1991488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:322:1> line:319:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb7c1991380 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1991c90 <line:320:1, line:322:1>
| |   | `-ReturnStmt 0x7fb7c1991c78 <line:321:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7fb7c1991c60 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb7c1991c40 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7fb7c1991c10 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7fb7c1991670 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb7c1991618 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb7c19915f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb7c19915d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb7c1991380 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb7c1991650 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb7c19917e8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb7c19917d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb7c19917a8 <col:37> 'int (float)' lvalue Function 0x7fb7c2870068 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb7c1991780 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb7c1991760 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb7c19916f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb7c1991380 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb7c1991be0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7fb7c19918b8 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb7c1991860 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb7c1991840 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb7c1991818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb7c1991380 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb7c1991898 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb7c1991a30 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb7c1991a18 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb7c19919f0 <col:37> 'int (double)' lvalue Function 0x7fb7c2871db0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb7c19919c8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb7c19919a8 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb7c1991938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb7c1991380 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb7c1991bb0 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7fb7c1991b98 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb7c1991b70 <col:37> 'int (long double)' lvalue Function 0x7fb7c2874488 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb7c1991b48 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb7c1991b28 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb7c1991ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb7c1991380 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c1991578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c19915c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c1992298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:326:1, line:332:1> line:329:1 signbit
| | |-TemplateTypeParmDecl 0x7fb7c1991cb0 <line:326:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1992200 <line:327:1, line:332:1> line:329:1 signbit 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19920c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1992648 <line:330:1, line:332:1>
| |   | `-ReturnStmt 0x7fb7c1992630 <line:331:5, col:73>
| |   |   `-CallExpr 0x7fb7c1992600 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c1992348 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7fb7c1991520
| |   |     `-CStyleCastExpr 0x7fb7c19925d8 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c1992590 <col:65> '_A1' lvalue ParmVar 0x7fb7c19920c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19922f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1992338 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1992d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:334:1, line:339:24> line:338:1 signbit
| | |-TemplateTypeParmDecl 0x7fb7c1992668 <line:334:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1992cf8 <line:335:1, line:339:24> line:338:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c1992be0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1992ec8 <line:339:1, col:24>
| |   | `-ReturnStmt 0x7fb7c1992eb0 <col:3, col:21>
| |   |   `-BinaryOperator 0x7fb7c1992e88 <col:10, col:21> '<dependent type>' '<'
| |   |     |-DeclRefExpr 0x7fb7c1992e40 <col:10> '_A1' lvalue ParmVar 0x7fb7c1992be0 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fb7c1992e68 <col:21> 'int' 0
| |   |-AlwaysInlineAttr 0x7fb7c1992de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1992e30 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19935e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:341:1, line:346:17> line:345:1 signbit
| | |-TemplateTypeParmDecl 0x7fb7c1992ee8 <line:341:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1993548 <line:342:1, line:346:17> line:345:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && !std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c1993430 <col:9> col:12 '_A1'
| |   |-CompoundStmt 0x7fb7c19936c0 <line:346:1, col:17>
| |   | `-ReturnStmt 0x7fb7c19936a8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fb7c1993690 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fb7c1993638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1993680 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1993948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:378:1, line:384:1> line:381:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7fb7c19936e0 <line:378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19938b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:384:1> line:381:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb7c19937a0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19940a0 <line:382:1, line:384:1>
| |   | `-ReturnStmt 0x7fb7c1994088 <line:383:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7fb7c1994068 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7fb7c1994038 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7fb7c1993a98 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7fb7c1993a40 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7fb7c1993a20 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7fb7c19939f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb7c19937a0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7fb7c1993a78 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7fb7c1993c10 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7fb7c1993bf8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7fb7c1993bd0 <col:37> 'int (float)' lvalue Function 0x7fb7c1866198 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7fb7c1993ba8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7fb7c1993b88 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7fb7c1993b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb7c19937a0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7fb7c1994008 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7fb7c1993ce0 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb7c1993c88 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb7c1993c68 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb7c1993c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb7c19937a0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb7c1993cc0 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7fb7c1993e58 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb7c1993e40 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb7c1993e18 <col:37> 'int (double)' lvalue Function 0x7fb7c1866318 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7fb7c1993df0 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7fb7c1993dd0 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb7c1993d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb7c19937a0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7fb7c1993fd8 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7fb7c1993fc0 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7fb7c1993f98 <col:37> 'int (long double)' lvalue Function 0x7fb7c1866498 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7fb7c1993f70 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7fb7c1993f50 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7fb7c1993ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb7c19937a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19939a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c19939e8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c1994660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:1, line:394:1> line:391:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fb7c19940c0 <line:388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19945c8 <line:389:1, line:394:1> line:391:1 fpclassify 'typename std::enable_if<std::is_floating_point<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19944b0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1994928 <line:392:1, line:394:1>
| |   | `-ReturnStmt 0x7fb7c1994910 <line:393:5, col:76>
| |   |   `-CallExpr 0x7fb7c19948e0 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c1994710 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7fb7c1993948
| |   |     `-CStyleCastExpr 0x7fb7c19948b8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c1994870 <col:68> '_A1' lvalue ParmVar 0x7fb7c19944b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19946b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1994700 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1994ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:396:1, line:400:47> line:399:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fb7c1994948 <line:396:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1994e48 <line:397:1, line:400:47> line:399:1 fpclassify 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c1994d30 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1995088 <line:400:1, col:47>
| |   | `-ReturnStmt 0x7fb7c1995070 <col:3, /usr/include/math.h:77:25>
| |   |   `-ConditionalOperator 0x7fb7c1995040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, /usr/include/math.h:77:25> 'int'
| |   |     |-BinaryOperator 0x7fb7c1994fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, col:22> '<dependent type>' '=='
| |   |     | |-DeclRefExpr 0x7fb7c1994f90 <col:10> '_A1' lvalue ParmVar 0x7fb7c1994d30 '__lcpp_x' '_A1'
| |   |     | `-IntegerLiteral 0x7fb7c1994fb8 <col:22> 'int' 0
| |   |     |-IntegerLiteral 0x7fb7c1995000 </usr/include/math.h:76:25> 'int' 3
| |   |     `-IntegerLiteral 0x7fb7c1995020 <line:77:25> 'int' 4
| |   |-AlwaysInlineAttr 0x7fb7c1994f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1994f80 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19952d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:424:1, line:430:1> line:427:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7fb7c19950a8 <line:424:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1995238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:430:1> line:427:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb7c1995170 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1995a40 <line:428:1, line:430:1>
| |   | `-ReturnStmt 0x7fb7c1995a28 <line:429:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7fb7c1995a10 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb7c19959f0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7fb7c19959c0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7fb7c1995420 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb7c19953c8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb7c19953a8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb7c1995380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb7c1995170 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb7c1995400 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb7c1995598 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb7c1995580 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb7c1995558 <col:37> 'int (float)' lvalue Function 0x7fb7c286cd90 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb7c1995530 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb7c1995510 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb7c19954a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb7c1995170 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb7c1995990 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7fb7c1995668 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb7c1995610 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb7c19955f0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb7c19955c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb7c1995170 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb7c1995648 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb7c19957e0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb7c19957c8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb7c19957a0 <col:37> 'int (double)' lvalue Function 0x7fb7c286d600 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb7c1995778 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb7c1995758 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb7c19956e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb7c1995170 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb7c1995960 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fb7c1995948 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb7c1995920 <col:37> 'int (long double)' lvalue Function 0x7fb7c286e300 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb7c19958f8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb7c19958d8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb7c1995868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb7c1995170 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c1995328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c1995370 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c1996180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:434:1, line:442:1> line:439:1 isfinite
| | |-TemplateTypeParmDecl 0x7fb7c1995a60 <line:434:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19960e8 <line:435:1, line:442:1> line:439:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c1995fd0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1996458 <line:440:1, line:442:1>
| |   | `-ReturnStmt 0x7fb7c1996440 <line:441:5, col:74>
| |   |   `-CallExpr 0x7fb7c1996410 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c1996248 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7fb7c19952d0
| |   |     `-CStyleCastExpr 0x7fb7c19963e8 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19963a0 <col:66> '_A1' lvalue ParmVar 0x7fb7c1995fd0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19961d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1996238 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1996b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:444:1, line:450:16> line:449:1 isfinite
| | |-TemplateTypeParmDecl 0x7fb7c1996478 <line:444:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1996ad8 <line:445:1, line:450:16> line:449:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19969c0 <col:10> col:13 '_A1'
| |   |-CompoundStmt 0x7fb7c1996c50 <line:450:1, col:16>
| |   | `-ReturnStmt 0x7fb7c1996c38 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fb7c1996c20 <col:10> '_Bool' true
| |   |-AlwaysInlineAttr 0x7fb7c1996bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1996c10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1996e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:458:1, line:464:1> line:461:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7fb7c1996c70 <line:458:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1996df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:464:1> line:461:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb7c1996d30 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1997600 <line:462:1, line:464:1>
| |   | `-ReturnStmt 0x7fb7c19975e8 <line:463:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7fb7c19975d0 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb7c19975b0 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7fb7c1997580 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7fb7c1996fe0 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb7c1996f88 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb7c1996f68 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb7c1996f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb7c1996d30 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb7c1996fc0 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb7c1997158 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb7c1997140 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb7c1997118 <col:37> 'int (float)' lvalue Function 0x7fb7c286eb70 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb7c19970f0 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb7c19970d0 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb7c1997060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb7c1996d30 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb7c1997550 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7fb7c1997228 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb7c19971d0 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb7c19971b0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb7c1997188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb7c1996d30 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb7c1997208 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb7c19973a0 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb7c1997388 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb7c1997360 <col:37> 'int (double)' lvalue Function 0x7fb7c286ee90 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb7c1997338 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb7c1997318 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb7c19972a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb7c1996d30 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb7c1997520 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fb7c1997508 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb7c19974e0 <col:37> 'int (long double)' lvalue Function 0x7fb7c286f5b0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb7c19974b8 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb7c1997498 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb7c1997428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb7c1996d30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c1996ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c1996f30 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c1997c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:468:1, line:476:1> line:473:1 isinf
| | |-TemplateTypeParmDecl 0x7fb7c1997620 <line:468:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1997b68 <line:469:1, line:476:1> line:473:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c1997a90 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1997ec8 <line:474:1, line:476:1>
| |   | `-ReturnStmt 0x7fb7c1997eb0 <line:475:5, col:71>
| |   |   `-CallExpr 0x7fb7c1997e80 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c1997cb0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7fb7c1996e90
| |   |     `-CStyleCastExpr 0x7fb7c1997e58 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c1997e10 <col:63> '_A1' lvalue ParmVar 0x7fb7c1997a90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c1997c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1997ca0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1998500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:478:1, line:484:17> line:483:1 isinf
| | |-TemplateTypeParmDecl 0x7fb7c1997ee8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1998468 <line:479:1, line:484:17> line:483:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c1998390 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fb7c19985e0 <line:484:1, col:17>
| |   | `-ReturnStmt 0x7fb7c19985c8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fb7c19985b0 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fb7c1998558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19985a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1998820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:492:1, line:498:1> line:495:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7fb7c1998600 <line:492:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1998788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:498:1> line:495:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb7c19986c0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1998f90 <line:496:1, line:498:1>
| |   | `-ReturnStmt 0x7fb7c1998f78 <line:497:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7fb7c1998f60 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb7c1998f40 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7fb7c1998f10 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7fb7c1998970 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb7c1998918 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb7c19988f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb7c19988d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb7c19986c0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb7c1998950 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb7c1998ae8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb7c1998ad0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb7c1998aa8 <col:37> 'int (float)' lvalue Function 0x7fb7c286f8d0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb7c1998a80 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb7c1998a60 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb7c19989f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb7c19986c0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb7c1998ee0 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7fb7c1998bb8 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb7c1998b60 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb7c1998b40 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb7c1998b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb7c19986c0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb7c1998b98 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb7c1998d30 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb7c1998d18 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb7c1998cf0 <col:37> 'int (double)' lvalue Function 0x7fb7c286fb58 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb7c1998cc8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb7c1998ca8 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb7c1998c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb7c19986c0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb7c1998eb0 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fb7c1998e98 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb7c1998e70 <col:37> 'int (long double)' lvalue Function 0x7fb7c286fde0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb7c1998e48 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb7c1998e28 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb7c1998db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb7c19986c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c1998878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c19988c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c1999450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:502:1, line:508:1> line:505:1 isnan
| | |-TemplateTypeParmDecl 0x7fb7c1998fb0 <line:502:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19993b8 <line:503:1, line:508:1> line:505:1 isnan 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19992e0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c1999718 <line:506:1, line:508:1>
| |   | `-ReturnStmt 0x7fb7c1999700 <line:507:5, col:71>
| |   |   `-CallExpr 0x7fb7c19996d0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c1999500 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7fb7c1998820
| |   |     `-CStyleCastExpr 0x7fb7c19996a8 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c1999660 <col:63> '_A1' lvalue ParmVar 0x7fb7c19992e0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19994a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19994f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1999cd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:510:1, line:514:17> line:513:1 isnan
| | |-TemplateTypeParmDecl 0x7fb7c1999738 <line:510:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1999c38 <line:511:1, line:514:17> line:513:1 isnan 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c1999b20 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fb7c1999db0 <line:514:1, col:17>
| |   | `-ReturnStmt 0x7fb7c1999d98 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fb7c1999d80 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fb7c1999d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c1999d70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c1999ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:522:1, line:528:1> line:525:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7fb7c1999dd0 <line:522:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c1999f58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:528:1> line:525:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb7c1999e90 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c199a778 <line:526:1, line:528:1>
| |   | `-ReturnStmt 0x7fb7c199a760 <line:527:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7fb7c199a748 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb7c199a728 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7fb7c199a6f8 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7fb7c199a140 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb7c199a0e8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb7c199a0c8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb7c199a0a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb7c1999e90 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb7c199a120 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb7c199a2d0 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb7c199a2b8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb7c199a290 <col:37> 'int (float)' lvalue Function 0x7fb7c2876238 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb7c199a268 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb7c199a248 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb7c199a1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb7c1999e90 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb7c199a6c8 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7fb7c199a3a0 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb7c199a348 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb7c199a328 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb7c199a300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb7c1999e90 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb7c199a380 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb7c199a518 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb7c199a500 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb7c199a4d8 <col:37> 'int (double)' lvalue Function 0x7fb7c2876a90 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb7c199a4b0 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb7c199a490 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb7c199a420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb7c1999e90 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb7c199a698 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fb7c199a680 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb7c199a658 <col:37> 'int (long double)' lvalue Function 0x7fb7c2876ed8 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb7c199a630 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb7c199a610 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb7c199a5a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb7c1999e90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c199a048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c199a090 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c199ac40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:532:1, line:538:1> line:535:1 isnormal
| | |-TemplateTypeParmDecl 0x7fb7c199a798 <line:532:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c199aba8 <line:533:1, line:538:1> line:535:1 isnormal 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c199aad0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c199af08 <line:536:1, line:538:1>
| |   | `-ReturnStmt 0x7fb7c199aef0 <line:537:5, col:74>
| |   |   `-CallExpr 0x7fb7c199aec0 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c199acf0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7fb7c1999ff0
| |   |     `-CStyleCastExpr 0x7fb7c199ae98 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c199ae50 <col:66> '_A1' lvalue ParmVar 0x7fb7c199aad0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c199ac98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c199ace0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c199b3d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:540:1, line:544:25> line:543:1 isnormal
| | |-TemplateTypeParmDecl 0x7fb7c199af28 <line:540:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c199b338 <line:541:1, line:544:25> line:543:1 isnormal 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c199b260 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c199b508 <line:544:1, col:25>
| |   | `-ReturnStmt 0x7fb7c199b4f0 <col:3, col:22>
| |   |   `-BinaryOperator 0x7fb7c199b4c8 <col:10, col:22> '<dependent type>' '!='
| |   |     |-DeclRefExpr 0x7fb7c199b480 <col:10> '_A1' lvalue ParmVar 0x7fb7c199b260 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fb7c199b4a8 <col:22> 'int' 0
| |   |-AlwaysInlineAttr 0x7fb7c199b428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c199b470 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c199b890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:552:1, line:558:1> line:555:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7fb7c199b528 <line:552:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199b598 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c199b7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:558:1> line:555:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb7c199b668 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199b6d8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c199bbf8 <line:556:1, line:558:1>
| |   | `-ReturnStmt 0x7fb7c199bbe0 <line:557:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7fb7c199bba8 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb7c199baf0 <col:25> '<builtin fn type>' Function 0x7fb7c199ba00 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb7c199bb40 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb7c199bb18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:22> '_A1' lvalue ParmVar 0x7fb7c199b668 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb7c199bb88 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb7c199bb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:32> '_A2' lvalue ParmVar 0x7fb7c199b6d8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c199b8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c199b938 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c199c460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:562:1, line:574:1> line:570:1 isgreater
| | |-TemplateTypeParmDecl 0x7fb7c199bc18 <line:562:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199bc88 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c199c3c8 <line:563:1, line:574:1> line:570:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c199c230 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199c2a0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c199c950 <line:571:1, line:574:1>
| |   | |-DeclStmt 0x7fb7c199c7a8 <line:572:5, col:57>
| |   | | `-TypedefDecl 0x7fb7c199c750 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c199c6e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb7c199c938 <line:573:5, col:61>
| |   |   `-CallExpr 0x7fb7c199c900 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c199c7c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7fb7c199b890
| |   |     |-CStyleCastExpr 0x7fb7c199c878 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c199c840 <col:37> '_A1' lvalue ParmVar 0x7fb7c199c230 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c199c8d8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c199c8a0 <col:53> '_A2' lvalue ParmVar 0x7fb7c199c2a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c199c4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c199c508 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c199cca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:582:1, line:588:1> line:585:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7fb7c199c978 <line:582:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199c9e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c199cc08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:588:1> line:585:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb7c199cab8 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199cb28 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c199cfa0 <line:586:1, line:588:1>
| |   | `-ReturnStmt 0x7fb7c199cf88 <line:587:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7fb7c199cf50 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb7c199ce98 <col:30> '<builtin fn type>' Function 0x7fb7c199cda8 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb7c199cee8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb7c199cec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:27> '_A1' lvalue ParmVar 0x7fb7c199cab8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb7c199cf30 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb7c199cf08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:37> '_A2' lvalue ParmVar 0x7fb7c199cb28 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c199cd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c199cd48 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c199d6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:592:1, line:604:1> line:600:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7fb7c199cfc0 <line:592:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199d028 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c199d608 <line:593:1, line:604:1> line:600:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c199d4b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199d520 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c199dac0 <line:601:1, line:604:1>
| |   | |-DeclStmt 0x7fb7c199d918 <line:602:5, col:57>
| |   | | `-TypedefDecl 0x7fb7c199d8c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c199d850 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb7c199daa8 <line:603:5, col:66>
| |   |   `-CallExpr 0x7fb7c199da70 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c199d930 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7fb7c199cca0
| |   |     |-CStyleCastExpr 0x7fb7c199d9e8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c199d9b0 <col:42> '_A1' lvalue ParmVar 0x7fb7c199d4b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c199da48 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c199da10 <col:58> '_A2' lvalue ParmVar 0x7fb7c199d520 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c199d700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c199d748 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c199de10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:612:1, line:618:1> line:615:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7fb7c199dae8 <line:612:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199db58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c199dd78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:618:1> line:615:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb7c199dc28 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199dc98 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c199e110 <line:616:1, line:618:1>
| |   | `-ReturnStmt 0x7fb7c199e0f8 <line:617:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7fb7c199e0c0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb7c199e008 <col:22> '<builtin fn type>' Function 0x7fb7c199df18 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb7c199e058 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb7c199e030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:19> '_A1' lvalue ParmVar 0x7fb7c199dc28 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb7c199e0a0 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb7c199e078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:29> '_A2' lvalue ParmVar 0x7fb7c199dc98 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c199de70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c199deb8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c199e830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:622:1, line:634:1> line:630:1 isless
| | |-TemplateTypeParmDecl 0x7fb7c199e130 <line:622:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199e198 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c199e798 <line:623:1, line:634:1> line:630:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c199e640 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199e6b0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c199ec50 <line:631:1, line:634:1>
| |   | |-DeclStmt 0x7fb7c199eaa8 <line:632:5, col:57>
| |   | | `-TypedefDecl 0x7fb7c199ea50 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c199e9e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb7c199ec38 <line:633:5, col:58>
| |   |   `-CallExpr 0x7fb7c199ec00 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c199eac0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7fb7c199de10
| |   |     |-CStyleCastExpr 0x7fb7c199eb78 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c199eb40 <col:34> '_A1' lvalue ParmVar 0x7fb7c199e640 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c199ebd8 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c199eba0 <col:50> '_A2' lvalue ParmVar 0x7fb7c199e6b0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c199e890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c199e8d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c199efa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:642:1, line:648:1> line:645:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7fb7c199ec78 <line:642:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199ece8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c199ef08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:648:1> line:645:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb7c199edb8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199ee28 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c199f2a0 <line:646:1, line:648:1>
| |   | `-ReturnStmt 0x7fb7c199f288 <line:647:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7fb7c199f250 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb7c199f198 <col:27> '<builtin fn type>' Function 0x7fb7c199f0a8 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb7c199f1e8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb7c199f1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:24> '_A1' lvalue ParmVar 0x7fb7c199edb8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb7c199f230 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb7c199f208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:34> '_A2' lvalue ParmVar 0x7fb7c199ee28 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c199f000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c199f048 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c199f9a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:652:1, line:664:1> line:660:1 islessequal
| | |-TemplateTypeParmDecl 0x7fb7c199f2c0 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199f328 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c199f908 <line:653:1, line:664:1> line:660:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c199f7b0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199f820 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c199fdc0 <line:661:1, line:664:1>
| |   | |-DeclStmt 0x7fb7c199fc18 <line:662:5, col:57>
| |   | | `-TypedefDecl 0x7fb7c199fbc0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c199fb50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb7c199fda8 <line:663:5, col:63>
| |   |   `-CallExpr 0x7fb7c199fd70 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c199fc30 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7fb7c199efa0
| |   |     |-CStyleCastExpr 0x7fb7c199fce8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c199fcb0 <col:39> '_A1' lvalue ParmVar 0x7fb7c199f7b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c199fd48 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c199fd10 <col:55> '_A2' lvalue ParmVar 0x7fb7c199f820 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c199fa00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c199fa48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19a0110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:672:1, line:678:1> line:675:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7fb7c199fde8 <line:672:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c199fe58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19a0078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1> line:675:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb7c199ff28 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c199ff98 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19a0448 <line:676:1, line:678:1>
| |   | `-ReturnStmt 0x7fb7c19a0430 <line:677:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7fb7c19a03f8 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb7c19a0340 <col:29> '<builtin fn type>' Function 0x7fb7c19a0250 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb7c19a0390 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb7c19a0368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:26> '_A1' lvalue ParmVar 0x7fb7c199ff28 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb7c19a03d8 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb7c19a03b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:36> '_A2' lvalue ParmVar 0x7fb7c199ff98 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19a0170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c19a01b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c19a0b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:682:1, line:694:1> line:690:1 islessgreater
| | |-TemplateTypeParmDecl 0x7fb7c19a0468 <line:682:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19a04d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19a0ab8 <line:683:1, line:694:1> line:690:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19a0960 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19a09d0 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19a0f70 <line:691:1, line:694:1>
| |   | |-DeclStmt 0x7fb7c19a0dc8 <line:692:5, col:57>
| |   | | `-TypedefDecl 0x7fb7c19a0d70 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19a0d00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb7c19a0f58 <line:693:5, col:65>
| |   |   `-CallExpr 0x7fb7c19a0f20 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19a0de0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7fb7c19a0110
| |   |     |-CStyleCastExpr 0x7fb7c19a0e98 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19a0e60 <col:41> '_A1' lvalue ParmVar 0x7fb7c19a0960 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19a0ef8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19a0ec0 <col:57> '_A2' lvalue ParmVar 0x7fb7c19a09d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19a0bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19a0bf8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19a12c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:708:1> line:705:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7fb7c19a0f98 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19a1008 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19a1228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:708:1> line:705:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb7c19a10d8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19a1148 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19a15c0 <line:706:1, line:708:1>
| |   | `-ReturnStmt 0x7fb7c19a15a8 <line:707:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7fb7c19a1570 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb7c19a14b8 <col:27> '<builtin fn type>' Function 0x7fb7c19a13c8 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb7c19a1508 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb7c19a14e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:24> '_A1' lvalue ParmVar 0x7fb7c19a10d8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb7c19a1550 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb7c19a1528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:34> '_A2' lvalue ParmVar 0x7fb7c19a1148 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19a1320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb7c19a1368 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb7c19a1cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:712:1, line:724:1> line:720:1 isunordered
| | |-TemplateTypeParmDecl 0x7fb7c19a15e0 <line:712:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19a1648 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19a1c28 <line:713:1, line:724:1> line:720:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19a1ad0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19a1b40 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19a20e0 <line:721:1, line:724:1>
| |   | |-DeclStmt 0x7fb7c19a1f38 <line:722:5, col:57>
| |   | | `-TypedefDecl 0x7fb7c19a1ee0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19a1e70 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb7c19a20c8 <line:723:5, col:63>
| |   |   `-CallExpr 0x7fb7c19a2090 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19a1f50 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7fb7c19a12c0
| |   |     |-CStyleCastExpr 0x7fb7c19a2008 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19a1fd0 <col:39> '_A1' lvalue ParmVar 0x7fb7c19a1ad0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19a2068 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19a2030 <col:55> '_A2' lvalue ParmVar 0x7fb7c19a1b40 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19a1d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19a1d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a2200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:731:1, line:733:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a2150 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19a23f0 <col:31, col:57>
| | | `-ReturnStmt 0x7fb7c19a23d8 <col:32, col:55>
| | |   `-CallExpr 0x7fb7c19a2390 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19a2378 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a2318 <col:39, col:41> 'float (float)' lvalue Function 0x7fb7c28852f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19a23c0 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a2350 <col:47> 'float' lvalue ParmVar 0x7fb7c19a2150 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19a22a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a22e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a24f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:735:1, line:737:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a2458 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7fb7c19a26e0 <col:32, col:57>
| | | `-ReturnStmt 0x7fb7c19a26c8 <col:33, col:55>
| | |   `-CallExpr 0x7fb7c19a2680 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7fb7c19a2668 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a2608 <col:40, col:42> 'double (double)' lvalue Function 0x7fb7c2885490 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7fb7c19a26b0 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a2640 <col:47> 'double' lvalue ParmVar 0x7fb7c19a2458 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7fb7c19a2590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a25d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a27e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:739:1, line:741:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a2748 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19a29d0 <col:37, col:63>
| | | `-ReturnStmt 0x7fb7c19a29b8 <col:38, col:61>
| | |   `-CallExpr 0x7fb7c19a2970 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19a2958 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a28f8 <col:45, col:47> 'long double (long double)' lvalue Function 0x7fb7c2885630 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19a29a0 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a2930 <col:53> 'long double' lvalue ParmVar 0x7fb7c19a2748 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19a2880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a28c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a2ad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:747:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a2a38 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19a2cc0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19a2ca8 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19a2c60 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19a2c48 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a2be8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c2877338 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19a2c90 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a2c20 <col:99> 'float' lvalue ParmVar 0x7fb7c19a2a38 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19a2b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a2bb8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a2dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:748:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a2d28 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19a2fb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19a2f98 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19a2f50 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19a2f38 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a2ed8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2877678 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19a2f80 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a2f10 <col:99> 'long double' lvalue ParmVar 0x7fb7c19a2d28 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19a2e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a2ea8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19a3560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:751:1, line:754:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7fb7c19a2fd0 <line:751:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19a34c8 <line:752:1, line:754:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19a33b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19a5060 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19a5048 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19a5018 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19a5000 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19a4fc8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c28774d8 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19a36e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19a36a0 <col:53> '_A1' lvalue ParmVar 0x7fb7c19a33b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19a35b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19a3600 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a5160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:759:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a50c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19a5350 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19a5338 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19a52f0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19a52d8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a5278 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c2877818 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19a5320 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a52b0 <col:99> 'float' lvalue ParmVar 0x7fb7c19a50c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19a5200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a5248 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a5450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:760:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a53b8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19a5640 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19a5628 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19a55e0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19a55c8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a5568 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2877ba0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19a5610 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a55a0 <col:99> 'long double' lvalue ParmVar 0x7fb7c19a53b8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19a54f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a5538 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19a5b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:763:1, line:766:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7fb7c19a5660 <line:763:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19a5a68 <line:764:1, line:766:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19a5990 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19a6020 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19a6008 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19a5fd8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19a5fc0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19a5f88 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c2877a00 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19a5c80 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19a5c40 <col:53> '_A1' lvalue ParmVar 0x7fb7c19a5990 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19a5b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19a5ba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a6120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:771:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a6088 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19a6340 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19a6328 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19a62e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19a62c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a6268 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c2877d40 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19a6310 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a62a0 <col:99> 'float' lvalue ParmVar 0x7fb7c19a6088 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19a61c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a6238 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a6440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:772:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a63a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19a6630 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19a6618 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19a65d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19a65b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a6558 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2878080 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19a6600 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a6590 <col:99> 'long double' lvalue ParmVar 0x7fb7c19a63a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19a64e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a6528 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19a6af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:775:1, line:778:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7fb7c19a6650 <line:775:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19a6a58 <line:776:1, line:778:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19a6980 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19a7010 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19a6ff8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19a6fc8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19a6fb0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19a6f78 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c2877ee0 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19a6c70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19a6c30 <col:53> '_A1' lvalue ParmVar 0x7fb7c19a6980 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19a6b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19a6b90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a7190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:783:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a7078 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fb7c19a70f0 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19a7400 <col:106, col:143>
| | | `-ReturnStmt 0x7fb7c19a73e8 <col:107, col:141>
| | |   `-CallExpr 0x7fb7c19a7380 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19a7368 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a72b0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fb7c28782e8 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19a73b8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19a72e8 <col:123> 'float' lvalue ParmVar 0x7fb7c19a7078 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19a73d0 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a7310 <col:133> 'float' lvalue ParmVar 0x7fb7c19a70f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19a7238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a7280 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a7580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:784:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a7468 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fb7c19a74e0 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19a77f0 <col:106, col:143>
| | | `-ReturnStmt 0x7fb7c19a77d8 <col:107, col:141>
| | |   `-CallExpr 0x7fb7c19a7770 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19a7758 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a76a0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fb7c2878848 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19a77a8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19a76d8 <col:123> 'long double' lvalue ParmVar 0x7fb7c19a7468 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19a77c0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a7700 <col:133> 'long double' lvalue ParmVar 0x7fb7c19a74e0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19a7628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a7670 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19a8150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:787:1, line:801:1> line:795:1 atan2
| | |-TemplateTypeParmDecl 0x7fb7c19a7810 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19a7878 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19a80b8 <line:788:1, line:801:1> line:795:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19a7f20 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7fb7c19a7f90 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7fb7c19a9a58 <line:796:1, line:801:1>
| |   | |-DeclStmt 0x7fb7c19a93c8 <line:797:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c19a9370 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19a9300 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c19a98a0 <line:798:5, line:799:68>
| |   | | `-StaticAssertDecl 0x7fb7c19a9868 <line:798:5, line:799:67> line:798:5
| |   | |   |-ParenExpr 0x7fb7c19a9820 <col:19, line:799:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19a9800 <line:798:20, line:799:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19a97e0 <line:798:21, line:799:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19a97b8 <line:798:22, line:799:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c19a95b8 <line:798:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19a9778 <line:799:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19a9840 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19a9a40 <line:800:5, col:68>
| |   |   `-CallExpr 0x7fb7c19a9a08 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19a98d8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7fb7c2878598 0x7fb7c19a7190 0x7fb7c19a7580 0x7fb7c19a8150
| |   |     |-CStyleCastExpr 0x7fb7c19a9980 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19a9948 <col:35> '_A1' lvalue ParmVar 0x7fb7c19a7f20 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19a99e0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19a99a8 <col:60> '_A2' lvalue ParmVar 0x7fb7c19a7f90 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19a81b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19a9200 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a9b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a9ad0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19a9d58 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19a9d40 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19a9cf8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19a9ce0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a9c80 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c28882a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19a9d28 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a9cb8 <col:99> 'float' lvalue ParmVar 0x7fb7c19a9ad0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19a9c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a9c50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19a9e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:807:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19a9dc0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19aa048 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19aa030 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19a9fe8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19a9fd0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19a9f70 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c28885e8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19aa018 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19a9fa8 <col:99> 'long double' lvalue ParmVar 0x7fb7c19a9dc0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19a9ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19a9f40 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19aa510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:810:1, line:813:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7fb7c19aa068 <line:810:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19aa478 <line:811:1, line:813:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19aa3a0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19aaa30 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19aaa18 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19aa9e8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19aa9d0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19aa998 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c2888448 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19aa690 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19aa650 <col:53> '_A1' lvalue ParmVar 0x7fb7c19aa3a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19aa568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19aa5b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19aab30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:818:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19aaa98 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19aad20 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19aad08 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19aacc0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19aaca8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19aac48 <col:90, col:92> 'float (float)' lvalue Function 0x7fb7c2879230 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19aacf0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19aac80 <col:97> 'float' lvalue ParmVar 0x7fb7c19aaa98 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19aabd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19aac18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19aae20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:819:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19aad88 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19ab010 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19aaff8 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19aafb0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19aaf98 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19aaf38 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb7c2879570 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19aafe0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19aaf70 <col:97> 'long double' lvalue ParmVar 0x7fb7c19aad88 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19aaec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19aaf08 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19ab500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:822:1, line:825:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7fb7c19ab030 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19ab468 <line:823:1, line:825:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19ab390 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19aba20 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb7c19aba08 <col:30, col:59>
| |   |   `-CallExpr 0x7fb7c19ab9d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19ab9c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19ab988 <col:37, col:39> 'double (double)' lvalue Function 0x7fb7c28793d0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19ab680 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19ab640 <col:51> '_A1' lvalue ParmVar 0x7fb7c19ab390 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19ab558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19ab5a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19abb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:830:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19aba88 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19abd10 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19abcf8 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19abcb0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19abc98 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19abc38 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c287b790 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19abce0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19abc70 <col:99> 'float' lvalue ParmVar 0x7fb7c19aba88 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19abbc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19abc08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19abe10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:831:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19abd78 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19ac000 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19abfe8 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19abfa0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19abf88 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19abf28 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c287c2f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19abfd0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19abf60 <col:99> 'long double' lvalue ParmVar 0x7fb7c19abd78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19abeb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19abef8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19ac4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:834:1, line:837:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7fb7c19ac020 <line:834:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19ac428 <line:835:1, line:837:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19ac350 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19ac9e0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19ac9c8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19ac998 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19ac980 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19ac948 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c287b930 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19ac640 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19ac600 <col:53> '_A1' lvalue ParmVar 0x7fb7c19ac350 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19ac518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19ac560 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19acae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:842:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19aca48 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19accd0 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19accb8 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19acc70 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19acc58 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19acbf8 <col:90, col:92> 'float (float)' lvalue Function 0x7fb7c287ce50 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19acca0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19acc30 <col:97> 'float' lvalue ParmVar 0x7fb7c19aca48 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19acb80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19acbc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19acdd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:843:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19acd38 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19acfc0 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19acfa8 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19acf60 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19acf48 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19acee8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb7c287d200 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19acf90 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19acf20 <col:97> 'long double' lvalue ParmVar 0x7fb7c19acd38 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19ace70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19aceb8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19ad4a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:846:1, line:849:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7fb7c19acfe0 <line:846:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19ad408 <line:847:1, line:849:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19ad330 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19ad9c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb7c19ad9a8 <col:30, col:59>
| |   |   `-CallExpr 0x7fb7c19ad978 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19ad960 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19ad928 <col:37, col:39> 'double (double)' lvalue Function 0x7fb7c287cff0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19ad620 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19ad5e0 <col:51> '_A1' lvalue ParmVar 0x7fb7c19ad330 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19ad4f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19ad540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19adac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:854:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19ada28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19adcb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19adc98 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19adc50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19adc38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19adbd8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c28852f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19adc80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19adc10 <col:99> 'float' lvalue ParmVar 0x7fb7c19ada28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19adb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19adba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19addb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:855:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19add18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19adfa0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19adf88 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19adf40 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19adf28 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19adec8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2885630 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19adf70 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19adf00 <col:99> 'long double' lvalue ParmVar 0x7fb7c19add18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19ade50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19ade98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19ae460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:858:1, line:861:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7fb7c19adfc0 <line:858:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19ae3c8 <line:859:1, line:861:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19ae2f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19ae980 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19ae968 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19ae938 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19ae920 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19ae8e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c2885490 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19ae5e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19ae5a0 <col:53> '_A1' lvalue ParmVar 0x7fb7c19ae2f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19ae4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19ae500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19aea80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:866:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19ae9e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19aec70 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19aec58 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19aec10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19aebf8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19aeb98 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c2888788 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19aec40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19aebd0 <col:101> 'float' lvalue ParmVar 0x7fb7c19ae9e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19aeb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19aeb68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19aed70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:867:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19aecd8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19aef60 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19aef48 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19aef00 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19aeee8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19aee88 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c2888ac8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19aef30 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19aeec0 <col:101> 'long double' lvalue ParmVar 0x7fb7c19aecd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19aee10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19aee58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19af440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:870:1, line:873:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7fb7c19aef80 <line:870:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19af3a8 <line:871:1, line:873:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19af2d0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19af960 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c19af948 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c19af918 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19af900 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19af8c8 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c2888928 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19af5c0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19af580 <col:55> '_A1' lvalue ParmVar 0x7fb7c19af2d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19af498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19af4e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19afae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:878:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19af9c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19afa40 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c19afd20 <col:105, col:141>
| | | `-ReturnStmt 0x7fb7c19afd08 <col:106, col:139>
| | |   `-CallExpr 0x7fb7c19afca0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19afc88 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19afc00 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fb7c288b760 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19afcd8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19afc38 <col:121> 'float' lvalue ParmVar 0x7fb7c19af9c8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19afcf0 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19afc60 <col:131> 'float' lvalue ParmVar 0x7fb7c19afa40 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19afb88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19afbd0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19afea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:879:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19afd88 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19afe00 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c19b00e0 <col:105, col:141>
| | | `-ReturnStmt 0x7fb7c19b00c8 <col:106, col:139>
| | |   `-CallExpr 0x7fb7c19b0060 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b0048 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19affc0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fb7c288bbb0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19b0098 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19afff8 <col:121> 'long double' lvalue ParmVar 0x7fb7c19afd88 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19b00b0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b0020 <col:131> 'long double' lvalue ParmVar 0x7fb7c19afe00 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19aff48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19aff90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19b0940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:882:1, line:896:1> line:890:1 fmod
| | |-TemplateTypeParmDecl 0x7fb7c19b0100 <line:882:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19b0168 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19b08a8 <line:883:1, line:896:1> line:890:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19b0750 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19b07c0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19b1168 <line:891:1, line:896:1>
| |   | |-DeclStmt 0x7fb7c19b0bb8 <line:892:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c19b0b60 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19b0af0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c19b0fb0 <line:893:5, line:894:68>
| |   | | `-StaticAssertDecl 0x7fb7c19b0f78 <line:893:5, line:894:67> line:893:5
| |   | |   |-ParenExpr 0x7fb7c19b0f30 <col:19, line:894:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19b0f10 <line:893:20, line:894:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19b0ef0 <line:893:21, line:894:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19b0ec8 <line:893:22, line:894:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c19b0d28 <line:893:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19b0e88 <line:894:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19b0f50 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19b1150 <line:895:5, col:67>
| |   |   `-CallExpr 0x7fb7c19b1118 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19b0fe8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7fb7c288b988 0x7fb7c19afae0 0x7fb7c19afea0 0x7fb7c19b0940
| |   |     |-CStyleCastExpr 0x7fb7c19b1090 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19b1058 <col:34> '_A1' lvalue ParmVar 0x7fb7c19b0750 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19b10f0 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19b10b8 <col:59> '_A2' lvalue ParmVar 0x7fb7c19b07c0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19b09a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19b09e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b1318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:901:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b1200 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19b1278 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fb7c19b15b0 <col:99, col:136>
| | | `-ReturnStmt 0x7fb7c19b1598 <col:100, col:134>
| | |   `-CallExpr 0x7fb7c19b1530 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19b1518 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b1438 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7fb7c2882788 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7fb7c19b1568 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19b1470 <col:116> 'float' lvalue ParmVar 0x7fb7c19b1200 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19b1580 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b1498 <col:126> 'int *' lvalue ParmVar 0x7fb7c19b1278 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fb7c19b13c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b1408 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b1730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:902:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b1618 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19b1690 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fb7c19b19d0 <col:99, col:136>
| | | `-ReturnStmt 0x7fb7c19b19b8 <col:100, col:134>
| | |   `-CallExpr 0x7fb7c19b1950 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b1938 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b1850 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7fb7c2882cc8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7fb7c19b1988 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19b1888 <col:116> 'long double' lvalue ParmVar 0x7fb7c19b1618 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19b19a0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b18b0 <col:126> 'int *' lvalue ParmVar 0x7fb7c19b1690 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fb7c19b17d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b1820 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19b1f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:905:1, line:908:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7fb7c19b19f0 <line:905:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19b1ec8 <line:906:1, line:908:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19b1d20 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19b1d98 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7fb7c19b24f8 <col:46, col:90>
| |   | `-ReturnStmt 0x7fb7c19b24e0 <col:47, col:88>
| |   |   `-CallExpr 0x7fb7c19b2490 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19b2478 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19b2418 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7fb7c2882a28 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7fb7c19b20e8 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19b20a8 <col:70> '_A1' lvalue ParmVar 0x7fb7c19b1d20 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb7c19b24c8 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb7c19b2110 <col:80> 'int *' lvalue ParmVar 0x7fb7c19b1d98 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7fb7c19b1fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19b2008 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b2678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:913:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b2560 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19b25d8 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fb7c19b28e0 <col:98, col:135>
| | | `-ReturnStmt 0x7fb7c19b28c8 <col:99, col:133>
| | |   `-CallExpr 0x7fb7c19b2860 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19b2848 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b2798 <col:106, col:108> 'float (float, int)' lvalue Function 0x7fb7c2880f38 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fb7c19b2898 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19b27d0 <col:115> 'float' lvalue ParmVar 0x7fb7c19b2560 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19b28b0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b27f8 <col:125> 'int' lvalue ParmVar 0x7fb7c19b25d8 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fb7c19b2720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b2768 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b2a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:914:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b2948 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19b29c0 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fb7c19b2cd0 <col:98, col:135>
| | | `-ReturnStmt 0x7fb7c19b2cb8 <col:99, col:133>
| | |   `-CallExpr 0x7fb7c19b2c50 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b2c38 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b2b80 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7fb7c28824b8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fb7c19b2c88 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19b2bb8 <col:115> 'long double' lvalue ParmVar 0x7fb7c19b2948 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19b2ca0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b2be0 <col:125> 'int' lvalue ParmVar 0x7fb7c19b29c0 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fb7c19b2b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b2b50 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19b3298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:917:1, line:920:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7fb7c19b2cf0 <line:917:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19b3200 <line:918:1, line:920:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19b3020 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19b3098 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7fb7c19b3838 <col:45, col:89>
| |   | `-ReturnStmt 0x7fb7c19b3820 <col:46, col:87>
| |   |   `-CallExpr 0x7fb7c19b37d0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19b37b8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19b3758 <col:53, col:55> 'double (double, int)' lvalue Function 0x7fb7c2882200 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fb7c19b3420 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19b33e0 <col:69> '_A1' lvalue ParmVar 0x7fb7c19b3020 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb7c19b3808 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb7c19b3448 <col:79> 'int' lvalue ParmVar 0x7fb7c19b3098 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7fb7c19b32f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19b3340 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b3938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:925:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b38a0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19b3b28 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19b3b10 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19b3ac8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19b3ab0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b3a50 <col:90, col:92> 'float (float)' lvalue Function 0x7fb7c287dd60 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19b3af8 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b3a88 <col:97> 'float' lvalue ParmVar 0x7fb7c19b38a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19b39d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b3a20 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b3c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:926:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b3b90 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19b3e18 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19b3e00 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19b3db8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b3da0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b3d40 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb7c287e0a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19b3de8 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b3d78 <col:97> 'long double' lvalue ParmVar 0x7fb7c19b3b90 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19b3cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b3d10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19b42e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:929:1, line:932:61> col:1 log
| | |-TemplateTypeParmDecl 0x7fb7c19b3e38 <line:929:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19b4248 <line:930:1, line:932:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19b4170 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19b4800 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb7c19b47e8 <col:30, col:59>
| |   |   `-CallExpr 0x7fb7c19b47b8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19b47a0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19b4768 <col:37, col:39> 'double (double)' lvalue Function 0x7fb7c287df00 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19b4460 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19b4420 <col:51> '_A1' lvalue ParmVar 0x7fb7c19b4170 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19b4338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19b4380 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b4900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:937:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b4868 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19b4af0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19b4ad8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19b4a90 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19b4a78 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b4a18 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c287e290 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19b4ac0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b4a50 <col:101> 'float' lvalue ParmVar 0x7fb7c19b4868 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19b49a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b49e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b4bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:938:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b4b58 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19b4de0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19b4dc8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19b4d80 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b4d68 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b4d08 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c287e5d0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19b4db0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b4d40 <col:101> 'long double' lvalue ParmVar 0x7fb7c19b4b58 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19b4c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b4cd8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19b52d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:941:1, line:944:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7fb7c19b4e00 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19b5240 <line:942:1, line:944:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19b5130 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19b5800 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c19b57e8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c19b57b8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19b57a0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19b5768 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c287e430 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19b5458 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19b5418 <col:55> '_A1' lvalue ParmVar 0x7fb7c19b5130 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19b5330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19b5378 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b5980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:949:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b5868 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19b58e0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7fb7c19b5c20 <col:106, col:142>
| | | `-ReturnStmt 0x7fb7c19b5c08 <col:107, col:140>
| | |   `-CallExpr 0x7fb7c19b5ba0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19b5b88 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b5aa0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7fb7c2880718 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7fb7c19b5bd8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19b5ad8 <col:122> 'float' lvalue ParmVar 0x7fb7c19b5868 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19b5bf0 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b5b00 <col:132> 'float *' lvalue ParmVar 0x7fb7c19b58e0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7fb7c19b5a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b5a70 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b5da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:950:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b5c88 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19b5d00 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7fb7c19b6040 <col:106, col:142>
| | | `-ReturnStmt 0x7fb7c19b6028 <col:107, col:140>
| | |   `-CallExpr 0x7fb7c19b5fc0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b5fa8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b5ec0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7fb7c2880c98 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7fb7c19b5ff8 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19b5ef8 <col:122> 'long double' lvalue ParmVar 0x7fb7c19b5c88 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19b6010 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b5f20 <col:132> 'long double *' lvalue ParmVar 0x7fb7c19b5d00 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7fb7c19b5e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b5e90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b61c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:956:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b60a8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19b6120 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c19b6400 <col:104, col:139>
| | | `-ReturnStmt 0x7fb7c19b63e8 <col:105, col:137>
| | |   `-CallExpr 0x7fb7c19b6380 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19b6368 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b62e0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7fb7c2886428 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19b63b8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19b6318 <col:119> 'float' lvalue ParmVar 0x7fb7c19b60a8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19b63d0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b6340 <col:129> 'float' lvalue ParmVar 0x7fb7c19b6120 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19b6268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b62b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b6580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:957:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b6468 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19b64e0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c19b67c0 <col:104, col:139>
| | | `-ReturnStmt 0x7fb7c19b67a8 <col:105, col:137>
| | |   `-CallExpr 0x7fb7c19b6740 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b6728 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b66a0 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7fb7c2886878 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19b6778 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19b66d8 <col:119> 'long double' lvalue ParmVar 0x7fb7c19b6468 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19b6790 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b6700 <col:129> 'long double' lvalue ParmVar 0x7fb7c19b64e0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19b6628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b6670 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19b7020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:960:1, line:974:1> line:968:1 pow
| | |-TemplateTypeParmDecl 0x7fb7c19b67e0 <line:960:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19b6848 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19b6f88 <line:961:1, line:974:1> line:968:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19b6e30 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19b6ea0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19b7848 <line:969:1, line:974:1>
| |   | |-DeclStmt 0x7fb7c19b7298 <line:970:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c19b7240 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19b71d0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c19b7690 <line:971:5, line:972:68>
| |   | | `-StaticAssertDecl 0x7fb7c19b7658 <line:971:5, line:972:67> line:971:5
| |   | |   |-ParenExpr 0x7fb7c19b7610 <col:19, line:972:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19b75f0 <line:971:20, line:972:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19b75d0 <line:971:21, line:972:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19b75a8 <line:971:22, line:972:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c19b7408 <line:971:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19b7568 <line:972:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19b7630 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19b7830 <line:973:5, col:66>
| |   |   `-CallExpr 0x7fb7c19b77f8 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19b76c8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7fb7c2886650 0x7fb7c19b61c0 0x7fb7c19b6580 0x7fb7c19b7020
| |   |     |-CStyleCastExpr 0x7fb7c19b7770 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19b7738 <col:33> '_A1' lvalue ParmVar 0x7fb7c19b6e30 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19b77d0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19b7798 <col:58> '_A2' lvalue ParmVar 0x7fb7c19b6ea0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19b7080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19b70c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b7958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:979:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b78c0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19b7b48 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19b7b30 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19b7ae8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19b7ad0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b7a70 <col:90, col:92> 'float (float)' lvalue Function 0x7fb7c2879710 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19b7b18 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b7aa8 <col:97> 'float' lvalue ParmVar 0x7fb7c19b78c0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19b79f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b7a40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b7c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:980:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b7bb0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19b7e38 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19b7e20 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19b7dd8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b7dc0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b7d60 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb7c2879a50 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19b7e08 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b7d98 <col:97> 'long double' lvalue ParmVar 0x7fb7c19b7bb0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19b7ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b7d30 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19b8300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:983:1, line:986:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7fb7c19b7e58 <line:983:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19b8268 <line:984:1, line:986:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19b8190 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19b8820 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb7c19b8808 <col:30, col:59>
| |   |   `-CallExpr 0x7fb7c19b87d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19b87c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19b8788 <col:37, col:39> 'double (double)' lvalue Function 0x7fb7c28798b0 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19b8480 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19b8440 <col:51> '_A1' lvalue ParmVar 0x7fb7c19b8190 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19b8358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19b83a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b8920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:991:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b8888 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19b8b10 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19b8af8 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19b8ab0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19b8a98 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b8a38 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c287c490 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19b8ae0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b8a70 <col:99> 'float' lvalue ParmVar 0x7fb7c19b8888 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19b89c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b8a08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19b8c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:992:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19b8b78 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19b8e00 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19b8de8 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19b8da0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19b8d88 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19b8d28 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c287c7d0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19b8dd0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19b8d60 <col:99> 'long double' lvalue ParmVar 0x7fb7c19b8b78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19b8cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19b8cf8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19bb4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, line:998:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7fb7c19b8e20 <line:995:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19bb440 <line:996:1, line:998:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19b9150 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19bba00 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19bb9e8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19bb9b8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19bb9a0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19bb968 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c287c630 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19bb658 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19bb618 <col:53> '_A1' lvalue ParmVar 0x7fb7c19b9150 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19bb530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19bb578 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bbb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1003:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19bba68 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19bbcf0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19bbcd8 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19bbc90 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19bbc78 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bbc18 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c2886a20 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19bbcc0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bbc50 <col:99> 'float' lvalue ParmVar 0x7fb7c19bba68 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19bbba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bbbe8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bbdf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1004:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19bbd58 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19bbfe0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19bbfc8 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19bbf80 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19bbf68 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bbf08 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2886d60 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19bbfb0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bbf40 <col:99> 'long double' lvalue ParmVar 0x7fb7c19bbd58 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19bbe90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bbed8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19bc4a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1007:1, line:1010:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7fb7c19bc000 <line:1007:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19bc408 <line:1008:1, line:1010:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19bc330 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19bc9c0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19bc9a8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19bc978 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19bc960 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19bc928 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c2886bc0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19bc620 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19bc5e0 <col:53> '_A1' lvalue ParmVar 0x7fb7c19bc330 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19bc4f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19bc540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bcac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1015:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19bca28 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19bccb0 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19bcc98 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19bcc50 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19bcc38 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bcbd8 <col:90, col:92> 'float (float)' lvalue Function 0x7fb7c2879bf0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19bcc80 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bcc10 <col:97> 'float' lvalue ParmVar 0x7fb7c19bca28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19bcb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bcba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bcdb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1016:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19bcd18 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19bcfa0 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19bcf88 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19bcf40 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19bcf28 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bcec8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb7c2879f30 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19bcf70 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bcf00 <col:97> 'long double' lvalue ParmVar 0x7fb7c19bcd18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19bce50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bce98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19bd498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1019:1, line:1022:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7fb7c19bcfc0 <line:1019:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19bd400 <line:1020:1, line:1022:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19bd2f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19bd9c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb7c19bd9a8 <col:30, col:59>
| |   |   `-CallExpr 0x7fb7c19bd978 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19bd960 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19bd928 <col:37, col:39> 'double (double)' lvalue Function 0x7fb7c2879d90 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19bd618 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19bd5d8 <col:51> '_A1' lvalue ParmVar 0x7fb7c19bd2f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19bd4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19bd538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bdac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1027:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19bda28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19bdcb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19bdc98 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19bdc50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19bdc38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bdbd8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c287c970 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19bdc80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bdc10 <col:99> 'float' lvalue ParmVar 0x7fb7c19bda28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19bdb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bdba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bddb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1028:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19bdd18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19bdfa0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19bdf88 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19bdf40 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19bdf28 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bdec8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c287ccb0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19bdf70 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bdf00 <col:99> 'long double' lvalue ParmVar 0x7fb7c19bdd18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19bde50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bde98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19be460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1031:1, line:1034:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7fb7c19bdfc0 <line:1031:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19be3c8 <line:1032:1, line:1034:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19be2f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19be980 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19be968 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19be938 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19be920 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19be8e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c287cb10 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19be5e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19be5a0 <col:53> '_A1' lvalue ParmVar 0x7fb7c19be2f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19be4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19be500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bea80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1038:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19be9e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19bec70 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19bec58 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19bec10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19bebf8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19beb98 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c287a0d0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19bec40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bebd0 <col:101> 'float' lvalue ParmVar 0x7fb7c19be9e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19beb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19beb68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bed70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1039:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19becd8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19bef60 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19bef48 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19bef00 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19beee8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bee88 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c287ac30 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19bef30 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19beec0 <col:101> 'long double' lvalue ParmVar 0x7fb7c19becd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19bee10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bee58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19bf498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1041:1, line:1044:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7fb7c19bef80 <line:1041:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19bf400 <line:1042:1, line:1044:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19bf2b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19bf9c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c19bf9a8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c19bf978 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19bf960 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19bf928 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c287aa90 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19bf618 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19bf5d8 <col:55> '_A1' lvalue ParmVar 0x7fb7c19bf2b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19bf4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19bf538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bfac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1048:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19bfa28 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19bfcb0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19bfc98 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19bfc50 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19bfc38 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bfbd8 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c287add0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19bfc80 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bfc10 <col:101> 'float' lvalue ParmVar 0x7fb7c19bfa28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19bfb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bfba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19bfdb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1049:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19bfd18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19bffa0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19bff88 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19bff40 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19bff28 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19bfec8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c287b110 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19bff70 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19bff00 <col:101> 'long double' lvalue ParmVar 0x7fb7c19bfd18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19bfe50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19bfe98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19c0460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1051:1, line:1054:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7fb7c19bffc0 <line:1051:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19c03c8 <line:1052:1, line:1054:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c02f0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19c0980 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c19c0968 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c19c0938 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19c0920 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19c08e8 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c287af70 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19c05e0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19c05a0 <col:55> '_A1' lvalue ParmVar 0x7fb7c19c02f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19c04b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19c0500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c0a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1058:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c09e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19c0c70 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19c0c58 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19c0c10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19c0bf8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c0b98 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c287b2b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19c0c40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c0bd0 <col:101> 'float' lvalue ParmVar 0x7fb7c19c09e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19c0b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c0b68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c0d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1059:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c0cd8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19c0f60 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19c0f48 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19c0f00 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19c0ee8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c0e88 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c287b5f0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19c0f30 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c0ec0 <col:101> 'long double' lvalue ParmVar 0x7fb7c19c0cd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19c0e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c0e58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19c1498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1061:1, line:1064:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7fb7c19c0f80 <line:1061:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19c1400 <line:1062:1, line:1064:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c12b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19c19c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c19c19a8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c19c1978 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19c1960 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19c1928 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c287b450 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19c1618 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19c15d8 <col:55> '_A1' lvalue ParmVar 0x7fb7c19c12b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19c14f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19c1538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c1ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1068:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c1a28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19c1cb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19c1c98 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19c1c50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19c1c38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c1bd8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c28857d0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19c1c80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c1c10 <col:99> 'float' lvalue ParmVar 0x7fb7c19c1a28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19c1b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c1ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c1db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1069:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c1d18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19c1fa0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19c1f88 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19c1f40 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19c1f28 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c1ec8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2885b10 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19c1f70 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c1f00 <col:99> 'long double' lvalue ParmVar 0x7fb7c19c1d18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19c1e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c1e98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19c2460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1071:1, line:1074:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7fb7c19c1fc0 <line:1071:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19c23c8 <line:1072:1, line:1074:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c22f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19c2980 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19c2968 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19c2938 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19c2920 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19c28e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c2885970 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19c25e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19c25a0 <col:53> '_A1' lvalue ParmVar 0x7fb7c19c22f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19c24b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19c2500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c2b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1078:1, line:1081:1> line:1078:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c29e8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19c2a60 <line:1079:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c19c2d40 <col:75, line:1081:1>
| | | `-ReturnStmt 0x7fb7c19c2d28 <line:1080:3, col:40>
| | |   `-CallExpr 0x7fb7c19c2cc0 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19c2ca8 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c2c20 <col:10, col:12> 'float (float, float)' lvalue Function 0x7fb7c288cc40 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19c2cf8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19c2c58 <col:22> 'float' lvalue ParmVar 0x7fb7c19c29e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19c2d10 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c2c80 <col:32> 'float' lvalue ParmVar 0x7fb7c19c2a60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19c2ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c2bf0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c2ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1082:1, line:1085:1> line:1083:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c2da8 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19c2e20 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c19c3100 <col:64, line:1085:1>
| | | `-ReturnStmt 0x7fb7c19c30e8 <line:1084:3, col:40>
| | |   `-CallExpr 0x7fb7c19c3080 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19c3068 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c2fe0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7fb7c288d090 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19c30b8 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19c3018 <col:22> 'long double' lvalue ParmVar 0x7fb7c19c2da8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19c30d0 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c3040 <col:32> 'long double' lvalue ParmVar 0x7fb7c19c2e20 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19c2f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c2fb0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19c3980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1087:1, line:1101:1> line:1095:1 copysign
| | |-TemplateTypeParmDecl 0x7fb7c19c3120 <line:1087:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19c3188 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19c38e8 <line:1088:1, line:1101:1> line:1095:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c3790 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19c3800 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19c41a8 <line:1096:1, line:1101:1>
| |   | |-DeclStmt 0x7fb7c19c3bf8 <line:1097:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c19c3ba0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19c3b30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c19c3ff0 <line:1098:5, line:1099:68>
| |   | | `-StaticAssertDecl 0x7fb7c19c3fb8 <line:1098:5, line:1099:67> line:1098:5
| |   | |   |-ParenExpr 0x7fb7c19c3f70 <col:19, line:1099:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19c3f50 <line:1098:20, line:1099:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19c3f30 <line:1098:21, line:1099:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19c3f08 <line:1098:22, line:1099:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c19c3d68 <line:1098:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19c3ec8 <line:1099:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19c3f90 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19c4190 <line:1100:5, col:71>
| |   |   `-CallExpr 0x7fb7c19c4158 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19c4028 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7fb7c288ce68 0x7fb7c19c2b00 0x7fb7c19c2ec0 0x7fb7c19c3980
| |   |     |-CStyleCastExpr 0x7fb7c19c40d0 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19c4098 <col:38> '_A1' lvalue ParmVar 0x7fb7c19c3790 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19c4130 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19c40f8 <col:63> '_A2' lvalue ParmVar 0x7fb7c19c3800 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19c39e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19c3a28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c42b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1105:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c4220 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19c44a8 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19c4490 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19c4448 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19c4430 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c43d0 <col:90, col:92> 'float (float)' lvalue Function 0x7fb7c2886f00 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19c4478 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c4408 <col:97> 'float' lvalue ParmVar 0x7fb7c19c4220 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19c4358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c43a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c45a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1106:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c4510 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19c4798 <col:82, col:107>
| | | `-ReturnStmt 0x7fb7c19c4780 <col:83, col:105>
| | |   `-CallExpr 0x7fb7c19c4738 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19c4720 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c46c0 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb7c2887290 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19c4768 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c46f8 <col:97> 'long double' lvalue ParmVar 0x7fb7c19c4510 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19c4648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c4690 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19c4c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1108:1, line:1111:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7fb7c19c47b8 <line:1108:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19c4bc8 <line:1109:1, line:1111:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c4af0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19c5180 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb7c19c5168 <col:30, col:59>
| |   |   `-CallExpr 0x7fb7c19c5138 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19c5120 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19c50e8 <col:37, col:39> 'double (double)' lvalue Function 0x7fb7c28870a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19c4de0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19c4da0 <col:51> '_A1' lvalue ParmVar 0x7fb7c19c4af0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19c4cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19c4d00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c5280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1115:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c51e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19c6478 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19c6460 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19c6418 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19c6400 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c5398 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c2887430 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19c6448 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c53d0 <col:99> 'float' lvalue ParmVar 0x7fb7c19c51e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19c5320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c5368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c6578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c64e0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19c6768 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19c6750 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19c6708 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19c66f0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c6690 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2887770 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19c6738 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c66c8 <col:99> 'long double' lvalue ParmVar 0x7fb7c19c64e0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19c6618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c6660 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19c6c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1118:1, line:1121:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7fb7c19c6788 <line:1118:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19c6b98 <line:1119:1, line:1121:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c6ac0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19c7150 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19c7138 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19c7108 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19c70f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19c70b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c28875d0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19c6db0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19c6d70 <col:53> '_A1' lvalue ParmVar 0x7fb7c19c6ac0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19c6c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19c6cd0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c7250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1125:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c71b8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19c7440 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19c7428 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19c73e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19c73c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c7368 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c287d3a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19c7410 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c73a0 <col:99> 'float' lvalue ParmVar 0x7fb7c19c71b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19c72f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c7338 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c7540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1126:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c74a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19c7730 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c19c7718 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c19c76d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19c76b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c7658 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c287d6e0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19c7700 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c7690 <col:99> 'long double' lvalue ParmVar 0x7fb7c19c74a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19c75e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c7628 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19c7bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1128:1, line:1131:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7fb7c19c7750 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19c7b58 <line:1129:1, line:1131:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c7a80 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19c8110 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c19c80f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c19c80c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19c80b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19c8078 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c287d540 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19c7d70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19c7d30 <col:53> '_A1' lvalue ParmVar 0x7fb7c19c7a80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19c7c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19c7c90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c8210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1135:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c8178 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19c8400 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19c83e8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19c83a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19c8388 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c8328 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c287d880 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19c83d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c8360 <col:101> 'float' lvalue ParmVar 0x7fb7c19c8178 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19c82b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c82f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c8500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1136:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c8468 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19c86f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c19c86d8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c19c8690 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19c8678 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c8618 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c287dbc0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19c86c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c8650 <col:101> 'long double' lvalue ParmVar 0x7fb7c19c8468 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19c85a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c85e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19c8bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, line:1141:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7fb7c19c8710 <line:1138:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19c8b18 <line:1139:1, line:1141:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c8a40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c19c90d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c19c90b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c19c9088 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c19c9070 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c19c9038 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c287da20 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19c8d30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19c8cf0 <col:55> '_A1' lvalue ParmVar 0x7fb7c19c8a40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19c8c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19c8c50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c9250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1145:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c9138 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19c91b0 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c19c9490 <col:105, col:141>
| | | `-ReturnStmt 0x7fb7c19c9478 <col:106, col:139>
| | |   `-CallExpr 0x7fb7c19c9410 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19c93f8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c9370 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fb7c287f768 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19c9448 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19c93a8 <col:121> 'float' lvalue ParmVar 0x7fb7c19c9138 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19c9460 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c93d0 <col:131> 'float' lvalue ParmVar 0x7fb7c19c91b0 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19c92f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c9340 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19c9610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1146:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19c94f8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19c9570 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c19c9850 <col:105, col:141>
| | | `-ReturnStmt 0x7fb7c19c9838 <col:106, col:139>
| | |   `-CallExpr 0x7fb7c19c97d0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19c97b8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19c9730 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fb7c287fbb8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19c9808 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19c9768 <col:121> 'long double' lvalue ParmVar 0x7fb7c19c94f8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19c9820 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19c9790 <col:131> 'long double' lvalue ParmVar 0x7fb7c19c9570 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19c96b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19c9700 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19ca0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1148:1, line:1162:1> line:1156:1 fdim
| | |-TemplateTypeParmDecl 0x7fb7c19c9870 <line:1148:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19c98d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19ca018 <line:1149:1, line:1162:1> line:1156:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19c9ec0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19c9f30 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19cc8f8 <line:1157:1, line:1162:1>
| |   | |-DeclStmt 0x7fb7c19ca328 <line:1158:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c19ca2d0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19ca260 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c19cc740 <line:1159:5, line:1160:68>
| |   | | `-StaticAssertDecl 0x7fb7c19cc708 <line:1159:5, line:1160:67> line:1159:5
| |   | |   |-ParenExpr 0x7fb7c19cc6c0 <col:19, line:1160:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19cc6a0 <line:1159:20, line:1160:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19cc680 <line:1159:21, line:1160:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19cc658 <line:1159:22, line:1160:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c19cc4b8 <line:1159:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19cc618 <line:1160:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19cc6e0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19cc8e0 <line:1161:5, col:67>
| |   |   `-CallExpr 0x7fb7c19cc8a8 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19cc778 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7fb7c287f990 0x7fb7c19c9250 0x7fb7c19c9610 0x7fb7c19ca0b0
| |   |     |-CStyleCastExpr 0x7fb7c19cc820 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19cc7e8 <col:34> '_A1' lvalue ParmVar 0x7fb7c19c9ec0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19cc880 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19cc848 <col:59> '_A2' lvalue ParmVar 0x7fb7c19c9f30 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19ca110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19ca158 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19ccb08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1166:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19cc970 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19cc9e8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fb7c19cca60 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7fb7c19ccdc0 <col:126, col:171>
| | | `-ReturnStmt 0x7fb7c19ccda8 <col:127, col:169>
| | |   `-CallExpr 0x7fb7c19ccd20 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19ccd08 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19ccc30 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7fb7c2892ba8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19ccd60 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19ccc68 <col:141> 'float' lvalue ParmVar 0x7fb7c19cc970 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19ccd78 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19ccc90 <col:151> 'float' lvalue ParmVar 0x7fb7c19cc9e8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19ccd90 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19cccb8 <col:161> 'float' lvalue ParmVar 0x7fb7c19cca60 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19ccbb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19ccc00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19ccfc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1167:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19cce28 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19ccea0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fb7c19ccf18 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7fb7c19cd280 <col:126, col:171>
| | | `-ReturnStmt 0x7fb7c19cd268 <col:127, col:169>
| | |   `-CallExpr 0x7fb7c19cd1e0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19cd1c8 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19cd0e8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7fb7c2883288 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19cd220 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19cd120 <col:141> 'long double' lvalue ParmVar 0x7fb7c19cce28 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19cd238 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19cd148 <col:151> 'long double' lvalue ParmVar 0x7fb7c19ccea0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19cd250 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19cd170 <col:161> 'long double' lvalue ParmVar 0x7fb7c19ccf18 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19cd070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19cd0b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19cded0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1169:1, line:1185:1> line:1178:1 fma
| | |-TemplateTypeParmDecl 0x7fb7c19cd2a0 <line:1169:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19cd308 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7fb7c19cd378 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7fb7c19cde38 <line:1170:1, line:1185:1> line:1178:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19cdc10 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19cdc80 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fb7c19cdcf0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7fb7c19cea90 <line:1179:1, line:1185:1>
| |   | |-DeclStmt 0x7fb7c19ce1d8 <line:1180:5, col:71>
| |   | | `-TypedefDecl 0x7fb7c19ce180 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7fb7c19ce110 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7fb7c19ce870 <line:1181:5, line:1183:68>
| |   | | `-StaticAssertDecl 0x7fb7c19ce838 <line:1181:5, line:1183:67> line:1181:5
| |   | |   |-ParenExpr 0x7fb7c19ce7f0 <col:19, line:1183:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19ce7d0 <line:1181:20, line:1183:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19ce7b0 <line:1181:21, line:1183:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19ce788 <line:1181:22, line:1183:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7fb7c19ce5a8 <line:1181:22, line:1182:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7fb7c19ce3a8 <line:1181:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7fb7c19ce568 <line:1182:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19ce748 <line:1183:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19ce810 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19cea78 <line:1184:5, col:91>
| |   |   `-CallExpr 0x7fb7c19cea38 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19ce8a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7fb7c2892ef8 0x7fb7c19ccb08 0x7fb7c19ccfc0 0x7fb7c19cded0
| |   |     |-CStyleCastExpr 0x7fb7c19ce950 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19ce918 <col:33> '_A1' lvalue ParmVar 0x7fb7c19cdc10 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fb7c19ce9b0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19ce978 <col:58> '_A2' lvalue ParmVar 0x7fb7c19cdc80 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7fb7c19cea10 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19ce9d8 <col:83> '_A3' lvalue ParmVar 0x7fb7c19cdcf0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7fb7c19cdf38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19cdf80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19cec20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19ceb08 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19ceb80 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c19cee60 <col:105, col:141>
| | | `-ReturnStmt 0x7fb7c19cee48 <col:106, col:139>
| | |   `-CallExpr 0x7fb7c19cede0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19cedc8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19ced40 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fb7c287fde0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19cee18 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19ced78 <col:121> 'float' lvalue ParmVar 0x7fb7c19ceb08 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19cee30 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19ceda0 <col:131> 'float' lvalue ParmVar 0x7fb7c19ceb80 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19cecc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19ced10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19cefe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19ceec8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19cef40 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c19cf220 <col:105, col:141>
| | | `-ReturnStmt 0x7fb7c19cf208 <col:106, col:139>
| | |   `-CallExpr 0x7fb7c19cf1a0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19cf188 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19cf100 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fb7c2892238 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19cf1d8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19cf138 <col:121> 'long double' lvalue ParmVar 0x7fb7c19ceec8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19cf1f0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19cf160 <col:131> 'long double' lvalue ParmVar 0x7fb7c19cef40 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19cf088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19cf0d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19cfa80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1206:1> line:1200:1 fmax
| | |-TemplateTypeParmDecl 0x7fb7c19cf240 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19cf2a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19cf9e8 <line:1193:1, line:1206:1> line:1200:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19cf890 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19cf900 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19d02a8 <line:1201:1, line:1206:1>
| |   | |-DeclStmt 0x7fb7c19cfcf8 <line:1202:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c19cfca0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19cfc30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c19d00f0 <line:1203:5, line:1204:68>
| |   | | `-StaticAssertDecl 0x7fb7c19d00b8 <line:1203:5, line:1204:67> line:1203:5
| |   | |   |-ParenExpr 0x7fb7c19d0070 <col:19, line:1204:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19d0050 <line:1203:20, line:1204:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19d0030 <line:1203:21, line:1204:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19d0008 <line:1203:22, line:1204:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c19cfe68 <line:1203:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19cffc8 <line:1204:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19d0090 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19d0290 <line:1205:5, col:67>
| |   |   `-CallExpr 0x7fb7c19d0258 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19d0128 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7fb7c2880008 0x7fb7c19cec20 0x7fb7c19cefe0 0x7fb7c19cfa80
| |   |     |-CStyleCastExpr 0x7fb7c19d01d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19d0198 <col:34> '_A1' lvalue ParmVar 0x7fb7c19cf890 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19d0230 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19d01f8 <col:59> '_A2' lvalue ParmVar 0x7fb7c19cf900 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19cfae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19cfb28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19d0440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19d0320 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19d0398 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c19d0680 <col:105, col:141>
| | | `-ReturnStmt 0x7fb7c19d0668 <col:106, col:139>
| | |   `-CallExpr 0x7fb7c19d0600 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19d05e8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19d0560 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fb7c2892460 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19d0638 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19d0598 <col:121> 'float' lvalue ParmVar 0x7fb7c19d0320 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19d0650 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19d05c0 <col:131> 'float' lvalue ParmVar 0x7fb7c19d0398 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19d04e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19d0530 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19d0800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1211:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19d06e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19d0760 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c19d0a40 <col:105, col:141>
| | | `-ReturnStmt 0x7fb7c19d0a28 <col:106, col:139>
| | |   `-CallExpr 0x7fb7c19d09c0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19d09a8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19d0920 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fb7c28928b0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19d09f8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19d0958 <col:121> 'long double' lvalue ParmVar 0x7fb7c19d06e8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19d0a10 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19d0980 <col:131> 'long double' lvalue ParmVar 0x7fb7c19d0760 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19d08a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19d08f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19d12a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1213:1, line:1227:1> line:1221:1 fmin
| | |-TemplateTypeParmDecl 0x7fb7c19d0a60 <line:1213:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19d0ac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19d1208 <line:1214:1, line:1227:1> line:1221:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19d10b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19d1120 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19d1ac8 <line:1222:1, line:1227:1>
| |   | |-DeclStmt 0x7fb7c19d1518 <line:1223:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c19d14c0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19d1450 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c19d1910 <line:1224:5, line:1225:68>
| |   | | `-StaticAssertDecl 0x7fb7c19d18d8 <line:1224:5, line:1225:67> line:1224:5
| |   | |   |-ParenExpr 0x7fb7c19d1890 <col:19, line:1225:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19d1870 <line:1224:20, line:1225:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19d1850 <line:1224:21, line:1225:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19d1828 <line:1224:22, line:1225:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c19d1688 <line:1224:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19d17e8 <line:1225:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19d18b0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19d1ab0 <line:1226:5, col:67>
| |   |   `-CallExpr 0x7fb7c19d1a78 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19d1948 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7fb7c2892688 0x7fb7c19d0440 0x7fb7c19d0800 0x7fb7c19d12a0
| |   |     |-CStyleCastExpr 0x7fb7c19d19f0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19d19b8 <col:34> '_A1' lvalue ParmVar 0x7fb7c19d10b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19d1a50 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19d1a18 <col:59> '_A2' lvalue ParmVar 0x7fb7c19d1120 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19d1300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19d1348 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19d1c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1231:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19d1b40 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c19d1bb8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c19d1e98 <col:106, col:143>
| | | `-ReturnStmt 0x7fb7c19d1e80 <col:107, col:141>
| | |   `-CallExpr 0x7fb7c19d1e18 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c19d1e00 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19d1d78 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fb7c2885d30 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c19d1e50 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19d1db0 <col:123> 'float' lvalue ParmVar 0x7fb7c19d1b40 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c19d1e68 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19d1dd8 <col:133> 'float' lvalue ParmVar 0x7fb7c19d1bb8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19d1d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19d1d48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19d2018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19d1f00 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c19d1f78 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c19d2258 <col:106, col:143>
| | | `-ReturnStmt 0x7fb7c19d2240 <col:107, col:141>
| | |   `-CallExpr 0x7fb7c19d21d8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c19d21c0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19d2138 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fb7c2886200 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c19d2210 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c19d2170 <col:123> 'long double' lvalue ParmVar 0x7fb7c19d1f00 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c19d2228 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19d2198 <col:133> 'long double' lvalue ParmVar 0x7fb7c19d1f78 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19d20c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19d2108 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19d2b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1234:1, line:1248:1> line:1242:1 hypot
| | |-TemplateTypeParmDecl 0x7fb7c19d2278 <line:1234:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c19d22e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c19d2a68 <line:1235:1, line:1248:1> line:1242:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19d2910 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c19d2980 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c19d3328 <line:1243:1, line:1248:1>
| |   | |-DeclStmt 0x7fb7c19d2d78 <line:1244:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c19d2d20 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c19d2cb0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c19d3170 <line:1245:5, line:1246:68>
| |   | | `-StaticAssertDecl 0x7fb7c19d3138 <line:1245:5, line:1246:67> line:1245:5
| |   | |   |-ParenExpr 0x7fb7c19d30f0 <col:19, line:1246:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c19d30d0 <line:1245:20, line:1246:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c19d30b0 <line:1245:21, line:1246:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c19d3088 <line:1245:22, line:1246:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c19d2ee8 <line:1245:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c19d3048 <line:1246:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c19d3110 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c19d3310 <line:1247:5, col:68>
| |   |   `-CallExpr 0x7fb7c19d32d8 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c19d31a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7fb7c2885f58 0x7fb7c19d1c58 0x7fb7c19d2018 0x7fb7c19d2b00
| |   |     |-CStyleCastExpr 0x7fb7c19d3250 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c19d3218 <col:35> '_A1' lvalue ParmVar 0x7fb7c19d2910 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c19d32b0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19d3278 <col:60> '_A2' lvalue ParmVar 0x7fb7c19d2980 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c19d2b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19d2ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19d3438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19d33a0 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c19d3628 <col:76, col:103>
| | | `-ReturnStmt 0x7fb7c19d3610 <col:77, col:101>
| | |   `-CallExpr 0x7fb7c19d35c8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fb7c19d35b0 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19d3550 <col:84, col:86> 'int (float)' lvalue Function 0x7fb7c2882ea0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7fb7c19d35f8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19d3588 <col:93> 'float' lvalue ParmVar 0x7fb7c19d33a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c19d34d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19d3520 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c19d3728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1253:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c19d3690 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c19d3918 <col:76, col:103>
| | | `-ReturnStmt 0x7fb7c19d3900 <col:77, col:101>
| | |   `-CallExpr 0x7fb7c19d38b8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fb7c19d38a0 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c19d3840 <col:84, col:86> 'int (long double)' lvalue Function 0x7fb7c2884290 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c19d38e8 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c19d3878 <col:93> 'long double' lvalue ParmVar 0x7fb7c19d3690 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c19d37c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c19d3810 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c19d3de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1255:1, line:1258:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7fb7c19d3938 <line:1255:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c19d3d48 <line:1256:1, line:1258:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c19d3c70 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c288e3b8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c288e3a0 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c288e370 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7fb7c288e358 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c288e320 <col:39, col:41> 'int (double)' lvalue Function 0x7fb7c2883078 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7fb7c19d3f60 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c19d3f20 <col:55> '_A1' lvalue ParmVar 0x7fb7c19d3c70 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c19d3e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c19d3e80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c288e4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c288e420 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c288e6a8 <col:85, col:113>
| | | `-ReturnStmt 0x7fb7c288e690 <col:86, col:111>
| | |   `-CallExpr 0x7fb7c288e648 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c288e630 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c288e5d0 <col:93, col:95> 'float (float)' lvalue Function 0x7fb7c2887910 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c288e678 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c288e608 <col:103> 'float' lvalue ParmVar 0x7fb7c288e420 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c288e558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c288e5a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c288e7a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1263:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c288e710 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c288e998 <col:85, col:113>
| | | `-ReturnStmt 0x7fb7c288e980 <col:86, col:111>
| | |   `-CallExpr 0x7fb7c288e938 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c288e920 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c288e8c0 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fb7c2887c30 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c288e968 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c288e8f8 <col:103> 'long double' lvalue ParmVar 0x7fb7c288e710 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c288e848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c288e890 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c288ee60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1265:1, line:1268:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7fb7c288e9b8 <line:1265:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c288edc8 <line:1266:1, line:1268:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c288ecf0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c288f380 <col:32, col:67>
| |   | `-ReturnStmt 0x7fb7c288f368 <col:33, col:65>
| |   |   `-CallExpr 0x7fb7c288f338 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c288f320 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c288f2e8 <col:40, col:42> 'double (double)' lvalue Function 0x7fb7c2887aa0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c288efe0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c288efa0 <col:57> '_A1' lvalue ParmVar 0x7fb7c288ecf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c288eeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c288ef00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c288f480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c288f3e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c288f6a0 <col:83, col:111>
| | | `-ReturnStmt 0x7fb7c288f688 <col:84, col:109>
| | |   `-CallExpr 0x7fb7c288f640 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fb7c288f628 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c288f598 <col:91, col:93> 'long long (float)' lvalue Function 0x7fb7c288a688 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fb7c288f670 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c288f5d0 <col:101> 'float' lvalue ParmVar 0x7fb7c288f3e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c288f520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c288f568 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c288f7a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1273:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c288f708 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c288f9c0 <col:83, col:111>
| | | `-ReturnStmt 0x7fb7c288f9a8 <col:84, col:109>
| | |   `-CallExpr 0x7fb7c288f960 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fb7c288f948 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c288f8b8 <col:91, col:93> 'long long (long double)' lvalue Function 0x7fb7c288aac8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c288f990 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c288f8f0 <col:101> 'long double' lvalue ParmVar 0x7fb7c288f708 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c288f840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c288f888 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c288ff70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1275:1, line:1278:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7fb7c288f9e0 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c288fed8 <line:1276:1, line:1278:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c288fdc0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c28ef748 <col:32, col:67>
| |   | `-ReturnStmt 0x7fb7c28ef730 <col:33, col:65>
| |   |   `-CallExpr 0x7fb7c28ef700 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7fb7c28ef6e8 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c28ef688 <col:40, col:42> 'long long (double)' lvalue Function 0x7fb7c288a8a8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fb7c28900f0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c28900b0 <col:57> '_A1' lvalue ParmVar 0x7fb7c288fdc0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c288ffc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c2890010 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c28ef848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28ef7b0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c28efa38 <col:84, col:113>
| | | `-ReturnStmt 0x7fb7c28efa20 <col:85, col:111>
| | |   `-CallExpr 0x7fb7c28ef9d8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fb7c28ef9c0 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c28ef960 <col:92, col:94> 'long long (float)' lvalue Function 0x7fb7c288aca8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fb7c28efa08 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28ef998 <col:103> 'float' lvalue ParmVar 0x7fb7c28ef7b0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c28ef8e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c28ef930 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c28efb38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1283:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28efaa0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c28efd28 <col:84, col:113>
| | | `-ReturnStmt 0x7fb7c28efd10 <col:85, col:111>
| | |   `-CallExpr 0x7fb7c28efcc8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fb7c28efcb0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c28efc50 <col:92, col:94> 'long long (long double)' lvalue Function 0x7fb7c288afe8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c28efcf8 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28efc88 <col:103> 'long double' lvalue ParmVar 0x7fb7c28efaa0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c28efbd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c28efc20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c28f01f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1285:1, line:1288:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7fb7c28efd48 <line:1285:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c28f0158 <line:1286:1, line:1288:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c28f0080 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c28f0710 <col:33, col:69>
| |   | `-ReturnStmt 0x7fb7c28f06f8 <col:34, col:67>
| |   |   `-CallExpr 0x7fb7c28f06c8 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7fb7c28f06b0 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c28f0678 <col:41, col:43> 'long long (double)' lvalue Function 0x7fb7c288ae48 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fb7c28f0370 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c28f0330 <col:59> '_A1' lvalue ParmVar 0x7fb7c28f0080 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c28f0248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c28f0290 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c28f0810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1292:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28f0778 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c28f0a00 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c28f09e8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c28f09a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c28f0988 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c28f0928 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c287ec50 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c28f09d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28f0960 <col:101> 'float' lvalue ParmVar 0x7fb7c28f0778 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c28f08b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c28f08f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c28f0b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1293:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28f0a68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c28f0cf0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c28f0cd8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c28f0c90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c28f0c78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c28f0c18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c287ef90 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c28f0cc0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28f0c50 <col:101> 'long double' lvalue ParmVar 0x7fb7c28f0a68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c28f0ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c28f0be8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c28f11b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1295:1, line:1298:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7fb7c28f0d10 <line:1295:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c28f1118 <line:1296:1, line:1298:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c28f1040 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c28f16d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c28f16b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c28f1688 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c28f1670 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c28f1638 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c287edf0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c28f1330 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c28f12f0 <col:55> '_A1' lvalue ParmVar 0x7fb7c28f1040 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c28f1208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c28f1250 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c28f17d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28f1738 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c28f19c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c28f19a8 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c28f1960 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c28f1948 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c28f18e8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c287e770 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c28f1990 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28f1920 <col:99> 'float' lvalue ParmVar 0x7fb7c28f1738 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c28f1870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c28f18b8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c28f1ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28f1a28 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c28f1cb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c28f1c98 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c28f1c50 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c28f1c38 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c28f1bd8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c287eab0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c28f1c80 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28f1c10 <col:99> 'long double' lvalue ParmVar 0x7fb7c28f1a28 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c28f1b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c28f1ba8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c28f2170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7fb7c28f1cd0 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c28f20d8 <line:1306:1, line:1308:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c28f2000 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c28f2690 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c28f2678 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c28f2648 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c28f2630 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c28f25f8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c287e910 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c28f22f0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c28f22b0 <col:53> '_A1' lvalue ParmVar 0x7fb7c28f2000 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c28f21c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c28f2210 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c28f2790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28f26f8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c28f2980 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c28f2968 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c28f2920 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c28f2908 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c28f28a8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c287f130 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c28f2950 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28f28e0 <col:99> 'float' lvalue ParmVar 0x7fb7c28f26f8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c28f2830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c28f2878 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c28f2a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28f29e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c28f2c70 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c28f2c58 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c28f2c10 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c28f2bf8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c28f2b98 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2880490 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c28f2c40 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28f2bd0 <col:99> 'long double' lvalue ParmVar 0x7fb7c28f29e8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c28f2b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c28f2b68 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c28f3130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1318:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7fb7c28f2c90 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c28f3098 <line:1316:1, line:1318:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c28f2fc0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c2896650 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c2896638 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c2896608 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c28965f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c28965b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c28802f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c28962b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c2896270 <col:53> '_A1' lvalue ParmVar 0x7fb7c28f2fc0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c28f3188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c28f31d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2896750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1322:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28966b8 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c2896970 <col:77, col:104>
| | | `-ReturnStmt 0x7fb7c2896958 <col:78, col:102>
| | |   `-CallExpr 0x7fb7c2896910 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fb7c28968f8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2896868 <col:85, col:87> 'long (float)' lvalue Function 0x7fb7c2889668 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fb7c2896940 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c28968a0 <col:94> 'float' lvalue ParmVar 0x7fb7c28966b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c28967f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2896838 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2896a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1323:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28969d8 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c2896c90 <col:77, col:104>
| | | `-ReturnStmt 0x7fb7c2896c78 <col:78, col:102>
| | |   `-CallExpr 0x7fb7c2896c30 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fb7c2896c18 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2896b88 <col:85, col:87> 'long (long double)' lvalue Function 0x7fb7c2889aa8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c2896c60 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2896bc0 <col:94> 'long double' lvalue ParmVar 0x7fb7c28969d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c2896b10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2896b58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c2897240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1325:1, line:1328:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7fb7c2896cb0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c28971a8 <line:1326:1, line:1328:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c2897090 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c28979f8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c28979e0 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c28979b0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7fb7c2897998 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c2897938 <col:39, col:41> 'long (double)' lvalue Function 0x7fb7c2889888 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fb7c28973c0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c2897380 <col:55> '_A1' lvalue ParmVar 0x7fb7c2897090 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c2897298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c28972e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2897af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1332:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2897a60 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c2897ce8 <col:78, col:106>
| | | `-ReturnStmt 0x7fb7c2897cd0 <col:79, col:104>
| | |   `-CallExpr 0x7fb7c2897c88 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fb7c2897c70 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2897c10 <col:86, col:88> 'long (float)' lvalue Function 0x7fb7c288a168 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fb7c2897cb8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2897c48 <col:96> 'float' lvalue ParmVar 0x7fb7c2897a60 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c2897b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2897be0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2897de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2897d50 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c2897fd8 <col:78, col:106>
| | | `-ReturnStmt 0x7fb7c2897fc0 <col:79, col:104>
| | |   `-CallExpr 0x7fb7c2897f78 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fb7c2897f60 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2897f00 <col:86, col:88> 'long (long double)' lvalue Function 0x7fb7c288a4a8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c2897fa8 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2897f38 <col:96> 'long double' lvalue ParmVar 0x7fb7c2897d50 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c2897e88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2897ed0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c28984a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1335:1, line:1338:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7fb7c2897ff8 <line:1335:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c2898408 <line:1336:1, line:1338:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c2898330 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c28989c0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fb7c28989a8 <col:33, col:65>
| |   |   `-CallExpr 0x7fb7c2898978 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7fb7c2898960 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c2898928 <col:40, col:42> 'long (double)' lvalue Function 0x7fb7c288a308 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fb7c2898620 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c28985e0 <col:57> '_A1' lvalue ParmVar 0x7fb7c2898330 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c28984f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c2898540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2898ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1344:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2898a28 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c2898cb0 <col:88, col:119>
| | | `-ReturnStmt 0x7fb7c2898c98 <col:89, col:117>
| | |   `-CallExpr 0x7fb7c2898c50 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c2898c38 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2898bd8 <col:96, col:98> 'float (float)' lvalue Function 0x7fb7c2888c68 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c2898c80 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2898c10 <col:109> 'float' lvalue ParmVar 0x7fb7c2898a28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c2898b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2898ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2898db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1345:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2898d18 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c2898fa0 <col:88, col:119>
| | | `-ReturnStmt 0x7fb7c2898f88 <col:89, col:117>
| | |   `-CallExpr 0x7fb7c2898f40 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c2898f28 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2898ec8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7fb7c2888fa8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c2898f70 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2898f00 <col:109> 'long double' lvalue ParmVar 0x7fb7c2898d18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c2898e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2898e98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c2899460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1347:1, line:1350:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7fb7c2898fc0 <line:1347:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c28993c8 <line:1348:1, line:1350:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c28992f0 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c2899980 <col:35, col:73>
| |   | `-ReturnStmt 0x7fb7c2899968 <col:36, col:71>
| |   |   `-CallExpr 0x7fb7c2899938 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c2899920 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c28998e8 <col:43, col:45> 'double (double)' lvalue Function 0x7fb7c2888e08 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c28995e0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c28995a0 <col:63> '_A1' lvalue ParmVar 0x7fb7c28992f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c28994b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c2899500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2899b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c28999e8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c2899a60 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c2899d40 <col:110, col:151>
| | | `-ReturnStmt 0x7fb7c2899d28 <col:111, col:149>
| | |   `-CallExpr 0x7fb7c2899cc0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c2899ca8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2899c20 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fb7c288d968 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c2899cf8 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2899c58 <col:131> 'float' lvalue ParmVar 0x7fb7c28999e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c2899d10 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2899c80 <col:141> 'float' lvalue ParmVar 0x7fb7c2899a60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c2899ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2899bf0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2899ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2899da8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c2899e20 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c289a100 <col:110, col:151>
| | | `-ReturnStmt 0x7fb7c289a0e8 <col:111, col:149>
| | |   `-CallExpr 0x7fb7c289a080 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c289a068 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2899fe0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fb7c288ddb8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c289a0b8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c289a018 <col:131> 'long double' lvalue ParmVar 0x7fb7c2899da8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c289a0d0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c289a040 <col:141> 'long double' lvalue ParmVar 0x7fb7c2899e20 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c2899f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2899fb0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c2924f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1371:1> line:1365:1 nextafter
| | |-TemplateTypeParmDecl 0x7fb7c289a120 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c289a188 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c2924ec8 <line:1358:1, line:1371:1> line:1365:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c2924d70 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c2924de0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c2925788 <line:1366:1, line:1371:1>
| |   | |-DeclStmt 0x7fb7c29251d8 <line:1367:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c2925180 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c2925110 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c29255d0 <line:1368:5, line:1369:68>
| |   | | `-StaticAssertDecl 0x7fb7c2925598 <line:1368:5, line:1369:67> line:1368:5
| |   | |   |-ParenExpr 0x7fb7c2925550 <col:19, line:1369:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c2925530 <line:1368:20, line:1369:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c2925510 <line:1368:21, line:1369:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c29254e8 <line:1368:22, line:1369:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c2925348 <line:1368:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c29254a8 <line:1369:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c2925570 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c2925770 <line:1370:5, col:72>
| |   |   `-CallExpr 0x7fb7c2925738 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c2925608 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7fb7c288db90 0x7fb7c2899b00 0x7fb7c2899ec0 0x7fb7c2924f60
| |   |     |-CStyleCastExpr 0x7fb7c29256b0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c2925678 <col:39> '_A1' lvalue ParmVar 0x7fb7c2924d70 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c2925710 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c29256d8 <col:64> '_A2' lvalue ParmVar 0x7fb7c2924de0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c2924fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c2925008 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2925918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2925800 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c2925878 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c2925b80 <col:111, col:153>
| | | `-ReturnStmt 0x7fb7c2925b68 <col:112, col:151>
| | |   `-CallExpr 0x7fb7c2925b00 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c2925ae8 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2925a38 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7fb7c287f2d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c2925b38 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2925a70 <col:133> 'float' lvalue ParmVar 0x7fb7c2925800 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c2925b50 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2925a98 <col:143> 'long double' lvalue ParmVar 0x7fb7c2925878 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c29259c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2925a08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2925d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1376:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2925be8 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c2925c60 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c2925f40 <col:111, col:153>
| | | `-ReturnStmt 0x7fb7c2925f28 <col:112, col:151>
| | |   `-CallExpr 0x7fb7c2925ec0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c2925ea8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2925e20 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7fb7c287f540 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c2925ef8 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2925e58 <col:133> 'long double' lvalue ParmVar 0x7fb7c2925be8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c2925f10 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2925e80 <col:143> 'long double' lvalue ParmVar 0x7fb7c2925c60 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c2925da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2925df0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c29264d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1378:1, line:1381:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7fb7c2925f60 <line:1378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c2926438 <line:1379:1, line:1381:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c2926290 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c2926308 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7fb7c2926a68 <col:58, col:107>
| |   | `-ReturnStmt 0x7fb7c2926a50 <col:59, col:105>
| |   |   `-CallExpr 0x7fb7c2926a00 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c29269e8 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c2926988 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7fb7c288e028 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7fb7c2926658 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c2926618 <col:87> '_A1' lvalue ParmVar 0x7fb7c2926290 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb7c2926a38 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb7c2926680 <col:97> 'long double' lvalue ParmVar 0x7fb7c2926308 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7fb7c2926530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c2926578 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2926be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2926ad0 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c2926b48 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb7c2926e28 <col:110, col:151>
| | | `-ReturnStmt 0x7fb7c2926e10 <col:111, col:149>
| | |   `-CallExpr 0x7fb7c2926da8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c2926d90 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2926d08 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fb7c288bdd8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb7c2926de0 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2926d40 <col:131> 'float' lvalue ParmVar 0x7fb7c2926ad0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c2926df8 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2926d68 <col:141> 'float' lvalue ParmVar 0x7fb7c2926b48 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb7c2926c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2926cd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2926fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1386:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2926e90 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c2926f08 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb7c29271e8 <col:110, col:151>
| | | `-ReturnStmt 0x7fb7c29271d0 <col:111, col:149>
| | |   `-CallExpr 0x7fb7c2927168 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c2927150 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c29270c8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fb7c288c238 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb7c29271a0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2927100 <col:131> 'long double' lvalue ParmVar 0x7fb7c2926e90 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c29271b8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2927128 <col:141> 'long double' lvalue ParmVar 0x7fb7c2926f08 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c2927050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2927098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c2927a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1388:1, line:1402:1> line:1396:1 remainder
| | |-TemplateTypeParmDecl 0x7fb7c2927208 <line:1388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c2927278 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c29279b8 <line:1389:1, line:1402:1> line:1396:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c2927860 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c29278d0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb7c2928278 <line:1397:1, line:1402:1>
| |   | |-DeclStmt 0x7fb7c2927cc8 <line:1398:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c2927c70 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c2927c00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c29280c0 <line:1399:5, line:1400:68>
| |   | | `-StaticAssertDecl 0x7fb7c2928088 <line:1399:5, line:1400:67> line:1399:5
| |   | |   |-ParenExpr 0x7fb7c2928040 <col:19, line:1400:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c2928020 <line:1399:20, line:1400:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c2928000 <line:1399:21, line:1400:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c2927fd8 <line:1399:22, line:1400:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c2927e38 <line:1399:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c2927f98 <line:1400:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c2928060 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c2928260 <line:1401:5, col:72>
| |   |   `-CallExpr 0x7fb7c2928228 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c29280f8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7fb7c288c000 0x7fb7c2926be8 0x7fb7c2926fa8 0x7fb7c2927a50
| |   |     |-CStyleCastExpr 0x7fb7c29281a0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c2928168 <col:39> '_A1' lvalue ParmVar 0x7fb7c2927860 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb7c2928200 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c29281c8 <col:64> '_A2' lvalue ParmVar 0x7fb7c29278d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb7c2927ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c2927af8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c29284d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1406:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fb7c29282f0 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c2928368 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fb7c29283e0 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fb7c2928790 <col:122, col:170>
| | | `-ReturnStmt 0x7fb7c2928778 <col:123, col:168>
| | |   `-CallExpr 0x7fb7c29286f0 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c29286d8 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c29285f8 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7fb7c288c528 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7fb7c2928730 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2928630 <col:140> 'float' lvalue ParmVar 0x7fb7c29282f0 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fb7c2928748 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2928658 <col:150> 'float' lvalue ParmVar 0x7fb7c2928368 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c2928760 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2928680 <col:160> 'int *' lvalue ParmVar 0x7fb7c29283e0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fb7c2928580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c29285c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c29289e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2928800 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c2928878 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fb7c29288f0 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fb7c2928ca0 <col:122, col:170>
| | | `-ReturnStmt 0x7fb7c2928c88 <col:123, col:168>
| | |   `-CallExpr 0x7fb7c2928c00 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c2928be8 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c2928b08 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7fb7c288ca68 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7fb7c2928c40 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2928b40 <col:140> 'long double' lvalue ParmVar 0x7fb7c2928800 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c2928c58 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c2928b68 <col:150> 'long double' lvalue ParmVar 0x7fb7c2928878 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c2928c70 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c2928b90 <col:160> 'int *' lvalue ParmVar 0x7fb7c29288f0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fb7c2928a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c2928ad8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c29295e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1409:1, line:1423:1> line:1417:1 remquo
| | |-TemplateTypeParmDecl 0x7fb7c2928cc0 <line:1409:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb7c2928d28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb7c2929548 <line:1410:1, line:1423:1> line:1417:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c2929310 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c2929380 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fb7c29293f8 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7fb7c2929e38 <line:1418:1, line:1423:1>
| |   | |-DeclStmt 0x7fb7c2929858 <line:1419:5, col:66>
| |   | | `-TypedefDecl 0x7fb7c2929800 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb7c2929790 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb7c2929c50 <line:1420:5, line:1421:68>
| |   | | `-StaticAssertDecl 0x7fb7c2929c18 <line:1420:5, line:1421:67> line:1420:5
| |   | |   |-ParenExpr 0x7fb7c2929bd0 <col:19, line:1421:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb7c2929bb0 <line:1420:20, line:1421:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb7c2929b90 <line:1420:21, line:1421:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb7c2929b68 <line:1420:22, line:1421:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb7c29299c8 <line:1420:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb7c2929b28 <line:1421:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb7c2929bf0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb7c2929e20 <line:1422:5, col:79>
| |   |   `-CallExpr 0x7fb7c2929de0 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb7c2929c88 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7fb7c288c7c8 0x7fb7c29284d0 0x7fb7c29289e0 0x7fb7c29295e0
| |   |     |-CStyleCastExpr 0x7fb7c2929d30 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c2929cf8 <col:36> '_A1' lvalue ParmVar 0x7fb7c2929310 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fb7c2929d90 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c2929d58 <col:61> '_A2' lvalue ParmVar 0x7fb7c2929380 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7fb7c2929db8 <col:71> 'int *' lvalue ParmVar 0x7fb7c29293f8 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7fb7c2929648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c2929690 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c2929f48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1427:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c2929eb0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c292a138 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c292a120 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c292a0d8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c292a0c0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292a060 <col:91, col:93> 'float (float)' lvalue Function 0x7fb7c2889148 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c292a108 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292a098 <col:99> 'float' lvalue ParmVar 0x7fb7c2929eb0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c2929fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292a030 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292a238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1428:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292a1a0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c292a428 <col:83, col:109>
| | | `-ReturnStmt 0x7fb7c292a410 <col:84, col:107>
| | |   `-CallExpr 0x7fb7c292a3c8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c292a3b0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292a350 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb7c2889490 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c292a3f8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292a388 <col:99> 'long double' lvalue ParmVar 0x7fb7c292a1a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c292a2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292a320 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c292a8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1430:1, line:1433:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7fb7c292a448 <line:1430:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c292a858 <line:1431:1, line:1433:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c292a780 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c292ae10 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb7c292adf8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb7c292adc8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c292adb0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c292ad78 <col:38, col:40> 'double (double)' lvalue Function 0x7fb7c28892f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c292aa70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c292aa30 <col:53> '_A1' lvalue ParmVar 0x7fb7c292a780 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c292a948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c292a990 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292af10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1437:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292ae78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c292b100 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c292b0e8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c292b0a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c292b088 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292b028 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c2889c88 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c292b0d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292b060 <col:101> 'float' lvalue ParmVar 0x7fb7c292ae78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c292afb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292aff8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292b200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1438:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292b168 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c292b3f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c292b3d8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c292b390 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c292b378 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292b318 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c2889fc8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c292b3c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292b350 <col:101> 'long double' lvalue ParmVar 0x7fb7c292b168 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c292b2a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292b2e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c292b8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1440:1, line:1443:65> col:1 round
| | |-TemplateTypeParmDecl 0x7fb7c292b410 <line:1440:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c292b818 <line:1441:1, line:1443:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c292b740 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c292bdd0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb7c292bdb8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb7c292bd88 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c292bd70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c292bd38 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c2889e28 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c292ba30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c292b9f0 <col:55> '_A1' lvalue ParmVar 0x7fb7c292b740 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c292b908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c292b950 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292bf50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1447:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292be38 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c292beb0 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fb7c292c1c0 <col:101, col:140>
| | | `-ReturnStmt 0x7fb7c292c1a8 <col:102, col:138>
| | |   `-CallExpr 0x7fb7c292c140 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c292c128 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292c070 <col:109, col:111> 'float (float, long)' lvalue Function 0x7fb7c2884ba8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7fb7c292c178 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c292c0a8 <col:120> 'float' lvalue ParmVar 0x7fb7c292be38 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c292c190 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292c0d0 <col:130> 'long' lvalue ParmVar 0x7fb7c292beb0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fb7c292bff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292c040 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292c340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1448:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292c228 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c292c2a0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fb7c292c5b0 <col:101, col:140>
| | | `-ReturnStmt 0x7fb7c292c598 <col:102, col:138>
| | |   `-CallExpr 0x7fb7c292c530 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c292c518 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292c460 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7fb7c2885108 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7fb7c292c568 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c292c498 <col:120> 'long double' lvalue ParmVar 0x7fb7c292c228 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c292c580 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292c4c0 <col:130> 'long' lvalue ParmVar 0x7fb7c292c2a0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fb7c292c3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292c430 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c292cb70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1450:1, line:1453:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7fb7c292c5d0 <line:1450:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c292cad8 <line:1451:1, line:1453:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c292c930 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c292c9a8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7fb7c292d108 <col:48, col:94>
| |   | `-ReturnStmt 0x7fb7c292d0f0 <col:49, col:92>
| |   |   `-CallExpr 0x7fb7c292d0a0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c292d088 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c292d028 <col:56, col:58> 'double (double, long)' lvalue Function 0x7fb7c2884e58 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7fb7c292ccf8 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c292ccb8 <col:74> '_A1' lvalue ParmVar 0x7fb7c292c930 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb7c292d0d8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb7c292cd20 <col:84> 'long' lvalue ParmVar 0x7fb7c292c9a8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7fb7c292cbd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c292cc18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292d288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1457:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292d170 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb7c292d1e8 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fb7c292d4c8 <col:99, col:137>
| | | `-ReturnStmt 0x7fb7c292d4b0 <col:100, col:135>
| | |   `-CallExpr 0x7fb7c292d448 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c292d430 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292d3a8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7fb7c28844e8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fb7c292d480 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c292d3e0 <col:117> 'float' lvalue ParmVar 0x7fb7c292d170 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb7c292d498 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292d408 <col:127> 'int' lvalue ParmVar 0x7fb7c292d1e8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fb7c292d330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292d378 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292d648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1458:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292d530 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb7c292d5a8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fb7c292d888 <col:99, col:137>
| | | `-ReturnStmt 0x7fb7c292d870 <col:100, col:135>
| | |   `-CallExpr 0x7fb7c292d808 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c292d7f0 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292d768 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7fb7c2884938 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fb7c292d840 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb7c292d7a0 <col:117> 'long double' lvalue ParmVar 0x7fb7c292d530 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb7c292d858 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292d7c8 <col:127> 'int' lvalue ParmVar 0x7fb7c292d5a8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fb7c292d6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292d738 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c292dde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1460:1, line:1463:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7fb7c292d8a8 <line:1460:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c292dd48 <line:1461:1, line:1463:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c292dbe0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb7c292dc58 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7fb7c292e350 <col:46, col:91>
| |   | `-ReturnStmt 0x7fb7c292e338 <col:47, col:89>
| |   |   `-CallExpr 0x7fb7c292e2e8 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c292e2d0 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c292e298 <col:54, col:56> 'double (double, int)' lvalue Function 0x7fb7c2884710 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fb7c292df68 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb7c292df28 <col:71> '_A1' lvalue ParmVar 0x7fb7c292dbe0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb7c292e320 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb7c292df90 <col:81> 'int' lvalue ParmVar 0x7fb7c292dc58 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7fb7c292de40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c292de88 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292e450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1467:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292e3b8 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c292e640 <col:85, col:113>
| | | `-ReturnStmt 0x7fb7c292e628 <col:86, col:111>
| | |   `-CallExpr 0x7fb7c292e5e0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c292e5c8 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292e568 <col:93, col:95> 'float (float)' lvalue Function 0x7fb7c2887dc0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c292e610 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292e5a0 <col:103> 'float' lvalue ParmVar 0x7fb7c292e3b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c292e4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292e538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292e740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1468:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292e6a8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c292e930 <col:85, col:113>
| | | `-ReturnStmt 0x7fb7c292e918 <col:86, col:111>
| | |   `-CallExpr 0x7fb7c292e8d0 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c292e8b8 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292e858 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fb7c2888100 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c292e900 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292e890 <col:103> 'long double' lvalue ParmVar 0x7fb7c292e6a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c292e7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292e828 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb7c292edf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1470:1, line:1473:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7fb7c292e950 <line:1470:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb7c292ed58 <line:1471:1, line:1473:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb7c292ec80 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb7c292f310 <col:32, col:67>
| |   | `-ReturnStmt 0x7fb7c292f2f8 <col:33, col:65>
| |   |   `-CallExpr 0x7fb7c292f2c8 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fb7c292f2b0 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb7c292f278 <col:40, col:42> 'double (double)' lvalue Function 0x7fb7c2887f60 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb7c292ef70 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb7c292ef30 <col:57> '_A1' lvalue ParmVar 0x7fb7c292ec80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb7c292ee48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb7c292ee90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292f410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1477:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292f378 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb7c292f600 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c292f5e8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c292f5a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb7c292f588 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292f528 <col:92, col:94> 'float (float)' lvalue Function 0x7fb7c288b200 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb7c292f5d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292f560 <col:101> 'float' lvalue ParmVar 0x7fb7c292f378 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb7c292f4b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292f4f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb7c292f700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1478:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb7c292f668 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb7c292f8f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb7c292f8d8 <col:85, col:109>
| | |   `-CallExpr 0x7fb7c292f890 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb7c292f878 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb7c292f818 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb7c288b540 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb7c292f8c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb7c292f850 <col:101> 'long double' lvalue ParmVar 0x7fb7c292f668 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb7c292f7a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb7c292f7e8 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fb7c292fdb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1480:1, line:1483:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7fb7c292f910 <line:1480:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7fb7c292fd18 <line:1481:1, line:1483:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7fb7c292fc40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7fb7c29302d0 <col:31, col:65>
|     | `-ReturnStmt 0x7fb7c29302b8 <col:32, col:63>
|     |   `-CallExpr 0x7fb7c2930288 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7fb7c2930270 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7fb7c2930238 <col:39, col:41> 'double (double)' lvalue Function 0x7fb7c288b3a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7fb7c292ff30 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7fb7c292fef0 <col:55> '_A1' lvalue ParmVar 0x7fb7c292fc40 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7fb7c292fe08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7fb7c292fe50 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7fb7c28b1e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:439:12> col:12 implicit C
| `-FunctionDecl 0x7fb7c28b1ea8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fb7c28b1f40 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fb7c28b1fa8 <col:12> Implicit
|   `-ConstAttr 0x7fb7c28b1ff0 <col:12> Implicit
|-LinkageSpecDecl 0x7fb7c3001140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:90> col:90 implicit C
| `-FunctionDecl 0x7fb7c3001190 <col:90> col:90 implicit used __builtin_huge_valf 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fb7c3001228 <col:90> Implicit
|   `-ConstAttr 0x7fb7c3001270 <col:90> Implicit
|-LinkageSpecDecl 0x7fb7c3001320 <line:332:91> col:91 implicit C
| `-FunctionDecl 0x7fb7c3001370 <col:91> col:91 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb7c3001408 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb7c3001470 <col:91> Implicit
|   `-ConstAttr 0x7fb7c30014b8 <col:91> Implicit
|-LinkageSpecDecl 0x7fb7c3001620 <line:333:95> col:95 implicit C
| `-FunctionDecl 0x7fb7c3001670 <col:95> col:95 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb7c3001708 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb7c3001770 <col:95> Implicit
|   `-ConstAttr 0x7fb7c30017b8 <col:95> Implicit
|-LinkageSpecDecl 0x7fb7c3004670 <line:377:90> col:90 implicit C
| `-FunctionDecl 0x7fb7c30046c0 <col:90> col:90 implicit used __builtin_huge_val 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fb7c3004758 <col:90> Implicit
|   `-ConstAttr 0x7fb7c30047a0 <col:90> Implicit
|-LinkageSpecDecl 0x7fb7c3004850 <line:378:91> col:91 implicit C
| `-FunctionDecl 0x7fb7c30048a0 <col:91> col:91 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb7c3004938 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb7c30049a0 <col:91> Implicit
|   `-ConstAttr 0x7fb7c30049e8 <col:91> Implicit
|-LinkageSpecDecl 0x7fb7c3004b50 <line:379:95> col:95 implicit C
| `-FunctionDecl 0x7fb7c3004ba0 <col:95> col:95 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb7c3004c38 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb7c3004ca0 <col:95> Implicit
|   `-ConstAttr 0x7fb7c3004ce8 <col:95> Implicit
|-LinkageSpecDecl 0x7fb7c3007bc8 <line:423:90> col:90 implicit C
| `-FunctionDecl 0x7fb7c3007c18 <col:90> col:90 implicit used __builtin_huge_vall 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fb7c3007cb0 <col:90> Implicit
|   `-ConstAttr 0x7fb7c3007cf8 <col:90> Implicit
|-LinkageSpecDecl 0x7fb7c3007da8 <line:424:91> col:91 implicit C
| `-FunctionDecl 0x7fb7c3007df8 <col:91> col:91 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb7c3007e90 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb7c3007ef8 <col:91> Implicit
|   `-ConstAttr 0x7fb7c3007f40 <col:91> Implicit
|-LinkageSpecDecl 0x7fb7c30080b0 <line:425:95> col:95 implicit C
| `-FunctionDecl 0x7fb7c3008100 <col:95> col:95 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb7c3008198 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb7c3008200 <col:95> Implicit
|   `-ConstAttr 0x7fb7c3008248 <col:95> Implicit
|-LinkageSpecDecl 0x7fb7c199b9b0 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7fb7c199ba00 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c199ba98 <col:25> Implicit
|   `-ConstAttr 0x7fb7c199bae0 <col:25> Implicit
|-LinkageSpecDecl 0x7fb7c199cd58 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7fb7c199cda8 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c199ce40 <col:30> Implicit
|   `-ConstAttr 0x7fb7c199ce88 <col:30> Implicit
|-LinkageSpecDecl 0x7fb7c199dec8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7fb7c199df18 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c199dfb0 <col:22> Implicit
|   `-ConstAttr 0x7fb7c199dff8 <col:22> Implicit
|-LinkageSpecDecl 0x7fb7c199f058 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7fb7c199f0a8 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c199f140 <col:27> Implicit
|   `-ConstAttr 0x7fb7c199f188 <col:27> Implicit
|-LinkageSpecDecl 0x7fb7c19a0200 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7fb7c19a0250 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c19a02e8 <col:29> Implicit
|   `-ConstAttr 0x7fb7c19a0330 <col:29> Implicit
|-LinkageSpecDecl 0x7fb7c19a1378 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7fb7c19a13c8 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c19a1460 <col:27> Implicit
|   `-ConstAttr 0x7fb7c19a14a8 <col:27> Implicit
|-NamespaceDecl 0x7fb7c29302f0 prev 0x7fb7c1961b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fb7c1865c58 'std'
| `-NamespaceDecl 0x7fb7c2930358 prev 0x7fb7c1961c00 <col:52, line:439:36> <scratch space>:440:1 __1 inline
|   |-original Namespace 0x7fb7c1865cc0 '__1'
|   |-UsingDecl 0x7fb7c29303c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7fb7c2930418 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1992298 'signbit'
|   |-UsingShadowDecl 0x7fb7c2930460 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1992d90 'signbit'
|   |-UsingShadowDecl 0x7fb7c29304a8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19935e0 'signbit'
|   |-UsingDecl 0x7fb7c29304f8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7fb7c2930548 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1994660 'fpclassify'
|   |-UsingShadowDecl 0x7fb7c2930590 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1994ee0 'fpclassify'
|   |-UsingDecl 0x7fb7c29305e0 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7fb7c2930630 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1996180 'isfinite'
|   |-UsingShadowDecl 0x7fb7c2930678 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1996b70 'isfinite'
|   |-UsingDecl 0x7fb7c29306c8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7fb7c2930718 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1997c00 'isinf'
|   |-UsingShadowDecl 0x7fb7c2930760 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1998500 'isinf'
|   |-UsingDecl 0x7fb7c29307b0 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7fb7c2930800 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1999450 'isnan'
|   |-UsingShadowDecl 0x7fb7c2930848 <col:9> col:9 implicit FunctionTemplate 0x7fb7c1999cd0 'isnan'
|   |-UsingDecl 0x7fb7c2930898 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7fb7c29308e8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c199ac40 'isnormal'
|   |-UsingShadowDecl 0x7fb7c2930930 <col:9> col:9 implicit FunctionTemplate 0x7fb7c199b3d0 'isnormal'
|   |-UsingDecl 0x7fb7c2930980 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7fb7c29309d0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c199c460 'isgreater'
|   |-UsingDecl 0x7fb7c2930a20 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7fb7c2930a70 <col:9> col:9 implicit FunctionTemplate 0x7fb7c199d6a0 'isgreaterequal'
|   |-UsingDecl 0x7fb7c2930ac0 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7fb7c2930b10 <col:9> col:9 implicit FunctionTemplate 0x7fb7c199e830 'isless'
|   |-UsingDecl 0x7fb7c2930b60 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7fb7c2930bb0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c199f9a0 'islessequal'
|   |-UsingDecl 0x7fb7c2930c00 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7fb7c2930c50 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19a0b50 'islessgreater'
|   |-UsingDecl 0x7fb7c2930ca0 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fb7c2930cf0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19a1cc0 'isunordered'
|   |-UsingDecl 0x7fb7c2930d40 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fb7c2930d90 prev 0x7fb7c2930cf0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19a1cc0 'isunordered'
|   |-UsingDecl 0x7fb7c2930de0 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7fb7c2930e30 <col:9> col:9 implicit Typedef 0x7fb7c1865e40 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fb7c2930e80 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7fb7c2930ed0 <col:9> col:9 implicit Typedef 0x7fb7c1865eb0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fb7c2930f20 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7fb7c2930f70 <col:9> col:9 implicit Function 0x7fb7c19a2200 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2930fb8 <col:9> col:9 implicit Function 0x7fb7c19a24f0 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931000 <col:9> col:9 implicit Function 0x7fb7c19a27e0 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7fb7c2931050 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7fb7c29310a0 <col:9> col:9 implicit Function 0x7fb7c28774d8 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c29310e8 <col:9> col:9 implicit Function 0x7fb7c19a2ad0 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931130 <col:9> col:9 implicit Function 0x7fb7c19a2dc0 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931178 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19a3560 'acos'
|   |-UsingDecl 0x7fb7c29311c8 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7fb7c2931218 <col:9> col:9 implicit Function 0x7fb7c2877338 'acosf' 'float (float)'
|   |-UsingDecl 0x7fb7c2931268 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7fb7c29312b8 <col:9> col:9 implicit Function 0x7fb7c2877a00 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2931300 <col:9> col:9 implicit Function 0x7fb7c19a5160 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931348 <col:9> col:9 implicit Function 0x7fb7c19a5450 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931390 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19a5b00 'asin'
|   |-UsingDecl 0x7fb7c29313e0 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7fb7c2931430 <col:9> col:9 implicit Function 0x7fb7c2877818 'asinf' 'float (float)'
|   |-UsingDecl 0x7fb7c2931480 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7fb7c29314d0 <col:9> col:9 implicit Function 0x7fb7c2877ee0 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2931518 <col:9> col:9 implicit Function 0x7fb7c19a6120 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931560 <col:9> col:9 implicit Function 0x7fb7c19a6440 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29315a8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19a6af0 'atan'
|   |-UsingDecl 0x7fb7c29315f8 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7fb7c2931648 <col:9> col:9 implicit Function 0x7fb7c2877d40 'atanf' 'float (float)'
|   |-UsingDecl 0x7fb7c2931698 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7fb7c29316e8 <col:9> col:9 implicit Function 0x7fb7c2878598 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c2931730 <col:9> col:9 implicit Function 0x7fb7c19a7190 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931778 <col:9> col:9 implicit Function 0x7fb7c19a7580 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29317c0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19a8150 'atan2'
|   |-UsingDecl 0x7fb7c2931810 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7fb7c2931860 <col:9> col:9 implicit Function 0x7fb7c28782e8 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7fb7c29318b0 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7fb7c2931900 <col:9> col:9 implicit Function 0x7fb7c2888448 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2931948 <col:9> col:9 implicit Function 0x7fb7c19a9b68 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931990 <col:9> col:9 implicit Function 0x7fb7c19a9e58 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29319d8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19aa510 'ceil'
|   |-UsingDecl 0x7fb7c2931a28 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7fb7c2931a78 <col:9> col:9 implicit Function 0x7fb7c28882a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7fb7c2931ac8 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7fb7c2931b18 <col:9> col:9 implicit Function 0x7fb7c28793d0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2931b60 <col:9> col:9 implicit Function 0x7fb7c19aab30 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931ba8 <col:9> col:9 implicit Function 0x7fb7c19aae20 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931bf0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19ab500 'cos'
|   |-UsingDecl 0x7fb7c2931c40 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7fb7c2931c90 <col:9> col:9 implicit Function 0x7fb7c2879230 'cosf' 'float (float)'
|   |-UsingDecl 0x7fb7c2931ce0 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7fb7c2931d30 <col:9> col:9 implicit Function 0x7fb7c287b930 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2931d78 <col:9> col:9 implicit Function 0x7fb7c19abb20 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931dc0 <col:9> col:9 implicit Function 0x7fb7c19abe10 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931e08 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19ac4c0 'cosh'
|   |-UsingDecl 0x7fb7c2931e58 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7fb7c2931ea8 <col:9> col:9 implicit Function 0x7fb7c287b790 'coshf' 'float (float)'
|   |-UsingDecl 0x7fb7c2931ef8 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7fb7c2931f48 <col:9> col:9 implicit Function 0x7fb7c287cff0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2931f90 <col:9> col:9 implicit Function 0x7fb7c19acae0 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2931fd8 <col:9> col:9 implicit Function 0x7fb7c19acdd0 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932020 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19ad4a0 'exp'
|   |-UsingDecl 0x7fb7c2932070 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7fb7c29320c0 <col:9> col:9 implicit Function 0x7fb7c287ce50 'expf' 'float (float)'
|   |-UsingDecl 0x7fb7c2932110 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7fb7c2932160 <col:9> col:9 implicit Function 0x7fb7c2885490 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c29321a8 <col:9> col:9 implicit Function 0x7fb7c19adac0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c29321f0 <col:9> col:9 implicit Function 0x7fb7c19addb0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932238 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19ae460 'fabs'
|   |-UsingDecl 0x7fb7c2932288 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7fb7c29322d8 <col:9> col:9 implicit Function 0x7fb7c28852f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7fb7c2932328 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7fb7c2932378 <col:9> col:9 implicit Function 0x7fb7c2888928 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c29323c0 <col:9> col:9 implicit Function 0x7fb7c19aea80 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932408 <col:9> col:9 implicit Function 0x7fb7c19aed70 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932450 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19af440 'floor'
|   |-UsingDecl 0x7fb7c29324a0 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7fb7c29324f0 <col:9> col:9 implicit Function 0x7fb7c2888788 'floorf' 'float (float)'
|   |-UsingDecl 0x7fb7c2932540 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7fb7c2932590 <col:9> col:9 implicit Function 0x7fb7c288b988 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c29325d8 <col:9> col:9 implicit Function 0x7fb7c19afae0 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932620 <col:9> col:9 implicit Function 0x7fb7c19afea0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932668 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19b0940 'fmod'
|   |-UsingDecl 0x7fb7c29326b8 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7fb7c2932708 <col:9> col:9 implicit Function 0x7fb7c288b760 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c2932758 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7fb7c29327a8 <col:9> col:9 implicit Function 0x7fb7c2882a28 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7fb7c29327f0 <col:9> col:9 implicit Function 0x7fb7c19b1318 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932838 <col:9> col:9 implicit Function 0x7fb7c19b1730 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932880 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19b1f60 'frexp'
|   |-UsingDecl 0x7fb7c29328d0 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7fb7c2932920 <col:9> col:9 implicit Function 0x7fb7c2882788 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7fb7c2932970 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7fb7c29329c0 <col:9> col:9 implicit Function 0x7fb7c2882200 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7fb7c2932a08 <col:9> col:9 implicit Function 0x7fb7c19b2678 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932a50 <col:9> col:9 implicit Function 0x7fb7c19b2a60 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932a98 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19b3298 'ldexp'
|   |-UsingDecl 0x7fb7c2932ae8 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7fb7c2932b38 <col:9> col:9 implicit Function 0x7fb7c2880f38 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7fb7c2932b88 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7fb7c2932bd8 <col:9> col:9 implicit Function 0x7fb7c287df00 'log' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2932c20 <col:9> col:9 implicit Function 0x7fb7c19b3938 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932c68 <col:9> col:9 implicit Function 0x7fb7c19b3c28 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932cb0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19b42e0 'log'
|   |-UsingDecl 0x7fb7c2932d00 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7fb7c2932d50 <col:9> col:9 implicit Function 0x7fb7c287dd60 'logf' 'float (float)'
|   |-UsingDecl 0x7fb7c2932da0 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7fb7c2932df0 <col:9> col:9 implicit Function 0x7fb7c287e430 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2932e38 <col:9> col:9 implicit Function 0x7fb7c19b4900 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932e80 <col:9> col:9 implicit Function 0x7fb7c19b4bf0 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2932ec8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19b52d8 'log10'
|   |-UsingDecl 0x7fb7c2932f18 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7fb7c2932f68 <col:9> col:9 implicit Function 0x7fb7c287e290 'log10f' 'float (float)'
|   |-UsingDecl 0x7fb7c2932fb8 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7fb7c2933008 <col:9> col:9 implicit Function 0x7fb7c28809d8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7fb7c2933050 <col:9> col:9 implicit Function 0x7fb7c19b5980 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933098 <col:9> col:9 implicit Function 0x7fb7c19b5da0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7fb7c29330e8 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7fb7c2933138 <col:9> col:9 implicit Function 0x7fb7c2880718 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7fb7c2933188 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7fb7c29331d8 <col:9> col:9 implicit Function 0x7fb7c2886650 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c2933220 <col:9> col:9 implicit Function 0x7fb7c19b61c0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933268 <col:9> col:9 implicit Function 0x7fb7c19b6580 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29332b0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19b7020 'pow'
|   |-UsingDecl 0x7fb7c2933300 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7fb7c2933350 <col:9> col:9 implicit Function 0x7fb7c2886428 'powf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c29333a0 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7fb7c29333f0 <col:9> col:9 implicit Function 0x7fb7c28798b0 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2933438 <col:9> col:9 implicit Function 0x7fb7c19b7958 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933480 <col:9> col:9 implicit Function 0x7fb7c19b7c48 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29334c8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19b8300 'sin'
|   |-UsingDecl 0x7fb7c2933518 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7fb7c2933568 <col:9> col:9 implicit Function 0x7fb7c2879710 'sinf' 'float (float)'
|   |-UsingDecl 0x7fb7c29335b8 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7fb7c2933608 <col:9> col:9 implicit Function 0x7fb7c287c630 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2933650 <col:9> col:9 implicit Function 0x7fb7c19b8920 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933698 <col:9> col:9 implicit Function 0x7fb7c19b8c10 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29336e0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19bb4d8 'sinh'
|   |-UsingDecl 0x7fb7c2933730 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7fb7c2933780 <col:9> col:9 implicit Function 0x7fb7c287c490 'sinhf' 'float (float)'
|   |-UsingDecl 0x7fb7c29337d0 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7fb7c2933820 <col:9> col:9 implicit Function 0x7fb7c2886bc0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2933868 <col:9> col:9 implicit Function 0x7fb7c19bbb00 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c29338b0 <col:9> col:9 implicit Function 0x7fb7c19bbdf0 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29338f8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19bc4a0 'sqrt'
|   |-UsingDecl 0x7fb7c2933948 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7fb7c2933998 <col:9> col:9 implicit Function 0x7fb7c2886a20 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7fb7c29339e8 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7fb7c2933a38 <col:9> col:9 implicit Function 0x7fb7c2879d90 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2933a80 <col:9> col:9 implicit Function 0x7fb7c19bcac0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933ac8 <col:9> col:9 implicit Function 0x7fb7c19bcdb0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933b10 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19bd498 'tan'
|   |-UsingDecl 0x7fb7c2933b60 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7fb7c2933bb0 <col:9> col:9 implicit Function 0x7fb7c2879bf0 'tanf' 'float (float)'
|   |-UsingDecl 0x7fb7c2933c00 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7fb7c2933c50 <col:9> col:9 implicit Function 0x7fb7c287cb10 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2933c98 <col:9> col:9 implicit Function 0x7fb7c19bdac0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933ce0 <col:9> col:9 implicit Function 0x7fb7c19bddb0 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933d28 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19be460 'tanh'
|   |-UsingDecl 0x7fb7c2933d78 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7fb7c2933dc8 <col:9> col:9 implicit Function 0x7fb7c287c970 'tanhf' 'float (float)'
|   |-UsingDecl 0x7fb7c2933e18 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7fb7c2933e68 <col:9> col:9 implicit Function 0x7fb7c287aa90 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2933eb0 <col:9> col:9 implicit Function 0x7fb7c19bea80 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933ef8 <col:9> col:9 implicit Function 0x7fb7c19bed70 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2933f40 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19bf498 'acosh'
|   |-UsingDecl 0x7fb7c2933f90 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7fb7c2933fe0 <col:9> col:9 implicit Function 0x7fb7c287a0d0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7fb7c2934030 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7fb7c2934080 <col:9> col:9 implicit Function 0x7fb7c287af70 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c29340c8 <col:9> col:9 implicit Function 0x7fb7c19bfac0 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934110 <col:9> col:9 implicit Function 0x7fb7c19bfdb0 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934158 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19c0460 'asinh'
|   |-UsingDecl 0x7fb7c29341a8 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7fb7c29341f8 <col:9> col:9 implicit Function 0x7fb7c287add0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7fb7c2934248 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7fb7c2934298 <col:9> col:9 implicit Function 0x7fb7c287b450 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c29342e0 <col:9> col:9 implicit Function 0x7fb7c19c0a80 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934328 <col:9> col:9 implicit Function 0x7fb7c19c0d70 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934370 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19c1498 'atanh'
|   |-UsingDecl 0x7fb7c29343c0 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7fb7c2934410 <col:9> col:9 implicit Function 0x7fb7c287b2b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7fb7c2934460 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7fb7c29344b0 <col:9> col:9 implicit Function 0x7fb7c2885970 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c29344f8 <col:9> col:9 implicit Function 0x7fb7c19c1ac0 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934540 <col:9> col:9 implicit Function 0x7fb7c19c1db0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934588 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19c2460 'cbrt'
|   |-UsingDecl 0x7fb7c29345d8 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7fb7c2934628 <col:9> col:9 implicit Function 0x7fb7c28857d0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7fb7c2934678 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7fb7c29346c8 <col:9> col:9 implicit Function 0x7fb7c288ce68 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c2934710 <col:9> col:9 implicit Function 0x7fb7c19c2b00 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934758 <col:9> col:9 implicit Function 0x7fb7c19c2ec0 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29347a0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19c3980 'copysign'
|   |-UsingDecl 0x7fb7c2934800 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7fb7c2934850 <col:9> col:9 implicit Function 0x7fb7c288cc40 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c29348a0 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7fb7c29348f0 <col:9> col:9 implicit Function 0x7fb7c28870a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2934938 <col:9> col:9 implicit Function 0x7fb7c19c42b8 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934980 <col:9> col:9 implicit Function 0x7fb7c19c45a8 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29349c8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19c4c60 'erf'
|   |-UsingDecl 0x7fb7c2934a18 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7fb7c2934a68 <col:9> col:9 implicit Function 0x7fb7c2886f00 'erff' 'float (float)'
|   |-UsingDecl 0x7fb7c2934ab8 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7fb7c2934b08 <col:9> col:9 implicit Function 0x7fb7c28875d0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2934b50 <col:9> col:9 implicit Function 0x7fb7c19c5280 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934b98 <col:9> col:9 implicit Function 0x7fb7c19c6578 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934be0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19c6c30 'erfc'
|   |-UsingDecl 0x7fb7c2934c30 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7fb7c2934c80 <col:9> col:9 implicit Function 0x7fb7c2887430 'erfcf' 'float (float)'
|   |-UsingDecl 0x7fb7c2934cd0 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7fb7c2934d20 <col:9> col:9 implicit Function 0x7fb7c287d540 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2934d68 <col:9> col:9 implicit Function 0x7fb7c19c7250 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934db0 <col:9> col:9 implicit Function 0x7fb7c19c7540 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934df8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19c7bf0 'exp2'
|   |-UsingDecl 0x7fb7c2934e48 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7fb7c2934e98 <col:9> col:9 implicit Function 0x7fb7c287d3a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7fb7c2934ee8 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7fb7c2934f38 <col:9> col:9 implicit Function 0x7fb7c287da20 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2934f80 <col:9> col:9 implicit Function 0x7fb7c19c8210 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2934fc8 <col:9> col:9 implicit Function 0x7fb7c19c8500 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935010 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19c8bb0 'expm1'
|   |-UsingDecl 0x7fb7c2935060 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7fb7c29350b0 <col:9> col:9 implicit Function 0x7fb7c287d880 'expm1f' 'float (float)'
|   |-UsingDecl 0x7fb7c2935100 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7fb7c2935150 <col:9> col:9 implicit Function 0x7fb7c287f990 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c2935198 <col:9> col:9 implicit Function 0x7fb7c19c9250 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c29351e0 <col:9> col:9 implicit Function 0x7fb7c19c9610 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935228 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19ca0b0 'fdim'
|   |-UsingDecl 0x7fb7c2935278 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7fb7c29352c8 <col:9> col:9 implicit Function 0x7fb7c287f768 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c2935318 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7fb7c2935368 <col:9> col:9 implicit Function 0x7fb7c2892ba8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7fb7c29353b8 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7fb7c2935408 <col:9> col:9 implicit Function 0x7fb7c2892ef8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7fb7c2935450 <col:9> col:9 implicit Function 0x7fb7c19ccb08 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935498 <col:9> col:9 implicit Function 0x7fb7c19ccfc0 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29354e0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19cded0 'fma'
|   |-UsingDecl 0x7fb7c2935530 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7fb7c2935580 <col:9> col:9 implicit Function 0x7fb7c2880008 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c29355c8 <col:9> col:9 implicit Function 0x7fb7c19cec20 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935610 <col:9> col:9 implicit Function 0x7fb7c19cefe0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935658 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19cfa80 'fmax'
|   |-UsingDecl 0x7fb7c29356a8 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7fb7c29356f8 <col:9> col:9 implicit Function 0x7fb7c287fde0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c2935748 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7fb7c2935798 <col:9> col:9 implicit Function 0x7fb7c2892688 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c29357e0 <col:9> col:9 implicit Function 0x7fb7c19d0440 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935828 <col:9> col:9 implicit Function 0x7fb7c19d0800 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935870 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19d12a0 'fmin'
|   |-UsingDecl 0x7fb7c29358c0 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7fb7c2935910 <col:9> col:9 implicit Function 0x7fb7c2892460 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c2935960 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7fb7c29359b0 <col:9> col:9 implicit Function 0x7fb7c2885f58 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c29359f8 <col:9> col:9 implicit Function 0x7fb7c19d1c58 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935a40 <col:9> col:9 implicit Function 0x7fb7c19d2018 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935a88 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19d2b00 'hypot'
|   |-UsingDecl 0x7fb7c2935ad8 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7fb7c2935b28 <col:9> col:9 implicit Function 0x7fb7c2885d30 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c2935b78 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7fb7c2935bc8 <col:9> col:9 implicit Function 0x7fb7c2883078 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7fb7c2935c10 <col:9> col:9 implicit Function 0x7fb7c19d3438 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935c58 <col:9> col:9 implicit Function 0x7fb7c19d3728 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935ca0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c19d3de0 'ilogb'
|   |-UsingDecl 0x7fb7c2935cf0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7fb7c2935d40 <col:9> col:9 implicit Function 0x7fb7c2882ea0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7fb7c2935d90 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7fb7c2935de0 <col:9> col:9 implicit Function 0x7fb7c2887aa0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2935e28 <col:9> col:9 implicit Function 0x7fb7c288e4b8 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935e70 <col:9> col:9 implicit Function 0x7fb7c288e7a8 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2935eb8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c288ee60 'lgamma'
|   |-UsingDecl 0x7fb7c2935f08 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7fb7c2935f58 <col:9> col:9 implicit Function 0x7fb7c2887910 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7fb7c2935fa8 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7fb7c2935ff8 <col:9> col:9 implicit Function 0x7fb7c288a8a8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7fb7c2936040 <col:9> col:9 implicit Function 0x7fb7c288f480 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2936088 <col:9> col:9 implicit Function 0x7fb7c288f7a0 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29360d0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c288ff70 'llrint'
|   |-UsingDecl 0x7fb7c2936120 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7fb7c2936170 <col:9> col:9 implicit Function 0x7fb7c288a688 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7fb7c29361c0 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7fb7c2936210 <col:9> col:9 implicit Function 0x7fb7c288ae48 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7fb7c2936258 <col:9> col:9 implicit Function 0x7fb7c28ef848 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c29362a0 <col:9> col:9 implicit Function 0x7fb7c28efb38 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29362e8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c28f01f0 'llround'
|   |-UsingDecl 0x7fb7c2936338 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7fb7c2936388 <col:9> col:9 implicit Function 0x7fb7c288aca8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7fb7c29363d8 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7fb7c2936428 <col:9> col:9 implicit Function 0x7fb7c287edf0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2936470 <col:9> col:9 implicit Function 0x7fb7c28f0810 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c29364b8 <col:9> col:9 implicit Function 0x7fb7c28f0b00 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2936500 <col:9> col:9 implicit FunctionTemplate 0x7fb7c28f11b0 'log1p'
|   |-UsingDecl 0x7fb7c2936550 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7fb7c29365a0 <col:9> col:9 implicit Function 0x7fb7c287ec50 'log1pf' 'float (float)'
|   |-UsingDecl 0x7fb7c29365f0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7fb7c2936640 <col:9> col:9 implicit Function 0x7fb7c287e910 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2936688 <col:9> col:9 implicit Function 0x7fb7c28f17d0 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c29366d0 <col:9> col:9 implicit Function 0x7fb7c28f1ac0 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2936718 <col:9> col:9 implicit FunctionTemplate 0x7fb7c28f2170 'log2'
|   |-UsingDecl 0x7fb7c2936768 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7fb7c29367b8 <col:9> col:9 implicit Function 0x7fb7c287e770 'log2f' 'float (float)'
|   |-UsingDecl 0x7fb7c2936808 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7fb7c2936858 <col:9> col:9 implicit Function 0x7fb7c28802f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c29368a0 <col:9> col:9 implicit Function 0x7fb7c28f2790 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c29368e8 <col:9> col:9 implicit Function 0x7fb7c28f2a80 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2936930 <col:9> col:9 implicit FunctionTemplate 0x7fb7c28f3130 'logb'
|   |-UsingDecl 0x7fb7c2936980 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7fb7c29369d0 <col:9> col:9 implicit Function 0x7fb7c287f130 'logbf' 'float (float)'
|   |-UsingDecl 0x7fb7c2936a20 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7fb7c2936a70 <col:9> col:9 implicit Function 0x7fb7c2889888 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7fb7c2936ab8 <col:9> col:9 implicit Function 0x7fb7c2896750 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2936b00 <col:9> col:9 implicit Function 0x7fb7c2896a70 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2936b48 <col:9> col:9 implicit FunctionTemplate 0x7fb7c2897240 'lrint'
|   |-UsingDecl 0x7fb7c2936b98 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7fb7c2936be8 <col:9> col:9 implicit Function 0x7fb7c2889668 'lrintf' 'long (float)'
|   |-UsingDecl 0x7fb7c2936c38 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7fb7c2936c88 <col:9> col:9 implicit Function 0x7fb7c288a308 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7fb7c2936cd0 <col:9> col:9 implicit Function 0x7fb7c2897af8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2936d18 <col:9> col:9 implicit Function 0x7fb7c2897de8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2936d60 <col:9> col:9 implicit FunctionTemplate 0x7fb7c28984a0 'lround'
|   |-UsingDecl 0x7fb7c2936db0 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7fb7c2936e00 <col:9> col:9 implicit Function 0x7fb7c288a168 'lroundf' 'long (float)'
|   |-UsingDecl 0x7fb7c2936e50 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7fb7c2936ea0 <col:9> col:9 implicit Function 0x7fb7c288d4e8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7fb7c2936ef0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7fb7c2936f40 <col:9> col:9 implicit Function 0x7fb7c288d2c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7fb7c2936f90 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7fb7c2936fe0 <col:9> col:9 implicit Function 0x7fb7c2888e08 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2937028 <col:9> col:9 implicit Function 0x7fb7c2898ac0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937070 <col:9> col:9 implicit Function 0x7fb7c2898db0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29370b8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c2899460 'nearbyint'
|   |-UsingDecl 0x7fb7c2937108 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7fb7c2937158 <col:9> col:9 implicit Function 0x7fb7c2888c68 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7fb7c29371a8 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7fb7c29371f8 <col:9> col:9 implicit Function 0x7fb7c288db90 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c2937240 <col:9> col:9 implicit Function 0x7fb7c2899b00 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937288 <col:9> col:9 implicit Function 0x7fb7c2899ec0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29372d0 <col:9> col:9 implicit FunctionTemplate 0x7fb7c2924f60 'nextafter'
|   |-UsingDecl 0x7fb7c2937320 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7fb7c2937370 <col:9> col:9 implicit Function 0x7fb7c288d968 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c29373c0 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7fb7c2937410 <col:9> col:9 implicit Function 0x7fb7c288e028 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7fb7c2937458 <col:9> col:9 implicit Function 0x7fb7c2925918 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29374a0 <col:9> col:9 implicit Function 0x7fb7c2925d00 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29374e8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c29264d0 'nexttoward'
|   |-UsingDecl 0x7fb7c2937538 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7fb7c2937588 <col:9> col:9 implicit Function 0x7fb7c287f2d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7fb7c29375d8 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7fb7c2937628 <col:9> col:9 implicit Function 0x7fb7c288c000 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb7c2937670 <col:9> col:9 implicit Function 0x7fb7c2926be8 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb7c29376b8 <col:9> col:9 implicit Function 0x7fb7c2926fa8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937700 <col:9> col:9 implicit FunctionTemplate 0x7fb7c2927a50 'remainder'
|   |-UsingDecl 0x7fb7c2937750 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7fb7c29377a0 <col:9> col:9 implicit Function 0x7fb7c288bdd8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7fb7c29377f0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7fb7c2937840 <col:9> col:9 implicit Function 0x7fb7c288c7c8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7fb7c2937888 <col:9> col:9 implicit Function 0x7fb7c29284d0 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7fb7c29378d0 <col:9> col:9 implicit Function 0x7fb7c29289e0 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937918 <col:9> col:9 implicit FunctionTemplate 0x7fb7c29295e0 'remquo'
|   |-UsingDecl 0x7fb7c2937968 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7fb7c29379b8 <col:9> col:9 implicit Function 0x7fb7c288c528 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7fb7c2937a08 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7fb7c2937a58 <col:9> col:9 implicit Function 0x7fb7c28892f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2937aa0 <col:9> col:9 implicit Function 0x7fb7c2929f48 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937ae8 <col:9> col:9 implicit Function 0x7fb7c292a238 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937b30 <col:9> col:9 implicit FunctionTemplate 0x7fb7c292a8f0 'rint'
|   |-UsingDecl 0x7fb7c2937b80 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7fb7c2937bd0 <col:9> col:9 implicit Function 0x7fb7c2889148 'rintf' 'float (float)'
|   |-UsingDecl 0x7fb7c2937c20 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7fb7c2937c70 <col:9> col:9 implicit Function 0x7fb7c2889e28 'round' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2937cb8 <col:9> col:9 implicit Function 0x7fb7c292af10 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937d00 <col:9> col:9 implicit Function 0x7fb7c292b200 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937d48 <col:9> col:9 implicit FunctionTemplate 0x7fb7c292b8b0 'round'
|   |-UsingDecl 0x7fb7c2937d98 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7fb7c2937de8 <col:9> col:9 implicit Function 0x7fb7c2889c88 'roundf' 'float (float)'
|   |-UsingDecl 0x7fb7c2937e38 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7fb7c2937e88 <col:9> col:9 implicit Function 0x7fb7c2884e58 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7fb7c2937ed0 <col:9> col:9 implicit Function 0x7fb7c292bf50 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937f18 <col:9> col:9 implicit Function 0x7fb7c292c340 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7fb7c2937f60 <col:9> col:9 implicit FunctionTemplate 0x7fb7c292cb70 'scalbln'
|   |-UsingDecl 0x7fb7c2937fb0 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7fb7c2938000 <col:9> col:9 implicit Function 0x7fb7c2884ba8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7fb7c2938050 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7fb7c29380a0 <col:9> col:9 implicit Function 0x7fb7c2884710 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7fb7c29380e8 <col:9> col:9 implicit Function 0x7fb7c292d288 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fb7c2938130 <col:9> col:9 implicit Function 0x7fb7c292d648 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fb7c2938178 <col:9> col:9 implicit FunctionTemplate 0x7fb7c292dde0 'scalbn'
|   |-UsingDecl 0x7fb7c29381c8 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7fb7c2938218 <col:9> col:9 implicit Function 0x7fb7c28844e8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7fb7c2938268 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7fb7c29382b8 <col:9> col:9 implicit Function 0x7fb7c2887f60 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2938300 <col:9> col:9 implicit Function 0x7fb7c292e450 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2938348 <col:9> col:9 implicit Function 0x7fb7c292e740 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c2938390 <col:9> col:9 implicit FunctionTemplate 0x7fb7c292edf0 'tgamma'
|   |-UsingDecl 0x7fb7c29383e0 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7fb7c2938430 <col:9> col:9 implicit Function 0x7fb7c2887dc0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7fb7c2938480 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7fb7c29384d0 <col:9> col:9 implicit Function 0x7fb7c288b3a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7fb7c2938518 <col:9> col:9 implicit Function 0x7fb7c292f410 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb7c2938560 <col:9> col:9 implicit Function 0x7fb7c292f700 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb7c29385a8 <col:9> col:9 implicit FunctionTemplate 0x7fb7c292fdb0 'trunc'
|   |-UsingDecl 0x7fb7c29385f8 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7fb7c2938648 <col:9> col:9 implicit Function 0x7fb7c288b200 'truncf' 'float (float)'
|   |-UsingDecl 0x7fb7c2938698 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7fb7c29386e8 <col:9> col:9 implicit Function 0x7fb7c2877678 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c2938738 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7fb7c2938788 <col:9> col:9 implicit Function 0x7fb7c2877ba0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293a800 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7fb7c293a850 <col:9> col:9 implicit Function 0x7fb7c2878080 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293a8a0 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7fb7c293a8f0 <col:9> col:9 implicit Function 0x7fb7c2878848 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293a940 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7fb7c293a990 <col:9> col:9 implicit Function 0x7fb7c28885e8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293a9e0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7fb7c293aa30 <col:9> col:9 implicit Function 0x7fb7c2879570 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293aa80 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7fb7c293aad0 <col:9> col:9 implicit Function 0x7fb7c287c2f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293ab20 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7fb7c293ab70 <col:9> col:9 implicit Function 0x7fb7c287d200 'expl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293abc0 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7fb7c293ac10 <col:9> col:9 implicit Function 0x7fb7c2885630 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293ac60 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7fb7c293acb0 <col:9> col:9 implicit Function 0x7fb7c2888ac8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293ad00 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7fb7c293ad50 <col:9> col:9 implicit Function 0x7fb7c288bbb0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293ada0 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7fb7c293adf0 <col:9> col:9 implicit Function 0x7fb7c2882cc8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7fb7c293ae40 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7fb7c293ae90 <col:9> col:9 implicit Function 0x7fb7c28824b8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7fb7c293aee0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7fb7c293af30 <col:9> col:9 implicit Function 0x7fb7c287e0a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293af80 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7fb7c293afd0 <col:9> col:9 implicit Function 0x7fb7c287e5d0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b020 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7fb7c293b070 <col:9> col:9 implicit Function 0x7fb7c2880c98 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7fb7c293b0c0 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7fb7c293b110 <col:9> col:9 implicit Function 0x7fb7c2886878 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293b160 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7fb7c293b1b0 <col:9> col:9 implicit Function 0x7fb7c2879a50 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b200 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7fb7c293b250 <col:9> col:9 implicit Function 0x7fb7c287c7d0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b2a0 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7fb7c293b2f0 <col:9> col:9 implicit Function 0x7fb7c2886d60 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b340 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7fb7c293b390 <col:9> col:9 implicit Function 0x7fb7c2879f30 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b3e0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7fb7c293b430 <col:9> col:9 implicit Function 0x7fb7c287ccb0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b480 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7fb7c293b4d0 <col:9> col:9 implicit Function 0x7fb7c287ac30 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b520 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7fb7c293b570 <col:9> col:9 implicit Function 0x7fb7c287b110 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b5c0 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7fb7c293b610 <col:9> col:9 implicit Function 0x7fb7c287b5f0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b660 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7fb7c293b6b0 <col:9> col:9 implicit Function 0x7fb7c2885b10 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b700 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7fb7c293b750 <col:9> col:9 implicit Function 0x7fb7c288d090 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293b7a0 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7fb7c293b7f0 <col:9> col:9 implicit Function 0x7fb7c2887290 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b840 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7fb7c293b890 <col:9> col:9 implicit Function 0x7fb7c2887770 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b8e0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7fb7c293b930 <col:9> col:9 implicit Function 0x7fb7c287d6e0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293b980 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7fb7c293b9d0 <col:9> col:9 implicit Function 0x7fb7c287dbc0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293ba20 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7fb7c293ba70 <col:9> col:9 implicit Function 0x7fb7c287fbb8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293bac0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7fb7c293bb10 <col:9> col:9 implicit Function 0x7fb7c2883288 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7fb7c293bb60 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7fb7c293bbb0 <col:9> col:9 implicit Function 0x7fb7c2892238 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293bc00 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7fb7c293bc50 <col:9> col:9 implicit Function 0x7fb7c28928b0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293bca0 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7fb7c293bcf0 <col:9> col:9 implicit Function 0x7fb7c2886200 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293bd40 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7fb7c293bd90 <col:9> col:9 implicit Function 0x7fb7c2884290 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7fb7c293bde0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7fb7c293be30 <col:9> col:9 implicit Function 0x7fb7c2887c30 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293be80 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7fb7c293bed0 <col:9> col:9 implicit Function 0x7fb7c288aac8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7fb7c293bf20 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7fb7c293bf70 <col:9> col:9 implicit Function 0x7fb7c288afe8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7fb7c293bfc0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7fb7c293c010 <col:9> col:9 implicit Function 0x7fb7c287ef90 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293c060 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7fb7c293c0b0 <col:9> col:9 implicit Function 0x7fb7c287eab0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293c100 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7fb7c293c150 <col:9> col:9 implicit Function 0x7fb7c2880490 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293c1a0 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7fb7c293c1f0 <col:9> col:9 implicit Function 0x7fb7c2889aa8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7fb7c293c240 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7fb7c293c290 <col:9> col:9 implicit Function 0x7fb7c288a4a8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7fb7c293c2e0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7fb7c293c330 <col:9> col:9 implicit Function 0x7fb7c288d708 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7fb7c293c380 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7fb7c293c3d0 <col:9> col:9 implicit Function 0x7fb7c2888fa8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293c420 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7fb7c293c470 <col:9> col:9 implicit Function 0x7fb7c288ddb8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293c4c0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7fb7c293c510 <col:9> col:9 implicit Function 0x7fb7c287f540 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293c560 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7fb7c293c5b0 <col:9> col:9 implicit Function 0x7fb7c288c238 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb7c293c600 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7fb7c293c650 <col:9> col:9 implicit Function 0x7fb7c288ca68 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7fb7c293c6a0 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7fb7c293c6f0 <col:9> col:9 implicit Function 0x7fb7c2889490 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293c740 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7fb7c293c790 <col:9> col:9 implicit Function 0x7fb7c2889fc8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293c7e0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7fb7c293c830 <col:9> col:9 implicit Function 0x7fb7c2885108 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7fb7c293c880 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7fb7c293c8d0 <col:9> col:9 implicit Function 0x7fb7c2884938 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7fb7c293c920 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7fb7c293c970 <col:9> col:9 implicit Function 0x7fb7c2888100 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7fb7c293c9c0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7fb7c293ca10 <col:9> col:9 implicit Function 0x7fb7c288b540 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7fb7c293cee0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fb7c293ca58 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb7c293ce48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb7c293cd70 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb7c293d168 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7fb7c293d150 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7fb7c293d120 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fb7c293d0d0 <col:12> '<builtin fn type>' Function 0x7fb7c293cfe0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fb7c293d0f8 <col:28> '_A1' lvalue ParmVar 0x7fb7c293cd70 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb7c293cf38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb7c293cf80 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fb7c293d700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fb7c293d188 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb7c293d668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb7c293d550 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb7c293d880 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7fb7c293d868 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7fb7c293d838 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fb7c293d7b0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7fb7c2930848 0x7fb7c2930800
|   |   |     `-DeclRefExpr 0x7fb7c293d810 <col:18> '_A1' lvalue ParmVar 0x7fb7c293d550 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb7c293d758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb7c293d7a0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fb7c293dd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fb7c293d8a0 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb7c293dc88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb7c293dbb0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb7c293dfa8 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7fb7c293df90 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7fb7c293df60 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fb7c293df10 <col:12> '<builtin fn type>' Function 0x7fb7c293de20 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fb7c293df38 <col:28> '_A1' lvalue ParmVar 0x7fb7c293dbb0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb7c293dd78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb7c293ddc0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fb7c293e460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fb7c293dfc8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb7c293e3c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb7c293e2f0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb7c293e5e0 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7fb7c293e5c8 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7fb7c293e598 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fb7c293e510 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7fb7c2930760 0x7fb7c2930718
|   |   |     `-DeclRefExpr 0x7fb7c293e570 <col:18> '_A1' lvalue ParmVar 0x7fb7c293e2f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb7c293e4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb7c293e500 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fb7c2946aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7fb7c293e600 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb7c2946a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb7c2946930 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb7c2946d28 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7fb7c2946d10 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7fb7c2946ce0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fb7c2946c90 <col:12> '<builtin fn type>' Function 0x7fb7c2946ba0 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fb7c2946cb8 <col:31> '_A1' lvalue ParmVar 0x7fb7c2946930 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb7c2946af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb7c2946b40 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7fb7c29471e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7fb7c2946d48 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7fb7c2947148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7fb7c2947070 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7fb7c2947360 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7fb7c2947348 <line:606:5, col:29>
|       |   `-CallExpr 0x7fb7c2947318 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7fb7c2947290 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7fb7c2930678 0x7fb7c2930630
|       |     `-DeclRefExpr 0x7fb7c29472f0 <col:21> '_A1' lvalue ParmVar 0x7fb7c2947070 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7fb7c2947238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|       `-VisibilityAttr 0x7fb7c2947280 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7fb7c293cf90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7fb7c293cfe0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c293d078 <col:12> Implicit
|   `-ConstAttr 0x7fb7c293d0c0 <col:12> Implicit
|-LinkageSpecDecl 0x7fb7c293ddd0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7fb7c293de20 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c293deb8 <col:12> Implicit
|   `-ConstAttr 0x7fb7c293df00 <col:12> Implicit
|-LinkageSpecDecl 0x7fb7c2946b50 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7fb7c2946ba0 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb7c2946c38 <col:12> Implicit
|   `-ConstAttr 0x7fb7c2946c80 <col:12> Implicit
|-CXXRecordDecl 0x7fb7c2947380 <object_model/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7fb7c29474a8 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7fb7c2947558 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7fb7c2948b68 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fb7c2948c48 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7fb7c2948c48
| |-CXXConstructorDecl 0x7fb7c2948f08 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7fb7c2948f08
| | `-ParmVarDecl 0x7fb7c2949030 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7fb7c29490c8 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7fb7c29490c8
|   `-ParmVarDecl 0x7fb7c29491f0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7fb7c29475c0 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7fb7c29476e8 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7fb7c2947798 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7fb7c2948d48 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fb7c2948e28 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7fb7c2948e28
| |-CXXConstructorDecl 0x7fb7c2949258 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7fb7c2949258
| | `-ParmVarDecl 0x7fb7c2949380 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7fb7c2949418 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7fb7c2949418
|   `-ParmVarDecl 0x7fb7c2949540 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7fb7c2947800 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7fb7c29479a8 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7fb7c2947a58 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7fb7c2948a68 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fb7c29495a8 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7fb7c29495a8
| | `-ParmVarDecl 0x7fb7c29496d0 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7fb7c2949768 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7fb7c2949768
|   `-ParmVarDecl 0x7fb7c2949890 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7fb7c2947bc8 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7fb7c2947af8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7fb7c2947d98 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7fb7c2947d80 <line:17:5, col:20>
|     `-BinaryOperator 0x7fb7c2947d58 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fb7c2947d28 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fb7c2947c90 <col:12, col:14> 'const double' lvalue .x 0x7fb7c2947558
|       |   `-DeclRefExpr 0x7fb7c2947c68 <col:12> 'const struct P1' lvalue ParmVar 0x7fb7c2947af8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7fb7c2947d40 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fb7c2947cf0 <col:18, col:20> 'const double' lvalue .x 0x7fb7c2947558
|           `-DeclRefExpr 0x7fb7c2947cc8 <col:18> 'const struct P1' lvalue ParmVar 0x7fb7c2947af8 'p' 'const struct P1 &'
|-FunctionDecl 0x7fb7c2947ec8 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7fb7c2947df8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7fb7c2948098 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7fb7c2948080 <line:22:5, col:20>
|     `-BinaryOperator 0x7fb7c2948058 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fb7c2948028 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fb7c2947f90 <col:12, col:14> 'const double' lvalue .y 0x7fb7c2947798
|       |   `-DeclRefExpr 0x7fb7c2947f68 <col:12> 'const struct P2' lvalue ParmVar 0x7fb7c2947df8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7fb7c2948040 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fb7c2947ff0 <col:18, col:20> 'const double' lvalue .y 0x7fb7c2947798
|           `-DeclRefExpr 0x7fb7c2947fc8 <col:18> 'const struct P2' lvalue ParmVar 0x7fb7c2947df8 'p' 'const struct P2 &'
|-FunctionDecl 0x7fb7c29481c8 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7fb7c29480f8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7fb7c2948888 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7fb7c2948870 <line:27:5, col:41>
|     `-CallExpr 0x7fb7c2948840 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7fb7c2948828 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7fb7c29487e8 <col:12, col:17> 'double (double)' lvalue Function 0x7fb7c2886bc0 'sqrt' 'double (double)' (UsingShadow 0x7fb7c2933820 'sqrt')
|       `-BinaryOperator 0x7fb7c2948590 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7fb7c2948400 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7fb7c29483e8 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7fb7c2948390 <col:22> 'double (const struct P1 &)' lvalue Function 0x7fb7c2947bc8 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7fb7c2948430 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7fb7c2948368 <col:28> 'const struct P3' lvalue ParmVar 0x7fb7c29480f8 'p' 'const struct P3 &'
|         `-CallExpr 0x7fb7c2948540 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7fb7c2948528 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fb7c29484d0 <col:33> 'double (const struct P2 &)' lvalue Function 0x7fb7c2947ec8 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7fb7c2948570 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7fb7c29484a8 <col:39> 'const struct P3' lvalue ParmVar 0x7fb7c29480f8 'p' 'const struct P3 &'
`-FunctionDecl 0x7fb7c29488d0 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7fb7c2949f50 <line:31:1, line:37:1>
    |-DeclStmt 0x7fb7c2949b68 <line:32:5, col:12>
    | `-VarDecl 0x7fb7c29489a8 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7fb7c29498f8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7fb7c2949ca8 <line:33:5, col:17>
    | `-VarDecl 0x7fb7c2949bb8 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7fb7c2949c88 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7fb7c2949c68 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7fb7c2949c18 <col:15> 'struct P3' lvalue Var 0x7fb7c29489a8 'p3' 'struct P3'
    |-DeclStmt 0x7fb7c2949f00 <line:35:5, col:23>
    | `-VarDecl 0x7fb7c2949cd0 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7fb7c2949e20 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7fb7c2949e08 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fb7c2949db0 <col:14> 'double (const struct P3 &)' lvalue Function 0x7fb7c29481c8 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7fb7c2949e50 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7fb7c2949d88 <col:20> 'struct P3' lvalue Var 0x7fb7c29489a8 'p3' 'struct P3'
    `-ReturnStmt 0x7fb7c2949f38 <line:36:5, col:12>
      `-IntegerLiteral 0x7fb7c2949f18 <col:12> 'int' 0
