TranslationUnitDecl 0x7f9f13830ad0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f9f13831060 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7f9f13830d40 '__int128'
|-TypedefDecl 0x7f9f138310d0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f9f13830d60 'unsigned __int128'
|-TypedefDecl 0x7f9f13831418 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f9f138311c0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f9f13831128 '__NSConstantString_tag'
|-TypedefDecl 0x7f9f138314b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f9f13831470 'char *'
|   `-BuiltinType 0x7f9f13830b60 'char'
|-TypedefDecl 0x7f9f13863200 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f9f13831790 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f9f138315a0 'struct __va_list_tag'
|     `-CXXRecord 0x7f9f13831508 '__va_list_tag'
|-NamespaceDecl 0x7f9f13863258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:414:1, line:417:1> line:414:11 std
| `-NamespaceDecl 0x7f9f138632c0 <line:415:3, line:416:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7f9f138633d8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7f9f13863440 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7f9f13830cc0 'float'
| |-TypedefDecl 0x7f9f138634b0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7f9f13830ce0 'double'
| |-FunctionDecl 0x7f9f138635d8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7f9f13863798 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7f9f138636c8 <col:26> col:31 'float'
| |-FunctionDecl 0x7f9f13863918 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7f9f13863850 <col:26> col:32 'double'
| |-FunctionDecl 0x7f9f13863a98 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7f9f138639d0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7f9f13863be0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7f9f13863b50 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7f9f13863c80 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13863d70 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7f9f13863ce0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7f9f13863e10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13863f00 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f13863e70 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7f9f13863fa0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13864090 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7f9f13864000 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7f9f13864130 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138f9430 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7f9f13864190 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7f9f138f94d0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138f95c0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f138f9530 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7f9f138f9660 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138f9750 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7f9f138f96c0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7f9f138f97f0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138f98e0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7f9f138f9850 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7f9f138f9980 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138f9a70 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f138f99e0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7f9f138f9b10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138f9c00 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7f9f138f9b70 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7f9f138f9ca0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138f9d90 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7f9f138f9d00 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7f9f138f9e30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138f9f20 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f138f9e90 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7f9f138f9fc0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fa0b0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7f9f138fa020 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7f9f138fa150 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fa240 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7f9f138fa1b0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7f9f138fa2e0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fa400 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f138fa340 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7f9f138fa4a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fa590 prev 0x7f9f13863be0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7f9f138fa500 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7f9f138fad38 <col:58, line:206:1>
| | | `-ReturnStmt 0x7f9f138fad20 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7f9f138fad08 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138face0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7f9f138fa6f8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7f9f138fa6c8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7f9f138fa678 <col:12> 'float' lvalue ParmVar 0x7f9f138fa500 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7f9f138fa6e0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7f9f138fa6a0 <col:19> 'float' lvalue ParmVar 0x7f9f138fa500 '__x' 'float'
| | |       `-BinaryOperator 0x7f9f138facb8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7f9f138faa00 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7f9f138fa9e8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7f9f138fa940 <col:26> '<builtin fn type>' Function 0x7f9f138fa7e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7f9f138faa30 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7f9f138fa968 <col:42> 'float' lvalue ParmVar 0x7f9f138fa500 '__x' 'float'
| | |         `-CallExpr 0x7f9f138fac90 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7f9f138fac78 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7f9f138fabf0 <col:50> '<builtin fn type>' Function 0x7f9f138fab00 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7f9f138fa630 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fae00 prev 0x7f9f13863d70 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7f9f138fad70 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7f9f138fba38 <col:59, line:209:1>
| | | `-ReturnStmt 0x7f9f138fba20 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7f9f138fba08 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138fb9e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7f9f138faf68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7f9f138faf38 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7f9f138faee8 <col:12> 'double' lvalue ParmVar 0x7f9f138fad70 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7f9f138faf50 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7f9f138faf10 <col:19> 'double' lvalue ParmVar 0x7f9f138fad70 '__x' 'double'
| | |       `-BinaryOperator 0x7f9f138fb9b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7f9f138fb270 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7f9f138fb258 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7f9f138fb1b0 <col:26> '<builtin fn type>' Function 0x7f9f138fb058 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7f9f138fb2a0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7f9f138fb1d8 <col:41> 'double' lvalue ParmVar 0x7f9f138fad70 '__x' 'double'
| | |         `-CallExpr 0x7f9f138fb990 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7f9f138fb978 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7f9f138fb8f0 <col:49> '<builtin fn type>' Function 0x7f9f138fb800 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7f9f138faea0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fbb00 prev 0x7f9f13863f00 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f138fba70 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7f9f138fc2a8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7f9f138fc290 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7f9f138fc278 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138fc250 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7f9f138fbc68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7f9f138fbc38 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7f9f138fbbe8 <col:12> 'long double' lvalue ParmVar 0x7f9f138fba70 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7f9f138fbc50 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7f9f138fbc10 <col:19> 'long double' lvalue ParmVar 0x7f9f138fba70 '__x' 'long double'
| | |       `-BinaryOperator 0x7f9f138fc228 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7f9f138fbf70 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7f9f138fbf58 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7f9f138fbeb0 <col:26> '<builtin fn type>' Function 0x7f9f138fbd58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7f9f138fbfa0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7f9f138fbed8 <col:42> 'long double' lvalue ParmVar 0x7f9f138fba70 '__x' 'long double'
| | |         `-CallExpr 0x7f9f138fc200 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7f9f138fc1e8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7f9f138fc160 <col:50> '<builtin fn type>' Function 0x7f9f138fc070 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7f9f138fbba0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fc370 prev 0x7f9f13864090 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7f9f138fc2e0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7f9f138fc5c8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7f9f138fc5b0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7f9f138fc598 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138fc570 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7f9f138fc4c0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7f9f138fc4a8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7f9f138fc458 <col:12> '<builtin fn type>' Function 0x7f9f138fa7e8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7f9f138fc4f0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7f9f138fc480 <col:28> 'float' lvalue ParmVar 0x7f9f138fc2e0 '__x' 'float'
| | |       `-CallExpr 0x7f9f138fc548 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7f9f138fc530 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7f9f138fc508 <col:36> '<builtin fn type>' Function 0x7f9f138fab00 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7f9f138fc410 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fc690 prev 0x7f9f138f9430 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7f9f138fc600 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7f9f138fcce8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7f9f138fccd0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7f9f138fccb8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138fcc90 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7f9f138fc7e0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7f9f138fc7c8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7f9f138fc778 <col:12> '<builtin fn type>' Function 0x7f9f138fb058 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7f9f138fcc10 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7f9f138fc7a0 <col:27> 'double' lvalue ParmVar 0x7f9f138fc600 '__x' 'double'
| | |       `-CallExpr 0x7f9f138fcc68 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7f9f138fcc50 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7f9f138fcc28 <col:35> '<builtin fn type>' Function 0x7f9f138fb800 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7f9f138fc730 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fcdb0 prev 0x7f9f138f95c0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f138fcd20 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7f9f138fd008 <col:61, line:221:1>
| | | `-ReturnStmt 0x7f9f138fcff0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7f9f138fcfd8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138fcfb0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7f9f138fcf00 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7f9f138fcee8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7f9f138fce98 <col:12> '<builtin fn type>' Function 0x7f9f138fbd58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7f9f138fcf30 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7f9f138fcec0 <col:28> 'long double' lvalue ParmVar 0x7f9f138fcd20 '__x' 'long double'
| | |       `-CallExpr 0x7f9f138fcf88 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7f9f138fcf70 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7f9f138fcf48 <col:36> '<builtin fn type>' Function 0x7f9f138fc070 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7f9f138fce50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fd0d0 prev 0x7f9f138f9750 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7f9f138fd040 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7f9f138fd290 <col:55, line:224:1>
| | | `-ReturnStmt 0x7f9f138fd278 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7f9f138fd260 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138fd238 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7f9f138fd208 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7f9f138fd1b8 <col:12> 'float' lvalue ParmVar 0x7f9f138fd040 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7f9f138fd220 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7f9f138fd1e0 <col:19> 'float' lvalue ParmVar 0x7f9f138fd040 '__x' 'float'
| | `-AlwaysInlineAttr 0x7f9f138fd170 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fd358 prev 0x7f9f138f98e0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7f9f138fd2c8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7f9f138fd518 <col:56, line:227:1>
| | | `-ReturnStmt 0x7f9f138fd500 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7f9f138fd4e8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138fd4c0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7f9f138fd490 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7f9f138fd440 <col:12> 'double' lvalue ParmVar 0x7f9f138fd2c8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7f9f138fd4a8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7f9f138fd468 <col:19> 'double' lvalue ParmVar 0x7f9f138fd2c8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7f9f138fd3f8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fd5e0 prev 0x7f9f138f9a70 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f138fd550 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7f9f138fd7a0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7f9f138fd788 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7f9f138fd770 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f138fd748 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7f9f138fd718 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7f9f138fd6c8 <col:12> 'long double' lvalue ParmVar 0x7f9f138fd550 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7f9f138fd730 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7f9f138fd6f0 <col:19> 'long double' lvalue ParmVar 0x7f9f138fd550 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7f9f138fd680 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138fd868 prev 0x7f9f138fa0b0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7f9f138fd7d8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7f9f138ff4d8 <col:57, line:235:1>
| | | |-DeclStmt 0x7f9f138ff1b0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7f9f138fd950 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7f9f138fda90 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7f9f138fdaf0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7f9f138fec80 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7f9f138ff150 <col:5>
| | | | | |-CXXConstructorDecl 0x7f9f138fedc8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7f9f138fedc8
| | | | | | `-ParmVarDecl 0x7f9f138feef0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7f9f138fef88 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7f9f138fef88
| | | | |   `-ParmVarDecl 0x7f9f138ff0b0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7f9f138fec00 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7f9f138ff168 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7f9f138ff268 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7f9f138ff1f0 <col:5, col:9> 'float' lvalue .__f 0x7f9f138fda90
| | | | | `-DeclRefExpr 0x7f9f138ff1c8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7f9f138fec00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7f9f138ff250 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7f9f138ff228 <col:15> 'float' lvalue ParmVar 0x7f9f138fd7d8 '__x' 'float'
| | | `-ReturnStmt 0x7f9f138ff4c0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7f9f138ff498 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7f9f138ff480 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7f9f138ff460 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7f9f138ff3f0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7f9f138ff3d8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7f9f138ff380 <col:18, col:22> 'unsigned int' lvalue .__u 0x7f9f138fdaf0
| | |           |   `-DeclRefExpr 0x7f9f138ff358 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7f9f138fec00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7f9f138ff3b8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7f9f138fd908 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138ff5b0 prev 0x7f9f138fa240 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7f9f138ff520 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7f9f13901bb0 <col:58, line:240:1>
| | | |-DeclStmt 0x7f9f13901888 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7f9f138ff698 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7f9f138ff7d0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7f9f138ff830 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7f9f138ff970 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7f9f13901828 <col:5>
| | | | | |-CXXConstructorDecl 0x7f9f138ffa88 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7f9f138ffa88
| | | | | | `-ParmVarDecl 0x7f9f13901600 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7f9f13901698 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7f9f13901698
| | | | |   `-ParmVarDecl 0x7f9f139017c0 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7f9f138ff8f0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7f9f13901840 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7f9f13901940 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7f9f139018c8 <col:5, col:9> 'double' lvalue .__f 0x7f9f138ff7d0
| | | | | `-DeclRefExpr 0x7f9f139018a0 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7f9f138ff8f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7f9f13901928 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7f9f13901900 <col:15> 'double' lvalue ParmVar 0x7f9f138ff520 '__x' 'double'
| | | `-ReturnStmt 0x7f9f13901b98 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7f9f13901b70 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7f9f13901b58 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7f9f13901b38 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7f9f13901ac8 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7f9f13901ab0 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7f9f13901a58 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7f9f138ff830
| | |           |   `-DeclRefExpr 0x7f9f13901a30 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7f9f138ff8f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7f9f13901a90 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7f9f138ff650 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13901c88 prev 0x7f9f138fa400 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f13901bf8 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7f9f13903960 <col:63, line:249:1>
| | | |-DeclStmt 0x7f9f13903538 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7f9f13901d70 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7f9f13901eb0 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7f9f13901ef8 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7f9f13902030 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7f9f13902090 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7f9f139023a8 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7f9f13902488 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7f9f13902488
| | | | | | |-CXXConstructorDecl 0x7f9f13902fc8 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7f9f13902fc8
| | | | | | | `-ParmVarDecl 0x7f9f139030f0 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7f9f13903188 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7f9f13903188
| | | | | |   `-ParmVarDecl 0x7f9f139032b0 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7f9f13902150 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7f9f139022a0 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7f9f139034d8 <col:5>
| | | | | |-CXXConstructorDecl 0x7f9f13902e00 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7f9f13902e00
| | | | | | `-ParmVarDecl 0x7f9f13902f30 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7f9f13903348 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7f9f13903348
| | | | |   `-ParmVarDecl 0x7f9f13903470 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7f9f13902220 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7f9f139034f0 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7f9f139035f0 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7f9f13903578 <col:5, col:9> 'long double' lvalue .__ld 0x7f9f13901eb0
| | | | | `-DeclRefExpr 0x7f9f13903550 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7f9f13902220 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7f9f139035d8 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7f9f139035b0 <col:16> 'long double' lvalue ParmVar 0x7f9f13901bf8 '__x' 'long double'
| | | `-ReturnStmt 0x7f9f13903948 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7f9f13903920 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7f9f13903900 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7f9f13903890 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7f9f13903878 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7f9f13903860 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7f9f13903808 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7f9f13902090
| | |         |     `-MemberExpr 0x7f9f139037d0 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7f9f13902150
| | |         |       `-DeclRefExpr 0x7f9f139037a8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7f9f13902220 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7f9f13903840 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7f9f13901d28 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13903a38 prev 0x7f9f138f9c00 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7f9f139039a8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7f9f13903dc0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7f9f13903da8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7f9f13903d90 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f13903d68 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7f9f13903d50 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7f9f13903c10 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7f9f13903bf8 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7f9f13903ba0 <col:12> 'int (float)' lvalue Function 0x7f9f138fa590 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7f9f13903c40 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7f9f13903b78 <col:31> 'float' lvalue ParmVar 0x7f9f139039a8 '__x' 'float'
| | |       `-BinaryOperator 0x7f9f13903d28 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7f9f13903cc0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7f9f13903ca8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7f9f13903c58 <col:39> '<builtin fn type>' Function 0x7f9f138fa7e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7f9f13903cf0 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7f9f13903c80 <col:55> 'float' lvalue ParmVar 0x7f9f139039a8 '__x' 'float'
| | |         `-FloatingLiteral 0x7f9f13903d08 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7f9f13903ad8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13904290 prev 0x7f9f138f9d90 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7f9f13904200 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7f9f13904610 <col:59, line:262:1>
| | | `-ReturnStmt 0x7f9f139045f8 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7f9f139045e0 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f139045b8 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7f9f139045a0 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7f9f13904460 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7f9f13904448 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7f9f139043f8 <col:12> 'int (double)' lvalue Function 0x7f9f138fae00 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7f9f13904490 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7f9f139043d0 <col:31> 'double' lvalue ParmVar 0x7f9f13904200 '__x' 'double'
| | |       `-BinaryOperator 0x7f9f13904578 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7f9f13904510 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7f9f139044f8 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7f9f139044a8 <col:39> '<builtin fn type>' Function 0x7f9f138fb058 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7f9f13904540 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7f9f139044d0 <col:54> 'double' lvalue ParmVar 0x7f9f13904200 '__x' 'double'
| | |         `-FloatingLiteral 0x7f9f13904558 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7f9f13904330 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f139046d8 prev 0x7f9f138f9f20 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7f9f13904648 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7f9f13904a70 <col:64, line:265:1>
| | | `-ReturnStmt 0x7f9f13904a58 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7f9f13904a40 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7f9f13904a18 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7f9f13904a00 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7f9f139048b0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7f9f13904898 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7f9f13904840 <col:12> 'int (long double)' lvalue Function 0x7f9f138fbb00 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7f9f139048e0 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7f9f13904818 <col:31> 'long double' lvalue ParmVar 0x7f9f13904648 '__x' 'long double'
| | |       `-BinaryOperator 0x7f9f139049d8 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7f9f13904960 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7f9f13904948 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7f9f139048f8 <col:39> '<builtin fn type>' Function 0x7f9f138fbd58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7f9f13904990 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7f9f13904920 <col:55> 'long double' lvalue ParmVar 0x7f9f13904648 '__x' 'long double'
| | |         `-FloatingLiteral 0x7f9f139049a8 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7f9f13904778 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13904b38 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13904aa8 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f13904bd8 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13904c20 <col:14> Implicit
| |-FunctionDecl 0x7f9f13904cd8 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13904c48 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f13904d78 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13904dc0 <col:15> Implicit
| |-FunctionDecl 0x7f9f13904e78 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13904de8 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f13904f18 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13904f60 <col:20> Implicit
| |-FunctionDecl 0x7f9f13905018 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13904f88 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f139050b8 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13905100 <col:14> Implicit
| |-FunctionDecl 0x7f9f13905200 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13905128 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f139052a0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f139052e8 <col:15> Implicit
| |-FunctionDecl 0x7f9f139053a0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13905310 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f13905440 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13905488 <col:20> Implicit
| |-FunctionDecl 0x7f9f13905540 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f139054b0 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f139055e0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13905628 <col:14> Implicit
| |-FunctionDecl 0x7f9f139056e0 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13905650 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f13905780 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f139057c8 <col:15> Implicit
| |-FunctionDecl 0x7f9f13905880 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f139057f0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f13905920 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13905968 <col:20> Implicit
| |-FunctionDecl 0x7f9f13905ae8 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f13905990 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7f9f13905a08 <col:28> col:33 'float'
| | |-ConstAttr 0x7f9f13905bd0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13905c18 <col:14> Implicit
| |-FunctionDecl 0x7f9f13905d98 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f13905c40 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7f9f13905cb8 <col:29> col:35 'double'
| | |-ConstAttr 0x7f9f13905e80 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13905ec8 <col:15> Implicit
| |-FunctionDecl 0x7f9f13906048 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f13905ef0 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7f9f13905f68 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7f9f13906130 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13906178 <col:20> Implicit
| |-FunctionDecl 0x7f9f13906a30 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f139061a0 <col:19> col:24 'float'
| | |-ConstAttr 0x7f9f13906ad0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13906b18 <col:14> Implicit
| |-FunctionDecl 0x7f9f13906bd0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13906b40 <col:19> col:25 'double'
| | |-ConstAttr 0x7f9f13906c70 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13906cb8 <col:15> Implicit
| |-FunctionDecl 0x7f9f13906d70 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13906ce0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7f9f13906e10 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13906e58 <col:20> Implicit
| |-FunctionDecl 0x7f9f13906f10 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13906e80 <col:19> col:24 'float'
| | |-ConstAttr 0x7f9f13906fb0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13906ff8 <col:14> Implicit
| |-FunctionDecl 0x7f9f139070b0 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13907020 <col:19> col:25 'double'
| | |-ConstAttr 0x7f9f13907150 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13907198 <col:15> Implicit
| |-FunctionDecl 0x7f9f13907250 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f139071c0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7f9f139072f0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13907338 <col:20> Implicit
| |-FunctionDecl 0x7f9f139073f0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13907360 <col:19> col:24 'float'
| | |-ConstAttr 0x7f9f13907490 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139074d8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13907590 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13907500 <col:19> col:25 'double'
| | |-ConstAttr 0x7f9f13907630 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13907678 <col:15> Implicit
| |-FunctionDecl 0x7f9f13907730 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f139076a0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7f9f139077d0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13907818 <col:20> Implicit
| |-FunctionDecl 0x7f9f139078d0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13907840 <col:21> col:26 'float'
| | |-ConstAttr 0x7f9f13907970 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139079b8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13908290 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13908200 <col:21> col:27 'double'
| | |-ConstAttr 0x7f9f13908330 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13908378 <col:15> Implicit
| |-FunctionDecl 0x7f9f13908430 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f139083a0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7f9f139084d0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13908518 <col:20> Implicit
| |-FunctionDecl 0x7f9f139085d0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13908540 <col:21> col:26 'float'
| | |-ConstAttr 0x7f9f13908670 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139086b8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13908770 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7f9f139086e0 <col:21> col:27 'double'
| | |-ConstAttr 0x7f9f13908810 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13908858 <col:15> Implicit
| |-FunctionDecl 0x7f9f13908910 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13908880 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7f9f139089b0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f139089f8 <col:20> Implicit
| |-FunctionDecl 0x7f9f13908ab0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13908a20 <col:21> col:26 'float'
| | |-ConstAttr 0x7f9f13908b50 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13908b98 <col:14> Implicit
| |-FunctionDecl 0x7f9f13908c50 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13908bc0 <col:21> col:27 'double'
| | |-ConstAttr 0x7f9f13908cf0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13908d38 <col:15> Implicit
| |-FunctionDecl 0x7f9f13908df0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13908d60 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7f9f13908e90 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13908ed8 <col:20> Implicit
| |-FunctionDecl 0x7f9f13908f90 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13908f00 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f13909030 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13909078 <col:14> Implicit
| |-FunctionDecl 0x7f9f13909130 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7f9f139090a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f139091d0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13909a38 <col:15> Implicit
| |-FunctionDecl 0x7f9f13909af0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13909a60 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f13909b90 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13909bd8 <col:20> Implicit
| |-FunctionDecl 0x7f9f13909c90 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13909c00 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f13909d30 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13909d78 <col:14> Implicit
| |-FunctionDecl 0x7f9f13909e30 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13909da0 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f13909ed0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13909f18 <col:15> Implicit
| |-FunctionDecl 0x7f9f13909fd0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13909f40 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f1390a070 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390a0b8 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390a170 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390a0e0 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f1390a210 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390a258 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390a310 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390a280 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f1390a3b0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390a3f8 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390a4b0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390a420 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f1390a550 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390a598 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390a650 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390a5c0 <col:19> col:24 'float'
| | |-ConstAttr 0x7f9f1390a6f0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390a738 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390a7f0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390a760 <col:19> col:25 'double'
| | |-ConstAttr 0x7f9f1390a890 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390a8d8 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390aa00 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390a900 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7f9f1390aaa0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390aae8 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390aba0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390ab10 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f1390ac40 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390ac88 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390ad40 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390acb0 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f1390ade0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390ae28 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390aee0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390ae50 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f1390af80 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390afc8 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390b080 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390aff0 <col:21> col:26 'float'
| | |-ConstAttr 0x7f9f1390b120 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390b168 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390b220 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390b190 <col:21> col:27 'double'
| | |-ConstAttr 0x7f9f1390b2c0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390b308 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390b3c0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390b330 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7f9f1390b460 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390b4a8 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390b560 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390b4d0 <col:19> col:24 'float'
| | |-ConstAttr 0x7f9f1390b600 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390b648 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390b700 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390b670 <col:19> col:25 'double'
| | |-ConstAttr 0x7f9f1390b7a0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390b7e8 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390b8a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390b810 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7f9f1390b940 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390b988 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390ba90 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390ba00 <col:21> col:26 'float'
| | |-ConstAttr 0x7f9f1390bb30 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390bb78 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390bc30 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390bba0 <col:21> col:27 'double'
| | |-ConstAttr 0x7f9f1390bcd0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390bd18 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390bdd0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390bd40 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7f9f1390be70 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390beb8 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390bf70 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390bee0 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f1390c010 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390c058 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390c110 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390c080 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f1390c1b0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390c1f8 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390c2b0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390c220 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f1390c350 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390c398 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390c450 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390c3c0 <col:21> col:26 'float'
| | |-ConstAttr 0x7f9f1390c4f0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390c538 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390c5f0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390c560 <col:21> col:27 'double'
| | |-ConstAttr 0x7f9f1390c690 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390c6d8 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390c790 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390c700 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7f9f1390c830 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390c878 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390c930 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f1390c8a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f1390c9d0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390da38 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390daf0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7f9f1390da60 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f1390db90 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390dbd8 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390dc90 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f1390dc00 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f1390dd30 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390dd78 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390df18 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7f9f1390dda0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7f9f1390de40 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7f9f1390e000 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390e1d8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7f9f1390e060 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7f9f1390e100 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7f9f1390e2c0 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390e498 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7f9f1390e320 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7f9f1390e3c0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7f9f1390e580 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390e738 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7f9f1390e5e0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7f9f1390e658 <col:28> col:31 'int'
| | |-ConstAttr 0x7f9f1390e820 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390e868 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390fa00 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7f9f1390e890 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7f9f1390e908 <col:29> col:32 'int'
| | |-ConstAttr 0x7f9f1390faf0 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390fb38 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390fcb8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7f9f1390fb60 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7f9f1390fbd8 <col:40> col:43 'int'
| | |-ConstAttr 0x7f9f1390fda0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390fde8 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390ff88 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7f9f1390fe10 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7f9f1390feb0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7f9f13910070 <col:14> Implicit
| |-FunctionDecl 0x7f9f13910228 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7f9f139100d0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7f9f13910148 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7f9f13910310 <col:15> Implicit
| |-FunctionDecl 0x7f9f139104c8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7f9f13910370 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7f9f139103e8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7f9f139105b0 <col:20> Implicit
| |-FunctionDecl 0x7f9f139106a0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7f9f13910610 <col:19> col:24 'float'
| | |-ConstAttr 0x7f9f13910778 <col:12> Implicit
| | `-NoThrowAttr 0x7f9f139107c0 <col:12> Implicit
| |-FunctionDecl 0x7f9f13910878 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7f9f139107e8 <col:18> col:24 'double'
| | |-ConstAttr 0x7f9f13910958 <col:12> Implicit
| | `-NoThrowAttr 0x7f9f139109a0 <col:12> Implicit
| |-FunctionDecl 0x7f9f13911a90 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7f9f13911a00 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7f9f13911b68 <col:12> Implicit
| | `-NoThrowAttr 0x7f9f13911bb0 <col:12> Implicit
| |-FunctionDecl 0x7f9f13911ce8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7f9f13911bd8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7f9f13911c50 <col:29> col:32 'int'
| | |-ConstAttr 0x7f9f13911d90 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13911dd8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13911f10 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7f9f13911e00 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7f9f13911e78 <col:30> col:33 'int'
| | |-ConstAttr 0x7f9f13911fb8 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13912000 <col:15> Implicit
| |-FunctionDecl 0x7f9f13912138 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7f9f13912028 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7f9f139120a0 <col:41> col:44 'int'
| | |-ConstAttr 0x7f9f139121e0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13912228 <col:20> Implicit
| |-FunctionDecl 0x7f9f139123a8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7f9f13912250 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7f9f139122c8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7f9f13912490 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139124d8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13912658 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7f9f13912500 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7f9f13912578 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7f9f13912740 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13912788 <col:15> Implicit
| |-FunctionDecl 0x7f9f13912908 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7f9f139127b0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7f9f13912828 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7f9f139129f0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13912a38 <col:20> Implicit
| |-FunctionDecl 0x7f9f13912af0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13912a60 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7f9f13912b90 <col:14> Implicit
| | `-ConstAttr 0x7f9f13912bd8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13912c90 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13912c00 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7f9f13912d30 <col:15> Implicit
| | `-ConstAttr 0x7f9f13912d78 <col:15> Implicit
| |-FunctionDecl 0x7f9f13912e30 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13912da0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7f9f13912ed0 <col:20> Implicit
| | `-ConstAttr 0x7f9f13912f18 <col:20> Implicit
| |-FunctionDecl 0x7f9f13912fd0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13912f40 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f13913070 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139130b8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13913170 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7f9f139130e0 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f13913210 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13913258 <col:15> Implicit
| |-FunctionDecl 0x7f9f13913310 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13913280 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f139133b0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f139133f8 <col:20> Implicit
| |-FunctionDecl 0x7f9f13913530 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f13913420 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7f9f13913498 <col:28> col:33 'float'
| | |-ConstAttr 0x7f9f139135d8 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13913620 <col:14> Implicit
| |-FunctionDecl 0x7f9f13913758 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f13913648 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7f9f139136c0 <col:29> col:35 'double'
| | |-ConstAttr 0x7f9f13913800 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13913848 <col:15> Implicit
| |-FunctionDecl 0x7f9f13913a00 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f13913870 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7f9f139138e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7f9f13913aa8 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13913af0 <col:20> Implicit
| |-FunctionDecl 0x7f9f13913c28 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f13913b18 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7f9f13913b90 <col:26> col:31 'float'
| | |-ConstAttr 0x7f9f13913cd0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13913d18 <col:14> Implicit
| |-FunctionDecl 0x7f9f13913e50 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f13913d40 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7f9f13913db8 <col:27> col:33 'double'
| | |-ConstAttr 0x7f9f13913ef8 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13913f40 <col:15> Implicit
| |-FunctionDecl 0x7f9f13914078 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f13913f68 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7f9f13913fe0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7f9f13914120 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13914168 <col:20> Implicit
| |-FunctionDecl 0x7f9f13914220 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13914190 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f139142c0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13914308 <col:14> Implicit
| |-FunctionDecl 0x7f9f139143c0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13914330 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f13914460 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f139144a8 <col:15> Implicit
| |-FunctionDecl 0x7f9f13914560 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f139144d0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f13914600 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13914648 <col:20> Implicit
| |-FunctionDecl 0x7f9f13914700 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13914670 <col:19> col:24 'float'
| | |-ConstAttr 0x7f9f139147a0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139147e8 <col:14> Implicit
| |-FunctionDecl 0x7f9f139148a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13914810 <col:19> col:25 'double'
| | |-ConstAttr 0x7f9f13914940 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13914988 <col:15> Implicit
| |-FunctionDecl 0x7f9f13914a90 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13914a00 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7f9f13914b30 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13914b78 <col:20> Implicit
| |-FunctionDecl 0x7f9f13914c30 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13914ba0 <col:20> col:25 'float'
| | |-ConstAttr 0x7f9f13914cd0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13914d18 <col:14> Implicit
| |-FunctionDecl 0x7f9f13914dd0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13914d40 <col:20> col:26 'double'
| | |-ConstAttr 0x7f9f13914e70 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13914eb8 <col:15> Implicit
| |-FunctionDecl 0x7f9f13914f70 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13914ee0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7f9f13915010 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13915058 <col:20> Implicit
| |-FunctionDecl 0x7f9f13915110 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13915080 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7f9f139151b0 <col:14> Implicit
| |-FunctionDecl 0x7f9f139152a0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13915210 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7f9f13915340 <col:15> Implicit
| |-FunctionDecl 0x7f9f13915430 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f139153a0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7f9f139154d0 <col:20> Implicit
| |-FunctionDecl 0x7f9f139155c0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13915530 <col:22> col:27 'float'
| | |-ConstAttr 0x7f9f13915660 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139156a8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13915760 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7f9f139156d0 <col:22> col:28 'double'
| | |-ConstAttr 0x7f9f13915800 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13915848 <col:15> Implicit
| |-FunctionDecl 0x7f9f13915900 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13915870 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7f9f139159a0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f139159e8 <col:20> Implicit
| |-FunctionDecl 0x7f9f13915aa8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13915a18 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7f9f13915b48 <col:14> Implicit
| | `-ConstAttr 0x7f9f13915b90 <col:14> Implicit
| |-FunctionDecl 0x7f9f13915c48 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13915bb8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7f9f13915ce8 <col:15> Implicit
| | `-ConstAttr 0x7f9f13915d30 <col:15> Implicit
| |-FunctionDecl 0x7f9f13915de8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13915d58 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7f9f13915e88 <col:20> Implicit
| | `-ConstAttr 0x7f9f13915ed0 <col:20> Implicit
| |-FunctionDecl 0x7f9f13915f88 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13915ef8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7f9f13916028 <col:14> Implicit
| | `-ConstAttr 0x7f9f13916070 <col:14> Implicit
| |-FunctionDecl 0x7f9f13916128 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13916098 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7f9f139161c8 <col:15> Implicit
| | `-ConstAttr 0x7f9f13916210 <col:15> Implicit
| |-FunctionDecl 0x7f9f139162c8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13916238 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7f9f13916368 <col:20> Implicit
| | `-ConstAttr 0x7f9f139163b0 <col:20> Implicit
| |-FunctionDecl 0x7f9f13916468 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f139163d8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7f9f13916508 <col:14> Implicit
| | `-ConstAttr 0x7f9f13916550 <col:14> Implicit
| |-FunctionDecl 0x7f9f13916608 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13916578 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7f9f139166a8 <col:15> Implicit
| | `-ConstAttr 0x7f9f139166f0 <col:15> Implicit
| |-FunctionDecl 0x7f9f139167a8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13916718 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7f9f13916848 <col:20> Implicit
| | `-ConstAttr 0x7f9f13916890 <col:20> Implicit
| |-FunctionDecl 0x7f9f13916948 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f139168b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7f9f139169e8 <col:14> Implicit
| | `-ConstAttr 0x7f9f13916a38 <col:14> Implicit
| |-FunctionDecl 0x7f9f13916af0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13916a60 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7f9f13916b90 <col:15> Implicit
| | `-ConstAttr 0x7f9f13916bd8 <col:15> Implicit
| |-FunctionDecl 0x7f9f13916c90 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13916c00 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7f9f13916d30 <col:20> Implicit
| | `-ConstAttr 0x7f9f13916d78 <col:20> Implicit
| |-FunctionDecl 0x7f9f13916e68 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7f9f13916da0 <col:24> col:29 'float'
| | |-ConstAttr 0x7f9f13916f48 <col:17> Implicit
| | `-NoThrowAttr 0x7f9f13916f90 <col:17> Implicit
| |-FunctionDecl 0x7f9f13917088 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7f9f13916fb8 <col:23> col:29 'double'
| | |-ConstAttr 0x7f9f13917168 <col:17> Implicit
| | `-NoThrowAttr 0x7f9f139171b0 <col:17> Implicit
| |-FunctionDecl 0x7f9f139172a8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7f9f139171d8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7f9f13917388 <col:17> Implicit
| | `-NoThrowAttr 0x7f9f139173d0 <col:17> Implicit
| |-FunctionDecl 0x7f9f13917488 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f139173f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7f9f13917528 <col:14> Implicit
| | `-ConstAttr 0x7f9f13917570 <col:14> Implicit
| |-FunctionDecl 0x7f9f13917628 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13917598 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7f9f139176c8 <col:15> Implicit
| | `-ConstAttr 0x7f9f13917710 <col:15> Implicit
| |-FunctionDecl 0x7f9f139177c8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13917738 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7f9f13917868 <col:20> Implicit
| | `-ConstAttr 0x7f9f139178b0 <col:20> Implicit
| |-FunctionDecl 0x7f9f13917968 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7f9f139178d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7f9f13917a08 <col:17> Implicit
| | `-NoThrowAttr 0x7f9f13917a50 <col:17> Implicit
| |-FunctionDecl 0x7f9f13917b08 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7f9f13917a78 <col:24> col:30 'double'
| | |-ConstAttr 0x7f9f13917ba8 <col:17> Implicit
| | `-NoThrowAttr 0x7f9f13917bf0 <col:17> Implicit
| |-FunctionDecl 0x7f9f13917ca8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7f9f13917c18 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7f9f13917d48 <col:17> Implicit
| | `-NoThrowAttr 0x7f9f13917d90 <col:17> Implicit
| |-FunctionDecl 0x7f9f13917e88 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7f9f13917db8 <col:30> col:35 'float'
| | |-ConstAttr 0x7f9f13917f68 <col:22> Implicit
| | `-NoThrowAttr 0x7f9f13917fb0 <col:22> Implicit
| |-FunctionDecl 0x7f9f139180a8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7f9f13917fd8 <col:29> col:35 'double'
| | |-ConstAttr 0x7f9f13918188 <col:22> Implicit
| | `-NoThrowAttr 0x7f9f139181d0 <col:22> Implicit
| |-FunctionDecl 0x7f9f139182c8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7f9f139181f8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7f9f139183a8 <col:22> Implicit
| | `-NoThrowAttr 0x7f9f139183f0 <col:22> Implicit
| |-FunctionDecl 0x7f9f139184a8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7f9f13918418 <col:31> col:36 'float'
| | |-ConstAttr 0x7f9f13918548 <col:22> Implicit
| | `-NoThrowAttr 0x7f9f13918590 <col:22> Implicit
| |-FunctionDecl 0x7f9f13918648 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7f9f139185b8 <col:30> col:36 'double'
| | |-ConstAttr 0x7f9f139186e8 <col:22> Implicit
| | `-NoThrowAttr 0x7f9f13918730 <col:22> Implicit
| |-FunctionDecl 0x7f9f139187e8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7f9f13918758 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7f9f13918888 <col:22> Implicit
| | `-NoThrowAttr 0x7f9f139188d0 <col:22> Implicit
| |-FunctionDecl 0x7f9f13918a00 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7f9f139188f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7f9f13918aa0 <col:14> Implicit
| | `-ConstAttr 0x7f9f13918ae8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13918ba0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13918b10 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7f9f13918c40 <col:15> Implicit
| | `-ConstAttr 0x7f9f13918c88 <col:15> Implicit
| |-FunctionDecl 0x7f9f13918d40 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7f9f13918cb0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7f9f13918de0 <col:20> Implicit
| | `-ConstAttr 0x7f9f13918e28 <col:20> Implicit
| |-FunctionDecl 0x7f9f13918f60 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f13918e50 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7f9f13918ec8 <col:27> col:32 'float'
| | |-ConstAttr 0x7f9f13919008 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f13919050 <col:14> Implicit
| |-FunctionDecl 0x7f9f13919188 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f13919078 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7f9f139190f0 <col:28> col:34 'double'
| | |-ConstAttr 0x7f9f13919230 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13919278 <col:15> Implicit
| |-FunctionDecl 0x7f9f139193b0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f139192a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7f9f13919318 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7f9f13919458 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f139194a0 <col:20> Implicit
| |-FunctionDecl 0x7f9f139195d8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f139194c8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7f9f13919540 <col:32> col:37 'float'
| | |-ConstAttr 0x7f9f13919680 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139196c8 <col:14> Implicit
| |-FunctionDecl 0x7f9f13919800 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f139196f0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7f9f13919768 <col:33> col:39 'double'
| | |-ConstAttr 0x7f9f139198a8 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f139198f0 <col:15> Implicit
| |-FunctionDecl 0x7f9f13919a38 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f13919918 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7f9f13919990 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7f9f13919ae0 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13919b28 <col:20> Implicit
| |-FunctionDecl 0x7f9f13919d28 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7f9f13919b50 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7f9f13919bc8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7f9f13919c40 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7f9f13919fc8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7f9f13919df0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7f9f13919e68 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7f9f13919ee0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7f9f1391a268 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7f9f1391a090 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7f9f1391a108 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7f9f1391a180 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7f9f1391a440 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f1391a330 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7f9f1391a3a8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7f9f1391a4e8 <col:14> Implicit
| | `-ConstAttr 0x7f9f1391a530 <col:14> Implicit
| |-FunctionDecl 0x7f9f1391a668 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f1391a558 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7f9f1391a5d0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7f9f1391a710 <col:15> Implicit
| | `-ConstAttr 0x7f9f1391a758 <col:15> Implicit
| |-FunctionDecl 0x7f9f1391a890 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f1391a780 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7f9f1391a7f8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7f9f1391a938 <col:20> Implicit
| | `-ConstAttr 0x7f9f1391a980 <col:20> Implicit
| |-FunctionDecl 0x7f9f1391aac8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7f9f1391aa00 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7f9f1391aba8 <col:14> Implicit
| | `-ConstAttr 0x7f9f1391abf0 <col:14> Implicit
| |-FunctionDecl 0x7f9f1391ace8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7f9f1391ac18 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7f9f1391adc8 <col:15> Implicit
| | `-ConstAttr 0x7f9f1391ae10 <col:15> Implicit
| |-FunctionDecl 0x7f9f1391af08 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7f9f1391ae38 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7f9f1391afe8 <col:20> Implicit
| | `-ConstAttr 0x7f9f1391b030 <col:20> Implicit
| |-FunctionDecl 0x7f9f1391b168 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f1391b058 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7f9f1391b0d0 <col:32> col:37 'float'
| | |-ConstAttr 0x7f9f1391b210 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1391b258 <col:14> Implicit
| |-FunctionDecl 0x7f9f1391b390 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f1391b280 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7f9f1391b2f8 <col:33> col:39 'double'
| | |-ConstAttr 0x7f9f1391b438 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1391b480 <col:15> Implicit
| |-FunctionDecl 0x7f9f1391b5b8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f1391b4a8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7f9f1391b520 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7f9f1391b660 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1391b6a8 <col:20> Implicit
| |-FunctionDecl 0x7f9f1391b828 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7f9f1391b6d0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7f9f1391b748 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7f9f1391b910 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1391b958 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390cad8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7f9f1391b980 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7f9f1390ca00 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7f9f1390cbc0 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390cc08 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390cd40 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f1390cc30 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7f9f1390cca8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7f9f1390cde8 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390ce30 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390cf68 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f1390ce58 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7f9f1390ced0 <col:27> col:32 'float'
| | |-ConstAttr 0x7f9f1390d010 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f1390d058 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390d190 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f1390d080 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7f9f1390d0f8 <col:28> col:34 'double'
| | |-ConstAttr 0x7f9f1390d238 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f1390d280 <col:15> Implicit
| |-FunctionDecl 0x7f9f1390d3b8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f1390d2a8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7f9f1390d320 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7f9f1390d460 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f1390d4a8 <col:20> Implicit
| |-FunctionDecl 0x7f9f1390d5e0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f1390d4d0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7f9f1390d548 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7f9f1390d688 <col:14> Implicit
| | `-ConstAttr 0x7f9f1390d6d0 <col:14> Implicit
| |-FunctionDecl 0x7f9f1390d808 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f1390d6f8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7f9f1390d770 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7f9f1390d8b0 <col:15> Implicit
| | `-ConstAttr 0x7f9f1390d8f8 <col:15> Implicit
| |-FunctionDecl 0x7f9f1391fa38 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f1390d920 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7f9f1390d998 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7f9f1391fae0 <col:20> Implicit
| | `-ConstAttr 0x7f9f1391fb28 <col:20> Implicit
| |-FunctionDecl 0x7f9f1391fc60 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7f9f1391fb50 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7f9f1391fbc8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7f9f1391fd08 <col:14> Implicit
| | `-ConstAttr 0x7f9f1391fd50 <col:14> Implicit
| |-FunctionDecl 0x7f9f1391fe88 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f1391fd78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7f9f1391fdf0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7f9f1391ff30 <col:15> Implicit
| | `-ConstAttr 0x7f9f1391ff78 <col:15> Implicit
| |-FunctionDecl 0x7f9f139200b0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7f9f1391ffa0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7f9f13920018 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7f9f13920158 <col:20> Implicit
| | `-ConstAttr 0x7f9f139201a0 <col:20> Implicit
| |-FunctionDecl 0x7f9f139203a8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7f9f139201c8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7f9f13920240 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7f9f139202b8 <col:33> col:38 'float'
| | |-ConstAttr 0x7f9f139204a8 <col:14> Implicit
| | `-NoThrowAttr 0x7f9f139204f0 <col:14> Implicit
| |-FunctionDecl 0x7f9f139206f8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7f9f13920518 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7f9f13920590 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7f9f13920608 <col:35> col:41 'double'
| | |-ConstAttr 0x7f9f139207f8 <col:15> Implicit
| | `-NoThrowAttr 0x7f9f13920840 <col:15> Implicit
| |-FunctionDecl 0x7f9f13910a88 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7f9f13920868 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7f9f139208e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7f9f13920958 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7f9f13910b88 <col:20> Implicit
| | `-NoThrowAttr 0x7f9f13910bd0 <col:20> Implicit
| |-FunctionDecl 0x7f9f13910c88 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7f9f13910d20 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7f9f13910e68 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7f9f13910f00 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7f9f13911048 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7f9f139110e0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7f9f13911228 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7f9f139112c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7f9f13911418 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13911378 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7f9f139114b8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7f9f13911558 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7f9f13911568 <col:14> Implicit
| |-FunctionDecl 0x7f9f13911630 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13911590 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7f9f139116d0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7f9f13911770 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7f9f13911780 <col:15> Implicit
| |-FunctionDecl 0x7f9f13923a00 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7f9f139117a8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7f9f13911820 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7f9f13911898 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7f9f13923ab0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13923ce0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7f9f13923b10 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7f9f13923b88 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7f9f13923c00 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7f9f13923d90 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13923e90 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13923df0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7f9f13923f30 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7f9f13923fd0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7f9f13923fe0 <col:14> Implicit
| |-FunctionDecl 0x7f9f139240a8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13924008 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7f9f13924148 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7f9f139241e8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7f9f139241f8 <col:15> Implicit
| |-FunctionDecl 0x7f9f139242c0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13924220 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7f9f13924360 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7f9f13924400 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7f9f13924410 <col:14> Implicit
| |-FunctionDecl 0x7f9f139244d8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13924438 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7f9f13924578 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7f9f13924618 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7f9f13924628 <col:15> Implicit
| |-FunctionDecl 0x7f9f139246f0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7f9f13924650 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7f9f13924790 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7f9f13924830 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7f9f13924840 <col:14> Implicit
| |-FunctionDecl 0x7f9f13924908 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13924868 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7f9f13924a00 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7f9f13924aa0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7f9f13924ab0 <col:15> Implicit
| |-FunctionDecl 0x7f9f13924c60 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7f9f13924ad8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7f9f13924b50 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7f9f13924bc8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7f9f13924d10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f13924ef8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7f9f13924d70 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7f9f13924de8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7f9f13924e60 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7f9f13924fa8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7f9f13924ff0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7f9f13925118 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7f9f139251c8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7f9f13925228 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7f9f13932268 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7f9f13932368 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7f9f13932368
| | |-CXXConstructorDecl 0x7f9f13932478 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7f9f13932478
| | | `-ParmVarDecl 0x7f9f139325a0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7f9f13932638 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7f9f13932760 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7f9f139251c8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7f9f139328b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7f9f13932880 <col:8> 'float' xvalue .__sinval 0x7f9f139251c8
| |   |     `-CXXStaticCastExpr 0x7f9f13932850 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7f9f13932818 <col:8> 'struct __float2' lvalue ParmVar 0x7f9f13932760 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7f9f13925228 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7f9f13932998 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7f9f13932960 <col:8> 'float' xvalue .__cosval 0x7f9f13925228
| |   |     `-CXXStaticCastExpr 0x7f9f13932930 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7f9f139328f8 <col:8> 'struct __float2' lvalue ParmVar 0x7f9f13932760 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7f9f139329e8 <col:8>
| |-CXXRecordDecl 0x7f9f13925290 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7f9f139253b8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7f9f13925468 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7f9f139254c8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7f9f138d2e88 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7f9f138d2f88 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7f9f138d2f88
| | |-CXXConstructorDecl 0x7f9f138d3098 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7f9f138d3098
| | | `-ParmVarDecl 0x7f9f138d31c0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7f9f138d3258 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7f9f138d3380 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7f9f13925468 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7f9f138d34d8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7f9f138d34a0 <col:8> 'double' xvalue .__sinval 0x7f9f13925468
| |   |     `-CXXStaticCastExpr 0x7f9f138d3470 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7f9f138d3438 <col:8> 'struct __double2' lvalue ParmVar 0x7f9f138d3380 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7f9f139254c8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7f9f138d35b8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7f9f138d3580 <col:8> 'double' xvalue .__cosval 0x7f9f139254c8
| |   |     `-CXXStaticCastExpr 0x7f9f138d3550 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7f9f138d3518 <col:8> 'struct __double2' lvalue ParmVar 0x7f9f138d3380 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7f9f138d3608 <col:8>
| |-FunctionDecl 0x7f9f13925690 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7f9f13925548 <col:40> col:45 'float'
| |-FunctionDecl 0x7f9f13925890 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7f9f13925748 <col:40> col:46 'double'
| |-FunctionDecl 0x7f9f13931c00 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7f9f13925948 <col:42> col:47 'float'
| |-FunctionDecl 0x7f9f13931d50 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7f9f13931cb8 <col:42> col:48 'double'
| |-FunctionDecl 0x7f9f13931f90 prev 0x7f9f13923a00 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7f9f13931e08 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7f9f13931e80 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7f9f13931ef8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7f9f138d29e0 <col:80, line:664:1>
| | | |-DeclStmt 0x7f9f13932a50 <line:662:5, col:57>
| | | | `-VarDecl 0x7f9f139320a8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7f9f13932a38 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7f9f13932a00 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7f9f139327c8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7f9f13932220 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7f9f13932208 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7f9f13932188 <col:37> 'struct __float2 (float)' lvalue Function 0x7f9f13925690 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7f9f13932250 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7f9f13932160 <col:53> 'float' lvalue ParmVar 0x7f9f13931e08 '__x' 'float'
| | | |-BinaryOperator 0x7f9f13932b40 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7f9f13932aa8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7f9f13932a90 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7f9f13932a68 <col:6> 'float *' lvalue ParmVar 0x7f9f13931e80 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7f9f13932b28 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7f9f13932af0 <col:15, col:23> 'const float' lvalue .__sinval 0x7f9f139251c8
| | | |     `-DeclRefExpr 0x7f9f13932ac8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7f9f139320a8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7f9f138d29b8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7f9f138d2920 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7f9f138d2908 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7f9f138d28e0 <col:34> 'float *' lvalue ParmVar 0x7f9f13931ef8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7f9f138d29a0 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7f9f138d2968 <col:43, col:51> 'const float' lvalue .__cosval 0x7f9f13925228
| | |       `-DeclRefExpr 0x7f9f138d2940 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7f9f139320a8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7f9f13932040 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138d2bb0 prev 0x7f9f13923ce0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7f9f138d2a28 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7f9f138d2aa0 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7f9f138d2b18 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7f9f138d39e0 <col:82, line:669:1>
| | | |-DeclStmt 0x7f9f138d3670 <line:667:5, col:57>
| | | | `-VarDecl 0x7f9f138d2cc8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7f9f138d3658 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7f9f138d3620 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7f9f138d33e8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7f9f138d2e40 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7f9f138d2e28 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7f9f138d2da8 <col:38> 'struct __double2 (double)' lvalue Function 0x7f9f13925890 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7f9f138d2e70 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7f9f138d2d80 <col:53> 'double' lvalue ParmVar 0x7f9f138d2a28 '__x' 'double'
| | | |-BinaryOperator 0x7f9f138d3760 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7f9f138d36c8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7f9f138d36b0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7f9f138d3688 <col:6> 'double *' lvalue ParmVar 0x7f9f138d2aa0 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7f9f138d3748 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7f9f138d3710 <col:15, col:23> 'const double' lvalue .__sinval 0x7f9f13925468
| | | |     `-DeclRefExpr 0x7f9f138d36e8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7f9f138d2cc8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7f9f138d39b8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7f9f138d3920 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7f9f138d3908 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7f9f138d38e0 <col:34> 'double *' lvalue ParmVar 0x7f9f138d2b18 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7f9f138d39a0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7f9f138d3968 <col:43, col:51> 'const double' lvalue .__cosval 0x7f9f139254c8
| | |       `-DeclRefExpr 0x7f9f138d3940 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7f9f138d2cc8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7f9f138d2c60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138d3bb0 prev 0x7f9f13924c60 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7f9f138d3a28 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7f9f138d3aa0 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7f9f138d3b18 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7f9f138d4108 <col:82, line:674:1>
| | | |-DeclStmt 0x7f9f138d3e98 <line:672:5, col:59>
| | | | `-VarDecl 0x7f9f138d3cc8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7f9f138d3e80 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7f9f138d3e48 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7f9f138d3e30 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7f9f138d3de8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7f9f138d3dd0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7f9f138d3da8 <col:37> 'struct __float2 (float)' lvalue Function 0x7f9f13931c00 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7f9f138d3e18 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7f9f138d3d80 <col:55> 'float' lvalue ParmVar 0x7f9f138d3a28 '__x' 'float'
| | | |-BinaryOperator 0x7f9f138d3f88 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7f9f138d3ef0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7f9f138d3ed8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7f9f138d3eb0 <col:6> 'float *' lvalue ParmVar 0x7f9f138d3aa0 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7f9f138d3f70 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7f9f138d3f38 <col:15, col:23> 'const float' lvalue .__sinval 0x7f9f139251c8
| | | |     `-DeclRefExpr 0x7f9f138d3f10 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7f9f138d3cc8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7f9f138d40e0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7f9f138d4048 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7f9f138d4030 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7f9f138d4008 <col:34> 'float *' lvalue ParmVar 0x7f9f138d3b18 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7f9f138d40c8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7f9f138d4090 <col:43, col:51> 'const float' lvalue .__cosval 0x7f9f13925228
| | |       `-DeclRefExpr 0x7f9f138d4068 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7f9f138d3cc8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7f9f138d3c60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138d42d8 prev 0x7f9f13924ef8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7f9f138d4150 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7f9f138d41c8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7f9f138d4240 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7f9f138d4840 <col:84, line:679:1>
| | | |-DeclStmt 0x7f9f138d45c0 <line:677:5, col:59>
| | | | `-VarDecl 0x7f9f138d43f0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7f9f138d45a8 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7f9f138d4570 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7f9f138d4558 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7f9f138d4510 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7f9f138d44f8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7f9f138d44d0 <col:38> 'struct __double2 (double)' lvalue Function 0x7f9f13931d50 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7f9f138d4540 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7f9f138d44a8 <col:55> 'double' lvalue ParmVar 0x7f9f138d4150 '__x' 'double'
| | | |-BinaryOperator 0x7f9f138d46b0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7f9f138d4618 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7f9f138d4600 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7f9f138d45d8 <col:6> 'double *' lvalue ParmVar 0x7f9f138d41c8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7f9f138d4698 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7f9f138d4660 <col:15, col:23> 'const double' lvalue .__sinval 0x7f9f13925468
| | | |     `-DeclRefExpr 0x7f9f138d4638 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7f9f138d43f0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7f9f138d4818 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7f9f138d4770 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7f9f138d4758 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7f9f138d4730 <col:34> 'double *' lvalue ParmVar 0x7f9f138d4240 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7f9f138d4800 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7f9f138d47b8 <col:43, col:51> 'const double' lvalue .__cosval 0x7f9f139254c8
| | |       `-DeclRefExpr 0x7f9f138d4790 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7f9f138d43f0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7f9f138d4388 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7f9f138d4928 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7f9f138d4888 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7f9f138d49c8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7f9f138d4b20 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7f9f138d4a80 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7f9f138d4bc0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7f9f138d4dd8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7f9f138d4c78 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7f9f138d4cf0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7f9f138d4e80 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7f9f138d4fd8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7f9f138d4f38 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7f9f138d5078 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7f9f138d51d0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7f9f138d5130 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7f9f138d5270 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7f9f138d5448 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7f9f138d5328 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7f9f138d53a0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7f9f138d54f0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7f9f138d56b8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f138d55a8 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7f9f138d5620 <col:29> col:35 'double'
| |-VarDecl 0x7f9f138d5778 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7f9f13933ca0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7f9f13933c00 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7f9f13933d40 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7f9f13933e98 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7f9f13933df8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7f9f13933f38 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7f9f13934110 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7f9f13933ff0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7f9f13934068 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7f9f139341b8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7f9f13934310 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7f9f13934270 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7f9f139343b0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7f9f13934508 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7f9f13934468 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7f9f139345a8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7f9f13934700 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7f9f13934660 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7f9f139347a0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7f9f138fa798 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7f9f138fa7e8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7f9f138fa880 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7f9f138fa8e8 <col:26> Implicit
|   `-ConstAttr 0x7f9f138fa930 <col:26> Implicit
|-LinkageSpecDecl 0x7f9f138faab0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7f9f138fab00 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7f9f138fab98 <col:50> Implicit
|   `-ConstAttr 0x7f9f138fabe0 <col:50> Implicit
|-LinkageSpecDecl 0x7f9f138fb008 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7f9f138fb058 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7f9f138fb0f0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7f9f138fb158 <col:26> Implicit
|   `-ConstAttr 0x7f9f138fb1a0 <col:26> Implicit
|-LinkageSpecDecl 0x7f9f138fb320 <col:49> col:49 implicit C
| `-FunctionDecl 0x7f9f138fb800 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7f9f138fb898 <col:49> Implicit
|   `-ConstAttr 0x7f9f138fb8e0 <col:49> Implicit
|-LinkageSpecDecl 0x7f9f138fbd08 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7f9f138fbd58 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7f9f138fbdf0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7f9f138fbe58 <col:26> Implicit
|   `-ConstAttr 0x7f9f138fbea0 <col:26> Implicit
|-LinkageSpecDecl 0x7f9f138fc020 <col:50> col:50 implicit C
| `-FunctionDecl 0x7f9f138fc070 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7f9f138fc108 <col:50> Implicit
|   `-ConstAttr 0x7f9f138fc150 <col:50> Implicit
|-LinkageSpecDecl 0x7f9f139348e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1412:1> line:307:8 C++
| |-TypedefDecl 0x7f9f13934950 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7f9f13830be0 'long'
| |-TypedefDecl 0x7f9f139349c0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7f9f13830c80 'unsigned long'
| |-TypedefDecl 0x7f9f13934a30 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7f9f13830d00 'long double'
| |-NamespaceDecl 0x7f9f13934a88 prev 0x7f9f13863258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7f9f13863258 'std'
| | `-TypedefDecl 0x7f9f13934b48 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7f9f13934b10 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7f9f13934af0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7f9f13831010 'nullptr_t'
| |-NamespaceDecl 0x7f9f14000800 prev 0x7f9f13934a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:410:37, line:411:38> line:410:47 std
| | |-original Namespace 0x7f9f13863258 'std'
| | `-NamespaceDecl 0x7f9f14000868 prev 0x7f9f138632c0 <col:52, line:411:36> <scratch space>:338:1 __1 inline
| |   |-original Namespace 0x7f9f138632c0 '__1'
| |   |-UsingDecl 0x7f9f140008f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7f9f14000940 <col:9> col:9 implicit Typedef 0x7f9f13934950 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7f9f14000990 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7f9f140009e0 <col:9> col:9 implicit Typedef 0x7f9f139349c0 'size_t'
| |   | `-TypedefType 0x7f9f1402a480 'size_t' sugar
| |   |   |-Typedef 0x7f9f139349c0 'size_t'
| |   |   `-BuiltinType 0x7f9f13830c80 'unsigned long'
| |   |-UsingDecl 0x7f9f14000a30 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7f9f14000a80 <col:9> col:9 implicit Typedef 0x7f9f13934a30 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7f9f14000ac8 prev 0x7f9f14000800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:410:37, line:411:38> line:410:47 std
| | |-original Namespace 0x7f9f13863258 'std'
| | `-NamespaceDecl 0x7f9f14000b30 prev 0x7f9f14000868 <col:52, line:411:36> <scratch space>:339:1 __1 inline
| |   |-original Namespace 0x7f9f138632c0 '__1'
| |   |-ClassTemplateDecl 0x7f9f14000e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:395:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7f9f14000b98 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7f9f14000c38 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7f9f14000da8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7f9f14001078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |-ClassTemplateDecl 0x7f9f14001208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:396:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7f9f140010c0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14001170 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7f9f14001418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |-ClassTemplateDecl 0x7f9f140015a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:397:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7f9f14001460 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14001510 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7f9f140017b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |-ClassTemplateDecl 0x7f9f14003118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, line:400:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7f9f14003000 <line:399:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7f9f14003080 <line:400:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7f9f14003390 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7f9f14003438 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7f9f13830b20 'void'
| |   |-ClassTemplateDecl 0x7f9f140035c8 <line:402:1, line:403:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7f9f140034b0 <line:402:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14003530 <line:403:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7f9f14003840 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7f9f140038e8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f140034f0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f140034b0 '_Tp'
| |   |-ClassTemplateDecl 0x7f9f14003b18 <line:405:1, line:406:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7f9f14003960 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f140039d8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7f9f14003a80 <line:406:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7f9f14003de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14003e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:406:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7f9f14004188 <line:408:1, line:409:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7f9f14003f30 <line:408:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7f9f14003f88 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7f9f14004000 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7f9f140040f0 <line:409:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7f9f14004490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f140044d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7f9f14004580 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7f9f14003fd0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7f9f14003f88 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f140048f8 <line:410:1, line:411:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7f9f140045f8 <line:410:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7f9f14004668 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7f9f14004a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14004c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:411:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7f9f14004cd8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7f9f140046b0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7f9f14004668 '_Then'
| |   |-TypeAliasTemplateDecl 0x7f9f14006530 <line:414:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7f9f14004d60 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7f9f14004db8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7f9f14004e28 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7f9f140064d0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7f9f14006460 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14006740 <line:417:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7f9f14006590 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7f9f140065e8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7f9f140066a8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7f9f14006a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14006a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:417:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14006d10 <line:418:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f14006b00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f14006e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14006ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:418:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7f9f14007170 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7f9f14007100 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7f9f140073b0 <line:420:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7f9f140071f8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7f9f14007260 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7f9f14007318 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7f9f14007670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7f9f140076b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7f9f139db0d0 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7f9f139db360 prev 0x7f9f139db0d0 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7f9f13a08428 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7f9f13a086c0 prev 0x7f9f13a08428 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7f9f13a0a778 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7f9f13a0aa10 prev 0x7f9f13a0a778 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7f9f13a0fad8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7f9f13a0fd70 prev 0x7f9f13a0fad8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14007980 <line:421:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f14007770 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f14007af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14007c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7f9f14007d08 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f140077b0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f14007770 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7f9f140080a0 <line:424:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7f9f14007d90 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7f9f14007df8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7f9f14008040 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7f9f14007fd0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7f9f140084c8 <line:430:1, line:437:1> line:434:1 addressof
| |   | |-TemplateTypeParmDecl 0x7f9f140080f0 <line:430:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f14008430 <line:431:1, line:437:1> line:434:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7f9f140082b8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7f9f14008898 <line:435:1, line:437:1>
| |   |   | `-ReturnStmt 0x7f9f14008880 <line:436:5, col:35>
| |   |   |   `-CallExpr 0x7f9f14008850 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7f9f14008800 <col:12> '<builtin fn type>' Function 0x7f9f140086a8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7f9f14008828 <col:32> '_Tp' lvalue ParmVar 0x7f9f140082b8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7f9f14008520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   |-VisibilityAttr 0x7f9f14008568 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7f9f14008578 <line:268:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7f9f14008b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:493:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7f9f140088b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f14008ae8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7f9f140089a8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7f9f14008bd8 <line:496:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7f9f14008cf8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7f9f14008dd0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7f9f14008ff8 <line:500:1, line:512:1> line:501:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7f9f14008e38 <line:500:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14008eb8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7f9f14008f60 <line:501:1, line:512:1> line:501:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7f9f140092c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7f9f14009308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:501:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7f9f14009a00 <line:503:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7f9f14009a60 <col:53> '_Tp' NonTypeTemplateParm 0x7f9f14008eb8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7f9f14009a98 <line:504:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7f9f14008e80 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7f9f14008e38 '_Tp'
| |   | | |-TypedefDecl 0x7f9f14009b00 <line:505:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7f9f14009230 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7f9f14008f60 'integral_constant'
| |   | | |-CXXConversionDecl 0x7f9f14009c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:507:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7f9f14009f68 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7f9f14009f50 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7f9f14009f28 <col:73> 'const _Tp' lvalue Var 0x7f9f14009a00 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7f9f14009d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | | | `-VisibilityAttr 0x7f9f14009d78 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7f9f14009de8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7f9f14009fc8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7f9f14009fb0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7f9f14009f88 <col:69> 'const _Tp' lvalue Var 0x7f9f14009a00 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7f9f14009e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | |   `-VisibilityAttr 0x7f9f14009ec8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1400a4a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:500:1, line:512:1> line:501:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7f9f1401aa58 prev 0x7f9f1400a4a8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7f9f1401ab00 <line:503:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7f9f1401ab88 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7f9f1401ab70 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7f9f1401ac18 <line:504:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7f9f1400a470 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7f9f14008e80 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7f9f14008e38 '_Tp'
| |   | | |   `-BuiltinType 0x7f9f13830b40 '_Bool'
| |   | | |-TypedefDecl 0x7f9f1401ac80 <line:505:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7f9f1400a5b0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7f9f1400a4a8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7f9f1401ad68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:507:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7f9f1401ae38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | | `-CXXMethodDecl 0x7f9f1401aeb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7f9f1401af58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1400a780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:500:1, line:512:1> line:501:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7f9f140198a8 prev 0x7f9f1400a780 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7f9f14019950 <line:503:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7f9f140199d8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7f9f140199c0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7f9f14019a68 <line:504:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7f9f1400a470 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7f9f14008e80 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7f9f14008e38 '_Tp'
| |   | | |   `-BuiltinType 0x7f9f13830b40 '_Bool'
| |   | | |-TypedefDecl 0x7f9f14019ad0 <line:505:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7f9f1400a880 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7f9f1400a780 'integral_constant'
| |   | | |-CXXConversionDecl 0x7f9f14019c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:507:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7f9f14019cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | | `-CXXMethodDecl 0x7f9f14019d50 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7f9f1401a600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7f9f14827100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:500:1, line:512:1> line:501:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7f9f14827330 prev 0x7f9f14827100 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7f9f14827400 <line:503:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7f9f14827490 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7f9f14827470 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7f9f14827520 <line:504:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7f9f148270b0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7f9f14008e80 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7f9f14008e38 '_Tp'
| |   |   |   `-BuiltinType 0x7f9f13830c80 'unsigned long'
| |   |   |-TypedefDecl 0x7f9f14827588 <line:505:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7f9f14827200 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7f9f14827100 'integral_constant'
| |   |   |-CXXConversionDecl 0x7f9f148276b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:507:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7f9f14827788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-CXXMethodDecl 0x7f9f14827800 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7f9f148278a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |-VarDecl 0x7f9f1400a370 parent 0x7f9f14008f60 prev 0x7f9f14009a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:514:1, line:515:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7f9f1400a6c0 <line:525:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7f9f1400a5d0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7f9f1400a438 <line:522:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7f9f1400a420 <line:525:31> '_Bool' true
| |   |   `-RecordType 0x7f9f1400a5b0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7f9f1400a4a8 'integral_constant'
| |   |-TypedefDecl 0x7f9f1400a990 <line:526:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7f9f1400a8a0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7f9f1400a740 <line:522:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7f9f1400a728 <line:526:31> '_Bool' false
| |   |   `-RecordType 0x7f9f1400a880 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7f9f1400a780 'integral_constant'
| |   |-ClassTemplateDecl 0x7f9f14018fb0 <line:532:1, line:533:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7f9f14018e00 <line:532:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7f9f14018e58 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7f9f14018f18 <line:533:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7f9f1401a778 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14019550 <line:535:1, line:536:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7f9f14019298 <line:535:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7f9f1401a698 <line:536:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7f9f1401a778 <line:538:1, line:539:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7f9f1401aff0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1401b2c0 <line:541:1, line:542:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f1401b0a8 <line:541:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7f9f1401bbf8 <line:542:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1401bfe0 <line:544:1, line:545:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7f9f1401bcb0 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7f9f1401bd18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7f9f1401c578 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7f9f1401c7c0 <line:547:1, line:548:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7f9f1401c630 <line:547:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7f9f1401c698 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7f9f1401c728 <line:548:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7f9f1401ccf8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7f9f1401cf40 <line:552:1, line:553:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7f9f1401cdc0 <line:552:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7f9f1401ce18 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7f9f1401cea8 <line:553:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7f9f1401d830 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1401d450 <line:555:1, line:556:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7f9f1401d1f8 <line:555:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7f9f1401d750 <line:556:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7f9f1401d830 <line:558:1, line:559:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7f9f1401dab8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1401dea0 <line:561:1, line:563:53> line:562:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7f9f1401db70 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7f9f1401dbd8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7f9f1401e438 <line:562:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7f9f1401e680 <line:565:1, line:566:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7f9f1401e4f0 <line:565:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7f9f1401e558 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7f9f1401e5e8 <line:566:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7f9f1401eb88 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7f9f1401ed58 <line:570:1, line:571:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7f9f1401ec40 <line:570:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7f9f1401ecc0 <line:571:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7f9f1401f218 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7f9f1401f3e8 <line:574:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7f9f1401f2d0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7f9f1401f350 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7f9f1401f668 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7f9f1401f668 <line:575:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7f9f1401f8a0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1401fb08 <line:577:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f1401f958 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7f9f1401fdb0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f140200f8 <line:579:1, line:580:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7f9f1401fe68 <line:579:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7f9f1401fed8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7f9f14020700 <line:580:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14020cb8 <line:582:1, line:584:73> line:583:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7f9f140207b8 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7f9f14020828 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7f9f14020898 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7f9f14020908 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7f9f140215f0 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7f9f140217c8 <line:587:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7f9f140216a8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7f9f14021730 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7f9f14021a88 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14021a88 <line:588:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7f9f14021cc0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14021f18 <line:590:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f14021d78 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7f9f140221c0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14022508 <line:592:1, line:593:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7f9f14022278 <line:592:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7f9f140222e8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7f9f14022b10 <line:593:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14023068 <line:595:1, line:597:73> line:596:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7f9f14022bc8 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7f9f14022c38 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7f9f14022ca8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7f9f14022d18 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7f9f14024a00 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7f9f14024bd8 <line:600:1, line:601:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7f9f14024ab8 <line:600:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14024b40 <line:601:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7f9f14025180 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7f9f14025388 <line:607:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7f9f14025238 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f140252f0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7f9f14025600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14025688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:607:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f140258d8 <line:608:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f14025740 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f14025a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f14025bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:608:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7f9f14025db8 <line:617:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7f9f14025c68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14025d20 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7f9f14026030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f140260b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:617:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14026308 <line:618:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f14026170 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f14026448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f140265c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:618:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7f9f140267c8 <line:627:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7f9f14026678 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14026730 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7f9f14005068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7f9f140050b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:627:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7f9f14005158 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7f9f140266c0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7f9f14026678 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7f9f139da188 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7f9f139da3d0 prev 0x7f9f139da188 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7f9f139da4a8 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7f9f139da470 'double' sugar
| |   |       |-TemplateTypeParmType 0x7f9f140266c0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f14026678 '_Tp'
| |   |       `-BuiltinType 0x7f9f13830ce0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14005368 <line:628:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f140051d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f140054a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f140055e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:628:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7f9f14005688 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f14005210 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f140051d0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7f9f14005940 <line:630:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7f9f14005700 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f140058e0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f14005870 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14005ad8 <line:635:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7f9f14005990 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14005a40 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7f9f14005d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7f9f14005d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:635:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7f9f14005e40 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7f9f140059d0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7f9f14005990 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7f9f139da590 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7f9f139da7e0 prev 0x7f9f139da590 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7f9f139da8b8 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7f9f139da880 'double' sugar
| |   |       |-TemplateTypeParmType 0x7f9f140059d0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f14005990 '_Tp'
| |   |       `-BuiltinType 0x7f9f13830ce0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1400ae88 <line:636:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f14005eb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1400afc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1400b100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:636:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7f9f1400b1a8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f14005f00 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f14005eb8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7f9f1400b460 <line:638:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7f9f1400b220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1400b400 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1400b390 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1400b5f8 <line:643:1, line:644:80> line:643:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7f9f1400b4b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f1400b560 <col:22, line:644:80> line:643:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7f9f1400b870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7f9f1400b8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:643:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7f9f1400bc10 <line:644:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7f9f1400bba0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7f9f139d9ea8 <line:643:1, line:644:80> line:643:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7f9f139da0b8 prev 0x7f9f139d9ea8 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7f9f139da9a0 <line:644:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7f9f139da950 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7f9f139da930 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7f9f139da8b8 'type'
| |   |         `-SubstTemplateTypeParmType 0x7f9f139da880 'double' sugar
| |   |           |-TemplateTypeParmType 0x7f9f140059d0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7f9f14005990 '_Tp'
| |   |           `-BuiltinType 0x7f9f13830ce0 'double'
| |   |-TypeAliasTemplateDecl 0x7f9f1400bed0 <line:646:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7f9f1400bc88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1400be70 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1400be00 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1400c038 <line:651:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7f9f1400bf20 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f1400bfa0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7f9f1400c2f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7f9f1400c3c8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7f9f1400c3c8 <line:652:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7f9f1400c630 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7f9f1400c838 <line:654:1, line:655:63> line:654:50 is_void
| |   | |-TemplateTypeParmDecl 0x7f9f1400c6e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1400c7a0 <col:22, line:655:63> line:654:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f1400cab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1400cd18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:654:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7f9f1400d318 <line:664:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7f9f1400d200 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f1400d280 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7f9f1400d5d0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7f9f1400d6d0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7f9f1400d6d0 <line:665:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7f9f1400d940 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7f9f1400db48 <line:667:1, line:668:66> line:667:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7f9f1400d9f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1400dab0 <col:22, line:668:66> line:667:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f1400ddc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1400e028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:667:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7f9f1400e298 <line:671:1, line:672:66> line:671:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f1400e0e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1400e200 <col:22, line:672:66> line:671:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f1400e510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1400e728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:671:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7f9f1400e8f8 <line:682:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7f9f1400e7e0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f1400e860 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7f9f1400ebb0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7f9f1400ec88 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f1400efc8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f1400f310 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f1400f660 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f1400f9a8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f1400fce8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14010028 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14010388 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f140106d0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14010a20 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14010d70 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f140110c0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14011410 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14011760 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14011ab0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14011e20 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7f9f14012200 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7f9f139daa90 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7f9f139dacb0 prev 0x7f9f139daa90 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f1400ec88 <line:683:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7f9f1400eef0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f1400efc8 <line:684:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7f9f1400f230 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f1400f310 <line:685:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7f9f1400f580 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f1400f660 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7f9f1400f8d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f1400f9a8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7f9f1400fc10 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f1400fce8 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7f9f1400ff50 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14010028 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7f9f140102a8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14010388 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7f9f140105f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f140106d0 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7f9f14010940 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14010a20 <line:694:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7f9f14010c90 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14010d70 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7f9f14010fe0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f140110c0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7f9f14011330 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14011410 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7f9f14011680 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14011760 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7f9f140119d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14011ab0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7f9f14011d20 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14011e20 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7f9f14012090 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7f9f14012200 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7f9f14012470 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7f9f14012678 <line:705:1, line:706:67> line:705:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7f9f14012528 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f140125e0 <col:22, line:706:67> line:705:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7f9f140128f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7f9f14012b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:705:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7f9f139d9c58 <col:1, line:706:67> line:705:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7f9f139dad98 prev 0x7f9f139d9c58 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7f9f14012d28 <line:715:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7f9f14012c10 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14012c90 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7f9f14012fe0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7f9f140130c0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7f9f14028c10 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7f9f14028f60 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7f9f140130c0 <line:716:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7f9f14028b30 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7f9f14028c10 <line:717:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7f9f14028e80 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7f9f14028f60 <line:718:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7f9f140291d0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7f9f140293d8 <line:720:1, line:721:73> line:720:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7f9f14029288 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14029340 <col:22, line:721:73> line:720:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f14029650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f140298b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:720:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7f9f14029ac8 <line:730:1, line:731:26> line:730:50 is_array
| |   | |-TemplateTypeParmDecl 0x7f9f14029970 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14029a30 <col:22, line:731:26> line:730:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7f9f14029d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14029dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:730:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1402a088 <line:732:1, line:733:25> line:732:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7f9f14029e80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1402a1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1402a350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:732:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1402a6f8 <line:734:1, line:735:25> line:734:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7f9f1402a408 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1402a4b0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7f9f1402a848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1402aa00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:734:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7f9f1402abd8 <line:744:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f1402aab8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1402ab40 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7f9f1402ae90 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1402b0e8 <line:745:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7f9f1402af48 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1402b360 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7f9f1402b568 <line:747:1, line:748:66> line:747:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f1402b418 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1402b4d0 <col:22, line:748:66> line:747:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f1402b7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1402d860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:747:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7f9f1402da68 <line:757:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7f9f1402d918 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1402d9d0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7f9f1402dce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1402dd68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:757:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1402dfe8 <line:758:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7f9f1402de20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1402e128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1402e2a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:758:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7f9f1402e4a8 <line:760:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7f9f1402e358 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1402e410 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7f9f1402e720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1402f000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1402f2b8 <line:762:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7f9f1402f0b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1402f3f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1402f570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:762:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7f9f1402f778 <line:765:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7f9f1402f628 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1402f6e0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7f9f1402f9f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1402fa78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1402fcf8 <line:766:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7f9f1402fb30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1402fe38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f14030000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:766:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14030288 <line:768:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7f9f140300b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f140303c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f14030540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7f9f14030748 <line:785:1, line:786:56> line:785:50 is_union
| |   | |-TemplateTypeParmDecl 0x7f9f140305f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f140306b0 <col:22, line:786:56> line:785:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f140309c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14030ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:785:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7f9f14030da8 <line:805:1, line:806:56> line:805:50 is_class
| |   | |-TemplateTypeParmDecl 0x7f9f14030c60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14030d10 <col:22, line:806:56> line:805:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f14031068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14031248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:805:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7f9f140314c0 <line:828:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7f9f14031300 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f14031368 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7f9f14031428 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7f9f14031760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f140317e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:828:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14031aa0 <line:829:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f140318a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f14031c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f14031db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:829:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7f9f14031e68 <line:838:1, line:846:1> line:838:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7f9f14031ed0 <line:840:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7f9f14033000 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7f9f14033318 <line:841:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7f9f140330b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7f9f14033280 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7f9f14033178 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7f9f14033558 <line:842:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7f9f14033370 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7f9f140334c0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7f9f14033400 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7f9f14033718 <line:843:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7f9f140335b0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7f9f14033680 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7f9f140339d8 <line:844:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7f9f14033768 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7f9f14033940 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7f9f14033808 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7f9f14033b98 <line:845:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7f9f14033a30 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7f9f14033b00 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7f9f14800770 <line:848:1, line:855:6> line:853:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7f9f14033be8 <line:848:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14800660 <col:22, line:852:50> line:848:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f14800628 <col:29, line:852:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7f9f148004f8 <line:848:29, line:851:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7f9f14033fa8 <line:848:29, line:850:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7f9f14033e78 <line:848:29, line:849:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7f9f14033d28 <line:848:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7f9f14033e38 <line:849:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7f9f14033f68 <line:850:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7f9f148004b8 <line:851:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f148005e8 <line:852:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f148006d8 <line:853:1, line:855:6> line:853:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7f9f14800ec8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14801160 <line:856:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14800f80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14801430 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7f9f14801638 <line:858:1, line:859:41> line:858:50 is_function
| |   | |-TemplateTypeParmDecl 0x7f9f148014e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148015a0 <col:22, line:859:41> line:858:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7f9f148018b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14802028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:858:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7f9f148022d8 <line:872:1, line:875:1> line:873:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7f9f148020e0 <line:872:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7f9f14802158 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7f9f148021c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7f9f14802240 <line:873:1, line:875:1> line:873:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7f9f148026e0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7f9f148028b8 <line:878:1, line:879:26> line:878:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f14802798 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14802820 <col:22, line:879:26> line:878:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7f9f14802b70 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14802ec8 <line:881:1, line:883:33> line:882:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7f9f14802c28 <line:881:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7f9f14802c98 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7f9f148031c8 <line:882:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7f9f14803400 <line:885:1, line:886:88> line:885:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f14803280 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14803330 <col:22, line:886:88> line:885:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7f9f14803680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f148039c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:885:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7f9f14803b98 <line:895:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f14803a78 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14803b00 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7f9f14803e50 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14804178 <line:896:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7f9f14803f08 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f14803f78 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7f9f14804400 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7f9f14804608 <line:898:1, line:899:73> line:898:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f148044b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14804570 <col:22, line:899:73> line:898:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f14804880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14804ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:898:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7f9f14804ce8 <line:908:1, line:910:79> line:908:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f14804ba0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14804c50 <col:22, line:910:79> line:908:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7f9f14804f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14805400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:908:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7f9f14805608 <line:921:1, line:922:55> line:921:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7f9f148054b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14805570 <col:22, line:922:55> line:921:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f14805880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14805a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:921:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7f9f14805c68 <line:947:1, line:949:70> line:947:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7f9f14805b20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14805bd0 <col:22, line:949:70> line:947:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7f9f14805ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14806318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:947:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7f9f14806b48 <line:958:1, line:961:66> line:958:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7f9f14806a00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14806ab0 <col:22, line:961:66> line:958:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7f9f14806dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14807318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:958:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7f9f14807518 <line:970:1, line:975:71> line:970:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7f9f148073d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14807480 <col:22, line:975:71> line:970:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7f9f14807790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7f9f14807f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:970:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7f9f14808090 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14808090 <line:977:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7f9f148081c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f14808340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:977:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7f9f14808548 <line:986:1, line:990:63> line:986:50 is_object
| |   | |-TemplateTypeParmDecl 0x7f9f148083f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148084b0 <col:22, line:990:63> line:986:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7f9f148087c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14808e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:986:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7f9f14809068 <line:999:1, line:1000:68> line:999:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7f9f14808f20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14808fd0 <col:22, line:1000:68> line:999:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7f9f148092e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f148095d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:999:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7f9f14809690 <line:1010:1, line:1013:1> line:1010:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7f9f148097b8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7f9f14809ac0 <line:1011:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7f9f14809850 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7f9f14809a28 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7f9f148098e8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7f9f14809c58 <line:1012:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7f9f14809b18 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7f9f14809bc0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7f9f14809de8 <line:1015:1, line:1017:81> line:1016:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7f9f14809cc8 <line:1015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14809d50 <line:1016:1, line:1017:81> line:1016:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7f9f1480a588 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7f9f1480ab48 <line:1022:1, line:1025:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7f9f1480a640 <line:1022:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1480aa38 <col:22, line:1024:44> line:1022:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f1480aa00 <col:29, line:1024:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7f9f1480a8c8 <line:1022:29, line:1023:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7f9f1480a778 <line:1022:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7f9f1480a888 <line:1023:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f1480a9b8 <line:1024:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f1480aab0 <line:1025:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7f9f1480ae10 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7f9f1480aeb8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f1480a680 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f1480a640 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1480b110 <line:1027:1, line:1028:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1480af30 <line:1027:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f1480b3a0 <line:1028:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7f9f1480b448 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7f9f1480af71 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7f9f1480af70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f1480af30 '_Tp'
| |   |-ClassTemplateDecl 0x7f9f1480b608 <line:1030:1, line:1031:51> line:1030:50 add_const
| |   | |-TemplateTypeParmDecl 0x7f9f1480b4c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1480b570 <col:22, line:1031:51> line:1030:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7f9f1480b880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f1480b8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1030:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7f9f1480bec0 <line:1031:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7f9f1480be50 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1480c180 <line:1034:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7f9f1480bf38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1480c120 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1480c0b0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1480c6d0 <line:1039:1, line:1042:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7f9f1480c1d0 <line:1039:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1480c5c0 <col:22, line:1041:47> line:1039:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f1480c588 <col:29, line:1041:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7f9f1480c458 <line:1039:29, line:1040:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7f9f1480c308 <line:1039:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7f9f1480c418 <line:1040:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f1480c548 <line:1041:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f1480c638 <line:1042:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7f9f1480d000 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7f9f1480d0a8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f1480c210 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f1480c1d0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1480d300 <line:1044:1, line:1045:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1480d120 <line:1044:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f1480d590 <line:1045:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7f9f1480d638 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7f9f1480d164 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7f9f1480d160 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f1480d120 '_Tp'
| |   |-ClassTemplateDecl 0x7f9f1480d7f8 <line:1047:1, line:1048:54> line:1047:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7f9f1480d6b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1480d760 <col:22, line:1048:54> line:1047:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7f9f1480da70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f1480dab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1047:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7f9f1480e6a0 <line:1048:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7f9f1480e630 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1480e960 <line:1051:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7f9f1480e718 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1480e900 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1480e890 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1480eaf8 <line:1056:1, line:1057:78> line:1056:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7f9f1480e9b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1480ea60 <col:22, line:1057:78> line:1056:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7f9f1480ed70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f1480edb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1056:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7f9f1480f110 <line:1057:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7f9f1480f0a0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1480f3d0 <line:1060:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7f9f1480f188 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1480f370 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1480f300 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1480f568 <line:1065:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7f9f1480f420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1480f4d0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7f9f1480fe30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f1480fe78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1065:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7f9f1480ff20 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f1480f460 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f1480f420 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14810168 <line:1066:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7f9f1480ff98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f148102a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f148103e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1066:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7f9f14810488 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f1480ffe0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1480ff98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148106c8 <line:1068:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7f9f14810500 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f14810808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14810940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7f9f148109e8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f14810540 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f14810500 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7f9f148112a0 <line:1072:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7f9f14810a60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f14811240 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f14810bd0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14811588 <line:1077:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7f9f148112f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14811478 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f14811428 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f148114f0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7f9f14811850 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7f9f148118f8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f14811330 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f148112f0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14811b50 <line:1078:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14811970 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14811de0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7f9f14811eb8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7f9f14811e80 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7f9f148119b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f14811970 '_Tp'
| |   |-ClassTemplateDecl 0x7f9f14812078 <line:1080:1, line:1081:63> line:1080:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7f9f14811f30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14811fe0 <col:22, line:1081:63> line:1080:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7f9f14812330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f14812378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1080:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7f9f14812710 <line:1081:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7f9f148126a0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f148129d0 <line:1084:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7f9f14812788 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f14812970 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f14812900 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14812cb8 <line:1089:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7f9f14812a20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14812ba8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f14812b58 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f14812c20 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7f9f14812f80 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7f9f14813028 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f14812a60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f14812a20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148172d0 <line:1090:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f148130a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14817560 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7f9f14817638 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7f9f14817600 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7f9f148130e0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f148130a0 '_Tp'
| |   |-ClassTemplateDecl 0x7f9f148177f8 <line:1092:1, line:1093:63> line:1092:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7f9f148176b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14817760 <col:22, line:1093:63> line:1092:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7f9f14817a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f14817ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1092:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7f9f14817e30 <line:1093:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7f9f14817dc0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f148180f0 <line:1096:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7f9f14817ea8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f14818090 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f14818020 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7f9f148183c8 <line:1103:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7f9f14818140 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f14818330 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7f9f14818200 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7f9f14818658 <line:1104:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7f9f14818420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f148185c0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7f9f148184b8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7f9f14818a50 <line:1106:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:738:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1108:1 declval
| |   | |-TemplateTypeParmDecl 0x7f9f148186b0 <line:1106:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f148189b8 <line:1107:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:738:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1108:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7f9f14818bb8 <line:1120:1, line:1123:1> line:1121:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7f9f14818aa0 <line:1120:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14818b20 <line:1121:1, line:1123:1> line:1121:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7f9f14818e30 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7f9f14819190 <line:1122:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7f9f14819120 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14819338 <line:1125:1, line:1128:1> line:1126:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7f9f14819220 <line:1125:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148192a0 <line:1126:1, line:1128:1> line:1126:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7f9f148195b0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7f9f14819910 <line:1127:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7f9f148198a0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f14819bd0 <line:1131:1, line:1132:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7f9f14819988 <line:1131:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f14819b70 <line:1132:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f14819b00 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14819db0 <line:1137:1, line:1139:68> line:1138:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7f9f14819c20 <line:1137:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f14819c88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7f9f14819d18 <line:1138:1, line:1139:68> line:1138:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7f9f1481be88 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7f9f1481bf40 <line:1141:1, line:1144:1> line:1141:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7f9f1481c068 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7f9f1481c1a0 <line:1143:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7f9f1481c3b8 <line:1148:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f1481c268 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1481c320 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7f9f1481c630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f1481c678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1148:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7f9f1481c720 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f1481c2b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f1481c268 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1481c968 <line:1149:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7f9f1481c798 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1481caa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1481dc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1149:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7f9f1481dca8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f1481c7e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1481c798 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1481dee8 <line:1150:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7f9f1481dd20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1481e028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1481e160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1150:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7f9f1481e208 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f1481dd60 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1481dd20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1481e448 <line:1151:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7f9f1481e280 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1481e588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1481e6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7f9f1481e768 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f1481e2c0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1481e280 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1481e9a8 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7f9f1481e7e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1481eae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1481ec68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7f9f1481ed10 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f1481e820 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1481e7e0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7f9f1481efd0 <line:1155:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7f9f1481ed88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1481ef70 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1481ef00 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1481f5a0 <line:1160:1, line:1164:57> line:1163:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7f9f1481f020 <line:1160:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1481f490 <line:1161:9, line:1162:63> line:1161:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f1481f458 <col:16, line:1162:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7f9f1481f158 <line:1161:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f1481f418 <line:1162:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f1481f508 <line:1163:1, line:1164:57> line:1163:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7f9f1481f860 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7f9f1481fa80 <line:1164:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7f9f1481fa30 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7f9f1481f9b0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14820d30 <line:1165:1, line:1166:23> line:1165:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1481faf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14820fc0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7f9f14821068 <line:1166:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f1481fb40 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1481faf8 '_Tp'
| |   |-ClassTemplateDecl 0x7f9f14821228 <line:1168:1, line:1169:58> line:1168:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7f9f148210e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14821190 <col:22, line:1169:58> line:1168:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7f9f148214a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f148214e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1168:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7f9f14821ab0 <line:1169:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7f9f14821a40 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f14821db0 <line:1172:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7f9f14821b28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f14821d50 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f14821ce0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14822098 <line:1177:1, line:1178:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7f9f14821e00 <line:1177:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14821f88 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f14821f38 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f14822000 <line:1178:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7f9f148225f8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14822890 <line:1180:1, line:1181:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f148226b0 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14822b60 <line:1181:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7f9f148236b8 <line:1183:1, line:1184:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7f9f14823420 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f148235a8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f14823558 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f14823620 <line:1184:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7f9f14823bb8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14823e50 <line:1186:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14823c70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14824120 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7f9f14824328 <line:1188:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7f9f148241d8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14824290 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7f9f14824630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f148248b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1188:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7f9f14824c08 <line:1197:1, line:1198:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7f9f14824970 <line:1197:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14824af8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f14824aa8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f14824b70 <line:1198:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7f9f14825168 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14825400 <line:1200:1, line:1201:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14825220 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148256d0 <line:1201:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7f9f14825a28 <line:1203:1, line:1204:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7f9f14825788 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14825918 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f148258c8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f14825990 <line:1204:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7f9f14825f28 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148261c0 <line:1206:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14825fe0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148264a8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7f9f148266a8 <line:1208:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7f9f14826560 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14826610 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7f9f14826920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14826ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1208:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7f9f14826da8 <line:1217:1, line:1218:44> line:1217:50 rank
| |   | |-TemplateTypeParmDecl 0x7f9f14826c60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14826d10 <col:22, line:1218:44> line:1217:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7f9f14827020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14827940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1217:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14827bd8 <line:1219:1, line:1220:63> line:1219:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7f9f148279f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f14827d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f14828148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1219:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14828888 <line:1221:1, line:1222:63> line:1221:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7f9f14828200 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14828278 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7f9f148289d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f14828d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1221:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7f9f14829038 <line:1231:1, line:1232:44> line:1231:68 extent
| |   | |-TemplateTypeParmDecl 0x7f9f14828e40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14828ee0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7f9f14828f38 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7f9f14828ea8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7f9f14828fa0 <col:40, line:1232:44> line:1231:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7f9f14829300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14829488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1231:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482a800 <line:1233:1, line:1234:44> line:1233:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14829540 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1482a988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1482ac38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1233:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482afc0 <line:1235:1, line:1236:68> line:1235:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1482ae68 <col:78> 'unsigned int' NonTypeTemplateParm 0x7f9f1482ad70 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7f9f1482acf0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1482ad70 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7f9f1482b128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1482b658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1235:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482ba30 <line:1237:1, line:1238:46> line:1237:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1482b710 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1482b788 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7f9f1482bbb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1482beb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1237:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482c2f0 <line:1239:1, line:1240:68> line:1239:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1482c190 <col:93> 'unsigned int' NonTypeTemplateParm 0x7f9f1482c058 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7f9f1482bf70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1482bfe8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7f9f1482c058 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7f9f1482c458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1482c9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1239:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7f9f1482cbb8 <line:1249:1, line:1250:23> line:1249:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7f9f1482ca70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1482cb20 <col:22, line:1250:23> line:1249:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7f9f1482ce30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f1482ce78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1249:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7f9f1482cf20 <line:1250:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f1482cab0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f1482ca70 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482d178 <line:1251:1, line:1252:23> line:1251:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7f9f1482cf98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1482d2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1482d400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1251:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7f9f1482d4a8 <line:1252:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f1482cfe0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1482cf98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482d800 <line:1253:1, line:1254:23> line:1253:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7f9f1482d520 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1482d598 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7f9f1482d948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1482da80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1253:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7f9f1482db28 <line:1254:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7f9f1482d560 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1482d520 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7f9f1482dde0 <line:1257:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7f9f1482dba0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1482dd80 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1482dd10 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1482df78 <line:1262:1, line:1263:23> line:1262:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7f9f1482de30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1482dee0 <col:22, line:1263:23> line:1262:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7f9f1482e1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f1482e238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1262:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7f9f1482e2e0 <line:1263:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f1482de70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7f9f1482de30 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482e538 <line:1264:1, line:1265:58> line:1264:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7f9f1482e358 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1482e688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1482e800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1264:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7f9f1482ea00 <line:1265:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1482e990 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482ed08 <line:1266:1, line:1267:58> line:1266:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7f9f1482ea78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1482eaf8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7f9f1482ee58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1482ef90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1266:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7f9f1482f150 <line:1267:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1482f0e0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1482f3d0 <line:1270:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7f9f1482f1c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1482f370 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1482f300 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1482f5a8 <line:1275:1, line:1278:1> line:1276:8 __decay
| |   | |-TemplateTypeParmDecl 0x7f9f1482f420 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7f9f1482f498 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7f9f1482f510 <line:1276:1, line:1278:1> line:1276:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7f9f1482f890 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7f9f1482fa50 <line:1277:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7f9f1482f9e0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1482fcb0 <line:1280:1, line:1294:1> line:1281:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f1482fac8 <line:1280:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7f9f1482ff40 <line:1281:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7f9f1482ffd8 <line:1282:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7f9f14830a70 <line:1283:5, line:1293:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7f9f14830a00 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14830c38 <line:1296:1, line:1303:1> line:1297:29 decay
| |   | |-TemplateTypeParmDecl 0x7f9f14830ae8 <line:1296:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14830ba0 <line:1297:1, line:1303:1> line:1297:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7f9f14830eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f14830ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1297:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7f9f14830f90 <line:1299:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7f9f148310e0 <line:1300:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7f9f14831070 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7f9f14831138 <line:1301:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7f9f14831500 <line:1302:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7f9f14831490 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f14831c00 <line:1306:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7f9f14831578 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f14831760 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f148316f0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14831d98 <line:1311:1, line:1312:59> line:1311:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7f9f14831c50 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14831d00 <col:22, line:1312:59> line:1311:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f14832010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f148321f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1311:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7f9f148323f8 <line:1322:1, line:1323:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7f9f148322b0 <line:1322:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14832360 <col:22, line:1323:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f14832670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14832858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1322:22, line:1323:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7f9f14832a58 <line:1330:1, line:1331:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7f9f14832910 <line:1330:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148329c0 <col:22, line:1331:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f14832ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14832e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1330:22, line:1331:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7f9f148330e0 <line:1343:1, line:1345:63> line:1344:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7f9f14832f20 <line:1343:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7f9f14832f88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7f9f14833048 <line:1344:1, line:1345:63> line:1344:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f14833380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14833578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1344:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7f9f148337f0 <line:1383:1, line:1385:65> line:1383:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7f9f14833630 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7f9f14833698 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7f9f14833758 <col:33, line:1385:65> line:1383:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7f9f14833a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14834e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1383:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7f9f14835048 <line:1473:1, line:1475:56> line:1474:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7f9f14834f00 <line:1473:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14834fb0 <line:1474:1, line:1475:56> line:1474:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f148352c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f148354a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1474:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7f9f148356a8 <line:1509:1, line:1511:62> line:1510:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7f9f14835560 <line:1509:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14835610 <line:1510:1, line:1511:62> line:1510:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f14835920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14835b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1510:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7f9f14835d08 <line:1534:1, line:1535:70> line:1534:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7f9f14835bc0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14835c70 <col:22, line:1535:70> line:1534:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f14835f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14836168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1534:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7f9f14836368 <line:1551:1, line:1552:59> line:1551:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7f9f14836220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148362d0 <col:22, line:1552:59> line:1551:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f148365e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f148367c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1551:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7f9f14836a10 <line:1561:1, line:1566:1> line:1562:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7f9f14836880 <line:1561:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7f9f148368e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7f9f14836978 <line:1562:1, line:1566:1> line:1562:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7f9f14836cf0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7f9f14836d98 <line:1564:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7f9f148368c0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7f9f14836880 '_Hp'
| |   | | `-TypedefDecl 0x7f9f14836e00 <line:1565:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7f9f14836930 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f148368e8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483b318 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483b530 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483b740 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483b950 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483bc00 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483be10 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483c020 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483c230 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483c440 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483c650 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485a6e8 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485a900 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485ab10 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485ad20 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485af30 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485b140 <line:1561:1, line:1566:1> line:1562:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7f9f14862e88 prev 0x7f9f1485b140 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7f9f14862f58 <line:1564:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7f9f14862f20 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7f9f148368c0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7f9f14836880 '_Hp'
| |   | | |   `-BuiltinType 0x7f9f13830b80 'signed char'
| |   | | `-TypedefDecl 0x7f9f14862fe8 <line:1565:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7f9f14862fb0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7f9f14836930 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7f9f148368e8 '_Tp'
| |   | |     `-RecordType 0x7f9f1485b030 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7f9f1485af30 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485b440 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485b650 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485b860 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485ba70 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1485bc90 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7f9f1485bea0 <line:1561:1, line:1566:1> line:1562:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7f9f1486a768 prev 0x7f9f1485bea0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7f9f1486a838 <line:1564:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7f9f1486a800 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7f9f148368c0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7f9f14836880 '_Hp'
| |   |   |   `-BuiltinType 0x7f9f13830c20 'unsigned char'
| |   |   `-TypedefDecl 0x7f9f1486a8c8 <line:1565:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7f9f1486a890 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7f9f14836930 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7f9f148368e8 '_Tp'
| |   |       `-RecordType 0x7f9f1485bd90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7f9f1485bc90 '__type_list'
| |   |-CXXRecordDecl 0x7f9f14836e78 <line:1568:1, line:1576:1> line:1568:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7f9f14836f98 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7f9f14837098 <line:1571:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7f9f14837240 <line:1572:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7f9f14837178 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7f9f148373f0 <line:1573:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7f9f14837300 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7f9f148374e0 <line:1574:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7f9f148374e0
| |   |-ClassTemplateDecl 0x7f9f148376d8 <line:1578:1, line:1583:1> line:1579:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7f9f148375b8 <line:1578:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14837640 <line:1579:1, line:1583:1> line:1579:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7f9f14837950 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7f9f148379f8 <line:1581:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7f9f14837b28 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7f9f14837b78 <line:1582:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7f9f14837600 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7f9f148375b8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f14838d00 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f14838ed0 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f148390a0 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f14839270 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f14839440 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f14839610 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483ac00 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483adc8 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7f9f1483af88 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7f9f1483b150 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7f9f14838800 <line:1585:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7f9f14838928 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7f9f148389d8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7f9f14838a40 <line:1586:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7f9f14838b68 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7f9f14838c80 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7f9f1483c860 <line:1588:1, line:1600:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7f9f1483c770 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7f9f1483c750 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7f9f1483c650 '__type_list'
| |   |-ClassTemplateDecl 0x7f9f1483ca48 <line:1602:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7f9f1483c8b8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7f9f1483c938 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7f9f1483c9b0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1483d0b0 <line:1604:1, line:1612:1> line:1605:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1483cf50 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483cd68 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7f9f1483cce8 <line:1604:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1483cd68 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7f9f1483d380 <line:1605:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7f9f1483d7c0 <line:1607:5, line:1611:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7f9f1483d750 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1483dc70 <line:1614:1, line:1622:1> line:1615:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1483dac0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483d928 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7f9f1483d838 <line:1614:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7f9f1483d8a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1483d928 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7f9f1483df40 <line:1615:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7f9f1483e590 <line:1617:5, line:1621:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7f9f1483e520 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1483e798 <line:1624:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7f9f1483e608 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7f9f1483e688 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7f9f1483e700 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1483ed60 <line:1626:1, line:1627:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1483ec00 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483ea78 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7f9f1483e9f8 <line:1626:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1483ea78 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7f9f1483f248 <line:1627:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7f9f1483f4f8 <line:1629:1, line:1637:1> line:1630:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7f9f1483f310 <line:1629:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7f9f1483f378 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7f9f1483f3e0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7f9f1483f460 <line:1630:1, line:1637:1> line:1630:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7f9f1483f850 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7f9f1483f8e8 <line:1632:1, col:8> col:1 private
| |   |   |-VarDecl 0x7f9f1483f920 <line:1633:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7f9f1483fa48 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7f9f1483f9d0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7f9f1483f980 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f3e0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7f9f1483f9a8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f378 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7f9f1483f9f8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f3e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7f9f1483fa20 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f378 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7f9f1483fa88 <line:1634:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7f9f1483fbb0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7f9f1483fb38 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7f9f1483fae8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f378 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7f9f1483fb10 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f3e0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7f9f1483fb60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f3e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7f9f1483fb88 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f378 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7f9f14840000 <line:1635:1, col:7> col:1 public
| |   |   `-VarDecl 0x7f9f14840038 <line:1636:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7f9f148401a8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7f9f14840178 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7f9f14840100 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7f9f14840098 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1483f310 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7f9f148400e8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7f9f148400c0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7f9f1483fa88 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7f9f14840128 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7f9f1483f920 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7f9f14840150 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7f9f1483fa88 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148405c0 <line:1639:1, line:1641:118> line:1640:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f14840460 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f148402c8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7f9f148401e0 <line:1639:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7f9f14840248 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f148402c8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7f9f14840ed8 <line:1640:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7f9f14841338 <line:1643:1, line:1653:1> line:1644:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7f9f14840fa0 <line:1643:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7f9f148411f8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f148411a8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f148412a0 <line:1644:1, line:1653:1> line:1644:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7f9f14841620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f14841668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1644:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7f9f14841920 <line:1646:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7f9f148418b0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7f9f14841bc0 <line:1647:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7f9f14841af8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7f9f14841ab8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7f9f14841b98 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7f9f14841bf8 <line:1648:5, line:1652:5> line:1648:11 union type definition
| |   |     |-CXXRecordDecl 0x7f9f14841d18 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7f9f14841dc0 <line:1650:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7f9f14842428 <line:1651:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7f9f14842930 <line:1656:1, line:1657:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7f9f148424c0 <line:1656:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7f9f14842688 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f14842638 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7f9f148428d0 <line:1657:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7f9f14842860 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14842bc0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f14842a30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f14842990 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7f9f14842990 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f14842d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14842e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f14842f48 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f14843068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f14842f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1670:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7f9f148430b8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f14843388 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14844a60 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f148448d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f14844830 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7f9f14844830 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f14844bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14844d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f14844de8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f14844f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f14844dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1671:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7f9f14844f58 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f14845228 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148454f0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f14845360 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f148452c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7f9f148452c0 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f14845658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14845800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f148458b8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f148459d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f14845898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1672:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7f9f14845a28 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f14845cf8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14845fc0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f14845e30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f14845d90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7f9f14845d90 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f14846128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14846290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f14846348 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f14846468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f14846328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1673:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7f9f148464b8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f14846788 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14846a60 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f148468d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f14846830 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7f9f14846830 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f14846bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14846d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f14846de8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f14846f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f14846dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1674:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7f9f14846f58 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f14847228 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148474f0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f14847360 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f148472c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7f9f148472c0 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f14847658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f148477c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f14847878 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f14847998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f14847858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1675:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7f9f148479e8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f14847cb8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14847f80 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f14847df0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f14847d50 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7f9f14847d50 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f148480e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14848250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f14848308 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f14848428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f148482e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1676:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7f9f14848478 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f14848748 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14848a30 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f148488a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f14848800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7f9f14848800 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f14848b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14848d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f14848db8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f14848ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f14848d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7f9f14848f28 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f148491f8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148494c0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f14849330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f14849290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7f9f14849290 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f14849628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f14849790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f14849848 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f14849968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f14849828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1678:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7f9f148499b8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f14849c88 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14849f50 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f14849dc0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f14849d20 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7f9f14849d20 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f1484a0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1484a220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f1484a2d8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f1484a3f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f1484a2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1679:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7f9f1484a448 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f1484a718 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1484aa30 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1484a8a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484a800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484a800 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f1484ab98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1484ad00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f1484adb8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f1484aed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f1484ad98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1680:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7f9f1484af28 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f1484b1f8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1484b4c0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1484b330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484b290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484b290 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f1484b628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1484b790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f1484b848 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f1484b968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f1484b828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1681:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7f9f1484b9b8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f1484bc88 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1484bf50 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1484bdc0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484bd20 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484bd20 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f1484c0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1484c220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f1484c2d8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f1484c3f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f1484c2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1682:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7f9f1484c448 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f1484c718 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1484ca30 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1484c8a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484c800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484c800 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f1484cb98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1484cd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f1484cdb8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f1484ced8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f1484cd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1683:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7f9f1484cf28 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f1484d1f8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1484d4c0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1484d330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484d290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484d290 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7f9f1484d628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7f9f1484d790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7f9f1484d848 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7f9f1484d968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7f9f1484d828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7f9f1484d9b8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7f9f1484dc88 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7f9f1484de98 <line:1695:1, line:1696:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484dd20 <line:1695:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484dd88 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7f9f1484de00 <line:1696:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1484e310 <line:1698:1, line:1702:1> line:1699:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1484e1e8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484e178 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484e178 <line:1698:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7f9f1484e5a0 <line:1699:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7f9f1484e648 <line:1701:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7f9f1484e6a8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484e178 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1484eae0 <line:1704:1, line:1709:1> line:1705:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1484e880 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484e700 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7f9f1484e8a8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484e768 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7f9f1484e8f8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7f9f1484e8d0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484e800 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484e700 <line:1704:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484e768 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484e800 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7f9f1484ede0 <line:1705:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7f9f1484ee88 <line:1707:5, line:1708:73> line:1707:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7f9f1484f3b8 <col:33, line:1708:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7f9f1484ef38 <line:1707:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7f9f1484eee8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484e700 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7f9f1484ef10 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1484e768 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7f9f1484f148 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7f9f1484f378 <line:1708:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7f9f1484f638 <line:1711:1, line:1719:1> line:1712:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7f9f1484f418 <line:1711:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7f9f1484f470 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7f9f1484f4d8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7f9f1484f5a0 <line:1712:1, line:1719:1> line:1712:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7f9f1484f9d0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7f9f1484fa78 <line:1714:5, line:1715:81> line:1714:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7f9f1484fcd8 <col:43, line:1715:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7f9f1484fd28 <line:1716:5, line:1717:66> line:1716:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7f9f14850008 <col:33, line:1717:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7f9f148502b0 <line:1718:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7f9f14850240 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f148506d0 <line:1722:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7f9f14850338 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7f9f14850390 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7f9f14850670 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7f9f14850600 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14851698 <line:1727:1, line:1744:1> line:1728:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7f9f14850720 <line:1727:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14851600 <line:1728:1, line:1744:1> line:1728:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7f9f14851910 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7f9f148519f8 <line:1730:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7f9f14851b38 <line:1731:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7f9f14851aa8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7f9f14851cb8 <line:1732:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7f9f14851be8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7f9f14851e38 <line:1733:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7f9f14851d70 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7f9f14851fb8 <line:1734:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7f9f14851ef0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7f9f14852138 <line:1735:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7f9f14852070 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7f9f148522b8 <line:1736:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7f9f148521f0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7f9f14852438 <line:1737:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7f9f14852370 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7f9f148525b8 <line:1738:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7f9f148524f0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7f9f14852700 <line:1739:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7f9f14852670 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7f9f14852848 <line:1740:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7f9f148527b8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7f9f14852b08 <line:1742:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7f9f14852ad0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7f9f14852a60 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7f9f148528e8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7f9f14852848 0x7f9f14852700 0x7f9f148525b8 0x7f9f14852438 0x7f9f148522b8 0x7f9f14852138 0x7f9f14851fb8 0x7f9f14851e38 0x7f9f14851cb8 0x7f9f14851b38 0x7f9f148519f8
| |   | | |     `-CallExpr 0x7f9f14852a38 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7f9f148529a0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7f9f14818a50
| |   | | `-VarDecl 0x7f9f14852b70 <line:1743:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7f9f14852d98 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f14852d58 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7f9f14852df8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14852df8 <line:1746:1, line:1750:1> line:1747:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7f9f14853020 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7f9f148530c8 <line:1749:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7f9f14853128 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7f9f14854ca0 <line:1754:1, line:1762:1> line:1758:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7f9f148531b8 <line:1754:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7f9f14853238 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7f9f148532b8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7f9f14854b80 <line:1755:11, line:1757:39> line:1755:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f14854b48 <col:18, line:1757:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7f9f14853598 <line:1755:18, line:1756:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7f9f148533f8 <line:1755:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7f9f14853558 <line:1756:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f14854b08 <line:1757:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f14854c08 <line:1758:1, line:1762:1> line:1758:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7f9f14854fc0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7f9f14855058 <line:1760:1, col:7> col:1 public
| |   |   `-VarDecl 0x7f9f14855090 <line:1761:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7f9f148550f0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148554e0 <line:1764:1, line:1774:1> line:1765:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14855128 <line:1764:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7f9f14855198 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7f9f14855208 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7f9f14855820 <line:1765:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7f9f148558b8 <line:1767:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7f9f14855e90 <line:1768:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7f9f14855e20 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7f9f14856440 <line:1769:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7f9f148563d0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7f9f14857400 <line:1770:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7f9f14856980 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7f9f14857458 <line:1771:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7f9f14857658 <line:1772:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7f9f14857620 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7f9f148575b8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7f9f14857538 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7f9f148574b0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7f9f14857510 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7f9f14857590 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7f9f148576c0 <line:1773:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7f9f14857720 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14857a90 <line:1776:1, line:1785:1> line:1777:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14857758 <line:1776:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7f9f148577c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7f9f14857dd0 <line:1777:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7f9f14857e68 <line:1779:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7f9f148582c0 <line:1780:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7f9f14858250 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7f9f14858750 <line:1781:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7f9f148586e0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7f9f148587a8 <line:1782:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7f9f14858928 <line:1783:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7f9f148588f0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7f9f14858888 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7f9f14858800 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7f9f14858860 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7f9f14858990 <line:1784:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7f9f148589f0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14858cf0 <line:1787:1, line:1793:1> line:1788:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14858a28 <line:1787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7f9f14859030 <line:1788:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7f9f148590c8 <line:1790:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7f9f14859240 <line:1791:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7f9f148591d0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7f9f148592a8 <line:1792:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7f9f14859308 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7f9f14859d68 <line:1795:1, line:1796:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7f9f14859340 <line:1795:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7f9f148593b8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7f9f14859c38 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7f9f14859cd0 <line:1796:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7f9f1485a598 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7f9f1485b350 <line:1800:1, line:1813:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7f9f1485b260 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7f9f1485b240 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7f9f1485b140 '__type_list'
| |   |-TypedefDecl 0x7f9f1485c0b0 <line:1815:1, line:1828:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7f9f1485bfc0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7f9f1485bfa0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7f9f1485bea0 '__type_list'
| |   |-ClassTemplateDecl 0x7f9f1485c450 <line:1830:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7f9f1485c108 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7f9f1485c188 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7f9f1485c338 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f1485c300 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7f9f1485c1e0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1485c188 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7f9f1485c2e0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7f9f1485c3b8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1485cb78 <line:1832:1, line:1836:1> line:1833:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1485c9a0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1485c808 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f1485c718 <line:1832:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7f9f1485c788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1485c808 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7f9f1485ceb0 <line:1833:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7f9f1485cf58 <line:1835:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7f9f1485c760 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f1485c718 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1485d428 <line:1838:1, line:1842:1> line:1839:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1485d250 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7f9f1485d0b8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1485cfd0 <line:1838:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7f9f1485d038 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1485d0b8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7f9f1485d760 <line:1839:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7f9f1485dc00 <line:1841:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7f9f1485db40 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1485e3c8 <line:1844:1, line:1849:1> line:1846:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7f9f1485dc78 <line:1844:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1485dce8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7f9f1485dfd8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f1485df88 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7f9f1485e2a8 <line:1845:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f1485e258 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f1485e330 <line:1846:1, line:1849:1> line:1846:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7f9f1485e710 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7f9f1485e7b8 <line:1848:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7f9f1485dd30 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7f9f1485dce8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1485eb70 <line:1851:1, line:1855:1> line:1852:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1485e830 <line:1851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1485e898 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f1485eec0 <line:1852:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7f9f1485ef68 <line:1854:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7f9f1485e8e1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7f9f1485e8e0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7f9f1485e898 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1485f320 <line:1857:1, line:1861:1> line:1858:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f1485efe0 <line:1857:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1485f048 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f1485f670 <line:1858:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7f9f1485f718 <line:1860:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7f9f1485f094 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7f9f1485f090 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7f9f1485f048 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1485fad0 <line:1863:1, line:1867:1> line:1864:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f1485f790 <line:1863:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1485f7f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f1485fe70 <line:1864:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7f9f1485ff18 <line:1866:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7f9f1485f845 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7f9f1485f840 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7f9f1485f7f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14860300 <line:1869:1, line:1873:1> line:1870:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1485ff90 <line:1869:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1485fff8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f14860650 <line:1870:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7f9f14860758 <line:1872:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7f9f14860720 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7f9f14860040 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7f9f1485fff8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14860b40 <line:1875:1, line:1879:1> line:1876:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f148607d0 <line:1875:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f14860838 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f14860e90 <line:1876:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7f9f14860f98 <line:1878:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7f9f14860f60 'const _Up &' dependent
| |   |     `-QualType 0x7f9f14860881 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7f9f14860880 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7f9f14860838 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14861380 <line:1881:1, line:1885:1> line:1882:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14861010 <line:1881:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f14861078 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f148616d0 <line:1882:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7f9f148617d8 <line:1884:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7f9f148617a0 'volatile _Up &' dependent
| |   |     `-QualType 0x7f9f148610c4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7f9f148610c0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7f9f14861078 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14861c00 <line:1887:1, line:1891:1> line:1888:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14861850 <line:1887:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f148618b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f14861f50 <line:1888:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7f9f14862058 <line:1890:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7f9f14862020 'const volatile _Up &' dependent
| |   |     `-QualType 0x7f9f14861905 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7f9f14861900 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7f9f148618b8 '_Up'
| |   |-ClassTemplateDecl 0x7f9f148624a0 <line:1893:1, line:1894:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7f9f148620d0 <line:1893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14862390 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f14862358 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7f9f14862208 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f14862318 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7f9f14862408 <line:1894:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7f9f14862760 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7f9f148633d0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f14863738 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f14863b18 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f14865718 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f14865af8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f14865ed8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f148662b8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f14866698 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f14866a78 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7f9f14866e50 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7f9f14867218 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14862a00 <line:1896:1, line:1900:1> line:1897:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14862818 <line:1896:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14862c90 <line:1897:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14863320 <line:1899:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7f9f148632b0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7f9f148633d0 <line:1902:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7f9f14863640 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7f9f14863738 <line:1903:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f148639b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14863a60 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7f9f13830ba0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14863b18 <line:1904:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f148655b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14865660 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7f9f13830ba0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14865718 <line:1905:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14865990 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14865a40 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7f9f13830bc0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14865af8 <line:1906:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14865d70 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14865e20 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7f9f13830bc0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14865ed8 <line:1907:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14866150 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14866200 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7f9f13830be0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7f9f148662b8 <line:1908:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14866530 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f148665e0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7f9f13830be0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14866698 <line:1909:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14866910 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f148669c0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7f9f13830c00 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14866a78 <line:1910:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14866cf0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14866da0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7f9f13830c00 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14866e50 <line:1912:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f148670c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14867168 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7f9f14011df0 '__int128_t' sugar
| |   |     |-Typedef 0x7f9f13831060 '__int128_t'
| |   |     `-BuiltinType 0x7f9f13830d40 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14867218 <line:1913:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f148674c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7f9f14867568 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7f9f14011df0 '__int128_t' sugar
| |   |     |-Typedef 0x7f9f13831060 '__int128_t'
| |   |     `-BuiltinType 0x7f9f13830d40 '__int128'
| |   |-ClassTemplateDecl 0x7f9f14867728 <line:1916:1, line:1920:1> line:1917:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7f9f148675e0 <line:1916:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14867690 <line:1917:1, line:1920:1> line:1917:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7f9f148679a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f148679e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1917:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7f9f148686a0 <line:1919:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7f9f14868630 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f14868960 <line:1923:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7f9f14868718 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f14868900 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f14868890 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14868d80 <line:1926:1, line:1927:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7f9f148689b0 <line:1926:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14868c70 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f14868c38 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7f9f14868ae8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f14868bf8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7f9f14868ce8 <line:1927:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7f9f14869040 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7f9f1486acb0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f1486b018 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f1486b3f8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f1486b7d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f1486bbb8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f1486bf98 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f14874400 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f148747d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f14874bb8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7f9f14874f90 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7f9f14875358 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148692e0 <line:1929:1, line:1933:1> line:1930:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f148690f8 <line:1929:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f1486a570 <line:1930:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f1486ac00 <line:1932:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7f9f1486ab90 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7f9f1486acb0 <line:1935:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7f9f1486af20 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7f9f1486b018 <line:1936:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f1486b290 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f1486b340 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7f9f13830c40 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7f9f1486b3f8 <line:1937:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f1486b670 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f1486b720 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7f9f13830c40 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7f9f1486b7d8 <line:1938:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f1486ba50 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f1486bb00 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7f9f13830c60 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7f9f1486bbb8 <line:1939:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f1486be30 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f1486bee0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7f9f13830c60 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7f9f1486bf98 <line:1940:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f1486c210 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f1486c2c0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7f9f13830c80 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14874400 <line:1941:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14874670 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f14874720 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7f9f13830c80 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7f9f148747d8 <line:1942:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14874a50 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f14874b00 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7f9f13830ca0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14874bb8 <line:1943:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14874e30 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f14874ee0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7f9f13830ca0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14874f90 <line:1945:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f14875200 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f148752a8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7f9f14012160 '__uint128_t' sugar
| |   |     |-Typedef 0x7f9f138310d0 '__uint128_t'
| |   |     `-BuiltinType 0x7f9f13830d60 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7f9f14875358 <line:1946:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7f9f148755d0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7f9f14875678 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7f9f14012160 '__uint128_t' sugar
| |   |     |-Typedef 0x7f9f138310d0 '__uint128_t'
| |   |     `-BuiltinType 0x7f9f13830d60 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7f9f14875838 <line:1949:1, line:1953:1> line:1950:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7f9f148756f0 <line:1949:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148757a0 <line:1950:1, line:1953:1> line:1950:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7f9f14875ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7f9f14875af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1950:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7f9f148766b0 <line:1952:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7f9f14876640 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f14876970 <line:1956:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7f9f14876728 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f14876910 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f148768a0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f14876b08 <line:1994:1, line:1995:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7f9f148769c0 <line:1994:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7f9f14876a70 <line:1995:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7f9f14876de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f14876e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1995:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148770a8 <line:1999:1, line:2001:37> line:2000:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f14876ee0 <line:1999:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f14877218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f148774f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2000:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7f9f148777c8 <line:2005:1, line:2006:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7f9f148775b0 <line:2005:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f14877618 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7f9f14877698 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7f9f14877730 <line:2006:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7f9f14877aa0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14878298 <line:2008:1, line:2017:1> line:2009:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f14877b58 <line:2008:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f14877bc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f148799c0 <line:2009:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7f9f14879e80 <line:2014:5, line:2016:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7f9f14879e10 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1487ad90 <line:2019:1, line:2027:6> line:2022:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7f9f14879ef8 <line:2019:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f14879f68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7f9f1487a100 <line:2020:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1487a320 <line:2021:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7f9f1487ad30 <line:2022:1, line:2027:6> line:2022:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7f9f1487acc0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1487b098 <line:2029:1, line:2031:33> line:2030:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7f9f1487ade0 <line:2029:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1487ae48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7f9f1487b248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1487c0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2030:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7f9f1487c298 <line:2035:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7f9f1487c178 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7f9f1487c200 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7f9f1487c6b0 <line:2037:1, line:2038:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7f9f1487c508 <line:2037:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7f9f1487c588 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7f9f1487c618 <line:2038:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7f9f1487c950 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1487d1a0 <line:2040:1, line:2046:1> line:2041:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1487ca08 <line:2040:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1487ca78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7f9f1487d520 <line:2041:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7f9f1487d780 <line:2045:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7f9f1487d710 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1487e000 <line:2048:1, line:2055:1> line:2049:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1487d7f8 <line:2048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1487d868 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7f9f1487d8d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7f9f1487e7e8 <line:2049:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1487ec78 <line:2057:1, line:2059:62> line:2058:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7f9f1487e8a0 <line:2057:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1487e908 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7f9f1487e978 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7f9f1487ee68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1487f318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2058:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7f9f1487f6b0 <line:2062:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7f9f1487f400 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7f9f1487f650 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7f9f1487f5e0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1487f890 <line:2069:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7f9f1487f700 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7f9f1487f768 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7f9f1487f7f8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7f9f1487fb30 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7f9f1487fbd8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7f9f1487f7b0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7f9f1487f768 '_Tp'
| |   |-FunctionTemplateDecl 0x7f9f148803c8 <line:2071:1, line:2073:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7f9f1487fc50 <line:2071:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1487fcb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7f9f14880330 <line:2072:1, line:2073:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7f9f14880218 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7f9f14880638 <line:2075:1, line:2076:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7f9f14880420 <line:2075:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7f9f14880488 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7f9f148805a0 <line:2076:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7f9f14880b28 <line:2079:1, line:2081:69> line:2080:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7f9f14880688 <line:2079:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f148806f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7f9f14880a10 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7f9f148809d8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7f9f14880838 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7f9f14880998 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f14880a90 <line:2080:1, line:2081:69> line:2080:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7f9f14881098 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1488e4a0 <line:2083:1, line:2087:1> line:2084:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14881150 <line:2083:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f148811b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7f9f1488e7c0 <line:2084:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7f9f1488ea10 <line:2089:1, line:2091:46> line:2090:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f1488e878 <line:2089:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1488e8e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7f9f1488e978 <line:2090:1, line:2091:46> line:2090:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7f9f1488f0a8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7f9f1488f2a8 <line:2100:1, line:2102:88> line:2100:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f1488f160 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1488f210 <col:22, line:2102:88> line:2100:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f1488f520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1488fa88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2100:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7f9f1488fc88 <line:2111:1, line:2114:71> line:2111:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f1488fb40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1488fbf0 <col:22, line:2114:71> line:2111:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f1488ff00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f148902c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2111:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7f9f14890498 <line:2133:1, line:2134:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7f9f14890380 <line:2133:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7f9f14890400 <line:2134:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7f9f14890710 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7f9f148907c0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7f9f13830bc0 'int'
| |   |-ClassTemplateDecl 0x7f9f14890958 <line:2136:1, line:2147:1> line:2137:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7f9f14890838 <line:2136:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148908c0 <line:2137:1, line:2147:1> line:2137:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7f9f14890bd0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7f9f148912e8 <line:2138:5, line:2141:5> line:2139:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7f9f14890c68 <line:2138:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7f9f14891250 <line:2139:5, line:2141:5> line:2139:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7f9f14891120 <line:2140:9, col:86> line:2141:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7f9f14891478 <line:2143:5, line:2144:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7f9f14891340 <line:2143:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7f9f148913e0 <line:2144:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7f9f148914d8 <line:2146:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7f9f148916c0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7f9f14891670 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7f9f14891650 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7f9f14891620 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7f9f14891560 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7f9f14891478 0x7f9f148912e8
| |   |       |     `-IntegerLiteral 0x7f9f14891600 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7f9f148916a0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7f9f14891898 <line:2149:1, line:2150:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7f9f14891708 <line:2149:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14891788 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7f9f14891800 <line:2150:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14891ce0 <line:2152:1, line:2155:92> line:2153:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14891af8 <line:2152:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14892418 <line:2153:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148926b0 <line:2157:1, line:2159:32> line:2158:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f148924d0 <line:2157:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148929f0 <line:2158:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7f9f14892c38 <line:2161:1, line:2162:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7f9f14892aa8 <line:2161:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f14892b28 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7f9f14892ba0 <line:2162:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14893080 <line:2164:1, line:2165:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14892e98 <line:2164:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148935c8 <line:2165:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14893860 <line:2167:1, line:2168:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f14893680 <line:2167:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f14893ba0 <line:2168:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7f9f14893d78 <line:2170:1, line:2172:73> line:2171:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7f9f14893c58 <line:2170:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f14893ce0 <line:2171:1, line:2172:73> line:2171:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7f9f148942a8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7f9f148948c8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14894528 <line:2174:1, line:2176:33> line:2175:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7f9f14894360 <line:2174:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f148947f0 <line:2175:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7f9f148948c8 <line:2178:1, line:2180:33> line:2179:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7f9f14894b70 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7f9f14895038 <line:2191:1, line:2198:1> line:2194:1 move
| |   | |-TemplateTypeParmDecl 0x7f9f14894c28 <line:2191:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f14894fa0 <line:2192:1, line:2198:1> line:2194:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7f9f14894e18 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7f9f14895350 <line:2195:1, line:2198:1>
| |   |   | |-DeclStmt 0x7f9f14895268 <line:2196:5, col:53>
| |   |   | | `-TypedefDecl 0x7f9f14895210 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7f9f148951a0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7f9f14895338 <line:2197:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7f9f14895308 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7f9f148952a0 <col:31> '_Tp' lvalue ParmVar 0x7f9f14894e18 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7f9f14895090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f148950d8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f14895780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2200:1, line:2206:1> line:2203:1 forward
| |   | |-TemplateTypeParmDecl 0x7f9f14895378 <line:2200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f148956e8 <line:2201:1, line:2206:1> line:2203:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7f9f148955b0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7f9f148958b0 <line:2204:1, line:2206:1>
| |   |   | `-ReturnStmt 0x7f9f14895898 <line:2205:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7f9f14895868 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7f9f14895830 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7f9f148955b0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7f9f148957d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f14895820 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f14895ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2208:1, line:2216:1> line:2211:1 forward
| |   | |-TemplateTypeParmDecl 0x7f9f148958d0 <line:2208:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f14895c08 <line:2209:1, line:2216:1> line:2211:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7f9f14895ad0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7f9f14896018 <line:2212:1, line:2216:1>
| |   |   | |-DeclStmt 0x7f9f14895f80 <line:2213:5, line:2214:60>
| |   |   | | `-StaticAssertDecl 0x7f9f14895f48 <line:2213:5, line:2214:59> line:2213:5
| |   |   | |   |-UnaryOperator 0x7f9f14895e58 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7f9f14895e18 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7f9f14895ef8 <line:2214:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7f9f14896000 <line:2215:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7f9f14895fd0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7f9f14895f98 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7f9f14895ad0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7f9f14895cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f14895d40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f14896400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2261:1, line:2267:1> line:2264:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7f9f14896040 <line:2261:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f14896340 <line:2262:1, line:2267:1> line:2264:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7f9f14896228 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7f9f14896618 <line:2265:1, line:2267:1>
| |   |   | `-ReturnStmt 0x7f9f14896600 <line:2266:5, col:35>
| |   |   |   `-CallExpr 0x7f9f148965d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2266:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7f9f14896508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2266:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     `-DeclRefExpr 0x7f9f148965a8 <col:32> '_Tp' lvalue ParmVar 0x7f9f14896228 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7f9f14896458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f148964a0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f14896bb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2283:1, line:2289:1> line:2284:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14896638 <line:2283:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f148966a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f14896718 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f14896ed0 <line:2284:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f14896f78 <line:2286:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7f9f148966f0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7f9f148966a8 '_Class'
| |   | |-TypedefDecl 0x7f9f14896fe0 <line:2287:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f14896680 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f14896638 '_Rp'
| |   | `-TypedefDecl 0x7f9f148970d8 <line:2288:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f14896910 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f148968d0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f14896680 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f14896638 '_Rp'
| |   |       `-PackExpansionType 0x7f9f148967f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f14896760 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f14896718 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148976c8 <line:2291:1, line:2297:1> line:2292:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14897150 <line:2291:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f148971b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f14897228 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f148979e0 <line:2292:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f14897a88 <line:2294:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7f9f14897200 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7f9f148971b8 '_Class'
| |   | |-TypedefDecl 0x7f9f14897af0 <line:2295:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f14897190 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f14897150 '_Rp'
| |   | `-TypedefDecl 0x7f9f14897be8 <line:2296:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f14897420 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f148973e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f14897190 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f14897150 '_Rp'
| |   |       |-PackExpansionType 0x7f9f14897300 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f14897270 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f14897228 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148981d8 <line:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14897c60 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f14897cc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f14897d38 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f14898d50 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f14898df8 <line:2302:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7f9f14897d11 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7f9f14897d10 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f14897cc8 '_Class'
| |   | |-TypedefDecl 0x7f9f14898e60 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f14897ca0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f14897c60 '_Rp'
| |   | `-TypedefDecl 0x7f9f14898fc8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f14898f70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f14898f30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f14897ca0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f14897c60 '_Rp'
| |   |       `-PackExpansionType 0x7f9f14897e10 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f14897d80 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f14897d38 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f148995b8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14899040 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f148990a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f14899118 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f148998d0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f14899978 <line:2310:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7f9f148990f1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7f9f148990f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f148990a8 '_Class'
| |   | |-TypedefDecl 0x7f9f148999e0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f14899080 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f14899040 '_Rp'
| |   | `-TypedefDecl 0x7f9f14899b48 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f14899af0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f14899ab0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f14899080 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f14899040 '_Rp'
| |   |       |-PackExpansionType 0x7f9f148991f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f14899160 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f14899118 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1489a138 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f14899bc0 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f14899c28 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f14899c98 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1489a450 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1489a4f8 <line:2318:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7f9f14899c74 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7f9f14899c70 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f14899c28 '_Class'
| |   | |-TypedefDecl 0x7f9f1489a560 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f14899c00 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f14899bc0 '_Rp'
| |   | `-TypedefDecl 0x7f9f1489a6c8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f1489a670 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1489a630 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f14899c00 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f14899bc0 '_Rp'
| |   |       `-PackExpansionType 0x7f9f14899d70 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f14899ce0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f14899c98 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1489b918 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1489a740 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1489a7a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1489a818 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1489bc30 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1489bcd8 <line:2326:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7f9f1489a7f4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7f9f1489a7f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f1489a7a8 '_Class'
| |   | |-TypedefDecl 0x7f9f1489bd40 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1489a780 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1489a740 '_Rp'
| |   | `-TypedefDecl 0x7f9f1489bea8 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f1489be50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1489be10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1489a780 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1489a740 '_Rp'
| |   |       |-PackExpansionType 0x7f9f1489a8f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f1489a860 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f1489a818 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1489c498 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1489bf20 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1489bf88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1489bff8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1489c7b0 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1489c858 <line:2334:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7f9f1489bfd5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7f9f1489bfd0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f1489bf88 '_Class'
| |   | |-TypedefDecl 0x7f9f1489c8c0 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1489bf60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1489bf20 '_Rp'
| |   | `-TypedefDecl 0x7f9f1489ca28 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f1489c9d0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1489c990 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1489bf60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1489bf20 '_Rp'
| |   |       `-PackExpansionType 0x7f9f1489c0d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f1489c040 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f1489bff8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1489d018 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1489caa0 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1489cb08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1489cb78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1489d330 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1489d3d8 <line:2342:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7f9f1489cb55 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7f9f1489cb50 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f1489cb08 '_Class'
| |   | |-TypedefDecl 0x7f9f1489d440 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1489cae0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1489caa0 '_Rp'
| |   | `-TypedefDecl 0x7f9f1489d5a8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f1489d550 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1489d510 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1489cae0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1489caa0 '_Rp'
| |   |       |-PackExpansionType 0x7f9f1489cc50 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f1489cbc0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f1489cb78 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1489e798 <line:2350:1, line:2356:1> line:2351:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1489d620 <line:2350:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1489d688 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1489d6f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1489eab0 <line:2351:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1489eb88 <line:2353:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7f9f1489eb50 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7f9f1489d6d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f1489d688 '_Class'
| |   | |-TypedefDecl 0x7f9f1489ebf0 <line:2354:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1489d660 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1489d620 '_Rp'
| |   | `-TypedefDecl 0x7f9f1489ed58 <line:2355:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f1489ed00 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1489ecc0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1489d660 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1489d620 '_Rp'
| |   |       `-PackExpansionType 0x7f9f1489d7d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f1489d740 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f1489d6f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1489f348 <line:2358:1, line:2364:1> line:2359:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1489edd0 <line:2358:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1489ee38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1489eea8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1489f660 <line:2359:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1489f738 <line:2361:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7f9f1489f700 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7f9f1489ee80 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f1489ee38 '_Class'
| |   | |-TypedefDecl 0x7f9f1489f7a0 <line:2362:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1489ee10 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1489edd0 '_Rp'
| |   | `-TypedefDecl 0x7f9f1489f908 <line:2363:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f1489f8b0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1489f870 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1489ee10 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1489edd0 '_Rp'
| |   |       |-PackExpansionType 0x7f9f1489ef80 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f1489eef0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f1489eea8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1489fef8 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1489f980 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1489f9e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1489fa58 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f148a0210 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f148a02e8 <line:2369:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7f9f148a02b0 'const _Class &' dependent
| |   | |   `-QualType 0x7f9f1489fa31 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7f9f1489fa30 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f1489f9e8 '_Class'
| |   | |-TypedefDecl 0x7f9f148a0350 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1489f9c0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1489f980 '_Rp'
| |   | `-TypedefDecl 0x7f9f139378f8 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f139378a0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f13937860 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1489f9c0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1489f980 '_Rp'
| |   |       `-PackExpansionType 0x7f9f1489fb30 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f1489faa0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f1489fa58 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13937ee8 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f13937970 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f139379d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13937a48 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f13938200 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f139382d8 <line:2377:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7f9f139382a0 'const _Class &' dependent
| |   | |   `-QualType 0x7f9f13937a21 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7f9f13937a20 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f139379d8 '_Class'
| |   | |-TypedefDecl 0x7f9f13938340 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f139379b0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f13937970 '_Rp'
| |   | `-TypedefDecl 0x7f9f139384a8 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f13938450 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f13938410 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f139379b0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f13937970 '_Rp'
| |   |       |-PackExpansionType 0x7f9f13937b20 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f13937a90 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f13937a48 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13938a98 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f13938520 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13938588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f139385f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f13938db0 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f13938e88 <line:2385:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7f9f13938e50 'volatile _Class &' dependent
| |   | |   `-QualType 0x7f9f139385d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7f9f139385d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f13938588 '_Class'
| |   | |-TypedefDecl 0x7f9f13938ef0 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f13938560 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f13938520 '_Rp'
| |   | `-TypedefDecl 0x7f9f13939058 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f13939000 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f13938fc0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f13938560 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f13938520 '_Rp'
| |   |       `-PackExpansionType 0x7f9f139386d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f13938640 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f139385f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13939648 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f139390d0 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13939138 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f139391a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f13939970 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f13939a48 <line:2393:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7f9f13939a10 'volatile _Class &' dependent
| |   | |   `-QualType 0x7f9f13939184 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7f9f13939180 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f13939138 '_Class'
| |   | |-TypedefDecl 0x7f9f13939ab0 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f13939110 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f139390d0 '_Rp'
| |   | `-TypedefDecl 0x7f9f13939c18 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f13939bc0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f13939b80 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f13939110 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f139390d0 '_Rp'
| |   |       |-PackExpansionType 0x7f9f13939280 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f139391f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f139391a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1393a208 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f13939c90 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13939cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13939d68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1393a520 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1393a5f8 <line:2401:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7f9f1393a5c0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7f9f13939d45 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7f9f13939d40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f13939cf8 '_Class'
| |   | |-TypedefDecl 0x7f9f1393a660 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f13939cd0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f13939c90 '_Rp'
| |   | `-TypedefDecl 0x7f9f1393a7c8 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f1393a770 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1393a730 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f13939cd0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f13939c90 '_Rp'
| |   |       `-PackExpansionType 0x7f9f13939e40 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f13939db0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f13939d68 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1393adb8 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1393a840 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1393a8a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1393a918 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1393b0d0 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1393b1a8 <line:2409:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7f9f1393b170 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7f9f1393a8f5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7f9f1393a8f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f1393a8a8 '_Class'
| |   | |-TypedefDecl 0x7f9f1393b210 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1393a880 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1393a840 '_Rp'
| |   | `-TypedefDecl 0x7f9f1393b378 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f1393b320 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1393b2e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1393a880 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1393a840 '_Rp'
| |   |       |-PackExpansionType 0x7f9f1393a9f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f1393a960 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f1393a918 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1393c398 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1393b3f0 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1393b458 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1393b4c8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1393c6b0 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1393c7b8 <line:2417:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7f9f1393c780 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7f9f1393b4a0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f1393b458 '_Class'
| |   | |-TypedefDecl 0x7f9f1393c820 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1393b430 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1393b3f0 '_Rp'
| |   | `-TypedefDecl 0x7f9f1393c988 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f1393c930 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1393c8f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1393b430 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1393b3f0 '_Rp'
| |   |       `-PackExpansionType 0x7f9f1393b5a0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f1393b510 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f1393b4c8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1393cf78 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1393ca00 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1393ca68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1393cad8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1393d290 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1393d368 <line:2425:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7f9f1393d330 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7f9f1393cab0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7f9f1393ca68 '_Class'
| |   | |-TypedefDecl 0x7f9f1393d3d0 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1393ca40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1393ca00 '_Rp'
| |   | `-TypedefDecl 0x7f9f1393d538 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f1393d4e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1393d4a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1393ca40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1393ca00 '_Rp'
| |   |       |-PackExpansionType 0x7f9f1393cbb0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f1393cb20 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f1393cad8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1393db28 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1393d5b0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1393d618 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1393d688 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1393de40 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1393df48 <line:2433:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7f9f1393df10 'const _Class &&' dependent
| |   | |   `-QualType 0x7f9f1393d661 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7f9f1393d660 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f1393d618 '_Class'
| |   | |-TypedefDecl 0x7f9f1393dfb0 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1393d5f0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1393d5b0 '_Rp'
| |   | `-TypedefDecl 0x7f9f1393e118 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f1393e0c0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1393e080 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1393d5f0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1393d5b0 '_Rp'
| |   |       `-PackExpansionType 0x7f9f1393d760 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f1393d6d0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f1393d688 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1393f308 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1393e190 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1393ee00 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1393ee68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f1393f620 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f1393f6f8 <line:2441:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7f9f1393f6c0 'const _Class &&' dependent
| |   | |   `-QualType 0x7f9f1393ee41 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7f9f1393ee40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f1393ee00 '_Class'
| |   | |-TypedefDecl 0x7f9f1393f760 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1393e1d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1393e190 '_Rp'
| |   | `-TypedefDecl 0x7f9f1393f8c8 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f1393f870 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f1393f830 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1393e1d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1393e190 '_Rp'
| |   |       |-PackExpansionType 0x7f9f1393ef40 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f1393eeb0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f1393ee68 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1393feb8 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f1393f940 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1393f9a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1393fa18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f139401d0 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f139402d8 <line:2449:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7f9f139402a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7f9f1393f9f4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7f9f1393f9f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f1393f9a8 '_Class'
| |   | |-TypedefDecl 0x7f9f13940340 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f1393f980 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f1393f940 '_Rp'
| |   | `-TypedefDecl 0x7f9f139404a8 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f13940450 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f13940410 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f1393f980 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f1393f940 '_Rp'
| |   |       `-PackExpansionType 0x7f9f1393faf0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f1393fa60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f1393fa18 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13940a98 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f13940520 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13940588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f139405f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f13941600 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f139416d8 <line:2457:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7f9f139416a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7f9f139405d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7f9f139405d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f13940588 '_Class'
| |   | |-TypedefDecl 0x7f9f13941740 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f13940560 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f13940520 '_Rp'
| |   | `-TypedefDecl 0x7f9f139418a8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f13941850 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f13941810 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f13940560 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f13940520 '_Rp'
| |   |       |-PackExpansionType 0x7f9f139406d0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f13940640 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f139405f8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13941e98 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f13941920 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13941988 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f139419f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f139421b0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f139422b8 <line:2465:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7f9f13942280 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7f9f139419d5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7f9f139419d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f13941988 '_Class'
| |   | |-TypedefDecl 0x7f9f13942320 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f13941960 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f13941920 '_Rp'
| |   | `-TypedefDecl 0x7f9f13942488 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7f9f13942430 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f139423f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f13941960 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f13941920 '_Rp'
| |   |       `-PackExpansionType 0x7f9f13941ad0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7f9f13941a40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7f9f139419f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13942a78 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f13942500 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13942568 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f139425d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7f9f13942d90 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f13942e68 <line:2473:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7f9f13942e30 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7f9f139425b5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7f9f139425b0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7f9f13942568 '_Class'
| |   | |-TypedefDecl 0x7f9f13942ed0 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7f9f13942540 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7f9f13942500 '_Rp'
| |   | `-TypedefDecl 0x7f9f13943038 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7f9f13942fe0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7f9f13942fa0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7f9f13942540 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7f9f13942500 '_Rp'
| |   |       |-PackExpansionType 0x7f9f139426b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7f9f13942620 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7f9f139425d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13943408 <line:2740:1, line:2745:1> line:2741:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7f9f139430b0 <line:2740:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13943118 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7f9f13944350 <line:2741:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7f9f139443f8 <line:2743:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7f9f13943160 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7f9f13943118 '_Class'
| |   | `-TypedefDecl 0x7f9f13944460 <line:2744:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7f9f139430f0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7f9f139430b0 '_Rp'
| |   |-ClassTemplateDecl 0x7f9f139445f8 <line:2747:1, line:2756:1> line:2748:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7f9f139444d8 <line:2747:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7f9f13944560 <line:2748:1, line:2756:1> line:2748:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7f9f13944d78 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7f9f13944f48 <line:2759:1, line:2760:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7f9f13944e30 <line:2759:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7f9f13944eb0 <line:2760:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7f9f139451c0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139454e8 <line:2762:1, line:2765:1> line:2763:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7f9f13945278 <line:2762:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7f9f139452e8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7f9f13945730 <line:2763:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7f9f139457d8 <line:2764:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7f9f13945330 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7f9f139452e8 '_ClassType'
| |   |-ClassTemplateDecl 0x7f9f13945968 <line:2769:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7f9f13945850 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7f9f139458d0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7f9f13945b78 <line:2921:1, line:2924:1> line:2921:11 __is_construct
| |   | `-CXXRecordDecl 0x7f9f13945be0 <line:2923:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7f9f13945d08 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7f9f13945f80 <line:3043:1, line:3046:6> line:3044:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f13945dc0 <line:3043:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f13945e28 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7f9f13945ee8 <line:3044:1, line:3046:6> line:3044:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7f9f13946690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13946898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3044:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7f9f13946a98 <line:3234:1, line:3237:6> line:3235:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f13946950 <line:3234:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13946a00 <line:3235:1, line:3237:6> line:3235:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7f9f13946d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13946e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3235:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7f9f13947078 <line:3246:1, line:3249:88> line:3247:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f13946f30 <line:3246:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13946fe0 <line:3247:1, line:3249:88> line:3247:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f139472f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f139476e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3247:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7f9f139478e8 <line:3258:1, line:3265:6> line:3259:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f139477a0 <line:3258:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13947850 <line:3259:1, line:3265:6> line:3259:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f13947b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13947e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3259:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7f9f139480c0 <line:3278:1, line:3282:1> line:3279:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f13947f00 <line:3278:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f13947f68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7f9f13948028 <line:3279:1, line:3282:1> line:3279:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7f9f139483c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1391ba00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3279:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7f9f1391bc08 <line:3406:1, line:3408:6> line:3406:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f1391bab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1391bb70 <col:22, line:3408:6> line:3406:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7f9f1391be80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1391bfe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3406:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7f9f1391c1e8 <line:3417:1, line:3419:6> line:3417:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f1391c0a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1391c150 <col:22, line:3419:6> line:3417:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f1391c460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1391c7d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3417:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7f9f1391c9d8 <line:3428:1, line:3434:6> line:3428:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f1391c890 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1391c940 <col:22, line:3434:6> line:3428:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f1391cc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1391cf38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3428:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7f9f1391d180 <line:3445:1, line:3449:1> line:3446:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f1391cff0 <line:3445:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1391d058 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7f9f1391d0e8 <line:3446:1, line:3449:1> line:3446:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7f9f1391d5d8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7f9f1391d7d8 <line:3486:1, line:3488:88> line:3486:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f1391d690 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1391d740 <col:22, line:3488:88> line:3486:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f13927c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13928138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3486:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7f9f13928338 <line:3497:1, line:3504:6> line:3497:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f139281f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f139282a0 <col:22, line:3504:6> line:3497:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f139285b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13928978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3497:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7f9f13928b78 <line:3515:1, line:3516:101> line:3515:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7f9f13928a30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13928ae0 <col:22, line:3516:101> line:3515:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f13928df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13929138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3515:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7f9f13929460 <line:3552:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7f9f13929200 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7f9f13929268 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7f9f139292c0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f13929328 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7f9f139293c8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1394c600 <line:3554:1, line:3558:1> line:3555:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7f9f139297a8 <line:3554:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f13929818 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7f9f1394cc48 <line:3555:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7f9f1394cf30 <line:3560:1, line:3561:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7f9f1394cd00 <line:3560:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f1394ce98 <line:3561:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7f9f1394cd90 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7f9f1394cf88 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1394d310 <line:3563:1, line:3567:1> line:3564:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7f9f1394cfa0 <line:3563:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1394d008 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7f9f1394d9c8 <line:3564:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1394dea0 <line:3569:1, line:3573:1> line:3570:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7f9f1394dbf8 <col:69> '_Bool' NonTypeTemplateParm 0x7f9f1394daf8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7f9f1394da80 <line:3569:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1394daf8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7f9f1394db50 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7f9f1394e240 <line:3570:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7f9f1394e4c0 <line:3575:1, line:3579:1> line:3576:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f1394e2f8 <line:3575:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f1394e368 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7f9f1394e428 <line:3576:1, line:3579:1> line:3576:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7f9f1394e8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1394ee08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3576:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1394f170 <line:3581:1, line:3585:1> line:3582:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7f9f1394eec0 <line:3581:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1394ef38 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7f9f1394f2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1394f818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3582:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7f9f1394fa18 <line:3704:1, line:3706:6> line:3704:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f1394f8d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1394f980 <col:22, line:3706:6> line:3704:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7f9f1394fc90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1394fdf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3704:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7f9f1394fff8 <line:3715:1, line:3717:88> line:3715:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f1394feb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1394ff60 <col:22, line:3717:88> line:3715:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f13950270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13952678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3715:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7f9f13952878 <line:3726:1, line:3732:6> line:3726:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7f9f13952730 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f139527e0 <col:22, line:3732:6> line:3726:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f13952af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13952dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3726:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7f9f13953098 <line:3743:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7f9f13952ea0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7f9f13952ef8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f13952f68 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7f9f13953000 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13953608 <line:3745:1, line:3749:1> line:3746:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7f9f13953338 <line:3745:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f139533a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7f9f13953930 <line:3746:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13953cb8 <line:3751:1, line:3755:1> line:3752:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7f9f139539e8 <line:3751:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f13953a58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7f9f13954358 <line:3752:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7f9f13956600 <line:3757:1, line:3761:1> line:3758:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f13954410 <line:3757:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7f9f13954478 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7f9f13954538 <line:3758:1, line:3761:1> line:3758:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7f9f139568a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13956c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3758:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7f9f13956e18 <line:3814:1, line:3816:88> line:3814:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f13956cd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13956d80 <col:22, line:3816:88> line:3814:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f13957090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13957568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3814:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7f9f13957768 <line:3825:1, line:3832:6> line:3825:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7f9f13957620 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f139576d0 <col:22, line:3832:6> line:3825:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7f9f139579e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f13957da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3825:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7f9f13957ff0 <line:3843:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7f9f13957e70 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7f9f13957ec8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7f9f13957f58 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13958430 <line:3845:1, line:3849:1> line:3846:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f13958248 <line:3845:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13959700 <line:3846:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139599a0 <line:3851:1, line:3855:1> line:3852:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f139597b8 <line:3851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13959f48 <line:3852:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7f9f1395a148 <line:3857:1, line:3861:1> line:3858:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7f9f1395a000 <line:3857:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395a0b0 <line:3858:1, line:3861:1> line:3858:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7f9f1395a3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1395a678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3858:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1395a9b8 <line:3863:1, line:3867:1> line:3864:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7f9f1395a730 <line:3863:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1395a7a8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7f9f1395ab08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1395acf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3864:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1395af78 <line:3869:1, line:3873:1> line:3870:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7f9f1395adb0 <line:3869:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1395b0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1395b230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3870:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1395b4b8 <line:3877:1, line:3881:1> line:3878:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7f9f1395b2e8 <line:3877:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7f9f1395b600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1395b780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3878:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7f9f1395b988 <line:3909:1, line:3910:54> line:3909:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7f9f1395b838 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395b8f0 <col:22, line:3910:54> line:3909:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f1395bc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1395bde8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3909:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7f9f1395bfe8 <line:3929:1, line:3936:6> line:3929:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7f9f1395bea0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395bf50 <col:22, line:3936:6> line:3929:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f1395c260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1395c448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3929:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7f9f1395c648 <line:3945:1, line:3951:6> line:3945:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7f9f1395c500 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395c5b0 <col:22, line:3951:6> line:3945:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f1395c8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1395caa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7f9f1395cca8 <line:3960:1, line:3968:6> line:3960:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7f9f1395cb60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395cc10 <col:22, line:3968:6> line:3960:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f1395cf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1395d108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3960:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7f9f1395d308 <line:3977:1, line:3984:6> line:3977:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7f9f1395d1c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395d270 <col:22, line:3984:6> line:3977:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7f9f1395d580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7f9f1395e778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3977:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7f9f1395e948 <line:3991:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7f9f1395e830 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395e8b0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7f9f1395ec00 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1395eed8 <line:3992:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7f9f1395ecb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395f180 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7f9f1395f358 <line:3993:1, line:3994:74> line:3993:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7f9f1395f238 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1395f2c0 <col:22, line:3994:74> line:3993:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7f9f1395f7e8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7f9f1395f9b8 <line:4000:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7f9f1395f8a0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7f9f1395f920 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7f9f1395fc38 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7f9f1395fc38 <line:4002:1, line:4005:1> line:4003:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7f9f1395fe30 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13960298 <line:4007:1, line:4012:1> line:4008:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7f9f1395fee8 <line:4007:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7f9f1395ff58 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7f9f1395ffc8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7f9f139608e0 <line:4008:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13960ba8 <line:4014:1, line:4018:1> line:4015:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f13960998 <line:4014:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7f9f13960f68 <line:4015:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13961168 <line:4020:1, line:4024:1> line:4021:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7f9f13961020 <line:4020:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7f9f139613d0 <line:4021:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7f9f139615b8 <line:4023:5, col:60> col:5
| |   |   |-BinaryOperator 0x7f9f139614d0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7f9f13961478 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7f9f139614b8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7f9f13961498 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7f9f13961578 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139617d8 <line:4026:1, line:4030:1> line:4027:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7f9f13961610 <line:4026:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13961b28 <line:4027:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13961da8 <line:4032:1, line:4036:1> line:4033:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7f9f13961be0 <line:4032:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f139620f8 <line:4033:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13962600 <line:4038:1, line:4042:1> line:4039:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7f9f139621b0 <line:4038:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13962218 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13962968 <line:4039:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13962d88 <line:4044:1, line:4047:1> line:4045:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7f9f13962a20 <line:4044:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13963010 <line:4045:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139633d8 <line:4049:1, line:4053:1> line:4050:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7f9f139630c8 <line:4049:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13963138 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13963738 <line:4050:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13963a78 <line:4055:1, line:4058:1> line:4056:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7f9f139637f0 <line:4055:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13963cf0 <line:4056:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139641f8 <line:4060:1, line:4064:1> line:4061:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7f9f13963da8 <line:4060:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13963e18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13963e88 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13964600 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13964b08 <line:4066:1, line:4070:1> line:4067:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7f9f139646b8 <line:4066:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13964728 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13964798 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13964e78 <line:4067:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13965378 <line:4072:1, line:4076:1> line:4073:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7f9f13964f30 <line:4072:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13964f98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13965008 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f139656e8 <line:4073:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13965be8 <line:4078:1, line:4082:1> line:4079:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7f9f139657a0 <line:4078:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13965808 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13965878 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13965f58 <line:4079:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13966458 <line:4084:1, line:4088:1> line:4085:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7f9f13966010 <line:4084:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13966078 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f139660e8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f139671d8 <line:4085:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139676d8 <line:4090:1, line:4094:1> line:4091:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7f9f13967290 <line:4090:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f139672f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13967368 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13967a48 <line:4091:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13967f48 <line:4096:1, line:4100:1> line:4097:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7f9f13967b00 <line:4096:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13967b68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13967bd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f139682b8 <line:4097:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139687b8 <line:4102:1, line:4106:1> line:4103:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7f9f13968370 <line:4102:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f139683d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13968448 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13968b28 <line:4103:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13969040 <line:4108:1, line:4112:1> line:4109:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7f9f13968be0 <line:4108:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13968c48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13968cb8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f139693a8 <line:4109:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139698a8 <line:4114:1, line:4118:1> line:4115:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7f9f13969460 <line:4114:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f139694c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13969538 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f13969c18 <line:4115:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1396a118 <line:4120:1, line:4124:1> line:4121:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7f9f13969cd0 <line:4120:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f13969d38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f13969da8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f1396a488 <line:4121:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1396a988 <line:4126:1, line:4130:1> line:4127:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7f9f1396a540 <line:4126:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1396a5a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7f9f1396a618 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7f9f1396acf8 <line:4127:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1396b088 <line:4132:1, line:4136:1> line:4133:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7f9f1396adb0 <line:4132:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7f9f1396ae18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7f9f1396b3e8 <line:4133:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7f9f1396c0a0 <line:4139:1, line:4147:8> line:4143:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7f9f1396b4a0 <line:4139:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1396b508 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1396b6a0 <line:4140:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396b830 <line:4141:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396ba50 <line:4142:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7f9f1396c040 <line:4143:1, line:4147:8> line:4143:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7f9f1396bfd0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1396c9f0 <line:4149:1, line:4156:8> line:4152:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7f9f1396c0f0 <line:4149:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1396c158 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1396c2f0 <line:4150:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396c480 <line:4151:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7f9f1396c990 <line:4152:1, line:4156:8> line:4152:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7f9f1396c920 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1396e810 <line:4158:1, line:4167:8> line:4162:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7f9f1396ca40 <line:4158:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1396caa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1396cc40 <line:4159:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396cdd0 <line:4160:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396cf60 <line:4161:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7f9f1396e7b0 <line:4162:1, line:4167:8> line:4162:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7f9f1396e740 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1396f330 <line:4169:1, line:4177:8> line:4173:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7f9f1396e860 <line:4169:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1396e8c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1396ea60 <line:4170:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396ebf0 <line:4171:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396ed80 <line:4172:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7f9f1396f2d0 <line:4173:1, line:4177:8> line:4173:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7f9f1396f260 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f1396fc10 <line:4179:1, line:4186:8> line:4182:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7f9f1396f380 <line:4179:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1396f3e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1396f580 <line:4180:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396f710 <line:4181:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7f9f1396fbb0 <line:4182:1, line:4186:8> line:4182:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7f9f1396fb40 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7f9f13971850 <line:4188:1, line:4197:8> line:4192:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7f9f1396fc60 <line:4188:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1396fcc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1396fe60 <line:4189:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f1396fff0 <line:4190:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7f9f13970180 <line:4191:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7f9f139717f0 <line:4192:1, line:4197:8> line:4192:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7f9f13971780 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7f9f13971c48 <line:4207:1, line:4208:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7f9f139718a0 <line:4207:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7f9f13971bb0 <line:4208:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7f9f13971930 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7f9f13971a68 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7f9f13971f98 <line:4210:1, line:4211:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7f9f13971ca8 <line:4210:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7f9f13971f00 <line:4211:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7f9f13971d40 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7f9f13971e18 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7f9f139758e8 <line:4215:1, line:4205:27> line:4219:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7f9f13971ff8 <line:4215:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13972068 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f139720d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7f9f13972c28 <line:4216:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f13975850 <line:4217:1, line:4205:27> line:4219:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7f9f13972d38 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13972dd8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7f9f13972f18 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7f9f13975d38 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13975d20 <col:7, line:4220:88>
| |   |   |   `-CallExpr 0x7f9f13975cf0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7f9f13975b60 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7f9f13975b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7f9f13975ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7f9f13975a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     |   | `-DeclRefExpr 0x7f9f13975ab8 <col:44> '_A0' lvalue ParmVar 0x7f9f13972dd8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7f9f13975b10 <col:51> '_Fp' lvalue ParmVar 0x7f9f13972d38 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7f9f13975cd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f13975ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7f9f13975bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |         `-DeclRefExpr 0x7f9f13975c78 <col:78> '_Args &&...' lvalue ParmVar 0x7f9f13972f18 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7f9f13975950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13975998 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13977200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4222:1, line:4205:27> line:4226:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7f9f13975d58 <line:4222:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13975dc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f13975e38 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7f9f13976668 <line:4223:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f13977140 <line:4224:1, line:4205:27> line:4226:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7f9f13976778 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13976818 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7f9f139768f8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7f9f13977650 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13977638 <col:7, line:4227:88>
| |   |   |   `-CallExpr 0x7f9f13977608 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7f9f13977478 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7f9f13977450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7f9f139773f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7f9f13977330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     |   | `-DeclRefExpr 0x7f9f139773d0 <col:44> '_A0' lvalue ParmVar 0x7f9f13976818 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7f9f13977428 <col:51> '_Fp' lvalue ParmVar 0x7f9f13976778 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7f9f139775e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f139775b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7f9f139774f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |         `-DeclRefExpr 0x7f9f13977590 <col:78> '_Args &&...' lvalue ParmVar 0x7f9f139768f8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7f9f13977268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f139772b0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13978a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4229:1, line:4205:27> line:4233:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7f9f13977670 <line:4229:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f139776d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f13977748 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7f9f13978008 <line:4230:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f139789f0 <line:4231:1, line:4205:27> line:4233:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7f9f13978118 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f139781b8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7f9f13978298 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7f9f13978e18 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13978e00 <col:7, line:4234:73>
| |   |   |   `-CallExpr 0x7f9f13978dd0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7f9f13978c40 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7f9f13978c18 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7f9f13978bc8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7f9f13978b70 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7f9f13978b48 <col:24> '_A0' lvalue ParmVar 0x7f9f139781b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7f9f13978bf0 <col:36> '_Fp' lvalue ParmVar 0x7f9f13978118 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7f9f13978db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4234:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f13978d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4234:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7f9f13978cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4234:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |         `-DeclRefExpr 0x7f9f13978d58 <col:63> '_Args &&...' lvalue ParmVar 0x7f9f13978298 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7f9f13978af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13978b38 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f1397a9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:1, line:4205:27> line:4240:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7f9f13978e38 <line:4236:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13978ea8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f13978f18 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7f9f1397a008 <line:4237:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f1397a960 <line:4238:1, line:4205:27> line:4240:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7f9f1397a118 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f1397a1b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7f9f1397a298 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7f9f1397ad88 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f1397ad70 <col:7, line:4241:73>
| |   |   |   `-CallExpr 0x7f9f1397ad40 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7f9f1397abb0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7f9f1397ab88 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7f9f1397ab38 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7f9f1397aae0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7f9f1397aab8 <col:24> '_A0' lvalue ParmVar 0x7f9f1397a1b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7f9f1397ab60 <col:36> '_Fp' lvalue ParmVar 0x7f9f1397a118 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7f9f1397ad20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4241:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f1397acf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4241:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7f9f1397ac28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4241:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |         `-DeclRefExpr 0x7f9f1397acc8 <col:63> '_Args &&...' lvalue ParmVar 0x7f9f1397a298 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7f9f1397aa60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f1397aaa8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f1397c608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:1, line:4205:27> line:4247:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7f9f1397ada8 <line:4243:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1397ae18 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1397ae88 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7f9f1397b9b8 <line:4244:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f1397c570 <line:4245:1, line:4205:27> line:4247:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7f9f1397bac8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f1397bb68 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7f9f1397bc48 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7f9f1397ca80 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f1397ca68 <col:7, line:4248:91>
| |   |   |   `-CallExpr 0x7f9f1397ca38 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7f9f1397c8a8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7f9f1397c880 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7f9f1397c838 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7f9f1397c818 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7f9f1397c7e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7f9f1397c720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     |   |     `-DeclRefExpr 0x7f9f1397c7c0 <col:46> '_A0' lvalue ParmVar 0x7f9f1397bb68 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7f9f1397c858 <col:54> '_Fp' lvalue ParmVar 0x7f9f1397bac8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7f9f1397ca18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f1397c9e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7f9f1397c920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |         `-DeclRefExpr 0x7f9f1397c9c0 <col:81> '_Args &&...' lvalue ParmVar 0x7f9f1397bc48 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7f9f1397c670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f1397c6b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f1397e6c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:1, line:4205:27> line:4254:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7f9f1397caa0 <line:4250:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1397cb08 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1397cb78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7f9f1397d508 <line:4251:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f1397e630 <line:4252:1, line:4205:27> line:4254:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7f9f1397d618 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f1397d6b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7f9f1397d798 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7f9f1397eb40 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f1397eb28 <col:7, line:4255:91>
| |   |   |   `-CallExpr 0x7f9f1397eaf8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7f9f1397e968 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7f9f1397e940 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7f9f1397e8f8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7f9f1397e8d8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7f9f1397e8a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7f9f1397e7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     |   |     `-DeclRefExpr 0x7f9f1397e880 <col:46> '_A0' lvalue ParmVar 0x7f9f1397d6b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7f9f1397e918 <col:54> '_Fp' lvalue ParmVar 0x7f9f1397d618 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7f9f1397ead8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f1397eaa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7f9f1397e9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |         `-DeclRefExpr 0x7f9f1397ea80 <col:81> '_Args &&...' lvalue ParmVar 0x7f9f1397d798 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7f9f1397e730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f1397e778 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f1397fd38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4205:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7f9f1397eb60 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1397ebc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f1397f5f8 <line:4260:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f1397fca0 <line:4261:1, line:4205:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7f9f1397f6f8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f1397f798 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7f9f1397ffa8 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f1397ff90 <col:7, line:4264:50>
| |   |   |   `-BinaryOperator 0x7f9f1397ff68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7f9f1397ff10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7f9f1397fe48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     | `-DeclRefExpr 0x7f9f1397fee8 <col:43> '_A0' lvalue ParmVar 0x7f9f1397f798 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7f9f1397ff40 <col:50> '_Fp' lvalue ParmVar 0x7f9f1397f6f8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7f9f1397fd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f1397fde0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13980f48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4205:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7f9f1397ffc8 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13980038 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f13980888 <line:4267:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f13980eb0 <line:4268:1, line:4205:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7f9f13980988 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13980a28 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7f9f139811b8 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f139811a0 <col:7, line:4271:50>
| |   |   |   `-BinaryOperator 0x7f9f13981178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7f9f13981120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7f9f13981058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     | `-DeclRefExpr 0x7f9f139810f8 <col:43> '_A0' lvalue ParmVar 0x7f9f13980a28 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7f9f13981150 <col:50> '_Fp' lvalue ParmVar 0x7f9f13980988 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7f9f13980fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13980ff0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13982098 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4273:1, line:4205:27> line:4277:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7f9f139811d8 <line:4273:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13981248 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f13981aa8 <line:4274:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f13982000 <line:4275:1, line:4205:27> line:4277:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7f9f13981ba8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13981c48 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7f9f13982268 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13982250 <col:7, line:4278:35>
| |   |   |   `-BinaryOperator 0x7f9f13982228 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7f9f139821d0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7f9f13982178 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7f9f13982150 <col:23> '_A0' lvalue ParmVar 0x7f9f13981c48 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7f9f13982200 <col:35> '_Fp' lvalue ParmVar 0x7f9f13981ba8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7f9f139820f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13982140 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13982f58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:1, line:4205:27> line:4284:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7f9f13982288 <line:4280:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f139822f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f139829e8 <line:4281:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f13982ec0 <line:4282:1, line:4205:27> line:4284:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7f9f13982ae8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13982b88 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7f9f13983120 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13983108 <col:7, line:4285:35>
| |   |   |   `-BinaryOperator 0x7f9f139830e0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7f9f13983090 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7f9f13983038 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7f9f13983010 <col:23> '_A0' lvalue ParmVar 0x7f9f13982b88 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7f9f139830b8 <col:35> '_Fp' lvalue ParmVar 0x7f9f13982ae8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7f9f13982fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13983000 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13984498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:1, line:4205:27> line:4291:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7f9f13983140 <line:4287:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f139831a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f13983cd8 <line:4288:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f13984400 <line:4289:1, line:4205:27> line:4291:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7f9f13983dd8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13983e78 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7f9f13984748 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13984730 <col:7, line:4292:53>
| |   |   |   `-BinaryOperator 0x7f9f13984708 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7f9f139846c0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7f9f139846a0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7f9f13984670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4292:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7f9f139845a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4292:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     |     `-DeclRefExpr 0x7f9f13984648 <col:45> '_A0' lvalue ParmVar 0x7f9f13983e78 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7f9f139846e0 <col:53> '_Fp' lvalue ParmVar 0x7f9f13983dd8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7f9f139844f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13984540 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f139858a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4294:1, line:4205:27> line:4298:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7f9f13984768 <line:4294:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f139847d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7f9f13985168 <line:4295:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7f9f13985810 <line:4296:1, line:4205:27> line:4298:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7f9f13985268 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13985308 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7f9f13985b58 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13985b40 <col:7, line:4299:53>
| |   |   |   `-BinaryOperator 0x7f9f13985b18 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7f9f13985ad0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7f9f13985ab0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7f9f13985a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4299:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7f9f139859b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4299:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     |     `-DeclRefExpr 0x7f9f13985a58 <col:45> '_A0' lvalue ParmVar 0x7f9f13985308 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7f9f13985af0 <col:53> '_Fp' lvalue ParmVar 0x7f9f13985268 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7f9f13985908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13985950 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13987678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4205:27> line:4306:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7f9f13985b78 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13985be8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7f9f139875e0 <line:4304:1, line:4205:27> line:4306:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7f9f13985ce8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13985e28 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7f9f13987a38 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13987a20 <col:7, line:4307:80>
| |   |   |   `-CallExpr 0x7f9f139879f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7f9f13987850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7f9f13987788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     | `-DeclRefExpr 0x7f9f13987828 <col:43> '_Fp' lvalue ParmVar 0x7f9f13985ce8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7f9f139879d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f139879a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7f9f139878d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |         `-DeclRefExpr 0x7f9f13987978 <col:70> '_Args &&...' lvalue ParmVar 0x7f9f13985e28 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7f9f139876d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13987720 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13988468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4309:1, line:4205:27> line:4312:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7f9f13987a58 <line:4309:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13987ac8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7f9f139883d0 <line:4310:1, line:4205:27> line:4312:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7f9f13987bc8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7f9f13987ca8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7f9f13988828 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7f9f13988810 <col:7, line:4313:80>
| |   |   |   `-CallExpr 0x7f9f139887e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7f9f13988640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7f9f13988578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |     | `-DeclRefExpr 0x7f9f13988618 <col:43> '_Fp' lvalue ParmVar 0x7f9f13987bc8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7f9f139887c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f13988790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7f9f139886c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7f9f14895780 0x7f9f14895ca0
| |   |   |         `-DeclRefExpr 0x7f9f13988768 <col:70> '_Args &&...' lvalue ParmVar 0x7f9f13987ca8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7f9f139884c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13988510 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7f9f13988a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4336:1> line:4320:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7f9f13988848 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7f9f139888b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13988928 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7f9f139889c0 <line:4320:1, line:4336:1> line:4320:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7f9f13988e78 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7f9f139892b8 <line:4323:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7f9f13989280 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7f9f13989200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7f9f13988f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7f9f13971c48 0x7f9f139758e8 0x7f9f13978a88 0x7f9f1397c608 0x7f9f1397fd38 0x7f9f13982098 0x7f9f13984498 0x7f9f13987678
| |   |   |     |-CallExpr 0x7f9f139890a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7f9f13989010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   |   |     `-PackExpansionExpr 0x7f9f139891d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7f9f139891a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7f9f13989110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   |   `-VarDecl 0x7f9f13989328 <line:4326:5, line:4335:18> line:4326:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7f9f13989c40 <line:4327:9, line:4335:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7f9f1398a058 <line:4338:1, line:4339:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7f9f13989ca0 <line:4338:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f13989d08 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7f9f13989ff8 <line:4339:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7f9f13989ec0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7f9f1398a3c8 <line:4341:1, line:4344:1> line:4342:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7f9f1398a0b8 <line:4341:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7f9f1398a120 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7f9f1398a178 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7f9f1398a1e8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1398a258 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7f9f1398a330 <line:4342:1, line:4344:1> line:4342:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7f9f1398a7e0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7f9f1398a888 <line:4343:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7f9f1398a8e8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1398adb8 <line:4346:1, line:4356:1> line:4347:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7f9f1398a920 <line:4346:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7f9f1398a988 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1398a9f8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7f9f1398c400 <line:4347:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7f9f1398c4a8 <line:4349:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7f9f1398af20 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7f9f1398adb8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7f9f1398c760 <line:4351:5, line:4352:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7f9f1398c500 <line:4351:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7f9f1398c6c8 <line:4352:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7f9f1398c590 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7f9f1398c7c8 <line:4354:5, line:4355:76> line:4354:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7f9f1398cca8 <col:31, line:4355:76> '_Bool'
| |   |     `-CallExpr 0x7f9f1398cc78 <line:4354:40, line:4355:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7f9f1398c8c8 <line:4354:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7f9f1398c760
| |   |       `-CallExpr 0x7f9f1398cc40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7f9f1398c990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7f9f13971c48 0x7f9f139758e8 0x7f9f13978a88 0x7f9f1397c608 0x7f9f1397fd38 0x7f9f13982098 0x7f9f13984498 0x7f9f13987678
| |   |         |-CallExpr 0x7f9f1398caf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7f9f1398ca60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   |         `-PackExpansionExpr 0x7f9f1398cc20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:71> '<dependent type>'
| |   |           `-CallExpr 0x7f9f1398cbf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7f9f1398cb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1398d188 <line:4358:1, line:4363:1> line:4359:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7f9f1398ccf0 <line:4358:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7f9f1398cd58 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1398cdc8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7f9f1398d560 <line:4359:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7f9f1398d608 <line:4361:5, line:4362:75> line:4361:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7f9f1398d980 <col:31, line:4362:75> '_Bool'
| |   |     `-CallExpr 0x7f9f1398d948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7f9f1398d698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7f9f13971c48 0x7f9f139758e8 0x7f9f13978a88 0x7f9f1397c608 0x7f9f1397fd38 0x7f9f13982098 0x7f9f13984498 0x7f9f13987678
| |   |       |-CallExpr 0x7f9f1398d800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7f9f1398d768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   |       `-PackExpansionExpr 0x7f9f1398d928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:71> '<dependent type>'
| |   |         `-CallExpr 0x7f9f1398d900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7f9f1398d868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   |-TypeAliasTemplateDecl 0x7f9f1398e1d8 <line:4365:1, line:4371:5> line:4366:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7f9f1398d9c8 <line:4365:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7f9f1398da38 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1398daa8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7f9f1398e178 <line:4366:1, line:4371:5> line:4366:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7f9f1398dfb0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7f9f1398dd10 <line:4368:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7f9f1398de30 <line:4369:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7f9f1398e800 <line:4373:1, line:4379:1> line:4374:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7f9f1398e228 <line:4373:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1398e298 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7f9f1398e328 <line:4374:1, line:4379:1> line:4374:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7f9f1398f268 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f1398f628 <line:4383:1, line:4387:1> line:4384:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7f9f1398f320 <line:4383:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7f9f1398f388 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7f9f1398f780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7f9f1398f9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4384:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7f9f1398fcf0 <line:4390:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7f9f1398fab0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f1398fc90 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f1398fc20 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f1398fe58 <line:4424:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7f9f1398fd40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1398fdc0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7f9f13990188 <line:4425:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7f9f13990068 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f139900f0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7f9f13990d68 <line:4427:1, line:4444:1> line:4438:1 swap
| |   | |-TemplateTypeParmDecl 0x7f9f13990398 <line:4427:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f13990cd0 <line:4428:1, line:4444:1> line:4438:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7f9f139908b8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7f9f13990928 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7f9f13991248 <line:4440:1, line:4444:1>
| |   |   | |-DeclStmt 0x7f9f13990fd0 <line:4441:5, col:30>
| |   |   | | `-VarDecl 0x7f9f13990eb8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7f9f13990fa0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7f9f13990f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4441:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7f9f13990e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4441:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7f9f14895038
| |   |   | |       `-DeclRefExpr 0x7f9f13990f18 <col:25> '_Tp' lvalue ParmVar 0x7f9f139908b8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7f9f139910f0 <line:4442:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7f9f13990fe8 <col:5> '_Tp' lvalue ParmVar 0x7f9f139908b8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7f9f139910c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4442:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7f9f13991040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4442:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7f9f14895038
| |   |   | |   `-DeclRefExpr 0x7f9f13991098 <col:23> '_Tp' lvalue ParmVar 0x7f9f13990928 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7f9f13991220 <line:4443:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7f9f13991118 <col:5> '_Tp' lvalue ParmVar 0x7f9f13990928 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7f9f139911f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4443:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7f9f13991170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4443:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7f9f14895038
| |   |   |     `-DeclRefExpr 0x7f9f139911c8 <col:23> '_Tp' lvalue Var 0x7f9f13990eb8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7f9f13990dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13990e10 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f13991bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4446:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:739:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4451:1 swap
| |   | |-TemplateTypeParmDecl 0x7f9f13991278 <line:4446:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f139912f8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7f9f13991b40 <line:4447:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:739:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4451:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7f9f13991798 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7f9f139918e8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7f9f13991c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f13991c80 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f139922f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4453:1, line:4462:1> line:4456:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7f9f13991c90 <line:4453:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7f9f13991cf8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7f9f13992260 <line:4454:1, line:4462:1> line:4456:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7f9f13991dc8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7f9f13991e38 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7f9f139924d8 <line:4460:1, line:4462:1>
| |   |   | `-CallExpr 0x7f9f139924a0 <line:4461:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7f9f139923b0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7f9f13991bd8 0x7f9f13990d68
| |   |   |   |-UnaryOperator 0x7f9f13992438 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7f9f13992410 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7f9f13991dc8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7f9f13992480 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7f9f13992458 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7f9f13991e38 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7f9f13992358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f139923a0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7f9f139924f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4466:1, line:4505:1> line:4466:11 __detail
| |   | |-ClassTemplateDecl 0x7f9f139929f8 <line:4470:1, line:4486:1> line:4472:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7f9f13992560 <line:4470:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7f9f139925d8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7f9f139928e0 <line:4471:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7f9f139928a8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7f9f13992758 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7f9f13992718 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7f9f13992888 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7f9f13992848 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7f9f13992960 <line:4472:1, line:4486:1> line:4472:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7f9f13992d00 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7f9f139933b8 <line:4474:5, line:4476:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7f9f13992d98 <line:4474:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7f9f13992e08 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7f9f13993320 <line:4475:5, line:4476:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7f9f13993178 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7f9f13993678 <line:4477:5, line:4478:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7f9f13993410 <line:4477:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7f9f13993478 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7f9f139935e0 <line:4478:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7f9f13993520 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7f9f139938c8 <line:4481:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7f9f13993890 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7f9f13993828 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7f9f139937f8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7f9f13993708 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7f9f13993678 0x7f9f139933b8
| |   | |   |       `-IntegerLiteral 0x7f9f139937d8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7f9f13993b18 <line:4482:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7f9f13993ae0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7f9f13993a78 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7f9f13993a48 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7f9f13993958 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7f9f13993678 0x7f9f139933b8
| |   | |   |       `-IntegerLiteral 0x7f9f13993a28 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7f9f13993b80 <line:4484:5, line:4485:57> line:4484:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7f9f13993fb8 <col:31, line:4485:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7f9f13993da8 <line:4484:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7f9f13993d68 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7f9f13993f98 <line:4485:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7f9f13993f58 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7f9f139942c8 <line:4488:1, line:4489:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7f9f13994000 <line:4488:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7f9f13994068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7f9f139945f0 <line:4489:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7f9f13995140 <line:4491:1, line:4500:1> line:4492:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7f9f139946a8 <line:4491:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7f9f13994728 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7f9f13995028 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7f9f13994fd8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7f9f139950a8 <line:4492:1, line:4500:1> line:4492:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7f9f13995440 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7f9f139954e8 <line:4493:3, line:4496:66> line:4493:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7f9f13995ac8 <line:4495:7, line:4496:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7f9f139957e0 <line:4495:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7f9f139957a8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7f9f13995548 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7f9f13991bd8 0x7f9f13990d68
| |   | |       |   |-CallExpr 0x7f9f13995680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4495:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7f9f139955e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4495:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   | |       |   `-CallExpr 0x7f9f13995780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4495:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7f9f139956e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4495:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   | |       `-CXXNoexceptExpr 0x7f9f13995aa0 <line:4496:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7f9f13995a68 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7f9f13995808 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7f9f13991bd8 0x7f9f13990d68
| |   | |           |-CallExpr 0x7f9f13995940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4496:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7f9f139958a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4496:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   | |           `-CallExpr 0x7f9f13995a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4496:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7f9f139959a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4496:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7f9f14818a50
| |   | `-ClassTemplatePartialSpecializationDecl 0x7f9f13995dd8 <line:4502:1, line:4503:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7f9f13995b10 <line:4502:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7f9f13995b78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7f9f13996100 <line:4503:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7f9f139962d8 prev 0x7f9f1398fe58 <line:4507:1, line:4511:1> line:4508:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7f9f139961b8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13996240 prev 0x7f9f1398fdc0 <line:4508:1, line:4511:1> line:4508:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7f9f13996a48 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7f9f13996c98 prev 0x7f9f13990188 <line:4513:1, line:4517:1> line:4514:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7f9f13996b00 <line:4513:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13996c00 prev 0x7f9f139900f0 <line:4514:1, line:4517:1> line:4514:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7f9f139974c8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7f9f13997698 <line:4573:1, line:4577:1> line:4574:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7f9f13997580 <line:4573:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13997600 <line:4574:1, line:4577:1> line:4574:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7f9f13997910 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7f9f13997a50 <line:4576:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7f9f13997a00 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7f9f139975c0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7f9f13997580 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7f9f13997d10 <line:4580:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7f9f13997ac8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7f9f13997cb0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7f9f13997c40 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7f9f13997ff8 <line:4596:1, line:4601:1> line:4597:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7f9f13997d60 <line:4596:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7f9f13997ee8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7f9f13997e98 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7f9f13997f60 <line:4597:1, line:4601:1> line:4597:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7f9f139982c0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7f9f13998480 <line:4599:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7f9f13998410 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7f9f13998638 <line:4600:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7f9f13998600 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7f9f13998598 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7f9f13998558 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7f9f13998530 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7f9f13998500 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7f9f13998578 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f13998890 <line:4603:1, line:4604:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7f9f139986b0 <line:4603:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f13998b20 <line:4604:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7f9f1399a0e8 <line:4606:1, line:4607:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7f9f1399a020 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7f9f1399a238 <col:38, col:54>
| |   | | `-ReturnStmt 0x7f9f1399a220 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7f9f1399a208 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7f9f1399a1e0 <col:47> 'int' lvalue ParmVar 0x7f9f1399a020 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7f9f1399a188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7f9f1399a1d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7f9f1399a368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4609:1, line:4610:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7f9f1399a2a0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7f9f1399a4b8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7f9f1399a4a0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7f9f1399a488 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7f9f1399a460 <col:57> 'unsigned int' lvalue ParmVar 0x7f9f1399a2a0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7f9f1399a408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7f9f1399a450 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7f9f1399a5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4612:1, line:4613:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7f9f1399a520 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7f9f1399a738 <col:40, col:56>
| |   | | `-ReturnStmt 0x7f9f1399a720 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7f9f1399a708 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7f9f1399a6e0 <col:49> 'long' lvalue ParmVar 0x7f9f1399a520 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7f9f1399a688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7f9f1399a6d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7f9f1399a868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4615:1, line:4616:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7f9f1399a7a0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7f9f1399a9b8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7f9f1399a9a0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7f9f1399a988 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7f9f1399a960 <col:67> 'unsigned long' lvalue ParmVar 0x7f9f1399a7a0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7f9f1399a908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7f9f1399a950 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7f9f1399aae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4618:1, line:4619:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7f9f1399aa20 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7f9f1399ac38 <col:50, col:66>
| |   | | `-ReturnStmt 0x7f9f1399ac20 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7f9f1399ac08 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7f9f1399abe0 <col:59> 'long long' lvalue ParmVar 0x7f9f1399aa20 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7f9f1399ab88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7f9f1399abd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7f9f1399ad68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4621:1, line:4622:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7f9f1399aca0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7f9f1399aeb8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7f9f1399aea0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7f9f1399ae88 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7f9f1399ae60 <col:76> 'unsigned long long' lvalue ParmVar 0x7f9f1399aca0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7f9f1399ae08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7f9f1399ae50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7f9f1399b020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7f9f1399af18 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7f9f1399b170 <col:52, col:68>
| |   | | `-ReturnStmt 0x7f9f1399b158 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7f9f1399b140 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7f9f1399b118 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7f9f1399af18 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7f9f1399b0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7f9f1399b108 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7f9f1399b2d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7f9f1399b1d0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7f9f1399b420 <col:54, col:70>
| |   | | `-ReturnStmt 0x7f9f1399b408 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7f9f1399b3f0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7f9f1399b3c8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7f9f1399b1d0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7f9f1399b370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7f9f1399b3b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7f9f1399b968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4632:1, line:4635:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7f9f1399b440 <line:4632:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7f9f1399b8d0 <line:4633:1, line:4635:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7f9f1399b7c0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7f9f1399ba58 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7f9f1399ba40 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7f9f1399ba18 <col:43> '_Tp' lvalue ParmVar 0x7f9f1399b7c0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7f9f1399b9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7f9f1399ba08 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7f9f1399bb98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4639:1, line:4649:1> line:4640:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7f9f1399ba78 <line:4639:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1399bb00 <line:4640:1, line:4649:1> line:4640:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7f9f1399be10 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7f9f1399c518 <line:4642:5, line:4644:95> line:4643:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7f9f1399bea8 <line:4642:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7f9f1399c480 <line:4643:9, line:4644:95> line:4643:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7f9f1399bf48 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7f9f1399c7b8 <line:4645:5, line:4646:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7f9f1399c570 <line:4645:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7f9f1399c720 <line:4646:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7f9f1399c608 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7f9f1399c820 <line:4648:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7f9f1399ca58 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7f9f1399cbd8 <line:4651:1, line:4661:1> line:4652:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7f9f1399cab8 <line:4651:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1399cb40 <line:4652:1, line:4661:1> line:4652:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7f9f1399ce50 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7f9f1399d558 <line:4654:5, line:4656:94> line:4655:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7f9f1399cee8 <line:4654:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7f9f1399d4c0 <line:4655:9, line:4656:94> line:4655:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7f9f1399cf88 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7f9f1399d778 <line:4657:5, line:4658:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7f9f1399d5b0 <line:4657:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7f9f1399d6e0 <line:4658:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7f9f1399d648 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7f9f1399d7e0 <line:4660:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7f9f1399d9d8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7f9f1399db58 <line:4663:1, line:4667:2> line:4664:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7f9f1399da38 <line:4663:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7f9f1399dac0 <line:4664:1, line:4667:2> line:4664:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7f9f1399e9f8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7f9f1399eab0 <line:4693:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7f9f1399ebd8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7f9f1399ec90 <line:4694:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7f9f1399edb8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7f9f1399ee70 <line:4695:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7f9f1399ef98 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7f9f1399f3b8 <line:4697:1, line:4701:50> line:4699:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7f9f1399f050 <line:4697:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7f9f1399f0b8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7f9f1399f290 <line:4698:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7f9f1399f320 <line:4699:1, line:4701:50> line:4699:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7f9f1399faf0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139a00c8 <line:4703:1, line:4706:75> line:4704:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7f9f1399fba8 <line:4703:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7f9f1399fc18 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7f9f1399fc88 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7f9f1399fcf8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7f9f139b1a60 <line:4704:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7f9f139b1ec0 <line:4711:1, line:4714:65> line:4713:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7f9f139b1b18 <line:4711:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7f9f139b1b88 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7f9f139b1bf8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7f9f139b1d90 <line:4712:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7f9f139b1e28 <line:4713:1, line:4714:65> line:4713:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7f9f139b2508 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7f9f139b2960 <line:4718:1, line:4720:19> line:4719:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7f9f139b25c0 <line:4718:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7f9f139b2628 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7f9f139b2698 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7f9f139b2ce0 <line:4719:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7f9f139daec8 parent 0x7f9f1400a780 prev 0x7f9f14019950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:792:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:515:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-FunctionTemplateDecl 0x7f9f139b3000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:315:1, line:321:1> line:318:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7f9f139b2d98 <line:315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b2f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:1> line:318:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7f9f139b2e60 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b3770 <line:319:1, line:321:1>
| |   | `-ReturnStmt 0x7f9f139b3758 <line:320:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7f9f139b3740 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7f9f139b3720 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7f9f139b36f0 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7f9f139b3150 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7f9f139b30f8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7f9f139b30d8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7f9f139b30b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7f9f139b2e60 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7f9f139b3130 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7f9f139b32c8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7f9f139b32b0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7f9f139b3288 <col:37> 'int (float)' lvalue Function 0x7f9f138fd868 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7f9f139b3260 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7f9f139b3240 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7f9f139b31d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7f9f139b2e60 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7f9f139b36c0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7f9f139b3398 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7f9f139b3340 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7f9f139b3320 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7f9f139b32f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7f9f139b2e60 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7f9f139b3378 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7f9f139b3510 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7f9f139b34f8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7f9f139b34d0 <col:37> 'int (double)' lvalue Function 0x7f9f138ff5b0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7f9f139b34a8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7f9f139b3488 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7f9f139b3418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7f9f139b2e60 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7f9f139b3690 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7f9f139b3678 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7f9f139b3650 <col:37> 'int (long double)' lvalue Function 0x7f9f13901c88 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7f9f139b3628 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7f9f139b3608 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7f9f139b3598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7f9f139b2e60 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b3058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139b30a0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139b3d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:325:1, line:331:1> line:328:1 signbit
| | |-TemplateTypeParmDecl 0x7f9f139b3790 <line:325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b3cc8 <line:326:1, line:331:1> line:328:1 signbit 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139b3bb0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b4108 <line:329:1, line:331:1>
| |   | `-ReturnStmt 0x7f9f139b40f0 <line:330:5, col:73>
| |   |   `-CallExpr 0x7f9f139b40c0 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139b3e10 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7f9f139b3000
| |   |     `-CStyleCastExpr 0x7f9f139b4098 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139b4050 <col:65> '_A1' lvalue ParmVar 0x7f9f139b3bb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b3db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139b3e00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139b4398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:349:1, line:355:1> line:352:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7f9f139b4128 <line:349:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b4300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:355:1> line:352:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7f9f139b41f0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b4af0 <line:353:1, line:355:1>
| |   | `-ReturnStmt 0x7f9f139b4ad8 <line:354:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7f9f139b4ab8 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7f9f139b4a88 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7f9f139b44e8 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7f9f139b4490 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7f9f139b4470 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7f9f139b4448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7f9f139b41f0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7f9f139b44c8 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7f9f139b4660 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7f9f139b4648 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7f9f139b4620 <col:37> 'int (float)' lvalue Function 0x7f9f13863798 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7f9f139b45f8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7f9f139b45d8 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7f9f139b4568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7f9f139b41f0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7f9f139b4a58 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7f9f139b4730 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7f9f139b46d8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7f9f139b46b8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7f9f139b4690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7f9f139b41f0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7f9f139b4710 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7f9f139b48a8 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7f9f139b4890 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7f9f139b4868 <col:37> 'int (double)' lvalue Function 0x7f9f13863918 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7f9f139b4840 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7f9f139b4820 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7f9f139b47b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7f9f139b41f0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7f9f139b4a28 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7f9f139b4a10 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7f9f139b49e8 <col:37> 'int (long double)' lvalue Function 0x7f9f13863a98 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7f9f139b49c0 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7f9f139b49a0 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7f9f139b4930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7f9f139b41f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b43f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139b4438 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139b50a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:359:1, line:365:1> line:362:1 fpclassify
| | |-TemplateTypeParmDecl 0x7f9f139b4b10 <line:359:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b5008 <line:360:1, line:365:1> line:362:1 fpclassify 'typename std::enable_if<std::is_arithmetic<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139b4ef0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b5368 <line:363:1, line:365:1>
| |   | `-ReturnStmt 0x7f9f139b5350 <line:364:5, col:76>
| |   |   `-CallExpr 0x7f9f139b5320 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139b5150 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7f9f139b4398
| |   |     `-CStyleCastExpr 0x7f9f139b52f8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139b52b0 <col:68> '_A1' lvalue ParmVar 0x7f9f139b4ef0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b50f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139b5140 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139b55b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:1, line:389:1> line:386:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7f9f139b5388 <line:383:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b5518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:389:1> line:386:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7f9f139b5450 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b5d30 <line:387:1, line:389:1>
| |   | `-ReturnStmt 0x7f9f139b5d18 <line:388:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7f9f139b5d00 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7f9f139b5ce0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7f9f139b5cb0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7f9f139b5700 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7f9f139b56a8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7f9f139b5688 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7f9f139b5660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7f9f139b5450 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7f9f139b56e0 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7f9f139b5888 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7f9f139b5870 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7f9f139b5848 <col:37> 'int (float)' lvalue Function 0x7f9f138fa590 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7f9f139b5820 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7f9f139b5800 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7f9f139b5780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7f9f139b5450 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7f9f139b5c80 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7f9f139b5958 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7f9f139b5900 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7f9f139b58e0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7f9f139b58b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7f9f139b5450 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7f9f139b5938 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7f9f139b5ad0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7f9f139b5ab8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7f9f139b5a90 <col:37> 'int (double)' lvalue Function 0x7f9f138fae00 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7f9f139b5a68 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7f9f139b5a48 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7f9f139b59d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7f9f139b5450 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7f9f139b5c50 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7f9f139b5c38 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7f9f139b5c10 <col:37> 'int (long double)' lvalue Function 0x7f9f138fbb00 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7f9f139b5be8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7f9f139b5bc8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7f9f139b5b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7f9f139b5450 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b5608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139b5650 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139b61f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:393:1, line:399:1> line:396:1 isfinite
| | |-TemplateTypeParmDecl 0x7f9f139b5d50 <line:393:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b6158 <line:394:1, line:399:1> line:396:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139b6080 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b64b8 <line:397:1, line:399:1>
| |   | `-ReturnStmt 0x7f9f139b64a0 <line:398:5, col:74>
| |   |   `-CallExpr 0x7f9f139b6470 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139b62a0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7f9f139b55b0
| |   |     `-CStyleCastExpr 0x7f9f139b6448 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139b6400 <col:66> '_A1' lvalue ParmVar 0x7f9f139b6080 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b6248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139b6290 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139b6700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:407:1, line:413:1> line:410:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7f9f139b64d8 <line:407:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b6668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:413:1> line:410:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7f9f139b65a0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b6e70 <line:411:1, line:413:1>
| |   | `-ReturnStmt 0x7f9f139b6e58 <line:412:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7f9f139b6e40 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7f9f139b6e20 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7f9f139b6df0 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7f9f139b6850 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7f9f139b67f8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7f9f139b67d8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7f9f139b67b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7f9f139b65a0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7f9f139b6830 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7f9f139b69c8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7f9f139b69b0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7f9f139b6988 <col:37> 'int (float)' lvalue Function 0x7f9f138fc370 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7f9f139b6960 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7f9f139b6940 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7f9f139b68d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7f9f139b65a0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7f9f139b6dc0 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7f9f139b6a98 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7f9f139b6a40 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7f9f139b6a20 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7f9f139b69f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7f9f139b65a0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7f9f139b6a78 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7f9f139b6c10 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7f9f139b6bf8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7f9f139b6bd0 <col:37> 'int (double)' lvalue Function 0x7f9f138fc690 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7f9f139b6ba8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7f9f139b6b88 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7f9f139b6b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7f9f139b65a0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7f9f139b6d90 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7f9f139b6d78 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7f9f139b6d50 <col:37> 'int (long double)' lvalue Function 0x7f9f138fcdb0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7f9f139b6d28 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7f9f139b6d08 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7f9f139b6c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7f9f139b65a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b6758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139b67a0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139b7330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:417:1, line:423:1> line:420:1 isinf
| | |-TemplateTypeParmDecl 0x7f9f139b6e90 <line:417:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b7298 <line:418:1, line:423:1> line:420:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139b71c0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b75f8 <line:421:1, line:423:1>
| |   | `-ReturnStmt 0x7f9f139b75e0 <line:422:5, col:71>
| |   |   `-CallExpr 0x7f9f139b75b0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139b73e0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7f9f139b6700
| |   |     `-CStyleCastExpr 0x7f9f139b7588 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139b7540 <col:63> '_A1' lvalue ParmVar 0x7f9f139b71c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b7388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139b73d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139b7898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:431:1, line:437:1> line:434:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7f9f139b7618 <line:431:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b7800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:437:1> line:434:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7f9f139b76e0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b8008 <line:435:1, line:437:1>
| |   | `-ReturnStmt 0x7f9f139b7ff0 <line:436:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7f9f139b7fd8 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7f9f139b7fb8 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7f9f139b7f88 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7f9f139b79e8 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7f9f139b7990 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7f9f139b7970 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7f9f139b7948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7f9f139b76e0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7f9f139b79c8 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7f9f139b7b60 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7f9f139b7b48 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7f9f139b7b20 <col:37> 'int (float)' lvalue Function 0x7f9f138fd0d0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7f9f139b7af8 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7f9f139b7ad8 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7f9f139b7a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7f9f139b76e0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7f9f139b7f58 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7f9f139b7c30 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7f9f139b7bd8 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7f9f139b7bb8 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7f9f139b7b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7f9f139b76e0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7f9f139b7c10 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7f9f139b7da8 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7f9f139b7d90 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7f9f139b7d68 <col:37> 'int (double)' lvalue Function 0x7f9f138fd358 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7f9f139b7d40 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7f9f139b7d20 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7f9f139b7cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7f9f139b76e0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7f9f139b7f28 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7f9f139b7f10 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7f9f139b7ee8 <col:37> 'int (long double)' lvalue Function 0x7f9f138fd5e0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7f9f139b7ec0 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7f9f139b7ea0 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7f9f139b7e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7f9f139b76e0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b78f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139b7938 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139b84d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:441:1, line:447:1> line:444:1 isnan
| | |-TemplateTypeParmDecl 0x7f9f139b8028 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b8438 <line:442:1, line:447:1> line:444:1 isnan 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139b8360 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b8798 <line:445:1, line:447:1>
| |   | `-ReturnStmt 0x7f9f139b8780 <line:446:5, col:71>
| |   |   `-CallExpr 0x7f9f139b8750 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139b8580 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7f9f139b7898
| |   |     `-CStyleCastExpr 0x7f9f139b8728 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139b86e0 <col:63> '_A1' lvalue ParmVar 0x7f9f139b8360 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b8528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139b8570 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139b89e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:455:1, line:461:1> line:458:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7f9f139b87b8 <line:455:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b8948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:461:1> line:458:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7f9f139b8880 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b9150 <line:459:1, line:461:1>
| |   | `-ReturnStmt 0x7f9f139b9138 <line:460:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7f9f139b9120 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7f9f139b9100 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7f9f139b90d0 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7f9f139b8b30 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7f9f139b8ad8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7f9f139b8ab8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7f9f139b8a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7f9f139b8880 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7f9f139b8b10 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7f9f139b8ca8 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7f9f139b8c90 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7f9f139b8c68 <col:37> 'int (float)' lvalue Function 0x7f9f13903a38 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7f9f139b8c40 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7f9f139b8c20 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7f9f139b8bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7f9f139b8880 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7f9f139b90a0 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7f9f139b8d78 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7f9f139b8d20 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7f9f139b8d00 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7f9f139b8cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7f9f139b8880 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7f9f139b8d58 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7f9f139b8ef0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7f9f139b8ed8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7f9f139b8eb0 <col:37> 'int (double)' lvalue Function 0x7f9f13904290 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7f9f139b8e88 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7f9f139b8e68 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7f9f139b8df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7f9f139b8880 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7f9f139b9070 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7f9f139b9058 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7f9f139b9030 <col:37> 'int (long double)' lvalue Function 0x7f9f139046d8 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7f9f139b9008 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7f9f139b8fe8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7f9f139b8f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7f9f139b8880 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b8a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139b8a80 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139b9610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:465:1, line:471:1> line:468:1 isnormal
| | |-TemplateTypeParmDecl 0x7f9f139b9170 <line:465:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139b9578 <line:466:1, line:471:1> line:468:1 isnormal 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139b94a0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139b98d8 <line:469:1, line:471:1>
| |   | `-ReturnStmt 0x7f9f139b98c0 <line:470:5, col:74>
| |   |   `-CallExpr 0x7f9f139b9890 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139b96c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7f9f139b89e0
| |   |     `-CStyleCastExpr 0x7f9f139b9868 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139b9820 <col:66> '_A1' lvalue ParmVar 0x7f9f139b94a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139b9668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139b96b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139b9c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:479:1, line:485:1> line:482:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7f9f139b98f8 <line:479:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139b9968 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139b9bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:485:1> line:482:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7f9f139b9a38 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139b9aa8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139b9fc8 <line:483:1, line:485:1>
| |   | `-ReturnStmt 0x7f9f139b9fb0 <line:484:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7f9f139b9f78 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7f9f139b9ec0 <col:25> '<builtin fn type>' Function 0x7f9f139b9dd0 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7f9f139b9f10 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7f9f139b9ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:484:22> '_A1' lvalue ParmVar 0x7f9f139b9a38 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7f9f139b9f58 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7f9f139b9f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:484:32> '_A2' lvalue ParmVar 0x7f9f139b9aa8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139b9cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139b9d08 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139ba830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:489:1, line:501:1> line:497:1 isgreater
| | |-TemplateTypeParmDecl 0x7f9f139b9fe8 <line:489:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139ba058 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139ba798 <line:490:1, line:501:1> line:497:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139ba600 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139ba670 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139bad20 <line:498:1, line:501:1>
| |   | |-DeclStmt 0x7f9f139bab78 <line:499:5, col:57>
| |   | | `-TypedefDecl 0x7f9f139bab20 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139baab0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7f9f139bad08 <line:500:5, col:61>
| |   |   `-CallExpr 0x7f9f139bacd0 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139bab90 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7f9f139b9c60
| |   |     |-CStyleCastExpr 0x7f9f139bac48 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139bac10 <col:37> '_A1' lvalue ParmVar 0x7f9f139ba600 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139baca8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139bac70 <col:53> '_A2' lvalue ParmVar 0x7f9f139ba670 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139ba890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139ba8d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139bb070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:509:1, line:515:1> line:512:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7f9f139bad48 <line:509:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139badb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139bafd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:515:1> line:512:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7f9f139bae88 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139baef8 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139bb370 <line:513:1, line:515:1>
| |   | `-ReturnStmt 0x7f9f139bb358 <line:514:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7f9f139bb320 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7f9f139bb268 <col:30> '<builtin fn type>' Function 0x7f9f139bb178 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7f9f139bb2b8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7f9f139bb290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:514:27> '_A1' lvalue ParmVar 0x7f9f139bae88 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7f9f139bb300 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7f9f139bb2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:514:37> '_A2' lvalue ParmVar 0x7f9f139baef8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139bb0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139bb118 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139bba80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:519:1, line:531:1> line:527:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7f9f139bb390 <line:519:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139bb3f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139bb9e8 <line:520:1, line:531:1> line:527:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139bb890 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139bb900 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139bbea0 <line:528:1, line:531:1>
| |   | |-DeclStmt 0x7f9f139bbcf8 <line:529:5, col:57>
| |   | | `-TypedefDecl 0x7f9f139bbca0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139bbc30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7f9f139bbe88 <line:530:5, col:66>
| |   |   `-CallExpr 0x7f9f139bbe50 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139bbd10 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7f9f139bb070
| |   |     |-CStyleCastExpr 0x7f9f139bbdc8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139bbd90 <col:42> '_A1' lvalue ParmVar 0x7f9f139bb890 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139bbe28 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139bbdf0 <col:58> '_A2' lvalue ParmVar 0x7f9f139bb900 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139bbae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139bbb28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139bc1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:539:1, line:545:1> line:542:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7f9f139bbec8 <line:539:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139bbf38 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139bc158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:545:1> line:542:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7f9f139bc008 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139bc078 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139bc4f0 <line:543:1, line:545:1>
| |   | `-ReturnStmt 0x7f9f139bc4d8 <line:544:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7f9f139bc4a0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7f9f139bc3e8 <col:22> '<builtin fn type>' Function 0x7f9f139bc2f8 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7f9f139bc438 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7f9f139bc410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:544:19> '_A1' lvalue ParmVar 0x7f9f139bc008 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7f9f139bc480 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7f9f139bc458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:544:29> '_A2' lvalue ParmVar 0x7f9f139bc078 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139bc250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139bc298 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139bcbf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:549:1, line:561:1> line:557:1 isless
| | |-TemplateTypeParmDecl 0x7f9f139bc510 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139bc578 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139bcb58 <line:550:1, line:561:1> line:557:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139bca00 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139bca70 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139bd010 <line:558:1, line:561:1>
| |   | |-DeclStmt 0x7f9f139bce68 <line:559:5, col:57>
| |   | | `-TypedefDecl 0x7f9f139bce10 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139bcda0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7f9f139bcff8 <line:560:5, col:58>
| |   |   `-CallExpr 0x7f9f139bcfc0 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139bce80 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7f9f139bc1f0
| |   |     |-CStyleCastExpr 0x7f9f139bcf38 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139bcf00 <col:34> '_A1' lvalue ParmVar 0x7f9f139bca00 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139bcf98 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139bcf60 <col:50> '_A2' lvalue ParmVar 0x7f9f139bca70 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139bcc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139bcc98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139bd360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:569:1, line:575:1> line:572:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7f9f139bd038 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139bd0a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139bd2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:575:1> line:572:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7f9f139bd178 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139bd1e8 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139bd660 <line:573:1, line:575:1>
| |   | `-ReturnStmt 0x7f9f139bd648 <line:574:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7f9f139bd610 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7f9f139bd558 <col:27> '<builtin fn type>' Function 0x7f9f139bd468 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7f9f139bd5a8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7f9f139bd580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:574:24> '_A1' lvalue ParmVar 0x7f9f139bd178 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7f9f139bd5f0 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7f9f139bd5c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:574:34> '_A2' lvalue ParmVar 0x7f9f139bd1e8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139bd3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139bd408 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139bdda0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:579:1, line:591:1> line:587:1 islessequal
| | |-TemplateTypeParmDecl 0x7f9f139bd680 <line:579:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139bd6e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139bdd08 <line:580:1, line:591:1> line:587:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139bdbb0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139bdc20 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139be1c0 <line:588:1, line:591:1>
| |   | |-DeclStmt 0x7f9f139be018 <line:589:5, col:57>
| |   | | `-TypedefDecl 0x7f9f139bdfc0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139bdf50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7f9f139be1a8 <line:590:5, col:63>
| |   |   `-CallExpr 0x7f9f139be170 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139be030 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7f9f139bd360
| |   |     |-CStyleCastExpr 0x7f9f139be0e8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139be0b0 <col:39> '_A1' lvalue ParmVar 0x7f9f139bdbb0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139be148 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139be110 <col:55> '_A2' lvalue ParmVar 0x7f9f139bdc20 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139bde00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139bde48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139be510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:599:1, line:605:1> line:602:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7f9f139be1e8 <line:599:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139be258 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139be478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:605:1> line:602:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7f9f139be328 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139be398 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139be810 <line:603:1, line:605:1>
| |   | `-ReturnStmt 0x7f9f139be7f8 <line:604:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7f9f139be7c0 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7f9f139be708 <col:29> '<builtin fn type>' Function 0x7f9f139be618 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7f9f139be758 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7f9f139be730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:604:26> '_A1' lvalue ParmVar 0x7f9f139be328 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7f9f139be7a0 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7f9f139be778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:604:36> '_A2' lvalue ParmVar 0x7f9f139be398 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139be570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139be5b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139bef10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:609:1, line:621:1> line:617:1 islessgreater
| | |-TemplateTypeParmDecl 0x7f9f139be830 <line:609:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139be898 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139bee78 <line:610:1, line:621:1> line:617:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139bed20 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139bed90 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139bf330 <line:618:1, line:621:1>
| |   | |-DeclStmt 0x7f9f139bf188 <line:619:5, col:57>
| |   | | `-TypedefDecl 0x7f9f139bf130 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139bf0c0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7f9f139bf318 <line:620:5, col:65>
| |   |   `-CallExpr 0x7f9f139bf2e0 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139bf1a0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7f9f139be510
| |   |     |-CStyleCastExpr 0x7f9f139bf258 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139bf220 <col:41> '_A1' lvalue ParmVar 0x7f9f139bed20 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139bf2b8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139bf280 <col:57> '_A2' lvalue ParmVar 0x7f9f139bed90 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139bef70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139befb8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139bf680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:629:1, line:635:1> line:632:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7f9f139bf358 <line:629:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139bf3c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139bf5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:635:1> line:632:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7f9f139bf498 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139bf508 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139bf9f8 <line:633:1, line:635:1>
| |   | `-ReturnStmt 0x7f9f139bf9e0 <line:634:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7f9f139bf9a8 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7f9f139bf8f0 <col:27> '<builtin fn type>' Function 0x7f9f139bf800 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7f9f139bf940 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7f9f139bf918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:634:24> '_A1' lvalue ParmVar 0x7f9f139bf498 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7f9f139bf988 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7f9f139bf960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:634:34> '_A2' lvalue ParmVar 0x7f9f139bf508 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139bf6e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7f9f139bf728 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7f9f139c0100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:639:1, line:651:1> line:647:1 isunordered
| | |-TemplateTypeParmDecl 0x7f9f139bfa18 <line:639:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139bfa88 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139c0068 <line:640:1, line:651:1> line:647:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139bff10 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139bff80 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139c0520 <line:648:1, line:651:1>
| |   | |-DeclStmt 0x7f9f139c0378 <line:649:5, col:57>
| |   | | `-TypedefDecl 0x7f9f139c0320 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139c02b0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7f9f139c0508 <line:650:5, col:63>
| |   |   `-CallExpr 0x7f9f139c04d0 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139c0390 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7f9f139bf680
| |   |     |-CStyleCastExpr 0x7f9f139c0448 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139c0410 <col:39> '_A1' lvalue ParmVar 0x7f9f139bff10 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139c04a8 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139c0470 <col:55> '_A2' lvalue ParmVar 0x7f9f139bff80 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139c0160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139c01a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139c0628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:658:1, line:660:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139c0590 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139c0818 <col:31, col:57>
| | | `-ReturnStmt 0x7f9f139c0800 <col:32, col:55>
| | |   `-CallExpr 0x7f9f139c07b8 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139c07a0 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139c0740 <col:39, col:41> 'float (float)' lvalue Function 0x7f9f13912af0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139c07e8 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139c0778 <col:47> 'float' lvalue ParmVar 0x7f9f139c0590 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139c06c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139c0710 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139c0918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:662:1, line:664:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139c0880 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7f9f139c0b08 <col:32, col:57>
| | | `-ReturnStmt 0x7f9f139c0af0 <col:33, col:55>
| | |   `-CallExpr 0x7f9f139c0aa8 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7f9f139c0a90 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139c0a30 <col:40, col:42> 'double (double)' lvalue Function 0x7f9f13912c90 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7f9f139c0ad8 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139c0a68 <col:47> 'double' lvalue ParmVar 0x7f9f139c0880 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7f9f139c09b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139c0a00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139c0c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:666:1, line:668:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139c0b70 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139c0df8 <col:37, col:63>
| | | `-ReturnStmt 0x7f9f139c0de0 <col:38, col:61>
| | |   `-CallExpr 0x7f9f139c0d98 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139c0d80 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139c0d20 <col:45, col:47> 'long double (long double)' lvalue Function 0x7f9f13912e30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139c0dc8 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139c0d58 <col:53> 'long double' lvalue ParmVar 0x7f9f139c0b70 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139c0ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139c0cf0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139c0ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:674:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139c0e60 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139c10e8 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139c10d0 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139c1088 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139c1070 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139c1010 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13904b38 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139c10b8 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139c1048 <col:99> 'float' lvalue ParmVar 0x7f9f139c0e60 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139c0f98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139c0fe0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139c11e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:675:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139c1150 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139c13d8 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139c13c0 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139c1378 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139c1360 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139c1300 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13904e78 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139c13a8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139c1338 <col:99> 'long double' lvalue ParmVar 0x7f9f139c1150 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139c1288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139c12d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139d99b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1, line:681:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7f9f139c13f8 <line:678:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139d9918 <line:679:1, line:681:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139d9800 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139db4b0 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139db498 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139db468 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139db450 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139db418 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13904cd8 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139d9b30 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139d9af0 <col:53> '_A1' lvalue ParmVar 0x7f9f139d9800 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139d9a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139d9a50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139db5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:686:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139db518 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139db7a0 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139db788 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139db740 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139db728 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139db6c8 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13905018 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139db770 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139db700 <col:99> 'float' lvalue ParmVar 0x7f9f139db518 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139db650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139db698 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139db8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:687:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139db818 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139dbaa0 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139dba88 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139dba40 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139dba28 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139db9c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f139053a0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139dba70 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139dba00 <col:99> 'long double' lvalue ParmVar 0x7f9f139db818 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139db950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139db998 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139dbf60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:690:1, line:693:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7f9f139dbac0 <line:690:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139dbec8 <line:691:1, line:693:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139dbdf0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139dc480 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139dc468 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139dc438 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139dc420 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139dc3e8 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13905200 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139dc0e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139dc0a0 <col:53> '_A1' lvalue ParmVar 0x7f9f139dbdf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139dbfb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139dc000 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139dc580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:698:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139dc4e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139dc770 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139dc758 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139dc710 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139dc6f8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139dc698 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13905540 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139dc740 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139dc6d0 <col:99> 'float' lvalue ParmVar 0x7f9f139dc4e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139dc620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139dc668 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139dc870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:699:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139dc7d8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139dca60 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139dca48 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139dca00 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139dc9e8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139dc988 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13905880 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139dca30 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139dc9c0 <col:99> 'long double' lvalue ParmVar 0x7f9f139dc7d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139dc910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139dc958 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139dcf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:705:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7f9f139dca80 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139dce88 <line:703:1, line:705:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139dcdb0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139dd440 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139dd428 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139dd3f8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139dd3e0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139dd3a8 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f139056e0 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139dd0a0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139dd060 <col:53> '_A1' lvalue ParmVar 0x7f9f139dcdb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139dcf78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139dcfc0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139dd5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:710:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139dd4a8 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7f9f139dd520 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139dd830 <col:106, col:143>
| | | `-ReturnStmt 0x7f9f139dd818 <col:107, col:141>
| | |   `-CallExpr 0x7f9f139dd7b0 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139dd798 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139dd6e0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7f9f13905ae8 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f139dd7e8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139dd718 <col:123> 'float' lvalue ParmVar 0x7f9f139dd4a8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139dd800 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139dd740 <col:133> 'float' lvalue ParmVar 0x7f9f139dd520 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139dd668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139dd6b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139dd9b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:711:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139dd898 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7f9f139dd910 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139ddc20 <col:106, col:143>
| | | `-ReturnStmt 0x7f9f139ddc08 <col:107, col:141>
| | |   `-CallExpr 0x7f9f139ddba0 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139ddb88 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ddad0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7f9f13906048 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f139ddbd8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139ddb08 <col:123> 'long double' lvalue ParmVar 0x7f9f139dd898 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139ddbf0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139ddb30 <col:133> 'long double' lvalue ParmVar 0x7f9f139dd910 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139dda58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139ddaa0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139de580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:714:1, line:728:1> line:722:1 atan2
| | |-TemplateTypeParmDecl 0x7f9f139ddc40 <line:714:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139ddca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139de4e8 <line:715:1, line:728:1> line:722:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139de350 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7f9f139de3c0 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7f9f139dee88 <line:723:1, line:728:1>
| |   | |-DeclStmt 0x7f9f139de7f8 <line:724:5, col:66>
| |   | | `-TypedefDecl 0x7f9f139de7a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139de730 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f139decd0 <line:725:5, line:726:68>
| |   | | `-StaticAssertDecl 0x7f9f139dec98 <line:725:5, line:726:67> line:725:5
| |   | |   |-ParenExpr 0x7f9f139dec50 <col:19, line:726:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f139dec30 <line:725:20, line:726:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f139dec10 <line:725:21, line:726:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f139debe8 <line:725:22, line:726:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f139de9e8 <line:725:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f139deba8 <line:726:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f139dec70 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f139dee70 <line:727:5, col:68>
| |   |   `-CallExpr 0x7f9f139dee38 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139ded08 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7f9f13905d98 0x7f9f139dd5c0 0x7f9f139dd9b0 0x7f9f139de580
| |   |     |-CStyleCastExpr 0x7f9f139dedb0 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139ded78 <col:35> '_A1' lvalue ParmVar 0x7f9f139de350 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139dee10 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139dedd8 <col:60> '_A2' lvalue ParmVar 0x7f9f139de3c0 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139de5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139de628 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139def98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:733:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139def00 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139df188 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139df170 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139df128 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139df110 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139df0b0 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13915aa8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139df158 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139df0e8 <col:99> 'float' lvalue ParmVar 0x7f9f139def00 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139df038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139df080 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139df288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:734:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139df1f0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139df478 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139df460 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139df418 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139df400 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139df3a0 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13915de8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139df448 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139df3d8 <col:99> 'long double' lvalue ParmVar 0x7f9f139df1f0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139df328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139df370 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139df970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:737:1, line:740:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7f9f139df498 <line:737:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139df8d8 <line:738:1, line:740:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139df800 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139dfe90 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139dfe78 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139dfe48 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139dfe30 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139dfdf8 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13915c48 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139dfaf0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139dfab0 <col:53> '_A1' lvalue ParmVar 0x7f9f139df800 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139df9c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139dfa10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139dff90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:745:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139dfef8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139e0180 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139e0168 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139e0120 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e0108 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e00a8 <col:90, col:92> 'float (float)' lvalue Function 0x7f9f13906a30 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139e0150 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e00e0 <col:97> 'float' lvalue ParmVar 0x7f9f139dfef8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139e0030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e0078 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e0280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:746:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e01e8 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139e0470 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139e0458 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139e0410 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139e03f8 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e0398 <col:90, col:92> 'long double (long double)' lvalue Function 0x7f9f13906d70 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139e0440 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e03d0 <col:97> 'long double' lvalue ParmVar 0x7f9f139e01e8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139e0320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e0368 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139e0930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:749:1, line:752:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7f9f139e0490 <line:749:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139e0898 <line:750:1, line:752:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139e07c0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139e0e50 <col:29, col:61>
| |   | `-ReturnStmt 0x7f9f139e0e38 <col:30, col:59>
| |   |   `-CallExpr 0x7f9f139e0e08 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139e0df0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139e0db8 <col:37, col:39> 'double (double)' lvalue Function 0x7f9f13906bd0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139e0ab0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139e0a70 <col:51> '_A1' lvalue ParmVar 0x7f9f139e07c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139e0988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139e09d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e0f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:757:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e0eb8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139e1140 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139e1128 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139e10e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e10c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e1068 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13908f90 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139e1110 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e10a0 <col:99> 'float' lvalue ParmVar 0x7f9f139e0eb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139e0ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e1038 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e1240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:758:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e11a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139e1430 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139e1418 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139e13d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139e13b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e1358 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13909af0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139e1400 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e1390 <col:99> 'long double' lvalue ParmVar 0x7f9f139e11a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139e12e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e1328 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139e1910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:761:1, line:764:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7f9f139e1450 <line:761:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139e1878 <line:762:1, line:764:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139e1780 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139e1e30 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139e1e18 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139e1de8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139e1dd0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139e1d98 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13909130 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139e1a90 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139e1a50 <col:53> '_A1' lvalue ParmVar 0x7f9f139e1780 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139e1968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139e19b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e1f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:769:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e1e98 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139e2120 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139e2108 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139e20c0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e20a8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e2048 <col:90, col:92> 'float (float)' lvalue Function 0x7f9f1390a650 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139e20f0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e2080 <col:97> 'float' lvalue ParmVar 0x7f9f139e1e98 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139e1fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e2018 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e2220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:770:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e2188 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139e2410 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139e23f8 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139e23b0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139e2398 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e2338 <col:90, col:92> 'long double (long double)' lvalue Function 0x7f9f1390aa00 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139e23e0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e2370 <col:97> 'long double' lvalue ParmVar 0x7f9f139e2188 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139e22c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e2308 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139e28d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:773:1, line:776:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7f9f139e2430 <line:773:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139e2838 <line:774:1, line:776:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139e2760 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139e2df0 <col:29, col:61>
| |   | `-ReturnStmt 0x7f9f139e2dd8 <col:30, col:59>
| |   |   `-CallExpr 0x7f9f139e2da8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139e2d90 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139e2d58 <col:37, col:39> 'double (double)' lvalue Function 0x7f9f1390a7f0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139e2a50 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139e2a10 <col:51> '_A1' lvalue ParmVar 0x7f9f139e2760 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139e2928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139e2970 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e2ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:781:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e2e58 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139e30e0 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139e30c8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139e3080 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e3068 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e3008 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13912af0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139e30b0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e3040 <col:99> 'float' lvalue ParmVar 0x7f9f139e2e58 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139e2f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e2fd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e31e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:782:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e3148 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139e33d0 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139e33b8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139e3370 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139e3358 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e32f8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13912e30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139e33a0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e3330 <col:99> 'long double' lvalue ParmVar 0x7f9f139e3148 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139e3280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e32c8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139e3898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:785:1, line:788:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7f9f139e33f0 <line:785:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139e3800 <line:786:1, line:788:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139e3720 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139e3dc0 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139e3da8 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139e3d78 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139e3d60 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139e3d28 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13912c90 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139e3a18 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139e39d8 <col:53> '_A1' lvalue ParmVar 0x7f9f139e3720 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139e38f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139e3938 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e3ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:793:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e3e28 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139e40b0 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139e4098 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139e4050 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e4038 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e3fd8 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f13915f88 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139e4080 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e4010 <col:101> 'float' lvalue ParmVar 0x7f9f139e3e28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139e3f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e3fa8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e41b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:794:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e4118 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139e43a0 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139e4388 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139e4340 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139e4328 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e42c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f139162c8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139e4370 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e4300 <col:101> 'long double' lvalue ParmVar 0x7f9f139e4118 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139e4250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e4298 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139e4860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:797:1, line:800:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7f9f139e43c0 <line:797:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139e47c8 <line:798:1, line:800:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139e46f0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139e4d80 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f139e4d68 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f139e4d38 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139e4d20 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139e4ce8 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f13916128 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139e49e0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139e49a0 <col:55> '_A1' lvalue ParmVar 0x7f9f139e46f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139e48b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139e4900 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e4f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:805:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e4de8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139e4e60 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f139e5140 <col:105, col:141>
| | | `-ReturnStmt 0x7f9f139e5128 <col:106, col:139>
| | |   `-CallExpr 0x7f9f139e50c0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e50a8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e5020 <col:113, col:115> 'float (float, float)' lvalue Function 0x7f9f13918f60 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f139e50f8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139e5058 <col:121> 'float' lvalue ParmVar 0x7f9f139e4de8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139e5110 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e5080 <col:131> 'float' lvalue ParmVar 0x7f9f139e4e60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f139e4fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e4ff0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e52c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e51a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f139e5220 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f139e5500 <col:105, col:141>
| | | `-ReturnStmt 0x7f9f139e54e8 <col:106, col:139>
| | |   `-CallExpr 0x7f9f139e5480 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139e5468 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e53e0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7f9f139193b0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f139e54b8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139e5418 <col:121> 'long double' lvalue ParmVar 0x7f9f139e51a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139e54d0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e5440 <col:131> 'long double' lvalue ParmVar 0x7f9f139e5220 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139e5368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e53b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139e5d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:809:1, line:823:1> line:817:1 fmod
| | |-TemplateTypeParmDecl 0x7f9f139e5520 <line:809:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139e5588 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139e5ce8 <line:810:1, line:823:1> line:817:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139e5b90 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139e5c00 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139e65a8 <line:818:1, line:823:1>
| |   | |-DeclStmt 0x7f9f139e5ff8 <line:819:5, col:66>
| |   | | `-TypedefDecl 0x7f9f139e5fa0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139e5f30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f139e63f0 <line:820:5, line:821:68>
| |   | | `-StaticAssertDecl 0x7f9f139e63b8 <line:820:5, line:821:67> line:820:5
| |   | |   |-ParenExpr 0x7f9f139e6370 <col:19, line:821:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f139e6350 <line:820:20, line:821:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f139e6330 <line:820:21, line:821:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f139e6308 <line:820:22, line:821:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f139e6168 <line:820:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f139e62c8 <line:821:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f139e6390 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f139e6590 <line:822:5, col:67>
| |   |   `-CallExpr 0x7f9f139e6558 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139e6428 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7f9f13919188 0x7f9f139e4f00 0x7f9f139e52c0 0x7f9f139e5d80
| |   |     |-CStyleCastExpr 0x7f9f139e64d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139e6498 <col:34> '_A1' lvalue ParmVar 0x7f9f139e5b90 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139e6530 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139e64f8 <col:59> '_A2' lvalue ParmVar 0x7f9f139e5c00 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139e5de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139e5e28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e6738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:828:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e6620 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139e6698 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7f9f139e69d0 <col:99, col:136>
| | | `-ReturnStmt 0x7f9f139e69b8 <col:100, col:134>
| | |   `-CallExpr 0x7f9f139e6950 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e6938 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e6858 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7f9f1390ff88 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7f9f139e6988 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139e6890 <col:116> 'float' lvalue ParmVar 0x7f9f139e6620 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139e69a0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e68b8 <col:126> 'int *' lvalue ParmVar 0x7f9f139e6698 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7f9f139e67e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e6828 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e6b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:829:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e6a38 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f139e6ab0 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7f9f139e6df0 <col:99, col:136>
| | | `-ReturnStmt 0x7f9f139e6dd8 <col:100, col:134>
| | |   `-CallExpr 0x7f9f139e6d70 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139e6d58 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e6c70 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7f9f139104c8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7f9f139e6da8 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139e6ca8 <col:116> 'long double' lvalue ParmVar 0x7f9f139e6a38 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139e6dc0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e6cd0 <col:126> 'int *' lvalue ParmVar 0x7f9f139e6ab0 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7f9f139e6bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e6c40 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139e7380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:832:1, line:835:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7f9f139e6e10 <line:832:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139e72e8 <line:833:1, line:835:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139e7140 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139e71b8 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7f9f139e8958 <col:46, col:90>
| |   | `-ReturnStmt 0x7f9f139e8940 <col:47, col:88>
| |   |   `-CallExpr 0x7f9f139e88f0 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139e88d8 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139e8878 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7f9f13910228 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7f9f139e7508 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139e74c8 <col:70> '_A1' lvalue ParmVar 0x7f9f139e7140 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7f9f139e8928 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7f9f139e7530 <col:80> 'int *' lvalue ParmVar 0x7f9f139e71b8 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7f9f139e73e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139e7428 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e8ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:840:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e89c0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139e8a38 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7f9f139e8d40 <col:98, col:135>
| | | `-ReturnStmt 0x7f9f139e8d28 <col:99, col:133>
| | |   `-CallExpr 0x7f9f139e8cc0 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e8ca8 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e8bf8 <col:106, col:108> 'float (float, int)' lvalue Function 0x7f9f1390e738 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7f9f139e8cf8 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139e8c30 <col:115> 'float' lvalue ParmVar 0x7f9f139e89c0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139e8d10 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e8c58 <col:125> 'int' lvalue ParmVar 0x7f9f139e8a38 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7f9f139e8b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e8bc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e8ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:841:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e8da8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f139e8e20 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7f9f139e9130 <col:98, col:135>
| | | `-ReturnStmt 0x7f9f139e9118 <col:99, col:133>
| | |   `-CallExpr 0x7f9f139e90b0 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139e9098 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e8fe0 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7f9f1390fcb8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7f9f139e90e8 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139e9018 <col:115> 'long double' lvalue ParmVar 0x7f9f139e8da8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139e9100 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e9040 <col:125> 'int' lvalue ParmVar 0x7f9f139e8e20 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7f9f139e8f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e8fb0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139e96c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:844:1, line:847:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7f9f139e9150 <line:844:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139e9628 <line:845:1, line:847:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139e9480 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139e94f8 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7f9f139e9c58 <col:45, col:89>
| |   | `-ReturnStmt 0x7f9f139e9c40 <col:46, col:87>
| |   |   `-CallExpr 0x7f9f139e9bf0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139e9bd8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139e9b78 <col:53, col:55> 'double (double, int)' lvalue Function 0x7f9f1390fa00 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7f9f139e9848 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139e9808 <col:69> '_A1' lvalue ParmVar 0x7f9f139e9480 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7f9f139e9c28 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7f9f139e9870 <col:79> 'int' lvalue ParmVar 0x7f9f139e94f8 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7f9f139e9720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139e9768 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139e9d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:852:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e9cc0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139e9f48 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139e9f30 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139e9ee8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139e9ed0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139e9e70 <col:90, col:92> 'float (float)' lvalue Function 0x7f9f1390b560 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139e9f18 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139e9ea8 <col:97> 'float' lvalue ParmVar 0x7f9f139e9cc0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139e9df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139e9e40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ea048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:853:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139e9fb0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139ea238 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139ea220 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139ea1d8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139ea1c0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ea160 <col:90, col:92> 'long double (long double)' lvalue Function 0x7f9f1390b8a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139ea208 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139ea198 <col:97> 'long double' lvalue ParmVar 0x7f9f139e9fb0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139ea0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139ea130 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139ea700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:856:1, line:859:61> col:1 log
| | |-TemplateTypeParmDecl 0x7f9f139ea258 <line:856:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139ea668 <line:857:1, line:859:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139ea590 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139eac50 <col:29, col:61>
| |   | `-ReturnStmt 0x7f9f139eac38 <col:30, col:59>
| |   |   `-CallExpr 0x7f9f139eac08 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139eabf0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139eabb8 <col:37, col:39> 'double (double)' lvalue Function 0x7f9f1390b700 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139ea8b0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139ea870 <col:51> '_A1' lvalue ParmVar 0x7f9f139ea590 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139ea758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139ea7a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ead50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:864:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139eacb8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139eaf40 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139eaf28 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139eaee0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139eaec8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139eae68 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f1390ba90 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139eaf10 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139eaea0 <col:101> 'float' lvalue ParmVar 0x7f9f139eacb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139eadf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139eae38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139eb040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:865:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139eafa8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139eb230 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139eb218 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139eb1d0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139eb1b8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139eb158 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f1390bdd0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139eb200 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139eb190 <col:101> 'long double' lvalue ParmVar 0x7f9f139eafa8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139eb0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139eb128 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139eb6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:868:1, line:871:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7f9f139eb250 <line:868:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139eb658 <line:869:1, line:871:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139eb580 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139ebc10 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f139ebbf8 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f139ebbc8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139ebbb0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139ebb78 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f1390bc30 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139eb870 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139eb830 <col:55> '_A1' lvalue ParmVar 0x7f9f139eb580 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139eb748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139eb790 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ebd90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:876:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7f9f139ebc78 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139ebcf0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7f9f139ec030 <col:106, col:142>
| | | `-ReturnStmt 0x7f9f139ec018 <col:107, col:140>
| | |   `-CallExpr 0x7f9f139ebfb0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139ebf98 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ebeb0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7f9f1390df18 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7f9f139ebfe8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139ebee8 <col:122> 'float' lvalue ParmVar 0x7f9f139ebc78 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139ec000 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139ebf10 <col:132> 'float *' lvalue ParmVar 0x7f9f139ebcf0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7f9f139ebe38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139ebe80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ec1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:877:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7f9f139ec098 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f139ec110 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7f9f139ec450 <col:106, col:142>
| | | `-ReturnStmt 0x7f9f139ec438 <col:107, col:140>
| | |   `-CallExpr 0x7f9f139ec3d0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139ec3b8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ec2d0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7f9f1390e498 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7f9f139ec408 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139ec308 <col:122> 'long double' lvalue ParmVar 0x7f9f139ec098 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139ec420 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139ec330 <col:132> 'long double *' lvalue ParmVar 0x7f9f139ec110 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7f9f139ec258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139ec2a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ec5d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:883:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139ec4b8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139ec530 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f139ec818 <col:104, col:139>
| | | `-ReturnStmt 0x7f9f139ec800 <col:105, col:137>
| | |   `-CallExpr 0x7f9f139ec790 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139ec778 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ec6f0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7f9f13913c28 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f139ec7c8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139ec728 <col:119> 'float' lvalue ParmVar 0x7f9f139ec4b8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139ec7e0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139ec750 <col:129> 'float' lvalue ParmVar 0x7f9f139ec530 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f139ec678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139ec6c0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ec998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:884:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139ec880 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f139ec8f8 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f139ecbd8 <col:104, col:139>
| | | `-ReturnStmt 0x7f9f139ecbc0 <col:105, col:137>
| | |   `-CallExpr 0x7f9f139ecb58 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139ecb40 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ecab8 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7f9f13914078 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f139ecb90 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139ecaf0 <col:119> 'long double' lvalue ParmVar 0x7f9f139ec880 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139ecba8 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139ecb18 <col:129> 'long double' lvalue ParmVar 0x7f9f139ec8f8 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139eca40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139eca88 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139ed440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:887:1, line:901:1> line:895:1 pow
| | |-TemplateTypeParmDecl 0x7f9f139ecbf8 <line:887:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139ecc68 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139ed3a8 <line:888:1, line:901:1> line:895:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139ed250 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139ed2c0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139edc68 <line:896:1, line:901:1>
| |   | |-DeclStmt 0x7f9f139ed6b8 <line:897:5, col:66>
| |   | | `-TypedefDecl 0x7f9f139ed660 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139ed5f0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f139edab0 <line:898:5, line:899:68>
| |   | | `-StaticAssertDecl 0x7f9f139eda78 <line:898:5, line:899:67> line:898:5
| |   | |   |-ParenExpr 0x7f9f139eda30 <col:19, line:899:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f139eda10 <line:898:20, line:899:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f139ed9f0 <line:898:21, line:899:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f139ed9c8 <line:898:22, line:899:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f139ed828 <line:898:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f139ed988 <line:899:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f139eda50 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f139edc50 <line:900:5, col:66>
| |   |   `-CallExpr 0x7f9f139edc18 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139edae8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7f9f13913e50 0x7f9f139ec5d0 0x7f9f139ec998 0x7f9f139ed440
| |   |     |-CStyleCastExpr 0x7f9f139edb90 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139edb58 <col:33> '_A1' lvalue ParmVar 0x7f9f139ed250 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139edbf0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139edbb8 <col:58> '_A2' lvalue ParmVar 0x7f9f139ed2c0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139ed4a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139ed4e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139edd78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:906:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139edce0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139edf68 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139edf50 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139edf08 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139edef0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ede90 <col:90, col:92> 'float (float)' lvalue Function 0x7f9f13906f10 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139edf38 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139edec8 <col:97> 'float' lvalue ParmVar 0x7f9f139edce0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139ede18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139ede60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ee068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:907:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139edfd0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139ee258 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139ee240 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139ee1f8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139ee1e0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ee180 <col:90, col:92> 'long double (long double)' lvalue Function 0x7f9f13907250 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139ee228 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139ee1b8 <col:97> 'long double' lvalue ParmVar 0x7f9f139edfd0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139ee108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139ee150 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139ee720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:910:1, line:913:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7f9f139ee278 <line:910:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139ee688 <line:911:1, line:913:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139ee5b0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139eec50 <col:29, col:61>
| |   | `-ReturnStmt 0x7f9f139eec38 <col:30, col:59>
| |   |   `-CallExpr 0x7f9f139eec08 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139eebf0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139eebb8 <col:37, col:39> 'double (double)' lvalue Function 0x7f9f139070b0 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139ee8b0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139ee870 <col:51> '_A1' lvalue ParmVar 0x7f9f139ee5b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139ee778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139ee7c0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139eed50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:918:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139eecb8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139eef40 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139eef28 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139eeee0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139eeec8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139eee68 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13909c90 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139eef10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139eeea0 <col:99> 'float' lvalue ParmVar 0x7f9f139eecb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139eedf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139eee38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ef040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:919:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139eefa8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139ef230 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139ef218 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139ef1d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139ef1b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139ef158 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13909fd0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139ef200 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139ef190 <col:99> 'long double' lvalue ParmVar 0x7f9f139eefa8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139ef0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139ef128 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139ef6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:922:1, line:925:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7f9f139ef250 <line:922:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139ef658 <line:923:1, line:925:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139ef580 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139efc10 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139efbf8 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139efbc8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139efbb0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139efb78 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13909e30 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139ef870 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139ef830 <col:53> '_A1' lvalue ParmVar 0x7f9f139ef580 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139ef748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139ef790 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139efd10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:930:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139efc78 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139eff00 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139efee8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139efea0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139efe88 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139efe28 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13914220 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139efed0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139efe60 <col:99> 'float' lvalue ParmVar 0x7f9f139efc78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139efdb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139efdf8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f0000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:931:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139eff68 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f01f0 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139f01d8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139f0190 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f0178 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f0118 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13914560 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f01c0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f0150 <col:99> 'long double' lvalue ParmVar 0x7f9f139eff68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f00a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f00e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f06b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:934:1, line:937:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7f9f139f0210 <line:934:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f0618 <line:935:1, line:937:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f0540 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139f0be0 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139f0bc8 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139f0b98 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139f0b80 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139f0b48 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f139143c0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f0840 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f0800 <col:53> '_A1' lvalue ParmVar 0x7f9f139f0540 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f0708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f0750 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f0ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:942:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f0c48 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139f0ed0 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139f0eb8 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139f0e70 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f0e58 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f0df8 <col:90, col:92> 'float (float)' lvalue Function 0x7f9f139073f0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139f0ea0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f0e30 <col:97> 'float' lvalue ParmVar 0x7f9f139f0c48 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f0d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f0dc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f0fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:943:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f0f38 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f11c0 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139f11a8 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139f1160 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f1148 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f10e8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7f9f13907730 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f1190 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f1120 <col:97> 'long double' lvalue ParmVar 0x7f9f139f0f38 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f1070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f10b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f1680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:946:1, line:949:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7f9f139f11e0 <line:946:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f15e8 <line:947:1, line:949:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f1510 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139f1ba0 <col:29, col:61>
| |   | `-ReturnStmt 0x7f9f139f1b88 <col:30, col:59>
| |   |   `-CallExpr 0x7f9f139f1b58 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139f1b40 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139f1b08 <col:37, col:39> 'double (double)' lvalue Function 0x7f9f13907590 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f1800 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f17c0 <col:51> '_A1' lvalue ParmVar 0x7f9f139f1510 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f16d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f1720 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f1ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:954:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f1c08 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139f1e90 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139f1e78 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139f1e30 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f1e18 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f1db8 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f1390a170 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139f1e60 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f1df0 <col:99> 'float' lvalue ParmVar 0x7f9f139f1c08 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f1d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f1d88 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f1f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:955:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f1ef8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f2180 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139f2168 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139f2120 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f2108 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f20a8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f1390a4b0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f2150 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f20e0 <col:99> 'long double' lvalue ParmVar 0x7f9f139f1ef8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f2030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f2078 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f2640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:958:1, line:961:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7f9f139f21a0 <line:958:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f25a8 <line:959:1, line:961:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f24d0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139f2b60 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139f2b48 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139f2b18 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139f2b00 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139f2ac8 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f1390a310 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f27c0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f2780 <col:53> '_A1' lvalue ParmVar 0x7f9f139f24d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f2698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f26e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f2c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:965:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f2bc8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139f2e50 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139f2e38 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139f2df0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f2dd8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f2d78 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f139078d0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139f2e20 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f2db0 <col:101> 'float' lvalue ParmVar 0x7f9f139f2bc8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f2d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f2d48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f2f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:966:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f2eb8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f3140 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139f3128 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139f30e0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f30c8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f3068 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f13908430 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f3110 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f30a0 <col:101> 'long double' lvalue ParmVar 0x7f9f139f2eb8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f2ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f3038 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f3600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:968:1, line:971:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7f9f139f3160 <line:968:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f3568 <line:969:1, line:971:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f3490 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139f3b20 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f139f3b08 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f139f3ad8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139f3ac0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139f3a88 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f13908290 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f3780 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f3740 <col:55> '_A1' lvalue ParmVar 0x7f9f139f3490 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f3658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f36a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f3c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:975:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f3b88 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139f3e10 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139f3df8 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139f3db0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f3d98 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f3d38 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f139085d0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139f3de0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f3d70 <col:101> 'float' lvalue ParmVar 0x7f9f139f3b88 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f3cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f3d08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f3f10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:976:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f3e78 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f4100 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139f40e8 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139f40a0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f4088 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f4028 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f13908910 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f40d0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f4060 <col:101> 'long double' lvalue ParmVar 0x7f9f139f3e78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f3fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f3ff8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f45c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:978:1, line:981:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7f9f139f4120 <line:978:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f4528 <line:979:1, line:981:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f4450 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139f4b40 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f139f4b28 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f139f4af8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139f4ae0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139f4aa8 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f13908770 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f4740 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f4700 <col:55> '_A1' lvalue ParmVar 0x7f9f139f4450 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f4618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f4660 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f4c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:985:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f4ba8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139f4e30 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139f4e18 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139f4dd0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f4db8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f4d58 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f13908ab0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139f4e00 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f4d90 <col:101> 'float' lvalue ParmVar 0x7f9f139f4ba8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f4ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f4d28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f4f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:986:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f4e98 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f5120 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139f5108 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139f50c0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f50a8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f5048 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f13908df0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f50f0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f5080 <col:101> 'long double' lvalue ParmVar 0x7f9f139f4e98 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f4fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f5018 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f55e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:988:1, line:991:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7f9f139f5140 <line:988:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f5548 <line:989:1, line:991:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f5470 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139f5b00 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f139f5ae8 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f139f5ab8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139f5aa0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139f5a68 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f13908c50 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f5760 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f5720 <col:55> '_A1' lvalue ParmVar 0x7f9f139f5470 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f5638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f5680 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f5c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f5b68 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139f5df0 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139f5dd8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139f5d90 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f5d78 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f5d18 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13912fd0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139f5dc0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f5d50 <col:99> 'float' lvalue ParmVar 0x7f9f139f5b68 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f5ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f5ce8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f5ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:996:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f5e58 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f60e0 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139f60c8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139f6080 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f6068 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f6008 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13913310 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f60b0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f6040 <col:99> 'long double' lvalue ParmVar 0x7f9f139f5e58 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f5f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f5fd8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f65a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:998:1, line:1001:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7f9f139f6100 <line:998:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f6508 <line:999:1, line:1001:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f6430 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139f6b40 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139f6b28 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139f6af8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139f6ae0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139f6aa8 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13913170 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f6720 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f66e0 <col:53> '_A1' lvalue ParmVar 0x7f9f139f6430 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f65f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f6640 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f6cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1005:1, line:1008:1> line:1005:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f6ba8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139f6c20 <line:1006:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f139f6f00 <col:75, line:1008:1>
| | | `-ReturnStmt 0x7f9f139f6ee8 <line:1007:3, col:40>
| | |   `-CallExpr 0x7f9f139f6e80 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f6e68 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f6de0 <col:10, col:12> 'float (float, float)' lvalue Function 0x7f9f1391a440 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f139f6eb8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139f6e18 <col:22> 'float' lvalue ParmVar 0x7f9f139f6ba8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139f6ed0 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f6e40 <col:32> 'float' lvalue ParmVar 0x7f9f139f6c20 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f6d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f6db0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f7080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1009:1, line:1012:1> line:1010:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f6f68 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f139f6fe0 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f139f72c0 <col:64, line:1012:1>
| | | `-ReturnStmt 0x7f9f139f72a8 <line:1011:3, col:40>
| | |   `-CallExpr 0x7f9f139f7240 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f7228 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f71a0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7f9f1391a890 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f139f7278 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139f71d8 <col:22> 'long double' lvalue ParmVar 0x7f9f139f6f68 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139f7290 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f7200 <col:32> 'long double' lvalue ParmVar 0x7f9f139f6fe0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f7128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f7170 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f7b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1014:1, line:1028:1> line:1022:1 copysign
| | |-TemplateTypeParmDecl 0x7f9f139f72e0 <line:1014:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139f7348 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139f7a88 <line:1015:1, line:1028:1> line:1022:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f7930 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139f79a0 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139f8348 <line:1023:1, line:1028:1>
| |   | |-DeclStmt 0x7f9f139f7d98 <line:1024:5, col:66>
| |   | | `-TypedefDecl 0x7f9f139f7d40 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139f7cd0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f139f8190 <line:1025:5, line:1026:68>
| |   | | `-StaticAssertDecl 0x7f9f139f8158 <line:1025:5, line:1026:67> line:1025:5
| |   | |   |-ParenExpr 0x7f9f139f8110 <col:19, line:1026:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f139f80f0 <line:1025:20, line:1026:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f139f80d0 <line:1025:21, line:1026:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f139f80a8 <line:1025:22, line:1026:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f139f7f08 <line:1025:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f139f8068 <line:1026:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f139f8130 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f139f8330 <line:1027:5, col:71>
| |   |   `-CallExpr 0x7f9f139f82f8 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139f81c8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7f9f1391a668 0x7f9f139f6cc0 0x7f9f139f7080 0x7f9f139f7b20
| |   |     |-CStyleCastExpr 0x7f9f139f8270 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139f8238 <col:38> '_A1' lvalue ParmVar 0x7f9f139f7930 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139f82d0 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f8298 <col:63> '_A2' lvalue ParmVar 0x7f9f139f79a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139f7b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f7bc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f8458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1032:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f83c0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139f8648 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139f8630 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139f85e8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f85d0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f8570 <col:90, col:92> 'float (float)' lvalue Function 0x7f9f13914700 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139f8618 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f85a8 <col:97> 'float' lvalue ParmVar 0x7f9f139f83c0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f84f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f8540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f8748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1033:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f86b0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f8940 <col:82, col:107>
| | | `-ReturnStmt 0x7f9f139f8928 <col:83, col:105>
| | |   `-CallExpr 0x7f9f139f88e0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f88c8 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f8868 <col:90, col:92> 'long double (long double)' lvalue Function 0x7f9f13914a90 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f8910 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f88a0 <col:97> 'long double' lvalue ParmVar 0x7f9f139f86b0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f87e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f8838 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f8e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1035:1, line:1038:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7f9f139f8960 <line:1035:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f8d68 <line:1036:1, line:1038:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f8c90 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139f9320 <col:29, col:61>
| |   | `-ReturnStmt 0x7f9f139f9308 <col:30, col:59>
| |   |   `-CallExpr 0x7f9f139f92d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139f92c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139f9288 <col:37, col:39> 'double (double)' lvalue Function 0x7f9f139148a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f8f80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f8f40 <col:51> '_A1' lvalue ParmVar 0x7f9f139f8c90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f8e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f8ea0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f9420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1042:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f9388 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139f9610 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139f95f8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139f95b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139f9598 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f9538 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13914c30 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139f95e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f9570 <col:99> 'float' lvalue ParmVar 0x7f9f139f9388 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139f94c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f9508 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139f9710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1043:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139f9678 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139f9900 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139f98e8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139f98a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139f9888 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139f9828 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13914f70 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139f98d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139f9860 <col:99> 'long double' lvalue ParmVar 0x7f9f139f9678 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139f97b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139f97f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139f9dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1045:1, line:1048:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7f9f139f9920 <line:1045:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139f9d28 <line:1046:1, line:1048:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139f9c50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139fa2e0 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139fa2c8 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139fa298 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139fa280 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139fa248 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13914dd0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139f9f40 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139f9f00 <col:53> '_A1' lvalue ParmVar 0x7f9f139f9c50 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139f9e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139f9e60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139fa3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1052:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139fa348 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139fa5d0 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139fa5b8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139fa570 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139fa558 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fa4f8 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f1390aba0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139fa5a0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fa530 <col:99> 'float' lvalue ParmVar 0x7f9f139fa348 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139fa480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fa4c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139fa6d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1053:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139fa638 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139fa8d8 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f139fa8c0 <col:84, col:107>
| | |   `-CallExpr 0x7f9f139fa878 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139fa860 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fa800 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f1390aee0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139fa8a8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fa838 <col:99> 'long double' lvalue ParmVar 0x7f9f139fa638 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139fa770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fa7b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139fada0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1055:1, line:1058:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7f9f139fa8f8 <line:1055:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139fad08 <line:1056:1, line:1058:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139fac30 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139fb2c0 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f139fb2a8 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f139fb278 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139fb260 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139fb228 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f1390ad40 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139faf20 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139faee0 <col:53> '_A1' lvalue ParmVar 0x7f9f139fac30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139fadf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139fae40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139fb3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1062:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139fb328 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f139fb5b0 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139fb598 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139fb550 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139fb538 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fb4d8 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f1390b080 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f139fb580 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fb510 <col:101> 'float' lvalue ParmVar 0x7f9f139fb328 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f139fb460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fb4a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139fb6b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1063:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139fb618 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f139fb8a0 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f139fb888 <col:85, col:109>
| | |   `-CallExpr 0x7f9f139fb840 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139fb828 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fb7c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f1390b3c0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f139fb870 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fb800 <col:101> 'long double' lvalue ParmVar 0x7f9f139fb618 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139fb750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fb798 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139fbd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1065:1, line:1068:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7f9f139fb8c0 <line:1065:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f139fbcc8 <line:1066:1, line:1068:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139fbbf0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f139fc280 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f139fc268 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f139fc238 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f139fc220 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f139fc1e8 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f1390b220 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f139fbee0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139fbea0 <col:55> '_A1' lvalue ParmVar 0x7f9f139fbbf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f139fbdb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139fbe00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139fc400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1072:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139fc2e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139fc360 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f139fc640 <col:105, col:141>
| | | `-ReturnStmt 0x7f9f139fc628 <col:106, col:139>
| | |   `-CallExpr 0x7f9f139fc5c0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139fc5a8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fc520 <col:113, col:115> 'float (float, float)' lvalue Function 0x7f9f1390cf68 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f139fc5f8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139fc558 <col:121> 'float' lvalue ParmVar 0x7f9f139fc2e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139fc610 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fc580 <col:131> 'float' lvalue ParmVar 0x7f9f139fc360 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f139fc4a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fc4f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139fc800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1073:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139fc6a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f139fc720 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f139fca40 <col:105, col:141>
| | | `-ReturnStmt 0x7f9f139fca28 <col:106, col:139>
| | |   `-CallExpr 0x7f9f139fc9c0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139fc9a8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fc920 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7f9f1390d3b8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f139fc9f8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139fc958 <col:121> 'long double' lvalue ParmVar 0x7f9f139fc6a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139fca10 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fc980 <col:131> 'long double' lvalue ParmVar 0x7f9f139fc720 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139fc8a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fc8f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139fd2a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1075:1, line:1089:1> line:1083:1 fdim
| | |-TemplateTypeParmDecl 0x7f9f139fca60 <line:1075:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139fcac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f139fd208 <line:1076:1, line:1089:1> line:1083:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139fd0b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139fd120 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f139fdac8 <line:1084:1, line:1089:1>
| |   | |-DeclStmt 0x7f9f139fd518 <line:1085:5, col:66>
| |   | | `-TypedefDecl 0x7f9f139fd4c0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f139fd450 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f139fd910 <line:1086:5, line:1087:68>
| |   | | `-StaticAssertDecl 0x7f9f139fd8d8 <line:1086:5, line:1087:67> line:1086:5
| |   | |   |-ParenExpr 0x7f9f139fd890 <col:19, line:1087:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f139fd870 <line:1086:20, line:1087:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f139fd850 <line:1086:21, line:1087:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f139fd828 <line:1086:22, line:1087:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f139fd688 <line:1086:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f139fd7e8 <line:1087:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f139fd8b0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f139fdab0 <line:1088:5, col:67>
| |   |   `-CallExpr 0x7f9f139fda78 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139fd948 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7f9f1390d190 0x7f9f139fc400 0x7f9f139fc800 0x7f9f139fd2a0
| |   |     |-CStyleCastExpr 0x7f9f139fd9f0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139fd9b8 <col:34> '_A1' lvalue ParmVar 0x7f9f139fd0b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f139fda50 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139fda18 <col:59> '_A2' lvalue ParmVar 0x7f9f139fd120 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f139fd300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139fd348 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139fdcd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1093:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139fdb40 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139fdbb8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7f9f139fdc30 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7f9f139fdf90 <col:126, col:171>
| | | `-ReturnStmt 0x7f9f139fdf78 <col:127, col:169>
| | |   `-CallExpr 0x7f9f139fdef0 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139fded8 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fde00 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7f9f139203a8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7f9f139fdf30 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139fde38 <col:141> 'float' lvalue ParmVar 0x7f9f139fdb40 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7f9f139fdf48 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139fde60 <col:151> 'float' lvalue ParmVar 0x7f9f139fdbb8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7f9f139fdf60 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fde88 <col:161> 'float' lvalue ParmVar 0x7f9f139fdc30 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7f9f139fdd88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fddd0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139fe190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1094:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f139fdff8 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f139fe070 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7f9f139fe0e8 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7f9f139fe450 <col:126, col:171>
| | | `-ReturnStmt 0x7f9f139fe438 <col:127, col:169>
| | |   `-CallExpr 0x7f9f139fe3b0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139fe398 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fe2b8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7f9f13910a88 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f139fe3f0 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139fe2f0 <col:141> 'long double' lvalue ParmVar 0x7f9f139fdff8 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7f9f139fe408 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139fe318 <col:151> 'long double' lvalue ParmVar 0x7f9f139fe070 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f139fe420 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fe340 <col:161> 'long double' lvalue ParmVar 0x7f9f139fe0e8 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7f9f139fe240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fe288 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f139ff0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1096:1, line:1112:1> line:1105:1 fma
| | |-TemplateTypeParmDecl 0x7f9f139fe470 <line:1096:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f139fe4d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7f9f139fe548 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7f9f139ff028 <line:1097:1, line:1112:1> line:1105:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7f9f139fee00 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f139fee70 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7f9f139feee0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7f9f139ffc80 <line:1106:1, line:1112:1>
| |   | |-DeclStmt 0x7f9f139ff3c8 <line:1107:5, col:71>
| |   | | `-TypedefDecl 0x7f9f139ff370 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7f9f139ff300 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7f9f139ffa60 <line:1108:5, line:1110:68>
| |   | | `-StaticAssertDecl 0x7f9f139ffa28 <line:1108:5, line:1110:67> line:1108:5
| |   | |   |-ParenExpr 0x7f9f139ff9e0 <col:19, line:1110:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f139ff9c0 <line:1108:20, line:1110:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f139ff9a0 <line:1108:21, line:1110:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f139ff978 <line:1108:22, line:1110:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7f9f139ff798 <line:1108:22, line:1109:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7f9f139ff598 <line:1108:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7f9f139ff758 <line:1109:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f139ff938 <line:1110:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f139ffa00 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f139ffc68 <line:1111:5, col:91>
| |   |   `-CallExpr 0x7f9f139ffc28 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f139ffa98 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7f9f139206f8 0x7f9f139fdcd8 0x7f9f139fe190 0x7f9f139ff0c0
| |   |     |-CStyleCastExpr 0x7f9f139ffb40 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139ffb08 <col:33> '_A1' lvalue ParmVar 0x7f9f139fee00 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7f9f139ffba0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f139ffb68 <col:58> '_A2' lvalue ParmVar 0x7f9f139fee70 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7f9f139ffc00 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f139ffbc8 <col:83> '_A3' lvalue ParmVar 0x7f9f139feee0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7f9f139ff128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f139ff170 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f139ffe10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f139ffcf8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f139ffd70 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f13a00050 <col:105, col:141>
| | | `-ReturnStmt 0x7f9f13a00038 <col:106, col:139>
| | |   `-CallExpr 0x7f9f139fffd0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7f9f139fffb8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f139fff30 <col:113, col:115> 'float (float, float)' lvalue Function 0x7f9f1390d5e0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f13a00008 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f139fff68 <col:121> 'float' lvalue ParmVar 0x7f9f139ffcf8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a00020 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f139fff90 <col:131> 'float' lvalue ParmVar 0x7f9f139ffd70 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f139ffeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f139fff00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a001d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1117:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a000b8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a00130 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f13a00410 <col:105, col:141>
| | | `-ReturnStmt 0x7f9f13a003f8 <col:106, col:139>
| | |   `-CallExpr 0x7f9f13a00390 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a00378 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a002f0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7f9f1391fa38 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f13a003c8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a00328 <col:121> 'long double' lvalue ParmVar 0x7f9f13a000b8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a003e0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a00350 <col:131> 'long double' lvalue ParmVar 0x7f9f13a00130 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a00278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a002c0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a01c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1119:1, line:1133:1> line:1127:1 fmax
| | |-TemplateTypeParmDecl 0x7f9f13a00430 <line:1119:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f13a00498 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f13a01bd8 <line:1120:1, line:1133:1> line:1127:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a01a80 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a01af0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f13a02498 <line:1128:1, line:1133:1>
| |   | |-DeclStmt 0x7f9f13a01ee8 <line:1129:5, col:66>
| |   | | `-TypedefDecl 0x7f9f13a01e90 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f13a01e20 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f13a022e0 <line:1130:5, line:1131:68>
| |   | | `-StaticAssertDecl 0x7f9f13a022a8 <line:1130:5, line:1131:67> line:1130:5
| |   | |   |-ParenExpr 0x7f9f13a02260 <col:19, line:1131:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f13a02240 <line:1130:20, line:1131:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f13a02220 <line:1130:21, line:1131:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f13a021f8 <line:1130:22, line:1131:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f13a02058 <line:1130:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f13a021b8 <line:1131:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f13a02280 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f13a02480 <line:1132:5, col:67>
| |   |   `-CallExpr 0x7f9f13a02448 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f13a02318 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7f9f1390d808 0x7f9f139ffe10 0x7f9f13a001d0 0x7f9f13a01c70
| |   |     |-CStyleCastExpr 0x7f9f13a023c0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a02388 <col:34> '_A1' lvalue ParmVar 0x7f9f13a01a80 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f13a02420 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a023e8 <col:59> '_A2' lvalue ParmVar 0x7f9f13a01af0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f13a01cd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a01d18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a02628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1137:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a02510 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f13a02588 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f13a02868 <col:105, col:141>
| | | `-ReturnStmt 0x7f9f13a02850 <col:106, col:139>
| | |   `-CallExpr 0x7f9f13a027e8 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a027d0 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a02748 <col:113, col:115> 'float (float, float)' lvalue Function 0x7f9f1391fc60 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f13a02820 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a02780 <col:121> 'float' lvalue ParmVar 0x7f9f13a02510 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a02838 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a027a8 <col:131> 'float' lvalue ParmVar 0x7f9f13a02588 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a026d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a02718 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a029e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a028d0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a02948 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f13a02c28 <col:105, col:141>
| | | `-ReturnStmt 0x7f9f13a02c10 <col:106, col:139>
| | |   `-CallExpr 0x7f9f13a02ba8 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a02b90 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a02b08 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7f9f139200b0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f13a02be0 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a02b40 <col:121> 'long double' lvalue ParmVar 0x7f9f13a028d0 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a02bf8 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a02b68 <col:131> 'long double' lvalue ParmVar 0x7f9f13a02948 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a02a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a02ad8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a03490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1140:1, line:1154:1> line:1148:1 fmin
| | |-TemplateTypeParmDecl 0x7f9f13a02c48 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f13a02cb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f13a033f8 <line:1141:1, line:1154:1> line:1148:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a032a0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a03310 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f13a03cb8 <line:1149:1, line:1154:1>
| |   | |-DeclStmt 0x7f9f13a03708 <line:1150:5, col:66>
| |   | | `-TypedefDecl 0x7f9f13a036b0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f13a03640 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f13a03b00 <line:1151:5, line:1152:68>
| |   | | `-StaticAssertDecl 0x7f9f13a03ac8 <line:1151:5, line:1152:67> line:1151:5
| |   | |   |-ParenExpr 0x7f9f13a03a80 <col:19, line:1152:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f13a03a60 <line:1151:20, line:1152:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f13a03a40 <line:1151:21, line:1152:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f13a03a18 <line:1151:22, line:1152:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f13a03878 <line:1151:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f13a039d8 <line:1152:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f13a03aa0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f13a03ca0 <line:1153:5, col:67>
| |   |   `-CallExpr 0x7f9f13a03c68 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f13a03b38 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7f9f1391fe88 0x7f9f13a02628 0x7f9f13a029e8 0x7f9f13a03490
| |   |     |-CStyleCastExpr 0x7f9f13a03be0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a03ba8 <col:34> '_A1' lvalue ParmVar 0x7f9f13a032a0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f13a03c40 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a03c08 <col:59> '_A2' lvalue ParmVar 0x7f9f13a03310 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f13a034f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a03538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a03e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1158:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a03d30 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f13a03da8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f13a04088 <col:106, col:143>
| | | `-ReturnStmt 0x7f9f13a04070 <col:107, col:141>
| | |   `-CallExpr 0x7f9f13a04008 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a03ff0 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a03f68 <col:114, col:116> 'float (float, float)' lvalue Function 0x7f9f13913530 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f13a04040 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a03fa0 <col:123> 'float' lvalue ParmVar 0x7f9f13a03d30 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a04058 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a03fc8 <col:133> 'float' lvalue ParmVar 0x7f9f13a03da8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a03ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a03f38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a04208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1159:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a040f0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a04168 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f13a04448 <col:106, col:143>
| | | `-ReturnStmt 0x7f9f13a04430 <col:107, col:141>
| | |   `-CallExpr 0x7f9f13a043c8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a043b0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a04328 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7f9f13913a00 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f13a04400 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a04360 <col:123> 'long double' lvalue ParmVar 0x7f9f13a040f0 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a04418 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a04388 <col:133> 'long double' lvalue ParmVar 0x7f9f13a04168 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a042b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a042f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a04cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1161:1, line:1175:1> line:1169:1 hypot
| | |-TemplateTypeParmDecl 0x7f9f13a04468 <line:1161:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f13a044d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f13a04c18 <line:1162:1, line:1175:1> line:1169:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a04ac0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a04b30 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f13a054d8 <line:1170:1, line:1175:1>
| |   | |-DeclStmt 0x7f9f13a04f28 <line:1171:5, col:66>
| |   | | `-TypedefDecl 0x7f9f13a04ed0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f13a04e60 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f13a05320 <line:1172:5, line:1173:68>
| |   | | `-StaticAssertDecl 0x7f9f13a052e8 <line:1172:5, line:1173:67> line:1172:5
| |   | |   |-ParenExpr 0x7f9f13a052a0 <col:19, line:1173:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f13a05280 <line:1172:20, line:1173:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f13a05260 <line:1172:21, line:1173:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f13a05238 <line:1172:22, line:1173:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f13a05098 <line:1172:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f13a051f8 <line:1173:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f13a052c0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f13a054c0 <line:1174:5, col:68>
| |   |   `-CallExpr 0x7f9f13a05488 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f13a05358 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7f9f13913758 0x7f9f13a03e48 0x7f9f13a04208 0x7f9f13a04cb0
| |   |     |-CStyleCastExpr 0x7f9f13a05400 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a053c8 <col:35> '_A1' lvalue ParmVar 0x7f9f13a04ac0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f13a05460 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a05428 <col:60> '_A2' lvalue ParmVar 0x7f9f13a04b30 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f13a04d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a04d58 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a055e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1179:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a05550 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a057d8 <col:76, col:103>
| | | `-ReturnStmt 0x7f9f13a057c0 <col:77, col:101>
| | |   `-CallExpr 0x7f9f13a05778 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7f9f13a05760 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a05700 <col:84, col:86> 'int (float)' lvalue Function 0x7f9f139106a0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a057a8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a05738 <col:93> 'float' lvalue ParmVar 0x7f9f13a05550 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a05688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a056d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a078e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1180:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a07848 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a07ad0 <col:76, col:103>
| | | `-ReturnStmt 0x7f9f13a07ab8 <col:77, col:101>
| | |   `-CallExpr 0x7f9f13a07a70 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7f9f13a07a58 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a079f8 <col:84, col:86> 'int (long double)' lvalue Function 0x7f9f13911a90 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a07aa0 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a07a30 <col:93> 'long double' lvalue ParmVar 0x7f9f13a07848 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a07980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a079c8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a08080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1182:1, line:1185:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7f9f13a07af0 <line:1182:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a07fe8 <line:1183:1, line:1185:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a07ed0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a08810 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f13a087f8 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f13a087c8 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7f9f13a087b0 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a08778 <col:39, col:41> 'int (double)' lvalue Function 0x7f9f13910878 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a08200 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a081c0 <col:55> '_A1' lvalue ParmVar 0x7f9f13a07ed0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a080d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a08120 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a08910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a08878 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a08b00 <col:85, col:113>
| | | `-ReturnStmt 0x7f9f13a08ae8 <col:86, col:111>
| | |   `-CallExpr 0x7f9f13a08aa0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a08a88 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a08a28 <col:93, col:95> 'float (float)' lvalue Function 0x7f9f13915110 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a08ad0 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a08a60 <col:103> 'float' lvalue ParmVar 0x7f9f13a08878 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a089b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a089f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a08c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a08b68 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a08df0 <col:85, col:113>
| | | `-ReturnStmt 0x7f9f13a08dd8 <col:86, col:111>
| | |   `-CallExpr 0x7f9f13a08d90 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a08d78 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a08d18 <col:93, col:95> 'long double (long double)' lvalue Function 0x7f9f13915430 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a08dc0 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a08d50 <col:103> 'long double' lvalue ParmVar 0x7f9f13a08b68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a08ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a08ce8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a092b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1195:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7f9f13a08e10 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a09218 <line:1193:1, line:1195:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a09140 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a097d0 <col:32, col:67>
| |   | `-ReturnStmt 0x7f9f13a097b8 <col:33, col:65>
| |   |   `-CallExpr 0x7f9f13a09788 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a09770 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a09738 <col:40, col:42> 'double (double)' lvalue Function 0x7f9f139152a0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a09430 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a093f0 <col:57> '_A1' lvalue ParmVar 0x7f9f13a09140 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a09308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a09350 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a098e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1199:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a09848 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a09b00 <col:83, col:111>
| | | `-ReturnStmt 0x7f9f13a09ae8 <col:84, col:109>
| | |   `-CallExpr 0x7f9f13a09aa0 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7f9f13a09a88 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a099f8 <col:91, col:93> 'long long (float)' lvalue Function 0x7f9f13917e88 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a09ad0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a09a30 <col:101> 'float' lvalue ParmVar 0x7f9f13a09848 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a09980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a099c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a09c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1200:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a09b68 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a09e20 <col:83, col:111>
| | | `-ReturnStmt 0x7f9f13a09e08 <col:84, col:109>
| | |   `-CallExpr 0x7f9f13a09dc0 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7f9f13a09da8 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a09d18 <col:91, col:93> 'long long (long double)' lvalue Function 0x7f9f139182c8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a09df0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a09d50 <col:101> 'long double' lvalue ParmVar 0x7f9f13a09b68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a09ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a09ce8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a0a3d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1202:1, line:1205:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7f9f13a09e40 <line:1202:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a0a338 <line:1203:1, line:1205:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a0a220 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a0ab88 <col:32, col:67>
| |   | `-ReturnStmt 0x7f9f13a0ab70 <col:33, col:65>
| |   |   `-CallExpr 0x7f9f13a0ab40 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7f9f13a0ab28 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a0aac8 <col:40, col:42> 'long long (double)' lvalue Function 0x7f9f139180a8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a0a550 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a0a510 <col:57> '_A1' lvalue ParmVar 0x7f9f13a0a220 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a0a428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a0a470 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0ac88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1209:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0abf0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a0ae78 <col:84, col:113>
| | | `-ReturnStmt 0x7f9f13a0ae60 <col:85, col:111>
| | |   `-CallExpr 0x7f9f13a0ae18 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7f9f13a0ae00 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0ada0 <col:92, col:94> 'long long (float)' lvalue Function 0x7f9f139184a8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a0ae48 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0add8 <col:103> 'float' lvalue ParmVar 0x7f9f13a0abf0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a0ad28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0ad70 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0af78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0aee0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a0b168 <col:84, col:113>
| | | `-ReturnStmt 0x7f9f13a0b150 <col:85, col:111>
| | |   `-CallExpr 0x7f9f13a0b108 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7f9f13a0b0f0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0b090 <col:92, col:94> 'long long (long double)' lvalue Function 0x7f9f139187e8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a0b138 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0b0c8 <col:103> 'long double' lvalue ParmVar 0x7f9f13a0aee0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a0b018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0b060 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a0b630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1212:1, line:1215:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7f9f13a0b188 <line:1212:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a0b598 <line:1213:1, line:1215:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a0b4c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a0bb60 <col:33, col:69>
| |   | `-ReturnStmt 0x7f9f13a0bb48 <col:34, col:67>
| |   |   `-CallExpr 0x7f9f13a0bb18 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7f9f13a0bb00 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a0bac8 <col:41, col:43> 'long long (double)' lvalue Function 0x7f9f13918648 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a0b7b0 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a0b770 <col:59> '_A1' lvalue ParmVar 0x7f9f13a0b4c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a0b688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a0b6d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0bc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1219:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0bbc8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a0be50 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f13a0be38 <col:85, col:109>
| | |   `-CallExpr 0x7f9f13a0bdf0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a0bdd8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0bd78 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f1390c450 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a0be20 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0bdb0 <col:101> 'float' lvalue ParmVar 0x7f9f13a0bbc8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a0bd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0bd48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0bf50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1220:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0beb8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a0c140 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f13a0c128 <col:85, col:109>
| | |   `-CallExpr 0x7f9f13a0c0e0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a0c0c8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0c068 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f1390c790 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a0c110 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0c0a0 <col:101> 'long double' lvalue ParmVar 0x7f9f13a0beb8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a0bff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0c038 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a0c600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1222:1, line:1225:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7f9f13a0c160 <line:1222:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a0c568 <line:1223:1, line:1225:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a0c490 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a0cb20 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f13a0cb08 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f13a0cad8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a0cac0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a0ca88 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f1390c5f0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a0c780 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a0c740 <col:55> '_A1' lvalue ParmVar 0x7f9f13a0c490 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a0c658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a0c6a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0cc20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1229:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0cb88 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a0ce10 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f13a0cdf8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f13a0cdb0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a0cd98 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0cd38 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f1390bf70 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a0cde0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0cd70 <col:99> 'float' lvalue ParmVar 0x7f9f13a0cb88 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a0ccc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0cd08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0cf10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1230:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0ce78 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a0d100 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f13a0d0e8 <col:84, col:107>
| | |   `-CallExpr 0x7f9f13a0d0a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a0d088 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0d028 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f1390c2b0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a0d0d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0d060 <col:99> 'long double' lvalue ParmVar 0x7f9f13a0ce78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a0cfb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0cff8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a0d5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, line:1235:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7f9f13a0d120 <line:1232:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a0d528 <line:1233:1, line:1235:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a0d450 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a0db40 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f13a0db28 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f13a0daf8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a0dae0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a0daa8 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f1390c110 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a0d740 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a0d700 <col:53> '_A1' lvalue ParmVar 0x7f9f13a0d450 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a0d618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a0d660 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0dc40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1239:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0dba8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a0de30 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f13a0de18 <col:84, col:107>
| | |   `-CallExpr 0x7f9f13a0ddd0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a0ddb8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0dd58 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f1390c930 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a0de00 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0dd90 <col:99> 'float' lvalue ParmVar 0x7f9f13a0dba8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a0dce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0dd28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0df30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1240:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0de98 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a0e120 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f13a0e108 <col:84, col:107>
| | |   `-CallExpr 0x7f9f13a0e0c0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a0e0a8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0e048 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f1390dc90 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a0e0f0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0e080 <col:99> 'long double' lvalue ParmVar 0x7f9f13a0de98 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a0dfd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0e018 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a0e5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1242:1, line:1245:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7f9f13a0e140 <line:1242:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a0e548 <line:1243:1, line:1245:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a0e470 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a0eb00 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f13a0eae8 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f13a0eab8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a0eaa0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a0ea68 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f1390daf0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a0e760 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a0e720 <col:53> '_A1' lvalue ParmVar 0x7f9f13a0e470 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a0e638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a0e680 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0ec00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1249:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0eb68 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a0ee20 <col:77, col:104>
| | | `-ReturnStmt 0x7f9f13a0ee08 <col:78, col:102>
| | |   `-CallExpr 0x7f9f13a0edc0 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7f9f13a0eda8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0ed18 <col:85, col:87> 'long (float)' lvalue Function 0x7f9f13916e68 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a0edf0 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0ed50 <col:94> 'float' lvalue ParmVar 0x7f9f13a0eb68 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a0eca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0ece8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0ef20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1250:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0ee88 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a0f140 <col:77, col:104>
| | | `-ReturnStmt 0x7f9f13a0f128 <col:78, col:102>
| | |   `-CallExpr 0x7f9f13a0f0e0 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7f9f13a0f0c8 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a0f038 <col:85, col:87> 'long (long double)' lvalue Function 0x7f9f139172a8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a0f110 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a0f070 <col:94> 'long double' lvalue ParmVar 0x7f9f13a0ee88 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a0efc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a0f008 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a0f6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, line:1255:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7f9f13a0f160 <line:1252:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a0f658 <line:1253:1, line:1255:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a0f540 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a0fee8 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f13a0fed0 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f13a0fea0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7f9f13a0fe88 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a0fe28 <col:39, col:41> 'long (double)' lvalue Function 0x7f9f13917088 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a0f8b0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a0f870 <col:55> '_A1' lvalue ParmVar 0x7f9f13a0f540 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a0f748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a0f790 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a0ffe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1259:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a0ff50 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a101d8 <col:78, col:106>
| | | `-ReturnStmt 0x7f9f13a101c0 <col:79, col:104>
| | |   `-CallExpr 0x7f9f13a10178 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7f9f13a10160 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a10100 <col:86, col:88> 'long (float)' lvalue Function 0x7f9f13917968 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a101a8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a10138 <col:96> 'float' lvalue ParmVar 0x7f9f13a0ff50 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a10088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a100d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a102d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1260:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a10240 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a104c8 <col:78, col:106>
| | | `-ReturnStmt 0x7f9f13a104b0 <col:79, col:104>
| | |   `-CallExpr 0x7f9f13a10468 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7f9f13a10450 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a103f0 <col:86, col:88> 'long (long double)' lvalue Function 0x7f9f13917ca8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a10498 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a10428 <col:96> 'long double' lvalue ParmVar 0x7f9f13a10240 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a10378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a103c0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a10990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, line:1265:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7f9f13a104e8 <line:1262:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a108f8 <line:1263:1, line:1265:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a10820 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a10eb0 <col:32, col:67>
| |   | `-ReturnStmt 0x7f9f13a10e98 <col:33, col:65>
| |   |   `-CallExpr 0x7f9f13a10e68 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7f9f13a10e50 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a10e18 <col:40, col:42> 'long (double)' lvalue Function 0x7f9f13917b08 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a10b10 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a10ad0 <col:57> '_A1' lvalue ParmVar 0x7f9f13a10820 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a109e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a10a30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a10fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1271:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a10f18 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a111a0 <col:88, col:119>
| | | `-ReturnStmt 0x7f9f13a11188 <col:89, col:117>
| | |   `-CallExpr 0x7f9f13a11140 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a11128 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a110c8 <col:96, col:98> 'float (float)' lvalue Function 0x7f9f13916468 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a11170 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a11100 <col:109> 'float' lvalue ParmVar 0x7f9f13a10f18 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a11050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a11098 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a112a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a11208 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a11490 <col:88, col:119>
| | | `-ReturnStmt 0x7f9f13a11478 <col:89, col:117>
| | |   `-CallExpr 0x7f9f13a11430 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a11418 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a113b8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7f9f139167a8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a11460 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a113f0 <col:109> 'long double' lvalue ParmVar 0x7f9f13a11208 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a11340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a11388 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a11970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1274:1, line:1277:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7f9f13a114b0 <line:1274:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a118d8 <line:1275:1, line:1277:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a11800 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a11e90 <col:35, col:73>
| |   | `-ReturnStmt 0x7f9f13a11e78 <col:36, col:71>
| |   |   `-CallExpr 0x7f9f13a11e48 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a11e30 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a11df8 <col:43, col:45> 'double (double)' lvalue Function 0x7f9f13916608 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a11af0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a11ab0 <col:63> '_A1' lvalue ParmVar 0x7f9f13a11800 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a119c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a11a10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a12010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1281:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a11ef8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f13a11f70 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f13a12250 <col:110, col:151>
| | | `-ReturnStmt 0x7f9f13a12238 <col:111, col:149>
| | |   `-CallExpr 0x7f9f13a121d0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a121b8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a12130 <col:118, col:120> 'float (float, float)' lvalue Function 0x7f9f1391b168 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f13a12208 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a12168 <col:131> 'float' lvalue ParmVar 0x7f9f13a11ef8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a12220 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a12190 <col:141> 'float' lvalue ParmVar 0x7f9f13a11f70 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a120b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a12100 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a123d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a122b8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a12330 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f13a12610 <col:110, col:151>
| | | `-ReturnStmt 0x7f9f13a125f8 <col:111, col:149>
| | |   `-CallExpr 0x7f9f13a12590 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a12578 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a124f0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7f9f1391b5b8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f13a125c8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a12528 <col:131> 'long double' lvalue ParmVar 0x7f9f13a122b8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a125e0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a12550 <col:141> 'long double' lvalue ParmVar 0x7f9f13a12330 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a12478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a124c0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a12e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1284:1, line:1298:1> line:1292:1 nextafter
| | |-TemplateTypeParmDecl 0x7f9f13a12630 <line:1284:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f13a12698 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f13a12dd8 <line:1285:1, line:1298:1> line:1292:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a12c80 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a12cf0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f13a13698 <line:1293:1, line:1298:1>
| |   | |-DeclStmt 0x7f9f13a130e8 <line:1294:5, col:66>
| |   | | `-TypedefDecl 0x7f9f13a13090 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f13a13020 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f13a134e0 <line:1295:5, line:1296:68>
| |   | | `-StaticAssertDecl 0x7f9f13a134a8 <line:1295:5, line:1296:67> line:1295:5
| |   | |   |-ParenExpr 0x7f9f13a13460 <col:19, line:1296:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f13a13440 <line:1295:20, line:1296:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f13a13420 <line:1295:21, line:1296:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f13a133f8 <line:1295:22, line:1296:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f13a13258 <line:1295:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f13a133b8 <line:1296:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f13a13480 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f13a13680 <line:1297:5, col:72>
| |   |   `-CallExpr 0x7f9f13a13648 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f13a13518 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7f9f1391b390 0x7f9f13a12010 0x7f9f13a123d0 0x7f9f13a12e70
| |   |     |-CStyleCastExpr 0x7f9f13a135c0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a13588 <col:39> '_A1' lvalue ParmVar 0x7f9f13a12c80 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f13a13620 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a135e8 <col:64> '_A2' lvalue ParmVar 0x7f9f13a12cf0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f13a12ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a12f18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a13840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a13710 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f13a13788 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f13a13ab0 <col:111, col:153>
| | | `-ReturnStmt 0x7f9f13a13a98 <col:112, col:151>
| | |   `-CallExpr 0x7f9f13a13a30 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a13a18 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a13960 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7f9f1390cad8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7f9f13a13a68 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a13998 <col:133> 'float' lvalue ParmVar 0x7f9f13a13710 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a13a80 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a139c0 <col:143> 'long double' lvalue ParmVar 0x7f9f13a13788 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a138e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a13930 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a13c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a13b18 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a13b90 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f13a13e70 <col:111, col:153>
| | | `-ReturnStmt 0x7f9f13a13e58 <col:112, col:151>
| | |   `-CallExpr 0x7f9f13a13df0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a13dd8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a13d50 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7f9f1390cd40 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f13a13e28 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a13d88 <col:133> 'long double' lvalue ParmVar 0x7f9f13a13b18 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a13e40 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a13db0 <col:143> 'long double' lvalue ParmVar 0x7f9f13a13b90 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a13cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a13d20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a14400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7f9f13a13e90 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a14368 <line:1306:1, line:1308:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a141c0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a14238 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7f9f13a14998 <col:58, col:107>
| |   | `-ReturnStmt 0x7f9f13a14980 <col:59, col:105>
| |   |   `-CallExpr 0x7f9f13a14930 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a14918 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a148b8 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7f9f1391b828 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7f9f13a14588 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a14548 <col:87> '_A1' lvalue ParmVar 0x7f9f13a141c0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7f9f13a14968 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7f9f13a145b0 <col:97> 'long double' lvalue ParmVar 0x7f9f13a14238 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7f9f13a14460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a144a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a14b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a14a00 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f13a14a78 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7f9f13a14d58 <col:110, col:151>
| | | `-ReturnStmt 0x7f9f13a14d40 <col:111, col:149>
| | |   `-CallExpr 0x7f9f13a14cd8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a14cc0 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a14c38 <col:118, col:120> 'float (float, float)' lvalue Function 0x7f9f139195d8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7f9f13a14d10 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a14c70 <col:131> 'float' lvalue ParmVar 0x7f9f13a14a00 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a14d28 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a14c98 <col:141> 'float' lvalue ParmVar 0x7f9f13a14a78 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a14bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a14c08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a14ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a14dc0 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a14e38 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7f9f13a15118 <col:110, col:151>
| | | `-ReturnStmt 0x7f9f13a15100 <col:111, col:149>
| | |   `-CallExpr 0x7f9f13a15098 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a15080 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a14ff8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7f9f13919a38 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7f9f13a150d0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a15030 <col:131> 'long double' lvalue ParmVar 0x7f9f13a14dc0 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a150e8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a15058 <col:141> 'long double' lvalue ParmVar 0x7f9f13a14e38 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a14f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a14fc8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a15980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1329:1> line:1323:1 remainder
| | |-TemplateTypeParmDecl 0x7f9f13a15138 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f13a151a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f13a158e8 <line:1316:1, line:1329:1> line:1323:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a15790 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a15800 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7f9f13a161a8 <line:1324:1, line:1329:1>
| |   | |-DeclStmt 0x7f9f13a15bf8 <line:1325:5, col:66>
| |   | | `-TypedefDecl 0x7f9f13a15ba0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f13a15b30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f13a15ff0 <line:1326:5, line:1327:68>
| |   | | `-StaticAssertDecl 0x7f9f13a15fb8 <line:1326:5, line:1327:67> line:1326:5
| |   | |   |-ParenExpr 0x7f9f13a15f70 <col:19, line:1327:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f13a15f50 <line:1326:20, line:1327:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f13a15f30 <line:1326:21, line:1327:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f13a15f08 <line:1326:22, line:1327:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f13a15d68 <line:1326:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f13a15ec8 <line:1327:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f13a15f90 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f13a16190 <line:1328:5, col:72>
| |   |   `-CallExpr 0x7f9f13a16158 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f13a16028 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7f9f13919800 0x7f9f13a14b18 0x7f9f13a14ed8 0x7f9f13a15980
| |   |     |-CStyleCastExpr 0x7f9f13a160d0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a16098 <col:39> '_A1' lvalue ParmVar 0x7f9f13a15790 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7f9f13a16130 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a160f8 <col:64> '_A2' lvalue ParmVar 0x7f9f13a15800 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7f9f13a159e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a15a28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a16400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a16220 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f13a16298 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7f9f13a16310 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7f9f13a166c0 <col:122, col:170>
| | | `-ReturnStmt 0x7f9f13a166a8 <col:123, col:168>
| | |   `-CallExpr 0x7f9f13a16620 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a16608 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a16528 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7f9f13919d28 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7f9f13a16660 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a16560 <col:140> 'float' lvalue ParmVar 0x7f9f13a16220 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a16678 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a16588 <col:150> 'float' lvalue ParmVar 0x7f9f13a16298 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a16690 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a165b0 <col:160> 'int *' lvalue ParmVar 0x7f9f13a16310 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7f9f13a164b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a164f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a16910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1334:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a16728 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a167a0 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7f9f13a16818 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7f9f13a16bd0 <col:122, col:170>
| | | `-ReturnStmt 0x7f9f13a16bb8 <col:123, col:168>
| | |   `-CallExpr 0x7f9f13a16b30 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a16b18 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a16a38 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7f9f1391a268 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7f9f13a16b70 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a16a70 <col:140> 'long double' lvalue ParmVar 0x7f9f13a16728 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a16b88 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a16a98 <col:150> 'long double' lvalue ParmVar 0x7f9f13a167a0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a16ba0 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a16ac0 <col:160> 'int *' lvalue ParmVar 0x7f9f13a16818 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7f9f13a169c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a16a08 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a17510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1336:1, line:1350:1> line:1344:1 remquo
| | |-TemplateTypeParmDecl 0x7f9f13a16bf0 <line:1336:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7f9f13a16c58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7f9f13a17478 <line:1337:1, line:1350:1> line:1344:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a17240 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a172b0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7f9f13a17328 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7f9f13a17d88 <line:1345:1, line:1350:1>
| |   | |-DeclStmt 0x7f9f13a17788 <line:1346:5, col:66>
| |   | | `-TypedefDecl 0x7f9f13a17730 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7f9f13a176c0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7f9f13a17ba0 <line:1347:5, line:1348:68>
| |   | | `-StaticAssertDecl 0x7f9f13a17b68 <line:1347:5, line:1348:67> line:1347:5
| |   | |   |-ParenExpr 0x7f9f13a17b20 <col:19, line:1348:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7f9f13a17b00 <line:1347:20, line:1348:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7f9f13a17ae0 <line:1347:21, line:1348:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7f9f13a17ab8 <line:1347:22, line:1348:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7f9f13a17918 <line:1347:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7f9f13a17a78 <line:1348:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7f9f13a17b40 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7f9f13a17d70 <line:1349:5, col:79>
| |   |   `-CallExpr 0x7f9f13a17d30 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7f9f13a17bd8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7f9f13919fc8 0x7f9f13a16400 0x7f9f13a16910 0x7f9f13a17510
| |   |     |-CStyleCastExpr 0x7f9f13a17c80 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a17c48 <col:36> '_A1' lvalue ParmVar 0x7f9f13a17240 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7f9f13a17ce0 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a17ca8 <col:61> '_A2' lvalue ParmVar 0x7f9f13a172b0 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7f9f13a17d08 <col:71> 'int *' lvalue ParmVar 0x7f9f13a17328 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7f9f13a17578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a175c0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a17e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a17e00 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a18088 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f13a18070 <col:84, col:107>
| | |   `-CallExpr 0x7f9f13a18028 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a18010 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a17fb0 <col:91, col:93> 'float (float)' lvalue Function 0x7f9f13916948 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a18058 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a17fe8 <col:99> 'float' lvalue ParmVar 0x7f9f13a17e00 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a17f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a17f80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a18188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a180f0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a18378 <col:83, col:109>
| | | `-ReturnStmt 0x7f9f13a18360 <col:84, col:107>
| | |   `-CallExpr 0x7f9f13a18318 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a18300 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a182a0 <col:91, col:93> 'long double (long double)' lvalue Function 0x7f9f13916c90 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a18348 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a182d8 <col:99> 'long double' lvalue ParmVar 0x7f9f13a180f0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a18228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a18270 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a18840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1360:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7f9f13a18398 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a187a8 <line:1358:1, line:1360:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a186d0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a18d60 <col:30, col:63>
| |   | `-ReturnStmt 0x7f9f13a18d48 <col:31, col:61>
| |   |   `-CallExpr 0x7f9f13a18d18 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a18d00 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a18cc8 <col:38, col:40> 'double (double)' lvalue Function 0x7f9f13916af0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a189c0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a18980 <col:53> '_A1' lvalue ParmVar 0x7f9f13a186d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a18898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a188e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a18e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1364:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a18dc8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a19050 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f13a19038 <col:85, col:109>
| | |   `-CallExpr 0x7f9f13a18ff0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a18fd8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a18f78 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f13917488 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a19020 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a18fb0 <col:101> 'float' lvalue ParmVar 0x7f9f13a18dc8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a18f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a18f48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a19150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1365:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a190b8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a19340 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f13a19328 <col:85, col:109>
| | |   `-CallExpr 0x7f9f13a192e0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a192c8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a19268 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f139177c8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a19310 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a192a0 <col:101> 'long double' lvalue ParmVar 0x7f9f13a190b8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a191f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a19238 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a19800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1367:1, line:1370:65> col:1 round
| | |-TemplateTypeParmDecl 0x7f9f13a19360 <line:1367:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a19768 <line:1368:1, line:1370:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a19690 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a19d20 <col:31, col:65>
| |   | `-ReturnStmt 0x7f9f13a19d08 <col:32, col:63>
| |   |   `-CallExpr 0x7f9f13a19cd8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a19cc0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a19c88 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f13917628 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a19980 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a19940 <col:55> '_A1' lvalue ParmVar 0x7f9f13a19690 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a19858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a198a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a19ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1374:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a19d88 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f13a19e00 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7f9f13a1a110 <col:101, col:140>
| | | `-ReturnStmt 0x7f9f13a1a0f8 <col:102, col:138>
| | |   `-CallExpr 0x7f9f13a1a090 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a1a078 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a19fc0 <col:109, col:111> 'float (float, long)' lvalue Function 0x7f9f139123a8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7f9f13a1a0c8 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a19ff8 <col:120> 'float' lvalue ParmVar 0x7f9f13a19d88 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a1a0e0 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a1a020 <col:130> 'long' lvalue ParmVar 0x7f9f13a19e00 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7f9f13a19f48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a19f90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a1a290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a1a178 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a1a1f0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7f9f13a1a500 <col:101, col:140>
| | | `-ReturnStmt 0x7f9f13a1a4e8 <col:102, col:138>
| | |   `-CallExpr 0x7f9f13a1a480 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a1a468 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a1a3b0 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7f9f13912908 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7f9f13a1a4b8 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a1a3e8 <col:120> 'long double' lvalue ParmVar 0x7f9f13a1a178 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a1a4d0 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a1a410 <col:130> 'long' lvalue ParmVar 0x7f9f13a1a1f0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7f9f13a1a338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a1a380 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a1aa90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1377:1, line:1380:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7f9f13a1a520 <line:1377:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a1a9f8 <line:1378:1, line:1380:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a1a850 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a1a8c8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7f9f13a1b028 <col:48, col:94>
| |   | `-ReturnStmt 0x7f9f13a1b010 <col:49, col:92>
| |   |   `-CallExpr 0x7f9f13a1afc0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a1afa8 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a1af48 <col:56, col:58> 'double (double, long)' lvalue Function 0x7f9f13912658 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7f9f13a1ac18 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a1abd8 <col:74> '_A1' lvalue ParmVar 0x7f9f13a1a850 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7f9f13a1aff8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7f9f13a1ac40 <col:84> 'long' lvalue ParmVar 0x7f9f13a1a8c8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7f9f13a1aaf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a1ab38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a1b1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1384:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a1b090 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7f9f13a1b108 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7f9f13a1b3e8 <col:99, col:137>
| | | `-ReturnStmt 0x7f9f13a1b3d0 <col:100, col:135>
| | |   `-CallExpr 0x7f9f13a1b368 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a1b350 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a1b2c8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7f9f13911ce8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7f9f13a1b3a0 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a1b300 <col:117> 'float' lvalue ParmVar 0x7f9f13a1b090 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7f9f13a1b3b8 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a1b328 <col:127> 'int' lvalue ParmVar 0x7f9f13a1b108 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7f9f13a1b250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a1b298 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a1b568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a1b450 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7f9f13a1b4c8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7f9f13a1b7a8 <col:99, col:137>
| | | `-ReturnStmt 0x7f9f13a1b790 <col:100, col:135>
| | |   `-CallExpr 0x7f9f13a1b728 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a1b710 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a1b688 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7f9f13912138 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7f9f13a1b760 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7f9f13a1b6c0 <col:117> 'long double' lvalue ParmVar 0x7f9f13a1b450 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7f9f13a1b778 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a1b6e8 <col:127> 'int' lvalue ParmVar 0x7f9f13a1b4c8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7f9f13a1b610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a1b658 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a1bd30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1387:1, line:1390:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7f9f13a1b800 <line:1387:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a1bc98 <line:1388:1, line:1390:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a1bb30 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7f9f13a1bba8 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7f9f13a1c2a0 <col:46, col:91>
| |   | `-ReturnStmt 0x7f9f13a1c288 <col:47, col:89>
| |   |   `-CallExpr 0x7f9f13a1c238 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a1c220 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a1c1e8 <col:54, col:56> 'double (double, int)' lvalue Function 0x7f9f13911f10 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7f9f13a1beb8 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7f9f13a1be78 <col:71> '_A1' lvalue ParmVar 0x7f9f13a1bb30 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7f9f13a1c270 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7f9f13a1bee0 <col:81> 'int' lvalue ParmVar 0x7f9f13a1bba8 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7f9f13a1bd90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a1bdd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a1c3a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1394:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a1c308 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a1c590 <col:85, col:113>
| | | `-ReturnStmt 0x7f9f13a1c578 <col:86, col:111>
| | |   `-CallExpr 0x7f9f13a1c530 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a1c518 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a1c4b8 <col:93, col:95> 'float (float)' lvalue Function 0x7f9f139155c0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a1c560 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a1c4f0 <col:103> 'float' lvalue ParmVar 0x7f9f13a1c308 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a1c440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a1c488 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a1c690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1395:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a1c5f8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a1c880 <col:85, col:113>
| | | `-ReturnStmt 0x7f9f13a1c868 <col:86, col:111>
| | |   `-CallExpr 0x7f9f13a1c820 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a1c808 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a1c7a8 <col:93, col:95> 'long double (long double)' lvalue Function 0x7f9f13915900 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a1c850 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a1c7e0 <col:103> 'long double' lvalue ParmVar 0x7f9f13a1c5f8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a1c730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a1c778 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7f9f13a1cd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1397:1, line:1400:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7f9f13a1c8a0 <line:1397:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7f9f13a1cca8 <line:1398:1, line:1400:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7f9f13a1cbd0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7f9f13a1d260 <col:32, col:67>
| |   | `-ReturnStmt 0x7f9f13a1d248 <col:33, col:65>
| |   |   `-CallExpr 0x7f9f13a1d218 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7f9f13a1d200 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7f9f13a1d1c8 <col:40, col:42> 'double (double)' lvalue Function 0x7f9f13915760 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7f9f13a1cec0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7f9f13a1ce80 <col:57> '_A1' lvalue ParmVar 0x7f9f13a1cbd0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7f9f13a1cd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7f9f13a1cde0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a1d360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1404:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a1d2c8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7f9f13a1d550 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f13a1d538 <col:85, col:109>
| | |   `-CallExpr 0x7f9f13a1d4f0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7f9f13a1d4d8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a1d478 <col:92, col:94> 'float (float)' lvalue Function 0x7f9f13918a00 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7f9f13a1d520 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a1d4b0 <col:101> 'float' lvalue ParmVar 0x7f9f13a1d2c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7f9f13a1d400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a1d448 <col:51, col:74> Hidden
| |-FunctionDecl 0x7f9f13a1d650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1405:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7f9f13a1d5b8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7f9f13a1d840 <col:84, col:111>
| | | `-ReturnStmt 0x7f9f13a1d828 <col:85, col:109>
| | |   `-CallExpr 0x7f9f13a1d7e0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7f9f13a1d7c8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7f9f13a1d768 <col:92, col:94> 'long double (long double)' lvalue Function 0x7f9f13918d40 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7f9f13a1d810 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7f9f13a1d7a0 <col:101> 'long double' lvalue ParmVar 0x7f9f13a1d5b8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7f9f13a1d6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7f9f13a1d738 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7f9f13a1dd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, line:1410:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7f9f13a1d860 <line:1407:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7f9f13a1dc68 <line:1408:1, line:1410:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7f9f13a1db90 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7f9f13a1e220 <col:31, col:65>
|     | `-ReturnStmt 0x7f9f13a1e208 <col:32, col:63>
|     |   `-CallExpr 0x7f9f13a1e1d8 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7f9f13a1e1c0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7f9f13a1e188 <col:39, col:41> 'double (double)' lvalue Function 0x7f9f13918ba0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7f9f13a1de80 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7f9f13a1de40 <col:55> '_A1' lvalue ParmVar 0x7f9f13a1db90 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7f9f13a1dd58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
|     `-VisibilityAttr 0x7f9f13a1dda0 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7f9f14008658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:436:12> col:12 implicit C
| `-FunctionDecl 0x7f9f140086a8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7f9f14008740 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7f9f140087a8 <col:12> Implicit
|   `-ConstAttr 0x7f9f140087f0 <col:12> Implicit
|-LinkageSpecDecl 0x7f9f139b9d80 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7f9f139b9dd0 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f139b9e68 <col:25> Implicit
|   `-ConstAttr 0x7f9f139b9eb0 <col:25> Implicit
|-LinkageSpecDecl 0x7f9f139bb128 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7f9f139bb178 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f139bb210 <col:30> Implicit
|   `-ConstAttr 0x7f9f139bb258 <col:30> Implicit
|-LinkageSpecDecl 0x7f9f139bc2a8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7f9f139bc2f8 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f139bc390 <col:22> Implicit
|   `-ConstAttr 0x7f9f139bc3d8 <col:22> Implicit
|-LinkageSpecDecl 0x7f9f139bd418 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7f9f139bd468 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f139bd500 <col:27> Implicit
|   `-ConstAttr 0x7f9f139bd548 <col:27> Implicit
|-LinkageSpecDecl 0x7f9f139be5c8 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7f9f139be618 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f139be6b0 <col:29> Implicit
|   `-ConstAttr 0x7f9f139be6f8 <col:29> Implicit
|-LinkageSpecDecl 0x7f9f139bf738 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7f9f139bf800 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f139bf898 <col:27> Implicit
|   `-ConstAttr 0x7f9f139bf8e0 <col:27> Implicit
|-NamespaceDecl 0x7f9f13a1e240 prev 0x7f9f14000ac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:410:37, line:411:38> line:410:47 std
| |-original Namespace 0x7f9f13863258 'std'
| `-NamespaceDecl 0x7f9f13a1e2a8 prev 0x7f9f14000b30 <col:52, line:411:36> <scratch space>:421:1 __1 inline
|   |-original Namespace 0x7f9f138632c0 '__1'
|   |-UsingDecl 0x7f9f13a1e318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7f9f13a1e368 <col:9> col:9 implicit FunctionTemplate 0x7f9f139b3d60 'signbit'
|   |-UsingDecl 0x7f9f13a1e3b8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7f9f13a1e408 <col:9> col:9 implicit FunctionTemplate 0x7f9f139b50a0 'fpclassify'
|   |-UsingDecl 0x7f9f13a1e458 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7f9f13a1e4a8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139b61f0 'isfinite'
|   |-UsingDecl 0x7f9f13a1e4f8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7f9f13a1e548 <col:9> col:9 implicit FunctionTemplate 0x7f9f139b7330 'isinf'
|   |-UsingDecl 0x7f9f13a1e598 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7f9f13a1e5e8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139b84d0 'isnan'
|   |-UsingDecl 0x7f9f13a1e638 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7f9f13a1e688 <col:9> col:9 implicit FunctionTemplate 0x7f9f139b9610 'isnormal'
|   |-UsingDecl 0x7f9f13a1e6d8 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7f9f13a1e728 <col:9> col:9 implicit FunctionTemplate 0x7f9f139ba830 'isgreater'
|   |-UsingDecl 0x7f9f13a1e778 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7f9f13a1e7c8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139bba80 'isgreaterequal'
|   |-UsingDecl 0x7f9f13a1e818 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7f9f13a1e868 <col:9> col:9 implicit FunctionTemplate 0x7f9f139bcbf0 'isless'
|   |-UsingDecl 0x7f9f13a1e8b8 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7f9f13a1e908 <col:9> col:9 implicit FunctionTemplate 0x7f9f139bdda0 'islessequal'
|   |-UsingDecl 0x7f9f13a1e958 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7f9f13a1e9a8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139bef10 'islessgreater'
|   |-UsingDecl 0x7f9f13a1e9f8 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7f9f13a1ea48 <col:9> col:9 implicit FunctionTemplate 0x7f9f139c0100 'isunordered'
|   |-UsingDecl 0x7f9f13a1ea98 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7f9f13a1eae8 prev 0x7f9f13a1ea48 <col:9> col:9 implicit FunctionTemplate 0x7f9f139c0100 'isunordered'
|   |-UsingDecl 0x7f9f13a1eb38 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7f9f13a1eb88 <col:9> col:9 implicit Typedef 0x7f9f13863440 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7f9f13a1ebd8 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7f9f13a1ec28 <col:9> col:9 implicit Typedef 0x7f9f138634b0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7f9f13a1ec78 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7f9f13a1ecc8 <col:9> col:9 implicit Function 0x7f9f139c0628 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1ed10 <col:9> col:9 implicit Function 0x7f9f139c0918 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1ed58 <col:9> col:9 implicit Function 0x7f9f139c0c08 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7f9f13a1eda8 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7f9f13a1edf8 <col:9> col:9 implicit Function 0x7f9f13904cd8 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a1ee40 <col:9> col:9 implicit Function 0x7f9f139c0ef8 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1ee88 <col:9> col:9 implicit Function 0x7f9f139c11e8 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1eed0 <col:9> col:9 implicit FunctionTemplate 0x7f9f139d99b0 'acos'
|   |-UsingDecl 0x7f9f13a1ef20 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7f9f13a1ef70 <col:9> col:9 implicit Function 0x7f9f13904b38 'acosf' 'float (float)'
|   |-UsingDecl 0x7f9f13a1efc0 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7f9f13a1f010 <col:9> col:9 implicit Function 0x7f9f13905200 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a1f058 <col:9> col:9 implicit Function 0x7f9f139db5b0 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1f0a0 <col:9> col:9 implicit Function 0x7f9f139db8b0 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1f0e8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139dbf60 'asin'
|   |-UsingDecl 0x7f9f13a1f138 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7f9f13a1f188 <col:9> col:9 implicit Function 0x7f9f13905018 'asinf' 'float (float)'
|   |-UsingDecl 0x7f9f13a1f1d8 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7f9f13a1f228 <col:9> col:9 implicit Function 0x7f9f139056e0 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a1f270 <col:9> col:9 implicit Function 0x7f9f139dc580 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1f2b8 <col:9> col:9 implicit Function 0x7f9f139dc870 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1f300 <col:9> col:9 implicit FunctionTemplate 0x7f9f139dcf20 'atan'
|   |-UsingDecl 0x7f9f13a1f350 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7f9f13a1f3a0 <col:9> col:9 implicit Function 0x7f9f13905540 'atanf' 'float (float)'
|   |-UsingDecl 0x7f9f13a1f3f0 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7f9f13a1f440 <col:9> col:9 implicit Function 0x7f9f13905d98 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a1f488 <col:9> col:9 implicit Function 0x7f9f139dd5c0 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1f4d0 <col:9> col:9 implicit Function 0x7f9f139dd9b0 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1f518 <col:9> col:9 implicit FunctionTemplate 0x7f9f139de580 'atan2'
|   |-UsingDecl 0x7f9f13a1f568 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7f9f13a1f5b8 <col:9> col:9 implicit Function 0x7f9f13905ae8 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a1f608 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7f9f13a1f658 <col:9> col:9 implicit Function 0x7f9f13915c48 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a1f6a0 <col:9> col:9 implicit Function 0x7f9f139def98 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1f6e8 <col:9> col:9 implicit Function 0x7f9f139df288 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a1f730 <col:9> col:9 implicit FunctionTemplate 0x7f9f139df970 'ceil'
|   |-UsingDecl 0x7f9f13a1f780 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7f9f13a22400 <col:9> col:9 implicit Function 0x7f9f13915aa8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7f9f13a22450 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7f9f13a224a0 <col:9> col:9 implicit Function 0x7f9f13906bd0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a224e8 <col:9> col:9 implicit Function 0x7f9f139dff90 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22530 <col:9> col:9 implicit Function 0x7f9f139e0280 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22578 <col:9> col:9 implicit FunctionTemplate 0x7f9f139e0930 'cos'
|   |-UsingDecl 0x7f9f13a225c8 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7f9f13a22618 <col:9> col:9 implicit Function 0x7f9f13906a30 'cosf' 'float (float)'
|   |-UsingDecl 0x7f9f13a22668 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7f9f13a226b8 <col:9> col:9 implicit Function 0x7f9f13909130 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a22700 <col:9> col:9 implicit Function 0x7f9f139e0f50 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22748 <col:9> col:9 implicit Function 0x7f9f139e1240 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22790 <col:9> col:9 implicit FunctionTemplate 0x7f9f139e1910 'cosh'
|   |-UsingDecl 0x7f9f13a227e0 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7f9f13a22830 <col:9> col:9 implicit Function 0x7f9f13908f90 'coshf' 'float (float)'
|   |-UsingDecl 0x7f9f13a22880 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7f9f13a228d0 <col:9> col:9 implicit Function 0x7f9f1390a7f0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a22918 <col:9> col:9 implicit Function 0x7f9f139e1f30 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22960 <col:9> col:9 implicit Function 0x7f9f139e2220 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a229a8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139e28d0 'exp'
|   |-UsingDecl 0x7f9f13a229f8 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7f9f13a22a48 <col:9> col:9 implicit Function 0x7f9f1390a650 'expf' 'float (float)'
|   |-UsingDecl 0x7f9f13a22a98 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7f9f13a22ae8 <col:9> col:9 implicit Function 0x7f9f13912c90 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a22b30 <col:9> col:9 implicit Function 0x7f9f139e2ef0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22b78 <col:9> col:9 implicit Function 0x7f9f139e31e0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22bc0 <col:9> col:9 implicit FunctionTemplate 0x7f9f139e3898 'fabs'
|   |-UsingDecl 0x7f9f13a22c10 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7f9f13a22c60 <col:9> col:9 implicit Function 0x7f9f13912af0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7f9f13a22cb0 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7f9f13a22d00 <col:9> col:9 implicit Function 0x7f9f13916128 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a22d48 <col:9> col:9 implicit Function 0x7f9f139e3ec0 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22d90 <col:9> col:9 implicit Function 0x7f9f139e41b0 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22dd8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139e4860 'floor'
|   |-UsingDecl 0x7f9f13a22e28 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7f9f13a22e78 <col:9> col:9 implicit Function 0x7f9f13915f88 'floorf' 'float (float)'
|   |-UsingDecl 0x7f9f13a22ec8 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7f9f13a22f18 <col:9> col:9 implicit Function 0x7f9f13919188 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a22f60 <col:9> col:9 implicit Function 0x7f9f139e4f00 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22fa8 <col:9> col:9 implicit Function 0x7f9f139e52c0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a22ff0 <col:9> col:9 implicit FunctionTemplate 0x7f9f139e5d80 'fmod'
|   |-UsingDecl 0x7f9f13a23040 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7f9f13a23090 <col:9> col:9 implicit Function 0x7f9f13918f60 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a230e0 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7f9f13a23130 <col:9> col:9 implicit Function 0x7f9f13910228 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7f9f13a23178 <col:9> col:9 implicit Function 0x7f9f139e6738 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7f9f13a231c0 <col:9> col:9 implicit Function 0x7f9f139e6b50 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23208 <col:9> col:9 implicit FunctionTemplate 0x7f9f139e7380 'frexp'
|   |-UsingDecl 0x7f9f13a23258 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7f9f13a232a8 <col:9> col:9 implicit Function 0x7f9f1390ff88 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7f9f13a232f8 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7f9f13a23348 <col:9> col:9 implicit Function 0x7f9f1390fa00 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7f9f13a23390 <col:9> col:9 implicit Function 0x7f9f139e8ad8 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7f9f13a233d8 <col:9> col:9 implicit Function 0x7f9f139e8ec0 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23420 <col:9> col:9 implicit FunctionTemplate 0x7f9f139e96c0 'ldexp'
|   |-UsingDecl 0x7f9f13a23470 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7f9f13a234c0 <col:9> col:9 implicit Function 0x7f9f1390e738 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7f9f13a23510 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7f9f13a23560 <col:9> col:9 implicit Function 0x7f9f1390b700 'log' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a235a8 <col:9> col:9 implicit Function 0x7f9f139e9d58 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a235f0 <col:9> col:9 implicit Function 0x7f9f139ea048 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23638 <col:9> col:9 implicit FunctionTemplate 0x7f9f139ea700 'log'
|   |-UsingDecl 0x7f9f13a23688 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7f9f13a236d8 <col:9> col:9 implicit Function 0x7f9f1390b560 'logf' 'float (float)'
|   |-UsingDecl 0x7f9f13a23728 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7f9f13a23778 <col:9> col:9 implicit Function 0x7f9f1390bc30 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a237c0 <col:9> col:9 implicit Function 0x7f9f139ead50 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23808 <col:9> col:9 implicit Function 0x7f9f139eb040 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23850 <col:9> col:9 implicit FunctionTemplate 0x7f9f139eb6f0 'log10'
|   |-UsingDecl 0x7f9f13a238a0 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7f9f13a238f0 <col:9> col:9 implicit Function 0x7f9f1390ba90 'log10f' 'float (float)'
|   |-UsingDecl 0x7f9f13a23940 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7f9f13a23990 <col:9> col:9 implicit Function 0x7f9f1390e1d8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7f9f13a239d8 <col:9> col:9 implicit Function 0x7f9f139ebd90 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23a20 <col:9> col:9 implicit Function 0x7f9f139ec1b0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7f9f13a23a70 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7f9f13a23ac0 <col:9> col:9 implicit Function 0x7f9f1390df18 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7f9f13a23b10 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7f9f13a23b60 <col:9> col:9 implicit Function 0x7f9f13913e50 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a23ba8 <col:9> col:9 implicit Function 0x7f9f139ec5d0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23bf0 <col:9> col:9 implicit Function 0x7f9f139ec998 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23c38 <col:9> col:9 implicit FunctionTemplate 0x7f9f139ed440 'pow'
|   |-UsingDecl 0x7f9f13a23c88 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7f9f13a23cd8 <col:9> col:9 implicit Function 0x7f9f13913c28 'powf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a23d28 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7f9f13a23d78 <col:9> col:9 implicit Function 0x7f9f139070b0 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a23dc0 <col:9> col:9 implicit Function 0x7f9f139edd78 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23e08 <col:9> col:9 implicit Function 0x7f9f139ee068 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a23e50 <col:9> col:9 implicit FunctionTemplate 0x7f9f139ee720 'sin'
|   |-UsingDecl 0x7f9f13a23ea0 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7f9f13a23ef0 <col:9> col:9 implicit Function 0x7f9f13906f10 'sinf' 'float (float)'
|   |-UsingDecl 0x7f9f13a23f40 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7f9f13a23f90 <col:9> col:9 implicit Function 0x7f9f13909e30 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a23fd8 <col:9> col:9 implicit Function 0x7f9f139eed50 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a24020 <col:9> col:9 implicit Function 0x7f9f139ef040 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a24068 <col:9> col:9 implicit FunctionTemplate 0x7f9f139ef6f0 'sinh'
|   |-UsingDecl 0x7f9f13a240b8 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7f9f13a24108 <col:9> col:9 implicit Function 0x7f9f13909c90 'sinhf' 'float (float)'
|   |-UsingDecl 0x7f9f13a24158 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7f9f13a241a8 <col:9> col:9 implicit Function 0x7f9f139143c0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a241f0 <col:9> col:9 implicit Function 0x7f9f139efd10 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a24238 <col:9> col:9 implicit Function 0x7f9f139f0000 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a24280 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f06b0 'sqrt'
|   |-UsingDecl 0x7f9f13a242d0 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7f9f13a24320 <col:9> col:9 implicit Function 0x7f9f13914220 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7f9f13a24370 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7f9f13a24c00 <col:9> col:9 implicit Function 0x7f9f13907590 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a24c48 <col:9> col:9 implicit Function 0x7f9f139f0ce0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a24c90 <col:9> col:9 implicit Function 0x7f9f139f0fd0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a24cd8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f1680 'tan'
|   |-UsingDecl 0x7f9f13a24d28 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7f9f13a24d78 <col:9> col:9 implicit Function 0x7f9f139073f0 'tanf' 'float (float)'
|   |-UsingDecl 0x7f9f13a24dc8 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7f9f13a24e18 <col:9> col:9 implicit Function 0x7f9f1390a310 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a24e60 <col:9> col:9 implicit Function 0x7f9f139f1ca0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a24ea8 <col:9> col:9 implicit Function 0x7f9f139f1f90 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a24ef0 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f2640 'tanh'
|   |-UsingDecl 0x7f9f13a24f40 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7f9f13a24f90 <col:9> col:9 implicit Function 0x7f9f1390a170 'tanhf' 'float (float)'
|   |-UsingDecl 0x7f9f13a24fe0 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7f9f13a25030 <col:9> col:9 implicit Function 0x7f9f13908290 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a25078 <col:9> col:9 implicit Function 0x7f9f139f2c60 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a250c0 <col:9> col:9 implicit Function 0x7f9f139f2f50 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25108 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f3600 'acosh'
|   |-UsingDecl 0x7f9f13a25158 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7f9f13a251a8 <col:9> col:9 implicit Function 0x7f9f139078d0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7f9f13a251f8 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7f9f13a25248 <col:9> col:9 implicit Function 0x7f9f13908770 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a25290 <col:9> col:9 implicit Function 0x7f9f139f3c20 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a252d8 <col:9> col:9 implicit Function 0x7f9f139f3f10 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25320 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f45c0 'asinh'
|   |-UsingDecl 0x7f9f13a25370 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7f9f13a253c0 <col:9> col:9 implicit Function 0x7f9f139085d0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7f9f13a25410 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7f9f13a25460 <col:9> col:9 implicit Function 0x7f9f13908c50 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a254a8 <col:9> col:9 implicit Function 0x7f9f139f4c40 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a254f0 <col:9> col:9 implicit Function 0x7f9f139f4f30 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25538 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f55e0 'atanh'
|   |-UsingDecl 0x7f9f13a25588 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7f9f13a255d8 <col:9> col:9 implicit Function 0x7f9f13908ab0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7f9f13a25628 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7f9f13a25678 <col:9> col:9 implicit Function 0x7f9f13913170 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a256c0 <col:9> col:9 implicit Function 0x7f9f139f5c00 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25708 <col:9> col:9 implicit Function 0x7f9f139f5ef0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25750 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f65a0 'cbrt'
|   |-UsingDecl 0x7f9f13a257a0 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7f9f13a257f0 <col:9> col:9 implicit Function 0x7f9f13912fd0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7f9f13a25840 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7f9f13a25890 <col:9> col:9 implicit Function 0x7f9f1391a668 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a258d8 <col:9> col:9 implicit Function 0x7f9f139f6cc0 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25920 <col:9> col:9 implicit Function 0x7f9f139f7080 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25968 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f7b20 'copysign'
|   |-UsingDecl 0x7f9f13a259b8 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7f9f13a25a08 <col:9> col:9 implicit Function 0x7f9f1391a440 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a25a58 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7f9f13a25aa8 <col:9> col:9 implicit Function 0x7f9f139148a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a25af0 <col:9> col:9 implicit Function 0x7f9f139f8458 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25b38 <col:9> col:9 implicit Function 0x7f9f139f8748 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25b80 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f8e00 'erf'
|   |-UsingDecl 0x7f9f13a25bd0 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7f9f13a25c20 <col:9> col:9 implicit Function 0x7f9f13914700 'erff' 'float (float)'
|   |-UsingDecl 0x7f9f13a25c70 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7f9f13a25cc0 <col:9> col:9 implicit Function 0x7f9f13914dd0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a25d08 <col:9> col:9 implicit Function 0x7f9f139f9420 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25d50 <col:9> col:9 implicit Function 0x7f9f139f9710 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25d98 <col:9> col:9 implicit FunctionTemplate 0x7f9f139f9dc0 'erfc'
|   |-UsingDecl 0x7f9f13a25de8 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7f9f13a25e38 <col:9> col:9 implicit Function 0x7f9f13914c30 'erfcf' 'float (float)'
|   |-UsingDecl 0x7f9f13a25e88 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7f9f13a25ed8 <col:9> col:9 implicit Function 0x7f9f1390ad40 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a25f20 <col:9> col:9 implicit Function 0x7f9f139fa3e0 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25f68 <col:9> col:9 implicit Function 0x7f9f139fa6d0 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a25fb0 <col:9> col:9 implicit FunctionTemplate 0x7f9f139fada0 'exp2'
|   |-UsingDecl 0x7f9f13a26000 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7f9f13a26050 <col:9> col:9 implicit Function 0x7f9f1390aba0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7f9f13a260a0 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7f9f13a260f0 <col:9> col:9 implicit Function 0x7f9f1390b220 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a26138 <col:9> col:9 implicit Function 0x7f9f139fb3c0 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26180 <col:9> col:9 implicit Function 0x7f9f139fb6b0 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a261c8 <col:9> col:9 implicit FunctionTemplate 0x7f9f139fbd60 'expm1'
|   |-UsingDecl 0x7f9f13a26218 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7f9f13a26268 <col:9> col:9 implicit Function 0x7f9f1390b080 'expm1f' 'float (float)'
|   |-UsingDecl 0x7f9f13a262b8 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7f9f13a26308 <col:9> col:9 implicit Function 0x7f9f1390d190 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a26350 <col:9> col:9 implicit Function 0x7f9f139fc400 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26398 <col:9> col:9 implicit Function 0x7f9f139fc800 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a263e0 <col:9> col:9 implicit FunctionTemplate 0x7f9f139fd2a0 'fdim'
|   |-UsingDecl 0x7f9f13a26430 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7f9f13a26480 <col:9> col:9 implicit Function 0x7f9f1390cf68 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a264d0 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7f9f13a26520 <col:9> col:9 implicit Function 0x7f9f139203a8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7f9f13a26570 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7f9f13a265c0 <col:9> col:9 implicit Function 0x7f9f139206f8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7f9f13a26608 <col:9> col:9 implicit Function 0x7f9f139fdcd8 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26650 <col:9> col:9 implicit Function 0x7f9f139fe190 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26698 <col:9> col:9 implicit FunctionTemplate 0x7f9f139ff0c0 'fma'
|   |-UsingDecl 0x7f9f13a266e8 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7f9f13a26738 <col:9> col:9 implicit Function 0x7f9f1390d808 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a26780 <col:9> col:9 implicit Function 0x7f9f139ffe10 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a267c8 <col:9> col:9 implicit Function 0x7f9f13a001d0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26810 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a01c70 'fmax'
|   |-UsingDecl 0x7f9f13a26860 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7f9f13a268b0 <col:9> col:9 implicit Function 0x7f9f1390d5e0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a26900 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7f9f13a26950 <col:9> col:9 implicit Function 0x7f9f1391fe88 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a26998 <col:9> col:9 implicit Function 0x7f9f13a02628 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a269e0 <col:9> col:9 implicit Function 0x7f9f13a029e8 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26a28 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a03490 'fmin'
|   |-UsingDecl 0x7f9f13a26a78 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7f9f13a26ac8 <col:9> col:9 implicit Function 0x7f9f1391fc60 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a26b18 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7f9f13a26b68 <col:9> col:9 implicit Function 0x7f9f13913758 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a26bb0 <col:9> col:9 implicit Function 0x7f9f13a03e48 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26c00 <col:9> col:9 implicit Function 0x7f9f13a04208 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26c48 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a04cb0 'hypot'
|   |-UsingDecl 0x7f9f13a26c98 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7f9f13a26ce8 <col:9> col:9 implicit Function 0x7f9f13913530 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a26d38 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7f9f13a26d88 <col:9> col:9 implicit Function 0x7f9f13910878 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7f9f13a26dd0 <col:9> col:9 implicit Function 0x7f9f13a055e8 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26e18 <col:9> col:9 implicit Function 0x7f9f13a078e0 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a26e60 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a08080 'ilogb'
|   |-UsingDecl 0x7f9f13a26eb0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7f9f13a26f00 <col:9> col:9 implicit Function 0x7f9f139106a0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7f9f13a26f50 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7f9f13a26fa0 <col:9> col:9 implicit Function 0x7f9f139152a0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a26fe8 <col:9> col:9 implicit Function 0x7f9f13a08910 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27030 <col:9> col:9 implicit Function 0x7f9f13a08c00 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27078 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a092b0 'lgamma'
|   |-UsingDecl 0x7f9f13a270c8 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7f9f13a27118 <col:9> col:9 implicit Function 0x7f9f13915110 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7f9f13a27168 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7f9f13a271b8 <col:9> col:9 implicit Function 0x7f9f139180a8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7f9f13a27200 <col:9> col:9 implicit Function 0x7f9f13a098e0 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27248 <col:9> col:9 implicit Function 0x7f9f13a09c00 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27290 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a0a3d0 'llrint'
|   |-UsingDecl 0x7f9f13a272e0 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7f9f13a27330 <col:9> col:9 implicit Function 0x7f9f13917e88 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7f9f13a27380 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7f9f13a273d0 <col:9> col:9 implicit Function 0x7f9f13918648 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7f9f13a27418 <col:9> col:9 implicit Function 0x7f9f13a0ac88 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27460 <col:9> col:9 implicit Function 0x7f9f13a0af78 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a274a8 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a0b630 'llround'
|   |-UsingDecl 0x7f9f13a274f8 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7f9f13a27548 <col:9> col:9 implicit Function 0x7f9f139184a8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7f9f13a27598 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7f9f13a275e8 <col:9> col:9 implicit Function 0x7f9f1390c5f0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a27630 <col:9> col:9 implicit Function 0x7f9f13a0bc60 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27678 <col:9> col:9 implicit Function 0x7f9f13a0bf50 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a276c0 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a0c600 'log1p'
|   |-UsingDecl 0x7f9f13a27710 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7f9f13a27760 <col:9> col:9 implicit Function 0x7f9f1390c450 'log1pf' 'float (float)'
|   |-UsingDecl 0x7f9f13a277b0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7f9f13a27800 <col:9> col:9 implicit Function 0x7f9f1390c110 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a27848 <col:9> col:9 implicit Function 0x7f9f13a0cc20 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27890 <col:9> col:9 implicit Function 0x7f9f13a0cf10 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a278d8 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a0d5c0 'log2'
|   |-UsingDecl 0x7f9f13a27928 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7f9f13a27978 <col:9> col:9 implicit Function 0x7f9f1390bf70 'log2f' 'float (float)'
|   |-UsingDecl 0x7f9f13a279c8 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7f9f13a27a18 <col:9> col:9 implicit Function 0x7f9f1390daf0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a27a60 <col:9> col:9 implicit Function 0x7f9f13a0dc40 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27aa8 <col:9> col:9 implicit Function 0x7f9f13a0df30 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27af0 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a0e5e0 'logb'
|   |-UsingDecl 0x7f9f13a27b40 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7f9f13a27b90 <col:9> col:9 implicit Function 0x7f9f1390c930 'logbf' 'float (float)'
|   |-UsingDecl 0x7f9f13a27be0 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7f9f13a27c30 <col:9> col:9 implicit Function 0x7f9f13917088 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7f9f13a27c78 <col:9> col:9 implicit Function 0x7f9f13a0ec00 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27cc0 <col:9> col:9 implicit Function 0x7f9f13a0ef20 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27d08 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a0f6f0 'lrint'
|   |-UsingDecl 0x7f9f13a27d58 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7f9f13a27da8 <col:9> col:9 implicit Function 0x7f9f13916e68 'lrintf' 'long (float)'
|   |-UsingDecl 0x7f9f13a27df8 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7f9f13a27e48 <col:9> col:9 implicit Function 0x7f9f13917b08 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7f9f13a27e90 <col:9> col:9 implicit Function 0x7f9f13a0ffe8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27ed8 <col:9> col:9 implicit Function 0x7f9f13a102d8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a27f20 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a10990 'lround'
|   |-UsingDecl 0x7f9f13a27f70 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7f9f13a27fc0 <col:9> col:9 implicit Function 0x7f9f13917968 'lroundf' 'long (float)'
|   |-UsingDecl 0x7f9f13a28010 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7f9f13a28060 <col:9> col:9 implicit Function 0x7f9f1391ace8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7f9f13a280b0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7f9f13a28100 <col:9> col:9 implicit Function 0x7f9f1391aac8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7f9f13a28150 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7f9f13a281a0 <col:9> col:9 implicit Function 0x7f9f13916608 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a281e8 <col:9> col:9 implicit Function 0x7f9f13a10fb0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a28230 <col:9> col:9 implicit Function 0x7f9f13a112a0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a28278 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a11970 'nearbyint'
|   |-UsingDecl 0x7f9f13a282c8 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7f9f13a28318 <col:9> col:9 implicit Function 0x7f9f13916468 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7f9f13a28368 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7f9f13a283b8 <col:9> col:9 implicit Function 0x7f9f1391b390 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a28400 <col:9> col:9 implicit Function 0x7f9f13a12010 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a28448 <col:9> col:9 implicit Function 0x7f9f13a123d0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a28490 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a12e70 'nextafter'
|   |-UsingDecl 0x7f9f13a284e0 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7f9f13a28530 <col:9> col:9 implicit Function 0x7f9f1391b168 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a28580 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7f9f13a285d0 <col:9> col:9 implicit Function 0x7f9f1391b828 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7f9f13a28618 <col:9> col:9 implicit Function 0x7f9f13a13840 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a28660 <col:9> col:9 implicit Function 0x7f9f13a13c30 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a286a8 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a14400 'nexttoward'
|   |-UsingDecl 0x7f9f13a286f8 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7f9f13a28748 <col:9> col:9 implicit Function 0x7f9f1390cad8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7f9f13a28798 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7f9f13a287e8 <col:9> col:9 implicit Function 0x7f9f13919800 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7f9f13a28830 <col:9> col:9 implicit Function 0x7f9f13a14b18 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a28878 <col:9> col:9 implicit Function 0x7f9f13a14ed8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a288c0 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a15980 'remainder'
|   |-UsingDecl 0x7f9f13a28910 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7f9f13a28960 <col:9> col:9 implicit Function 0x7f9f139195d8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7f9f13a289b0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7f9f13a28a00 <col:9> col:9 implicit Function 0x7f9f13919fc8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7f9f13a28a48 <col:9> col:9 implicit Function 0x7f9f13a16400 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7f9f13a28a90 <col:9> col:9 implicit Function 0x7f9f13a16910 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7f9f13a28ad8 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a17510 'remquo'
|   |-UsingDecl 0x7f9f13a28b28 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7f9f13a28b78 <col:9> col:9 implicit Function 0x7f9f13919d28 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7f9f13a2ac00 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7f9f13a2ac50 <col:9> col:9 implicit Function 0x7f9f13916af0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a2ac98 <col:9> col:9 implicit Function 0x7f9f13a17e98 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2ace0 <col:9> col:9 implicit Function 0x7f9f13a18188 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2ad28 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a18840 'rint'
|   |-UsingDecl 0x7f9f13a2ad78 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7f9f13a2adc8 <col:9> col:9 implicit Function 0x7f9f13916948 'rintf' 'float (float)'
|   |-UsingDecl 0x7f9f13a2ae18 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7f9f13a2ae68 <col:9> col:9 implicit Function 0x7f9f13917628 'round' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a2aeb0 <col:9> col:9 implicit Function 0x7f9f13a18e60 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2aef8 <col:9> col:9 implicit Function 0x7f9f13a19150 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2af40 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a19800 'round'
|   |-UsingDecl 0x7f9f13a2af90 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7f9f13a2afe0 <col:9> col:9 implicit Function 0x7f9f13917488 'roundf' 'float (float)'
|   |-UsingDecl 0x7f9f13a2b030 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7f9f13a2b080 <col:9> col:9 implicit Function 0x7f9f13912658 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7f9f13a2b0c8 <col:9> col:9 implicit Function 0x7f9f13a19ea0 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2b110 <col:9> col:9 implicit Function 0x7f9f13a1a290 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2b158 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a1aa90 'scalbln'
|   |-UsingDecl 0x7f9f13a2b1a8 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7f9f13a2b1f8 <col:9> col:9 implicit Function 0x7f9f139123a8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7f9f13a2b248 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7f9f13a2b298 <col:9> col:9 implicit Function 0x7f9f13911f10 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7f9f13a2b2e0 <col:9> col:9 implicit Function 0x7f9f13a1b1a8 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2b328 <col:9> col:9 implicit Function 0x7f9f13a1b568 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2b370 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a1bd30 'scalbn'
|   |-UsingDecl 0x7f9f13a2b3c0 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7f9f13a2b410 <col:9> col:9 implicit Function 0x7f9f13911ce8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7f9f13a2b460 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7f9f13a2b4b0 <col:9> col:9 implicit Function 0x7f9f13915760 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a2b4f8 <col:9> col:9 implicit Function 0x7f9f13a1c3a0 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2b540 <col:9> col:9 implicit Function 0x7f9f13a1c690 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2b588 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a1cd40 'tgamma'
|   |-UsingDecl 0x7f9f13a2b5d8 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7f9f13a2b628 <col:9> col:9 implicit Function 0x7f9f139155c0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7f9f13a2b678 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7f9f13a2b6c8 <col:9> col:9 implicit Function 0x7f9f13918ba0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7f9f13a2b710 <col:9> col:9 implicit Function 0x7f9f13a1d360 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2b758 <col:9> col:9 implicit Function 0x7f9f13a1d650 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7f9f13a2b7a0 <col:9> col:9 implicit FunctionTemplate 0x7f9f13a1dd00 'trunc'
|   |-UsingDecl 0x7f9f13a2b7f0 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7f9f13a2b840 <col:9> col:9 implicit Function 0x7f9f13918a00 'truncf' 'float (float)'
|   |-UsingDecl 0x7f9f13a2b890 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7f9f13a2b8e0 <col:9> col:9 implicit Function 0x7f9f13904e78 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2b930 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7f9f13a2b980 <col:9> col:9 implicit Function 0x7f9f139053a0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2b9d0 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7f9f13a2ba20 <col:9> col:9 implicit Function 0x7f9f13905880 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2ba70 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7f9f13a2bac0 <col:9> col:9 implicit Function 0x7f9f13906048 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f13a2bb10 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7f9f13a2bb60 <col:9> col:9 implicit Function 0x7f9f13915de8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2bbb0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7f9f13a2bc00 <col:9> col:9 implicit Function 0x7f9f13906d70 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2bc50 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7f9f13a2bca0 <col:9> col:9 implicit Function 0x7f9f13909af0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2bcf0 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7f9f13a2bd40 <col:9> col:9 implicit Function 0x7f9f1390aa00 'expl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2bd90 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7f9f13a2bde0 <col:9> col:9 implicit Function 0x7f9f13912e30 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2be30 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7f9f13a2be80 <col:9> col:9 implicit Function 0x7f9f139162c8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2bed0 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7f9f13a2bf20 <col:9> col:9 implicit Function 0x7f9f139193b0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f13a2bf70 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7f9f13a2bfc0 <col:9> col:9 implicit Function 0x7f9f139104c8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7f9f13a2c010 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7f9f13a2c060 <col:9> col:9 implicit Function 0x7f9f1390fcb8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7f9f13a2c0b0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7f9f13a2c100 <col:9> col:9 implicit Function 0x7f9f1390b8a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c150 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7f9f13a2c1a0 <col:9> col:9 implicit Function 0x7f9f1390bdd0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c1f0 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7f9f13a2c240 <col:9> col:9 implicit Function 0x7f9f1390e498 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7f9f13a2c290 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7f9f13a2c2e0 <col:9> col:9 implicit Function 0x7f9f13914078 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f13a2c330 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7f9f13a2c380 <col:9> col:9 implicit Function 0x7f9f13907250 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c3d0 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7f9f13a2c420 <col:9> col:9 implicit Function 0x7f9f13909fd0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c470 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7f9f13a2c4c0 <col:9> col:9 implicit Function 0x7f9f13914560 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c510 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7f9f13a2c560 <col:9> col:9 implicit Function 0x7f9f13907730 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c5b0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7f9f13a2c600 <col:9> col:9 implicit Function 0x7f9f1390a4b0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c650 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7f9f13a2c6a0 <col:9> col:9 implicit Function 0x7f9f13908430 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c6f0 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7f9f13a2c740 <col:9> col:9 implicit Function 0x7f9f13908910 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c790 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7f9f13a2c7e0 <col:9> col:9 implicit Function 0x7f9f13908df0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c830 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7f9f13a2c880 <col:9> col:9 implicit Function 0x7f9f13913310 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2c8d0 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7f9f13a2c920 <col:9> col:9 implicit Function 0x7f9f1391a890 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f13a2c970 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7f9f13a2c9c0 <col:9> col:9 implicit Function 0x7f9f13914a90 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2ca10 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7f9f13a2ca60 <col:9> col:9 implicit Function 0x7f9f13914f70 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2cab0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7f9f13a2cb00 <col:9> col:9 implicit Function 0x7f9f1390aee0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7f9f13a2cb50 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7f9f13a2cba0 <col:9> col:9 implicit Function 0x7f9f1390b3c0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7f9f13954600 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7f9f13954650 <col:9> col:9 implicit Function 0x7f9f1390d3b8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f139546a0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7f9f139546f0 <col:9> col:9 implicit Function 0x7f9f13910a88 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7f9f13954740 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7f9f13954790 <col:9> col:9 implicit Function 0x7f9f1391fa38 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f139547e0 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7f9f13954830 <col:9> col:9 implicit Function 0x7f9f139200b0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f13954880 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7f9f139548d0 <col:9> col:9 implicit Function 0x7f9f13913a00 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f13954920 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7f9f13954970 <col:9> col:9 implicit Function 0x7f9f13911a90 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7f9f139549c0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7f9f13954a10 <col:9> col:9 implicit Function 0x7f9f13915430 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7f9f13954a60 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7f9f13954ab0 <col:9> col:9 implicit Function 0x7f9f139182c8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7f9f13954b00 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7f9f13954b50 <col:9> col:9 implicit Function 0x7f9f139187e8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7f9f13954ba0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7f9f13954bf0 <col:9> col:9 implicit Function 0x7f9f1390c790 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13954c40 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7f9f13954c90 <col:9> col:9 implicit Function 0x7f9f1390c2b0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7f9f13954ce0 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7f9f13954d30 <col:9> col:9 implicit Function 0x7f9f1390dc90 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13954d80 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7f9f13954dd0 <col:9> col:9 implicit Function 0x7f9f139172a8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7f9f13954e20 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7f9f13954e70 <col:9> col:9 implicit Function 0x7f9f13917ca8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7f9f13954ec0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7f9f13954f10 <col:9> col:9 implicit Function 0x7f9f1391af08 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7f9f13954f60 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7f9f13954fb0 <col:9> col:9 implicit Function 0x7f9f139167a8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13955000 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7f9f13955050 <col:9> col:9 implicit Function 0x7f9f1391b5b8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f139550a0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7f9f139550f0 <col:9> col:9 implicit Function 0x7f9f1390cd40 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f13955140 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7f9f13955190 <col:9> col:9 implicit Function 0x7f9f13919a38 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7f9f139551e0 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7f9f13955230 <col:9> col:9 implicit Function 0x7f9f1391a268 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7f9f13955280 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7f9f139552d0 <col:9> col:9 implicit Function 0x7f9f13916c90 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7f9f13955320 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7f9f13955370 <col:9> col:9 implicit Function 0x7f9f139177c8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7f9f139553c0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7f9f13955410 <col:9> col:9 implicit Function 0x7f9f13912908 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7f9f13955460 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7f9f139554b0 <col:9> col:9 implicit Function 0x7f9f13912138 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7f9f13955500 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7f9f13955550 <col:9> col:9 implicit Function 0x7f9f13915900 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7f9f139555a0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7f9f139555f0 <col:9> col:9 implicit Function 0x7f9f13918d40 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7f9f13955ba0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7f9f13955638 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7f9f13955b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7f9f139559f0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7f9f13955e28 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7f9f13955e10 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7f9f13955de0 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7f9f13955d90 <col:12> '<builtin fn type>' Function 0x7f9f13955ca0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7f9f13955db8 <col:28> '_A1' lvalue ParmVar 0x7f9f139559f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7f9f13955bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7f9f13955c40 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7f9f139563c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7f9f13955e48 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7f9f13956328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7f9f13956210 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7f9f13956538 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7f9f13956520 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7f9f139564f0 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7f9f13956470 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7f9f13a1e5e8
|   |   |     `-DeclRefExpr 0x7f9f139564c8 <col:18> '_A1' lvalue ParmVar 0x7f9f13956210 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7f9f13956418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7f9f13956460 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7f9f13950a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7f9f13956558 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7f9f13950968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7f9f13950890 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7f9f13950c88 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7f9f13950c70 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7f9f13950c40 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7f9f13950bf0 <col:12> '<builtin fn type>' Function 0x7f9f13950b00 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7f9f13950c18 <col:28> '_A1' lvalue ParmVar 0x7f9f13950890 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7f9f13950a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7f9f13950aa0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7f9f13951140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7f9f13950ca8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7f9f139510a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7f9f13950fd0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7f9f139512b8 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7f9f139512a0 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7f9f13951270 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7f9f139511f0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7f9f13a1e548
|   |   |     `-DeclRefExpr 0x7f9f13951248 <col:18> '_A1' lvalue ParmVar 0x7f9f13950fd0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7f9f13951198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7f9f139511e0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7f9f13951760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7f9f139512d8 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7f9f139516c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7f9f139515f0 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7f9f139519e8 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7f9f139519d0 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7f9f139519a0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7f9f13951950 <col:12> '<builtin fn type>' Function 0x7f9f13951860 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7f9f13951978 <col:31> '_A1' lvalue ParmVar 0x7f9f139515f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7f9f139517b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7f9f13951800 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7f9f13951ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7f9f13951a08 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7f9f13951e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7f9f13951d30 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7f9f13952018 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7f9f13952000 <line:606:5, col:29>
|       |   `-CallExpr 0x7f9f13951fd0 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7f9f13951f50 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7f9f13a1e4a8
|       |     `-DeclRefExpr 0x7f9f13951fa8 <col:21> '_A1' lvalue ParmVar 0x7f9f13951d30 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7f9f13951ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|       `-VisibilityAttr 0x7f9f13951f40 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7f9f13955c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7f9f13955ca0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f13955d38 <col:12> Implicit
|   `-ConstAttr 0x7f9f13955d80 <col:12> Implicit
|-LinkageSpecDecl 0x7f9f13950ab0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7f9f13950b00 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f13950b98 <col:12> Implicit
|   `-ConstAttr 0x7f9f13950be0 <col:12> Implicit
|-LinkageSpecDecl 0x7f9f13951810 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7f9f13951860 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7f9f139518f8 <col:12> Implicit
|   `-ConstAttr 0x7f9f13951940 <col:12> Implicit
|-CXXRecordDecl 0x7f9f13952038 <object_model_refined/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7f9f13952158 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7f9f13952208 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7f9f13a35e18 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7f9f13a35ef8 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7f9f13a35ef8
| |-CXXConstructorDecl 0x7f9f13a361b8 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7f9f13a361b8
| | `-ParmVarDecl 0x7f9f13a362e0 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7f9f13a36378 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7f9f13a36378
|   `-ParmVarDecl 0x7f9f13a364a0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7f9f13952270 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7f9f13952398 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7f9f13952448 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7f9f13a35ff8 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7f9f13a360d8 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7f9f13a360d8
| |-CXXConstructorDecl 0x7f9f13a36508 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7f9f13a36508
| | `-ParmVarDecl 0x7f9f13a36630 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7f9f13a366c8 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7f9f13a366c8
|   `-ParmVarDecl 0x7f9f13a367f0 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7f9f139524b0 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7f9f13a34c58 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7f9f13a34d08 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7f9f13a35d18 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7f9f13a36858 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7f9f13a36858
| | `-ParmVarDecl 0x7f9f13a36980 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7f9f13a36a18 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7f9f13a36a18
|   `-ParmVarDecl 0x7f9f13a36b40 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7f9f13a34e78 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7f9f13a34da8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7f9f13a35048 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7f9f13a35030 <line:17:5, col:20>
|     `-BinaryOperator 0x7f9f13a35008 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7f9f13a34fd8 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7f9f13a34f40 <col:12, col:14> 'const double' lvalue .x 0x7f9f13952208
|       |   `-DeclRefExpr 0x7f9f13a34f18 <col:12> 'const struct P1' lvalue ParmVar 0x7f9f13a34da8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7f9f13a34ff0 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7f9f13a34fa0 <col:18, col:20> 'const double' lvalue .x 0x7f9f13952208
|           `-DeclRefExpr 0x7f9f13a34f78 <col:18> 'const struct P1' lvalue ParmVar 0x7f9f13a34da8 'p' 'const struct P1 &'
|-FunctionDecl 0x7f9f13a35178 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7f9f13a350a8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7f9f13a35348 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7f9f13a35330 <line:22:5, col:20>
|     `-BinaryOperator 0x7f9f13a35308 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7f9f13a352d8 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7f9f13a35240 <col:12, col:14> 'const double' lvalue .y 0x7f9f13952448
|       |   `-DeclRefExpr 0x7f9f13a35218 <col:12> 'const struct P2' lvalue ParmVar 0x7f9f13a350a8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7f9f13a352f0 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7f9f13a352a0 <col:18, col:20> 'const double' lvalue .y 0x7f9f13952448
|           `-DeclRefExpr 0x7f9f13a35278 <col:18> 'const struct P2' lvalue ParmVar 0x7f9f13a350a8 'p' 'const struct P2 &'
|-FunctionDecl 0x7f9f13a35478 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7f9f13a353a8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7f9f13a35b38 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7f9f13a35b20 <line:27:5, col:41>
|     `-CallExpr 0x7f9f13a35af0 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7f9f13a35ad8 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7f9f13a35a98 <col:12, col:17> 'double (double)' lvalue Function 0x7f9f139143c0 'sqrt' 'double (double)' (UsingShadow 0x7f9f13a241a8 'sqrt')
|       `-BinaryOperator 0x7f9f13a35840 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7f9f13a356b0 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7f9f13a35698 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7f9f13a35640 <col:22> 'double (const struct P1 &)' lvalue Function 0x7f9f13a34e78 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7f9f13a356e0 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7f9f13a35618 <col:28> 'const struct P3' lvalue ParmVar 0x7f9f13a353a8 'p' 'const struct P3 &'
|         `-CallExpr 0x7f9f13a357f0 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7f9f13a357d8 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7f9f13a35780 <col:33> 'double (const struct P2 &)' lvalue Function 0x7f9f13a35178 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7f9f13a35820 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7f9f13a35758 <col:39> 'const struct P3' lvalue ParmVar 0x7f9f13a353a8 'p' 'const struct P3 &'
`-FunctionDecl 0x7f9f13a35b80 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7f9f13a36fd0 <line:31:1, line:37:1>
    |-DeclStmt 0x7f9f13a36bd8 <line:32:5, col:12>
    | `-VarDecl 0x7f9f13a35c58 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7f9f13a36ba8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7f9f13a36d28 <line:33:5, col:17>
    | `-VarDecl 0x7f9f13a36c38 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7f9f13a36d08 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7f9f13a36ce8 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7f9f13a36c98 <col:15> 'struct P3' lvalue Var 0x7f9f13a35c58 'p3' 'struct P3'
    |-DeclStmt 0x7f9f13a36f80 <line:35:5, col:23>
    | `-VarDecl 0x7f9f13a36d50 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7f9f13a36ea0 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7f9f13a36e88 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7f9f13a36e30 <col:14> 'double (const struct P3 &)' lvalue Function 0x7f9f13a35478 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7f9f13a36ed0 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7f9f13a36e08 <col:20> 'struct P3' lvalue Var 0x7f9f13a35c58 'p3' 'struct P3'
    `-ReturnStmt 0x7f9f13a36fb8 <line:36:5, col:12>
      `-IntegerLiteral 0x7f9f13a36f98 <col:12> 'int' 0
