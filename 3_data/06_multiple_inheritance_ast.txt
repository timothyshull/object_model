TranslationUnitDecl 0x7fb3b38326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fb3b3832c60 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fb3b3832940 '__int128'
|-TypedefDecl 0x7fb3b3832cd0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fb3b3832960 'unsigned __int128'
|-TypedefDecl 0x7fb3b3833018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fb3b3832dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fb3b3832d28 '__NSConstantString_tag'
|-TypedefDecl 0x7fb3b38330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fb3b3833070 'char *'
|   `-BuiltinType 0x7fb3b3832760 'char'
|-TypedefDecl 0x7fb3b3865c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fb3b3833390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fb3b38331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fb3b3833108 '__va_list_tag'
|-NamespaceDecl 0x7fb3b3865c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7fb3b3865cc0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7fb3b3865dd8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7fb3b3865e40 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7fb3b38328c0 'float'
| |-TypedefDecl 0x7fb3b3865eb0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7fb3b38328e0 'double'
| |-FunctionDecl 0x7fb3b3865fd8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7fb3b3866198 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7fb3b38660c8 <col:26> col:31 'float'
| |-FunctionDecl 0x7fb3b3866318 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7fb3b3866250 <col:26> col:32 'double'
| |-FunctionDecl 0x7fb3b3866498 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7fb3b38663d0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7fb3b38665e0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b3866550 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fb3b3866680 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b3866770 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b38666e0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fb3b3866810 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b3866900 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b3866870 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fb3b38669a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b3866a90 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b3866a00 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fb3b3866b30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5011430 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b3866b90 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fb3b50114d0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b50115c0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b5011530 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fb3b5011660 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5011750 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b50116c0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fb3b50117f0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b50118e0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b5011850 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fb3b5011980 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5011a70 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b50119e0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fb3b5011b10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5011c00 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b5011b70 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fb3b5011ca0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5011d90 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b5011d00 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fb3b5011e30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5011f20 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b5011e90 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fb3b5011fc0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b50120b0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b5012020 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7fb3b5012150 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5012240 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b50121b0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7fb3b50122e0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5012400 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b5012340 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7fb3b50124a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5012590 prev 0x7fb3b38665e0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b5012500 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fb3b5012d38 <col:58, line:206:1>
| | | `-ReturnStmt 0x7fb3b5012d20 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7fb3b5012d08 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b5012ce0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fb3b50126f8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fb3b50126c8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fb3b5012678 <col:12> 'float' lvalue ParmVar 0x7fb3b5012500 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7fb3b50126e0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb3b50126a0 <col:19> 'float' lvalue ParmVar 0x7fb3b5012500 '__x' 'float'
| | |       `-BinaryOperator 0x7fb3b5012cb8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fb3b5012a00 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7fb3b50129e8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb3b5012940 <col:26> '<builtin fn type>' Function 0x7fb3b50127e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb3b5012a30 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb3b5012968 <col:42> 'float' lvalue ParmVar 0x7fb3b5012500 '__x' 'float'
| | |         `-CallExpr 0x7fb3b5012c90 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7fb3b5012c78 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fb3b5012bf0 <col:50> '<builtin fn type>' Function 0x7fb3b5012b00 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb3b5012630 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5012e00 prev 0x7fb3b3866770 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b5012d70 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fb3b5013a38 <col:59, line:209:1>
| | | `-ReturnStmt 0x7fb3b5013a20 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7fb3b5013a08 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b50139e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fb3b5012f68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fb3b5012f38 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fb3b5012ee8 <col:12> 'double' lvalue ParmVar 0x7fb3b5012d70 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7fb3b5012f50 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb3b5012f10 <col:19> 'double' lvalue ParmVar 0x7fb3b5012d70 '__x' 'double'
| | |       `-BinaryOperator 0x7fb3b50139b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7fb3b5013270 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7fb3b5013258 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb3b50131b0 <col:26> '<builtin fn type>' Function 0x7fb3b5013058 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb3b50132a0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb3b50131d8 <col:41> 'double' lvalue ParmVar 0x7fb3b5012d70 '__x' 'double'
| | |         `-CallExpr 0x7fb3b5013990 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7fb3b5013978 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fb3b50138f0 <col:49> '<builtin fn type>' Function 0x7fb3b5013800 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb3b5012ea0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5013b00 prev 0x7fb3b3866900 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b5013a70 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fb3b50142a8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7fb3b5014290 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7fb3b5014278 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b5014250 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fb3b5013c68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fb3b5013c38 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fb3b5013be8 <col:12> 'long double' lvalue ParmVar 0x7fb3b5013a70 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7fb3b5013c50 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb3b5013c10 <col:19> 'long double' lvalue ParmVar 0x7fb3b5013a70 '__x' 'long double'
| | |       `-BinaryOperator 0x7fb3b5014228 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fb3b5013f70 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7fb3b5013f58 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb3b5013eb0 <col:26> '<builtin fn type>' Function 0x7fb3b5013d58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb3b5013fa0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb3b5013ed8 <col:42> 'long double' lvalue ParmVar 0x7fb3b5013a70 '__x' 'long double'
| | |         `-CallExpr 0x7fb3b5014200 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7fb3b50141e8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fb3b5014160 <col:50> '<builtin fn type>' Function 0x7fb3b5014070 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb3b5013ba0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5014370 prev 0x7fb3b3866a90 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b50142e0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fb3b50145c8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7fb3b50145b0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7fb3b5014598 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b5014570 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fb3b50144c0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7fb3b50144a8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fb3b5014458 <col:12> '<builtin fn type>' Function 0x7fb3b50127e8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7fb3b50144f0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb3b5014480 <col:28> 'float' lvalue ParmVar 0x7fb3b50142e0 '__x' 'float'
| | |       `-CallExpr 0x7fb3b5014548 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7fb3b5014530 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fb3b5014508 <col:36> '<builtin fn type>' Function 0x7fb3b5012b00 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb3b5014410 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5014690 prev 0x7fb3b5011430 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b5014600 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fb3b5014ce8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7fb3b5014cd0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7fb3b5014cb8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b5014c90 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7fb3b50147e0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7fb3b50147c8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fb3b5014778 <col:12> '<builtin fn type>' Function 0x7fb3b5013058 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fb3b5014c10 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb3b50147a0 <col:27> 'double' lvalue ParmVar 0x7fb3b5014600 '__x' 'double'
| | |       `-CallExpr 0x7fb3b5014c68 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7fb3b5014c50 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fb3b5014c28 <col:35> '<builtin fn type>' Function 0x7fb3b5013800 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb3b5014730 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5014db0 prev 0x7fb3b50115c0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b5014d20 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fb3b5015008 <col:61, line:221:1>
| | | `-ReturnStmt 0x7fb3b5014ff0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7fb3b5014fd8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b5014fb0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fb3b5014f00 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7fb3b5014ee8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fb3b5014e98 <col:12> '<builtin fn type>' Function 0x7fb3b5013d58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fb3b5014f30 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fb3b5014ec0 <col:28> 'long double' lvalue ParmVar 0x7fb3b5014d20 '__x' 'long double'
| | |       `-CallExpr 0x7fb3b5014f88 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7fb3b5014f70 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fb3b5014f48 <col:36> '<builtin fn type>' Function 0x7fb3b5014070 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fb3b5014e50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b50150d0 prev 0x7fb3b5011750 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b5015040 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fb3b5015290 <col:55, line:224:1>
| | | `-ReturnStmt 0x7fb3b5015278 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7fb3b5015260 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b5015238 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fb3b5015208 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fb3b50151b8 <col:12> 'float' lvalue ParmVar 0x7fb3b5015040 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7fb3b5015220 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fb3b50151e0 <col:19> 'float' lvalue ParmVar 0x7fb3b5015040 '__x' 'float'
| | `-AlwaysInlineAttr 0x7fb3b5015170 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5015358 prev 0x7fb3b50118e0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b50152c8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fb3b5015518 <col:56, line:227:1>
| | | `-ReturnStmt 0x7fb3b5015500 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7fb3b50154e8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b50154c0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fb3b5015490 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fb3b5015440 <col:12> 'double' lvalue ParmVar 0x7fb3b50152c8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7fb3b50154a8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fb3b5015468 <col:19> 'double' lvalue ParmVar 0x7fb3b50152c8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7fb3b50153f8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b50155e0 prev 0x7fb3b5011a70 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b5015550 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fb3b50157a0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7fb3b5015788 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7fb3b5015770 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b5015748 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fb3b5015718 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fb3b50156c8 <col:12> 'long double' lvalue ParmVar 0x7fb3b5015550 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7fb3b5015730 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fb3b50156f0 <col:19> 'long double' lvalue ParmVar 0x7fb3b5015550 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7fb3b5015680 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b5015868 prev 0x7fb3b50120b0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b50157d8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7fb3b50174d8 <col:57, line:235:1>
| | | |-DeclStmt 0x7fb3b50171b0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7fb3b5015950 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7fb3b5015a90 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7fb3b5015af0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7fb3b5016c80 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fb3b5017150 <col:5>
| | | | | |-CXXConstructorDecl 0x7fb3b5016dc8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7fb3b5016dc8
| | | | | | `-ParmVarDecl 0x7fb3b5016ef0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7fb3b5016f88 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7fb3b5016f88
| | | | |   `-ParmVarDecl 0x7fb3b50170b0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7fb3b5016c00 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7fb3b5017168 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fb3b5017268 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7fb3b50171f0 <col:5, col:9> 'float' lvalue .__f 0x7fb3b5015a90
| | | | | `-DeclRefExpr 0x7fb3b50171c8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fb3b5016c00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7fb3b5017250 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fb3b5017228 <col:15> 'float' lvalue ParmVar 0x7fb3b50157d8 '__x' 'float'
| | | `-ReturnStmt 0x7fb3b50174c0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7fb3b5017498 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fb3b5017480 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fb3b5017460 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7fb3b50173f0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7fb3b50173d8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7fb3b5017380 <col:18, col:22> 'unsigned int' lvalue .__u 0x7fb3b5015af0
| | |           |   `-DeclRefExpr 0x7fb3b5017358 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fb3b5016c00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7fb3b50173b8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7fb3b5015908 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b50175b0 prev 0x7fb3b5012240 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b5017520 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7fb3b501abb0 <col:58, line:240:1>
| | | |-DeclStmt 0x7fb3b501a888 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7fb3b5017698 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7fb3b50177d0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7fb3b5017830 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7fb3b5017970 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fb3b501a828 <col:5>
| | | | | |-CXXConstructorDecl 0x7fb3b5017a88 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7fb3b5017a88
| | | | | | `-ParmVarDecl 0x7fb3b501a600 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7fb3b501a698 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7fb3b501a698
| | | | |   `-ParmVarDecl 0x7fb3b501a7c0 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7fb3b50178f0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7fb3b501a840 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fb3b501a940 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7fb3b501a8c8 <col:5, col:9> 'double' lvalue .__f 0x7fb3b50177d0
| | | | | `-DeclRefExpr 0x7fb3b501a8a0 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fb3b50178f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7fb3b501a928 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fb3b501a900 <col:15> 'double' lvalue ParmVar 0x7fb3b5017520 '__x' 'double'
| | | `-ReturnStmt 0x7fb3b501ab98 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7fb3b501ab70 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fb3b501ab58 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fb3b501ab38 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7fb3b501aac8 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7fb3b501aab0 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7fb3b501aa58 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7fb3b5017830
| | |           |   `-DeclRefExpr 0x7fb3b501aa30 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fb3b50178f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7fb3b501aa90 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7fb3b5017650 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b501ac88 prev 0x7fb3b5012400 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b501abf8 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7fb3b501d160 <col:63, line:249:1>
| | | |-DeclStmt 0x7fb3b501cd38 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7fb3b501ad70 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7fb3b501aeb0 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7fb3b501aef8 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7fb3b501b030 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7fb3b501b090 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7fb3b501b3a8 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7fb3b501b488 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fb3b501b488
| | | | | | |-CXXConstructorDecl 0x7fb3b501c7c8 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7fb3b501c7c8
| | | | | | | `-ParmVarDecl 0x7fb3b501c8f0 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7fb3b501c988 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7fb3b501c988
| | | | | |   `-ParmVarDecl 0x7fb3b501cab0 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7fb3b501b150 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7fb3b501b2a0 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fb3b501ccd8 <col:5>
| | | | | |-CXXConstructorDecl 0x7fb3b501c600 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7fb3b501c600
| | | | | | `-ParmVarDecl 0x7fb3b501c730 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7fb3b501cb48 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7fb3b501cb48
| | | | |   `-ParmVarDecl 0x7fb3b501cc70 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7fb3b501b220 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7fb3b501ccf0 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fb3b501cdf0 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7fb3b501cd78 <col:5, col:9> 'long double' lvalue .__ld 0x7fb3b501aeb0
| | | | | `-DeclRefExpr 0x7fb3b501cd50 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fb3b501b220 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7fb3b501cdd8 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fb3b501cdb0 <col:16> 'long double' lvalue ParmVar 0x7fb3b501abf8 '__x' 'long double'
| | | `-ReturnStmt 0x7fb3b501d148 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7fb3b501d120 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7fb3b501d100 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7fb3b501d090 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7fb3b501d078 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7fb3b501d060 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7fb3b501d008 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7fb3b501b090
| | |         |     `-MemberExpr 0x7fb3b501cfd0 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7fb3b501b150
| | |         |       `-DeclRefExpr 0x7fb3b501cfa8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fb3b501b220 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7fb3b501d040 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7fb3b501ad28 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b501d238 prev 0x7fb3b5011c00 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fb3b501d1a8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fb3b501d5c0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7fb3b501d5a8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7fb3b501d590 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b501d568 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fb3b501d550 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fb3b501d410 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fb3b501d3f8 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fb3b501d3a0 <col:12> 'int (float)' lvalue Function 0x7fb3b5012590 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7fb3b501d440 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fb3b501d378 <col:31> 'float' lvalue ParmVar 0x7fb3b501d1a8 '__x' 'float'
| | |       `-BinaryOperator 0x7fb3b501d528 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7fb3b501d4c0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7fb3b501d4a8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb3b501d458 <col:39> '<builtin fn type>' Function 0x7fb3b50127e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb3b501d4f0 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb3b501d480 <col:55> 'float' lvalue ParmVar 0x7fb3b501d1a8 '__x' 'float'
| | |         `-FloatingLiteral 0x7fb3b501d508 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7fb3b501d2d8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b501da90 prev 0x7fb3b5011d90 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fb3b501da00 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fb3b501de10 <col:59, line:262:1>
| | | `-ReturnStmt 0x7fb3b501ddf8 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7fb3b501dde0 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b501ddb8 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fb3b501dda0 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fb3b501dc60 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fb3b501dc48 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fb3b501dbf8 <col:12> 'int (double)' lvalue Function 0x7fb3b5012e00 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7fb3b501dc90 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fb3b501dbd0 <col:31> 'double' lvalue ParmVar 0x7fb3b501da00 '__x' 'double'
| | |       `-BinaryOperator 0x7fb3b501dd78 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7fb3b501dd10 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7fb3b501dcf8 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb3b501dca8 <col:39> '<builtin fn type>' Function 0x7fb3b5013058 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb3b501dd40 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb3b501dcd0 <col:54> 'double' lvalue ParmVar 0x7fb3b501da00 '__x' 'double'
| | |         `-FloatingLiteral 0x7fb3b501dd58 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7fb3b501db30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b501ded8 prev 0x7fb3b5011f20 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fb3b501de48 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fb3b501e270 <col:64, line:265:1>
| | | `-ReturnStmt 0x7fb3b501e258 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7fb3b501e240 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fb3b501e218 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fb3b501e200 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fb3b501e0b0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fb3b501e098 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fb3b501e040 <col:12> 'int (long double)' lvalue Function 0x7fb3b5013b00 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7fb3b501e0e0 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fb3b501e018 <col:31> 'long double' lvalue ParmVar 0x7fb3b501de48 '__x' 'long double'
| | |       `-BinaryOperator 0x7fb3b501e1d8 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7fb3b501e160 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7fb3b501e148 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fb3b501e0f8 <col:39> '<builtin fn type>' Function 0x7fb3b5013d58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fb3b501e190 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fb3b501e120 <col:55> 'long double' lvalue ParmVar 0x7fb3b501de48 '__x' 'long double'
| | |         `-FloatingLiteral 0x7fb3b501e1a8 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7fb3b501df78 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b501e338 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b501e2a8 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b501e3d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b501e420 <col:14> Implicit
| |-FunctionDecl 0x7fb3b501e4d8 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b501e448 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b501e578 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b501e5c0 <col:15> Implicit
| |-FunctionDecl 0x7fb3b501e678 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b501e5e8 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b501e718 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b501e760 <col:20> Implicit
| |-FunctionDecl 0x7fb3b501e818 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b501e788 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b501e8b8 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b501e900 <col:14> Implicit
| |-FunctionDecl 0x7fb3b501ea00 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b501e928 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b501eaa0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b501eae8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b501eba0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b501eb10 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b501ec40 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b501ec88 <col:20> Implicit
| |-FunctionDecl 0x7fb3b501ed40 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b501ecb0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b501ede0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b501ee28 <col:14> Implicit
| |-FunctionDecl 0x7fb3b501eee0 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b501ee50 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b501ef80 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b501efc8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b501f080 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b501eff0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b501f120 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b501f168 <col:20> Implicit
| |-FunctionDecl 0x7fb3b501f2e8 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b501f190 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fb3b501f208 <col:28> col:33 'float'
| | |-ConstAttr 0x7fb3b501f3d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b501f418 <col:14> Implicit
| |-FunctionDecl 0x7fb3b501f598 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b501f440 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fb3b501f4b8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fb3b501f680 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b501f6c8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b501f848 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b501f6f0 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fb3b501f768 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fb3b501f930 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b501f978 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5020230 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b501f9a0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb3b50202d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5020318 <col:14> Implicit
| |-FunctionDecl 0x7fb3b50203d0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5020340 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb3b5020470 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b50204b8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5020570 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b50204e0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb3b5020610 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5020658 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5020710 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5020680 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb3b50207b0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b50207f8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b50208b0 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5020820 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb3b5020950 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5020998 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5020a50 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b50209c0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb3b5020af0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5020b38 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5020bf0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5020b60 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb3b5020c90 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5020cd8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5020d90 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5020d00 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb3b5020e30 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5020e78 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5020f30 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5020ea0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb3b5020fd0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5021018 <col:20> Implicit
| |-FunctionDecl 0x7fb3b50210d0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5021040 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb3b5021170 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b50211b8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5021a90 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5021a00 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb3b5021b30 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5021b78 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5021c30 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5021ba0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb3b5021cd0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5021d18 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5021dd0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5021d40 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb3b5021e70 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5021eb8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5021f70 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5021ee0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb3b5022010 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5022058 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5022110 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5022080 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb3b50221b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b50221f8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b50222b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5022220 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb3b5022350 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5022398 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5022450 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b50223c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb3b50224f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5022538 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50225f0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5022560 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb3b5022690 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b50226d8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5022790 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5022700 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b5022830 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5022878 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5022930 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b50228a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b50229d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5023238 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50232f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5023260 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b5023390 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b50233d8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5023490 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5023400 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b5023530 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5023578 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5023630 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b50235a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b50236d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5023718 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50237d0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5023740 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b5023870 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b50238b8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5023970 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b50238e0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b5023a10 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5023a58 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5023b10 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5023a80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b5023bb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5023bf8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5023cb0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5023c20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b5023d50 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5023d98 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5023e50 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5023dc0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb3b5023ef0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5023f38 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5023ff0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5023f60 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb3b5024090 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b50240d8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5024200 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5024100 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb3b50242a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b50242e8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b50243a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5024310 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b5024440 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5024488 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5024540 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b50244b0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b50245e0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5024628 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50246e0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5024650 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b5024780 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b50247c8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5024880 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b50247f0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb3b5024920 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5024968 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5024a20 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5024990 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb3b5024ac0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5024b08 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5024bc0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5024b30 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb3b5024c60 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5024ca8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5024d60 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5024cd0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb3b5024e00 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5024e48 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5024f00 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5024e70 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb3b5024fa0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5024fe8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50250a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5025010 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb3b5025140 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5025188 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5025290 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5025200 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb3b5025330 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5025378 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5025430 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b50253a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb3b50254d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5025518 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50255d0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5025540 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb3b5025670 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b50256b8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5025770 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b50256e0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b5025810 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5025858 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5025910 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5025880 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b50259b0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b50259f8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5025ab0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5025a20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b5025b50 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5025b98 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5025c50 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5025bc0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fb3b5025cf0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5025d38 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5025df0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5025d60 <col:21> col:27 'double'
| | |-ConstAttr 0x7fb3b5025e90 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5025ed8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5025f90 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5025f00 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fb3b5026030 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5026078 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5026130 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b50260a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b50261d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5027238 <col:14> Implicit
| |-FunctionDecl 0x7fb3b50272f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5027260 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b5027390 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b50273d8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5027490 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5027400 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b5027530 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5027578 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5027718 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7fb3b50275a0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb3b5027640 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7fb3b5027800 <col:14> Implicit
| |-FunctionDecl 0x7fb3b50279d8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7fb3b5027860 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb3b5027900 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7fb3b5027ac0 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5027c98 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7fb3b5027b20 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb3b5027bc0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7fb3b5027d80 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5027f38 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fb3b5027de0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fb3b5027e58 <col:28> col:31 'int'
| | |-ConstAttr 0x7fb3b5028020 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5028068 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5029200 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7fb3b5028090 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fb3b5028108 <col:29> col:32 'int'
| | |-ConstAttr 0x7fb3b50292f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5029338 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50294b8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fb3b5029360 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fb3b50293d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7fb3b50295a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b50295e8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5029788 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7fb3b5029610 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fb3b50296b0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7fb3b5029870 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5029a28 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7fb3b50298d0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fb3b5029948 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7fb3b5029b10 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5029cc8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7fb3b5029b70 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fb3b5029be8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7fb3b5029db0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5029ea0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7fb3b5029e10 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb3b5029f78 <col:12> Implicit
| | `-NoThrowAttr 0x7fb3b5029fc0 <col:12> Implicit
| |-FunctionDecl 0x7fb3b502a078 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7fb3b5029fe8 <col:18> col:24 'double'
| | |-ConstAttr 0x7fb3b502a158 <col:12> Implicit
| | `-NoThrowAttr 0x7fb3b502a1a0 <col:12> Implicit
| |-FunctionDecl 0x7fb3b502b290 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7fb3b502b200 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7fb3b502b368 <col:12> Implicit
| | `-NoThrowAttr 0x7fb3b502b3b0 <col:12> Implicit
| |-FunctionDecl 0x7fb3b502b4e8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fb3b502b3d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fb3b502b450 <col:29> col:32 'int'
| | |-ConstAttr 0x7fb3b502b590 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502b5d8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502b710 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7fb3b502b600 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fb3b502b678 <col:30> col:33 'int'
| | |-ConstAttr 0x7fb3b502b7b8 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502b800 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502b938 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fb3b502b828 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fb3b502b8a0 <col:41> col:44 'int'
| | |-ConstAttr 0x7fb3b502b9e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502ba28 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502bba8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7fb3b502ba50 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7fb3b502bac8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7fb3b502bc90 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502bcd8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502be58 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7fb3b502bd00 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7fb3b502bd78 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7fb3b502bf40 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502bf88 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502c108 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7fb3b502bfb0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7fb3b502c028 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7fb3b502c1f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502c238 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502c2f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502c260 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fb3b502c390 <col:14> Implicit
| | `-ConstAttr 0x7fb3b502c3d8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502c490 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502c400 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fb3b502c530 <col:15> Implicit
| | `-ConstAttr 0x7fb3b502c578 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502c630 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502c5a0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fb3b502c6d0 <col:20> Implicit
| | `-ConstAttr 0x7fb3b502c718 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502c7d0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502c740 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b502c870 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502c8b8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502c970 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502c8e0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b502ca10 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502ca58 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502cb10 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502ca80 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b502cbb0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502cbf8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502cd30 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b502cc20 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fb3b502cc98 <col:28> col:33 'float'
| | |-ConstAttr 0x7fb3b502cdd8 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502ce20 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502cf58 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b502ce48 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fb3b502cec0 <col:29> col:35 'double'
| | |-ConstAttr 0x7fb3b502d000 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502d048 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502d200 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b502d070 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fb3b502d0e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fb3b502d2a8 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502d2f0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502d428 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b502d318 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fb3b502d390 <col:26> col:31 'float'
| | |-ConstAttr 0x7fb3b502d4d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502d518 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502d650 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b502d540 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fb3b502d5b8 <col:27> col:33 'double'
| | |-ConstAttr 0x7fb3b502d6f8 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502d740 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502d878 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b502d768 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fb3b502d7e0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7fb3b502d920 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502d968 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502da20 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502d990 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b502dac0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502db08 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502dbc0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502db30 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b502dc60 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502dca8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502dd60 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502dcd0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b502de00 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502de48 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502df00 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502de70 <col:19> col:24 'float'
| | |-ConstAttr 0x7fb3b502dfa0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502dfe8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502e0a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502e010 <col:19> col:25 'double'
| | |-ConstAttr 0x7fb3b502e140 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502e188 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502e290 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502e200 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb3b502e330 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502e378 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502e430 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502e3a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fb3b502e4d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502e518 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502e5d0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502e540 <col:20> col:26 'double'
| | |-ConstAttr 0x7fb3b502e670 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502e6b8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502e770 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502e6e0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fb3b502e810 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502e858 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502e910 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502e880 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7fb3b502e9b0 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502eaa0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502ea10 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7fb3b502eb40 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502ec30 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502eba0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7fb3b502ecd0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502edc0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502ed30 <col:22> col:27 'float'
| | |-ConstAttr 0x7fb3b502ee60 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b502eea8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502ef60 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502eed0 <col:22> col:28 'double'
| | |-ConstAttr 0x7fb3b502f000 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b502f048 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502f100 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502f070 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7fb3b502f1a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502f1e8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502f2a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502f218 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fb3b502f348 <col:14> Implicit
| | `-ConstAttr 0x7fb3b502f390 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502f448 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502f3b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fb3b502f4e8 <col:15> Implicit
| | `-ConstAttr 0x7fb3b502f530 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502f5e8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502f558 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fb3b502f688 <col:20> Implicit
| | `-ConstAttr 0x7fb3b502f6d0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502f788 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502f6f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fb3b502f828 <col:14> Implicit
| | `-ConstAttr 0x7fb3b502f870 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502f928 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502f898 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fb3b502f9c8 <col:15> Implicit
| | `-ConstAttr 0x7fb3b502fa10 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502fac8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502fa38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fb3b502fb68 <col:20> Implicit
| | `-ConstAttr 0x7fb3b502fbb0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502fc68 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502fbd8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7fb3b502fd08 <col:14> Implicit
| | `-ConstAttr 0x7fb3b502fd50 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502fe08 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502fd78 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7fb3b502fea8 <col:15> Implicit
| | `-ConstAttr 0x7fb3b502fef0 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502ffa8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b502ff18 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7fb3b5030048 <col:20> Implicit
| | `-ConstAttr 0x7fb3b5030090 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5030148 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b50300b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fb3b50301e8 <col:14> Implicit
| | `-ConstAttr 0x7fb3b5030238 <col:14> Implicit
| |-FunctionDecl 0x7fb3b50302f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5030260 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fb3b5030390 <col:15> Implicit
| | `-ConstAttr 0x7fb3b50303d8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5030490 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5030400 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fb3b5030530 <col:20> Implicit
| | `-ConstAttr 0x7fb3b5030578 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5030668 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7fb3b50305a0 <col:24> col:29 'float'
| | |-ConstAttr 0x7fb3b5030748 <col:17> Implicit
| | `-NoThrowAttr 0x7fb3b5030790 <col:17> Implicit
| |-FunctionDecl 0x7fb3b5030888 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7fb3b50307b8 <col:23> col:29 'double'
| | |-ConstAttr 0x7fb3b5030968 <col:17> Implicit
| | `-NoThrowAttr 0x7fb3b50309b0 <col:17> Implicit
| |-FunctionDecl 0x7fb3b5030aa8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7fb3b50309d8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7fb3b5030b88 <col:17> Implicit
| | `-NoThrowAttr 0x7fb3b5030bd0 <col:17> Implicit
| |-FunctionDecl 0x7fb3b5030c88 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b5030bf8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fb3b5030d28 <col:14> Implicit
| | `-ConstAttr 0x7fb3b5030d70 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5030e28 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5030d98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fb3b5030ec8 <col:15> Implicit
| | `-ConstAttr 0x7fb3b5030f10 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5030fc8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b5030f38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fb3b5031068 <col:20> Implicit
| | `-ConstAttr 0x7fb3b50310b0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5031168 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7fb3b50310d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7fb3b5031208 <col:17> Implicit
| | `-NoThrowAttr 0x7fb3b5031250 <col:17> Implicit
| |-FunctionDecl 0x7fb3b5031308 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7fb3b5031278 <col:24> col:30 'double'
| | |-ConstAttr 0x7fb3b50313a8 <col:17> Implicit
| | `-NoThrowAttr 0x7fb3b50313f0 <col:17> Implicit
| |-FunctionDecl 0x7fb3b50314a8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7fb3b5031418 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fb3b5031548 <col:17> Implicit
| | `-NoThrowAttr 0x7fb3b5031590 <col:17> Implicit
| |-FunctionDecl 0x7fb3b5031688 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7fb3b50315b8 <col:30> col:35 'float'
| | |-ConstAttr 0x7fb3b5031768 <col:22> Implicit
| | `-NoThrowAttr 0x7fb3b50317b0 <col:22> Implicit
| |-FunctionDecl 0x7fb3b50318a8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7fb3b50317d8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fb3b5031988 <col:22> Implicit
| | `-NoThrowAttr 0x7fb3b50319d0 <col:22> Implicit
| |-FunctionDecl 0x7fb3b5031ac8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fb3b50319f8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7fb3b5031ba8 <col:22> Implicit
| | `-NoThrowAttr 0x7fb3b5031bf0 <col:22> Implicit
| |-FunctionDecl 0x7fb3b5031ca8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7fb3b5031c18 <col:31> col:36 'float'
| | |-ConstAttr 0x7fb3b5031d48 <col:22> Implicit
| | `-NoThrowAttr 0x7fb3b5031d90 <col:22> Implicit
| |-FunctionDecl 0x7fb3b5031e48 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7fb3b5031db8 <col:30> col:36 'double'
| | |-ConstAttr 0x7fb3b5031ee8 <col:22> Implicit
| | `-NoThrowAttr 0x7fb3b5031f30 <col:22> Implicit
| |-FunctionDecl 0x7fb3b5031fe8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fb3b5031f58 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7fb3b5032088 <col:22> Implicit
| | `-NoThrowAttr 0x7fb3b50320d0 <col:22> Implicit
| |-FunctionDecl 0x7fb3b5032200 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b50320f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fb3b50322a0 <col:14> Implicit
| | `-ConstAttr 0x7fb3b50322e8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b50323a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5032310 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fb3b5032440 <col:15> Implicit
| | `-ConstAttr 0x7fb3b5032488 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5032540 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fb3b50324b0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fb3b50325e0 <col:20> Implicit
| | `-ConstAttr 0x7fb3b5032628 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5032760 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b5032650 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb3b50326c8 <col:27> col:32 'float'
| | |-ConstAttr 0x7fb3b5032808 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5032850 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5032988 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b5032878 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb3b50328f0 <col:28> col:34 'double'
| | |-ConstAttr 0x7fb3b5032a30 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5032a78 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5032bb0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b5032aa0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb3b5032b18 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fb3b5032c58 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5032ca0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5032dd8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b5032cc8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fb3b5032d40 <col:32> col:37 'float'
| | |-ConstAttr 0x7fb3b5032e80 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5032ec8 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5033000 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b5032ef0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fb3b5032f68 <col:33> col:39 'double'
| | |-ConstAttr 0x7fb3b50330a8 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b50330f0 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5033238 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b5033118 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fb3b5033190 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fb3b50332e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5033328 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5033528 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7fb3b5033350 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fb3b50333c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7fb3b5033440 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7fb3b50337c8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7fb3b50335f0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fb3b5033668 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7fb3b50336e0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7fb3b5033a68 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7fb3b5033890 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fb3b5033908 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7fb3b5033980 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7fb3b5033c40 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b5033b30 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7fb3b5033ba8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7fb3b5033ce8 <col:14> Implicit
| | `-ConstAttr 0x7fb3b5033d30 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5033e68 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b5033d58 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7fb3b5033dd0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7fb3b5033f10 <col:15> Implicit
| | `-ConstAttr 0x7fb3b5033f58 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5034090 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b5033f80 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7fb3b5033ff8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7fb3b5034138 <col:20> Implicit
| | `-ConstAttr 0x7fb3b5034180 <col:20> Implicit
| |-FunctionDecl 0x7fb3b50342c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7fb3b5034200 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fb3b50343a8 <col:14> Implicit
| | `-ConstAttr 0x7fb3b50343f0 <col:14> Implicit
| |-FunctionDecl 0x7fb3b50344e8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7fb3b5034418 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fb3b50345c8 <col:15> Implicit
| | `-ConstAttr 0x7fb3b5034610 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5034708 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7fb3b5034638 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7fb3b50347e8 <col:20> Implicit
| | `-ConstAttr 0x7fb3b5034830 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5034968 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b5034858 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fb3b50348d0 <col:32> col:37 'float'
| | |-ConstAttr 0x7fb3b5034a10 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5034a58 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5034b90 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b5034a80 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fb3b5034af8 <col:33> col:39 'double'
| | |-ConstAttr 0x7fb3b5034c38 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5034c80 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5034db8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b5034ca8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fb3b5034d20 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fb3b5034e60 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5034ea8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5035028 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7fb3b5034ed0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7fb3b5034f48 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7fb3b5035110 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5035158 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50262d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7fb3b5035180 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fb3b5026200 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7fb3b50263c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5026408 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5026540 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b5026430 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7fb3b50264a8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7fb3b50265e8 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5026630 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5026768 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b5026658 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb3b50266d0 <col:27> col:32 'float'
| | |-ConstAttr 0x7fb3b5026810 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5026858 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5026990 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b5026880 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb3b50268f8 <col:28> col:34 'double'
| | |-ConstAttr 0x7fb3b5026a38 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b5026a80 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5026bb8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b5026aa8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb3b5026b20 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fb3b5026c60 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b5026ca8 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5026de0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b5026cd0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb3b5026d48 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fb3b5026e88 <col:14> Implicit
| | `-ConstAttr 0x7fb3b5026ed0 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5027008 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b5026ef8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb3b5026f70 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fb3b50270b0 <col:15> Implicit
| | `-ConstAttr 0x7fb3b50270f8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5039238 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b5027120 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb3b5027198 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fb3b50392e0 <col:20> Implicit
| | `-ConstAttr 0x7fb3b5039328 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5039460 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fb3b5039350 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fb3b50393c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fb3b5039508 <col:14> Implicit
| | `-ConstAttr 0x7fb3b5039550 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5039688 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b5039578 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb3b50395f0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fb3b5039730 <col:15> Implicit
| | `-ConstAttr 0x7fb3b5039778 <col:15> Implicit
| |-FunctionDecl 0x7fb3b50398b0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b50397a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fb3b5039818 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fb3b5039958 <col:20> Implicit
| | `-ConstAttr 0x7fb3b50399a0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b5039ba8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7fb3b50399c8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fb3b5039a40 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fb3b5039ab8 <col:33> col:38 'float'
| | |-ConstAttr 0x7fb3b5039ca8 <col:14> Implicit
| | `-NoThrowAttr 0x7fb3b5039cf0 <col:14> Implicit
| |-FunctionDecl 0x7fb3b5039ef8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7fb3b5039d18 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fb3b5039d90 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7fb3b5039e08 <col:35> col:41 'double'
| | |-ConstAttr 0x7fb3b5039ff8 <col:15> Implicit
| | `-NoThrowAttr 0x7fb3b503a040 <col:15> Implicit
| |-FunctionDecl 0x7fb3b502a288 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7fb3b503a068 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fb3b503a0e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7fb3b503a158 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7fb3b502a388 <col:20> Implicit
| | `-NoThrowAttr 0x7fb3b502a3d0 <col:20> Implicit
| |-FunctionDecl 0x7fb3b502a488 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7fb3b502a520 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb3b502a668 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7fb3b502a700 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb3b502a848 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7fb3b502a8e0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb3b502aa28 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7fb3b502aac0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb3b502ac18 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b502ab78 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fb3b502acb8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb3b502ad58 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7fb3b502ad68 <col:14> Implicit
| |-FunctionDecl 0x7fb3b502ae30 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b502ad90 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fb3b502aed0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb3b502af70 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7fb3b502af80 <col:15> Implicit
| |-FunctionDecl 0x7fb3b503c200 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fb3b502afa8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7fb3b502b020 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7fb3b502b098 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fb3b503c2b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b503c4e0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fb3b503c310 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7fb3b503c388 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7fb3b503c400 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fb3b503c590 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b503c690 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b503c5f0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fb3b503c730 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb3b503c7d0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7fb3b503c7e0 <col:14> Implicit
| |-FunctionDecl 0x7fb3b503c8a8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b503c808 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fb3b503c948 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb3b503c9e8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7fb3b503c9f8 <col:15> Implicit
| |-FunctionDecl 0x7fb3b503cac0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b503ca20 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fb3b503cb60 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb3b503cc00 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7fb3b503cc10 <col:14> Implicit
| |-FunctionDecl 0x7fb3b503ccd8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b503cc38 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fb3b503cd78 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb3b503ce18 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7fb3b503ce28 <col:15> Implicit
| |-FunctionDecl 0x7fb3b503cef0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7fb3b503ce50 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fb3b503cf90 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb3b503d030 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7fb3b503d040 <col:14> Implicit
| |-FunctionDecl 0x7fb3b503d108 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b503d068 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fb3b5043200 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fb3b50432a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7fb3b50432b0 <col:15> Implicit
| |-FunctionDecl 0x7fb3b5043460 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fb3b50432d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7fb3b5043350 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7fb3b50433c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fb3b5043510 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b50436f8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fb3b5043570 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7fb3b50435e8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7fb3b5043660 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fb3b50437a8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7fb3b50437f0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7fb3b5043918 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7fb3b50439c8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7fb3b5043a28 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7fb3b504aa68 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fb3b504ab68 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7fb3b504ab68
| | |-CXXConstructorDecl 0x7fb3b504ac78 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7fb3b504ac78
| | | `-ParmVarDecl 0x7fb3b504ada0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7fb3b504ae38 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fb3b504af60 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fb3b50439c8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7fb3b504b0b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fb3b504b080 <col:8> 'float' xvalue .__sinval 0x7fb3b50439c8
| |   |     `-CXXStaticCastExpr 0x7fb3b504b050 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fb3b504b018 <col:8> 'struct __float2' lvalue ParmVar 0x7fb3b504af60 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fb3b5043a28 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7fb3b504b198 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fb3b504b160 <col:8> 'float' xvalue .__cosval 0x7fb3b5043a28
| |   |     `-CXXStaticCastExpr 0x7fb3b504b130 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fb3b504b0f8 <col:8> 'struct __float2' lvalue ParmVar 0x7fb3b504af60 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7fb3b504b1e8 <col:8>
| |-CXXRecordDecl 0x7fb3b5043a90 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7fb3b5043bb8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7fb3b5043c68 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7fb3b5043cc8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7fb3b504ba88 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fb3b504bb88 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7fb3b504bb88
| | |-CXXConstructorDecl 0x7fb3b504bc98 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7fb3b504bc98
| | | `-ParmVarDecl 0x7fb3b504bdc0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7fb3b504be58 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fb3b504bf80 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fb3b5043c68 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7fb3b504c0d8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fb3b504c0a0 <col:8> 'double' xvalue .__sinval 0x7fb3b5043c68
| |   |     `-CXXStaticCastExpr 0x7fb3b504c070 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fb3b504c038 <col:8> 'struct __double2' lvalue ParmVar 0x7fb3b504bf80 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fb3b5043cc8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7fb3b504c1b8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fb3b504c180 <col:8> 'double' xvalue .__cosval 0x7fb3b5043cc8
| |   |     `-CXXStaticCastExpr 0x7fb3b504c150 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fb3b504c118 <col:8> 'struct __double2' lvalue ParmVar 0x7fb3b504bf80 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7fb3b504c208 <col:8>
| |-FunctionDecl 0x7fb3b5043e90 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fb3b5043d48 <col:40> col:45 'float'
| |-FunctionDecl 0x7fb3b5044090 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fb3b5043f48 <col:40> col:46 'double'
| |-FunctionDecl 0x7fb3b504a400 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fb3b5044148 <col:42> col:47 'float'
| |-FunctionDecl 0x7fb3b504a550 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fb3b504a4b8 <col:42> col:48 'double'
| |-FunctionDecl 0x7fb3b504a790 prev 0x7fb3b503c200 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fb3b504a608 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7fb3b504a680 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7fb3b504a6f8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7fb3b504b5e0 <col:80, line:664:1>
| | | |-DeclStmt 0x7fb3b504b250 <line:662:5, col:57>
| | | | `-VarDecl 0x7fb3b504a8a8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fb3b504b238 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fb3b504b200 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fb3b504afc8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fb3b504aa20 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fb3b504aa08 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fb3b504a988 <col:37> 'struct __float2 (float)' lvalue Function 0x7fb3b5043e90 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fb3b504aa50 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fb3b504a960 <col:53> 'float' lvalue ParmVar 0x7fb3b504a608 '__x' 'float'
| | | |-BinaryOperator 0x7fb3b504b340 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fb3b504b2a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fb3b504b290 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fb3b504b268 <col:6> 'float *' lvalue ParmVar 0x7fb3b504a680 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fb3b504b328 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fb3b504b2f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7fb3b50439c8
| | | |     `-DeclRefExpr 0x7fb3b504b2c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fb3b504a8a8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fb3b504b5b8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fb3b504b520 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fb3b504b508 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fb3b504b4e0 <col:34> 'float *' lvalue ParmVar 0x7fb3b504a6f8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fb3b504b5a0 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fb3b504b568 <col:43, col:51> 'const float' lvalue .__cosval 0x7fb3b5043a28
| | |       `-DeclRefExpr 0x7fb3b504b540 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fb3b504a8a8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fb3b504a840 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b504b7b0 prev 0x7fb3b503c4e0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fb3b504b628 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7fb3b504b6a0 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7fb3b504b718 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7fb3b504c5e0 <col:82, line:669:1>
| | | |-DeclStmt 0x7fb3b504c270 <line:667:5, col:57>
| | | | `-VarDecl 0x7fb3b504b8c8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fb3b504c258 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fb3b504c220 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fb3b504bfe8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fb3b504ba40 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fb3b504ba28 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fb3b504b9a8 <col:38> 'struct __double2 (double)' lvalue Function 0x7fb3b5044090 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fb3b504ba70 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fb3b504b980 <col:53> 'double' lvalue ParmVar 0x7fb3b504b628 '__x' 'double'
| | | |-BinaryOperator 0x7fb3b504c360 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fb3b504c2c8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fb3b504c2b0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fb3b504c288 <col:6> 'double *' lvalue ParmVar 0x7fb3b504b6a0 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fb3b504c348 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fb3b504c310 <col:15, col:23> 'const double' lvalue .__sinval 0x7fb3b5043c68
| | | |     `-DeclRefExpr 0x7fb3b504c2e8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fb3b504b8c8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fb3b504c5b8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fb3b504c520 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fb3b504c508 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fb3b504c4e0 <col:34> 'double *' lvalue ParmVar 0x7fb3b504b718 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fb3b504c5a0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fb3b504c568 <col:43, col:51> 'const double' lvalue .__cosval 0x7fb3b5043cc8
| | |       `-DeclRefExpr 0x7fb3b504c540 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fb3b504b8c8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fb3b504b860 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b504c7b0 prev 0x7fb3b5043460 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fb3b504c628 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7fb3b504c6a0 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7fb3b504c718 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7fb3b504cd08 <col:82, line:674:1>
| | | |-DeclStmt 0x7fb3b504ca98 <line:672:5, col:59>
| | | | `-VarDecl 0x7fb3b504c8c8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fb3b504ca80 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fb3b504ca48 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fb3b504ca30 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fb3b504c9e8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fb3b504c9d0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fb3b504c9a8 <col:37> 'struct __float2 (float)' lvalue Function 0x7fb3b504a400 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fb3b504ca18 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fb3b504c980 <col:55> 'float' lvalue ParmVar 0x7fb3b504c628 '__x' 'float'
| | | |-BinaryOperator 0x7fb3b504cb88 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fb3b504caf0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fb3b504cad8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fb3b504cab0 <col:6> 'float *' lvalue ParmVar 0x7fb3b504c6a0 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fb3b504cb70 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fb3b504cb38 <col:15, col:23> 'const float' lvalue .__sinval 0x7fb3b50439c8
| | | |     `-DeclRefExpr 0x7fb3b504cb10 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fb3b504c8c8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fb3b504cce0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fb3b504cc48 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fb3b504cc30 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fb3b504cc08 <col:34> 'float *' lvalue ParmVar 0x7fb3b504c718 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fb3b504ccc8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fb3b504cc90 <col:43, col:51> 'const float' lvalue .__cosval 0x7fb3b5043a28
| | |       `-DeclRefExpr 0x7fb3b504cc68 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fb3b504c8c8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fb3b504c860 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b504ced8 prev 0x7fb3b50436f8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fb3b504cd50 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7fb3b504cdc8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7fb3b504ce40 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7fb3b504d440 <col:84, line:679:1>
| | | |-DeclStmt 0x7fb3b504d1c0 <line:677:5, col:59>
| | | | `-VarDecl 0x7fb3b504cff0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fb3b504d1a8 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fb3b504d170 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fb3b504d158 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fb3b504d110 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fb3b504d0f8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fb3b504d0d0 <col:38> 'struct __double2 (double)' lvalue Function 0x7fb3b504a550 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fb3b504d140 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fb3b504d0a8 <col:55> 'double' lvalue ParmVar 0x7fb3b504cd50 '__x' 'double'
| | | |-BinaryOperator 0x7fb3b504d2b0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fb3b504d218 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fb3b504d200 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fb3b504d1d8 <col:6> 'double *' lvalue ParmVar 0x7fb3b504cdc8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fb3b504d298 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fb3b504d260 <col:15, col:23> 'const double' lvalue .__sinval 0x7fb3b5043c68
| | | |     `-DeclRefExpr 0x7fb3b504d238 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fb3b504cff0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fb3b504d418 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fb3b504d370 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fb3b504d358 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fb3b504d330 <col:34> 'double *' lvalue ParmVar 0x7fb3b504ce40 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fb3b504d400 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fb3b504d3b8 <col:43, col:51> 'const double' lvalue .__cosval 0x7fb3b5043cc8
| | |       `-DeclRefExpr 0x7fb3b504d390 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fb3b504cff0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fb3b504cf88 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fb3b504d528 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b504d488 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fb3b504d5c8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb3b504d720 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b504d680 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fb3b504d7c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb3b504d9d8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fb3b504d878 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fb3b504d8f0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fb3b504da80 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb3b504dbd8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b504db38 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fb3b504dc78 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb3b504ddd0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b504dd30 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fb3b504de70 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb3b504e048 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fb3b504df28 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fb3b504dfa0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fb3b504e0f0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fb3b504e2b8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b504e1a8 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7fb3b504e220 <col:29> col:35 'double'
| |-VarDecl 0x7fb3b504e378 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7fb3b50504a0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7fb3b5050400 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7fb3b5050540 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb3b5050698 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7fb3b50505f8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7fb3b5050738 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb3b5050910 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7fb3b50507f0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fb3b5050868 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7fb3b50509b8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb3b5050b10 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7fb3b5050a70 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7fb3b5050bb0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fb3b5050d08 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7fb3b5050c68 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7fb3b5050da8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7fb3b5050f00 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7fb3b5050e60 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7fb3b5050fa0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7fb3b5012798 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7fb3b50127e8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7fb3b5012880 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7fb3b50128e8 <col:26> Implicit
|   `-ConstAttr 0x7fb3b5012930 <col:26> Implicit
|-LinkageSpecDecl 0x7fb3b5012ab0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fb3b5012b00 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fb3b5012b98 <col:50> Implicit
|   `-ConstAttr 0x7fb3b5012be0 <col:50> Implicit
|-LinkageSpecDecl 0x7fb3b5013008 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7fb3b5013058 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7fb3b50130f0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7fb3b5013158 <col:26> Implicit
|   `-ConstAttr 0x7fb3b50131a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fb3b5013320 <col:49> col:49 implicit C
| `-FunctionDecl 0x7fb3b5013800 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fb3b5013898 <col:49> Implicit
|   `-ConstAttr 0x7fb3b50138e0 <col:49> Implicit
|-LinkageSpecDecl 0x7fb3b5013d08 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7fb3b5013d58 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7fb3b5013df0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7fb3b5013e58 <col:26> Implicit
|   `-ConstAttr 0x7fb3b5013ea0 <col:26> Implicit
|-LinkageSpecDecl 0x7fb3b5014020 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fb3b5014070 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fb3b5014108 <col:50> Implicit
|   `-ConstAttr 0x7fb3b5014150 <col:50> Implicit
|-LinkageSpecDecl 0x7fb3b50510e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1485:1> line:307:8 C++
| |-TypedefDecl 0x7fb3b5051150 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7fb3b38327e0 'long'
| |-TypedefDecl 0x7fb3b50511c0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7fb3b3832880 'unsigned long'
| |-TypedefDecl 0x7fb3b5051230 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7fb3b3832900 'long double'
| |-NamespaceDecl 0x7fb3b5051288 prev 0x7fb3b3865c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7fb3b3865c58 'std'
| | `-TypedefDecl 0x7fb3b5051348 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7fb3b5051310 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7fb3b50512f0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7fb3b3832c10 'nullptr_t'
| |-NamespaceDecl 0x7fb3b5054800 prev 0x7fb3b5051288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fb3b3865c58 'std'
| | `-NamespaceDecl 0x7fb3b5054868 prev 0x7fb3b3865cc0 <col:52, line:439:36> <scratch space>:343:1 __1 inline
| |   |-original Namespace 0x7fb3b3865cc0 '__1'
| |   |-UsingDecl 0x7fb3b50548f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7fb3b5054940 <col:9> col:9 implicit Typedef 0x7fb3b5051150 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7fb3b5054990 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7fb3b50549e0 <col:9> col:9 implicit Typedef 0x7fb3b50511c0 'size_t'
| |   | `-TypedefType 0x7fb3b507d480 'size_t' sugar
| |   |   |-Typedef 0x7fb3b50511c0 'size_t'
| |   |   `-BuiltinType 0x7fb3b3832880 'unsigned long'
| |   |-UsingDecl 0x7fb3b5054a30 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7fb3b5054a80 <col:9> col:9 implicit Typedef 0x7fb3b5051230 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7fb3b5054ac8 prev 0x7fb3b5054800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fb3b3865c58 'std'
| | `-NamespaceDecl 0x7fb3b5054b30 prev 0x7fb3b5054868 <col:52, line:439:36> <scratch space>:344:1 __1 inline
| |   |-original Namespace 0x7fb3b3865cc0 '__1'
| |   |-ClassTemplateDecl 0x7fb3b5054e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7fb3b5054b98 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fb3b5054c38 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fb3b5054da8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7fb3b5055078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fb3b5055208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fb3b50550c0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5055170 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7fb3b5055418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fb3b50555a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7fb3b5055460 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5055510 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7fb3b50557b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fb3b5056d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7fb3b5056c00 <line:402:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fb3b5056c80 <line:403:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7fb3b5056f90 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7fb3b5057038 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7fb3b3832720 'void'
| |   |-ClassTemplateDecl 0x7fb3b50571c8 <line:405:1, line:406:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7fb3b50570b0 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5057130 <line:406:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7fb3b5057440 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7fb3b50574e8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b50570f0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b50570b0 '_Tp'
| |   |-ClassTemplateDecl 0x7fb3b5057718 <line:408:1, line:409:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7fb3b5057560 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b50575d8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fb3b5057680 <line:409:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7fb3b50579e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5057a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7fb3b5057d88 <line:411:1, line:412:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7fb3b5057b30 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fb3b5057b88 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fb3b5057c00 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7fb3b5057cf0 <line:412:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7fb3b5058090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b50580d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7fb3b5058180 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7fb3b5057bd0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb3b5057b88 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b50584f8 <line:413:1, line:414:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb3b50581f8 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7fb3b5058268 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7fb3b5058690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b5058830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7fb3b50588d8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7fb3b50582b0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fb3b5058268 '_Then'
| |   |-TypeAliasTemplateDecl 0x7fb3b5059d30 <line:417:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7fb3b5058960 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fb3b50589b8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fb3b5058a28 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7fb3b5059cd0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7fb3b5059c60 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b5059f40 <line:420:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fb3b5059d90 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb3b5059de8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5059ea8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7fb3b505a200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b505a248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b505a510 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b505a300 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b505a680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b505a7f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7fb3b505a970 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7fb3b505a900 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b505abb0 <line:423:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fb3b505a9f8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb3b505aa60 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fb3b505ab18 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7fb3b505ae70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fb3b505aeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4964c80 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7fb3b4964f10 prev 0x7fb3b4964c80 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b407e988 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7fb3b407ec68 prev 0x7fb3b407e988 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4080d38 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7fb3b4080fd0 prev 0x7fb3b4080d38 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b4086fe8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7fb3b4087280 prev 0x7fb3b4086fe8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b505b180 <line:424:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b505af70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b505b2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b505b460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7fb3b505b508 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b505afb0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b505af70 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb3b505b8a0 <line:427:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7fb3b505b590 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fb3b505b5f8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7fb3b505b840 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7fb3b505b7d0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fb3b505bcc8 <line:433:1, line:440:1> line:437:1 addressof
| |   | |-TemplateTypeParmDecl 0x7fb3b505b8f0 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b505bc30 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fb3b505bab8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7fb3b505c098 <line:438:1, line:440:1>
| |   |   | `-ReturnStmt 0x7fb3b505c080 <line:439:5, col:35>
| |   |   |   `-CallExpr 0x7fb3b505c050 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7fb3b505c000 <col:12> '<builtin fn type>' Function 0x7fb3b505bea8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7fb3b505c028 <col:32> '_Tp' lvalue ParmVar 0x7fb3b505bab8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7fb3b505bd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   |-VisibilityAttr 0x7fb3b505bd68 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7fb3b505bd78 <line:296:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7fb3b505c380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7fb3b505c0b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b505c2e8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7fb3b505c1a8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7fb3b505c3d8 <line:499:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7fb3b505c4f8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7fb3b505c5d0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7fb3b505c7f8 <line:503:1, line:515:1> line:504:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7fb3b505c638 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b505c6b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7fb3b505c760 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7fb3b505cac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fb3b505cb08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7fb3b505d200 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fb3b505d260 <col:53> '_Tp' NonTypeTemplateParm 0x7fb3b505c6b8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7fb3b505d298 <line:507:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fb3b505c680 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fb3b505c638 '_Tp'
| |   | | |-TypedefDecl 0x7fb3b505d300 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7fb3b505ca30 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7fb3b505c760 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fb3b505d498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7fb3b505d768 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7fb3b505d750 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7fb3b505d728 <col:73> 'const _Tp' lvalue Var 0x7fb3b505d200 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b505d530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b505d578 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7fb3b505d5e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7fb3b505d7c8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7fb3b505d7b0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7fb3b505d788 <col:69> 'const _Tp' lvalue Var 0x7fb3b505d200 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7fb3b505d680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |   `-VisibilityAttr 0x7fb3b505d6c8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b505dca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7fb3b5060258 prev 0x7fb3b505dca8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fb3b5060300 <line:506:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fb3b5060388 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fb3b5060370 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7fb3b5060418 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fb3b505dc70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fb3b505c680 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fb3b505c638 '_Tp'
| |   | | |   `-BuiltinType 0x7fb3b3832740 '_Bool'
| |   | | |-TypedefDecl 0x7fb3b5060480 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7fb3b505ddb0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7fb3b505dca8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fb3b5060568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fb3b5060638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fb3b50606b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fb3b5060758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b505df80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7fb3b505f0a8 prev 0x7fb3b505df80 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fb3b505f150 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fb3b505f1d8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fb3b505f1c0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7fb3b505f268 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fb3b505dc70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fb3b505c680 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fb3b505c638 '_Tp'
| |   | | |   `-BuiltinType 0x7fb3b3832740 '_Bool'
| |   | | |-TypedefDecl 0x7fb3b505f2d0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7fb3b505e080 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7fb3b505df80 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fb3b505f408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fb3b505f4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fb3b505f550 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fb3b505fe00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b4823700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7fb3b4823930 prev 0x7fb3b4823700 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7fb3b4823a00 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7fb3b4823a90 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7fb3b4823a70 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7fb3b4823b20 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7fb3b48236b0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7fb3b505c680 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fb3b505c638 '_Tp'
| |   |   |   `-BuiltinType 0x7fb3b3832880 'unsigned long'
| |   |   |-TypedefDecl 0x7fb3b4823b88 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7fb3b4823800 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7fb3b4823700 'integral_constant'
| |   |   |-CXXConversionDecl 0x7fb3b4823cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7fb3b4823d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-CXXMethodDecl 0x7fb3b4823e00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7fb3b4823ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |-VarDecl 0x7fb3b505db70 parent 0x7fb3b505c760 prev 0x7fb3b505d200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7fb3b505dec0 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7fb3b505ddd0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fb3b505dc38 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fb3b505dc20 <line:528:31> '_Bool' true
| |   |   `-RecordType 0x7fb3b505ddb0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7fb3b505dca8 'integral_constant'
| |   |-TypedefDecl 0x7fb3b505e190 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7fb3b505e0a0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fb3b505df40 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fb3b505df28 <line:529:31> '_Bool' false
| |   |   `-RecordType 0x7fb3b505e080 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7fb3b505df80 'integral_constant'
| |   |-ClassTemplateDecl 0x7fb3b505e7b0 <line:535:1, line:536:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7fb3b505e600 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7fb3b505e658 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fb3b505e718 <line:536:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7fb3b505ff78 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b505ed50 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fb3b505ea98 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fb3b505fe98 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7fb3b505ff78 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb3b50607f0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b5060ac0 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b50608a8 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fb3b50613f8 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b50617e0 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fb3b50614b0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb3b5061518 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fb3b5061d78 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7fb3b5061fc0 <line:550:1, line:551:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7fb3b5061e30 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fb3b5061e98 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fb3b5061f28 <line:551:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fb3b50624f8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7fb3b5062740 <line:555:1, line:556:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7fb3b50625c0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7fb3b5062618 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fb3b50626a8 <line:556:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7fb3b5063030 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b5062c50 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fb3b50629f8 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fb3b5062f50 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5063030 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb3b50632b8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b50636a0 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fb3b5063370 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb3b50633d8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fb3b5063c38 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7fb3b5063e80 <line:568:1, line:569:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7fb3b5063cf0 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fb3b5063d58 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fb3b5063de8 <line:569:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fb3b5064388 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7fb3b5064558 <line:573:1, line:574:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7fb3b5064440 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fb3b50644c0 <line:574:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7fb3b5064a18 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7fb3b5064be8 <line:577:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7fb3b5064ad0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fb3b5064b50 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7fb3b5064e68 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5064e68 <line:578:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb3b50650a0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b506ab08 <line:580:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b5065158 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fb3b506adb0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b506b0f8 <line:582:1, line:583:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb3b506ae68 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fb3b506aed8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fb3b506b700 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b506bcb8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fb3b506b7b8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fb3b506b828 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fb3b506b898 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fb3b506b908 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fb3b506c5f0 <line:586:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7fb3b506c7c8 <line:590:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7fb3b506c6a8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fb3b506c730 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7fb3b506ca88 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b506ca88 <line:591:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb3b506ccc0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b506cf18 <line:593:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b506cd78 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fb3b506d1c0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b506d508 <line:595:1, line:596:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb3b506d278 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fb3b506d2e8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fb3b506db10 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b506e068 <line:598:1, line:600:73> line:599:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fb3b506dbc8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fb3b506dc38 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fb3b506dca8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fb3b506dd18 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fb3b506fa00 <line:599:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7fb3b506fbd8 <line:603:1, line:604:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7fb3b506fab8 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b506fb40 <line:604:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7fb3b5070180 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7fb3b5070388 <line:610:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7fb3b5070238 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b50702f0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb3b5070600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5070688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b50708d8 <line:611:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b5070740 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b5070a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b5070bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7fb3b5070db8 <line:620:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7fb3b5070c68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5070d20 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb3b5071030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b50710b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b5071308 <line:621:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b5071170 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b5071448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b50715c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7fb3b50717c8 <line:630:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7fb3b5071678 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b5071730 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7fb3b5058c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fb3b5058cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7fb3b5058d58 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fb3b50716c0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fb3b5071678 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b4963d38 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fb3b4963f80 prev 0x7fb3b4963d38 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7fb3b4964058 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fb3b4964020 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fb3b50716c0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b5071678 '_Tp'
| |   |       `-BuiltinType 0x7fb3b38328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b5058f68 <line:631:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b5058dd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b50590a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b50591e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7fb3b5059288 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b5058e10 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b5058dd0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb3b5059540 <line:633:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7fb3b5059300 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b50594e0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b5059470 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b50596d8 <line:638:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7fb3b5059590 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b5059640 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7fb3b5059950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fb3b5059998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7fb3b5059a40 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fb3b50595d0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fb3b5059590 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b4964140 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fb3b4964390 prev 0x7fb3b4964140 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7fb3b4964468 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fb3b4964430 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fb3b50595d0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b5059590 '_Tp'
| |   |       `-BuiltinType 0x7fb3b38328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b5073a88 <line:639:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b5059ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b5073bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b5073d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7fb3b5073da8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b5059b00 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b5059ab8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb3b5074060 <line:641:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fb3b5073e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b5074000 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b5073f90 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b50741f8 <line:646:1, line:647:80> line:646:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7fb3b50740b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b5074160 <col:22, line:647:80> line:646:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7fb3b5074470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fb3b50744b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7fb3b5074810 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7fb3b50747a0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b4963a58 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fb3b4963c68 prev 0x7fb3b4963a58 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7fb3b4964550 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7fb3b4964500 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7fb3b49644e0 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7fb3b4964468 'type'
| |   |         `-SubstTemplateTypeParmType 0x7fb3b4964430 'double' sugar
| |   |           |-TemplateTypeParmType 0x7fb3b50595d0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7fb3b5059590 '_Tp'
| |   |           `-BuiltinType 0x7fb3b38328e0 'double'
| |   |-TypeAliasTemplateDecl 0x7fb3b5074ad0 <line:649:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7fb3b5074888 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b5074a70 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b5074a00 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b5074c38 <line:654:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7fb3b5074b20 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b5074ba0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fb3b5074ef0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7fb3b5074fc8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5074fc8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb3b5075230 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7fb3b5075438 <line:657:1, line:658:63> line:657:50 is_void
| |   | |-TemplateTypeParmDecl 0x7fb3b50752e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b50753a0 <col:22, line:658:63> line:657:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b50756b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5075918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7fb3b5075b18 <line:667:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7fb3b5075a00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b5075a80 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fb3b5075dd0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7fb3b5075ed0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5075ed0 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7fb3b5076140 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7fb3b5076348 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7fb3b50761f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b50762b0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b50765c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5076828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7fb3b5076a98 <line:674:1, line:675:66> line:674:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b50768e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5076a00 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b5076d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5076f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7fb3b50770f8 <line:685:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7fb3b5076fe0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b5077060 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fb3b50773b0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7fb3b5077488 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b50777c8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5077b10 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5077e60 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b50781a8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b50784e8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5078828 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5078b88 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5078ed0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5079220 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5079570 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b50798c0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5079c10 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b5079f60 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b507a2b0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b507a620 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fb3b507aa00 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b4964640 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fb3b4964860 prev 0x7fb3b4964640 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5077488 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7fb3b50776f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b50777c8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7fb3b5077a30 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5077b10 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7fb3b5077d80 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5077e60 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7fb3b50780d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b50781a8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7fb3b5078410 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b50784e8 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7fb3b5078750 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5078828 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7fb3b5078aa8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5078b88 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7fb3b5078df0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5078ed0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7fb3b5079140 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5079220 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7fb3b5079490 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5079570 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7fb3b50797e0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b50798c0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7fb3b5079b30 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5079c10 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7fb3b5079e80 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b5079f60 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7fb3b507a1d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b507a2b0 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7fb3b507a520 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b507a620 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7fb3b507a890 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fb3b507aa00 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7fb3b507ac70 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7fb3b507ae78 <line:708:1, line:709:67> line:708:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7fb3b507ad28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b507ade0 <col:22, line:709:67> line:708:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7fb3b507b0f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fb3b507b358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b4963808 <col:1, line:709:67> line:708:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fb3b4964948 prev 0x7fb3b4963808 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7fb3b507b528 <line:718:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fb3b507b410 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b507b490 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fb3b507b7e0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7fb3b507b8c0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7fb3b507bc10 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7fb3b507bf60 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b507b8c0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7fb3b507bb30 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fb3b507bc10 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7fb3b507be80 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fb3b507bf60 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7fb3b507c1d0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7fb3b507c3d8 <line:723:1, line:724:73> line:723:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fb3b507c288 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b507c340 <col:22, line:724:73> line:723:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b507c650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b507c8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7fb3b507cac8 <line:733:1, line:734:26> line:733:50 is_array
| |   | |-TemplateTypeParmDecl 0x7fb3b507c970 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b507ca30 <col:22, line:734:26> line:733:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb3b507cd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b507cdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b507d088 <line:735:1, line:736:25> line:735:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb3b507ce80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b507d1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b507d350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b507d6f8 <line:737:1, line:738:25> line:737:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb3b507d408 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b507d4b0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb3b507d848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b507da00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7fb3b507dbd8 <line:747:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b507dab8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b507db40 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fb3b507de90 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b507e0e8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fb3b507df48 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b507e360 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7fb3b507e568 <line:750:1, line:751:66> line:750:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b507e418 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b507e4d0 <col:22, line:751:66> line:750:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b507e7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b507f260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7fb3b507f468 <line:760:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fb3b507f318 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b507f3d0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb3b507f6e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b507f768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b507f9e8 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb3b507f820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b507fb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b507fca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7fb3b507fea8 <line:763:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fb3b507fd58 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b507fe10 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb3b5080120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5080a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b5080cb8 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b5080ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b5080df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b5080f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7fb3b5081178 <line:768:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7fb3b5081028 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b50810e0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb3b50813f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5081478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b50816f8 <line:769:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb3b5081530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b5081838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b5082a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b5082c88 <line:771:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b5082ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b5082dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b5082f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7fb3b5083148 <line:788:1, line:789:56> line:788:50 is_union
| |   | |-TemplateTypeParmDecl 0x7fb3b5082ff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b50830b0 <col:22, line:789:56> line:788:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b50833c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b50835a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7fb3b50837a8 <line:808:1, line:809:56> line:808:50 is_class
| |   | |-TemplateTypeParmDecl 0x7fb3b5083660 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5083710 <col:22, line:809:56> line:808:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b5083a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5083c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7fb3b5083ec0 <line:831:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7fb3b5083d00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b5083d68 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fb3b5083e28 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fb3b5084160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b50841e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b50844a0 <line:832:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b50842a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b5084608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b50847b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7fb3b5084868 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7fb3b50848d0 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7fb3b5085a00 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7fb3b5085d18 <line:844:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fb3b5085ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fb3b5085c80 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7fb3b5085b78 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7fb3b5085f58 <line:845:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7fb3b5085d70 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fb3b5085ec0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7fb3b5085e00 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7fb3b5086118 <line:846:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fb3b5085fb0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fb3b5086080 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7fb3b50863d8 <line:847:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7fb3b5086168 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fb3b5086340 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7fb3b5086208 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7fb3b5086598 <line:848:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7fb3b5086430 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7fb3b5086500 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7fb3b5086d70 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7fb3b50865e8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b5086c60 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b5086c28 <col:29, line:855:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fb3b5086af8 <line:851:29, line:854:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7fb3b50869a8 <line:851:29, line:853:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7fb3b5086878 <line:851:29, line:852:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7fb3b5086728 <line:851:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7fb3b5086838 <line:852:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7fb3b5086968 <line:853:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fb3b5086ab8 <line:854:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b5086be8 <line:855:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b5086cd8 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7fb3b50874c8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b5087760 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b5087580 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5087a30 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7fb3b5087c38 <line:861:1, line:862:41> line:861:50 is_function
| |   | |-TemplateTypeParmDecl 0x7fb3b5087ae8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5087ba0 <col:22, line:862:41> line:861:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb3b5087eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5088628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7fb3b50888d8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7fb3b50886e0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7fb3b5088758 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7fb3b50887c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7fb3b5088840 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7fb3b5088ce0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7fb3b5088eb8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b5088d98 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5088e20 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fb3b5089170 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b50894c8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fb3b5089228 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb3b5089298 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fb3b50897c8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fb3b5089a00 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b5089880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b5089930 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7fb3b5089c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b5089fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fb3b508a198 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b508a078 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508a100 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fb3b508a450 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b508a778 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fb3b508a508 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b508a578 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fb3b508aa00 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7fb3b508ac08 <line:901:1, line:902:73> line:901:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b508aab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508ab70 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b508ae80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b508b0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7fb3b508b2e8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b508b1a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508b250 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb3b508b560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b508ba00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7fb3b508bc08 <line:924:1, line:925:55> line:924:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7fb3b508bab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508bb70 <col:22, line:925:55> line:924:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b508be80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b508c068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7fb3b508c268 <line:950:1, line:952:70> line:950:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7fb3b508c120 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508c1d0 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb3b508c4e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b508c918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7fb3b508cb48 <line:961:1, line:964:66> line:961:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7fb3b508ca00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508cab0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb3b508cdc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b508d318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7fb3b508d518 <line:973:1, line:978:71> line:973:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7fb3b508d3d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b508d480 <col:22, line:978:71> line:973:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7fb3b508d790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fb3b508df88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7fb3b508e090 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b508e090 <line:980:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7fb3b508e1c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b508e340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7fb3b508e548 <line:989:1, line:993:63> line:989:50 is_object
| |   | |-TemplateTypeParmDecl 0x7fb3b508e3f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508e4b0 <col:22, line:993:63> line:989:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb3b508e7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b508ee68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7fb3b508f068 <line:1002:1, line:1003:68> line:1002:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7fb3b508ef20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508efd0 <col:22, line:1003:68> line:1002:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb3b508f2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b508f5d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7fb3b508f690 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7fb3b508f7b8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7fb3b508fac0 <line:1014:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7fb3b508f850 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fb3b508fa28 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7fb3b508f8e8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7fb3b508fc58 <line:1015:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7fb3b508fb18 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7fb3b508fbc0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7fb3b508fde8 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7fb3b508fcc8 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b508fd50 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7fb3b5090588 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7fb3b4807148 <line:1025:1, line:1028:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7fb3b5090640 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4807038 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b4807000 <col:29, line:1027:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fb3b50908c8 <line:1025:29, line:1026:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fb3b5090778 <line:1025:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fb3b5090888 <line:1026:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b50909b8 <line:1027:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b48070b0 <line:1028:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7fb3b4807410 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7fb3b48074b8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b5090680 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b5090640 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4807710 <line:1030:1, line:1031:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4807530 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b48079a0 <line:1031:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7fb3b4807a48 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7fb3b4807571 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7fb3b4807570 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b4807530 '_Tp'
| |   |-ClassTemplateDecl 0x7fb3b4807c08 <line:1033:1, line:1034:51> line:1033:50 add_const
| |   | |-TemplateTypeParmDecl 0x7fb3b4807ac0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4807b70 <col:22, line:1034:51> line:1033:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7fb3b4807e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b4807ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7fb3b48084c0 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7fb3b4808450 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b4808780 <line:1037:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7fb3b4808538 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b4808720 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b48086b0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b4808cd0 <line:1042:1, line:1045:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7fb3b48087d0 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4808bc0 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b4808b88 <col:29, line:1044:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fb3b4808a58 <line:1042:29, line:1043:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fb3b4808908 <line:1042:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fb3b4808a18 <line:1043:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4808b48 <line:1044:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b4808c38 <line:1045:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7fb3b4809600 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7fb3b48096a8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b4808810 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b48087d0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4809900 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4809720 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b4809b90 <line:1048:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7fb3b4809c38 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7fb3b4809764 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7fb3b4809760 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b4809720 '_Tp'
| |   |-ClassTemplateDecl 0x7fb3b4809df8 <line:1050:1, line:1051:54> line:1050:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7fb3b4809cb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4809d60 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7fb3b480a070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b480a0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7fb3b480aca0 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7fb3b480ac30 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b480af60 <line:1054:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fb3b480ad18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b480af00 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b480ae90 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b480b0f8 <line:1059:1, line:1060:78> line:1059:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7fb3b480afb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b480b060 <col:22, line:1060:78> line:1059:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7fb3b480b370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b480b3b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7fb3b480b710 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fb3b480b6a0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b480b9d0 <line:1063:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7fb3b480b788 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b480b970 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b480b900 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b480bb68 <line:1068:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7fb3b480ba20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b480bad0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7fb3b480c430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b480c478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7fb3b480c520 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b480ba60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b480ba20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b480c768 <line:1069:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb3b480c598 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b480c8a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b480c9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fb3b480ca88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b480c5e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b480c598 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b480ccc8 <line:1071:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b480cb00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b480ce08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b480cf40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fb3b480cfe8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b480cb40 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b480cb00 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb3b480d8a0 <line:1075:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7fb3b480d060 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b480d840 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b480d1d0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b480db88 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fb3b480d8f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b480da78 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b480da28 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b480daf0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fb3b480de50 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7fb3b480def8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b480d930 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b480d8f0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b480e150 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b480df70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b480e3e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7fb3b480e4b8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7fb3b480e480 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7fb3b480dfb0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b480df70 '_Tp'
| |   |-ClassTemplateDecl 0x7fb3b480e678 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fb3b480e530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b480e5e0 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fb3b480e930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b480e978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7fb3b480ed10 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fb3b480eca0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b480efd0 <line:1087:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fb3b480ed88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b480ef70 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b480ef00 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b480f2b8 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fb3b480f020 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b480f1a8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b480f158 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b480f220 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fb3b480f580 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7fb3b480f628 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b480f060 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b480f020 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48138d0 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b480f6a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b4813b60 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7fb3b4813c38 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7fb3b4813c00 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7fb3b480f6e0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b480f6a0 '_Tp'
| |   |-ClassTemplateDecl 0x7fb3b4813df8 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fb3b4813cb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4813d60 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fb3b4814070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b48140b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7fb3b4814430 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fb3b48143c0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b48146f0 <line:1099:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fb3b48144a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b4814690 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b4814620 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fb3b48149c8 <line:1106:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fb3b4814740 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b4814930 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7fb3b4814800 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7fb3b4814c58 <line:1107:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fb3b4814a20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b4814bc0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7fb3b4814ab8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7fb3b4815050 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
| |   | |-TemplateTypeParmDecl 0x7fb3b4814cb0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b4814fb8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7fb3b48151b8 <line:1123:1, line:1126:1> line:1124:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7fb3b48150a0 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4815120 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7fb3b4815430 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7fb3b4815790 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fb3b4815720 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b4815938 <line:1128:1, line:1131:1> line:1129:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7fb3b4815820 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48158a0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7fb3b4815bb0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7fb3b4815f10 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fb3b4815ea0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b48161d0 <line:1134:1, line:1135:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7fb3b4815f88 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b4816170 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b4816100 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b48163b0 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7fb3b4816220 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b4816288 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fb3b4816318 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7fb3b4818488 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7fb3b4818540 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7fb3b4818668 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7fb3b48187a0 <line:1146:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7fb3b48189b8 <line:1151:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b4818868 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4818920 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fb3b4818c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b4818c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7fb3b4818d20 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b48188b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b4818868 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4818f68 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fb3b4818d98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b48190a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b481a200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fb3b481a2a8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b4818de0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b4818d98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b481a4e8 <line:1153:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7fb3b481a320 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b481a628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b481a760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fb3b481a808 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b481a360 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b481a320 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b481aa48 <line:1154:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7fb3b481a880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b481ab88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b481acc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fb3b481ad68 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b481a8c0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b481a880 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b481afa8 <line:1155:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7fb3b481ade0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b481b0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b481b268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fb3b481b310 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b481ae20 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b481ade0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb3b481b5d0 <line:1158:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fb3b481b388 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b481b570 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b481b500 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b481bba0 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7fb3b481b620 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b481ba90 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b481ba58 <col:16, line:1165:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fb3b481b758 <line:1164:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b481ba18 <line:1165:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b481bb08 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7fb3b481be60 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7fb3b481c080 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7fb3b481c030 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7fb3b481bfb0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b481d330 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b481c0f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b481d5c0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7fb3b481d668 <line:1169:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b481c140 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b481c0f8 '_Tp'
| |   |-ClassTemplateDecl 0x7fb3b481d828 <line:1171:1, line:1172:58> line:1171:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7fb3b481d6e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b481d790 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fb3b481daa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b481dae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7fb3b481e0b0 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fb3b481e040 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b481e3b0 <line:1175:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fb3b481e128 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b481e350 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b481e2e0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b481e698 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7fb3b481e400 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b481e588 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b481e538 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b481e600 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7fb3b481ebf8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b481ee90 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b481ecb0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b481f160 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7fb3b481fcb8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7fb3b481fa20 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b481fba8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b481fb58 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b481fc20 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fb3b48201b8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4820450 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4820270 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4820720 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7fb3b4820928 <line:1191:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7fb3b48207d8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4820890 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb3b4820c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4820eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7fb3b4821208 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7fb3b4820f70 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48210f8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b48210a8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b4821170 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7fb3b4821768 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4821a00 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4821820 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4821cd0 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7fb3b4822028 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fb3b4821d88 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4821f18 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b4821ec8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b4821f90 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fb3b4822528 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48227c0 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48225e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4822aa8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7fb3b4822ca8 <line:1211:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fb3b4822b60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4822c10 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb3b4822f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48231a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7fb3b48233a8 <line:1220:1, line:1221:44> line:1220:50 rank
| |   | |-TemplateTypeParmDecl 0x7fb3b4823260 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4823310 <col:22, line:1221:44> line:1220:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fb3b4823620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4823f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48241d8 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb3b4823ff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b4824328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b4824748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4824e88 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb3b4824800 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4824878 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb3b4824fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b4825388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7fb3b4825638 <line:1234:1, line:1235:44> line:1234:68 extent
| |   | |-TemplateTypeParmDecl 0x7fb3b4825440 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48254e0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7fb3b4825538 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7fb3b48254a8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7fb3b48255a0 <col:40, line:1235:44> line:1234:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fb3b4825900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4825a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4825e00 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4825b40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b4825f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b4826238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48265c0 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4826468 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fb3b4826370 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fb3b48262f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4826370 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7fb3b4826728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b4826c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4827030 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4826d10 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4826d88 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb3b48271b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b48274b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48278f0 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4827790 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fb3b4827658 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fb3b4827570 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48275e8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4827658 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7fb3b4827a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b4827fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7fb3b48281b8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7fb3b4828070 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4828120 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7fb3b4828430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b4828478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7fb3b4828520 <line:1253:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b48280b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b4828070 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4828778 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb3b4828598 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b48288c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4828a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fb3b4828aa8 <line:1255:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b48285e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b4828598 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4828e00 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb3b4828b20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4828b98 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb3b4828f48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4829080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fb3b4829128 <line:1257:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fb3b4828b60 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b4828b20 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb3b48293e0 <line:1260:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7fb3b48291a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b4829380 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b4829310 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b4829578 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7fb3b4829430 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48294e0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7fb3b48297f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b4829838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7fb3b48298e0 <line:1266:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b4829470 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fb3b4829430 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4829b38 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb3b4829958 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b4829c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4829e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fb3b482a000 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b4829f90 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b482a308 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb3b482a078 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b482a0f8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fb3b482a458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b482a590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fb3b482a750 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b482a6e0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b482a9d0 <line:1273:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7fb3b482a7c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b482a970 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b482a900 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b482aba8 <line:1278:1, line:1281:1> line:1279:8 __decay
| |   | |-TemplateTypeParmDecl 0x7fb3b482aa20 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fb3b482aa98 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fb3b482ab10 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7fb3b482be90 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7fb3b482c050 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7fb3b482bfe0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b482c2b0 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b482c0c8 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7fb3b482c540 <line:1284:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7fb3b482c5d8 <line:1285:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7fb3b482d070 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7fb3b482d000 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b482d238 <line:1299:1, line:1306:1> line:1300:29 decay
| |   | |-TemplateTypeParmDecl 0x7fb3b482d0e8 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b482d1a0 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7fb3b482d4b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b482d4f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7fb3b482d590 <line:1302:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7fb3b482d6e0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7fb3b482d670 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7fb3b482d738 <line:1304:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7fb3b482db00 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7fb3b482da90 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b482e200 <line:1309:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7fb3b482db78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b482dd60 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b482dcf0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b482e398 <line:1314:1, line:1315:59> line:1314:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7fb3b482e250 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b482e300 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b482e610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b482e7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7fb3b482e9f8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7fb3b482e8b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b482e960 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b482ec70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b482ee58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7fb3b482f058 <line:1333:1, line:1334:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7fb3b482ef10 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b482efc0 <col:22, line:1334:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b482f2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b482f468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7fb3b482f6e0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7fb3b482f520 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fb3b482f588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7fb3b482f648 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b482f980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b482fb78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7fb3b482fdf0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7fb3b482fc30 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fb3b482fc98 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fb3b482fd58 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7fb3b4830090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4831448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7fb3b4831648 <line:1489:1, line:1491:56> line:1490:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7fb3b4831500 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48315b0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48318c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4831aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7fb3b4831ca8 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7fb3b4831b60 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4831c10 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b4831f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4832108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7fb3b4832308 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7fb3b48321c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4832270 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b4832580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4832768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7fb3b4832968 <line:1567:1, line:1568:59> line:1567:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7fb3b4832820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48328d0 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b4832be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4832dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7fb3b4833010 <line:1577:1, line:1582:1> line:1578:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7fb3b4832e80 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb3b4832ee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7fb3b4832f78 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7fb3b48332f0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fb3b4833398 <line:1580:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7fb3b4832ec0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fb3b4832e80 '_Hp'
| |   | | `-TypedefDecl 0x7fb3b4833400 <line:1581:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fb3b4832f30 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b4832ee8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4837918 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4837b30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4837d40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4837f50 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4838200 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4838410 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4838620 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4838830 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4838a40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4838c50 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4856ce8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4856f00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4857110 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4857320 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4857530 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4857740 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7fb3b485f488 prev 0x7fb3b4857740 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fb3b485f558 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7fb3b485f520 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7fb3b4832ec0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fb3b4832e80 '_Hp'
| |   | | |   `-BuiltinType 0x7fb3b3832780 'signed char'
| |   | | `-TypedefDecl 0x7fb3b485f5e8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7fb3b485f5b0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7fb3b4832f30 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7fb3b4832ee8 '_Tp'
| |   | |     `-RecordType 0x7fb3b4857630 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7fb3b4857530 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4857a40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4857c50 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4857e60 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4858070 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4858290 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b48584a0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7fb3b4866d68 prev 0x7fb3b48584a0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7fb3b4866e38 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7fb3b4866e00 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7fb3b4832ec0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fb3b4832e80 '_Hp'
| |   |   |   `-BuiltinType 0x7fb3b3832820 'unsigned char'
| |   |   `-TypedefDecl 0x7fb3b4866ec8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7fb3b4866e90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7fb3b4832f30 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7fb3b4832ee8 '_Tp'
| |   |       `-RecordType 0x7fb3b4858390 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7fb3b4858290 '__type_list'
| |   |-CXXRecordDecl 0x7fb3b4833478 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7fb3b4833598 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7fb3b4833698 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7fb3b4833840 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fb3b4833778 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7fb3b48339f0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fb3b4833900 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7fb3b4833ae0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fb3b4833ae0
| |   |-ClassTemplateDecl 0x7fb3b4833cd8 <line:1594:1, line:1599:1> line:1595:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7fb3b4833bb8 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b4833c40 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7fb3b4833f50 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7fb3b4833ff8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7fb3b4834128 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7fb3b4834178 <line:1598:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fb3b4833c00 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fb3b4833bb8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4835300 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b48354d0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b48356a0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4835870 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4835a40 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4835c10 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4837200 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b48373c8 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7fb3b4837588 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7fb3b4837750 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7fb3b4834e00 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7fb3b4834f28 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7fb3b4834fd8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7fb3b4835040 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7fb3b4835168 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7fb3b4835280 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7fb3b4838e60 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7fb3b4838d70 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7fb3b4838d50 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fb3b4838c50 '__type_list'
| |   |-ClassTemplateDecl 0x7fb3b4839048 <line:1618:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7fb3b4838eb8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4838f38 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7fb3b4838fb0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48396b0 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4839550 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4839368 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fb3b48392e8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4839368 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7fb3b4839980 <line:1621:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fb3b4839dc0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7fb3b4839d50 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b483a270 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b483a0c0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4839f28 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fb3b4839e38 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb3b4839ea8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4839f28 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7fb3b483a540 <line:1631:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fb3b483ab90 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7fb3b483ab20 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b483ad98 <line:1640:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7fb3b483ac08 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483ac88 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fb3b483ad00 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b483b360 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b483b200 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b078 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fb3b483aff8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483b078 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fb3b483b848 <line:1643:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fb3b483baf8 <line:1645:1, line:1653:1> line:1646:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483b910 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483b978 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483b9e0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7fb3b483ba60 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7fb3b483be50 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7fb3b483bee8 <line:1648:1, col:8> col:1 private
| |   |   |-VarDecl 0x7fb3b483bf20 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fb3b483c048 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fb3b483bfd0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fb3b483bf80 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b9e0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fb3b483bfa8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b978 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fb3b483bff8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b9e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fb3b483c020 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b978 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7fb3b483c088 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fb3b483c1b0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fb3b483c138 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fb3b483c0e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b978 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fb3b483c110 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b9e0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fb3b483c160 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b9e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fb3b483c188 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b978 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7fb3b483c600 <line:1651:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fb3b483c638 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7fb3b483c7a8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7fb3b483c778 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7fb3b483c700 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7fb3b483c698 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483b910 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7fb3b483c6e8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7fb3b483c6c0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fb3b483c088 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7fb3b483c728 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fb3b483bf20 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7fb3b483c750 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fb3b483c088 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b483cbc0 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b483ca60 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483c8c8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fb3b483c7e0 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb3b483c848 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483c8c8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7fb3b483d4d8 <line:1656:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fb3b483d938 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483d5a0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483d7f8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b483d7a8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b483d8a0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7fb3b483dc20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b483dc68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7fb3b483df20 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7fb3b483deb0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7fb3b483e1c0 <line:1663:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7fb3b483e0f8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7fb3b483e0b8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7fb3b483e198 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7fb3b483e1f8 <line:1664:5, line:1668:5> line:1664:11 union type definition
| |   |     |-CXXRecordDecl 0x7fb3b483e318 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7fb3b483e3c0 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7fb3b483ea28 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7fb3b483ef30 <line:1672:1, line:1673:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483eac0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483ec88 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b483ec38 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7fb3b483eed0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7fb3b483ee60 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b483f1c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b483f030 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b483ef90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7fb3b483ef90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b483f328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b483f490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b483f548 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b483f668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b483f528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7fb3b483f6b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b483f988 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4841060 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4840ed0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4840e30 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4840e30 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b48411c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4841330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b48413e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4841508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b48413c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7fb3b4841558 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b4841828 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4841af0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4841960 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b48418c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48418c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4841c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4841e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b4841eb8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4841fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4841e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7fb3b4842028 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b48422f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48425c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4842430 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4842390 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4842390 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4842728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4842890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b4842948 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4842a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4842928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7fb3b4842ab8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b4842d88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4843060 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4842ed0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4842e30 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4842e30 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b48431c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4843330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b48433e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4843508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b48433c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7fb3b4843558 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b4843828 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4843af0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4843960 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b48438c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48438c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4843c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4843dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b4843e78 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4843f98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4843e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7fb3b4843fe8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b48442b8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4844580 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b48443f0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4844350 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4844350 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b48446e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4844850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b4844908 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4844a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b48448e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7fb3b4844a78 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b4844d48 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4845030 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4844ea0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4844e00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4844e00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4845198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4845300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b48453b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b48454d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4845398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7fb3b4845528 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b48457f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4845ac0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4845930 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4845890 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4845890 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4845c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4845d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b4845e48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4845f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4845e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7fb3b4845fb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b4846288 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4846550 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b48463c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4846320 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4846320 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b48466b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4846820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b48468d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b48469f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b48468b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7fb3b4846a48 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b4846d18 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4847030 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4846ea0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4846e00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4846e00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4847198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4847300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b48473b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b48474d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4847398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7fb3b4847528 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b48477f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4847ac0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4847930 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4847890 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4847890 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4847c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4847d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b4847e48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4847f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4847e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7fb3b4847fb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b4848288 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4848550 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b48483c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4848320 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4848320 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b48486b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4848820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b48488d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b48489f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b48488b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7fb3b4848a48 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b4848d18 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4849030 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4848ea0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4848e00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4848e00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4849198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4849300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b48493b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b48494d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4849398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7fb3b4849528 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b48497f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4849ac0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4849930 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4849890 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4849890 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fb3b4849c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4849d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fb3b4849e48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fb3b4849f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fb3b4849e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7fb3b4849fb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fb3b484a288 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7fb3b484a498 <line:1711:1, line:1712:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7fb3b484a320 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fb3b484a388 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7fb3b484a400 <line:1712:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b484a910 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b484a7e8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b484a778 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7fb3b484a778 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7fb3b484aba0 <line:1715:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fb3b484ac48 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7fb3b484aca8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b484a778 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b484b0e0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b484ae80 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b484ad00 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7fb3b484aea8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b484ad68 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7fb3b484aef8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7fb3b484aed0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b484ae00 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7fb3b484ad00 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fb3b484ad68 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7fb3b484ae00 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7fb3b484b3e0 <line:1721:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fb3b484b488 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7fb3b484b9b8 <col:33, line:1724:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7fb3b484b538 <line:1723:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7fb3b484b4e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b484ad00 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7fb3b484b510 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b484ad68 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7fb3b484b748 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7fb3b484b978 <line:1724:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fb3b484bc38 <line:1727:1, line:1735:1> line:1728:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7fb3b484ba18 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fb3b484ba70 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7fb3b484bad8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7fb3b484bba0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7fb3b484bfd0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7fb3b484c078 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b484c2d8 <col:43, line:1731:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b484c328 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b484c608 <col:33, line:1733:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7fb3b484c8b0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7fb3b484c840 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b484ccd0 <line:1738:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7fb3b484c938 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fb3b484c990 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7fb3b484cc70 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7fb3b484cc00 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b484dc98 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7fb3b484cd20 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b484dc00 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7fb3b484df10 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7fb3b484dff8 <line:1746:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7fb3b484e138 <line:1747:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7fb3b484e0a8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7fb3b484e2b8 <line:1748:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7fb3b484e1e8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7fb3b484e438 <line:1749:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7fb3b484e370 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7fb3b484e5b8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7fb3b484e4f0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7fb3b484e738 <line:1751:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7fb3b484e670 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7fb3b484e8b8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7fb3b484e7f0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7fb3b484ea38 <line:1753:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7fb3b484e970 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7fb3b484ebb8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7fb3b484eaf0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7fb3b484ed00 <line:1755:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7fb3b484ec70 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7fb3b484ee48 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7fb3b484edb8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7fb3b484f108 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7fb3b484f0d0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7fb3b484f060 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7fb3b484eee8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fb3b484ee48 0x7fb3b484ed00 0x7fb3b484ebb8 0x7fb3b484ea38 0x7fb3b484e8b8 0x7fb3b484e738 0x7fb3b484e5b8 0x7fb3b484e438 0x7fb3b484e2b8 0x7fb3b484e138 0x7fb3b484dff8
| |   | | |     `-CallExpr 0x7fb3b484f038 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7fb3b484efa0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fb3b4815050
| |   | | `-VarDecl 0x7fb3b484f170 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7fb3b484f398 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b484f358 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7fb3b484f3f8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b484f3f8 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fb3b484f620 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7fb3b484f6c8 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fb3b484f728 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7fb3b48512a0 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7fb3b484f7b8 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fb3b484f838 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fb3b484f8b8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4851180 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b4851148 <col:18, line:1773:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7fb3b484fb98 <line:1771:18, line:1772:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fb3b484f9f8 <line:1771:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fb3b484fb58 <line:1772:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4851108 <line:1773:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b4851208 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7fb3b48515c0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7fb3b4851658 <line:1776:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fb3b4851690 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fb3b48516f0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4851ae0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b4851728 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fb3b4851798 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7fb3b4851808 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7fb3b4851e20 <line:1781:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fb3b4851eb8 <line:1783:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fb3b4852490 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fb3b4852420 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fb3b4852a40 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fb3b48529d0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7fb3b4853a00 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7fb3b4852f80 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7fb3b4853a58 <line:1787:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fb3b4853c58 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7fb3b4853c20 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7fb3b4853bb8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7fb3b4853b38 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7fb3b4853ab0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7fb3b4853b10 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fb3b4853b90 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7fb3b4853cc0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fb3b4853d20 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4854090 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b4853d58 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fb3b4853dc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7fb3b48543d0 <line:1793:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fb3b4854468 <line:1795:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fb3b48548c0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fb3b4854850 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fb3b4854d50 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fb3b4854ce0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7fb3b4854da8 <line:1798:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fb3b4854f28 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7fb3b4854ef0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7fb3b4854e88 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7fb3b4854e00 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fb3b4854e60 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7fb3b4854f90 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fb3b4854ff0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48552f0 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b4855028 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7fb3b4855630 <line:1804:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fb3b48556c8 <line:1806:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fb3b4855840 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7fb3b48557d0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7fb3b48558a8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fb3b4855908 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7fb3b4856368 <line:1811:1, line:1812:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7fb3b4855940 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fb3b48559b8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fb3b4856238 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb3b48562d0 <line:1812:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7fb3b4856b98 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7fb3b4857950 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fb3b4857860 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fb3b4857840 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fb3b4857740 '__type_list'
| |   |-TypedefDecl 0x7fb3b48586b0 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fb3b48585c0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fb3b48585a0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fb3b48584a0 '__type_list'
| |   |-ClassTemplateDecl 0x7fb3b4858a50 <line:1846:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7fb3b4858708 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4858788 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4858938 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b4858900 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7fb3b48587e0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4858788 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7fb3b48588e0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7fb3b48589b8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4859178 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4858fa0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b4858e08 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b4858d18 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb3b4858d88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4858e08 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fb3b48594b0 <line:1849:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fb3b4859558 <line:1851:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7fb3b4858d60 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b4858d18 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4859a28 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b4859850 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fb3b48596b8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48595d0 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb3b4859638 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48596b8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fb3b4859d60 <line:1855:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fb3b485a200 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7fb3b485a140 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b485a9c8 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7fb3b485a278 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b485a2e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fb3b485a5d8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b485a588 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7fb3b485a8a8 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b485a858 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b485a930 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7fb3b485ad10 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7fb3b485adb8 <line:1864:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7fb3b485a330 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb3b485a2e8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b485b170 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b485ae30 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b485ae98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b485b4c0 <line:1868:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb3b485b568 <line:1870:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7fb3b485aee1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7fb3b485aee0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb3b485ae98 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b485b920 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b485b5e0 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b485b648 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b485bc70 <line:1874:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb3b485bd18 <line:1876:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7fb3b485b694 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7fb3b485b690 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb3b485b648 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b485c0d0 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b485bd90 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b485bdf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b485c470 <line:1880:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb3b485c518 <line:1882:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7fb3b485be45 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7fb3b485be40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb3b485bdf8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b485c900 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b485c590 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b485c5f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b485cc50 <line:1886:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb3b485cd58 <line:1888:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7fb3b485cd20 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7fb3b485c640 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb3b485c5f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b485d140 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b485cdd0 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b485ce38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b485d490 <line:1892:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb3b485d598 <line:1894:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7fb3b485d560 'const _Up &' dependent
| |   |     `-QualType 0x7fb3b485ce81 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7fb3b485ce80 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fb3b485ce38 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b485d980 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b485d610 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b485d678 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b485dcd0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb3b485ddd8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7fb3b485dda0 'volatile _Up &' dependent
| |   |     `-QualType 0x7fb3b485d6c4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7fb3b485d6c0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fb3b485d678 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b485e200 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b485de50 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b485deb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b485e550 <line:1904:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fb3b485e658 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7fb3b485e620 'const volatile _Up &' dependent
| |   |     `-QualType 0x7fb3b485df05 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7fb3b485df00 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fb3b485deb8 '_Up'
| |   |-ClassTemplateDecl 0x7fb3b485eaa0 <line:1909:1, line:1910:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7fb3b485e6d0 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b485e990 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b485e958 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fb3b485e808 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b485e918 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fb3b485ea08 <line:1910:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7fb3b485ed60 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7fb3b485f9d0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b485fd38 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b4860118 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b4861d18 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b48620f8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b48624d8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b48628b8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b4862c98 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b4863078 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fb3b4863450 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7fb3b4863818 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b485f000 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b485ee18 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b485f290 <line:1913:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b485f920 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fb3b485f8b0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fb3b485f9d0 <line:1918:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fb3b485fc40 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7fb3b485fd38 <line:1919:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b485ffb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4860060 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fb3b38327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4860118 <line:1920:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4861bb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4861c60 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fb3b38327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4861d18 <line:1921:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4861f90 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4862040 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fb3b38327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48620f8 <line:1922:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4862370 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4862420 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fb3b38327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48624d8 <line:1923:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4862750 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4862800 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fb3b38327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48628b8 <line:1924:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4862b30 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4862be0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fb3b38327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4862c98 <line:1925:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4862f10 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4862fc0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fb3b3832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4863078 <line:1926:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b48632f0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b48633a0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fb3b3832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4863450 <line:1928:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b48636c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4863768 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fb3b507a5f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fb3b3832c60 '__int128_t'
| |   |     `-BuiltinType 0x7fb3b3832940 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4863818 <line:1929:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4863ac0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fb3b4863b68 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fb3b507a5f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fb3b3832c60 '__int128_t'
| |   |     `-BuiltinType 0x7fb3b3832940 '__int128'
| |   |-ClassTemplateDecl 0x7fb3b4863d28 <line:1932:1, line:1936:1> line:1933:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7fb3b4863be0 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4863c90 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7fb3b4863fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b4863fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7fb3b4864ca0 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fb3b4864c30 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b4864f60 <line:1939:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7fb3b4864d18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b4864f00 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b4864e90 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b4865380 <line:1942:1, line:1943:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fb3b4864fb0 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b4865270 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b4865238 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fb3b48650e8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b48651f8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fb3b48652e8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7fb3b4865640 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7fb3b48672b0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b4867618 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b48679f8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b4867dd8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b48681b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b4868598 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b4870a00 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b4870dd8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b48711b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fb3b4871590 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7fb3b4871958 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48658e0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b48656f8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b4866b70 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b4867200 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fb3b4867190 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48672b0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fb3b4867520 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4867618 <line:1952:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4867890 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b4867940 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fb3b3832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48679f8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4867c70 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b4867d20 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fb3b3832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4867dd8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4868050 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b4868100 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fb3b3832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48681b8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4868430 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b48684e0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fb3b3832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4868598 <line:1956:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4868810 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b48688c0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fb3b3832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4870a00 <line:1957:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4870c70 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b4870d20 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fb3b3832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4870dd8 <line:1958:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4871050 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b4871100 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fb3b38328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48711b8 <line:1959:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4871430 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b48714e0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fb3b38328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4871590 <line:1961:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4871800 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b48718a8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fb3b507a960 '__uint128_t' sugar
| |   |     |-Typedef 0x7fb3b3832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7fb3b3832960 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4871958 <line:1962:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4871bd0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fb3b4871c78 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fb3b507a960 '__uint128_t' sugar
| |   |     |-Typedef 0x7fb3b3832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7fb3b3832960 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7fb3b4871e38 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fb3b4871cf0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4871da0 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7fb3b48720b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b48720f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7fb3b4872cb0 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fb3b4872c40 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b4872f70 <line:1972:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7fb3b4872d28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b4872f10 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b4872ea0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b4873108 <line:2010:1, line:2011:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7fb3b4872fc0 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7fb3b4873070 <line:2011:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7fb3b48733e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b4873428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48736a8 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b48734e0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b4873818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b4873af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fb3b4873dc8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7fb3b4873bb0 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b4873c18 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fb3b4873c98 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb3b4873d30 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7fb3b48740a0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4874898 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b4874158 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48741c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b4874fc0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7fb3b4875480 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7fb3b4875410 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b4876390 <line:2035:1, line:2043:6> line:2038:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7fb3b48754f8 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b4875568 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fb3b4875700 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b4875920 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7fb3b4876330 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7fb3b48762c0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4876698 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb3b48763e0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b4876448 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7fb3b4876848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b48786c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fb3b4878898 <line:2051:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7fb3b4878778 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7fb3b4878800 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7fb3b4878cb0 <line:2053:1, line:2054:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7fb3b4878b08 <line:2053:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4878b88 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb3b4878c18 <line:2054:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7fb3b4878f50 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48797a0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b4879008 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b4879078 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fb3b4879b20 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7fb3b4879d80 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7fb3b4879d10 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b487a600 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b4879df8 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b4879e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fb3b4879ed8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7fb3b487ade8 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b487b278 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb3b487aea0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b487af08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fb3b487af78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7fb3b487b468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b487b918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7fb3b487bcb0 <line:2078:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7fb3b487ba00 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7fb3b487bc50 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7fb3b487bbe0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b487be90 <line:2085:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7fb3b487bd00 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb3b487bd68 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fb3b487bdf8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7fb3b487c130 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7fb3b487c1d8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fb3b487bdb0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fb3b487bd68 '_Tp'
| |   |-FunctionTemplateDecl 0x7fb3b487c9c8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fb3b487c250 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b487c2b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7fb3b487c930 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7fb3b487c818 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7fb3b487cc38 <line:2091:1, line:2092:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fb3b487ca20 <line:2091:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb3b487ca88 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7fb3b487cba0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7fb3b487d128 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7fb3b487cc88 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b487ccf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7fb3b487d010 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fb3b487cfd8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fb3b487ce38 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fb3b487cf98 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b487d090 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7fb3b487d698 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b488aaa0 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b487d750 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b487d7b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb3b488adc0 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7fb3b488b010 <line:2105:1, line:2107:46> line:2106:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b488ae78 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b488aee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb3b488af78 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7fb3b488b6a8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7fb3b488b8a8 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b488b760 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b488b810 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b488bb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b488c088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7fb3b488c288 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b488c140 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b488c1f0 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b488c500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b488c8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7fb3b488ca98 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7fb3b488c980 <line:2149:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fb3b488ca00 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7fb3b488cd10 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7fb3b488cdc0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7fb3b38327c0 'int'
| |   |-ClassTemplateDecl 0x7fb3b488cf58 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7fb3b488ce38 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b488cec0 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7fb3b488d1d0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7fb3b488d8e8 <line:2154:5, line:2157:5> line:2155:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb3b488d268 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fb3b488d850 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7fb3b488d720 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7fb3b488da78 <line:2159:5, line:2160:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb3b488d940 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fb3b488d9e0 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7fb3b488dad8 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7fb3b488dcc0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7fb3b488dc70 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7fb3b488dc50 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7fb3b488dc20 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7fb3b488db60 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fb3b488da78 0x7fb3b488d8e8
| |   |       |     `-IntegerLiteral 0x7fb3b488dc00 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7fb3b488dca0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7fb3b488de98 <line:2165:1, line:2166:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7fb3b488dd08 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b488dd88 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fb3b488de00 <line:2166:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b488e2e0 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b488e0f8 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b488ee18 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b488f0b0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b488eed0 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b488f3f0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7fb3b488f638 <line:2177:1, line:2178:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7fb3b488f4a8 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b488f528 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fb3b488f5a0 <line:2178:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b488fa80 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b488f898 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b488ffc8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4890260 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b4890080 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48905a0 <line:2184:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7fb3b4890778 <line:2186:1, line:2188:73> line:2187:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7fb3b4890658 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b48906e0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7fb3b4890ca8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7fb3b48912c8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4890f28 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fb3b4890d60 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48911f0 <line:2191:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48912c8 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fb3b4891570 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7fb3b4891a38 <line:2207:1, line:2214:1> line:2210:1 move
| |   | |-TemplateTypeParmDecl 0x7fb3b4891628 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b48919a0 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fb3b4891818 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fb3b4891d50 <line:2211:1, line:2214:1>
| |   |   | |-DeclStmt 0x7fb3b4891c68 <line:2212:5, col:53>
| |   |   | | `-TypedefDecl 0x7fb3b4891c10 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7fb3b4891ba0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7fb3b4891d38 <line:2213:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fb3b4891d08 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fb3b4891ca0 <col:31> '_Tp' lvalue ParmVar 0x7fb3b4891818 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b4891a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b4891ad8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b4892180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
| |   | |-TemplateTypeParmDecl 0x7fb3b4891d78 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b48920e8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fb3b4891fb0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7fb3b48922b0 <line:2220:1, line:2222:1>
| |   |   | `-ReturnStmt 0x7fb3b4892298 <line:2221:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fb3b4892268 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fb3b4892230 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fb3b4891fb0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7fb3b48921d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b4892220 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48926a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
| |   | |-TemplateTypeParmDecl 0x7fb3b48922d0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b4892608 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fb3b48924d0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7fb3b4892a18 <line:2228:1, line:2232:1>
| |   |   | |-DeclStmt 0x7fb3b4892980 <line:2229:5, line:2230:60>
| |   |   | | `-StaticAssertDecl 0x7fb3b4892948 <line:2229:5, line:2230:59> line:2229:5
| |   |   | |   |-UnaryOperator 0x7fb3b4892858 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7fb3b4892818 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7fb3b48928f8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7fb3b4892a00 <line:2231:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fb3b48929d0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fb3b4892998 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fb3b48924d0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b48926f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b4892740 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b4892e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7fb3b4892a40 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b4892d40 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7fb3b4892c28 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fb3b4893018 <line:2281:1, line:2283:1>
| |   |   | `-ReturnStmt 0x7fb3b4893000 <line:2282:5, col:35>
| |   |   |   `-CallExpr 0x7fb3b4892fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fb3b4892f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     `-DeclRefExpr 0x7fb3b4892fa8 <col:32> '_Tp' lvalue ParmVar 0x7fb3b4892c28 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b4892e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b4892ea0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48935b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4893038 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48930a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b4893118 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48938d0 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b4893978 <line:2302:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fb3b48930f0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fb3b48930a8 '_Class'
| |   | |-TypedefDecl 0x7fb3b48939e0 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b4893080 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4893038 '_Rp'
| |   | `-TypedefDecl 0x7fb3b4893ad8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b4893310 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48932d0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b4893080 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b4893038 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b48931f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b4893160 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b4893118 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48940c8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4893b50 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b4893bb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b4893c28 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48943e0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b4894488 <line:2310:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fb3b4893c00 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fb3b4893bb8 '_Class'
| |   | |-TypedefDecl 0x7fb3b48944f0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b4893b90 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4893b50 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48945e8 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b4893e20 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b4893de0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b4893b90 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b4893b50 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b4893d00 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b4893c70 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b4893c28 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4894bd8 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4894660 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48946c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b4894738 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b4895750 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48957f8 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fb3b4894711 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fb3b4894710 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b48946c8 '_Class'
| |   | |-TypedefDecl 0x7fb3b4895860 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48946a0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4894660 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48959c8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b4895970 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b4895930 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48946a0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b4894660 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b4894810 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b4894780 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b4894738 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4895fb8 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4895a40 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b4895aa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b4895b18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48962d0 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b4896378 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fb3b4895af1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fb3b4895af0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b4895aa8 '_Class'
| |   | |-TypedefDecl 0x7fb3b48963e0 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b4895a80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4895a40 '_Rp'
| |   | `-TypedefDecl 0x7fb3b4896548 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b48964f0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48964b0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b4895a80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b4895a40 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b4895bf0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b4895b60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b4895b18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4896b38 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48965c0 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b4896628 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b4896698 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b4896e50 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b4896ef8 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fb3b4896674 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fb3b4896670 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b4896628 '_Class'
| |   | |-TypedefDecl 0x7fb3b4896f60 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b4896600 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48965c0 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48970c8 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b4897070 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b4897030 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b4896600 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48965c0 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b4896770 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b48966e0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b4896698 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4898318 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4897140 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48971a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b4897218 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b4898630 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48986d8 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fb3b48971f4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fb3b48971f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b48971a8 '_Class'
| |   | |-TypedefDecl 0x7fb3b4898740 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b4897180 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4897140 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48988a8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b4898850 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b4898810 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b4897180 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b4897140 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b48972f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b4897260 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b4897218 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4898e98 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b4898920 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b4898988 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48989f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48991b0 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b4899258 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fb3b48989d5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fb3b48989d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b4898988 '_Class'
| |   | |-TypedefDecl 0x7fb3b48992c0 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b4898960 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4898920 '_Rp'
| |   | `-TypedefDecl 0x7fb3b4899428 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b48993d0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b4899390 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b4898960 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b4898920 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b4898ad0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b4898a40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b48989f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4899a18 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48994a0 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b4899508 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b4899578 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b4899d30 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b4899dd8 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fb3b4899555 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fb3b4899550 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b4899508 '_Class'
| |   | |-TypedefDecl 0x7fb3b4899e40 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48994e0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48994a0 '_Rp'
| |   | `-TypedefDecl 0x7fb3b4899fa8 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b4899f50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b4899f10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48994e0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48994a0 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b4899650 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b48995c0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b4899578 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b489b198 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b489a020 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b489a088 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b489a0f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b489b4b0 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b489b588 <line:2369:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fb3b489b550 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fb3b489a0d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b489a088 '_Class'
| |   | |-TypedefDecl 0x7fb3b489b5f0 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b489a060 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b489a020 '_Rp'
| |   | `-TypedefDecl 0x7fb3b489b758 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b489b700 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b489b6c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b489a060 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b489a020 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b489a1d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b489a140 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b489a0f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b489bd48 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b489b7d0 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b489b838 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b489b8a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b489c060 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b489c138 <line:2377:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fb3b489c100 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fb3b489b880 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b489b838 '_Class'
| |   | |-TypedefDecl 0x7fb3b489c1a0 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b489b810 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b489b7d0 '_Rp'
| |   | `-TypedefDecl 0x7fb3b489c308 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b489c2b0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b489c270 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b489b810 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b489b7d0 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b489b980 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b489b8f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b489b8a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b489c8f8 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b489c380 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b489c3e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b489c458 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b489cc10 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b489cce8 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fb3b489ccb0 'const _Class &' dependent
| |   | |   `-QualType 0x7fb3b489c431 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fb3b489c430 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b489c3e8 '_Class'
| |   | |-TypedefDecl 0x7fb3b489cd50 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b489c3c0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b489c380 '_Rp'
| |   | `-TypedefDecl 0x7fb3b489daf8 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b489daa0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b489da60 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b489c3c0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b489c380 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b489c530 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b489c4a0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b489c458 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b489e0e8 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b489db70 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b489dbd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b489dc48 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b489e400 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b489e4d8 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fb3b489e4a0 'const _Class &' dependent
| |   | |   `-QualType 0x7fb3b489dc21 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fb3b489dc20 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b489dbd8 '_Class'
| |   | |-TypedefDecl 0x7fb3b489e540 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b489dbb0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b489db70 '_Rp'
| |   | `-TypedefDecl 0x7fb3b489e6a8 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b489e650 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b489e610 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b489dbb0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b489db70 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b489dd20 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b489dc90 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b489dc48 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b489ec98 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b489e720 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b489e788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b489e7f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b489efb0 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b489f088 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fb3b489f050 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fb3b489e7d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fb3b489e7d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b489e788 '_Class'
| |   | |-TypedefDecl 0x7fb3b489f0f0 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b489e760 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b489e720 '_Rp'
| |   | `-TypedefDecl 0x7fb3b489f258 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b489f200 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b489f1c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b489e760 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b489e720 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b489e8d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b489e840 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b489e7f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b489f848 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b489f2d0 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b489f338 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b489f3a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a0370 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a0448 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fb3b48a0410 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fb3b489f384 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fb3b489f380 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b489f338 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a04b0 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b489f310 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b489f2d0 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a0618 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b48a05c0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a0580 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b489f310 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b489f2d0 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b489f480 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b489f3f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b489f3a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a0c08 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a0690 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a06f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a0768 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a0f20 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a0ff8 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fb3b48a0fc0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fb3b48a0745 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fb3b48a0740 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b48a06f8 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a1060 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a06d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a0690 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a11c8 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b48a1170 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a1130 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a06d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a0690 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b48a0840 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b48a07b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b48a0768 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a17b8 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a1240 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a12a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a1318 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a1ad0 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a1ba8 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fb3b48a1b70 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fb3b48a12f5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fb3b48a12f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b48a12a8 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a1c10 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a1280 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a1240 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a1d78 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b48a1d20 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a1ce0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a1280 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a1240 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b48a13f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b48a1360 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b48a1318 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a3998 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a1df0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a1e58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a1ec8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a3cb0 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a3db8 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fb3b48a3d80 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fb3b48a1ea0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b48a1e58 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a3e20 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a1e30 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a1df0 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a3f88 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b48a3f30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a3ef0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a1e30 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a1df0 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b48a1fa0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b48a1f10 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b48a1ec8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a4578 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a4000 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a4068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a40d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a4890 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a4968 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fb3b48a4930 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fb3b48a40b0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fb3b48a4068 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a49d0 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a4040 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a4000 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a4b38 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b48a4ae0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a4aa0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a4040 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a4000 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b48a41b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b48a4120 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b48a40d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a5128 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a4bb0 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a4c18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a4c88 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a5440 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a5548 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fb3b48a5510 'const _Class &&' dependent
| |   | |   `-QualType 0x7fb3b48a4c61 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fb3b48a4c60 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b48a4c18 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a55b0 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a4bf0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a4bb0 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a5718 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b48a56c0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a5680 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a4bf0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a4bb0 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b48a4d60 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b48a4cd0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b48a4c88 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a6908 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a5790 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a6400 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a6468 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a6c20 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a6cf8 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fb3b48a6cc0 'const _Class &&' dependent
| |   | |   `-QualType 0x7fb3b48a6441 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fb3b48a6440 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b48a6400 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a6d60 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a57d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a5790 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a6ec8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b48a6e70 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a6e30 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a57d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a5790 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b48a6540 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b48a64b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b48a6468 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a74b8 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a6f40 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a6fa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a7018 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a77d0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a78d8 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fb3b48a78a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fb3b48a6ff4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fb3b48a6ff0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b48a6fa8 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a7940 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a6f80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a6f40 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a7aa8 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b48a7a50 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a7a10 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a6f80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a6f40 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b48a70f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b48a7060 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b48a7018 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a8098 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a7b20 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a7b88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a7bf8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a8c00 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a8cd8 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fb3b48a8ca0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fb3b48a7bd4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fb3b48a7bd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b48a7b88 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a8d40 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a7b60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a7b20 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a8ea8 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b48a8e50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a8e10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a7b60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a7b20 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b48a7cd0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b48a7c40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b48a7bf8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48a9498 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a8f20 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a8f88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a8ff8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48a97b0 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48a98b8 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fb3b48a9880 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fb3b48a8fd5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fb3b48a8fd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b48a8f88 '_Class'
| |   | |-TypedefDecl 0x7fb3b48a9920 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a8f60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a8f20 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48a9a88 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fb3b48a9a30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48a99f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a8f60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a8f20 '_Rp'
| |   |       `-PackExpansionType 0x7fb3b48a90d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fb3b48a9040 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fb3b48a8ff8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48aa078 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48a9b00 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48a9b68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48a9bd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fb3b48aa390 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48aa468 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fb3b48aa430 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fb3b48a9bb5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fb3b48a9bb0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fb3b48a9b68 '_Class'
| |   | |-TypedefDecl 0x7fb3b48aa4d0 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fb3b48a9b40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b48a9b00 '_Rp'
| |   | `-TypedefDecl 0x7fb3b48aa638 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fb3b48aa5e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fb3b48aa5a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fb3b48a9b40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fb3b48a9b00 '_Rp'
| |   |       |-PackExpansionType 0x7fb3b48a9cb0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fb3b48a9c20 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fb3b48a9bd8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48aaa08 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b48aa6b0 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48aa718 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7fb3b48ab950 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fb3b48ab9f8 <line:2759:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fb3b48aa760 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fb3b48aa718 '_Class'
| |   | `-TypedefDecl 0x7fb3b48aba60 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7fb3b48aa6f0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fb3b48aa6b0 '_Rp'
| |   |-ClassTemplateDecl 0x7fb3b48abbf8 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7fb3b48abad8 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7fb3b48abb60 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7fb3b48ac378 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7fb3b48ac548 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7fb3b48ac430 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7fb3b48ac4b0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7fb3b48ac7c0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48acae8 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fb3b48ac878 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb3b48ac8e8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7fb3b48acd30 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7fb3b48acdd8 <line:2780:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7fb3b48ac930 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fb3b48ac8e8 '_ClassType'
| |   |-ClassTemplateDecl 0x7fb3b48acf68 <line:2785:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7fb3b48ace50 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7fb3b48aced0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7fb3b48ad178 <line:2937:1, line:2940:1> line:2937:11 __is_construct
| |   | `-CXXRecordDecl 0x7fb3b48ad1e0 <line:2939:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7fb3b48ad308 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7fb3b48ad580 <line:3059:1, line:3062:6> line:3060:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48ad3c0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48ad428 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48ad4e8 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48adc90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48ade98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7fb3b48ae098 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48adf50 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48ae000 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48ae310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48ae478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7fb3b48ae678 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48ae530 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48ae5e0 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48ae8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48aece8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7fb3b48aeee8 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48aeda0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48aee50 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48af160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48af448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7fb3b48af6c0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48af500 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48af568 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48af628 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48af9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48afc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7fb3b48afe08 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48afcb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48afd70 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b0080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48b01e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7fb3b48b03e8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48b02a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48b0350 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b0660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48b09d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7fb3b48b0bd8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48b0a90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48b0b40 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b0e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48b1138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7fb3b48b1380 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b48b11f0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48b1258 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb3b48b12e8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7fb3b48b17d8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7fb3b48b19d8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b48b1890 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48b1940 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b3e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48b4338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7fb3b48b4538 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b48b43f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48b44a0 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b47b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48b4b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7fb3b48b4d78 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48b4c30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48b4ce0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b4ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48b5338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7fb3b48b5660 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48b5400 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48b5468 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7fb3b48b54c0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48b5528 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48b55c8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48b5e00 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fb3b48b59a8 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48b5a18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48b6448 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7fb3b48b6730 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7fb3b48b6500 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b48b6698 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7fb3b48b6590 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7fb3b48b6788 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48b6b10 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb3b48b67a0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48b6808 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb3b48b71c8 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48b76a0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b48b73f8 <col:69> '_Bool' NonTypeTemplateParm 0x7fb3b48b72f8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb3b48b7280 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48b72f8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7fb3b48b7350 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48b7a40 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fb3b48b7cc0 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48b7af8 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48b7b68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48b7c28 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b80b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48b8608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48b8970 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7fb3b48b86c0 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48b8738 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fb3b48b8ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b48b9018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fb3b48b9218 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48b90d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48b9180 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b9490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48b95f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7fb3b48b97f8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48b96b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48b9760 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48b9a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48bbe78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7fb3b48bc078 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48bbf30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48bbfe0 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48bc2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48bc5d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7fb3b48bc898 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48bc6a0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48bc6f8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48bc768 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7fb3b48bc800 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48bce08 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb3b48bcb38 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48bcba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb3b48bd130 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48bd4b8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fb3b48bd1e8 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48bd258 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb3b48bdb58 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fb3b48bfe00 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b48bdc10 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fb3b48bdc78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fb3b48bdd38 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c00a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c0418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fb3b48c0618 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b48c04d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c0580 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c0890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c0d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7fb3b48c0f68 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fb3b48c0e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c0ed0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c11e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c15a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7fb3b48c17f0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48c1670 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48c16c8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c1758 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c1c30 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c1a48 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c1f00 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c21a0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c1fb8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c2748 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fb3b48c2948 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7fb3b48c2800 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c28b0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c2bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c2e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c31b8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c2f30 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48c2fa8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fb3b48c3308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b48c34f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c3778 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c35b0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b48c38b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b48c3a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c3cb8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c3ae8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b48c3e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b48c3f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fb3b48c4188 <line:3925:1, line:3926:54> line:3925:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7fb3b48c4038 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c40f0 <col:22, line:3926:54> line:3925:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c4400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c45e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7fb3b48c47e8 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7fb3b48c46a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c4750 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c4a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c4c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7fb3b48c4e48 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7fb3b48c4d00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c4db0 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c50c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c52a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7fb3b48c54a8 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7fb3b48c5360 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c5410 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c5720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c5908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7fb3b48c5b08 <line:3993:1, line:4000:6> line:3993:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7fb3b48c59c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c5a70 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fb3b48c5d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fb3b48c6f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7fb3b48c7148 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7fb3b48c7030 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c70b0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fb3b48c7400 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c76d8 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c74b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c7980 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7fb3b48c7b58 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fb3b48c7a38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c7ac0 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7fb3b48c7fe8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7fb3b48c81b8 <line:4016:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7fb3b48c80a0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7fb3b48c8120 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7fb3b48c8438 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b48c8438 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fb3b48c8630 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c8a98 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c86e8 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fb3b48c8758 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7fb3b48c87c8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7fb3b48c90e0 <line:4024:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c93a8 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c9198 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7fb3b48c9768 <line:4031:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c9968 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c9820 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b48c9bd0 <line:4037:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7fb3b48c9db8 <line:4039:5, col:60> col:5
| |   |   |-BinaryOperator 0x7fb3b48c9cd0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7fb3b48c9c78 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7fb3b48c9cb8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7fb3b48c9c98 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7fb3b48c9d78 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48c9fd8 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fb3b48c9e10 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48ca328 <line:4043:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48ca5a8 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b48ca3e0 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48ca8f8 <line:4049:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cae00 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fb3b48ca9b0 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48caa18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cb168 <line:4055:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cb588 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cb220 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cb810 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cbbd8 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cb8c8 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48cb938 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cbf38 <line:4066:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cc278 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cbff0 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cc4f0 <line:4072:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cc9f8 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cc5a8 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48cc618 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48cc688 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cce00 <line:4077:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cd308 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cceb8 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48ccf28 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48ccf98 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cd678 <line:4083:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cdb78 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cd730 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48cd798 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48cd808 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cdee8 <line:4089:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48ce3e8 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cdfa0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48ce008 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48ce078 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48ce758 <line:4095:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cec58 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7fb3b48ce810 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48ce878 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48ce8e8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cefd8 <line:4101:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cf4d8 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cf090 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48cf0f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48cf168 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48cf848 <line:4107:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48cfd48 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7fb3b48cf900 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48cf968 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48cf9d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48d00b8 <line:4113:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48d05b8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d0170 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d01d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48d0248 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48d0928 <line:4119:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48d0e40 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d09e0 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d0a48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48d0ab8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48d11a8 <line:4125:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48d16a8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d1260 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d12c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48d1338 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48d1a18 <line:4131:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48d1f18 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d1ad0 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d1b38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48d1ba8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48d2288 <line:4137:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48d2788 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d2340 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d23a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fb3b48d2418 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fb3b48d2af8 <line:4143:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48d2e88 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d2bb0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d2c18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fb3b48d31e8 <line:4149:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7fb3b48d3ea0 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7fb3b48d32a0 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d3308 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48d34a0 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d3630 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d3850 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fb3b48d3e40 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb3b48d3dd0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b48d47f0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7fb3b48d3ef0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d3f58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48d40f0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d4280 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fb3b48d4790 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb3b48d4720 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b48d6610 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7fb3b48d4840 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d48a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48d4a40 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d4bd0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d4d60 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fb3b48d65b0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb3b48d6540 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b48d7130 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7fb3b48d6660 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d66c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48d6860 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d69f0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d6b80 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fb3b48d70d0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb3b48d7060 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b48d7a10 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7fb3b48d7180 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d71e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48d7380 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d7510 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fb3b48d79b0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb3b48d7940 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fb3b48d9650 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7fb3b48d7a60 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d7ac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48d7c60 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d7df0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fb3b48d7f80 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fb3b48d95f0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fb3b48d9580 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7fb3b48d9a48 <line:4223:1, line:4224:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb3b48d96a0 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fb3b48d99b0 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fb3b48d9730 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fb3b48d9868 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fb3b48d9d98 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb3b48d9aa8 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fb3b48d9d00 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fb3b48d9b40 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fb3b48d9c18 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fb3b48dd6e8 <line:4231:1, line:4221:27> line:4235:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb3b48d9df8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48d9e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48d9ed8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb3b48daa28 <line:4232:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48dd650 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb3b48dab38 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48dabd8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb3b48dad18 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb3b48ddb38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48ddb20 <col:7, line:4236:88>
| |   |   |   `-CallExpr 0x7fb3b48ddaf0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb3b48dd960 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb3b48dd938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fb3b48dd8e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fb3b48dd818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     |   | `-DeclRefExpr 0x7fb3b48dd8b8 <col:44> '_A0' lvalue ParmVar 0x7fb3b48dabd8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb3b48dd910 <col:51> '_Fp' lvalue ParmVar 0x7fb3b48dab38 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb3b48ddad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48ddaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb3b48dd9d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |         `-DeclRefExpr 0x7fb3b48dda78 <col:78> '_Args &&...' lvalue ParmVar 0x7fb3b48dad18 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb3b48dd750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48dd798 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48df000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb3b48ddb58 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48ddbc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48ddc38 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb3b48de468 <line:4239:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48def40 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb3b48de578 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48de618 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb3b48de6f8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb3b48df450 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48df438 <col:7, line:4243:88>
| |   |   |   `-CallExpr 0x7fb3b48df408 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb3b48df278 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb3b48df250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fb3b48df1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fb3b48df130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     |   | `-DeclRefExpr 0x7fb3b48df1d0 <col:44> '_A0' lvalue ParmVar 0x7fb3b48de618 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb3b48df228 <col:51> '_Fp' lvalue ParmVar 0x7fb3b48de578 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb3b48df3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48df3b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb3b48df2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |         `-DeclRefExpr 0x7fb3b48df390 <col:78> '_Args &&...' lvalue ParmVar 0x7fb3b48de6f8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb3b48df068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48df0b0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48e0888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb3b48df470 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48df4d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48df548 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb3b48dfe08 <line:4246:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48e07f0 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb3b48dff18 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48dffb8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb3b48e0098 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb3b48e0c18 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48e0c00 <col:7, line:4250:73>
| |   |   |   `-CallExpr 0x7fb3b48e0bd0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb3b48e0a40 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb3b48e0a18 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fb3b48e09c8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fb3b48e0970 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fb3b48e0948 <col:24> '_A0' lvalue ParmVar 0x7fb3b48dffb8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb3b48e09f0 <col:36> '_Fp' lvalue ParmVar 0x7fb3b48dff18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb3b48e0bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48e0b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb3b48e0ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |         `-DeclRefExpr 0x7fb3b48e0b58 <col:63> '_Args &&...' lvalue ParmVar 0x7fb3b48e0098 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb3b48e08f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48e0938 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48e1df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb3b48e0c38 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48e0ca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48e0d18 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb3b48e1408 <line:4253:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48e1d60 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb3b48e1518 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48e15b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb3b48e1698 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb3b48e2188 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48e2170 <col:7, line:4257:73>
| |   |   |   `-CallExpr 0x7fb3b48e2140 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb3b48e1fb0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb3b48e1f88 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fb3b48e1f38 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fb3b48e1ee0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fb3b48e1eb8 <col:24> '_A0' lvalue ParmVar 0x7fb3b48e15b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb3b48e1f60 <col:36> '_Fp' lvalue ParmVar 0x7fb3b48e1518 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb3b48e2120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48e20f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb3b48e2028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |         `-DeclRefExpr 0x7fb3b48e20c8 <col:63> '_Args &&...' lvalue ParmVar 0x7fb3b48e1698 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb3b48e1e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48e1ea8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48e3a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb3b48e21a8 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48e2218 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48e2288 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb3b48e2db8 <line:4260:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48e3970 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb3b48e2ec8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48e2f68 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb3b48e3048 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb3b48e3e80 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48e3e68 <col:7, line:4264:91>
| |   |   |   `-CallExpr 0x7fb3b48e3e38 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb3b48e3ca8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb3b48e3c80 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fb3b48e3c38 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fb3b48e3c18 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fb3b48e3be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fb3b48e3b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     |   |     `-DeclRefExpr 0x7fb3b48e3bc0 <col:46> '_A0' lvalue ParmVar 0x7fb3b48e2f68 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb3b48e3c58 <col:54> '_Fp' lvalue ParmVar 0x7fb3b48e2ec8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb3b48e3e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48e3de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb3b48e3d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |         `-DeclRefExpr 0x7fb3b48e3dc0 <col:81> '_Args &&...' lvalue ParmVar 0x7fb3b48e3048 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb3b48e3a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48e3ab8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48e54c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb3b48e3ea0 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48e3f08 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48e3f78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fb3b48e4908 <line:4267:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48e5430 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb3b48e4a18 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48e4ab8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fb3b48e4b98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb3b48e5940 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48e5928 <col:7, line:4271:91>
| |   |   |   `-CallExpr 0x7fb3b48e58f8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fb3b48e5768 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fb3b48e5740 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fb3b48e56f8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fb3b48e56d8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fb3b48e56a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fb3b48e55e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     |   |     `-DeclRefExpr 0x7fb3b48e5680 <col:46> '_A0' lvalue ParmVar 0x7fb3b48e4ab8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fb3b48e5718 <col:54> '_Fp' lvalue ParmVar 0x7fb3b48e4a18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb3b48e58d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48e58a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb3b48e57e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |         `-DeclRefExpr 0x7fb3b48e5880 <col:81> '_Args &&...' lvalue ParmVar 0x7fb3b48e4b98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb3b48e5530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48e5578 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48e6b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb3b48e5960 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48e59c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48e63f8 <line:4276:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48e6aa0 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb3b48e64f8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48e6598 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb3b48e6da8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48e6d90 <col:7, line:4280:50>
| |   |   |   `-BinaryOperator 0x7fb3b48e6d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fb3b48e6d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fb3b48e6c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     | `-DeclRefExpr 0x7fb3b48e6ce8 <col:43> '_A0' lvalue ParmVar 0x7fb3b48e6598 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb3b48e6d40 <col:50> '_Fp' lvalue ParmVar 0x7fb3b48e64f8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b48e6b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48e6be0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48e7d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb3b48e6dc8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48e6e38 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48e7688 <line:4283:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48e7cb0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb3b48e7788 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48e7828 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb3b48e7fb8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48e7fa0 <col:7, line:4287:50>
| |   |   |   `-BinaryOperator 0x7fb3b48e7f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fb3b48e7f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fb3b48e7e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     | `-DeclRefExpr 0x7fb3b48e7ef8 <col:43> '_A0' lvalue ParmVar 0x7fb3b48e7828 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb3b48e7f50 <col:50> '_Fp' lvalue ParmVar 0x7fb3b48e7788 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b48e7da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48e7df0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48e8e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb3b48e7fd8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48e8048 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48e88a8 <line:4290:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48e8e00 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb3b48e89a8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48e8a48 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb3b48e9068 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48e9050 <col:7, line:4294:35>
| |   |   |   `-BinaryOperator 0x7fb3b48e9028 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fb3b48e8fd0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fb3b48e8f78 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fb3b48e8f50 <col:23> '_A0' lvalue ParmVar 0x7fb3b48e8a48 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb3b48e9000 <col:35> '_Fp' lvalue ParmVar 0x7fb3b48e89a8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b48e8ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48e8f40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48e9d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb3b48e9088 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48e90f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48e97e8 <line:4297:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48e9cc0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb3b48e98e8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48e9988 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb3b48e9f20 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48e9f08 <col:7, line:4301:35>
| |   |   |   `-BinaryOperator 0x7fb3b48e9ee0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fb3b48e9e90 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fb3b48e9e38 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fb3b48e9e10 <col:23> '_A0' lvalue ParmVar 0x7fb3b48e9988 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb3b48e9eb8 <col:35> '_Fp' lvalue ParmVar 0x7fb3b48e98e8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b48e9db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48e9e00 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48eb298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb3b48e9f40 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48e9fa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48eaad8 <line:4304:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48eb200 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb3b48eabd8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48eac78 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb3b48eb548 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48eb530 <col:7, line:4308:53>
| |   |   |   `-BinaryOperator 0x7fb3b48eb508 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fb3b48eb4c0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fb3b48eb4a0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fb3b48eb470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fb3b48eb3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     |     `-DeclRefExpr 0x7fb3b48eb448 <col:45> '_A0' lvalue ParmVar 0x7fb3b48eac78 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb3b48eb4e0 <col:53> '_Fp' lvalue ParmVar 0x7fb3b48eabd8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b48eb2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48eb340 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48ec6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb3b48eb568 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48eb5d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fb3b48ebf68 <line:4311:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fb3b48ec610 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fb3b48ec068 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48ec108 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fb3b48ec958 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48ec940 <col:7, line:4315:53>
| |   |   |   `-BinaryOperator 0x7fb3b48ec918 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fb3b48ec8d0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fb3b48ec8b0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fb3b48ec880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fb3b48ec7b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     |     `-DeclRefExpr 0x7fb3b48ec858 <col:45> '_A0' lvalue ParmVar 0x7fb3b48ec108 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fb3b48ec8f0 <col:53> '_Fp' lvalue ParmVar 0x7fb3b48ec068 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fb3b48ec708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48ec750 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48ee478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fb3b48ec978 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48ec9e8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fb3b48ee3e0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb3b48ecae8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48ecc28 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb3b48ee838 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48ee820 <col:7, line:4323:80>
| |   |   |   `-CallExpr 0x7fb3b48ee7f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fb3b48ee650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fb3b48ee588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     | `-DeclRefExpr 0x7fb3b48ee628 <col:43> '_Fp' lvalue ParmVar 0x7fb3b48ecae8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb3b48ee7d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48ee7a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb3b48ee6d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |         `-DeclRefExpr 0x7fb3b48ee778 <col:70> '_Args &&...' lvalue ParmVar 0x7fb3b48ecc28 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb3b48ee4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48ee520 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48ef268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fb3b48ee858 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48ee8c8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fb3b48ef1d0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fb3b48ee9c8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fb3b48eeaa8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fb3b48ef628 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fb3b48ef610 <col:7, line:4329:80>
| |   |   |   `-CallExpr 0x7fb3b48ef5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fb3b48ef440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fb3b48ef378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |     | `-DeclRefExpr 0x7fb3b48ef418 <col:43> '_Fp' lvalue ParmVar 0x7fb3b48ee9c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fb3b48ef5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48ef590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fb3b48ef4c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fb3b4892180 0x7fb3b48926a0
| |   |   |         `-DeclRefExpr 0x7fb3b48ef568 <col:70> '_Args &&...' lvalue ParmVar 0x7fb3b48eeaa8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fb3b48ef2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48ef310 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fb3b48ef858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7fb3b48ef648 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb3b48ef6b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48ef728 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48ef7c0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7fb3b48efc78 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7fb3b48f00b8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7fb3b48f0080 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7fb3b48f0000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fb3b48efd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fb3b48d9a48 0x7fb3b48dd6e8 0x7fb3b48e0888 0x7fb3b48e3a08 0x7fb3b48e6b38 0x7fb3b48e8e98 0x7fb3b48eb298 0x7fb3b48ee478
| |   |   |     |-CallExpr 0x7fb3b48efea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7fb3b48efe10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   |   |     `-PackExpansionExpr 0x7fb3b48effd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7fb3b48effa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7fb3b48eff10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   |   `-VarDecl 0x7fb3b48f0128 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fb3b48f0a40 <line:4343:9, line:4351:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7fb3b48f0e58 <line:4354:1, line:4355:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7fb3b48f0aa0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48f0b08 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7fb3b48f0df8 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fb3b48f0cc0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fb3b48f11c8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48f0eb8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48f0f20 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7fb3b48f0f78 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb3b48f0fe8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48f1058 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48f1130 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7fb3b48f15e0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7fb3b48f1688 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fb3b48f16e8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48f1bb8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb3b48f1720 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb3b48f1788 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48f17f8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fb3b48f3200 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7fb3b48f32a8 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7fb3b48f1d20 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7fb3b48f1bb8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7fb3b48f3560 <line:4367:5, line:4368:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7fb3b48f3300 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fb3b48f34c8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7fb3b48f3390 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7fb3b48f35c8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fb3b48f3aa8 <col:31, line:4371:76> '_Bool'
| |   |     `-CallExpr 0x7fb3b48f3a78 <line:4370:40, line:4371:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fb3b48f36c8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fb3b48f3560
| |   |       `-CallExpr 0x7fb3b48f3a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7fb3b48f3790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fb3b48d9a48 0x7fb3b48dd6e8 0x7fb3b48e0888 0x7fb3b48e3a08 0x7fb3b48e6b38 0x7fb3b48e8e98 0x7fb3b48eb298 0x7fb3b48ee478
| |   |         |-CallExpr 0x7fb3b48f38f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7fb3b48f3860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   |         `-PackExpansionExpr 0x7fb3b48f3a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
| |   |           `-CallExpr 0x7fb3b48f39f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7fb3b48f3960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48f3f88 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fb3b48f3af0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb3b48f3b58 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48f3bc8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fb3b48f4360 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7fb3b48f4408 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fb3b48f4780 <col:31, line:4378:75> '_Bool'
| |   |     `-CallExpr 0x7fb3b48f4748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fb3b48f4498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fb3b48d9a48 0x7fb3b48dd6e8 0x7fb3b48e0888 0x7fb3b48e3a08 0x7fb3b48e6b38 0x7fb3b48e8e98 0x7fb3b48eb298 0x7fb3b48ee478
| |   |       |-CallExpr 0x7fb3b48f4600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7fb3b48f4568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   |       `-PackExpansionExpr 0x7fb3b48f4728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
| |   |         `-CallExpr 0x7fb3b48f4700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7fb3b48f4668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   |-TypeAliasTemplateDecl 0x7fb3b48f4fd8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7fb3b48f47c8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fb3b48f4838 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48f48a8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7fb3b48f4f78 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fb3b48f4db0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fb3b48f4b10 <line:4384:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fb3b48f4c30 <line:4385:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fb3b48f5200 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7fb3b48f5028 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48f5098 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fb3b48f5128 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7fb3b48f5c68 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48f6028 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fb3b48f5d20 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fb3b48f5d88 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7fb3b48f6180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fb3b48f63f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7fb3b48f66f0 <line:4406:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7fb3b48f64b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b48f6690 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b48f6620 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b48f6858 <line:4440:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fb3b48f6740 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48f67c0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7fb3b48f6b88 <line:4441:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fb3b48f6a68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48f6af0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7fb3b48f7768 <line:4443:1, line:4460:1> line:4454:1 swap
| |   | |-TemplateTypeParmDecl 0x7fb3b48f6d98 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b48f76d0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fb3b48f72b8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7fb3b48f7328 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7fb3b48f7c48 <line:4456:1, line:4460:1>
| |   |   | |-DeclStmt 0x7fb3b48f79d0 <line:4457:5, col:30>
| |   |   | | `-VarDecl 0x7fb3b48f78b8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7fb3b48f79a0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7fb3b48f7940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7fb3b48f7850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fb3b4891a38
| |   |   | |       `-DeclRefExpr 0x7fb3b48f7918 <col:25> '_Tp' lvalue ParmVar 0x7fb3b48f72b8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7fb3b48f7af0 <line:4458:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7fb3b48f79e8 <col:5> '_Tp' lvalue ParmVar 0x7fb3b48f72b8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7fb3b48f7ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7fb3b48f7a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fb3b4891a38
| |   |   | |   `-DeclRefExpr 0x7fb3b48f7a98 <col:23> '_Tp' lvalue ParmVar 0x7fb3b48f7328 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7fb3b48f7c20 <line:4459:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7fb3b48f7b18 <col:5> '_Tp' lvalue ParmVar 0x7fb3b48f7328 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7fb3b48f7bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fb3b48f7b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fb3b4891a38
| |   |   |     `-DeclRefExpr 0x7fb3b48f7bc8 <col:23> '_Tp' lvalue Var 0x7fb3b48f78b8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fb3b48f77c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48f7810 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48f85d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
| |   | |-TemplateTypeParmDecl 0x7fb3b48f7c78 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48f7cf8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7fb3b48f8540 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fb3b48f8198 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7fb3b48f82e8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7fb3b48f8638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48f8680 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b48f8cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7fb3b48f8690 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7fb3b48f86f8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7fb3b48f8c60 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7fb3b48f87c8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7fb3b48f8838 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7fb3b48f8ed8 <line:4476:1, line:4478:1>
| |   |   | `-CallExpr 0x7fb3b48f8ea0 <line:4477:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7fb3b48f8db0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fb3b48f85d8 0x7fb3b48f7768
| |   |   |   |-UnaryOperator 0x7fb3b48f8e38 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7fb3b48f8e10 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fb3b48f87c8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7fb3b48f8e80 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7fb3b48f8e58 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fb3b48f8838 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7fb3b48f8d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b48f8da0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7fb3b48f8ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
| |   | |-ClassTemplateDecl 0x7fb3b48f93f8 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fb3b48f8f60 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fb3b48f8fd8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fb3b48f92e0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7fb3b48f92a8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7fb3b48f9158 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7fb3b48f9118 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7fb3b48f9288 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7fb3b48f9248 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fb3b48f9360 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fb3b48f9700 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7fb3b48f9db8 <line:4490:5, line:4492:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fb3b48f9798 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7fb3b48f9808 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7fb3b48f9d20 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7fb3b48f9b78 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7fb3b48fa078 <line:4493:5, line:4494:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fb3b48f9e10 <line:4493:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7fb3b48f9e78 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7fb3b48f9fe0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7fb3b48f9f20 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7fb3b48fa2c8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7fb3b48fa290 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fb3b48fa228 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fb3b48fa1f8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fb3b48fa108 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fb3b48fa078 0x7fb3b48f9db8
| |   | |   |       `-IntegerLiteral 0x7fb3b48fa1d8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7fb3b48fa518 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7fb3b48fa4e0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fb3b48fa478 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fb3b48fa448 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fb3b48fa358 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fb3b48fa078 0x7fb3b48f9db8
| |   | |   |       `-IntegerLiteral 0x7fb3b48fa428 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7fb3b48fa580 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fb3b48fa9b8 <col:31, line:4501:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7fb3b48fa7a8 <line:4500:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7fb3b48fa768 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7fb3b48fa998 <line:4501:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7fb3b48fa958 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7fb3b48facc8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7fb3b48faa00 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fb3b48faa68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7fb3b48faff0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7fb3b48fb740 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fb3b48fb0a8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fb3b48fb128 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fb3b48fb628 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7fb3b48fb5d8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fb3b48fb6a8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fb3b48fba40 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7fb3b48fbae8 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fb3b48fc0c8 <line:4511:7, line:4512:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7fb3b48fbde0 <line:4511:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7fb3b48fbda8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7fb3b48fbb48 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fb3b48f85d8 0x7fb3b48f7768
| |   | |       |   |-CallExpr 0x7fb3b48fbc80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7fb3b48fbbe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   | |       |   `-CallExpr 0x7fb3b48fbd80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7fb3b48fbce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   | |       `-CXXNoexceptExpr 0x7fb3b48fc0a0 <line:4512:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7fb3b48fc068 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7fb3b48fbe08 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fb3b48f85d8 0x7fb3b48f7768
| |   | |           |-CallExpr 0x7fb3b48fbf40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7fb3b48fbea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   | |           `-CallExpr 0x7fb3b48fc040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7fb3b48fbfa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fb3b4815050
| |   | `-ClassTemplatePartialSpecializationDecl 0x7fb3b48fc3d8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7fb3b48fc110 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7fb3b48fc178 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7fb3b48fc700 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7fb3b48fc8d8 prev 0x7fb3b48f6858 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fb3b48fc7b8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48fc840 prev 0x7fb3b48f67c0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fb3b48fd048 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7fb3b48fd298 prev 0x7fb3b48f6b88 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fb3b48fd100 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48fd200 prev 0x7fb3b48f6af0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fb3b48fdac8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7fb3b48fdc98 <line:4589:1, line:4593:1> line:4590:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7fb3b48fdb80 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48fdc00 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7fb3b48fdf10 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7fb3b48fe050 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7fb3b48fe000 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7fb3b48fdbc0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7fb3b48fdb80 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fb3b48fe310 <line:4596:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7fb3b48fe0c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fb3b48fe2b0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7fb3b48fe240 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fb3b48fe5f8 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7fb3b48fe360 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b48fe4e8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b48fe498 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fb3b48fe560 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7fb3b48fe8c0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7fb3b48fea80 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7fb3b48fea10 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7fb3b48fec38 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7fb3b48fec00 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7fb3b48feb98 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7fb3b48feb58 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7fb3b48feb30 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7fb3b48feb00 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7fb3b48feb78 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48fee90 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b48fecb0 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b48ff120 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7fb3b49002e8 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7fb3b4900220 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7fb3b4900438 <col:38, col:54>
| |   | | `-ReturnStmt 0x7fb3b4900420 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7fb3b4900408 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb3b49003e0 <col:47> 'int' lvalue ParmVar 0x7fb3b4900220 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7fb3b4900388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb3b49003d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb3b4900568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7fb3b49004a0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7fb3b49006b8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7fb3b49006a0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7fb3b4900688 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb3b4900660 <col:57> 'unsigned int' lvalue ParmVar 0x7fb3b49004a0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7fb3b4900608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb3b4900650 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb3b49007e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7fb3b4900720 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7fb3b4900938 <col:40, col:56>
| |   | | `-ReturnStmt 0x7fb3b4900920 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7fb3b4900908 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb3b49008e0 <col:49> 'long' lvalue ParmVar 0x7fb3b4900720 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7fb3b4900888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb3b49008d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb3b4900a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7fb3b49009a0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7fb3b4900bb8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7fb3b4900ba0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7fb3b4900b88 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb3b4900b60 <col:67> 'unsigned long' lvalue ParmVar 0x7fb3b49009a0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7fb3b4900b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb3b4900b50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb3b4900ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7fb3b4900c20 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7fb3b4900e38 <col:50, col:66>
| |   | | `-ReturnStmt 0x7fb3b4900e20 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7fb3b4900e08 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb3b4900de0 <col:59> 'long long' lvalue ParmVar 0x7fb3b4900c20 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7fb3b4900d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb3b4900dd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb3b4900f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7fb3b4900ea0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7fb3b49010b8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7fb3b49010a0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7fb3b4901088 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb3b4901060 <col:76> 'unsigned long long' lvalue ParmVar 0x7fb3b4900ea0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7fb3b4901008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb3b4901050 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb3b4901220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7fb3b4901118 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7fb3b4901370 <col:52, col:68>
| |   | | `-ReturnStmt 0x7fb3b4901358 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7fb3b4901340 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb3b4901318 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fb3b4901118 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7fb3b49012c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb3b4901308 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fb3b49014d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7fb3b49013d0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7fb3b4901620 <col:54, col:70>
| |   | | `-ReturnStmt 0x7fb3b4901608 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7fb3b49015f0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fb3b49015c8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fb3b49013d0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7fb3b4901570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fb3b49015b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fb3b4901b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7fb3b4901640 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fb3b4901ad0 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7fb3b49019c0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7fb3b4901c58 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7fb3b4901c40 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7fb3b4901c18 <col:43> '_Tp' lvalue ParmVar 0x7fb3b49019c0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fb3b4901bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fb3b4901c08 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fb3b4901d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7fb3b4901c78 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4901d00 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7fb3b4902010 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7fb3b4902718 <line:4658:5, line:4660:95> line:4659:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb3b49020a8 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fb3b4902680 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fb3b4902148 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fb3b49029b8 <line:4661:5, line:4662:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb3b4902770 <line:4661:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fb3b4902920 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fb3b4902808 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fb3b4902a20 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fb3b4902c58 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fb3b4902dd8 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7fb3b4902cb8 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4902d40 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7fb3b4903050 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7fb3b4903758 <line:4670:5, line:4672:94> line:4671:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb3b49030e8 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fb3b49036c0 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fb3b4903188 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fb3b4903978 <line:4673:5, line:4674:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fb3b49037b0 <line:4673:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fb3b49038e0 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fb3b4903848 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fb3b49039e0 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fb3b4903bd8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fb3b4903d58 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7fb3b4903c38 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b4903cc0 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7fb3b49047f8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7fb3b49048b0 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7fb3b49049d8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7fb3b4904a90 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7fb3b4904bb8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7fb3b4904c70 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7fb3b4904d98 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7fb3b49051b8 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7fb3b4904e50 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fb3b4904eb8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fb3b4905090 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fb3b4905120 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7fb3b49058f0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4905ec8 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7fb3b49059a8 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7fb3b4905a18 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fb3b4905a88 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7fb3b4905af8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7fb3b4917860 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7fb3b4917cc0 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7fb3b4917918 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fb3b4917988 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fb3b49179f8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7fb3b4917b90 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fb3b4917c28 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7fb3b4918308 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4918760 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7fb3b49183c0 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fb3b4918428 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fb3b4918498 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7fb3b4918ae0 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7fb3b4964a78 parent 0x7fb3b505df80 prev 0x7fb3b505f150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-NamespaceDecl 0x7fb3b4918b98 prev 0x7fb3b5054ac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fb3b3865c58 'std'
| | `-NamespaceDecl 0x7fb3b4918c00 prev 0x7fb3b5054b30 <col:52, line:439:36> <scratch space>:432:1 __1 inline
| |   |-original Namespace 0x7fb3b3865cc0 '__1'
| |   |-EnumDecl 0x7fb3b4918c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:125:1, line:132:1> line:125:6 referenced float_round_style
| |   | |-EnumConstantDecl 0x7fb3b4918d60 <line:127:5, col:34> col:5 round_indeterminate 'enum std::__1::float_round_style'
| |   | | `-UnaryOperator 0x7fb3b4918d40 <col:33, col:34> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fb3b4918d20 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fb3b4918dc8 <line:128:5, col:34> col:5 referenced round_toward_zero 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fb3b4918da8 <col:34> 'int' 0
| |   | |-EnumConstantDecl 0x7fb3b4918e30 <line:129:5, col:34> col:5 referenced round_to_nearest 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fb3b4918e10 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fb3b4918e98 <line:130:5, col:34> col:5 round_toward_infinity 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fb3b4918e78 <col:34> 'int' 2
| |   | `-EnumConstantDecl 0x7fb3b4918f00 <line:131:5, col:34> col:5 round_toward_neg_infinity 'enum std::__1::float_round_style'
| |   |   `-IntegerLiteral 0x7fb3b4918ee0 <col:34> 'int' 3
| |   |-EnumDecl 0x7fb3b4918f48 <line:134:1, line:139:1> line:134:6 referenced float_denorm_style
| |   | |-EnumConstantDecl 0x7fb3b4919040 <line:136:5, col:29> col:5 denorm_indeterminate 'enum std::__1::float_denorm_style'
| |   | | `-UnaryOperator 0x7fb3b4919020 <col:28, col:29> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fb3b4919000 <col:29> 'int' 1
| |   | |-EnumConstantDecl 0x7fb3b49190a8 <line:137:5, col:21> col:5 referenced denorm_absent 'enum std::__1::float_denorm_style'
| |   | | `-IntegerLiteral 0x7fb3b4919088 <col:21> 'int' 0
| |   | `-EnumConstantDecl 0x7fb3b4919110 <line:138:5, col:22> col:5 referenced denorm_present 'enum std::__1::float_denorm_style'
| |   |   `-IntegerLiteral 0x7fb3b49190f0 <col:22> 'int' 1
| |   |-ClassTemplateDecl 0x7fb3b49193f8 <line:141:1, line:184:1> line:142:7 __libcpp_numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fb3b4919158 <line:141:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b49192e8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b4919298 <col:29, col:49> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fb3b4919360 <line:142:1, line:184:1> line:142:7 class __libcpp_numeric_limits definition
| |   | | |-CXXRecordDecl 0x7fb3b4869af0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | | |-AccessSpecDecl 0x7fb3b4869b88 <line:144:1, col:10> col:1 protected
| |   | | |-TypedefDecl 0x7fb3b4869bc0 <line:145:5, col:17> col:17 referenced type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fb3b49191a0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fb3b4919158 '_Tp'
| |   | | |-VarDecl 0x7fb3b4869c28 <line:147:5, col:59> col:42 is_specialized 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b4869c88 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fb3b4869da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:148:92> col:61 constexpr min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b598 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fb3b486b580 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b558 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b4869e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b4869e88 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb3b4869ef0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:149:92> col:61 constexpr max 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b608 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fb3b486b5f0 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b5c8 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b4869f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b4869fd0 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb3b486a038 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:150:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b678 <col:80, col:95>
| |   | | | | `-ReturnStmt 0x7fb3b486b660 <col:81, col:93>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b638 <col:88, col:93> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b486a0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b486a118 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fb3b486a140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:152:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb3b486a1a0 <col:50> 'int' 0
| |   | | |-VarDecl 0x7fb3b486a1d8 <line:153:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb3b486a238 <col:52> 'int' 0
| |   | | |-VarDecl 0x7fb3b486a270 <line:154:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb3b486a2d0 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fb3b486a300 <line:155:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486a360 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486a388 <line:156:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486a3e8 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486a410 <line:157:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486a470 <col:52> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486a4a0 <line:158:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb3b486a500 <col:49> 'int' 0
| |   | | |-CXXMethodDecl 0x7fb3b486a578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:159:96> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b6e8 <col:81, col:96>
| |   | | | | `-ReturnStmt 0x7fb3b486b6d0 <col:82, col:94>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b6a8 <col:89, col:94> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b486a610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b486a658 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb3b486a6c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:160:100> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b758 <col:85, col:100>
| |   | | | | `-ReturnStmt 0x7fb3b486b740 <col:86, col:98>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b718 <col:93, col:98> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b486a758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b486a7a0 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fb3b486a7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:162:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb3b486a828 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fb3b486a860 <line:163:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb3b486a8c0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fb3b486a8f8 <line:164:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb3b486a958 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fb3b486a990 <line:165:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fb3b486a9f0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fb3b486aa20 <line:167:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486aa80 <col:56> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486aaa8 <line:168:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486ab08 <col:57> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486ab30 <line:169:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486ab90 <col:61> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486abb8 <line:170:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fb3b486ac18 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb3b49190a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | | |-VarDecl 0x7fb3b486ac50 <line:171:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486acb0 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fb3b486ad20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:172:97> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b7c8 <col:82, col:97>
| |   | | | | `-ReturnStmt 0x7fb3b486b7b0 <col:83, col:95>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b788 <col:90, col:95> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b486adb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b486ae00 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb3b486ae68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:173:98> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b838 <col:83, col:98>
| |   | | | | `-ReturnStmt 0x7fb3b486b820 <col:84, col:96>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b7f8 <col:91, col:96> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b486af00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b486af48 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb3b486afb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:174:102> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b8a8 <col:87, col:102>
| |   | | | | `-ReturnStmt 0x7fb3b486b890 <col:88, col:100>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b868 <col:95, col:100> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b486b048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b486b090 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fb3b486b0f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:175:99> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fb3b486b918 <col:84, col:99>
| |   | | | | `-ReturnStmt 0x7fb3b486b900 <col:85, col:97>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486b8d8 <col:92, col:97> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fb3b486b190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fb3b486b1d8 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fb3b486b1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:177:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486b258 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486b280 <line:178:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486b2e0 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486b308 <line:179:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486b368 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486b390 <line:181:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486b3f0 <col:49> '_Bool' false
| |   | | |-VarDecl 0x7fb3b486b418 <line:182:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fb3b486b478 <col:59> '_Bool' false
| |   | | `-VarDecl 0x7fb3b486b4a0 <line:183:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   | |   `-DeclRefExpr 0x7fb3b486b500 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb3b4918dc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   | |-ClassTemplateSpecialization 0x7fb3b486fde0 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fb3b4935a80 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fb3b4938b60 '__libcpp_numeric_limits'
| |   | `-ClassTemplateSpecialization 0x7fb3b493bc90 '__libcpp_numeric_limits'
| |   |-ClassTemplateDecl 0x7fb3b486c380 <line:186:1, line:190:1> line:187:8 __libcpp_compute_min
| |   | |-TemplateTypeParmDecl 0x7fb3b486b938 <line:186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b486c200 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-NonTypeTemplateParmDecl 0x7fb3b486c268 <col:36, col:41> col:41 '_Bool' depth 0 index 2 _IsSigned
| |   | `-CXXRecordDecl 0x7fb3b486c2e8 <line:187:1, line:190:1> line:187:8 struct __libcpp_compute_min definition
| |   |   |-CXXRecordDecl 0x7fb3b486c6b0 <col:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   |   `-VarDecl 0x7fb3b486c758 <line:189:5, col:70> col:40 value 'const _Tp' static constexpr cinit
| |   |     `-CXXUnresolvedConstructExpr 0x7fb3b486c878 <col:48, col:70> '_Tp'
| |   |       `-BinaryOperator 0x7fb3b486c850 <col:52, col:62> '<dependent type>' '<<'
| |   |         |-CXXUnresolvedConstructExpr 0x7fb3b486c7f8 <col:52, col:57> '_Tp'
| |   |         | `-IntegerLiteral 0x7fb3b486c7d8 <col:56> 'int' 1
| |   |         `-DeclRefExpr 0x7fb3b486c828 <col:62> 'int' NonTypeTemplateParm 0x7fb3b486c200 '__digits' 'int'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b486cbb8 <line:192:1, line:196:1> line:193:8 struct __libcpp_compute_min definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fb3b486c9d8 <col:34> 'int' NonTypeTemplateParm 0x7fb3b486c950 '__digits' 'int'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fb3b486c8c8 <line:192:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fb3b486c950 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-CXXRecordDecl 0x7fb3b486ce90 <line:193:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   | `-VarDecl 0x7fb3b486cf38 <line:195:5, col:53> col:40 value 'const _Tp' static constexpr cinit
| |   |   `-CXXUnresolvedConstructExpr 0x7fb3b486cfc8 <col:48, col:53> '_Tp'
| |   |     `-IntegerLiteral 0x7fb3b486cfa8 <col:52> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b486d200 <line:198:1, line:249:1> line:199:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fb3b486d018 <line:198:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fb3b486d490 <line:199:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb3b486d528 <line:201:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb3b486d560 <line:202:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fb3b486d060 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b486d018 '_Tp'
| |   | |-VarDecl 0x7fb3b486d5c8 <line:204:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486d628 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb3b486d650 <line:206:5, col:70> col:41 referenced is_signed 'const _Bool' static constexpr cinit
| |   | | `-BinaryOperator 0x7fb3b486d7b0 <col:53, col:70> '<dependent type>' '<'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fb3b486d720 <col:53, col:60> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-UnaryOperator 0x7fb3b486d700 <col:58, col:59> 'int' prefix '-'
| |   | |   |   `-IntegerLiteral 0x7fb3b486d6e0 <col:59> 'int' 1
| |   | |   `-CXXUnresolvedConstructExpr 0x7fb3b486d780 <col:64, col:70> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-IntegerLiteral 0x7fb3b486d760 <col:69> 'int' 0
| |   | |-VarDecl 0x7fb3b486d7f0 <line:207:5, col:106> col:41 referenced digits 'const int' static constexpr cinit
| |   | | `-CXXStaticCastExpr 0x7fb3b486d990 <col:50, col:106> 'int' static_cast<int> <NoOp>
| |   | |   `-ImplicitCastExpr 0x7fb3b486d978 <col:67, col:97> 'int' <IntegralCast>
| |   | |     `-BinaryOperator 0x7fb3b486d938 <col:67, col:97> 'unsigned long' '-'
| |   | |       |-BinaryOperator 0x7fb3b486d8b8 <col:67, <built-in>:66:22> 'unsigned long' '*'
| |   | |       | |-UnaryExprOrTypeTraitExpr 0x7fb3b486d860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:67, col:78> 'unsigned long' sizeof 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |       | `-ImplicitCastExpr 0x7fb3b486d8a0 <<built-in>:66:22> 'unsigned long' <IntegralCast>
| |   | |       |   `-IntegerLiteral 0x7fb3b486d880 <col:22> 'int' 8
| |   | |       `-ImplicitCastExpr 0x7fb3b486d920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:97> 'unsigned long' <IntegralCast>
| |   | |         `-ImplicitCastExpr 0x7fb3b486d908 <col:97> '_Bool' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x7fb3b486d8e0 <col:97> 'const _Bool' lvalue Var 0x7fb3b486d650 'is_signed' 'const _Bool'
| |   | |-VarDecl 0x7fb3b486d9d8 <line:208:5, col:65> col:41 digits10 'const int' static constexpr cinit
| |   | | `-BinaryOperator 0x7fb3b486dae0 <col:52, col:65> 'int' '/'
| |   | |   |-BinaryOperator 0x7fb3b486da98 <col:52, col:61> 'int' '*'
| |   | |   | |-ImplicitCastExpr 0x7fb3b486da80 <col:52> 'int' <LValueToRValue>
| |   | |   | | `-DeclRefExpr 0x7fb3b486da38 <col:52> 'const int' lvalue Var 0x7fb3b486d7f0 'digits' 'const int'
| |   | |   | `-IntegerLiteral 0x7fb3b486da60 <col:61> 'int' 3
| |   | |   `-IntegerLiteral 0x7fb3b486dac0 <col:65> 'int' 10
| |   | |-VarDecl 0x7fb3b486db20 <line:209:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b486db80 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb3b486dbb0 <line:210:5, col:96> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b486de38 <col:49, col:96> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b486de88 <line:211:5, col:93> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-ConditionalOperator 0x7fb3b486e0b8 <col:49, col:93> '<dependent type>'
| |   | |   |-ImplicitCastExpr 0x7fb3b486e0a0 <col:49> '_Bool' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0x7fb3b486dee8 <col:49> 'const _Bool' lvalue Var 0x7fb3b486d650 'is_signed' 'const _Bool'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fb3b486dff0 <col:61, col:82> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-BinaryOperator 0x7fb3b486dfc8 <col:66, col:77> '<dependent type>' '^'
| |   | |   |   |-CXXUnresolvedConstructExpr 0x7fb3b486df70 <col:66, col:73> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   |   | `-UnaryOperator 0x7fb3b486df50 <col:71, col:72> 'int' prefix '~'
| |   | |   |   |   `-IntegerLiteral 0x7fb3b486df30 <col:72> 'int' 0
| |   | |   |   `-DeclRefExpr 0x7fb3b486dfa0 <col:77> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fb3b486dbb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | |   `-CXXUnresolvedConstructExpr 0x7fb3b486e070 <col:86, col:93> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-UnaryOperator 0x7fb3b486e050 <col:91, col:92> 'int' prefix '~'
| |   | |       `-IntegerLiteral 0x7fb3b486e030 <col:92> 'int' 0
| |   | |-CXXMethodDecl 0x7fb3b486e200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:212:91> col:61 referenced constexpr min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486f910 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fb3b486f8f8 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fb3b486f8d0 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fb3b486dbb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fb3b486e298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486e2e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b486e348 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:213:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486f970 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fb3b486f958 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fb3b486f930 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fb3b486de88 '__max' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fb3b486e3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486e428 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b486e490 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:214:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486f9f8 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fb3b486f9e0 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fb3b486f9b8 <col:88, col:92> '<dependent type>'
| |   | | |     `-DeclRefExpr 0x7fb3b486f990 <col:88> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' lvalue CXXMethod 0x7fb3b486e200 'min' 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb3b486e528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486e570 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b486e590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:216:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486e5f0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb3b486e618 <line:217:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486e678 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fb3b486e6a8 <line:218:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b486e708 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fb3b486e780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:219:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486fa90 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fb3b486fa78 <col:82, col:95>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486fa48 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb3b486fa28 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b486e818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486e860 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b486e8c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:220:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486fb28 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fb3b486fb10 <col:86, col:99>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486fae0 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb3b486fac0 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b486e960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486e9a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b486e9d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:222:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b486ea30 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb3b486ea68 <line:223:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b486eac8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fb3b486eb00 <line:224:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b486eb60 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb3b486eb98 <line:225:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b486ebf8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fb3b486ec28 <line:227:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486ec88 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fb3b486ecb0 <line:228:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486ed10 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fb3b486ed38 <line:229:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486ed98 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fb3b486edc0 <line:230:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb3b486ee20 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb3b49190a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb3b486ee58 <line:231:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486eeb8 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb3b486ef28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:232:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486fbc0 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fb3b486fba8 <col:83, col:96>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486fb78 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb3b486fb58 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b486efc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486f008 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b486f070 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:233:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486fc58 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fb3b486fc40 <col:84, col:97>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486fc10 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb3b486fbf0 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b486f108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486f150 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b486f1b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:234:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486fcf0 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fb3b486fcd8 <col:88, col:101>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486fca8 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb3b486fc88 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b486f250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486f298 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b486f300 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:235:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b486fd88 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fb3b486fd70 <col:85, col:98>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fb3b486fd40 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fb3b486fd20 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b486f398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b486f3e0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b486f400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:237:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486f460 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb3b486f488 <line:238:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486f4e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb3b486f510 <line:239:5, col:77> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-UnaryOperator 0x7fb3b486f6e8 <col:53, col:77> '<dependent type>' prefix '!'
| |   | |   `-DependentScopeDeclRefExpr 0x7fb3b486f6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:239:77> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b486f718 <line:243:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486f778 <col:49> '_Bool' true
| |   | |-VarDecl 0x7fb3b486f7a0 <line:247:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b486f800 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb3b486f828 <line:248:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb3b486f888 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb3b4918dc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b486fde0 <line:251:1, line:297:1> line:252:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4870050 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb3b48700e8 <line:254:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb3b4870120 <line:255:5, col:18> col:18 referenced type '_Bool'
| |   | | `-BuiltinType 0x7fb3b3832740 '_Bool'
| |   | |-VarDecl 0x7fb3b4870188 <line:257:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b48701e8 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb3b4933268 <line:259:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49332c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb3b4933350 <line:260:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b49333b0 <col:50> 'int' 1
| |   | |-VarDecl 0x7fb3b4933440 <line:261:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b49334a0 <col:52> 'int' 0
| |   | |-VarDecl 0x7fb3b4933530 <line:262:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4933590 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb3b4933640 <line:263:5, col:49> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49336a0 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb3b4933720 <line:264:5, col:49> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4933780 <col:49> '_Bool' true
| |   | |-CXXMethodDecl 0x7fb3b49338d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:265:91> col:61 used constexpr min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b49354b8 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fb3b49354a0 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fb3b4935488 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fb3b4935460 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fb3b4933640 '__min' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fb3b4933970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b49339b8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4933a20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:266:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4935530 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fb3b4935518 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fb3b4935500 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fb3b49354d8 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fb3b4933720 '__max' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fb3b4933ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4933b00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4933b68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:267:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4935630 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fb3b4935618 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fb3b49355f0 <col:88, col:92> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool'
| |   | | |     `-ImplicitCastExpr 0x7fb3b49355d8 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |       `-DeclRefExpr 0x7fb3b4935550 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' lvalue CXXMethod 0x7fb3b49338d8 'min' 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb3b4933c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4933c48 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4933c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:269:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4933cc8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb3b4933d48 <line:270:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4933da8 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fb3b4933e30 <line:271:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4933e90 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fb3b4933f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:272:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b49356d8 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fb3b49356c0 <col:82, col:95>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb3b4935698 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb3b4935680 <col:94> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb3b4935660 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b4933ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4934040 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b49340a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:273:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4935780 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fb3b4935768 <col:86, col:99>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb3b4935740 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb3b4935728 <col:98> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb3b4935708 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b4934140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4934188 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b49341b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:275:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4934210 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb3b49342a0 <line:276:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4934300 <col:58> 'int' 0
| |   | |-VarDecl 0x7fb3b4934390 <line:277:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b49343f0 <col:56> 'int' 0
| |   | |-VarDecl 0x7fb3b4934480 <line:278:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b49344e0 <col:58> 'int' 0
| |   | |-VarDecl 0x7fb3b4934568 <line:280:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49345c8 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fb3b4934648 <line:281:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49346a8 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fb3b4934728 <line:282:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4934788 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fb3b4934808 <line:283:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb3b4934868 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb3b49190a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb3b49348f8 <line:284:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4934958 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb3b4934a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:285:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4935828 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fb3b4935810 <col:83, col:96>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb3b49357e8 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb3b49357d0 <col:95> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb3b49357b0 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b4934ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4934b00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4934b68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:286:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b49358d0 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fb3b49358b8 <col:84, col:97>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb3b4935890 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb3b4935878 <col:96> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb3b4935858 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b4934c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4934c48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4934cb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:287:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4935978 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fb3b4935960 <col:88, col:101>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb3b4935938 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb3b4935920 <col:100> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb3b4935900 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b4934d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4934d90 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4934df8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:288:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4935a20 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fb3b4935a08 <col:85, col:98>
| |   | | |   `-CXXFunctionalCastExpr 0x7fb3b49359e0 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fb3b49359c8 <col:97> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fb3b49359a8 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fb3b4934e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4934ed8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4934ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:290:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4934f58 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb3b4934fd8 <line:291:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4935038 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb3b49350b8 <line:292:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4935118 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb3b4935198 <line:294:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4935200 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb3b4935280 <line:295:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49352e0 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb3b4935360 <line:296:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb3b49353c0 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb3b4918dc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4935a80 <line:299:1, line:343:1> line:300:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'float'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4935cf0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb3b4935d88 <line:302:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb3b4935dc8 <line:303:5, col:19> col:19 referenced type 'float'
| |   | | `-BuiltinType 0x7fb3b38328c0 'float'
| |   | |-VarDecl 0x7fb3b4935e30 <line:305:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4935e90 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb3b4935f10 <line:307:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4935f70 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb3b4935ff8 <line:308:5, <built-in>:139:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:308:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4936058 <<built-in>:139:26> 'int' 24
| |   | |-VarDecl 0x7fb3b49360e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:5, <built-in>:134:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4936148 <<built-in>:134:21> 'int' 6
| |   | |-VarDecl 0x7fb3b49361d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:310:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fb3b49363a0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fb3b4936378 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fb3b4936360 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fb3b4936238 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fb3b4936338 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fb3b49362f8 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fb3b49362d0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fb3b49362b8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fb3b49362a0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fb3b4936258 <col:59> 'const int' lvalue Var 0x7fb3b4935ff8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fb3b4936280 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fb3b4936318 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fb3b49364e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:311:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4938128 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fb3b4938110 <col:78, <built-in>:145:21>
| |   | | |   `-FloatingLiteral 0x7fb3b49380f0 <col:21> 'float' 1.175494e-38
| |   | | |-AlwaysInlineAttr 0x7fb3b4936580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b49365c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4936630 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:312:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4938180 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fb3b4938168 <col:78, <built-in>:142:21>
| |   | | |   `-FloatingLiteral 0x7fb3b4938148 <col:21> 'float' 3.402823e+38
| |   | | |-AlwaysInlineAttr 0x7fb3b49366c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4936710 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4936778 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:313:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4938270 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fb3b4938258 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fb3b4938238 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float' prefix '-'
| |   | | |     `-CallExpr 0x7fb3b4938210 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float'
| |   | | |       `-ImplicitCastExpr 0x7fb3b49381f8 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fb3b49381a0 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' lvalue CXXMethod 0x7fb3b4936630 'max' 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb3b4936810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4936858 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4936878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:315:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49368d8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fb3b4936958 <line:316:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49369b8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fb3b4936a40 <line:317:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:317:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4936aa0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fb3b4936b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:318:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b49382c8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fb3b49382b0 <col:82, <built-in>:136:25>
| |   | | |   `-FloatingLiteral 0x7fb3b4938290 <col:25> 'float' 1.192093e-07
| |   | | |-AlwaysInlineAttr 0x7fb3b4936c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4936c50 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4936cb8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:319:98> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4938320 <col:85, col:98>
| |   | | | `-ReturnStmt 0x7fb3b4938308 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fb3b49382e8 <col:93> 'float' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fb3b4936d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4936d98 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4936dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:5, <built-in>:144:30> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb3b4936e60 <<built-in>:144:25, col:30> 'int'
| |   | |   `-UnaryOperator 0x7fb3b4936e40 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb3b4936e20 <col:27> 'int' 125
| |   | |-VarDecl 0x7fb3b4936ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:5, <built-in>:143:32> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb3b4936f90 <<built-in>:143:28, col:32> 'int'
| |   | |   `-UnaryOperator 0x7fb3b4936f70 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb3b4936f50 <col:30> 'int' 37
| |   | |-VarDecl 0x7fb3b4937020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:5, <built-in>:141:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4937080 <<built-in>:141:25> 'int' 128
| |   | |-VarDecl 0x7fb3b4937110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:5, <built-in>:140:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4937170 <<built-in>:140:28> 'int' 38
| |   | |-VarDecl 0x7fb3b4937200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:326:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4937260 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fb3b49372e0 <line:327:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4937340 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fb3b49373c0 <line:328:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4937420 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fb3b49374a0 <line:329:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb3b4937500 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb3b4919110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb3b4937590 <line:330:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49375f0 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb3b49376b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4938500 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fb3b49384e8 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fb3b49384c0 <col:90, col:110> 'float'
| |   | | |     `-ImplicitCastExpr 0x7fb3b49384a8 <col:90> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fb3b4938480 <col:90> '<builtin fn type>' Function 0x7fb3b4938390 '__builtin_huge_valf' 'float (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb3b4937750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4937798 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4937800 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:332:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4938800 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fb3b49387e8 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fb3b49387a0 <col:91, col:108> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fb3b4938788 <col:91> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb3b49386c8 <col:91> '<builtin fn type>' Function 0x7fb3b4938570 '__builtin_nanf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb3b49387d0 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb3b49386f0 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb3b4937898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b49378e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4937948 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:333:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4938aa8 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fb3b4938a90 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fb3b4938a48 <col:95, col:113> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fb3b4938a30 <col:95> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb3b49389c8 <col:95> '<builtin fn type>' Function 0x7fb3b4938870 '__builtin_nansf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb3b4938a78 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb3b49389f0 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb3b49379e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4937a28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4937a90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:334:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4938b00 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fb3b4938ae8 <col:85, <built-in>:132:28>
| |   | | |   `-FloatingLiteral 0x7fb3b4938ac8 <col:28> 'float' 1.401298e-45
| |   | | |-AlwaysInlineAttr 0x7fb3b4937b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4937b70 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4937b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:336:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4937bf0 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb3b4937c70 <line:337:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4937cd0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb3b4937d50 <line:338:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4937db0 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb3b4937e30 <line:340:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4937e90 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb3b4937f10 <line:341:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4937f70 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb3b4937ff0 <line:342:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb3b4938050 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb3b4918e30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b4938b60 <line:345:1, line:389:1> line:346:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b4938dd0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb3b4938e68 <line:348:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb3b4938ea8 <line:349:5, col:20> col:20 referenced type 'double'
| |   | | `-BuiltinType 0x7fb3b38328e0 'double'
| |   | |-VarDecl 0x7fb3b4938f10 <line:351:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4938f70 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb3b4938ff0 <line:353:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4939050 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb3b49390d8 <line:354:5, <built-in>:153:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:354:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4939138 <<built-in>:153:26> 'int' 53
| |   | |-VarDecl 0x7fb3b4939200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:5, <built-in>:148:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4939260 <<built-in>:148:21> 'int' 15
| |   | |-VarDecl 0x7fb3b49392f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:356:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fb3b49394b8 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fb3b4939490 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fb3b4939478 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fb3b4939350 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fb3b4939450 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fb3b4939410 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fb3b49393e8 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fb3b49393d0 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fb3b49393b8 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fb3b4939370 <col:59> 'const int' lvalue Var 0x7fb3b49390d8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fb3b4939398 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fb3b4939430 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fb3b4939608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:357:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493b258 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fb3b493b240 <col:78, <built-in>:159:21>
| |   | | |   `-FloatingLiteral 0x7fb3b493b220 <col:21> 'double' 2.225074e-308
| |   | | |-AlwaysInlineAttr 0x7fb3b49396a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b49396e8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4939750 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:358:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493b2b0 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fb3b493b298 <col:78, <built-in>:156:21>
| |   | | |   `-FloatingLiteral 0x7fb3b493b278 <col:21> 'double' 1.797693e+308
| |   | | |-AlwaysInlineAttr 0x7fb3b49397e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4939830 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4939898 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:359:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493b3a0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fb3b493b388 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fb3b493b368 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double' prefix '-'
| |   | | |     `-CallExpr 0x7fb3b493b340 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double'
| |   | | |       `-ImplicitCastExpr 0x7fb3b493b328 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fb3b493b2d0 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' lvalue CXXMethod 0x7fb3b4939750 'max' 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb3b4939930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4939978 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4939998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:361:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b49399f8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fb3b4939a78 <line:362:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b4939ad8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fb3b4939b60 <line:363:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:363:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b4939bc0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fb3b4939c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:364:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493b3f8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fb3b493b3e0 <col:82, <built-in>:150:25>
| |   | | |   `-FloatingLiteral 0x7fb3b493b3c0 <col:25> 'double' 2.220446e-16
| |   | | |-AlwaysInlineAttr 0x7fb3b4939d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4939d70 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4939dd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:365:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493b450 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fb3b493b438 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fb3b493b418 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fb3b4939e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4939eb8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4939ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:5, <built-in>:158:31> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb3b4939f80 <<built-in>:158:25, col:31> 'int'
| |   | |   `-UnaryOperator 0x7fb3b4939f60 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb3b4939f40 <col:27> 'int' 1021
| |   | |-VarDecl 0x7fb3b493a010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:5, <built-in>:157:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb3b493a0b0 <<built-in>:157:28, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fb3b493a090 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb3b493a070 <col:30> 'int' 307
| |   | |-VarDecl 0x7fb3b493a140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:5, <built-in>:155:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b493a1a0 <<built-in>:155:25> 'int' 1024
| |   | |-VarDecl 0x7fb3b493a230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:5, <built-in>:154:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b493a290 <<built-in>:154:28> 'int' 308
| |   | |-VarDecl 0x7fb3b493a318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:372:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493a378 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fb3b493a3f8 <line:373:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493a458 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fb3b493a4d8 <line:374:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493a538 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fb3b493a5b8 <line:375:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb3b493a618 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb3b4919110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb3b493a6a8 <line:376:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493a708 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb3b493a7d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:377:111> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493b630 <col:82, col:111>
| |   | | | `-ReturnStmt 0x7fb3b493b618 <col:83, col:109>
| |   | | |   `-CallExpr 0x7fb3b493b5f0 <col:90, col:109> 'double'
| |   | | |     `-ImplicitCastExpr 0x7fb3b493b5d8 <col:90> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fb3b493b5b0 <col:90> '<builtin fn type>' Function 0x7fb3b493b4c0 '__builtin_huge_val' 'double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb3b493a868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493a8b0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493a918 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:378:109> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493b930 <col:83, col:109>
| |   | | | `-ReturnStmt 0x7fb3b493b918 <col:84, col:107>
| |   | | |   `-CallExpr 0x7fb3b493b8d0 <col:91, col:107> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fb3b493b8b8 <col:91> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb3b493b7f8 <col:91> '<builtin fn type>' Function 0x7fb3b493b6a0 '__builtin_nan' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb3b493b900 <col:105> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb3b493b820 <col:105> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb3b493a9b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493a9f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493aa60 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:379:114> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493bbd8 <col:87, col:114>
| |   | | | `-ReturnStmt 0x7fb3b493bbc0 <col:88, col:112>
| |   | | |   `-CallExpr 0x7fb3b493bb78 <col:95, col:112> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fb3b493bb60 <col:95> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb3b493baf8 <col:95> '<builtin fn type>' Function 0x7fb3b493b9a0 '__builtin_nans' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb3b493bba8 <col:110> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb3b493bb20 <col:110> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb3b493aaf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493ab40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493aba8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:380:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493bc30 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fb3b493bc18 <col:85, <built-in>:146:28>
| |   | | |   `-FloatingLiteral 0x7fb3b493bbf8 <col:28> 'double' 4.940656e-324
| |   | | |-AlwaysInlineAttr 0x7fb3b493ac40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493ac88 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b493aca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:382:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493ad08 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb3b493ad88 <line:383:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493ade8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb3b493ae68 <line:384:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493aec8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb3b493af48 <line:386:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493afa8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb3b493b028 <line:387:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493b088 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb3b493b108 <line:388:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb3b493b168 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb3b4918e30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fb3b493bc90 <line:391:1, line:439:1> line:392:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'long double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fb3b493bf00 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fb3b493bf98 <line:394:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fb3b493bfd8 <line:395:5, col:25> col:25 referenced type 'long double'
| |   | | `-BuiltinType 0x7fb3b3832900 'long double'
| |   | |-VarDecl 0x7fb3b493c040 <line:397:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493c0a0 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fb3b493c120 <line:399:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493c180 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb3b493c208 <line:400:5, <built-in>:167:27> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:400:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b493c268 <<built-in>:167:27> 'int' 64
| |   | |-VarDecl 0x7fb3b493c2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:5, <built-in>:162:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b493c358 <<built-in>:162:22> 'int' 18
| |   | |-VarDecl 0x7fb3b493c3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:402:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fb3b493c5b0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fb3b493c588 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fb3b493c570 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fb3b493c448 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fb3b493c548 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fb3b493c508 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fb3b493c4e0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fb3b493c4c8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fb3b493c4b0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fb3b493c468 <col:59> 'const int' lvalue Var 0x7fb3b493c208 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fb3b493c490 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fb3b493c528 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fb3b493c6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:403:98> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493e380 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fb3b493e368 <col:78, <built-in>:173:22>
| |   | | |   `-FloatingLiteral 0x7fb3b493e338 <col:22> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fb3b493c790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493c7d8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493c840 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:404:98> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493e3e8 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fb3b493e3d0 <col:78, <built-in>:170:22>
| |   | | |   `-FloatingLiteral 0x7fb3b493e3a0 <col:22> 'long double' INF
| |   | | |-AlwaysInlineAttr 0x7fb3b493c8d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493c920 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493c988 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:405:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493e4d0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fb3b493e4b8 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fb3b493e498 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' prefix '-'
| |   | | |     `-CallExpr 0x7fb3b493e470 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double'
| |   | | |       `-ImplicitCastExpr 0x7fb3b493e458 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fb3b493e408 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' lvalue CXXMethod 0x7fb3b493c840 'max' 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb3b493ca20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493ca68 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b493ca88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:407:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493cae8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fb3b493cb68 <line:408:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493cbc8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fb3b493cc50 <line:409:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:409:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b493ccb0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fb3b493cd80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:410:106> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493e538 <col:81, col:106>
| |   | | | `-ReturnStmt 0x7fb3b493e520 <col:82, <built-in>:164:26>
| |   | | |   `-FloatingLiteral 0x7fb3b493e4f0 <col:26> 'long double' 1.084202e-19
| |   | | |-AlwaysInlineAttr 0x7fb3b493ce18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493ce60 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493cec8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:411:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493e5a8 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fb3b493e590 <col:86, col:93>
| |   | | |   `-ImplicitCastExpr 0x7fb3b493e578 <col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' <FloatingCast>
| |   | | |     `-FloatingLiteral 0x7fb3b493e558 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fb3b493cf60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493cfa8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b493cfd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:5, <built-in>:172:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb3b493d070 <<built-in>:172:26, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fb3b493d050 <col:27, col:28> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb3b493d030 <col:28> 'int' 16381
| |   | |-VarDecl 0x7fb3b493d100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:5, <built-in>:171:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fb3b493d1a0 <<built-in>:171:29, col:35> 'int'
| |   | |   `-UnaryOperator 0x7fb3b493d180 <col:30, col:31> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fb3b493d160 <col:31> 'int' 4931
| |   | |-VarDecl 0x7fb3b493d270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:5, <built-in>:169:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b493d2d0 <<built-in>:169:26> 'int' 16384
| |   | |-VarDecl 0x7fb3b493d360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:5, <built-in>:168:29> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fb3b493d3c0 <<built-in>:168:29> 'int' 4932
| |   | |-VarDecl 0x7fb3b493d448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:418:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493d4a8 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fb3b493d528 <line:419:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493d588 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fb3b493d608 <line:420:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493d668 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fb3b493d6e8 <line:421:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fb3b493d748 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fb3b4919110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fb3b493d7d8 <line:422:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493d838 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fb3b493d900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:423:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493e788 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fb3b493e770 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fb3b493e748 <col:90, col:110> 'long double'
| |   | | |     `-ImplicitCastExpr 0x7fb3b493e730 <col:90> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fb3b493e708 <col:90> '<builtin fn type>' Function 0x7fb3b493e618 '__builtin_huge_vall' 'long double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fb3b493d998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493d9e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493da48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:424:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493ea90 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fb3b493ea78 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fb3b493ea30 <col:91, col:108> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fb3b493ea18 <col:91> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb3b493e950 <col:91> '<builtin fn type>' Function 0x7fb3b493e7f8 '__builtin_nanl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb3b493ea60 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb3b493e978 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb3b493dae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493db28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493db90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:425:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493ed38 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fb3b493ed20 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fb3b493ecd8 <col:95, col:113> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fb3b493ecc0 <col:95> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fb3b493ec58 <col:95> '<builtin fn type>' Function 0x7fb3b493eb00 '__builtin_nansl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fb3b493ed08 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fb3b493ec80 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fb3b493dc28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493dc70 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b493dcd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:426:112> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b493eda0 <col:84, col:112>
| |   | | | `-ReturnStmt 0x7fb3b493ed88 <col:85, <built-in>:160:29>
| |   | | |   `-FloatingLiteral 0x7fb3b493ed58 <col:29> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fb3b493dd70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b493ddb8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b493ddd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:431:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493de38 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fb3b493deb8 <line:433:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493df18 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fb3b493df98 <line:434:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493dff8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fb3b493e078 <line:436:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493e0d8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fb3b493e158 <line:437:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fb3b493e1b8 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fb3b493e238 <line:438:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fb3b493e298 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fb3b4918e30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateDecl 0x7fb3b493ef08 <line:441:1, line:485:1> line:442:28 numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fb3b493edc0 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fb3b493ee70 <line:442:1, line:485:1> line:442:28 class numeric_limits definition
| |   |   |-private '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fb3b493f180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fb3b493f5a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:442:1, col:28> col:28 implicit class numeric_limits
| |   |   |-TypedefDecl 0x7fb3b493f8f8 <line:445:5, col:68> col:68 referenced __base '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   | `-TemplateSpecializationType 0x7fb3b493f850 '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>' dependent __libcpp_numeric_limits
| |   |   |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |   |   |-TypedefDecl 0x7fb3b493fa60 <line:446:5, col:35> col:35 referenced type 'typename __base::type'
| |   |   | `-DependentNameType 0x7fb3b493f9f0 'typename __base::type' dependent
| |   |   |-AccessSpecDecl 0x7fb3b493fab8 <line:447:1, col:7> col:1 public
| |   |   |-VarDecl 0x7fb3b493faf0 <line:448:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b493fb88 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fb3b493fcd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:449:99> col:61 constexpr min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b4941d10 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fb3b4941cf8 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fb3b4941cd0 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4941c90 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b493fd70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b493fdb8 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb3b493fe20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:450:99> col:61 constexpr max 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b4941de8 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fb3b4941dd0 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fb3b4941da8 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4941d68 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b493feb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b493ff00 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb3b493ff68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:451:105> col:61 constexpr lowest 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b4941ec0 <col:80, col:105>
| |   |   | | `-ReturnStmt 0x7fb3b4941ea8 <col:81, col:103>
| |   |   | |   `-CallExpr 0x7fb3b4941e80 <col:88, col:103> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4941e40 <col:88, col:96> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b4940000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b4940048 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fb3b4940070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:453:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940108 <col:50, col:58> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940160 <line:454:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b49401f8 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940250 <line:455:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b49402e8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940338 <line:456:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b49403d0 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940420 <line:457:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b49404b8 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940508 <line:458:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b49405a0 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b49405f8 <line:459:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940690 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fb3b4940728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:460:107> col:61 constexpr epsilon 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b4941f98 <col:81, col:107>
| |   |   | | `-ReturnStmt 0x7fb3b4941f80 <col:82, col:105>
| |   |   | |   `-CallExpr 0x7fb3b4941f58 <col:89, col:105> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4941f18 <col:89, col:97> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b49407c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b4940808 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb3b4940870 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:461:115> col:61 constexpr round_error 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b4942070 <col:85, col:115>
| |   |   | | `-ReturnStmt 0x7fb3b4942058 <col:86, col:113>
| |   |   | |   `-CallExpr 0x7fb3b4942030 <col:93, col:113> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4941ff0 <col:93, col:101> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b4940908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b4940950 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fb3b4940978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:463:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940a10 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940a68 <line:464:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940b00 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940b58 <line:465:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940bf0 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940c48 <line:466:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940ce0 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940d30 <line:468:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940dc8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940e18 <line:469:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940eb0 <col:57, col:65> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940f00 <line:470:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4940f98 <col:61, col:69> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4940fe8 <line:471:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4941080 <col:68, col:76> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b49410d0 <line:472:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4941168 <col:59, col:67> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fb3b4941200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:473:109> col:61 constexpr infinity 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b4942148 <col:82, col:109>
| |   |   | | `-ReturnStmt 0x7fb3b4942130 <col:83, col:107>
| |   |   | |   `-CallExpr 0x7fb3b4942108 <col:90, col:107> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b49420c8 <col:90, col:98> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b4941298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b49412e0 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb3b4941348 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:474:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b4942220 <col:83, col:111>
| |   |   | | `-ReturnStmt 0x7fb3b4942208 <col:84, col:109>
| |   |   | |   `-CallExpr 0x7fb3b49421e0 <col:91, col:109> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b49421a0 <col:91, col:99> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b49413e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b4941428 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb3b4941490 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:475:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b49422f8 <col:87, col:119>
| |   |   | | `-ReturnStmt 0x7fb3b49422e0 <col:88, col:117>
| |   |   | |   `-CallExpr 0x7fb3b49422b8 <col:95, col:117> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4942278 <col:95, col:103> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b4941528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b4941570 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fb3b49415d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:476:113> col:61 constexpr denorm_min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fb3b49423d0 <col:84, col:113>
| |   |   | | `-ReturnStmt 0x7fb3b49423b8 <col:85, col:111>
| |   |   | |   `-CallExpr 0x7fb3b4942390 <col:92, col:111> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fb3b4942350 <col:92, col:100> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fb3b4941670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fb3b49416b8 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fb3b49416d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:478:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4941770 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b49417c0 <line:479:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4941858 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b49418a8 <line:480:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4941940 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4941990 <line:482:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4941a28 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fb3b4941a78 <line:483:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fb3b4941b10 <col:59, col:67> '<dependent type>' lvalue
| |   |   `-VarDecl 0x7fb3b4941b60 <line:484:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fb3b4941bf8 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fb3b49425e0 parent 0x7fb3b493ee70 prev 0x7fb3b493faf0 <line:487:1, line:488:55> col:55 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4942878 parent 0x7fb3b493ee70 prev 0x7fb3b4940070 <line:489:1, line:490:54> col:54 digits 'const int' constexpr
| |   |-VarDecl 0x7fb3b4942b18 parent 0x7fb3b493ee70 prev 0x7fb3b4940160 <line:491:1, line:492:54> col:54 digits10 'const int' constexpr
| |   |-VarDecl 0x7fb3b4942db8 parent 0x7fb3b493ee70 prev 0x7fb3b4940250 <line:493:1, line:494:54> col:54 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fb3b4943050 parent 0x7fb3b493ee70 prev 0x7fb3b4940338 <line:495:1, line:496:55> col:55 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b487daf0 parent 0x7fb3b493ee70 prev 0x7fb3b4940420 <line:497:1, line:498:55> col:55 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b487dd80 parent 0x7fb3b493ee70 prev 0x7fb3b4940508 <line:499:1, line:500:55> col:55 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b487e018 parent 0x7fb3b493ee70 prev 0x7fb3b49405f8 <line:501:1, line:502:54> col:54 radix 'const int' constexpr
| |   |-VarDecl 0x7fb3b487e2b8 parent 0x7fb3b493ee70 prev 0x7fb3b4940978 <line:503:1, line:504:54> col:54 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb3b487e558 parent 0x7fb3b493ee70 prev 0x7fb3b4940a68 <line:505:1, line:506:54> col:54 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb3b487e7f8 parent 0x7fb3b493ee70 prev 0x7fb3b4940b58 <line:507:1, line:508:54> col:54 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb3b487ea98 parent 0x7fb3b493ee70 prev 0x7fb3b4940c48 <line:509:1, line:510:54> col:54 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb3b487ed30 parent 0x7fb3b493ee70 prev 0x7fb3b4940d30 <line:511:1, line:512:55> col:55 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b487efc0 parent 0x7fb3b493ee70 prev 0x7fb3b4940e18 <line:513:1, line:514:55> col:55 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b487f250 parent 0x7fb3b493ee70 prev 0x7fb3b4940f00 <line:515:1, line:516:55> col:55 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b487f4e0 parent 0x7fb3b493ee70 prev 0x7fb3b4940fe8 <line:517:1, line:518:69> col:69 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fb3b487f770 parent 0x7fb3b493ee70 prev 0x7fb3b49410d0 <line:519:1, line:520:55> col:55 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4880a00 parent 0x7fb3b493ee70 prev 0x7fb3b49416d8 <line:521:1, line:522:55> col:55 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4880c90 parent 0x7fb3b493ee70 prev 0x7fb3b49417c0 <line:523:1, line:524:55> col:55 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4880f20 parent 0x7fb3b493ee70 prev 0x7fb3b49418a8 <line:525:1, line:526:55> col:55 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b48811b0 parent 0x7fb3b493ee70 prev 0x7fb3b4941990 <line:527:1, line:528:55> col:55 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4881440 parent 0x7fb3b493ee70 prev 0x7fb3b4941a78 <line:529:1, line:530:55> col:55 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b48816d0 parent 0x7fb3b493ee70 prev 0x7fb3b4941b60 <line:531:1, line:532:68> col:68 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b4881908 <line:534:1, line:578:1> line:535:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b4881770 <line:534:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b4881a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4881c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:535:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fb3b4881d88 <line:538:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fb3b4881ce0 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fb3b4881df0 <line:539:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fb3b48817b0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4881770 '_Tp'
| |   | |-AccessSpecDecl 0x7fb3b4881e48 <line:540:1, col:7> col:1 public
| |   | |-VarDecl 0x7fb3b4881e80 <line:541:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4881f50 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b4882068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:542:99> col:61 constexpr min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b48840b0 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb3b4884098 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb3b4884070 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4884030 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4882100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4882148 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b48821b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:543:99> col:61 constexpr max 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4884188 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb3b4884170 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb3b4884148 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4884108 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4882248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4882290 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b48822f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:544:105> col:61 constexpr lowest 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4884260 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fb3b4884248 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fb3b4884220 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b48841e0 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4882390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b48823d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4882400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:546:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882498 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b48824f0 <line:547:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882588 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b48825e0 <line:548:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882678 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b48826c8 <line:549:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882760 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b48827b0 <line:550:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882848 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4882898 <line:551:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882930 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4882988 <line:552:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882a30 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b4882ac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:553:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4884338 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fb3b4884320 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fb3b48842f8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b48842b8 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4882b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4882ba8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4882c10 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:554:115> col:61 constexpr round_error 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4884410 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fb3b48843f8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fb3b48843d0 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4884390 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4882ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4882cf0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4882d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:556:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882db0 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4882e08 <line:557:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882ea0 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4882ef8 <line:558:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4882f90 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4882fe8 <line:559:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883080 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b48830d0 <line:561:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883168 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b48831b8 <line:562:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883250 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b48832a0 <line:563:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883338 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4883388 <line:564:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883420 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4883470 <line:565:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883508 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b48835a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:566:109> col:61 constexpr infinity 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b48844e8 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fb3b48844d0 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fb3b48844a8 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4884468 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4883638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4883680 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b48836e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:567:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b48845c0 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fb3b48845a8 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fb3b4884580 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4884540 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4883780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b48837c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4883830 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:568:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4884698 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fb3b4884680 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fb3b4884658 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4884618 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b48838c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4883910 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4883978 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:569:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4884770 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fb3b4884758 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fb3b4884730 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b48846f0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4883a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4883a58 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4883a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:571:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883b10 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4883b60 <line:572:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883bf8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4883c48 <line:573:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883ce0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4883d30 <line:575:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883dc8 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4883e18 <line:576:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4883eb0 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fb3b4883f00 <line:577:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fb3b4883f98 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fb3b4884980 parent 0x7fb3b4881908 prev 0x7fb3b4881e80 <line:580:1, line:581:61> col:61 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4884c38 parent 0x7fb3b4881908 prev 0x7fb3b4882400 <line:582:1, line:583:60> col:60 digits 'const int' constexpr
| |   |-VarDecl 0x7fb3b4884ed8 parent 0x7fb3b4881908 prev 0x7fb3b48824f0 <line:584:1, line:585:60> col:60 digits10 'const int' constexpr
| |   |-VarDecl 0x7fb3b4885178 parent 0x7fb3b4881908 prev 0x7fb3b48825e0 <line:586:1, line:587:60> col:60 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fb3b4885410 parent 0x7fb3b4881908 prev 0x7fb3b48826c8 <line:588:1, line:589:61> col:61 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b48856a0 parent 0x7fb3b4881908 prev 0x7fb3b48827b0 <line:590:1, line:591:61> col:61 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4885930 parent 0x7fb3b4881908 prev 0x7fb3b4882898 <line:592:1, line:593:61> col:61 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4885bc8 parent 0x7fb3b4881908 prev 0x7fb3b4882988 <line:594:1, line:595:60> col:60 radix 'const int' constexpr
| |   |-VarDecl 0x7fb3b4885e68 parent 0x7fb3b4881908 prev 0x7fb3b4882d18 <line:596:1, line:597:60> col:60 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb3b4886108 parent 0x7fb3b4881908 prev 0x7fb3b4882e08 <line:598:1, line:599:60> col:60 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb3b48863a8 parent 0x7fb3b4881908 prev 0x7fb3b4882ef8 <line:600:1, line:601:60> col:60 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb3b4886648 parent 0x7fb3b4881908 prev 0x7fb3b4882fe8 <line:602:1, line:603:60> col:60 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb3b48868e0 parent 0x7fb3b4881908 prev 0x7fb3b48830d0 <line:604:1, line:605:61> col:61 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4886b70 parent 0x7fb3b4881908 prev 0x7fb3b48831b8 <line:606:1, line:607:61> col:61 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4886e00 parent 0x7fb3b4881908 prev 0x7fb3b48832a0 <line:608:1, line:609:61> col:61 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4887090 parent 0x7fb3b4881908 prev 0x7fb3b4883388 <line:610:1, line:611:75> col:75 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fb3b4887320 parent 0x7fb3b4881908 prev 0x7fb3b4883470 <line:612:1, line:613:61> col:61 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b48875b0 parent 0x7fb3b4881908 prev 0x7fb3b4883a78 <line:614:1, line:615:61> col:61 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4887840 parent 0x7fb3b4881908 prev 0x7fb3b4883b60 <line:616:1, line:617:61> col:61 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4887ad0 parent 0x7fb3b4881908 prev 0x7fb3b4883c48 <line:618:1, line:619:61> col:61 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4887d60 parent 0x7fb3b4881908 prev 0x7fb3b4883d30 <line:620:1, line:621:61> col:61 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4887ff0 parent 0x7fb3b4881908 prev 0x7fb3b4883e18 <line:622:1, line:623:61> col:61 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4888280 parent 0x7fb3b4881908 prev 0x7fb3b4883f00 <line:624:1, line:625:74> col:74 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b48884b8 <line:627:1, line:671:1> line:628:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b4888320 <line:627:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b48885f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b48887e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:628:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fb3b4888938 <line:631:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fb3b4888890 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fb3b48889a0 <line:632:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fb3b4888360 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4888320 '_Tp'
| |   | |-AccessSpecDecl 0x7fb3b4943200 <line:633:1, col:7> col:1 public
| |   | |-VarDecl 0x7fb3b4943238 <line:634:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4943310 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b4943428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:635:99> col:61 constexpr min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4945498 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb3b4945480 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb3b4945458 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4945418 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b49434c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4943508 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4943570 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:636:99> col:61 constexpr max 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4945570 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb3b4945558 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb3b4945530 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b49454f0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4943608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4943650 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b49436b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:637:105> col:61 constexpr lowest 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4945648 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fb3b4945630 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fb3b4945608 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b49455c8 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4943750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4943798 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b49437c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:639:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4943858 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b49438b0 <line:640:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4943948 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b49439a0 <line:641:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4943a38 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4943a88 <line:642:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4943b20 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4943b70 <line:643:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4943c08 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4943c58 <line:644:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4943cf0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4943d48 <line:645:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4943de0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b4943e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:646:107> col:61 constexpr epsilon 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4945720 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fb3b4945708 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fb3b49456e0 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b49456a0 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4943f10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4943f58 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4943fc0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:647:115> col:61 constexpr round_error 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b49457f8 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fb3b49457e0 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fb3b49457b8 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4945778 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4944058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b49440a0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b49440c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:649:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4944160 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b49441b8 <line:650:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4944250 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b49442a8 <line:651:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4944340 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4944398 <line:652:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4944430 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4944480 <line:654:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4944518 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4944568 <line:655:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4944600 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4944650 <line:656:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b49446e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4944738 <line:657:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b49447d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4944820 <line:658:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b49448b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b4944950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:659:109> col:61 constexpr infinity 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b49458d0 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fb3b49458b8 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fb3b4945890 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4945850 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b49449e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4944a30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4944a98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:660:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b49459a8 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fb3b4945990 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fb3b4945968 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4945928 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4944b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4944b78 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4944be0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:661:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4945a80 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fb3b4945a68 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fb3b4945a40 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4945a00 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4944c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4944cc0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b4944d28 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:662:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b4945b58 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fb3b4945b40 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fb3b4945b18 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b4945ad8 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b4944dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b4944e08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b4944e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:664:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4944ec0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4944f10 <line:665:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4944fa8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4944ff8 <line:666:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4945090 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b49450e0 <line:668:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4945178 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b4945200 <line:669:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4945298 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fb3b49452e8 <line:670:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fb3b4945380 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fb3b4945d70 parent 0x7fb3b48884b8 prev 0x7fb3b4943238 <line:673:1, line:674:64> col:64 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4946008 parent 0x7fb3b48884b8 prev 0x7fb3b49437c0 <line:675:1, line:676:63> col:63 digits 'const int' constexpr
| |   |-VarDecl 0x7fb3b49462a8 parent 0x7fb3b48884b8 prev 0x7fb3b49438b0 <line:677:1, line:678:63> col:63 digits10 'const int' constexpr
| |   |-VarDecl 0x7fb3b4946548 parent 0x7fb3b48884b8 prev 0x7fb3b49439a0 <line:679:1, line:680:63> col:63 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fb3b49467e0 parent 0x7fb3b48884b8 prev 0x7fb3b4943a88 <line:681:1, line:682:64> col:64 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4946a70 parent 0x7fb3b48884b8 prev 0x7fb3b4943b70 <line:683:1, line:684:64> col:64 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4946d00 parent 0x7fb3b48884b8 prev 0x7fb3b4943c58 <line:685:1, line:686:64> col:64 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4946f98 parent 0x7fb3b48884b8 prev 0x7fb3b4943d48 <line:687:1, line:688:63> col:63 radix 'const int' constexpr
| |   |-VarDecl 0x7fb3b4947240 parent 0x7fb3b48884b8 prev 0x7fb3b49440c8 <line:689:1, line:690:63> col:63 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb3b49474d8 parent 0x7fb3b48884b8 prev 0x7fb3b49441b8 <line:691:1, line:692:63> col:63 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb3b4947778 parent 0x7fb3b48884b8 prev 0x7fb3b49442a8 <line:693:1, line:694:63> col:63 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb3b4947a18 parent 0x7fb3b48884b8 prev 0x7fb3b4944398 <line:695:1, line:696:63> col:63 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb3b4947cb0 parent 0x7fb3b48884b8 prev 0x7fb3b4944480 <line:697:1, line:698:64> col:64 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4947f40 parent 0x7fb3b48884b8 prev 0x7fb3b4944568 <line:699:1, line:700:64> col:64 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b49481d0 parent 0x7fb3b48884b8 prev 0x7fb3b4944650 <line:701:1, line:702:64> col:64 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4948460 parent 0x7fb3b48884b8 prev 0x7fb3b4944738 <line:703:1, line:704:78> col:78 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fb3b49486f0 parent 0x7fb3b48884b8 prev 0x7fb3b4944820 <line:705:1, line:706:64> col:64 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4948980 parent 0x7fb3b48884b8 prev 0x7fb3b4944e28 <line:707:1, line:708:64> col:64 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4948c10 parent 0x7fb3b48884b8 prev 0x7fb3b4944f10 <line:709:1, line:710:64> col:64 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4948ea0 parent 0x7fb3b48884b8 prev 0x7fb3b4944ff8 <line:711:1, line:712:64> col:64 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4949130 parent 0x7fb3b48884b8 prev 0x7fb3b49450e0 <line:713:1, line:714:64> col:64 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b49493f0 parent 0x7fb3b48884b8 prev 0x7fb3b4945200 <line:715:1, line:716:64> col:64 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b4949680 parent 0x7fb3b48884b8 prev 0x7fb3b49452e8 <line:717:1, line:718:77> col:77 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fb3b49498b8 <line:720:1, line:764:1> line:721:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fb3b4949720 <line:720:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fb3b49499f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fb3b4949be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:721:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fb3b4949d38 <line:724:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fb3b4949c90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fb3b4949da0 <line:725:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fb3b4949760 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fb3b4949720 '_Tp'
| |   | |-AccessSpecDecl 0x7fb3b4949df8 <line:726:1, col:7> col:1 public
| |   | |-VarDecl 0x7fb3b4949e30 <line:727:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b4949f00 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b494a018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:728:99> col:61 constexpr min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c060 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb3b494c048 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb3b494c020 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494bfe0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494a0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494a0f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b494a160 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:729:99> col:61 constexpr max 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c138 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fb3b494c120 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fb3b494c0f8 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494c0b8 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494a1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494a240 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b494a2a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:730:105> col:61 constexpr lowest 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c210 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fb3b494c1f8 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fb3b494c1d0 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494c190 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494a340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494a388 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b494a3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:732:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494a448 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494a4a0 <line:733:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494a538 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494a590 <line:734:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494a628 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494a678 <line:735:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494a710 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494a760 <line:736:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494a7f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494a848 <line:737:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494a8e0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494a938 <line:738:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494a9d0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b494aa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:739:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c2e8 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fb3b494c2d0 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fb3b494c2a8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494c268 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494ab00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494ab48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b494abb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:740:115> col:61 constexpr round_error 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c3c0 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fb3b494c3a8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fb3b494c380 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494c340 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494ac48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494ac90 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b494acb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:742:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494ad50 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494ada8 <line:743:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494ae40 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494ae98 <line:744:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494af30 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494af88 <line:745:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494b020 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494b070 <line:747:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494b108 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494b158 <line:748:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494b200 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494b250 <line:749:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494b2e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494b338 <line:750:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494b3d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494b420 <line:751:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494b4b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fb3b494b550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:752:109> col:61 constexpr infinity 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c498 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fb3b494c480 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fb3b494c458 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494c418 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494b5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494b630 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b494b698 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:753:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c570 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fb3b494c558 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fb3b494c530 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494c4f0 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494b730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494b778 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b494b7e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:754:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c648 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fb3b494c630 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fb3b494c608 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494c5c8 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494b878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494b8c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fb3b494b928 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:755:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fb3b494c720 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fb3b494c708 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fb3b494c6e0 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fb3b494c6a0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fb3b494b9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fb3b494ba08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fb3b494ba28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:757:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494bac0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494bb10 <line:758:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494bba8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494bbf8 <line:759:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494bc90 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494bce0 <line:761:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494bd78 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fb3b494bdc8 <line:762:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fb3b494be60 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fb3b494beb0 <line:763:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fb3b494bf48 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fb3b494c930 parent 0x7fb3b49498b8 prev 0x7fb3b4949e30 <line:766:1, line:767:70> col:70 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494cbc8 parent 0x7fb3b49498b8 prev 0x7fb3b494a3b0 <line:768:1, line:769:69> col:69 digits 'const int' constexpr
| |   |-VarDecl 0x7fb3b494ce68 parent 0x7fb3b49498b8 prev 0x7fb3b494a4a0 <line:770:1, line:771:69> col:69 digits10 'const int' constexpr
| |   |-VarDecl 0x7fb3b494d108 parent 0x7fb3b49498b8 prev 0x7fb3b494a590 <line:772:1, line:773:69> col:69 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fb3b494d3b0 parent 0x7fb3b49498b8 prev 0x7fb3b494a678 <line:774:1, line:775:70> col:70 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494d640 parent 0x7fb3b49498b8 prev 0x7fb3b494a760 <line:776:1, line:777:70> col:70 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494d8d0 parent 0x7fb3b49498b8 prev 0x7fb3b494a848 <line:778:1, line:779:70> col:70 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494db68 parent 0x7fb3b49498b8 prev 0x7fb3b494a938 <line:780:1, line:781:69> col:69 radix 'const int' constexpr
| |   |-VarDecl 0x7fb3b494de08 parent 0x7fb3b49498b8 prev 0x7fb3b494acb8 <line:782:1, line:783:69> col:69 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb3b494e0a8 parent 0x7fb3b49498b8 prev 0x7fb3b494ada8 <line:784:1, line:785:69> col:69 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb3b494e348 parent 0x7fb3b49498b8 prev 0x7fb3b494ae98 <line:786:1, line:787:69> col:69 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fb3b494e5e8 parent 0x7fb3b49498b8 prev 0x7fb3b494af88 <line:788:1, line:789:69> col:69 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fb3b494e880 parent 0x7fb3b49498b8 prev 0x7fb3b494b070 <line:790:1, line:791:70> col:70 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494eb10 parent 0x7fb3b49498b8 prev 0x7fb3b494b158 <line:792:1, line:793:70> col:70 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494eda0 parent 0x7fb3b49498b8 prev 0x7fb3b494b250 <line:794:1, line:795:70> col:70 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494f030 parent 0x7fb3b49498b8 prev 0x7fb3b494b338 <line:796:1, line:797:84> col:84 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fb3b494f2c0 parent 0x7fb3b49498b8 prev 0x7fb3b494b420 <line:798:1, line:799:70> col:70 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494f550 parent 0x7fb3b49498b8 prev 0x7fb3b494ba28 <line:800:1, line:801:70> col:70 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494f7e0 parent 0x7fb3b49498b8 prev 0x7fb3b494bb10 <line:802:1, line:803:70> col:70 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494fa70 parent 0x7fb3b49498b8 prev 0x7fb3b494bbf8 <line:804:1, line:805:70> col:70 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494fd00 parent 0x7fb3b49498b8 prev 0x7fb3b494bce0 <line:806:1, line:807:70> col:70 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fb3b494ff90 parent 0x7fb3b49498b8 prev 0x7fb3b494bdc8 <line:808:1, line:809:70> col:70 tinyness_before 'const _Bool' constexpr
| |   `-VarDecl 0x7fb3b4950220 parent 0x7fb3b49498b8 prev 0x7fb3b494beb0 <line:810:1, line:811:83> col:83 round_style 'const enum std::__1::float_round_style' constexpr
| |-FunctionTemplateDecl 0x7fb3b4950520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:316:1, line:322:1> line:319:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7fb3b49502c0 <line:316:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4950488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:322:1> line:319:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb3b4950380 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4950c90 <line:320:1, line:322:1>
| |   | `-ReturnStmt 0x7fb3b4950c78 <line:321:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7fb3b4950c60 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb3b4950c40 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7fb3b4950c10 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7fb3b4950670 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb3b4950618 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb3b49505f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb3b49505d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb3b4950380 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb3b4950650 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb3b49507e8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb3b49507d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb3b49507a8 <col:37> 'int (float)' lvalue Function 0x7fb3b5015868 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb3b4950780 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb3b4950760 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb3b49506f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb3b4950380 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb3b4950be0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7fb3b49508b8 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb3b4950860 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb3b4950840 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb3b4950818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb3b4950380 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb3b4950898 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb3b4950a30 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb3b4950a18 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb3b49509f0 <col:37> 'int (double)' lvalue Function 0x7fb3b50175b0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb3b49509c8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb3b49509a8 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb3b4950938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb3b4950380 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb3b4950bb0 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7fb3b4950b98 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb3b4950b70 <col:37> 'int (long double)' lvalue Function 0x7fb3b501ac88 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb3b4950b48 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb3b4950b28 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb3b4950ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fb3b4950380 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4950578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b49505c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b4951298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:326:1, line:332:1> line:329:1 signbit
| | |-TemplateTypeParmDecl 0x7fb3b4950cb0 <line:326:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4951200 <line:327:1, line:332:1> line:329:1 signbit 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b49510c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4951648 <line:330:1, line:332:1>
| |   | `-ReturnStmt 0x7fb3b4951630 <line:331:5, col:73>
| |   |   `-CallExpr 0x7fb3b4951600 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4951348 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7fb3b4950520
| |   |     `-CStyleCastExpr 0x7fb3b49515d8 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4951590 <col:65> '_A1' lvalue ParmVar 0x7fb3b49510c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b49512f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4951338 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4951d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:334:1, line:339:24> line:338:1 signbit
| | |-TemplateTypeParmDecl 0x7fb3b4951668 <line:334:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4951cf8 <line:335:1, line:339:24> line:338:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4951be0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4951ec8 <line:339:1, col:24>
| |   | `-ReturnStmt 0x7fb3b4951eb0 <col:3, col:21>
| |   |   `-BinaryOperator 0x7fb3b4951e88 <col:10, col:21> '<dependent type>' '<'
| |   |     |-DeclRefExpr 0x7fb3b4951e40 <col:10> '_A1' lvalue ParmVar 0x7fb3b4951be0 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fb3b4951e68 <col:21> 'int' 0
| |   |-AlwaysInlineAttr 0x7fb3b4951de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4951e30 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b49525e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:341:1, line:346:17> line:345:1 signbit
| | |-TemplateTypeParmDecl 0x7fb3b4951ee8 <line:341:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4952548 <line:342:1, line:346:17> line:345:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && !std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4952430 <col:9> col:12 '_A1'
| |   |-CompoundStmt 0x7fb3b49526c0 <line:346:1, col:17>
| |   | `-ReturnStmt 0x7fb3b49526a8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fb3b4952690 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fb3b4952638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4952680 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4952948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:378:1, line:384:1> line:381:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7fb3b49526e0 <line:378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b49528b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:384:1> line:381:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb3b49527a0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b49530a0 <line:382:1, line:384:1>
| |   | `-ReturnStmt 0x7fb3b4953088 <line:383:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7fb3b4953068 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7fb3b4953038 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7fb3b4952a98 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7fb3b4952a40 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7fb3b4952a20 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7fb3b49529f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb3b49527a0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7fb3b4952a78 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7fb3b4952c10 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7fb3b4952bf8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7fb3b4952bd0 <col:37> 'int (float)' lvalue Function 0x7fb3b3866198 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7fb3b4952ba8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7fb3b4952b88 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7fb3b4952b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb3b49527a0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7fb3b4953008 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7fb3b4952ce0 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb3b4952c88 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb3b4952c68 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb3b4952c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb3b49527a0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb3b4952cc0 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7fb3b4952e58 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb3b4952e40 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb3b4952e18 <col:37> 'int (double)' lvalue Function 0x7fb3b3866318 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7fb3b4952df0 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7fb3b4952dd0 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb3b4952d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb3b49527a0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7fb3b4952fd8 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7fb3b4952fc0 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7fb3b4952f98 <col:37> 'int (long double)' lvalue Function 0x7fb3b3866498 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7fb3b4952f70 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7fb3b4952f50 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7fb3b4952ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fb3b49527a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b49529a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b49529e8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b4953660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:1, line:394:1> line:391:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fb3b49530c0 <line:388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b49535c8 <line:389:1, line:394:1> line:391:1 fpclassify 'typename std::enable_if<std::is_floating_point<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b49534b0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4953928 <line:392:1, line:394:1>
| |   | `-ReturnStmt 0x7fb3b4953910 <line:393:5, col:76>
| |   |   `-CallExpr 0x7fb3b49538e0 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4953710 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7fb3b4952948
| |   |     `-CStyleCastExpr 0x7fb3b49538b8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4953870 <col:68> '_A1' lvalue ParmVar 0x7fb3b49534b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b49536b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4953700 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4953ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:396:1, line:400:47> line:399:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fb3b4953948 <line:396:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4953e48 <line:397:1, line:400:47> line:399:1 fpclassify 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4953d30 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4954088 <line:400:1, col:47>
| |   | `-ReturnStmt 0x7fb3b4954070 <col:3, /usr/include/math.h:77:25>
| |   |   `-ConditionalOperator 0x7fb3b4954040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, /usr/include/math.h:77:25> 'int'
| |   |     |-BinaryOperator 0x7fb3b4953fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, col:22> '<dependent type>' '=='
| |   |     | |-DeclRefExpr 0x7fb3b4953f90 <col:10> '_A1' lvalue ParmVar 0x7fb3b4953d30 '__lcpp_x' '_A1'
| |   |     | `-IntegerLiteral 0x7fb3b4953fb8 <col:22> 'int' 0
| |   |     |-IntegerLiteral 0x7fb3b4954000 </usr/include/math.h:76:25> 'int' 3
| |   |     `-IntegerLiteral 0x7fb3b4954020 <line:77:25> 'int' 4
| |   |-AlwaysInlineAttr 0x7fb3b4953f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4953f80 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b49542d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:424:1, line:430:1> line:427:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7fb3b49540a8 <line:424:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4954238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:430:1> line:427:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb3b4954170 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4954a40 <line:428:1, line:430:1>
| |   | `-ReturnStmt 0x7fb3b4954a28 <line:429:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7fb3b4954a10 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb3b49549f0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7fb3b49549c0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7fb3b4954420 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb3b49543c8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb3b49543a8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb3b4954380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb3b4954170 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb3b4954400 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb3b4954598 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb3b4954580 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb3b4954558 <col:37> 'int (float)' lvalue Function 0x7fb3b5012590 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb3b4954530 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb3b4954510 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb3b49544a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb3b4954170 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb3b4954990 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7fb3b4954668 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb3b4954610 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb3b49545f0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb3b49545c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb3b4954170 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb3b4954648 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb3b49547e0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb3b49547c8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb3b49547a0 <col:37> 'int (double)' lvalue Function 0x7fb3b5012e00 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb3b4954778 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb3b4954758 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb3b49546e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb3b4954170 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb3b4954960 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fb3b4954948 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb3b4954920 <col:37> 'int (long double)' lvalue Function 0x7fb3b5013b00 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb3b49548f8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb3b49548d8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb3b4954868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fb3b4954170 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4954328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b4954370 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b4955180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:434:1, line:442:1> line:439:1 isfinite
| | |-TemplateTypeParmDecl 0x7fb3b4954a60 <line:434:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b49550e8 <line:435:1, line:442:1> line:439:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4954fd0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4955458 <line:440:1, line:442:1>
| |   | `-ReturnStmt 0x7fb3b4955440 <line:441:5, col:74>
| |   |   `-CallExpr 0x7fb3b4955410 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4955248 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7fb3b49542d0
| |   |     `-CStyleCastExpr 0x7fb3b49553e8 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b49553a0 <col:66> '_A1' lvalue ParmVar 0x7fb3b4954fd0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b49551d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4955238 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4955b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:444:1, line:450:16> line:449:1 isfinite
| | |-TemplateTypeParmDecl 0x7fb3b4955478 <line:444:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4955ad8 <line:445:1, line:450:16> line:449:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b49559c0 <col:10> col:13 '_A1'
| |   |-CompoundStmt 0x7fb3b4955c50 <line:450:1, col:16>
| |   | `-ReturnStmt 0x7fb3b4955c38 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fb3b4955c20 <col:10> '_Bool' true
| |   |-AlwaysInlineAttr 0x7fb3b4955bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4955c10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4955e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:458:1, line:464:1> line:461:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7fb3b4955c70 <line:458:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4955df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:464:1> line:461:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb3b4955d30 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4956600 <line:462:1, line:464:1>
| |   | `-ReturnStmt 0x7fb3b49565e8 <line:463:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7fb3b49565d0 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb3b49565b0 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7fb3b4956580 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7fb3b4955fe0 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb3b4955f88 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb3b4955f68 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb3b4955f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb3b4955d30 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb3b4955fc0 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb3b4956158 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb3b4956140 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb3b4956118 <col:37> 'int (float)' lvalue Function 0x7fb3b5014370 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb3b49560f0 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb3b49560d0 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb3b4956060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb3b4955d30 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb3b4956550 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7fb3b4956228 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb3b49561d0 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb3b49561b0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb3b4956188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb3b4955d30 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb3b4956208 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb3b49563a0 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb3b4956388 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb3b4956360 <col:37> 'int (double)' lvalue Function 0x7fb3b5014690 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb3b4956338 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb3b4956318 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb3b49562a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb3b4955d30 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb3b4956520 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fb3b4956508 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb3b49564e0 <col:37> 'int (long double)' lvalue Function 0x7fb3b5014db0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb3b49564b8 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb3b4956498 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb3b4956428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fb3b4955d30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4955ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b4955f30 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b4956c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:468:1, line:476:1> line:473:1 isinf
| | |-TemplateTypeParmDecl 0x7fb3b4956620 <line:468:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4956b68 <line:469:1, line:476:1> line:473:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4956a90 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4956ec8 <line:474:1, line:476:1>
| |   | `-ReturnStmt 0x7fb3b4956eb0 <line:475:5, col:71>
| |   |   `-CallExpr 0x7fb3b4956e80 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4956cb0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7fb3b4955e90
| |   |     `-CStyleCastExpr 0x7fb3b4956e58 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4956e10 <col:63> '_A1' lvalue ParmVar 0x7fb3b4956a90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4956c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4956ca0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4957500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:478:1, line:484:17> line:483:1 isinf
| | |-TemplateTypeParmDecl 0x7fb3b4956ee8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4957468 <line:479:1, line:484:17> line:483:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4957390 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fb3b49575e0 <line:484:1, col:17>
| |   | `-ReturnStmt 0x7fb3b49575c8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fb3b49575b0 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fb3b4957558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b49575a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4957820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:492:1, line:498:1> line:495:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7fb3b4957600 <line:492:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4957788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:498:1> line:495:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb3b49576c0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4957f90 <line:496:1, line:498:1>
| |   | `-ReturnStmt 0x7fb3b4957f78 <line:497:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7fb3b4957f60 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb3b4957f40 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7fb3b4957f10 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7fb3b4957970 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb3b4957918 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb3b49578f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb3b49578d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb3b49576c0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb3b4957950 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb3b4957ae8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb3b4957ad0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb3b4957aa8 <col:37> 'int (float)' lvalue Function 0x7fb3b50150d0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb3b4957a80 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb3b4957a60 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb3b49579f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb3b49576c0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb3b4957ee0 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7fb3b4957bb8 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb3b4957b60 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb3b4957b40 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb3b4957b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb3b49576c0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb3b4957b98 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb3b4957d30 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb3b4957d18 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb3b4957cf0 <col:37> 'int (double)' lvalue Function 0x7fb3b5015358 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb3b4957cc8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb3b4957ca8 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb3b4957c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb3b49576c0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb3b4957eb0 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fb3b4957e98 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb3b4957e70 <col:37> 'int (long double)' lvalue Function 0x7fb3b50155e0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb3b4957e48 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb3b4957e28 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb3b4957db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fb3b49576c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4957878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b49578c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b4958450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:502:1, line:508:1> line:505:1 isnan
| | |-TemplateTypeParmDecl 0x7fb3b4957fb0 <line:502:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b49583b8 <line:503:1, line:508:1> line:505:1 isnan 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b49582e0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4958718 <line:506:1, line:508:1>
| |   | `-ReturnStmt 0x7fb3b4958700 <line:507:5, col:71>
| |   |   `-CallExpr 0x7fb3b49586d0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4958500 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7fb3b4957820
| |   |     `-CStyleCastExpr 0x7fb3b49586a8 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4958660 <col:63> '_A1' lvalue ParmVar 0x7fb3b49582e0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b49584a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b49584f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4958cd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:510:1, line:514:17> line:513:1 isnan
| | |-TemplateTypeParmDecl 0x7fb3b4958738 <line:510:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4958c38 <line:511:1, line:514:17> line:513:1 isnan 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4958b20 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fb3b4958db0 <line:514:1, col:17>
| |   | `-ReturnStmt 0x7fb3b4958d98 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fb3b4958d80 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fb3b4958d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4958d70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4958ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:522:1, line:528:1> line:525:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7fb3b4958dd0 <line:522:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4958f58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:528:1> line:525:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fb3b4958e90 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4959778 <line:526:1, line:528:1>
| |   | `-ReturnStmt 0x7fb3b4959760 <line:527:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7fb3b4959748 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fb3b4959728 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7fb3b49596f8 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7fb3b4959140 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fb3b49590e8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fb3b49590c8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fb3b49590a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb3b4958e90 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fb3b4959120 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fb3b49592d0 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fb3b49592b8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fb3b4959290 <col:37> 'int (float)' lvalue Function 0x7fb3b501d238 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fb3b4959268 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fb3b4959248 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fb3b49591c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb3b4958e90 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fb3b49596c8 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7fb3b49593a0 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fb3b4959348 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fb3b4959328 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fb3b4959300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb3b4958e90 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fb3b4959380 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fb3b4959518 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fb3b4959500 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fb3b49594d8 <col:37> 'int (double)' lvalue Function 0x7fb3b501da90 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fb3b49594b0 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fb3b4959490 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fb3b4959420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb3b4958e90 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fb3b4959698 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fb3b4959680 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fb3b4959658 <col:37> 'int (long double)' lvalue Function 0x7fb3b501ded8 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fb3b4959630 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fb3b4959610 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fb3b49595a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fb3b4958e90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4959048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b4959090 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b4959c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:532:1, line:538:1> line:535:1 isnormal
| | |-TemplateTypeParmDecl 0x7fb3b4959798 <line:532:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4959ba8 <line:533:1, line:538:1> line:535:1 isnormal 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4959ad0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4959f08 <line:536:1, line:538:1>
| |   | `-ReturnStmt 0x7fb3b4959ef0 <line:537:5, col:74>
| |   |   `-CallExpr 0x7fb3b4959ec0 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4959cf0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7fb3b4958ff0
| |   |     `-CStyleCastExpr 0x7fb3b4959e98 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4959e50 <col:66> '_A1' lvalue ParmVar 0x7fb3b4959ad0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4959c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4959ce0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b495a3d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:540:1, line:544:25> line:543:1 isnormal
| | |-TemplateTypeParmDecl 0x7fb3b4959f28 <line:540:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b495a338 <line:541:1, line:544:25> line:543:1 isnormal 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b495a260 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b495a508 <line:544:1, col:25>
| |   | `-ReturnStmt 0x7fb3b495a4f0 <col:3, col:22>
| |   |   `-BinaryOperator 0x7fb3b495a4c8 <col:10, col:22> '<dependent type>' '!='
| |   |     |-DeclRefExpr 0x7fb3b495a480 <col:10> '_A1' lvalue ParmVar 0x7fb3b495a260 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fb3b495a4a8 <col:22> 'int' 0
| |   |-AlwaysInlineAttr 0x7fb3b495a428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b495a470 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b495a890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:552:1, line:558:1> line:555:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7fb3b495a528 <line:552:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495a598 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495a7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:558:1> line:555:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb3b495a668 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495a6d8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495abf8 <line:556:1, line:558:1>
| |   | `-ReturnStmt 0x7fb3b495abe0 <line:557:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7fb3b495aba8 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb3b495aaf0 <col:25> '<builtin fn type>' Function 0x7fb3b495aa00 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb3b495ab40 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb3b495ab18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:22> '_A1' lvalue ParmVar 0x7fb3b495a668 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb3b495ab88 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb3b495ab60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:32> '_A2' lvalue ParmVar 0x7fb3b495a6d8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495a8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b495a938 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b495b460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:562:1, line:574:1> line:570:1 isgreater
| | |-TemplateTypeParmDecl 0x7fb3b495ac18 <line:562:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495ac88 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495b3c8 <line:563:1, line:574:1> line:570:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b495b230 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495b2a0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495b950 <line:571:1, line:574:1>
| |   | |-DeclStmt 0x7fb3b495b7a8 <line:572:5, col:57>
| |   | | `-TypedefDecl 0x7fb3b495b750 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b495b6e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb3b495b938 <line:573:5, col:61>
| |   |   `-CallExpr 0x7fb3b495b900 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b495b7c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7fb3b495a890
| |   |     |-CStyleCastExpr 0x7fb3b495b878 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b495b840 <col:37> '_A1' lvalue ParmVar 0x7fb3b495b230 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b495b8d8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b495b8a0 <col:53> '_A2' lvalue ParmVar 0x7fb3b495b2a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495b4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b495b508 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b495bca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:582:1, line:588:1> line:585:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7fb3b495b978 <line:582:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495b9e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495bc08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:588:1> line:585:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb3b495bab8 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495bb28 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495bfa0 <line:586:1, line:588:1>
| |   | `-ReturnStmt 0x7fb3b495bf88 <line:587:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7fb3b495bf50 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb3b495be98 <col:30> '<builtin fn type>' Function 0x7fb3b495bda8 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb3b495bee8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb3b495bec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:27> '_A1' lvalue ParmVar 0x7fb3b495bab8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb3b495bf30 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb3b495bf08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:37> '_A2' lvalue ParmVar 0x7fb3b495bb28 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495bd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b495bd48 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b495c6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:592:1, line:604:1> line:600:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7fb3b495bfc0 <line:592:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495c028 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495c608 <line:593:1, line:604:1> line:600:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b495c4b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495c520 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495cac0 <line:601:1, line:604:1>
| |   | |-DeclStmt 0x7fb3b495c918 <line:602:5, col:57>
| |   | | `-TypedefDecl 0x7fb3b495c8c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b495c850 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb3b495caa8 <line:603:5, col:66>
| |   |   `-CallExpr 0x7fb3b495ca70 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b495c930 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7fb3b495bca0
| |   |     |-CStyleCastExpr 0x7fb3b495c9e8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b495c9b0 <col:42> '_A1' lvalue ParmVar 0x7fb3b495c4b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b495ca48 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b495ca10 <col:58> '_A2' lvalue ParmVar 0x7fb3b495c520 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495c700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b495c748 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b495ce10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:612:1, line:618:1> line:615:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7fb3b495cae8 <line:612:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495cb58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495cd78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:618:1> line:615:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb3b495cc28 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495cc98 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495d110 <line:616:1, line:618:1>
| |   | `-ReturnStmt 0x7fb3b495d0f8 <line:617:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7fb3b495d0c0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb3b495d008 <col:22> '<builtin fn type>' Function 0x7fb3b495cf18 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb3b495d058 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb3b495d030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:19> '_A1' lvalue ParmVar 0x7fb3b495cc28 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb3b495d0a0 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb3b495d078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:29> '_A2' lvalue ParmVar 0x7fb3b495cc98 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495ce70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b495ceb8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b495d830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:622:1, line:634:1> line:630:1 isless
| | |-TemplateTypeParmDecl 0x7fb3b495d130 <line:622:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495d198 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495d798 <line:623:1, line:634:1> line:630:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b495d640 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495d6b0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495dc50 <line:631:1, line:634:1>
| |   | |-DeclStmt 0x7fb3b495daa8 <line:632:5, col:57>
| |   | | `-TypedefDecl 0x7fb3b495da50 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b495d9e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb3b495dc38 <line:633:5, col:58>
| |   |   `-CallExpr 0x7fb3b495dc00 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b495dac0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7fb3b495ce10
| |   |     |-CStyleCastExpr 0x7fb3b495db78 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b495db40 <col:34> '_A1' lvalue ParmVar 0x7fb3b495d640 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b495dbd8 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b495dba0 <col:50> '_A2' lvalue ParmVar 0x7fb3b495d6b0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495d890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b495d8d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b495dfa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:642:1, line:648:1> line:645:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7fb3b495dc78 <line:642:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495dce8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495df08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:648:1> line:645:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb3b495ddb8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495de28 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495e2a0 <line:646:1, line:648:1>
| |   | `-ReturnStmt 0x7fb3b495e288 <line:647:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7fb3b495e250 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb3b495e198 <col:27> '<builtin fn type>' Function 0x7fb3b495e0a8 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb3b495e1e8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb3b495e1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:24> '_A1' lvalue ParmVar 0x7fb3b495ddb8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb3b495e230 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb3b495e208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:34> '_A2' lvalue ParmVar 0x7fb3b495de28 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495e000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b495e048 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b495e9a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:652:1, line:664:1> line:660:1 islessequal
| | |-TemplateTypeParmDecl 0x7fb3b495e2c0 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495e328 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495e908 <line:653:1, line:664:1> line:660:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b495e7b0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495e820 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495edc0 <line:661:1, line:664:1>
| |   | |-DeclStmt 0x7fb3b495ec18 <line:662:5, col:57>
| |   | | `-TypedefDecl 0x7fb3b495ebc0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b495eb50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb3b495eda8 <line:663:5, col:63>
| |   |   `-CallExpr 0x7fb3b495ed70 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b495ec30 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7fb3b495dfa0
| |   |     |-CStyleCastExpr 0x7fb3b495ece8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b495ecb0 <col:39> '_A1' lvalue ParmVar 0x7fb3b495e7b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b495ed48 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b495ed10 <col:55> '_A2' lvalue ParmVar 0x7fb3b495e820 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495ea00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b495ea48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b495f110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:672:1, line:678:1> line:675:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7fb3b495ede8 <line:672:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495ee58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495f078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1> line:675:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb3b495ef28 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495ef98 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495f448 <line:676:1, line:678:1>
| |   | `-ReturnStmt 0x7fb3b495f430 <line:677:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7fb3b495f3f8 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb3b495f340 <col:29> '<builtin fn type>' Function 0x7fb3b495f250 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb3b495f390 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb3b495f368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:26> '_A1' lvalue ParmVar 0x7fb3b495ef28 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb3b495f3d8 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb3b495f3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:36> '_A2' lvalue ParmVar 0x7fb3b495ef98 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495f170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b495f1b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b495fb50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:682:1, line:694:1> line:690:1 islessgreater
| | |-TemplateTypeParmDecl 0x7fb3b495f468 <line:682:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b495f4d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b495fab8 <line:683:1, line:694:1> line:690:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b495f960 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b495f9d0 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b495ff70 <line:691:1, line:694:1>
| |   | |-DeclStmt 0x7fb3b495fdc8 <line:692:5, col:57>
| |   | | `-TypedefDecl 0x7fb3b495fd70 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b495fd00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb3b495ff58 <line:693:5, col:65>
| |   |   `-CallExpr 0x7fb3b495ff20 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b495fde0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7fb3b495f110
| |   |     |-CStyleCastExpr 0x7fb3b495fe98 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b495fe60 <col:41> '_A1' lvalue ParmVar 0x7fb3b495f960 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b495fef8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b495fec0 <col:57> '_A2' lvalue ParmVar 0x7fb3b495f9d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b495fbb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b495fbf8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b49602c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:708:1> line:705:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7fb3b495ff98 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b4960008 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b4960228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:708:1> line:705:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fb3b49600d8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b4960148 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b49605c0 <line:706:1, line:708:1>
| |   | `-ReturnStmt 0x7fb3b49605a8 <line:707:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7fb3b4960570 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fb3b49604b8 <col:27> '<builtin fn type>' Function 0x7fb3b49603c8 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fb3b4960508 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fb3b49604e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:24> '_A1' lvalue ParmVar 0x7fb3b49600d8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fb3b4960550 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fb3b4960528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:34> '_A2' lvalue ParmVar 0x7fb3b4960148 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b4960320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fb3b4960368 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fb3b4960cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:712:1, line:724:1> line:720:1 isunordered
| | |-TemplateTypeParmDecl 0x7fb3b49605e0 <line:712:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b4960648 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b4960c28 <line:713:1, line:724:1> line:720:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4960ad0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b4960b40 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b49610e0 <line:721:1, line:724:1>
| |   | |-DeclStmt 0x7fb3b4960f38 <line:722:5, col:57>
| |   | | `-TypedefDecl 0x7fb3b4960ee0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b4960e70 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fb3b49610c8 <line:723:5, col:63>
| |   |   `-CallExpr 0x7fb3b4961090 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4960f50 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7fb3b49602c0
| |   |     |-CStyleCastExpr 0x7fb3b4961008 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b4960fd0 <col:39> '_A1' lvalue ParmVar 0x7fb3b4960ad0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b4961068 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4961030 <col:55> '_A2' lvalue ParmVar 0x7fb3b4960b40 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b4960d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4960d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4962200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:731:1, line:733:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4961150 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b49623f0 <col:31, col:57>
| | | `-ReturnStmt 0x7fb3b49623d8 <col:32, col:55>
| | |   `-CallExpr 0x7fb3b4962390 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4962378 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4962318 <col:39, col:41> 'float (float)' lvalue Function 0x7fb3b502c2f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b49623c0 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4962350 <col:47> 'float' lvalue ParmVar 0x7fb3b4961150 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b49622a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b49622e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b49624f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:735:1, line:737:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4962458 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7fb3b49626e0 <col:32, col:57>
| | | `-ReturnStmt 0x7fb3b49626c8 <col:33, col:55>
| | |   `-CallExpr 0x7fb3b4962680 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7fb3b4962668 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4962608 <col:40, col:42> 'double (double)' lvalue Function 0x7fb3b502c490 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7fb3b49626b0 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4962640 <col:47> 'double' lvalue ParmVar 0x7fb3b4962458 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7fb3b4962590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b49625d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b49627e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:739:1, line:741:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4962748 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b49629d0 <col:37, col:63>
| | | `-ReturnStmt 0x7fb3b49629b8 <col:38, col:61>
| | |   `-CallExpr 0x7fb3b4962970 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4962958 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b49628f8 <col:45, col:47> 'long double (long double)' lvalue Function 0x7fb3b502c630 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b49629a0 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4962930 <col:53> 'long double' lvalue ParmVar 0x7fb3b4962748 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4962880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b49628c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4962ad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:747:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4962a38 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4962cc0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4962ca8 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4962c60 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4962c48 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4962be8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b501e338 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4962c90 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4962c20 <col:99> 'float' lvalue ParmVar 0x7fb3b4962a38 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4962b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4962bb8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4962dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:748:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4962d28 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4962fb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4962f98 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4962f50 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4962f38 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4962ed8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b501e678 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4962f80 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4962f10 <col:99> 'long double' lvalue ParmVar 0x7fb3b4962d28 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4962e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4962ea8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4963560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:751:1, line:754:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7fb3b4962fd0 <line:751:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b49634c8 <line:752:1, line:754:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b49633b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4965060 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4965048 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4965018 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4965000 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4964fc8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b501e4d8 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b49636e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b49636a0 <col:53> '_A1' lvalue ParmVar 0x7fb3b49633b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b49635b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4963600 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4965160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:759:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b49650c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4965350 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4965338 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b49652f0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b49652d8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4965278 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b501e818 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4965320 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b49652b0 <col:99> 'float' lvalue ParmVar 0x7fb3b49650c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4965200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4965248 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4965450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:760:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b49653b8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4965640 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4965628 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b49655e0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b49655c8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4965568 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b501eba0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4965610 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b49655a0 <col:99> 'long double' lvalue ParmVar 0x7fb3b49653b8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b49654f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4965538 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4965b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:763:1, line:766:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7fb3b4965660 <line:763:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4965a68 <line:764:1, line:766:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4965990 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4966020 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4966008 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4965fd8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4965fc0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4965f88 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b501ea00 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4965c80 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4965c40 <col:53> '_A1' lvalue ParmVar 0x7fb3b4965990 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4965b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4965ba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4966120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:771:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4966088 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4966340 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4966328 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b49662e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b49662c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4966268 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b501ed40 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4966310 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b49662a0 <col:99> 'float' lvalue ParmVar 0x7fb3b4966088 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b49661c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4966238 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4966440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:772:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b49663a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4966630 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4966618 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b49665d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b49665b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4966558 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b501f080 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4966600 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4966590 <col:99> 'long double' lvalue ParmVar 0x7fb3b49663a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b49664e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4966528 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4966af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:775:1, line:778:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7fb3b4966650 <line:775:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4966a58 <line:776:1, line:778:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4966980 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4967010 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4966ff8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4966fc8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4966fb0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4966f78 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b501eee0 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4966c70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4966c30 <col:53> '_A1' lvalue ParmVar 0x7fb3b4966980 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4966b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4966b90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4967190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:783:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4967078 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fb3b49670f0 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4967400 <col:106, col:143>
| | | `-ReturnStmt 0x7fb3b49673e8 <col:107, col:141>
| | |   `-CallExpr 0x7fb3b4967380 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4967368 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b49672b0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fb3b501f2e8 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b49673b8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b49672e8 <col:123> 'float' lvalue ParmVar 0x7fb3b4967078 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b49673d0 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4967310 <col:133> 'float' lvalue ParmVar 0x7fb3b49670f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4967238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4967280 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4967580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:784:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4967468 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fb3b49674e0 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b49677f0 <col:106, col:143>
| | | `-ReturnStmt 0x7fb3b49677d8 <col:107, col:141>
| | |   `-CallExpr 0x7fb3b4967770 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4967758 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b49676a0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fb3b501f848 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b49677a8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b49676d8 <col:123> 'long double' lvalue ParmVar 0x7fb3b4967468 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b49677c0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4967700 <col:133> 'long double' lvalue ParmVar 0x7fb3b49674e0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4967628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4967670 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4968150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:787:1, line:801:1> line:795:1 atan2
| | |-TemplateTypeParmDecl 0x7fb3b4967810 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b4967878 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b49680b8 <line:788:1, line:801:1> line:795:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4967f20 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7fb3b4967f90 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7fb3b4054258 <line:796:1, line:801:1>
| |   | |-DeclStmt 0x7fb3b4053bc8 <line:797:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b4053b70 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b4053b00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b40540a0 <line:798:5, line:799:68>
| |   | | `-StaticAssertDecl 0x7fb3b4054068 <line:798:5, line:799:67> line:798:5
| |   | |   |-ParenExpr 0x7fb3b4054020 <col:19, line:799:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b4054000 <line:798:20, line:799:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b4053fe0 <line:798:21, line:799:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b4053fb8 <line:798:22, line:799:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b4053db8 <line:798:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b4053f78 <line:799:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b4054040 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b4054240 <line:800:5, col:68>
| |   |   `-CallExpr 0x7fb3b4054208 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b40540d8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7fb3b501f598 0x7fb3b4967190 0x7fb3b4967580 0x7fb3b4968150
| |   |     |-CStyleCastExpr 0x7fb3b4054180 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b4054148 <col:35> '_A1' lvalue ParmVar 0x7fb3b4967f20 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b40541e0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b40541a8 <col:60> '_A2' lvalue ParmVar 0x7fb3b4967f90 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b49681b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4053a00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4054368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40542d0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4054558 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4054540 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b40544f8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b40544e0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4054480 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b502f2a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4054528 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40544b8 <col:99> 'float' lvalue ParmVar 0x7fb3b40542d0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4054408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4054450 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4054658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:807:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40545c0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4054848 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4054830 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b40547e8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b40547d0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4054770 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b502f5e8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4054818 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40547a8 <col:99> 'long double' lvalue ParmVar 0x7fb3b40545c0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b40546f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4054740 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4054d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:810:1, line:813:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7fb3b4054868 <line:810:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4054c78 <line:811:1, line:813:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4054ba0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4055230 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4055218 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b40551e8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b40551d0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4055198 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b502f448 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4054e90 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4054e50 <col:53> '_A1' lvalue ParmVar 0x7fb3b4054ba0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4054d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4054db0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4055330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:818:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4055298 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4055520 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b4055508 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b40554c0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b40554a8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4055448 <col:90, col:92> 'float (float)' lvalue Function 0x7fb3b5020230 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40554f0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4055480 <col:97> 'float' lvalue ParmVar 0x7fb3b4055298 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40553d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4055418 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4055620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:819:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4055588 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4055810 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b40557f8 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b40557b0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4055798 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4055738 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb3b5020570 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b40557e0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4055770 <col:97> 'long double' lvalue ParmVar 0x7fb3b4055588 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b40556c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4055708 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4055d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:822:1, line:825:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7fb3b4055830 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4055c68 <line:823:1, line:825:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4055b90 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4056220 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb3b4056208 <col:30, col:59>
| |   |   `-CallExpr 0x7fb3b40561d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b40561c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4056188 <col:37, col:39> 'double (double)' lvalue Function 0x7fb3b50203d0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4055e80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4055e40 <col:51> '_A1' lvalue ParmVar 0x7fb3b4055b90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4055d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4055da0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4056320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:830:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4056288 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4056510 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b40564f8 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b40564b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4056498 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4056438 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b5022790 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40564e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4056470 <col:99> 'float' lvalue ParmVar 0x7fb3b4056288 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40563c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4056408 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4056610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:831:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4056578 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4056800 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b40567e8 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b40567a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4056788 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4056728 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b50232f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b40567d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4056760 <col:99> 'long double' lvalue ParmVar 0x7fb3b4056578 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b40566b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40566f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4056cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:834:1, line:837:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7fb3b4056820 <line:834:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4056c28 <line:835:1, line:837:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4056b50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40571e0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b40571c8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4057198 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4057180 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4057148 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b5022930 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4056e40 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4056e00 <col:53> '_A1' lvalue ParmVar 0x7fb3b4056b50 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4056d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4056d60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40572e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:842:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4057248 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40574d0 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b40574b8 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b4057470 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4057458 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40573f8 <col:90, col:92> 'float (float)' lvalue Function 0x7fb3b5023e50 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40574a0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4057430 <col:97> 'float' lvalue ParmVar 0x7fb3b4057248 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4057380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40573c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40575d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:843:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4057538 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40577c0 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b40577a8 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b4057760 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4057748 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40576e8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb3b5024200 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4057790 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4057720 <col:97> 'long double' lvalue ParmVar 0x7fb3b4057538 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4057670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40576b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4057ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:846:1, line:849:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7fb3b40577e0 <line:846:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4057c08 <line:847:1, line:849:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4057b30 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40581c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb3b40581a8 <col:30, col:59>
| |   |   `-CallExpr 0x7fb3b4058178 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4058160 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4058128 <col:37, col:39> 'double (double)' lvalue Function 0x7fb3b5023ff0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4057e20 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4057de0 <col:51> '_A1' lvalue ParmVar 0x7fb3b4057b30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4057cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4057d40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40582c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:854:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4058228 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40584b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4058498 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4058450 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4058438 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40583d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b502c2f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4058480 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4058410 <col:99> 'float' lvalue ParmVar 0x7fb3b4058228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4058360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40583a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40585b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:855:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4058518 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40587a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4058788 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4058740 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4058728 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40586c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b502c630 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4058770 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4058700 <col:99> 'long double' lvalue ParmVar 0x7fb3b4058518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4058650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4058698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4058c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:858:1, line:861:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7fb3b40587c0 <line:858:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4058bc8 <line:859:1, line:861:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4058af0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4059180 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4059168 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4059138 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4059120 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b40590e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b502c490 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4058de0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4058da0 <col:53> '_A1' lvalue ParmVar 0x7fb3b4058af0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4058cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4058d00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4059280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:866:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40591e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4059470 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b4059458 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4059410 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b40593f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4059398 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b502f788 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4059440 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40593d0 <col:101> 'float' lvalue ParmVar 0x7fb3b40591e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4059320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4059368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4059570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:867:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40594d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4059760 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b4059748 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4059700 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b40596e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4059688 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b502fac8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4059730 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40596c0 <col:101> 'long double' lvalue ParmVar 0x7fb3b40594d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4059610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4059658 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4059c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:870:1, line:873:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7fb3b4059780 <line:870:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4059ba8 <line:871:1, line:873:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4059ad0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b405a160 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b405a148 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b405a118 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b405a100 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b405a0c8 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b502f928 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4059dc0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4059d80 <col:55> '_A1' lvalue ParmVar 0x7fb3b4059ad0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4059c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4059ce0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405a2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:878:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405a1c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b405a240 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b405a520 <col:105, col:141>
| | | `-ReturnStmt 0x7fb3b405a508 <col:106, col:139>
| | |   `-CallExpr 0x7fb3b405a4a0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b405a488 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405a400 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fb3b5032760 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b405a4d8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b405a438 <col:121> 'float' lvalue ParmVar 0x7fb3b405a1c8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b405a4f0 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405a460 <col:131> 'float' lvalue ParmVar 0x7fb3b405a240 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b405a388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405a3d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405a6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:879:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405a588 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b405a600 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b405a8e0 <col:105, col:141>
| | | `-ReturnStmt 0x7fb3b405a8c8 <col:106, col:139>
| | |   `-CallExpr 0x7fb3b405a860 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b405a848 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405a7c0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fb3b5032bb0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b405a898 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b405a7f8 <col:121> 'long double' lvalue ParmVar 0x7fb3b405a588 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b405a8b0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405a820 <col:131> 'long double' lvalue ParmVar 0x7fb3b405a600 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b405a748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405a790 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b405b140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:882:1, line:896:1> line:890:1 fmod
| | |-TemplateTypeParmDecl 0x7fb3b405a900 <line:882:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b405a968 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b405b0a8 <line:883:1, line:896:1> line:890:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b405af50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b405afc0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b405b968 <line:891:1, line:896:1>
| |   | |-DeclStmt 0x7fb3b405b3b8 <line:892:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b405b360 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b405b2f0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b405b7b0 <line:893:5, line:894:68>
| |   | | `-StaticAssertDecl 0x7fb3b405b778 <line:893:5, line:894:67> line:893:5
| |   | |   |-ParenExpr 0x7fb3b405b730 <col:19, line:894:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b405b710 <line:893:20, line:894:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b405b6f0 <line:893:21, line:894:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b405b6c8 <line:893:22, line:894:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b405b528 <line:893:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b405b688 <line:894:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b405b750 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b405b950 <line:895:5, col:67>
| |   |   `-CallExpr 0x7fb3b405b918 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b405b7e8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7fb3b5032988 0x7fb3b405a2e0 0x7fb3b405a6a0 0x7fb3b405b140
| |   |     |-CStyleCastExpr 0x7fb3b405b890 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b405b858 <col:34> '_A1' lvalue ParmVar 0x7fb3b405af50 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b405b8f0 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b405b8b8 <col:59> '_A2' lvalue ParmVar 0x7fb3b405afc0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b405b1a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b405b1e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405bb18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:901:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405ba00 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b405ba78 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fb3b405bdb0 <col:99, col:136>
| | | `-ReturnStmt 0x7fb3b405bd98 <col:100, col:134>
| | |   `-CallExpr 0x7fb3b405bd30 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b405bd18 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405bc38 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7fb3b5029788 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7fb3b405bd68 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b405bc70 <col:116> 'float' lvalue ParmVar 0x7fb3b405ba00 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b405bd80 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405bc98 <col:126> 'int *' lvalue ParmVar 0x7fb3b405ba78 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fb3b405bbc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405bc08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405bf30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:902:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405be18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b405be90 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fb3b405c1d0 <col:99, col:136>
| | | `-ReturnStmt 0x7fb3b405c1b8 <col:100, col:134>
| | |   `-CallExpr 0x7fb3b405c150 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b405c138 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405c050 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7fb3b5029cc8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7fb3b405c188 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b405c088 <col:116> 'long double' lvalue ParmVar 0x7fb3b405be18 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b405c1a0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405c0b0 <col:126> 'int *' lvalue ParmVar 0x7fb3b405be90 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fb3b405bfd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405c020 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b405c760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:905:1, line:908:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7fb3b405c1f0 <line:905:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b405c6c8 <line:906:1, line:908:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b405c520 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b405c598 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7fb3b405ccf8 <col:46, col:90>
| |   | `-ReturnStmt 0x7fb3b405cce0 <col:47, col:88>
| |   |   `-CallExpr 0x7fb3b405cc90 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b405cc78 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b405cc18 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7fb3b5029a28 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7fb3b405c8e8 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b405c8a8 <col:70> '_A1' lvalue ParmVar 0x7fb3b405c520 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb3b405ccc8 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb3b405c910 <col:80> 'int *' lvalue ParmVar 0x7fb3b405c598 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7fb3b405c7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b405c808 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405ce78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:913:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405cd60 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b405cdd8 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fb3b405d0e0 <col:98, col:135>
| | | `-ReturnStmt 0x7fb3b405d0c8 <col:99, col:133>
| | |   `-CallExpr 0x7fb3b405d060 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b405d048 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405cf98 <col:106, col:108> 'float (float, int)' lvalue Function 0x7fb3b5027f38 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fb3b405d098 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b405cfd0 <col:115> 'float' lvalue ParmVar 0x7fb3b405cd60 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b405d0b0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405cff8 <col:125> 'int' lvalue ParmVar 0x7fb3b405cdd8 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fb3b405cf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405cf68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405d260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:914:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405d148 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b405d1c0 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fb3b405d4d0 <col:98, col:135>
| | | `-ReturnStmt 0x7fb3b405d4b8 <col:99, col:133>
| | |   `-CallExpr 0x7fb3b405d450 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b405d438 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405d380 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7fb3b50294b8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fb3b405d488 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b405d3b8 <col:115> 'long double' lvalue ParmVar 0x7fb3b405d148 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b405d4a0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405d3e0 <col:125> 'int' lvalue ParmVar 0x7fb3b405d1c0 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fb3b405d308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405d350 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b405da98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:917:1, line:920:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7fb3b405d4f0 <line:917:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b405da00 <line:918:1, line:920:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b405d820 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b405d898 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7fb3b405e038 <col:45, col:89>
| |   | `-ReturnStmt 0x7fb3b405e020 <col:46, col:87>
| |   |   `-CallExpr 0x7fb3b405dfd0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b405dfb8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b405df58 <col:53, col:55> 'double (double, int)' lvalue Function 0x7fb3b5029200 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fb3b405dc20 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b405dbe0 <col:69> '_A1' lvalue ParmVar 0x7fb3b405d820 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb3b405e008 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb3b405dc48 <col:79> 'int' lvalue ParmVar 0x7fb3b405d898 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7fb3b405daf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b405db40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405e138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:925:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405e0a0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b405e328 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b405e310 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b405e2c8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b405e2b0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405e250 <col:90, col:92> 'float (float)' lvalue Function 0x7fb3b5024d60 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b405e2f8 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405e288 <col:97> 'float' lvalue ParmVar 0x7fb3b405e0a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b405e1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405e220 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405e428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:926:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405e390 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b405e618 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b405e600 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b405e5b8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b405e5a0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405e540 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb3b50250a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b405e5e8 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405e578 <col:97> 'long double' lvalue ParmVar 0x7fb3b405e390 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b405e4c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405e510 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b405eae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:929:1, line:932:61> col:1 log
| | |-TemplateTypeParmDecl 0x7fb3b405e638 <line:929:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b405ea48 <line:930:1, line:932:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b405e970 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b405f000 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb3b405efe8 <col:30, col:59>
| |   |   `-CallExpr 0x7fb3b405efb8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b405efa0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b405ef68 <col:37, col:39> 'double (double)' lvalue Function 0x7fb3b5024f00 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b405ec60 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b405ec20 <col:51> '_A1' lvalue ParmVar 0x7fb3b405e970 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b405eb38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b405eb80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405f100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:937:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405f068 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b405f2f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b405f2d8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b405f290 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b405f278 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405f218 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b5025290 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b405f2c0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405f250 <col:101> 'float' lvalue ParmVar 0x7fb3b405f068 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b405f1a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405f1e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b405f3f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:938:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b405f358 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b405f5e0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b405f5c8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b405f580 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b405f568 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b405f508 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b50255d0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b405f5b0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b405f540 <col:101> 'long double' lvalue ParmVar 0x7fb3b405f358 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b405f490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b405f4d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b405fad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:941:1, line:944:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7fb3b405f600 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b405fa40 <line:942:1, line:944:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b405f930 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4060000 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b405ffe8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b405ffb8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b405ffa0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b405ff68 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b5025430 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b405fc58 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b405fc18 <col:55> '_A1' lvalue ParmVar 0x7fb3b405f930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b405fb30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b405fb78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4060180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:949:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4060068 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b40600e0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7fb3b4060420 <col:106, col:142>
| | | `-ReturnStmt 0x7fb3b4060408 <col:107, col:140>
| | |   `-CallExpr 0x7fb3b40603a0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4060388 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40602a0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7fb3b5027718 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7fb3b40603d8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b40602d8 <col:122> 'float' lvalue ParmVar 0x7fb3b4060068 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b40603f0 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4060300 <col:132> 'float *' lvalue ParmVar 0x7fb3b40600e0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7fb3b4060228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4060270 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40605a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:950:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4060488 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b4060500 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7fb3b4060840 <col:106, col:142>
| | | `-ReturnStmt 0x7fb3b4060828 <col:107, col:140>
| | |   `-CallExpr 0x7fb3b40607c0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b40607a8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40606c0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7fb3b5027c98 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7fb3b40607f8 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b40606f8 <col:122> 'long double' lvalue ParmVar 0x7fb3b4060488 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b4060810 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4060720 <col:132> 'long double *' lvalue ParmVar 0x7fb3b4060500 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7fb3b4060648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4060690 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40609c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:956:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40608a8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b4060920 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b4060c00 <col:104, col:139>
| | | `-ReturnStmt 0x7fb3b4060be8 <col:105, col:137>
| | |   `-CallExpr 0x7fb3b4060b80 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4060b68 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4060ae0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7fb3b502d428 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b4060bb8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4060b18 <col:119> 'float' lvalue ParmVar 0x7fb3b40608a8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b4060bd0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4060b40 <col:129> 'float' lvalue ParmVar 0x7fb3b4060920 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4060a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4060ab0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4060d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:957:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4060c68 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b4060ce0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b4060fc0 <col:104, col:139>
| | | `-ReturnStmt 0x7fb3b4060fa8 <col:105, col:137>
| | |   `-CallExpr 0x7fb3b4060f40 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4060f28 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4060ea0 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7fb3b502d878 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b4060f78 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4060ed8 <col:119> 'long double' lvalue ParmVar 0x7fb3b4060c68 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b4060f90 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4060f00 <col:129> 'long double' lvalue ParmVar 0x7fb3b4060ce0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4060e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4060e70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4061820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:960:1, line:974:1> line:968:1 pow
| | |-TemplateTypeParmDecl 0x7fb3b4060fe0 <line:960:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b4061048 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b4061788 <line:961:1, line:974:1> line:968:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4061630 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b40616a0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b4062048 <line:969:1, line:974:1>
| |   | |-DeclStmt 0x7fb3b4061a98 <line:970:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b4061a40 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b40619d0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b4061e90 <line:971:5, line:972:68>
| |   | | `-StaticAssertDecl 0x7fb3b4061e58 <line:971:5, line:972:67> line:971:5
| |   | |   |-ParenExpr 0x7fb3b4061e10 <col:19, line:972:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b4061df0 <line:971:20, line:972:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b4061dd0 <line:971:21, line:972:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b4061da8 <line:971:22, line:972:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b4061c08 <line:971:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b4061d68 <line:972:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b4061e30 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b4062030 <line:973:5, col:66>
| |   |   `-CallExpr 0x7fb3b4061ff8 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4061ec8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7fb3b502d650 0x7fb3b40609c0 0x7fb3b4060d80 0x7fb3b4061820
| |   |     |-CStyleCastExpr 0x7fb3b4061f70 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b4061f38 <col:33> '_A1' lvalue ParmVar 0x7fb3b4061630 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b4061fd0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4061f98 <col:58> '_A2' lvalue ParmVar 0x7fb3b40616a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b4061880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b40618c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4062158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:979:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40620c0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4062348 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b4062330 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b40622e8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b40622d0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4062270 <col:90, col:92> 'float (float)' lvalue Function 0x7fb3b5020710 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4062318 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40622a8 <col:97> 'float' lvalue ParmVar 0x7fb3b40620c0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40621f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4062240 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4062448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:980:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40623b0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4062638 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b4062620 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b40625d8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b40625c0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4062560 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb3b5020a50 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4062608 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4062598 <col:97> 'long double' lvalue ParmVar 0x7fb3b40623b0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b40624e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4062530 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4062b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:983:1, line:986:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7fb3b4062658 <line:983:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4062a68 <line:984:1, line:986:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4062990 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4063020 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb3b4063008 <col:30, col:59>
| |   |   `-CallExpr 0x7fb3b4062fd8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4062fc0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4062f88 <col:37, col:39> 'double (double)' lvalue Function 0x7fb3b50208b0 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4062c80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4062c40 <col:51> '_A1' lvalue ParmVar 0x7fb3b4062990 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4062b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4062ba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4063120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:991:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4063088 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4063310 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b40632f8 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b40632b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4063298 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4063238 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b5023490 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40632e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4063270 <col:99> 'float' lvalue ParmVar 0x7fb3b4063088 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40631c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4063208 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4063410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:992:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4063378 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4063600 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b40635e8 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b40635a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4063588 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4063528 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b50237d0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b40635d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4063560 <col:99> 'long double' lvalue ParmVar 0x7fb3b4063378 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b40634b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40634f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4065cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, line:998:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7fb3b4063620 <line:995:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4065c40 <line:996:1, line:998:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4063950 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4066200 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b40661e8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b40661b8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b40661a0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4066168 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b5023630 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4065e58 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4065e18 <col:53> '_A1' lvalue ParmVar 0x7fb3b4063950 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4065d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4065d78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4066300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1003:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4066268 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40664f0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b40664d8 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4066490 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4066478 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4066418 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b502da20 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40664c0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4066450 <col:99> 'float' lvalue ParmVar 0x7fb3b4066268 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40663a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40663e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40665f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1004:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4066558 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40667e0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b40667c8 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4066780 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4066768 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4066708 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b502dd60 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b40667b0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4066740 <col:99> 'long double' lvalue ParmVar 0x7fb3b4066558 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4066690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40666d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4066ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1007:1, line:1010:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7fb3b4066800 <line:1007:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4066c08 <line:1008:1, line:1010:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4066b30 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40671c0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b40671a8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4067178 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4067160 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4067128 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b502dbc0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4066e20 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4066de0 <col:53> '_A1' lvalue ParmVar 0x7fb3b4066b30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4066cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4066d40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40672c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1015:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4067228 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40674b0 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b4067498 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b4067450 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4067438 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40673d8 <col:90, col:92> 'float (float)' lvalue Function 0x7fb3b5020bf0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4067480 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4067410 <col:97> 'float' lvalue ParmVar 0x7fb3b4067228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4067360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40673a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40675b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1016:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4067518 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40677a0 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b4067788 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b4067740 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4067728 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40676c8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb3b5020f30 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4067770 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4067700 <col:97> 'long double' lvalue ParmVar 0x7fb3b4067518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4067650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4067698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4067c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1019:1, line:1022:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7fb3b40677c0 <line:1019:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4067c00 <line:1020:1, line:1022:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4067af0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40681c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb3b40681a8 <col:30, col:59>
| |   |   `-CallExpr 0x7fb3b4068178 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4068160 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4068128 <col:37, col:39> 'double (double)' lvalue Function 0x7fb3b5020d90 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4067e18 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4067dd8 <col:51> '_A1' lvalue ParmVar 0x7fb3b4067af0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4067cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4067d38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40682c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1027:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4068228 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40684b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4068498 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4068450 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4068438 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40683d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b5023970 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4068480 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4068410 <col:99> 'float' lvalue ParmVar 0x7fb3b4068228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4068360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40683a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40685b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1028:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4068518 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40687a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4068788 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4068740 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4068728 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40686c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b5023cb0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4068770 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4068700 <col:99> 'long double' lvalue ParmVar 0x7fb3b4068518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4068650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4068698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4068c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1031:1, line:1034:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7fb3b40687c0 <line:1031:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4068bc8 <line:1032:1, line:1034:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4068af0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4069180 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4069168 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4069138 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4069120 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b40690e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b5023b10 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4068de0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4068da0 <col:53> '_A1' lvalue ParmVar 0x7fb3b4068af0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4068cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4068d00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4069280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1038:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40691e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4069470 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b4069458 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4069410 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b40693f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4069398 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b50210d0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4069440 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40693d0 <col:101> 'float' lvalue ParmVar 0x7fb3b40691e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4069320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4069368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4069570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1039:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40694d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4069760 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b4069748 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4069700 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b40696e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4069688 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b5021c30 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4069730 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40696c0 <col:101> 'long double' lvalue ParmVar 0x7fb3b40694d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4069610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4069658 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4069c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1041:1, line:1044:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7fb3b4069780 <line:1041:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4069c00 <line:1042:1, line:1044:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4069ab0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b406a1c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b406a1a8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b406a178 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b406a160 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b406a128 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b5021a90 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4069e18 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4069dd8 <col:55> '_A1' lvalue ParmVar 0x7fb3b4069ab0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4069cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4069d38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406a2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1048:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406a228 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b406a4b0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b406a498 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b406a450 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b406a438 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406a3d8 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b5021dd0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b406a480 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406a410 <col:101> 'float' lvalue ParmVar 0x7fb3b406a228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b406a360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406a3a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406a5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1049:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406a518 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b406a7a0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b406a788 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b406a740 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b406a728 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406a6c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b5022110 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b406a770 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406a700 <col:101> 'long double' lvalue ParmVar 0x7fb3b406a518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b406a650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406a698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b406ac60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1051:1, line:1054:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7fb3b406a7c0 <line:1051:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b406abc8 <line:1052:1, line:1054:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b406aaf0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b406b180 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b406b168 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b406b138 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b406b120 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b406b0e8 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b5021f70 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b406ade0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b406ada0 <col:55> '_A1' lvalue ParmVar 0x7fb3b406aaf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b406acb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b406ad00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406b280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1058:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406b1e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b406b470 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b406b458 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b406b410 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b406b3f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406b398 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b50222b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b406b440 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406b3d0 <col:101> 'float' lvalue ParmVar 0x7fb3b406b1e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b406b320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406b368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406b570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1059:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406b4d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b406b760 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b406b748 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b406b700 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b406b6e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406b688 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b50225f0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b406b730 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406b6c0 <col:101> 'long double' lvalue ParmVar 0x7fb3b406b4d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b406b610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406b658 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b406bc98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1061:1, line:1064:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7fb3b406b780 <line:1061:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b406bc00 <line:1062:1, line:1064:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b406bab0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b406c1c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b406c1a8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b406c178 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b406c160 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b406c128 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b5022450 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b406be18 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b406bdd8 <col:55> '_A1' lvalue ParmVar 0x7fb3b406bab0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b406bcf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b406bd38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406c2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1068:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406c228 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b406c4b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b406c498 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b406c450 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b406c438 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406c3d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b502c7d0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b406c480 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406c410 <col:99> 'float' lvalue ParmVar 0x7fb3b406c228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b406c360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406c3a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406c5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1069:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406c518 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b406c7a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b406c788 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b406c740 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b406c728 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406c6c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b502cb10 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b406c770 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406c700 <col:99> 'long double' lvalue ParmVar 0x7fb3b406c518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b406c650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406c698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b406cc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1071:1, line:1074:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7fb3b406c7c0 <line:1071:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b406cbc8 <line:1072:1, line:1074:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b406caf0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b406d180 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b406d168 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b406d138 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b406d120 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b406d0e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b502c970 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b406cde0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b406cda0 <col:53> '_A1' lvalue ParmVar 0x7fb3b406caf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b406ccb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b406cd00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406d300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1078:1, line:1081:1> line:1078:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406d1e8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b406d260 <line:1079:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b406d540 <col:75, line:1081:1>
| | | `-ReturnStmt 0x7fb3b406d528 <line:1080:3, col:40>
| | |   `-CallExpr 0x7fb3b406d4c0 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b406d4a8 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406d420 <col:10, col:12> 'float (float, float)' lvalue Function 0x7fb3b5033c40 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b406d4f8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b406d458 <col:22> 'float' lvalue ParmVar 0x7fb3b406d1e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b406d510 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406d480 <col:32> 'float' lvalue ParmVar 0x7fb3b406d260 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b406d3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406d3f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406d6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1082:1, line:1085:1> line:1083:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406d5a8 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b406d620 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b406d900 <col:64, line:1085:1>
| | | `-ReturnStmt 0x7fb3b406d8e8 <line:1084:3, col:40>
| | |   `-CallExpr 0x7fb3b406d880 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b406d868 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406d7e0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7fb3b5034090 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b406d8b8 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b406d818 <col:22> 'long double' lvalue ParmVar 0x7fb3b406d5a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b406d8d0 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406d840 <col:32> 'long double' lvalue ParmVar 0x7fb3b406d620 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b406d768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406d7b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b406e180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1087:1, line:1101:1> line:1095:1 copysign
| | |-TemplateTypeParmDecl 0x7fb3b406d920 <line:1087:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b406d988 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b406e0e8 <line:1088:1, line:1101:1> line:1095:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b406df90 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b406e000 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b406e9a8 <line:1096:1, line:1101:1>
| |   | |-DeclStmt 0x7fb3b406e3f8 <line:1097:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b406e3a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b406e330 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b406e7f0 <line:1098:5, line:1099:68>
| |   | | `-StaticAssertDecl 0x7fb3b406e7b8 <line:1098:5, line:1099:67> line:1098:5
| |   | |   |-ParenExpr 0x7fb3b406e770 <col:19, line:1099:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b406e750 <line:1098:20, line:1099:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b406e730 <line:1098:21, line:1099:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b406e708 <line:1098:22, line:1099:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b406e568 <line:1098:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b406e6c8 <line:1099:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b406e790 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b406e990 <line:1100:5, col:71>
| |   |   `-CallExpr 0x7fb3b406e958 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b406e828 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7fb3b5033e68 0x7fb3b406d300 0x7fb3b406d6c0 0x7fb3b406e180
| |   |     |-CStyleCastExpr 0x7fb3b406e8d0 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b406e898 <col:38> '_A1' lvalue ParmVar 0x7fb3b406df90 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b406e930 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b406e8f8 <col:63> '_A2' lvalue ParmVar 0x7fb3b406e000 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b406e1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b406e228 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406eab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1105:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406ea20 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b406eca8 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b406ec90 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b406ec48 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b406ec30 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406ebd0 <col:90, col:92> 'float (float)' lvalue Function 0x7fb3b502df00 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b406ec78 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406ec08 <col:97> 'float' lvalue ParmVar 0x7fb3b406ea20 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b406eb58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406eba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406eda8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1106:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406ed10 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b406ef98 <col:82, col:107>
| | | `-ReturnStmt 0x7fb3b406ef80 <col:83, col:105>
| | |   `-CallExpr 0x7fb3b406ef38 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b406ef20 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406eec0 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fb3b502e290 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b406ef68 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406eef8 <col:97> 'long double' lvalue ParmVar 0x7fb3b406ed10 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b406ee48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406ee90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b406f460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1108:1, line:1111:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7fb3b406efb8 <line:1108:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b406f3c8 <line:1109:1, line:1111:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b406f2f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b406f980 <col:29, col:61>
| |   | `-ReturnStmt 0x7fb3b406f968 <col:30, col:59>
| |   |   `-CallExpr 0x7fb3b406f938 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b406f920 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b406f8e8 <col:37, col:39> 'double (double)' lvalue Function 0x7fb3b502e0a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b406f5e0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b406f5a0 <col:51> '_A1' lvalue ParmVar 0x7fb3b406f2f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b406f4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b406f500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b406fa80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1115:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b406f9e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4070c78 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4070c60 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4070c18 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4070c00 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b406fb98 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b502e430 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4070c48 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b406fbd0 <col:99> 'float' lvalue ParmVar 0x7fb3b406f9e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b406fb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b406fb68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4070d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4070ce0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4070f68 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4070f50 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4070f08 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4070ef0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4070e90 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b502e770 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4070f38 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4070ec8 <col:99> 'long double' lvalue ParmVar 0x7fb3b4070ce0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4070e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4070e60 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4071430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1118:1, line:1121:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7fb3b4070f88 <line:1118:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4071398 <line:1119:1, line:1121:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b40712c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4071950 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4071938 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4071908 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b40718f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b40718b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b502e5d0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b40715b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4071570 <col:53> '_A1' lvalue ParmVar 0x7fb3b40712c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4071488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b40714d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4071a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1125:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40719b8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4071c40 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4071c28 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4071be0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4071bc8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4071b68 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b50243a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4071c10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4071ba0 <col:99> 'float' lvalue ParmVar 0x7fb3b40719b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4071af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4071b38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4071d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1126:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4071ca8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4071f30 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4071f18 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4071ed0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4071eb8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4071e58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b50246e0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4071f00 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4071e90 <col:99> 'long double' lvalue ParmVar 0x7fb3b4071ca8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4071de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4071e28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b40723f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1128:1, line:1131:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7fb3b4071f50 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4072358 <line:1129:1, line:1131:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4072280 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4072910 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b40728f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b40728c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b40728b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4072878 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b5024540 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4072570 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4072530 <col:53> '_A1' lvalue ParmVar 0x7fb3b4072280 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4072448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4072490 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4072a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1135:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4072978 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4072c00 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b4072be8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4072ba0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4072b88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4072b28 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b5024880 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4072bd0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4072b60 <col:101> 'float' lvalue ParmVar 0x7fb3b4072978 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4072ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4072af8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4072d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1136:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4072c68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4072ef0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b4072ed8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4072e90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4072e78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4072e18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b5024bc0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4072ec0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4072e50 <col:101> 'long double' lvalue ParmVar 0x7fb3b4072c68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4072da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4072de8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b40733b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, line:1141:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7fb3b4072f10 <line:1138:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4073318 <line:1139:1, line:1141:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4073240 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40738d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b40738b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b4073888 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4073870 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4073838 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b5024a20 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4073530 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b40734f0 <col:55> '_A1' lvalue ParmVar 0x7fb3b4073240 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4073408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4073450 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4073a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1145:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4073938 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b40739b0 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b4073c90 <col:105, col:141>
| | | `-ReturnStmt 0x7fb3b4073c78 <col:106, col:139>
| | |   `-CallExpr 0x7fb3b4073c10 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4073bf8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4073b70 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fb3b5026768 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b4073c48 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4073ba8 <col:121> 'float' lvalue ParmVar 0x7fb3b4073938 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b4073c60 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4073bd0 <col:131> 'float' lvalue ParmVar 0x7fb3b40739b0 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4073af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4073b40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4073e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1146:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4073cf8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b4073d70 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b4074050 <col:105, col:141>
| | | `-ReturnStmt 0x7fb3b4074038 <col:106, col:139>
| | |   `-CallExpr 0x7fb3b4073fd0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4073fb8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4073f30 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fb3b5026bb8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b4074008 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4073f68 <col:121> 'long double' lvalue ParmVar 0x7fb3b4073cf8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b4074020 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4073f90 <col:131> 'long double' lvalue ParmVar 0x7fb3b4073d70 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4073eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4073f00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b40748b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1148:1, line:1162:1> line:1156:1 fdim
| | |-TemplateTypeParmDecl 0x7fb3b4074070 <line:1148:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b40740d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b4074818 <line:1149:1, line:1162:1> line:1156:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b40746c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b4074730 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b40770f8 <line:1157:1, line:1162:1>
| |   | |-DeclStmt 0x7fb3b4074b28 <line:1158:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b4074ad0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b4074a60 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b4076f40 <line:1159:5, line:1160:68>
| |   | | `-StaticAssertDecl 0x7fb3b4076f08 <line:1159:5, line:1160:67> line:1159:5
| |   | |   |-ParenExpr 0x7fb3b4076ec0 <col:19, line:1160:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b4076ea0 <line:1159:20, line:1160:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b4076e80 <line:1159:21, line:1160:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b4076e58 <line:1159:22, line:1160:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b4076cb8 <line:1159:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b4076e18 <line:1160:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b4076ee0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b40770e0 <line:1161:5, col:67>
| |   |   `-CallExpr 0x7fb3b40770a8 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b4076f78 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7fb3b5026990 0x7fb3b4073a50 0x7fb3b4073e10 0x7fb3b40748b0
| |   |     |-CStyleCastExpr 0x7fb3b4077020 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b4076fe8 <col:34> '_A1' lvalue ParmVar 0x7fb3b40746c0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b4077080 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4077048 <col:59> '_A2' lvalue ParmVar 0x7fb3b4074730 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b4074910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4074958 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4077308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1166:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4077170 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b40771e8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fb3b4077260 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7fb3b40775c0 <col:126, col:171>
| | | `-ReturnStmt 0x7fb3b40775a8 <col:127, col:169>
| | |   `-CallExpr 0x7fb3b4077520 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4077508 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4077430 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7fb3b5039ba8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b4077560 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4077468 <col:141> 'float' lvalue ParmVar 0x7fb3b4077170 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4077578 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4077490 <col:151> 'float' lvalue ParmVar 0x7fb3b40771e8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b4077590 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40774b8 <col:161> 'float' lvalue ParmVar 0x7fb3b4077260 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40773b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4077400 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40777c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1167:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4077628 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b40776a0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fb3b4077718 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7fb3b4077a80 <col:126, col:171>
| | | `-ReturnStmt 0x7fb3b4077a68 <col:127, col:169>
| | |   `-CallExpr 0x7fb3b40779e0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b40779c8 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40778e8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7fb3b502a288 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b4077a20 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4077920 <col:141> 'long double' lvalue ParmVar 0x7fb3b4077628 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4077a38 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4077948 <col:151> 'long double' lvalue ParmVar 0x7fb3b40776a0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b4077a50 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4077970 <col:161> 'long double' lvalue ParmVar 0x7fb3b4077718 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4077870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40778b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b40786d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1169:1, line:1185:1> line:1178:1 fma
| | |-TemplateTypeParmDecl 0x7fb3b4077aa0 <line:1169:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b4077b08 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7fb3b4077b78 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7fb3b4078638 <line:1170:1, line:1185:1> line:1178:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4078410 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b4078480 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fb3b40784f0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7fb3b4079290 <line:1179:1, line:1185:1>
| |   | |-DeclStmt 0x7fb3b40789d8 <line:1180:5, col:71>
| |   | | `-TypedefDecl 0x7fb3b4078980 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7fb3b4078910 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7fb3b4079070 <line:1181:5, line:1183:68>
| |   | | `-StaticAssertDecl 0x7fb3b4079038 <line:1181:5, line:1183:67> line:1181:5
| |   | |   |-ParenExpr 0x7fb3b4078ff0 <col:19, line:1183:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b4078fd0 <line:1181:20, line:1183:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b4078fb0 <line:1181:21, line:1183:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b4078f88 <line:1181:22, line:1183:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7fb3b4078da8 <line:1181:22, line:1182:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7fb3b4078ba8 <line:1181:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7fb3b4078d68 <line:1182:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b4078f48 <line:1183:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b4079010 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b4079278 <line:1184:5, col:91>
| |   |   `-CallExpr 0x7fb3b4079238 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b40790a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7fb3b5039ef8 0x7fb3b4077308 0x7fb3b40777c0 0x7fb3b40786d0
| |   |     |-CStyleCastExpr 0x7fb3b4079150 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b4079118 <col:33> '_A1' lvalue ParmVar 0x7fb3b4078410 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fb3b40791b0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b4079178 <col:58> '_A2' lvalue ParmVar 0x7fb3b4078480 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7fb3b4079210 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b40791d8 <col:83> '_A3' lvalue ParmVar 0x7fb3b40784f0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7fb3b4078738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4078780 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4079420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4079308 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b4079380 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b4079660 <col:105, col:141>
| | | `-ReturnStmt 0x7fb3b4079648 <col:106, col:139>
| | |   `-CallExpr 0x7fb3b40795e0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b40795c8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4079540 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fb3b5026de0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b4079618 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4079578 <col:121> 'float' lvalue ParmVar 0x7fb3b4079308 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b4079630 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40795a0 <col:131> 'float' lvalue ParmVar 0x7fb3b4079380 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40794c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4079510 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40797e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40796c8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b4079740 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b4079a20 <col:105, col:141>
| | | `-ReturnStmt 0x7fb3b4079a08 <col:106, col:139>
| | |   `-CallExpr 0x7fb3b40799a0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4079988 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4079900 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fb3b5039238 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b40799d8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4079938 <col:121> 'long double' lvalue ParmVar 0x7fb3b40796c8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b40799f0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4079960 <col:131> 'long double' lvalue ParmVar 0x7fb3b4079740 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4079888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40798d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b407a280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1206:1> line:1200:1 fmax
| | |-TemplateTypeParmDecl 0x7fb3b4079a40 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b4079aa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b407a1e8 <line:1193:1, line:1206:1> line:1200:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b407a090 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b407a100 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b407aaa8 <line:1201:1, line:1206:1>
| |   | |-DeclStmt 0x7fb3b407a4f8 <line:1202:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b407a4a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b407a430 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b407a8f0 <line:1203:5, line:1204:68>
| |   | | `-StaticAssertDecl 0x7fb3b407a8b8 <line:1203:5, line:1204:67> line:1203:5
| |   | |   |-ParenExpr 0x7fb3b407a870 <col:19, line:1204:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b407a850 <line:1203:20, line:1204:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b407a830 <line:1203:21, line:1204:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b407a808 <line:1203:22, line:1204:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b407a668 <line:1203:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b407a7c8 <line:1204:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b407a890 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b407aa90 <line:1205:5, col:67>
| |   |   `-CallExpr 0x7fb3b407aa58 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b407a928 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7fb3b5027008 0x7fb3b4079420 0x7fb3b40797e0 0x7fb3b407a280
| |   |     |-CStyleCastExpr 0x7fb3b407a9d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b407a998 <col:34> '_A1' lvalue ParmVar 0x7fb3b407a090 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b407aa30 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b407a9f8 <col:59> '_A2' lvalue ParmVar 0x7fb3b407a100 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b407a2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b407a328 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407ac40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407ab20 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b407ab98 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b407ae80 <col:105, col:141>
| | | `-ReturnStmt 0x7fb3b407ae68 <col:106, col:139>
| | |   `-CallExpr 0x7fb3b407ae00 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b407ade8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407ad60 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fb3b5039460 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b407ae38 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b407ad98 <col:121> 'float' lvalue ParmVar 0x7fb3b407ab20 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b407ae50 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407adc0 <col:131> 'float' lvalue ParmVar 0x7fb3b407ab98 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b407ace8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407ad30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407b000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1211:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407aee8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b407af60 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b407b240 <col:105, col:141>
| | | `-ReturnStmt 0x7fb3b407b228 <col:106, col:139>
| | |   `-CallExpr 0x7fb3b407b1c0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b407b1a8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407b120 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fb3b50398b0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b407b1f8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b407b158 <col:121> 'long double' lvalue ParmVar 0x7fb3b407aee8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b407b210 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407b180 <col:131> 'long double' lvalue ParmVar 0x7fb3b407af60 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b407b0a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407b0f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b407baa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1213:1, line:1227:1> line:1221:1 fmin
| | |-TemplateTypeParmDecl 0x7fb3b407b260 <line:1213:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b407b2c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b407ba08 <line:1214:1, line:1227:1> line:1221:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b407b8b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b407b920 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b407c2c8 <line:1222:1, line:1227:1>
| |   | |-DeclStmt 0x7fb3b407bd18 <line:1223:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b407bcc0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b407bc50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b407c110 <line:1224:5, line:1225:68>
| |   | | `-StaticAssertDecl 0x7fb3b407c0d8 <line:1224:5, line:1225:67> line:1224:5
| |   | |   |-ParenExpr 0x7fb3b407c090 <col:19, line:1225:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b407c070 <line:1224:20, line:1225:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b407c050 <line:1224:21, line:1225:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b407c028 <line:1224:22, line:1225:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b407be88 <line:1224:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b407bfe8 <line:1225:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b407c0b0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b407c2b0 <line:1226:5, col:67>
| |   |   `-CallExpr 0x7fb3b407c278 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b407c148 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7fb3b5039688 0x7fb3b407ac40 0x7fb3b407b000 0x7fb3b407baa0
| |   |     |-CStyleCastExpr 0x7fb3b407c1f0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b407c1b8 <col:34> '_A1' lvalue ParmVar 0x7fb3b407b8b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b407c250 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b407c218 <col:59> '_A2' lvalue ParmVar 0x7fb3b407b920 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b407bb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b407bb48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407c458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1231:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407c340 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b407c3b8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b407c698 <col:106, col:143>
| | | `-ReturnStmt 0x7fb3b407c680 <col:107, col:141>
| | |   `-CallExpr 0x7fb3b407c618 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b407c600 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407c578 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fb3b502cd30 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b407c650 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b407c5b0 <col:123> 'float' lvalue ParmVar 0x7fb3b407c340 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b407c668 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407c5d8 <col:133> 'float' lvalue ParmVar 0x7fb3b407c3b8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b407c500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407c548 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407c818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407c700 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b407c778 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b407ca58 <col:106, col:143>
| | | `-ReturnStmt 0x7fb3b407ca40 <col:107, col:141>
| | |   `-CallExpr 0x7fb3b407c9d8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b407c9c0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407c938 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fb3b502d200 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b407ca10 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b407c970 <col:123> 'long double' lvalue ParmVar 0x7fb3b407c700 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b407ca28 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407c998 <col:133> 'long double' lvalue ParmVar 0x7fb3b407c778 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b407c8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407c908 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b407d300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1234:1, line:1248:1> line:1242:1 hypot
| | |-TemplateTypeParmDecl 0x7fb3b407ca78 <line:1234:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b407cae8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b407d268 <line:1235:1, line:1248:1> line:1242:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b407d110 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b407d180 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b407db28 <line:1243:1, line:1248:1>
| |   | |-DeclStmt 0x7fb3b407d578 <line:1244:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b407d520 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b407d4b0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b407d970 <line:1245:5, line:1246:68>
| |   | | `-StaticAssertDecl 0x7fb3b407d938 <line:1245:5, line:1246:67> line:1245:5
| |   | |   |-ParenExpr 0x7fb3b407d8f0 <col:19, line:1246:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b407d8d0 <line:1245:20, line:1246:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b407d8b0 <line:1245:21, line:1246:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b407d888 <line:1245:22, line:1246:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b407d6e8 <line:1245:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b407d848 <line:1246:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b407d910 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b407db10 <line:1247:5, col:68>
| |   |   `-CallExpr 0x7fb3b407dad8 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b407d9a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7fb3b502cf58 0x7fb3b407c458 0x7fb3b407c818 0x7fb3b407d300
| |   |     |-CStyleCastExpr 0x7fb3b407da50 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b407da18 <col:35> '_A1' lvalue ParmVar 0x7fb3b407d110 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b407dab0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b407da78 <col:60> '_A2' lvalue ParmVar 0x7fb3b407d180 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b407d360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b407d3a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407dc38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407dba0 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b407de28 <col:76, col:103>
| | | `-ReturnStmt 0x7fb3b407de10 <col:77, col:101>
| | |   `-CallExpr 0x7fb3b407ddc8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fb3b407ddb0 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407dd50 <col:84, col:86> 'int (float)' lvalue Function 0x7fb3b5029ea0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7fb3b407ddf8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407dd88 <col:93> 'float' lvalue ParmVar 0x7fb3b407dba0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b407dcd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407dd20 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407df28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1253:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407de90 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b407e118 <col:76, col:103>
| | | `-ReturnStmt 0x7fb3b407e100 <col:77, col:101>
| | |   `-CallExpr 0x7fb3b407e0b8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fb3b407e0a0 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407e040 <col:84, col:86> 'int (long double)' lvalue Function 0x7fb3b502b290 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b407e0e8 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407e078 <col:93> 'long double' lvalue ParmVar 0x7fb3b407de90 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b407dfc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407e010 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b407e5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1255:1, line:1258:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7fb3b407e138 <line:1255:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b407e548 <line:1256:1, line:1258:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b407e470 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b407edb8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b407eda0 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b407ed70 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7fb3b407ed58 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b407ed20 <col:39, col:41> 'int (double)' lvalue Function 0x7fb3b502a078 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7fb3b407e760 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b407e720 <col:55> '_A1' lvalue ParmVar 0x7fb3b407e470 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b407e638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b407e680 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407eeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407ee20 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b407f0a8 <col:85, col:113>
| | | `-ReturnStmt 0x7fb3b407f090 <col:86, col:111>
| | |   `-CallExpr 0x7fb3b407f048 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b407f030 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407efd0 <col:93, col:95> 'float (float)' lvalue Function 0x7fb3b502e910 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b407f078 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407f008 <col:103> 'float' lvalue ParmVar 0x7fb3b407ee20 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b407ef58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407efa0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407f1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1263:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407f110 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b407f398 <col:85, col:113>
| | | `-ReturnStmt 0x7fb3b407f380 <col:86, col:111>
| | |   `-CallExpr 0x7fb3b407f338 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b407f320 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407f2c0 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fb3b502ec30 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b407f368 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407f2f8 <col:103> 'long double' lvalue ParmVar 0x7fb3b407f110 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b407f248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407f290 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b407f860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1265:1, line:1268:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7fb3b407f3b8 <line:1265:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b407f7c8 <line:1266:1, line:1268:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b407f6f0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b407fd80 <col:32, col:67>
| |   | `-ReturnStmt 0x7fb3b407fd68 <col:33, col:65>
| |   |   `-CallExpr 0x7fb3b407fd38 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b407fd20 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b407fce8 <col:40, col:42> 'double (double)' lvalue Function 0x7fb3b502eaa0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b407f9e0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b407f9a0 <col:57> '_A1' lvalue ParmVar 0x7fb3b407f6f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b407f8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b407f900 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b407fe80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b407fde8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40800a0 <col:83, col:111>
| | | `-ReturnStmt 0x7fb3b4080088 <col:84, col:109>
| | |   `-CallExpr 0x7fb3b4080040 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fb3b4080028 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b407ff98 <col:91, col:93> 'long long (float)' lvalue Function 0x7fb3b5031688 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4080070 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b407ffd0 <col:101> 'float' lvalue ParmVar 0x7fb3b407fde8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b407ff20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b407ff68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40801a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1273:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4080108 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40803c0 <col:83, col:111>
| | | `-ReturnStmt 0x7fb3b40803a8 <col:84, col:109>
| | |   `-CallExpr 0x7fb3b4080360 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fb3b4080348 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40802b8 <col:91, col:93> 'long long (long double)' lvalue Function 0x7fb3b5031ac8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4080390 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40802f0 <col:101> 'long double' lvalue ParmVar 0x7fb3b4080108 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4080240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4080288 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4080970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1275:1, line:1278:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7fb3b40803e0 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b40808d8 <line:1276:1, line:1278:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b40807c0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4081148 <col:32, col:67>
| |   | `-ReturnStmt 0x7fb3b4081130 <col:33, col:65>
| |   |   `-CallExpr 0x7fb3b4081100 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7fb3b40810e8 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4081088 <col:40, col:42> 'long long (double)' lvalue Function 0x7fb3b50318a8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4080af0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4080ab0 <col:57> '_A1' lvalue ParmVar 0x7fb3b40807c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b40809c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4080a10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4081248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40811b0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4081438 <col:84, col:113>
| | | `-ReturnStmt 0x7fb3b4081420 <col:85, col:111>
| | |   `-CallExpr 0x7fb3b40813d8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fb3b40813c0 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4081360 <col:92, col:94> 'long long (float)' lvalue Function 0x7fb3b5031ca8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4081408 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4081398 <col:103> 'float' lvalue ParmVar 0x7fb3b40811b0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40812e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4081330 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4081538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1283:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40814a0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4081728 <col:84, col:113>
| | | `-ReturnStmt 0x7fb3b4081710 <col:85, col:111>
| | |   `-CallExpr 0x7fb3b40816c8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fb3b40816b0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4081650 <col:92, col:94> 'long long (long double)' lvalue Function 0x7fb3b5031fe8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b40816f8 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4081688 <col:103> 'long double' lvalue ParmVar 0x7fb3b40814a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b40815d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4081620 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4081bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1285:1, line:1288:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7fb3b4081748 <line:1285:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4081b58 <line:1286:1, line:1288:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4081a80 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4082110 <col:33, col:69>
| |   | `-ReturnStmt 0x7fb3b40820f8 <col:34, col:67>
| |   |   `-CallExpr 0x7fb3b40820c8 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7fb3b40820b0 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4082078 <col:41, col:43> 'long long (double)' lvalue Function 0x7fb3b5031e48 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4081d70 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4081d30 <col:59> '_A1' lvalue ParmVar 0x7fb3b4081a80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4081c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4081c90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4082210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1292:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4082178 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4082400 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b40823e8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b40823a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4082388 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4082328 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b5025c50 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40823d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4082360 <col:101> 'float' lvalue ParmVar 0x7fb3b4082178 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40822b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40822f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4082500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1293:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4082468 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40826f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b40826d8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4082690 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4082678 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4082618 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b5025f90 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b40826c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4082650 <col:101> 'long double' lvalue ParmVar 0x7fb3b4082468 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b40825a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40825e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4082bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1295:1, line:1298:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7fb3b4082710 <line:1295:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4082b18 <line:1296:1, line:1298:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4082a40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40830d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b40830b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b4083088 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4083070 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4083038 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b5025df0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4082d30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4082cf0 <col:55> '_A1' lvalue ParmVar 0x7fb3b4082a40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4082c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4082c50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40831d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4083138 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40833c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b40833a8 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4083360 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4083348 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40832e8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b5025770 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4083390 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4083320 <col:99> 'float' lvalue ParmVar 0x7fb3b4083138 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4083270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40832b8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40834c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4083428 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40836b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4083698 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4083650 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4083638 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40835d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b5025ab0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4083680 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4083610 <col:99> 'long double' lvalue ParmVar 0x7fb3b4083428 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4083560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40835a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4083b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7fb3b40836d0 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4083ad8 <line:1306:1, line:1308:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4083a00 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4084090 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4084078 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4084048 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4084030 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4083ff8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b5025910 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4083cf0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4083cb0 <col:53> '_A1' lvalue ParmVar 0x7fb3b4083a00 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4083bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4083c10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4084190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40840f8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4084380 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4084368 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4084320 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4084308 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40842a8 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b5026130 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4084350 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40842e0 <col:99> 'float' lvalue ParmVar 0x7fb3b40840f8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4084230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4084278 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4084480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40843e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4084670 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b4084658 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b4084610 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b40845f8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4084598 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b5027490 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4084640 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40845d0 <col:99> 'long double' lvalue ParmVar 0x7fb3b40843e8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4084520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4084568 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4084b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1318:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7fb3b4084690 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4084a98 <line:1316:1, line:1318:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b40849c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4086050 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b4086038 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b4086008 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4085ff0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4085fb8 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b50272f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4085cb0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4085c70 <col:53> '_A1' lvalue ParmVar 0x7fb3b40849c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4084b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4084bd0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4086150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1322:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40860b8 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4086370 <col:77, col:104>
| | | `-ReturnStmt 0x7fb3b4086358 <col:78, col:102>
| | |   `-CallExpr 0x7fb3b4086310 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fb3b40862f8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4086268 <col:85, col:87> 'long (float)' lvalue Function 0x7fb3b5030668 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4086340 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40862a0 <col:94> 'float' lvalue ParmVar 0x7fb3b40860b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40861f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4086238 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4086470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1323:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40863d8 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4086690 <col:77, col:104>
| | | `-ReturnStmt 0x7fb3b4086678 <col:78, col:102>
| | |   `-CallExpr 0x7fb3b4086630 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fb3b4086618 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4086588 <col:85, col:87> 'long (long double)' lvalue Function 0x7fb3b5030aa8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4086660 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40865c0 <col:94> 'long double' lvalue ParmVar 0x7fb3b40863d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4086510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4086558 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4086c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1325:1, line:1328:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7fb3b40866b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4086ba8 <line:1326:1, line:1328:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4086a90 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40873f8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b40873e0 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b40873b0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7fb3b4087398 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4087338 <col:39, col:41> 'long (double)' lvalue Function 0x7fb3b5030888 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4086dc0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4086d80 <col:55> '_A1' lvalue ParmVar 0x7fb3b4086a90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4086c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4086ce0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40874f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1332:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4087460 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40876e8 <col:78, col:106>
| | | `-ReturnStmt 0x7fb3b40876d0 <col:79, col:104>
| | |   `-CallExpr 0x7fb3b4087688 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fb3b4087670 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4087610 <col:86, col:88> 'long (float)' lvalue Function 0x7fb3b5031168 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40876b8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4087648 <col:96> 'float' lvalue ParmVar 0x7fb3b4087460 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4087598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40875e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40877e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4087750 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40879d8 <col:78, col:106>
| | | `-ReturnStmt 0x7fb3b40879c0 <col:79, col:104>
| | |   `-CallExpr 0x7fb3b4087978 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fb3b4087960 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4087900 <col:86, col:88> 'long (long double)' lvalue Function 0x7fb3b50314a8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b40879a8 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4087938 <col:96> 'long double' lvalue ParmVar 0x7fb3b4087750 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4087888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40878d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4087ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1335:1, line:1338:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7fb3b40879f8 <line:1335:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4087e08 <line:1336:1, line:1338:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4087d30 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40883c0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fb3b40883a8 <col:33, col:65>
| |   |   `-CallExpr 0x7fb3b4088378 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7fb3b4088360 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4088328 <col:40, col:42> 'long (double)' lvalue Function 0x7fb3b5031308 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4088020 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4087fe0 <col:57> '_A1' lvalue ParmVar 0x7fb3b4087d30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4087ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4087f40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40884c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1344:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4088428 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b40886b0 <col:88, col:119>
| | | `-ReturnStmt 0x7fb3b4088698 <col:89, col:117>
| | |   `-CallExpr 0x7fb3b4088650 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4088638 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40885d8 <col:96, col:98> 'float (float)' lvalue Function 0x7fb3b502fc68 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4088680 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4088610 <col:109> 'float' lvalue ParmVar 0x7fb3b4088428 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b4088560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40885a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40887b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1345:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4088718 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40889a0 <col:88, col:119>
| | | `-ReturnStmt 0x7fb3b4088988 <col:89, col:117>
| | |   `-CallExpr 0x7fb3b4088940 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4088928 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40888c8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7fb3b502ffa8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4088970 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4088900 <col:109> 'long double' lvalue ParmVar 0x7fb3b4088718 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4088850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4088898 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4088e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1347:1, line:1350:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7fb3b40889c0 <line:1347:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4088dc8 <line:1348:1, line:1350:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4088cf0 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4089380 <col:35, col:73>
| |   | `-ReturnStmt 0x7fb3b4089368 <col:36, col:71>
| |   |   `-CallExpr 0x7fb3b4089338 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4089320 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b40892e8 <col:43, col:45> 'double (double)' lvalue Function 0x7fb3b502fe08 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4088fe0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4088fa0 <col:63> '_A1' lvalue ParmVar 0x7fb3b4088cf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4088eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4088f00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4089500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40893e8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b4089460 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b4089740 <col:110, col:151>
| | | `-ReturnStmt 0x7fb3b4089728 <col:111, col:149>
| | |   `-CallExpr 0x7fb3b40896c0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b40896a8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4089620 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fb3b5034968 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b40896f8 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4089658 <col:131> 'float' lvalue ParmVar 0x7fb3b40893e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b4089710 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4089680 <col:141> 'float' lvalue ParmVar 0x7fb3b4089460 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40895a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40895f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b40898c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40897a8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b4089820 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b4089b00 <col:110, col:151>
| | | `-ReturnStmt 0x7fb3b4089ae8 <col:111, col:149>
| | |   `-CallExpr 0x7fb3b4089a80 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4089a68 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40899e0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fb3b5034db8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b4089ab8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4089a18 <col:131> 'long double' lvalue ParmVar 0x7fb3b40897a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b4089ad0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4089a40 <col:141> 'long double' lvalue ParmVar 0x7fb3b4089820 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4089968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40899b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b408a360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1371:1> line:1365:1 nextafter
| | |-TemplateTypeParmDecl 0x7fb3b4089b20 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b4089b88 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b408a2c8 <line:1358:1, line:1371:1> line:1365:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b408a170 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b408a1e0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b408ab88 <line:1366:1, line:1371:1>
| |   | |-DeclStmt 0x7fb3b408a5d8 <line:1367:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b408a580 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b408a510 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b408a9d0 <line:1368:5, line:1369:68>
| |   | | `-StaticAssertDecl 0x7fb3b408a998 <line:1368:5, line:1369:67> line:1368:5
| |   | |   |-ParenExpr 0x7fb3b408a950 <col:19, line:1369:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b408a930 <line:1368:20, line:1369:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b408a910 <line:1368:21, line:1369:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b408a8e8 <line:1368:22, line:1369:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b408a748 <line:1368:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b408a8a8 <line:1369:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b408a970 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b408ab70 <line:1370:5, col:72>
| |   |   `-CallExpr 0x7fb3b408ab38 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b408aa08 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7fb3b5034b90 0x7fb3b4089500 0x7fb3b40898c0 0x7fb3b408a360
| |   |     |-CStyleCastExpr 0x7fb3b408aab0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b408aa78 <col:39> '_A1' lvalue ParmVar 0x7fb3b408a170 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b408ab10 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b408aad8 <col:64> '_A2' lvalue ParmVar 0x7fb3b408a1e0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b408a3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b408a408 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b408ad18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b408ac00 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b408ac78 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b408af80 <col:111, col:153>
| | | `-ReturnStmt 0x7fb3b408af68 <col:112, col:151>
| | |   `-CallExpr 0x7fb3b408af00 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b408aee8 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b408ae38 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7fb3b50262d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b408af38 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b408ae70 <col:133> 'float' lvalue ParmVar 0x7fb3b408ac00 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b408af50 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b408ae98 <col:143> 'long double' lvalue ParmVar 0x7fb3b408ac78 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b408adc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b408ae08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b408b100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1376:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b408afe8 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b408b060 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b408b340 <col:111, col:153>
| | | `-ReturnStmt 0x7fb3b408b328 <col:112, col:151>
| | |   `-CallExpr 0x7fb3b408b2c0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b408b2a8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b408b220 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7fb3b5026540 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b408b2f8 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b408b258 <col:133> 'long double' lvalue ParmVar 0x7fb3b408afe8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b408b310 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b408b280 <col:143> 'long double' lvalue ParmVar 0x7fb3b408b060 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b408b1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b408b1f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b408b8d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1378:1, line:1381:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7fb3b408b360 <line:1378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b408b838 <line:1379:1, line:1381:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b408b690 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b408b708 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7fb3b408be68 <col:58, col:107>
| |   | `-ReturnStmt 0x7fb3b408be50 <col:59, col:105>
| |   |   `-CallExpr 0x7fb3b408be00 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b408bde8 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b408bd88 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7fb3b5035028 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7fb3b408ba58 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b408ba18 <col:87> '_A1' lvalue ParmVar 0x7fb3b408b690 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb3b408be38 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb3b408ba80 <col:97> 'long double' lvalue ParmVar 0x7fb3b408b708 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7fb3b408b930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b408b978 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b408bfe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b408bed0 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b408bf48 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fb3b408c228 <col:110, col:151>
| | | `-ReturnStmt 0x7fb3b408c210 <col:111, col:149>
| | |   `-CallExpr 0x7fb3b408c1a8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b408c190 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b408c108 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fb3b5032dd8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fb3b408c1e0 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b408c140 <col:131> 'float' lvalue ParmVar 0x7fb3b408bed0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b408c1f8 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b408c168 <col:141> 'float' lvalue ParmVar 0x7fb3b408bf48 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fb3b408c090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b408c0d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b408c3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1386:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b408c290 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b408c308 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fb3b408c5e8 <col:110, col:151>
| | | `-ReturnStmt 0x7fb3b408c5d0 <col:111, col:149>
| | |   `-CallExpr 0x7fb3b408c568 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b408c550 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b408c4c8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fb3b5033238 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fb3b408c5a0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b408c500 <col:131> 'long double' lvalue ParmVar 0x7fb3b408c290 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b408c5b8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b408c528 <col:141> 'long double' lvalue ParmVar 0x7fb3b408c308 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b408c450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b408c498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b408ce50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1388:1, line:1402:1> line:1396:1 remainder
| | |-TemplateTypeParmDecl 0x7fb3b408c608 <line:1388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b408c678 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b408cdb8 <line:1389:1, line:1402:1> line:1396:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b408cc60 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b408ccd0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fb3b408d678 <line:1397:1, line:1402:1>
| |   | |-DeclStmt 0x7fb3b408d0c8 <line:1398:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b408d070 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b408d000 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b408d4c0 <line:1399:5, line:1400:68>
| |   | | `-StaticAssertDecl 0x7fb3b408d488 <line:1399:5, line:1400:67> line:1399:5
| |   | |   |-ParenExpr 0x7fb3b408d440 <col:19, line:1400:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b408d420 <line:1399:20, line:1400:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b408d400 <line:1399:21, line:1400:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b408d3d8 <line:1399:22, line:1400:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b408d238 <line:1399:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b408d398 <line:1400:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b408d460 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b408d660 <line:1401:5, col:72>
| |   |   `-CallExpr 0x7fb3b408d628 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b408d4f8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7fb3b5033000 0x7fb3b408bfe8 0x7fb3b408c3a8 0x7fb3b408ce50
| |   |     |-CStyleCastExpr 0x7fb3b408d5a0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b408d568 <col:39> '_A1' lvalue ParmVar 0x7fb3b408cc60 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fb3b408d600 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b408d5c8 <col:64> '_A2' lvalue ParmVar 0x7fb3b408ccd0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fb3b408ceb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b408cef8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b408d8d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1406:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fb3b408d6f0 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b408d768 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fb3b408d7e0 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fb3b408db90 <col:122, col:170>
| | | `-ReturnStmt 0x7fb3b408db78 <col:123, col:168>
| | |   `-CallExpr 0x7fb3b408daf0 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b408dad8 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b408d9f8 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7fb3b5033528 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7fb3b408db30 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b408da30 <col:140> 'float' lvalue ParmVar 0x7fb3b408d6f0 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fb3b408db48 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b408da58 <col:150> 'float' lvalue ParmVar 0x7fb3b408d768 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b408db60 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b408da80 <col:160> 'int *' lvalue ParmVar 0x7fb3b408d7e0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fb3b408d980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b408d9c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b408dde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fb3b408dc00 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b408dc78 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fb3b408dcf0 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fb3b408e0a0 <col:122, col:170>
| | | `-ReturnStmt 0x7fb3b408e088 <col:123, col:168>
| | |   `-CallExpr 0x7fb3b408e000 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b408dfe8 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b408df08 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7fb3b5033a68 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7fb3b408e040 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b408df40 <col:140> 'long double' lvalue ParmVar 0x7fb3b408dc00 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b408e058 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b408df68 <col:150> 'long double' lvalue ParmVar 0x7fb3b408dc78 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b408e070 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b408df90 <col:160> 'int *' lvalue ParmVar 0x7fb3b408dcf0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fb3b408de90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b408ded8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b408e9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1409:1, line:1423:1> line:1417:1 remquo
| | |-TemplateTypeParmDecl 0x7fb3b408e0c0 <line:1409:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fb3b408e128 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fb3b408e948 <line:1410:1, line:1423:1> line:1417:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b408e710 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b408e780 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fb3b408e7f8 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7fb3b408f238 <line:1418:1, line:1423:1>
| |   | |-DeclStmt 0x7fb3b408ec58 <line:1419:5, col:66>
| |   | | `-TypedefDecl 0x7fb3b408ec00 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fb3b408eb90 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fb3b408f050 <line:1420:5, line:1421:68>
| |   | | `-StaticAssertDecl 0x7fb3b408f018 <line:1420:5, line:1421:67> line:1420:5
| |   | |   |-ParenExpr 0x7fb3b408efd0 <col:19, line:1421:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fb3b408efb0 <line:1420:20, line:1421:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fb3b408ef90 <line:1420:21, line:1421:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fb3b408ef68 <line:1420:22, line:1421:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fb3b408edc8 <line:1420:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fb3b408ef28 <line:1421:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fb3b408eff0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fb3b408f220 <line:1422:5, col:79>
| |   |   `-CallExpr 0x7fb3b408f1e0 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fb3b408f088 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7fb3b50337c8 0x7fb3b408d8d0 0x7fb3b408dde0 0x7fb3b408e9e0
| |   |     |-CStyleCastExpr 0x7fb3b408f130 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b408f0f8 <col:36> '_A1' lvalue ParmVar 0x7fb3b408e710 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fb3b408f190 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b408f158 <col:61> '_A2' lvalue ParmVar 0x7fb3b408e780 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7fb3b408f1b8 <col:71> 'int *' lvalue ParmVar 0x7fb3b408e7f8 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7fb3b408ea48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b408ea90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b408f348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1427:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b408f2b0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b408f538 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b408f520 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b408f4d8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b408f4c0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b408f460 <col:91, col:93> 'float (float)' lvalue Function 0x7fb3b5030148 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b408f508 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b408f498 <col:99> 'float' lvalue ParmVar 0x7fb3b408f2b0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b408f3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b408f430 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b408f638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1428:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b408f5a0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b408f828 <col:83, col:109>
| | | `-ReturnStmt 0x7fb3b408f810 <col:84, col:107>
| | |   `-CallExpr 0x7fb3b408f7c8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b408f7b0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b408f750 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fb3b5030490 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b408f7f8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b408f788 <col:99> 'long double' lvalue ParmVar 0x7fb3b408f5a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b408f6d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b408f720 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b408fcf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1430:1, line:1433:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7fb3b408f848 <line:1430:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b408fc58 <line:1431:1, line:1433:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b408fb80 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4090210 <col:30, col:63>
| |   | `-ReturnStmt 0x7fb3b40901f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fb3b40901c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b40901b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4090178 <col:38, col:40> 'double (double)' lvalue Function 0x7fb3b50302f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b408fe70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b408fe30 <col:53> '_A1' lvalue ParmVar 0x7fb3b408fb80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b408fd48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b408fd90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4090310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1437:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4090278 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4090500 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b40904e8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b40904a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4090488 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4090428 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b5030c88 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40904d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4090460 <col:101> 'float' lvalue ParmVar 0x7fb3b4090278 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40903b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40903f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4090600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1438:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4090568 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b40907f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b40907d8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4090790 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4090778 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4090718 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b5030fc8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b40907c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4090750 <col:101> 'long double' lvalue ParmVar 0x7fb3b4090568 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b40906a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40906e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4090cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1440:1, line:1443:65> col:1 round
| | |-TemplateTypeParmDecl 0x7fb3b4090810 <line:1440:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4090c18 <line:1441:1, line:1443:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4090b40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b40911d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fb3b40911b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fb3b4091188 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4091170 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4091138 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b5030e28 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4090e30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4090df0 <col:55> '_A1' lvalue ParmVar 0x7fb3b4090b40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4090d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4090d50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4091350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1447:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4091238 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b40912b0 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fb3b40915c0 <col:101, col:140>
| | | `-ReturnStmt 0x7fb3b40915a8 <col:102, col:138>
| | |   `-CallExpr 0x7fb3b4091540 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4091528 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4091470 <col:109, col:111> 'float (float, long)' lvalue Function 0x7fb3b502bba8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7fb3b4091578 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b40914a8 <col:120> 'float' lvalue ParmVar 0x7fb3b4091238 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b4091590 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40914d0 <col:130> 'long' lvalue ParmVar 0x7fb3b40912b0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fb3b40913f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4091440 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4091740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1448:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4091628 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b40916a0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fb3b40919b0 <col:101, col:140>
| | | `-ReturnStmt 0x7fb3b4091998 <col:102, col:138>
| | |   `-CallExpr 0x7fb3b4091930 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4091918 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4091860 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7fb3b502c108 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7fb3b4091968 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4091898 <col:120> 'long double' lvalue ParmVar 0x7fb3b4091628 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b4091980 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40918c0 <col:130> 'long' lvalue ParmVar 0x7fb3b40916a0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fb3b40917e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4091830 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b4091f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1450:1, line:1453:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7fb3b40919d0 <line:1450:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4091ed8 <line:1451:1, line:1453:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4091d30 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b4091da8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7fb3b4092508 <col:48, col:94>
| |   | `-ReturnStmt 0x7fb3b40924f0 <col:49, col:92>
| |   |   `-CallExpr 0x7fb3b40924a0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b4092488 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4092428 <col:56, col:58> 'double (double, long)' lvalue Function 0x7fb3b502be58 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7fb3b40920f8 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b40920b8 <col:74> '_A1' lvalue ParmVar 0x7fb3b4091d30 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb3b40924d8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb3b4092120 <col:84> 'long' lvalue ParmVar 0x7fb3b4091da8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7fb3b4091fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4092018 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4092688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1457:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4092570 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fb3b40925e8 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fb3b40928c8 <col:99, col:137>
| | | `-ReturnStmt 0x7fb3b40928b0 <col:100, col:135>
| | |   `-CallExpr 0x7fb3b4092848 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4092830 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b40927a8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7fb3b502b4e8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fb3b4092880 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b40927e0 <col:117> 'float' lvalue ParmVar 0x7fb3b4092570 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fb3b4092898 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4092808 <col:127> 'int' lvalue ParmVar 0x7fb3b40925e8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fb3b4092730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4092778 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4092a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1458:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4092930 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fb3b40929a8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fb3b4092c88 <col:99, col:137>
| | | `-ReturnStmt 0x7fb3b4092c70 <col:100, col:135>
| | |   `-CallExpr 0x7fb3b4092c08 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4092bf0 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4092b68 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7fb3b502b938 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fb3b4092c40 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fb3b4092ba0 <col:117> 'long double' lvalue ParmVar 0x7fb3b4092930 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fb3b4092c58 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4092bc8 <col:127> 'int' lvalue ParmVar 0x7fb3b40929a8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fb3b4092af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4092b38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b40931e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1460:1, line:1463:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7fb3b4092ca8 <line:1460:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4093148 <line:1461:1, line:1463:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4092fe0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fb3b4093058 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7fb3b4093750 <col:46, col:91>
| |   | `-ReturnStmt 0x7fb3b4093738 <col:47, col:89>
| |   |   `-CallExpr 0x7fb3b40936e8 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b40936d0 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4093698 <col:54, col:56> 'double (double, int)' lvalue Function 0x7fb3b502b710 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fb3b4093368 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fb3b4093328 <col:71> '_A1' lvalue ParmVar 0x7fb3b4092fe0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fb3b4093720 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fb3b4093390 <col:81> 'int' lvalue ParmVar 0x7fb3b4093058 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7fb3b4093240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4093288 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4093850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1467:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b40937b8 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4093a40 <col:85, col:113>
| | | `-ReturnStmt 0x7fb3b4093a28 <col:86, col:111>
| | |   `-CallExpr 0x7fb3b40939e0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b40939c8 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4093968 <col:93, col:95> 'float (float)' lvalue Function 0x7fb3b502edc0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b4093a10 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b40939a0 <col:103> 'float' lvalue ParmVar 0x7fb3b40937b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40938f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4093938 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4093b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1468:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4093aa8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4093d30 <col:85, col:113>
| | | `-ReturnStmt 0x7fb3b4093d18 <col:86, col:111>
| | |   `-CallExpr 0x7fb3b4093cd0 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4093cb8 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4093c58 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fb3b502f100 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4093d00 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4093c90 <col:103> 'long double' lvalue ParmVar 0x7fb3b4093aa8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4093be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4093c28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fb3b40941f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1470:1, line:1473:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7fb3b4093d50 <line:1470:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fb3b4094158 <line:1471:1, line:1473:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fb3b4094080 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fb3b4094710 <col:32, col:67>
| |   | `-ReturnStmt 0x7fb3b40946f8 <col:33, col:65>
| |   |   `-CallExpr 0x7fb3b40946c8 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fb3b40946b0 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fb3b4094678 <col:40, col:42> 'double (double)' lvalue Function 0x7fb3b502ef60 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fb3b4094370 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fb3b4094330 <col:57> '_A1' lvalue ParmVar 0x7fb3b4094080 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fb3b4094248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fb3b4094290 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4094810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1477:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4094778 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fb3b4094a00 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b40949e8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b40949a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fb3b4094988 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4094928 <col:92, col:94> 'float (float)' lvalue Function 0x7fb3b5032200 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fb3b40949d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4094960 <col:101> 'float' lvalue ParmVar 0x7fb3b4094778 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fb3b40948b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b40948f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fb3b4094b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1478:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fb3b4094a68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fb3b4094cf0 <col:84, col:111>
| | | `-ReturnStmt 0x7fb3b4094cd8 <col:85, col:109>
| | |   `-CallExpr 0x7fb3b4094c90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fb3b4094c78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fb3b4094c18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fb3b5032540 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fb3b4094cc0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fb3b4094c50 <col:101> 'long double' lvalue ParmVar 0x7fb3b4094a68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fb3b4094ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fb3b4094be8 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fb3b40951b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1480:1, line:1483:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7fb3b4094d10 <line:1480:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7fb3b4095118 <line:1481:1, line:1483:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7fb3b4095040 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7fb3b40956d0 <col:31, col:65>
|     | `-ReturnStmt 0x7fb3b40956b8 <col:32, col:63>
|     |   `-CallExpr 0x7fb3b4095688 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7fb3b4095670 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7fb3b4095638 <col:39, col:41> 'double (double)' lvalue Function 0x7fb3b50323a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7fb3b4095330 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7fb3b40952f0 <col:55> '_A1' lvalue ParmVar 0x7fb3b4095040 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7fb3b4095208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7fb3b4095250 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7fb3b505be58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:439:12> col:12 implicit C
| `-FunctionDecl 0x7fb3b505bea8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fb3b505bf40 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fb3b505bfa8 <col:12> Implicit
|   `-ConstAttr 0x7fb3b505bff0 <col:12> Implicit
|-LinkageSpecDecl 0x7fb3b4938340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:90> col:90 implicit C
| `-FunctionDecl 0x7fb3b4938390 <col:90> col:90 implicit used __builtin_huge_valf 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fb3b4938428 <col:90> Implicit
|   `-ConstAttr 0x7fb3b4938470 <col:90> Implicit
|-LinkageSpecDecl 0x7fb3b4938520 <line:332:91> col:91 implicit C
| `-FunctionDecl 0x7fb3b4938570 <col:91> col:91 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb3b4938608 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb3b4938670 <col:91> Implicit
|   `-ConstAttr 0x7fb3b49386b8 <col:91> Implicit
|-LinkageSpecDecl 0x7fb3b4938820 <line:333:95> col:95 implicit C
| `-FunctionDecl 0x7fb3b4938870 <col:95> col:95 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb3b4938908 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb3b4938970 <col:95> Implicit
|   `-ConstAttr 0x7fb3b49389b8 <col:95> Implicit
|-LinkageSpecDecl 0x7fb3b493b470 <line:377:90> col:90 implicit C
| `-FunctionDecl 0x7fb3b493b4c0 <col:90> col:90 implicit used __builtin_huge_val 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fb3b493b558 <col:90> Implicit
|   `-ConstAttr 0x7fb3b493b5a0 <col:90> Implicit
|-LinkageSpecDecl 0x7fb3b493b650 <line:378:91> col:91 implicit C
| `-FunctionDecl 0x7fb3b493b6a0 <col:91> col:91 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb3b493b738 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb3b493b7a0 <col:91> Implicit
|   `-ConstAttr 0x7fb3b493b7e8 <col:91> Implicit
|-LinkageSpecDecl 0x7fb3b493b950 <line:379:95> col:95 implicit C
| `-FunctionDecl 0x7fb3b493b9a0 <col:95> col:95 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb3b493ba38 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb3b493baa0 <col:95> Implicit
|   `-ConstAttr 0x7fb3b493bae8 <col:95> Implicit
|-LinkageSpecDecl 0x7fb3b493e5c8 <line:423:90> col:90 implicit C
| `-FunctionDecl 0x7fb3b493e618 <col:90> col:90 implicit used __builtin_huge_vall 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fb3b493e6b0 <col:90> Implicit
|   `-ConstAttr 0x7fb3b493e6f8 <col:90> Implicit
|-LinkageSpecDecl 0x7fb3b493e7a8 <line:424:91> col:91 implicit C
| `-FunctionDecl 0x7fb3b493e7f8 <col:91> col:91 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb3b493e890 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb3b493e8f8 <col:91> Implicit
|   `-ConstAttr 0x7fb3b493e940 <col:91> Implicit
|-LinkageSpecDecl 0x7fb3b493eab0 <line:425:95> col:95 implicit C
| `-FunctionDecl 0x7fb3b493eb00 <col:95> col:95 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fb3b493eb98 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fb3b493ec00 <col:95> Implicit
|   `-ConstAttr 0x7fb3b493ec48 <col:95> Implicit
|-LinkageSpecDecl 0x7fb3b495a9b0 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7fb3b495aa00 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b495aa98 <col:25> Implicit
|   `-ConstAttr 0x7fb3b495aae0 <col:25> Implicit
|-LinkageSpecDecl 0x7fb3b495bd58 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7fb3b495bda8 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b495be40 <col:30> Implicit
|   `-ConstAttr 0x7fb3b495be88 <col:30> Implicit
|-LinkageSpecDecl 0x7fb3b495cec8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7fb3b495cf18 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b495cfb0 <col:22> Implicit
|   `-ConstAttr 0x7fb3b495cff8 <col:22> Implicit
|-LinkageSpecDecl 0x7fb3b495e058 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7fb3b495e0a8 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b495e140 <col:27> Implicit
|   `-ConstAttr 0x7fb3b495e188 <col:27> Implicit
|-LinkageSpecDecl 0x7fb3b495f200 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7fb3b495f250 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b495f2e8 <col:29> Implicit
|   `-ConstAttr 0x7fb3b495f330 <col:29> Implicit
|-LinkageSpecDecl 0x7fb3b4960378 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7fb3b49603c8 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b4960460 <col:27> Implicit
|   `-ConstAttr 0x7fb3b49604a8 <col:27> Implicit
|-NamespaceDecl 0x7fb3b40956f0 prev 0x7fb3b4918b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fb3b3865c58 'std'
| `-NamespaceDecl 0x7fb3b4095758 prev 0x7fb3b4918c00 <col:52, line:439:36> <scratch space>:440:1 __1 inline
|   |-original Namespace 0x7fb3b3865cc0 '__1'
|   |-UsingDecl 0x7fb3b40957c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7fb3b4095818 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4951298 'signbit'
|   |-UsingShadowDecl 0x7fb3b4095860 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4951d90 'signbit'
|   |-UsingShadowDecl 0x7fb3b40958a8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b49525e0 'signbit'
|   |-UsingDecl 0x7fb3b40958f8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7fb3b4095948 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4953660 'fpclassify'
|   |-UsingShadowDecl 0x7fb3b4095990 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4953ee0 'fpclassify'
|   |-UsingDecl 0x7fb3b40959e0 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7fb3b4095a30 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4955180 'isfinite'
|   |-UsingShadowDecl 0x7fb3b4095a78 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4955b70 'isfinite'
|   |-UsingDecl 0x7fb3b4095ac8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7fb3b4095b18 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4956c00 'isinf'
|   |-UsingShadowDecl 0x7fb3b4095b60 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4957500 'isinf'
|   |-UsingDecl 0x7fb3b4095bb0 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7fb3b4097800 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4958450 'isnan'
|   |-UsingShadowDecl 0x7fb3b4097848 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4958cd0 'isnan'
|   |-UsingDecl 0x7fb3b4097898 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7fb3b40978e8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4959c40 'isnormal'
|   |-UsingShadowDecl 0x7fb3b4097930 <col:9> col:9 implicit FunctionTemplate 0x7fb3b495a3d0 'isnormal'
|   |-UsingDecl 0x7fb3b4097980 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7fb3b40979d0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b495b460 'isgreater'
|   |-UsingDecl 0x7fb3b4097a20 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7fb3b4097a70 <col:9> col:9 implicit FunctionTemplate 0x7fb3b495c6a0 'isgreaterequal'
|   |-UsingDecl 0x7fb3b4097ac0 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7fb3b4097b10 <col:9> col:9 implicit FunctionTemplate 0x7fb3b495d830 'isless'
|   |-UsingDecl 0x7fb3b4097b60 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7fb3b4097bb0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b495e9a0 'islessequal'
|   |-UsingDecl 0x7fb3b4097c00 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7fb3b4097c50 <col:9> col:9 implicit FunctionTemplate 0x7fb3b495fb50 'islessgreater'
|   |-UsingDecl 0x7fb3b4097ca0 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fb3b4097cf0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4960cc0 'isunordered'
|   |-UsingDecl 0x7fb3b4097d40 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fb3b4097d90 prev 0x7fb3b4097cf0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4960cc0 'isunordered'
|   |-UsingDecl 0x7fb3b4097de0 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7fb3b4097e30 <col:9> col:9 implicit Typedef 0x7fb3b3865e40 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fb3b4097e80 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7fb3b4097ed0 <col:9> col:9 implicit Typedef 0x7fb3b3865eb0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fb3b4097f20 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7fb3b4097f70 <col:9> col:9 implicit Function 0x7fb3b4962200 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4097fb8 <col:9> col:9 implicit Function 0x7fb3b49624f0 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098000 <col:9> col:9 implicit Function 0x7fb3b49627e0 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7fb3b4098050 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7fb3b40980a0 <col:9> col:9 implicit Function 0x7fb3b501e4d8 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b40980e8 <col:9> col:9 implicit Function 0x7fb3b4962ad0 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098130 <col:9> col:9 implicit Function 0x7fb3b4962dc0 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098178 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4963560 'acos'
|   |-UsingDecl 0x7fb3b40981c8 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7fb3b4098218 <col:9> col:9 implicit Function 0x7fb3b501e338 'acosf' 'float (float)'
|   |-UsingDecl 0x7fb3b4098268 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7fb3b40982b8 <col:9> col:9 implicit Function 0x7fb3b501ea00 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b4098300 <col:9> col:9 implicit Function 0x7fb3b4965160 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098348 <col:9> col:9 implicit Function 0x7fb3b4965450 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098390 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4965b00 'asin'
|   |-UsingDecl 0x7fb3b40983e0 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7fb3b4098430 <col:9> col:9 implicit Function 0x7fb3b501e818 'asinf' 'float (float)'
|   |-UsingDecl 0x7fb3b4098480 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7fb3b40984d0 <col:9> col:9 implicit Function 0x7fb3b501eee0 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b4098518 <col:9> col:9 implicit Function 0x7fb3b4966120 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098560 <col:9> col:9 implicit Function 0x7fb3b4966440 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b40985a8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4966af0 'atan'
|   |-UsingDecl 0x7fb3b40985f8 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7fb3b4098648 <col:9> col:9 implicit Function 0x7fb3b501ed40 'atanf' 'float (float)'
|   |-UsingDecl 0x7fb3b4098698 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7fb3b40986e8 <col:9> col:9 implicit Function 0x7fb3b501f598 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b4098730 <col:9> col:9 implicit Function 0x7fb3b4967190 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098778 <col:9> col:9 implicit Function 0x7fb3b4967580 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b40987c0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4968150 'atan2'
|   |-UsingDecl 0x7fb3b4098810 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7fb3b4098860 <col:9> col:9 implicit Function 0x7fb3b501f2e8 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7fb3b40988b0 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7fb3b4098900 <col:9> col:9 implicit Function 0x7fb3b502f448 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b4098948 <col:9> col:9 implicit Function 0x7fb3b4054368 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098990 <col:9> col:9 implicit Function 0x7fb3b4054658 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b40989d8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4054d10 'ceil'
|   |-UsingDecl 0x7fb3b4098a28 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7fb3b4098a78 <col:9> col:9 implicit Function 0x7fb3b502f2a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7fb3b4098ac8 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7fb3b4098b18 <col:9> col:9 implicit Function 0x7fb3b50203d0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b4098b60 <col:9> col:9 implicit Function 0x7fb3b4055330 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098ba8 <col:9> col:9 implicit Function 0x7fb3b4055620 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098bf0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4055d00 'cos'
|   |-UsingDecl 0x7fb3b4098c40 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7fb3b4098c90 <col:9> col:9 implicit Function 0x7fb3b5020230 'cosf' 'float (float)'
|   |-UsingDecl 0x7fb3b4098ce0 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7fb3b4098d30 <col:9> col:9 implicit Function 0x7fb3b5022930 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b4098d78 <col:9> col:9 implicit Function 0x7fb3b4056320 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098dc0 <col:9> col:9 implicit Function 0x7fb3b4056610 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098e08 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4056cc0 'cosh'
|   |-UsingDecl 0x7fb3b4098e58 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7fb3b4098ea8 <col:9> col:9 implicit Function 0x7fb3b5022790 'coshf' 'float (float)'
|   |-UsingDecl 0x7fb3b4098ef8 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7fb3b4098f48 <col:9> col:9 implicit Function 0x7fb3b5023ff0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b4098f90 <col:9> col:9 implicit Function 0x7fb3b40572e0 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4098fd8 <col:9> col:9 implicit Function 0x7fb3b40575d0 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099020 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4057ca0 'exp'
|   |-UsingDecl 0x7fb3b4099070 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7fb3b40990c0 <col:9> col:9 implicit Function 0x7fb3b5023e50 'expf' 'float (float)'
|   |-UsingDecl 0x7fb3b4099110 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7fb3b4099160 <col:9> col:9 implicit Function 0x7fb3b502c490 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b40991a8 <col:9> col:9 implicit Function 0x7fb3b40582c0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b40991f0 <col:9> col:9 implicit Function 0x7fb3b40585b0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099238 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4058c60 'fabs'
|   |-UsingDecl 0x7fb3b4099288 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7fb3b40992d8 <col:9> col:9 implicit Function 0x7fb3b502c2f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7fb3b4099328 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7fb3b4099378 <col:9> col:9 implicit Function 0x7fb3b502f928 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b40993c0 <col:9> col:9 implicit Function 0x7fb3b4059280 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099408 <col:9> col:9 implicit Function 0x7fb3b4059570 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099450 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4059c40 'floor'
|   |-UsingDecl 0x7fb3b40994a0 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7fb3b40994f0 <col:9> col:9 implicit Function 0x7fb3b502f788 'floorf' 'float (float)'
|   |-UsingDecl 0x7fb3b4099540 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7fb3b4099590 <col:9> col:9 implicit Function 0x7fb3b5032988 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b40995d8 <col:9> col:9 implicit Function 0x7fb3b405a2e0 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099620 <col:9> col:9 implicit Function 0x7fb3b405a6a0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099668 <col:9> col:9 implicit FunctionTemplate 0x7fb3b405b140 'fmod'
|   |-UsingDecl 0x7fb3b40996b8 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7fb3b4099708 <col:9> col:9 implicit Function 0x7fb3b5032760 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b4099758 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7fb3b40997a8 <col:9> col:9 implicit Function 0x7fb3b5029a28 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7fb3b40997f0 <col:9> col:9 implicit Function 0x7fb3b405bb18 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099838 <col:9> col:9 implicit Function 0x7fb3b405bf30 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099880 <col:9> col:9 implicit FunctionTemplate 0x7fb3b405c760 'frexp'
|   |-UsingDecl 0x7fb3b40998d0 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7fb3b4099920 <col:9> col:9 implicit Function 0x7fb3b5029788 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7fb3b4099970 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7fb3b40999c0 <col:9> col:9 implicit Function 0x7fb3b5029200 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7fb3b4099a08 <col:9> col:9 implicit Function 0x7fb3b405ce78 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099a50 <col:9> col:9 implicit Function 0x7fb3b405d260 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099a98 <col:9> col:9 implicit FunctionTemplate 0x7fb3b405da98 'ldexp'
|   |-UsingDecl 0x7fb3b4099ae8 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7fb3b4099b38 <col:9> col:9 implicit Function 0x7fb3b5027f38 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7fb3b4099b88 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7fb3b4099bd8 <col:9> col:9 implicit Function 0x7fb3b5024f00 'log' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b4099c20 <col:9> col:9 implicit Function 0x7fb3b405e138 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099c68 <col:9> col:9 implicit Function 0x7fb3b405e428 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099cb0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b405eae0 'log'
|   |-UsingDecl 0x7fb3b4099d00 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7fb3b4099d50 <col:9> col:9 implicit Function 0x7fb3b5024d60 'logf' 'float (float)'
|   |-UsingDecl 0x7fb3b4099da0 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7fb3b4099df0 <col:9> col:9 implicit Function 0x7fb3b5025430 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b4099e38 <col:9> col:9 implicit Function 0x7fb3b405f100 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099e80 <col:9> col:9 implicit Function 0x7fb3b405f3f0 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b4099ec8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b405fad8 'log10'
|   |-UsingDecl 0x7fb3b4099f18 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7fb3b4099f68 <col:9> col:9 implicit Function 0x7fb3b5025290 'log10f' 'float (float)'
|   |-UsingDecl 0x7fb3b4099fb8 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7fb3b409a008 <col:9> col:9 implicit Function 0x7fb3b50279d8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7fb3b409a050 <col:9> col:9 implicit Function 0x7fb3b4060180 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a098 <col:9> col:9 implicit Function 0x7fb3b40605a0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7fb3b409a0e8 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7fb3b409a138 <col:9> col:9 implicit Function 0x7fb3b5027718 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7fb3b409a188 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7fb3b409a1d8 <col:9> col:9 implicit Function 0x7fb3b502d650 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b409a220 <col:9> col:9 implicit Function 0x7fb3b40609c0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a268 <col:9> col:9 implicit Function 0x7fb3b4060d80 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a2b0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4061820 'pow'
|   |-UsingDecl 0x7fb3b409a300 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7fb3b409a350 <col:9> col:9 implicit Function 0x7fb3b502d428 'powf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b409a3a0 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7fb3b409a3f0 <col:9> col:9 implicit Function 0x7fb3b50208b0 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409a438 <col:9> col:9 implicit Function 0x7fb3b4062158 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a480 <col:9> col:9 implicit Function 0x7fb3b4062448 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a4c8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4062b00 'sin'
|   |-UsingDecl 0x7fb3b409a518 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7fb3b409a568 <col:9> col:9 implicit Function 0x7fb3b5020710 'sinf' 'float (float)'
|   |-UsingDecl 0x7fb3b409a5b8 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7fb3b409a608 <col:9> col:9 implicit Function 0x7fb3b5023630 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409a650 <col:9> col:9 implicit Function 0x7fb3b4063120 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a698 <col:9> col:9 implicit Function 0x7fb3b4063410 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a6e0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4065cd8 'sinh'
|   |-UsingDecl 0x7fb3b409a730 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7fb3b409a780 <col:9> col:9 implicit Function 0x7fb3b5023490 'sinhf' 'float (float)'
|   |-UsingDecl 0x7fb3b409a7d0 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7fb3b409a820 <col:9> col:9 implicit Function 0x7fb3b502dbc0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409a868 <col:9> col:9 implicit Function 0x7fb3b4066300 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a8b0 <col:9> col:9 implicit Function 0x7fb3b40665f0 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409a8f8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4066ca0 'sqrt'
|   |-UsingDecl 0x7fb3b409a948 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7fb3b409a998 <col:9> col:9 implicit Function 0x7fb3b502da20 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7fb3b409a9e8 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7fb3b409aa38 <col:9> col:9 implicit Function 0x7fb3b5020d90 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409aa80 <col:9> col:9 implicit Function 0x7fb3b40672c0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409aac8 <col:9> col:9 implicit Function 0x7fb3b40675b0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ab10 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4067c98 'tan'
|   |-UsingDecl 0x7fb3b409ab60 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7fb3b409abb0 <col:9> col:9 implicit Function 0x7fb3b5020bf0 'tanf' 'float (float)'
|   |-UsingDecl 0x7fb3b409ac00 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7fb3b409ac50 <col:9> col:9 implicit Function 0x7fb3b5023b10 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409ac98 <col:9> col:9 implicit Function 0x7fb3b40682c0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ace0 <col:9> col:9 implicit Function 0x7fb3b40685b0 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ad28 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4068c60 'tanh'
|   |-UsingDecl 0x7fb3b409ad78 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7fb3b409adc8 <col:9> col:9 implicit Function 0x7fb3b5023970 'tanhf' 'float (float)'
|   |-UsingDecl 0x7fb3b409ae18 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7fb3b409ae68 <col:9> col:9 implicit Function 0x7fb3b5021a90 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409aeb0 <col:9> col:9 implicit Function 0x7fb3b4069280 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409aef8 <col:9> col:9 implicit Function 0x7fb3b4069570 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409af40 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4069c98 'acosh'
|   |-UsingDecl 0x7fb3b409af90 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7fb3b409afe0 <col:9> col:9 implicit Function 0x7fb3b50210d0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7fb3b409b030 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7fb3b409b080 <col:9> col:9 implicit Function 0x7fb3b5021f70 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409b0c8 <col:9> col:9 implicit Function 0x7fb3b406a2c0 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b110 <col:9> col:9 implicit Function 0x7fb3b406a5b0 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b158 <col:9> col:9 implicit FunctionTemplate 0x7fb3b406ac60 'asinh'
|   |-UsingDecl 0x7fb3b409b1a8 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7fb3b409b1f8 <col:9> col:9 implicit Function 0x7fb3b5021dd0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7fb3b409b248 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7fb3b409b298 <col:9> col:9 implicit Function 0x7fb3b5022450 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409b2e0 <col:9> col:9 implicit Function 0x7fb3b406b280 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b328 <col:9> col:9 implicit Function 0x7fb3b406b570 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b370 <col:9> col:9 implicit FunctionTemplate 0x7fb3b406bc98 'atanh'
|   |-UsingDecl 0x7fb3b409b3c0 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7fb3b409b410 <col:9> col:9 implicit Function 0x7fb3b50222b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7fb3b409b460 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7fb3b409b4b0 <col:9> col:9 implicit Function 0x7fb3b502c970 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409b4f8 <col:9> col:9 implicit Function 0x7fb3b406c2c0 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b540 <col:9> col:9 implicit Function 0x7fb3b406c5b0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b588 <col:9> col:9 implicit FunctionTemplate 0x7fb3b406cc60 'cbrt'
|   |-UsingDecl 0x7fb3b409b5d8 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7fb3b409b628 <col:9> col:9 implicit Function 0x7fb3b502c7d0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7fb3b409b678 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7fb3b409b6c8 <col:9> col:9 implicit Function 0x7fb3b5033e68 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b409b710 <col:9> col:9 implicit Function 0x7fb3b406d300 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b758 <col:9> col:9 implicit Function 0x7fb3b406d6c0 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b7a0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b406e180 'copysign'
|   |-UsingDecl 0x7fb3b409b800 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7fb3b409b850 <col:9> col:9 implicit Function 0x7fb3b5033c40 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b409b8a0 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7fb3b409b8f0 <col:9> col:9 implicit Function 0x7fb3b502e0a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409b938 <col:9> col:9 implicit Function 0x7fb3b406eab8 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b980 <col:9> col:9 implicit Function 0x7fb3b406eda8 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409b9c8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b406f460 'erf'
|   |-UsingDecl 0x7fb3b409ba18 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7fb3b409ba68 <col:9> col:9 implicit Function 0x7fb3b502df00 'erff' 'float (float)'
|   |-UsingDecl 0x7fb3b409bab8 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7fb3b409bb08 <col:9> col:9 implicit Function 0x7fb3b502e5d0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409bb50 <col:9> col:9 implicit Function 0x7fb3b406fa80 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409bb98 <col:9> col:9 implicit Function 0x7fb3b4070d78 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409bbe0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4071430 'erfc'
|   |-UsingDecl 0x7fb3b409bc30 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7fb3b409bc80 <col:9> col:9 implicit Function 0x7fb3b502e430 'erfcf' 'float (float)'
|   |-UsingDecl 0x7fb3b409bcd0 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7fb3b409bd20 <col:9> col:9 implicit Function 0x7fb3b5024540 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409bd68 <col:9> col:9 implicit Function 0x7fb3b4071a50 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409bdb0 <col:9> col:9 implicit Function 0x7fb3b4071d40 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409bdf8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b40723f0 'exp2'
|   |-UsingDecl 0x7fb3b409be48 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7fb3b409be98 <col:9> col:9 implicit Function 0x7fb3b50243a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7fb3b409bee8 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7fb3b409bf38 <col:9> col:9 implicit Function 0x7fb3b5024a20 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409bf80 <col:9> col:9 implicit Function 0x7fb3b4072a10 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409bfc8 <col:9> col:9 implicit Function 0x7fb3b4072d00 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c010 <col:9> col:9 implicit FunctionTemplate 0x7fb3b40733b0 'expm1'
|   |-UsingDecl 0x7fb3b409c060 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7fb3b409c0b0 <col:9> col:9 implicit Function 0x7fb3b5024880 'expm1f' 'float (float)'
|   |-UsingDecl 0x7fb3b409c100 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7fb3b409c150 <col:9> col:9 implicit Function 0x7fb3b5026990 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b409c198 <col:9> col:9 implicit Function 0x7fb3b4073a50 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c1e0 <col:9> col:9 implicit Function 0x7fb3b4073e10 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c228 <col:9> col:9 implicit FunctionTemplate 0x7fb3b40748b0 'fdim'
|   |-UsingDecl 0x7fb3b409c278 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7fb3b409c2c8 <col:9> col:9 implicit Function 0x7fb3b5026768 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b409c318 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7fb3b409c368 <col:9> col:9 implicit Function 0x7fb3b5039ba8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7fb3b409c3b8 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7fb3b409c408 <col:9> col:9 implicit Function 0x7fb3b5039ef8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7fb3b409c450 <col:9> col:9 implicit Function 0x7fb3b4077308 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c498 <col:9> col:9 implicit Function 0x7fb3b40777c0 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c4e0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b40786d0 'fma'
|   |-UsingDecl 0x7fb3b409c530 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7fb3b409c580 <col:9> col:9 implicit Function 0x7fb3b5027008 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b409c5c8 <col:9> col:9 implicit Function 0x7fb3b4079420 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c610 <col:9> col:9 implicit Function 0x7fb3b40797e0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c658 <col:9> col:9 implicit FunctionTemplate 0x7fb3b407a280 'fmax'
|   |-UsingDecl 0x7fb3b409c6a8 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7fb3b409c6f8 <col:9> col:9 implicit Function 0x7fb3b5026de0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b409c748 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7fb3b409c798 <col:9> col:9 implicit Function 0x7fb3b5039688 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b409c7e0 <col:9> col:9 implicit Function 0x7fb3b407ac40 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c828 <col:9> col:9 implicit Function 0x7fb3b407b000 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409c870 <col:9> col:9 implicit FunctionTemplate 0x7fb3b407baa0 'fmin'
|   |-UsingDecl 0x7fb3b409c8c0 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7fb3b409c910 <col:9> col:9 implicit Function 0x7fb3b5039460 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b409c960 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7fb3b409c9b0 <col:9> col:9 implicit Function 0x7fb3b502cf58 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b409c9f8 <col:9> col:9 implicit Function 0x7fb3b407c458 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ca40 <col:9> col:9 implicit Function 0x7fb3b407c818 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ca88 <col:9> col:9 implicit FunctionTemplate 0x7fb3b407d300 'hypot'
|   |-UsingDecl 0x7fb3b409cad8 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7fb3b409cb28 <col:9> col:9 implicit Function 0x7fb3b502cd30 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b409cb78 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7fb3b409cbc8 <col:9> col:9 implicit Function 0x7fb3b502a078 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7fb3b409cc10 <col:9> col:9 implicit Function 0x7fb3b407dc38 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409cc58 <col:9> col:9 implicit Function 0x7fb3b407df28 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409cca0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b407e5e0 'ilogb'
|   |-UsingDecl 0x7fb3b409ccf0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7fb3b409cd40 <col:9> col:9 implicit Function 0x7fb3b5029ea0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7fb3b409cd90 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7fb3b409cde0 <col:9> col:9 implicit Function 0x7fb3b502eaa0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409ce28 <col:9> col:9 implicit Function 0x7fb3b407eeb8 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ce70 <col:9> col:9 implicit Function 0x7fb3b407f1a8 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ceb8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b407f860 'lgamma'
|   |-UsingDecl 0x7fb3b409cf08 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7fb3b409cf58 <col:9> col:9 implicit Function 0x7fb3b502e910 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7fb3b409cfa8 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7fb3b409cff8 <col:9> col:9 implicit Function 0x7fb3b50318a8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7fb3b409d040 <col:9> col:9 implicit Function 0x7fb3b407fe80 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d088 <col:9> col:9 implicit Function 0x7fb3b40801a0 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d0d0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4080970 'llrint'
|   |-UsingDecl 0x7fb3b409d120 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7fb3b409d170 <col:9> col:9 implicit Function 0x7fb3b5031688 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7fb3b409d1c0 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7fb3b409d210 <col:9> col:9 implicit Function 0x7fb3b5031e48 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7fb3b409d258 <col:9> col:9 implicit Function 0x7fb3b4081248 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d2a0 <col:9> col:9 implicit Function 0x7fb3b4081538 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d2e8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4081bf0 'llround'
|   |-UsingDecl 0x7fb3b409d338 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7fb3b409d388 <col:9> col:9 implicit Function 0x7fb3b5031ca8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7fb3b409d3d8 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7fb3b409d428 <col:9> col:9 implicit Function 0x7fb3b5025df0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409d470 <col:9> col:9 implicit Function 0x7fb3b4082210 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d4b8 <col:9> col:9 implicit Function 0x7fb3b4082500 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d500 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4082bb0 'log1p'
|   |-UsingDecl 0x7fb3b409d550 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7fb3b409d5a0 <col:9> col:9 implicit Function 0x7fb3b5025c50 'log1pf' 'float (float)'
|   |-UsingDecl 0x7fb3b409d5f0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7fb3b409d640 <col:9> col:9 implicit Function 0x7fb3b5025910 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409d688 <col:9> col:9 implicit Function 0x7fb3b40831d0 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d6d0 <col:9> col:9 implicit Function 0x7fb3b40834c0 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d718 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4083b70 'log2'
|   |-UsingDecl 0x7fb3b409d768 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7fb3b409d7b8 <col:9> col:9 implicit Function 0x7fb3b5025770 'log2f' 'float (float)'
|   |-UsingDecl 0x7fb3b409d808 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7fb3b409d858 <col:9> col:9 implicit Function 0x7fb3b50272f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409d8a0 <col:9> col:9 implicit Function 0x7fb3b4084190 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d8e8 <col:9> col:9 implicit Function 0x7fb3b4084480 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409d930 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4084b30 'logb'
|   |-UsingDecl 0x7fb3b409d980 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7fb3b409d9d0 <col:9> col:9 implicit Function 0x7fb3b5026130 'logbf' 'float (float)'
|   |-UsingDecl 0x7fb3b409da20 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7fb3b409da70 <col:9> col:9 implicit Function 0x7fb3b5030888 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7fb3b409dab8 <col:9> col:9 implicit Function 0x7fb3b4086150 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409db00 <col:9> col:9 implicit Function 0x7fb3b4086470 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409db48 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4086c40 'lrint'
|   |-UsingDecl 0x7fb3b409db98 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7fb3b409dbe8 <col:9> col:9 implicit Function 0x7fb3b5030668 'lrintf' 'long (float)'
|   |-UsingDecl 0x7fb3b409dc38 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7fb3b409dc88 <col:9> col:9 implicit Function 0x7fb3b5031308 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7fb3b409dcd0 <col:9> col:9 implicit Function 0x7fb3b40874f8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409dd18 <col:9> col:9 implicit Function 0x7fb3b40877e8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409dd60 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4087ea0 'lround'
|   |-UsingDecl 0x7fb3b409ddb0 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7fb3b409de00 <col:9> col:9 implicit Function 0x7fb3b5031168 'lroundf' 'long (float)'
|   |-UsingDecl 0x7fb3b409de50 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7fb3b409dea0 <col:9> col:9 implicit Function 0x7fb3b50344e8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7fb3b409def0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7fb3b409df40 <col:9> col:9 implicit Function 0x7fb3b50342c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7fb3b409df90 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7fb3b409dfe0 <col:9> col:9 implicit Function 0x7fb3b502fe08 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409e028 <col:9> col:9 implicit Function 0x7fb3b40884c0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e070 <col:9> col:9 implicit Function 0x7fb3b40887b0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e0b8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4088e60 'nearbyint'
|   |-UsingDecl 0x7fb3b409e108 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7fb3b409e158 <col:9> col:9 implicit Function 0x7fb3b502fc68 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7fb3b409e1a8 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7fb3b409e1f8 <col:9> col:9 implicit Function 0x7fb3b5034b90 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b409e240 <col:9> col:9 implicit Function 0x7fb3b4089500 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e288 <col:9> col:9 implicit Function 0x7fb3b40898c0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e2d0 <col:9> col:9 implicit FunctionTemplate 0x7fb3b408a360 'nextafter'
|   |-UsingDecl 0x7fb3b409e320 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7fb3b409e370 <col:9> col:9 implicit Function 0x7fb3b5034968 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b409e3c0 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7fb3b409e410 <col:9> col:9 implicit Function 0x7fb3b5035028 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7fb3b409e458 <col:9> col:9 implicit Function 0x7fb3b408ad18 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e4a0 <col:9> col:9 implicit Function 0x7fb3b408b100 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e4e8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b408b8d0 'nexttoward'
|   |-UsingDecl 0x7fb3b409e538 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7fb3b409e588 <col:9> col:9 implicit Function 0x7fb3b50262d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7fb3b409e5d8 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7fb3b409e628 <col:9> col:9 implicit Function 0x7fb3b5033000 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7fb3b409e670 <col:9> col:9 implicit Function 0x7fb3b408bfe8 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e6b8 <col:9> col:9 implicit Function 0x7fb3b408c3a8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e700 <col:9> col:9 implicit FunctionTemplate 0x7fb3b408ce50 'remainder'
|   |-UsingDecl 0x7fb3b409e750 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7fb3b409e7a0 <col:9> col:9 implicit Function 0x7fb3b5032dd8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7fb3b409e7f0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7fb3b409e840 <col:9> col:9 implicit Function 0x7fb3b50337c8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7fb3b409e888 <col:9> col:9 implicit Function 0x7fb3b408d8d0 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e8d0 <col:9> col:9 implicit Function 0x7fb3b408dde0 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fb3b409e918 <col:9> col:9 implicit FunctionTemplate 0x7fb3b408e9e0 'remquo'
|   |-UsingDecl 0x7fb3b409e968 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7fb3b409e9b8 <col:9> col:9 implicit Function 0x7fb3b5033528 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7fb3b409ea08 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7fb3b409ea58 <col:9> col:9 implicit Function 0x7fb3b50302f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409eaa0 <col:9> col:9 implicit Function 0x7fb3b408f348 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409eae8 <col:9> col:9 implicit Function 0x7fb3b408f638 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409eb30 <col:9> col:9 implicit FunctionTemplate 0x7fb3b408fcf0 'rint'
|   |-UsingDecl 0x7fb3b409eb80 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7fb3b409ebd0 <col:9> col:9 implicit Function 0x7fb3b5030148 'rintf' 'float (float)'
|   |-UsingDecl 0x7fb3b409ec20 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7fb3b409ec70 <col:9> col:9 implicit Function 0x7fb3b5030e28 'round' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409ecb8 <col:9> col:9 implicit Function 0x7fb3b4090310 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ed00 <col:9> col:9 implicit Function 0x7fb3b4090600 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ed48 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4090cb0 'round'
|   |-UsingDecl 0x7fb3b409ed98 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7fb3b409ede8 <col:9> col:9 implicit Function 0x7fb3b5030c88 'roundf' 'float (float)'
|   |-UsingDecl 0x7fb3b409ee38 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7fb3b409ee88 <col:9> col:9 implicit Function 0x7fb3b502be58 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7fb3b409eed0 <col:9> col:9 implicit Function 0x7fb3b4091350 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ef18 <col:9> col:9 implicit Function 0x7fb3b4091740 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7fb3b409ef60 <col:9> col:9 implicit FunctionTemplate 0x7fb3b4091f70 'scalbln'
|   |-UsingDecl 0x7fb3b409efb0 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7fb3b409f000 <col:9> col:9 implicit Function 0x7fb3b502bba8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7fb3b409f050 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7fb3b409f0a0 <col:9> col:9 implicit Function 0x7fb3b502b710 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7fb3b409f0e8 <col:9> col:9 implicit Function 0x7fb3b4092688 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fb3b409f130 <col:9> col:9 implicit Function 0x7fb3b4092a48 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fb3b409f178 <col:9> col:9 implicit FunctionTemplate 0x7fb3b40931e0 'scalbn'
|   |-UsingDecl 0x7fb3b409f1c8 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7fb3b409f218 <col:9> col:9 implicit Function 0x7fb3b502b4e8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7fb3b409f268 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7fb3b409f2b8 <col:9> col:9 implicit Function 0x7fb3b502ef60 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409f300 <col:9> col:9 implicit Function 0x7fb3b4093850 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409f348 <col:9> col:9 implicit Function 0x7fb3b4093b40 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409f390 <col:9> col:9 implicit FunctionTemplate 0x7fb3b40941f0 'tgamma'
|   |-UsingDecl 0x7fb3b409f3e0 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7fb3b409f430 <col:9> col:9 implicit Function 0x7fb3b502edc0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7fb3b409f480 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7fb3b409f4d0 <col:9> col:9 implicit Function 0x7fb3b50323a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7fb3b409f518 <col:9> col:9 implicit Function 0x7fb3b4094810 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fb3b409f560 <col:9> col:9 implicit Function 0x7fb3b4094b00 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fb3b409f5a8 <col:9> col:9 implicit FunctionTemplate 0x7fb3b40951b0 'trunc'
|   |-UsingDecl 0x7fb3b409f5f8 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7fb3b409f648 <col:9> col:9 implicit Function 0x7fb3b5032200 'truncf' 'float (float)'
|   |-UsingDecl 0x7fb3b409f698 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7fb3b409f6e8 <col:9> col:9 implicit Function 0x7fb3b501e678 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409f738 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7fb3b409f788 <col:9> col:9 implicit Function 0x7fb3b501eba0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409f800 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7fb3b409f850 <col:9> col:9 implicit Function 0x7fb3b501f080 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409f8a0 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7fb3b409f8f0 <col:9> col:9 implicit Function 0x7fb3b501f848 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b409f940 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7fb3b409f990 <col:9> col:9 implicit Function 0x7fb3b502f5e8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409f9e0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7fb3b409fa30 <col:9> col:9 implicit Function 0x7fb3b5020570 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409fa80 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7fb3b409fad0 <col:9> col:9 implicit Function 0x7fb3b50232f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409fb20 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7fb3b409fb70 <col:9> col:9 implicit Function 0x7fb3b5024200 'expl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409fbc0 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7fb3b409fc10 <col:9> col:9 implicit Function 0x7fb3b502c630 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409fc60 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7fb3b409fcb0 <col:9> col:9 implicit Function 0x7fb3b502fac8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409fd00 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7fb3b409fd50 <col:9> col:9 implicit Function 0x7fb3b5032bb0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b409fda0 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7fb3b409fdf0 <col:9> col:9 implicit Function 0x7fb3b5029cc8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7fb3b409fe40 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7fb3b409fe90 <col:9> col:9 implicit Function 0x7fb3b50294b8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7fb3b409fee0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7fb3b409ff30 <col:9> col:9 implicit Function 0x7fb3b50250a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b409ff80 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7fb3b409ffd0 <col:9> col:9 implicit Function 0x7fb3b50255d0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0020 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7fb3b40a0070 <col:9> col:9 implicit Function 0x7fb3b5027c98 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7fb3b40a00c0 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7fb3b40a0110 <col:9> col:9 implicit Function 0x7fb3b502d878 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a0160 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7fb3b40a01b0 <col:9> col:9 implicit Function 0x7fb3b5020a50 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0200 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7fb3b40a0250 <col:9> col:9 implicit Function 0x7fb3b50237d0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a02a0 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7fb3b40a02f0 <col:9> col:9 implicit Function 0x7fb3b502dd60 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0340 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7fb3b40a0390 <col:9> col:9 implicit Function 0x7fb3b5020f30 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a03e0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7fb3b40a0430 <col:9> col:9 implicit Function 0x7fb3b5023cb0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0480 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7fb3b40a04d0 <col:9> col:9 implicit Function 0x7fb3b5021c30 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0520 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7fb3b40a0570 <col:9> col:9 implicit Function 0x7fb3b5022110 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a05c0 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7fb3b40a0610 <col:9> col:9 implicit Function 0x7fb3b50225f0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0660 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7fb3b40a06b0 <col:9> col:9 implicit Function 0x7fb3b502cb10 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0700 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7fb3b40a0750 <col:9> col:9 implicit Function 0x7fb3b5034090 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a07a0 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7fb3b40a07f0 <col:9> col:9 implicit Function 0x7fb3b502e290 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0840 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7fb3b40a0890 <col:9> col:9 implicit Function 0x7fb3b502e770 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a08e0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7fb3b40a0930 <col:9> col:9 implicit Function 0x7fb3b50246e0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0980 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7fb3b40a09d0 <col:9> col:9 implicit Function 0x7fb3b5024bc0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0a20 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7fb3b40a0a70 <col:9> col:9 implicit Function 0x7fb3b5026bb8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a0ac0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7fb3b40a0b10 <col:9> col:9 implicit Function 0x7fb3b502a288 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7fb3b40a0b60 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7fb3b40a0bb0 <col:9> col:9 implicit Function 0x7fb3b5039238 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a0c00 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7fb3b40a0c50 <col:9> col:9 implicit Function 0x7fb3b50398b0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a0ca0 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7fb3b40a0cf0 <col:9> col:9 implicit Function 0x7fb3b502d200 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a0d40 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7fb3b40a0d90 <col:9> col:9 implicit Function 0x7fb3b502b290 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7fb3b40a0de0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7fb3b40a0e30 <col:9> col:9 implicit Function 0x7fb3b502ec30 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a0e80 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7fb3b40a0ed0 <col:9> col:9 implicit Function 0x7fb3b5031ac8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7fb3b40a0f20 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7fb3b40a0f70 <col:9> col:9 implicit Function 0x7fb3b5031fe8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7fb3b40a0fc0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7fb3b40a1010 <col:9> col:9 implicit Function 0x7fb3b5025f90 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a1060 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7fb3b40a10b0 <col:9> col:9 implicit Function 0x7fb3b5025ab0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a1100 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7fb3b40a1150 <col:9> col:9 implicit Function 0x7fb3b5027490 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a11a0 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7fb3b40a11f0 <col:9> col:9 implicit Function 0x7fb3b5030aa8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7fb3b40a1240 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7fb3b40a1290 <col:9> col:9 implicit Function 0x7fb3b50314a8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7fb3b40a12e0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7fb3b40a1330 <col:9> col:9 implicit Function 0x7fb3b5034708 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7fb3b40a1380 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7fb3b40a13d0 <col:9> col:9 implicit Function 0x7fb3b502ffa8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a1420 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7fb3b40a1470 <col:9> col:9 implicit Function 0x7fb3b5034db8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a14c0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7fb3b40a1510 <col:9> col:9 implicit Function 0x7fb3b5026540 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a1560 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7fb3b40a15b0 <col:9> col:9 implicit Function 0x7fb3b5033238 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fb3b40a1600 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7fb3b40a1650 <col:9> col:9 implicit Function 0x7fb3b5033a68 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7fb3b40a16a0 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7fb3b40a16f0 <col:9> col:9 implicit Function 0x7fb3b5030490 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a1740 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7fb3b40a1790 <col:9> col:9 implicit Function 0x7fb3b5030fc8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a17e0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7fb3b40a1830 <col:9> col:9 implicit Function 0x7fb3b502c108 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7fb3b40a1880 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7fb3b40a18d0 <col:9> col:9 implicit Function 0x7fb3b502b938 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7fb3b40a1920 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7fb3b40a1970 <col:9> col:9 implicit Function 0x7fb3b502f100 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7fb3b40a19c0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7fb3b40a1a10 <col:9> col:9 implicit Function 0x7fb3b5032540 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7fb3b40a1ee0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fb3b40a1a58 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb3b40a1e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb3b40a1d70 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb3b40a2168 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7fb3b40a2150 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7fb3b40a2120 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fb3b40a20d0 <col:12> '<builtin fn type>' Function 0x7fb3b40a1fe0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fb3b40a20f8 <col:28> '_A1' lvalue ParmVar 0x7fb3b40a1d70 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb3b40a1f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb3b40a1f80 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fb3b40a2700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fb3b40a2188 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb3b40a2668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb3b40a2550 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb3b40a2880 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7fb3b40a2868 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7fb3b40a2838 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fb3b40a27b0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7fb3b4097848 0x7fb3b4097800
|   |   |     `-DeclRefExpr 0x7fb3b40a2810 <col:18> '_A1' lvalue ParmVar 0x7fb3b40a2550 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb3b40a2758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb3b40a27a0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fb3b40a2d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fb3b40a28a0 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb3b40a2c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb3b40a2bb0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb3b40a2fa8 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7fb3b40a2f90 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7fb3b40a2f60 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fb3b40a2f10 <col:12> '<builtin fn type>' Function 0x7fb3b40a2e20 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fb3b40a2f38 <col:28> '_A1' lvalue ParmVar 0x7fb3b40a2bb0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb3b40a2d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb3b40a2dc0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fb3b40a3460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fb3b40a2fc8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb3b40a33c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb3b40a32f0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb3b40a35e0 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7fb3b40a35c8 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7fb3b40a3598 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fb3b40a3510 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7fb3b4095b60 0x7fb3b4095b18
|   |   |     `-DeclRefExpr 0x7fb3b40a3570 <col:18> '_A1' lvalue ParmVar 0x7fb3b40a32f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb3b40a34b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb3b40a3500 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fb3b40abaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7fb3b40a3600 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fb3b40aba08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fb3b40ab930 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fb3b40abd28 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7fb3b40abd10 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7fb3b40abce0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fb3b40abc90 <col:12> '<builtin fn type>' Function 0x7fb3b40abba0 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fb3b40abcb8 <col:31> '_A1' lvalue ParmVar 0x7fb3b40ab930 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fb3b40abaf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fb3b40abb40 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7fb3b40ac1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7fb3b40abd48 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7fb3b40ac148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7fb3b40ac070 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7fb3b40ac360 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7fb3b40ac348 <line:606:5, col:29>
|       |   `-CallExpr 0x7fb3b40ac318 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7fb3b40ac290 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7fb3b4095a78 0x7fb3b4095a30
|       |     `-DeclRefExpr 0x7fb3b40ac2f0 <col:21> '_A1' lvalue ParmVar 0x7fb3b40ac070 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7fb3b40ac238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|       `-VisibilityAttr 0x7fb3b40ac280 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7fb3b40a1f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7fb3b40a1fe0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b40a2078 <col:12> Implicit
|   `-ConstAttr 0x7fb3b40a20c0 <col:12> Implicit
|-LinkageSpecDecl 0x7fb3b40a2dd0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7fb3b40a2e20 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b40a2eb8 <col:12> Implicit
|   `-ConstAttr 0x7fb3b40a2f00 <col:12> Implicit
|-LinkageSpecDecl 0x7fb3b40abb50 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7fb3b40abba0 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fb3b40abc38 <col:12> Implicit
|   `-ConstAttr 0x7fb3b40abc80 <col:12> Implicit
|-CXXRecordDecl 0x7fb3b40ac380 <object_model/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7fb3b40ac4a8 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7fb3b40ac558 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7fb3b40adb68 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fb3b40adc48 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7fb3b40adc48
| |-CXXConstructorDecl 0x7fb3b40adf08 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7fb3b40adf08
| | `-ParmVarDecl 0x7fb3b40ae030 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7fb3b40ae0c8 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7fb3b40ae0c8
|   `-ParmVarDecl 0x7fb3b40ae1f0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7fb3b40ac5c0 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7fb3b40ac6e8 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7fb3b40ac798 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7fb3b40add48 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fb3b40ade28 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7fb3b40ade28
| |-CXXConstructorDecl 0x7fb3b40ae258 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7fb3b40ae258
| | `-ParmVarDecl 0x7fb3b40ae380 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7fb3b40ae418 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7fb3b40ae418
|   `-ParmVarDecl 0x7fb3b40ae540 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7fb3b40ac800 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7fb3b40ac9a8 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7fb3b40aca58 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7fb3b40ada68 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fb3b40ae5a8 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7fb3b40ae5a8
| | `-ParmVarDecl 0x7fb3b40ae6d0 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7fb3b40ae768 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7fb3b40ae768
|   `-ParmVarDecl 0x7fb3b40ae890 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7fb3b40acbc8 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7fb3b40acaf8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7fb3b40acd98 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7fb3b40acd80 <line:17:5, col:20>
|     `-BinaryOperator 0x7fb3b40acd58 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fb3b40acd28 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fb3b40acc90 <col:12, col:14> 'const double' lvalue .x 0x7fb3b40ac558
|       |   `-DeclRefExpr 0x7fb3b40acc68 <col:12> 'const struct P1' lvalue ParmVar 0x7fb3b40acaf8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7fb3b40acd40 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fb3b40accf0 <col:18, col:20> 'const double' lvalue .x 0x7fb3b40ac558
|           `-DeclRefExpr 0x7fb3b40accc8 <col:18> 'const struct P1' lvalue ParmVar 0x7fb3b40acaf8 'p' 'const struct P1 &'
|-FunctionDecl 0x7fb3b40acec8 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7fb3b40acdf8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7fb3b40ad098 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7fb3b40ad080 <line:22:5, col:20>
|     `-BinaryOperator 0x7fb3b40ad058 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fb3b40ad028 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fb3b40acf90 <col:12, col:14> 'const double' lvalue .y 0x7fb3b40ac798
|       |   `-DeclRefExpr 0x7fb3b40acf68 <col:12> 'const struct P2' lvalue ParmVar 0x7fb3b40acdf8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7fb3b40ad040 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fb3b40acff0 <col:18, col:20> 'const double' lvalue .y 0x7fb3b40ac798
|           `-DeclRefExpr 0x7fb3b40acfc8 <col:18> 'const struct P2' lvalue ParmVar 0x7fb3b40acdf8 'p' 'const struct P2 &'
|-FunctionDecl 0x7fb3b40ad1c8 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7fb3b40ad0f8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7fb3b40ad888 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7fb3b40ad870 <line:27:5, col:41>
|     `-CallExpr 0x7fb3b40ad840 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7fb3b40ad828 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7fb3b40ad7e8 <col:12, col:17> 'double (double)' lvalue Function 0x7fb3b502dbc0 'sqrt' 'double (double)' (UsingShadow 0x7fb3b409a820 'sqrt')
|       `-BinaryOperator 0x7fb3b40ad590 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7fb3b40ad400 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7fb3b40ad3e8 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7fb3b40ad390 <col:22> 'double (const struct P1 &)' lvalue Function 0x7fb3b40acbc8 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7fb3b40ad430 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7fb3b40ad368 <col:28> 'const struct P3' lvalue ParmVar 0x7fb3b40ad0f8 'p' 'const struct P3 &'
|         `-CallExpr 0x7fb3b40ad540 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7fb3b40ad528 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fb3b40ad4d0 <col:33> 'double (const struct P2 &)' lvalue Function 0x7fb3b40acec8 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7fb3b40ad570 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7fb3b40ad4a8 <col:39> 'const struct P3' lvalue ParmVar 0x7fb3b40ad0f8 'p' 'const struct P3 &'
`-FunctionDecl 0x7fb3b40ad8d0 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7fb3b40aef50 <line:31:1, line:37:1>
    |-DeclStmt 0x7fb3b40aeb68 <line:32:5, col:12>
    | `-VarDecl 0x7fb3b40ad9a8 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7fb3b40ae8f8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7fb3b40aeca8 <line:33:5, col:17>
    | `-VarDecl 0x7fb3b40aebb8 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7fb3b40aec88 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7fb3b40aec68 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7fb3b40aec18 <col:15> 'struct P3' lvalue Var 0x7fb3b40ad9a8 'p3' 'struct P3'
    |-DeclStmt 0x7fb3b40aef00 <line:35:5, col:23>
    | `-VarDecl 0x7fb3b40aecd0 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7fb3b40aee20 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7fb3b40aee08 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fb3b40aedb0 <col:14> 'double (const struct P3 &)' lvalue Function 0x7fb3b40ad1c8 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7fb3b40aee50 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7fb3b40aed88 <col:20> 'struct P3' lvalue Var 0x7fb3b40ad9a8 'p3' 'struct P3'
    `-ReturnStmt 0x7fb3b40aef38 <line:36:5, col:12>
      `-IntegerLiteral 0x7fb3b40aef18 <col:12> 'int' 0
