TranslationUnitDecl 0x7fc612030ad0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fc612031060 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fc612030d40 '__int128'
|-TypedefDecl 0x7fc6120310d0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fc612030d60 'unsigned __int128'
|-TypedefDecl 0x7fc612031418 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fc6120311c0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fc612031128 '__NSConstantString_tag'
|-TypedefDecl 0x7fc6120314b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fc612031470 'char *'
|   `-BuiltinType 0x7fc612030b60 'char'
|-TypedefDecl 0x7fc612063200 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fc612031790 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fc6120315a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fc612031508 '__va_list_tag'
|-NamespaceDecl 0x7fc612063258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:414:1, line:417:1> line:414:11 std
| `-NamespaceDecl 0x7fc6120632c0 <line:415:3, line:416:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7fc6120633d8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7fc612063440 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7fc612030cc0 'float'
| |-TypedefDecl 0x7fc6120634b0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7fc612030ce0 'double'
| |-FunctionDecl 0x7fc6120635d8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7fc612063798 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7fc6120636c8 <col:26> col:31 'float'
| |-FunctionDecl 0x7fc612063918 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7fc612063850 <col:26> col:32 'double'
| |-FunctionDecl 0x7fc612063a98 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7fc6120639d0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7fc612063be0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fc612063b50 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fc612063c80 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc612063d70 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fc612063ce0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fc612063e10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc612063f00 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fc612063e70 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fc612063fa0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc612064090 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fc612064000 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fc612064130 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384aa30 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fc612064190 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fc61384aad0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384abc0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fc61384ab30 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fc61384ac60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384ad50 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fc61384acc0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fc61384adf0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384aee0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fc61384ae50 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fc61384af80 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384b070 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fc61384afe0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fc61384b110 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384b200 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fc61384b170 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fc61384b2a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384b390 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fc61384b300 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fc61384b430 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384b520 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fc61384b490 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fc61384b5c0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384b6b0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fc61384b620 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7fc61384b750 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384b840 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fc61384b7b0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7fc61384b8e0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384ba00 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fc61384b940 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7fc61384baa0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384bb90 prev 0x7fc612063be0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fc61384bb00 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fc61384c338 <col:58, line:206:1>
| | | `-ReturnStmt 0x7fc61384c320 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7fc61384c308 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384c2e0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fc61384bcf8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fc61384bcc8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fc61384bc78 <col:12> 'float' lvalue ParmVar 0x7fc61384bb00 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7fc61384bce0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fc61384bca0 <col:19> 'float' lvalue ParmVar 0x7fc61384bb00 '__x' 'float'
| | |       `-BinaryOperator 0x7fc61384c2b8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fc61384c000 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7fc61384bfe8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fc61384bf40 <col:26> '<builtin fn type>' Function 0x7fc61384bde8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fc61384c030 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fc61384bf68 <col:42> 'float' lvalue ParmVar 0x7fc61384bb00 '__x' 'float'
| | |         `-CallExpr 0x7fc61384c290 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7fc61384c278 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fc61384c1f0 <col:50> '<builtin fn type>' Function 0x7fc61384c100 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fc61384bc30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384c400 prev 0x7fc612063d70 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fc61384c370 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fc61384d038 <col:59, line:209:1>
| | | `-ReturnStmt 0x7fc61384d020 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7fc61384d008 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384cfe0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fc61384c568 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fc61384c538 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fc61384c4e8 <col:12> 'double' lvalue ParmVar 0x7fc61384c370 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7fc61384c550 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fc61384c510 <col:19> 'double' lvalue ParmVar 0x7fc61384c370 '__x' 'double'
| | |       `-BinaryOperator 0x7fc61384cfb8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7fc61384c870 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7fc61384c858 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fc61384c7b0 <col:26> '<builtin fn type>' Function 0x7fc61384c658 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fc61384c8a0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fc61384c7d8 <col:41> 'double' lvalue ParmVar 0x7fc61384c370 '__x' 'double'
| | |         `-CallExpr 0x7fc61384cf90 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7fc61384cf78 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fc61384cef0 <col:49> '<builtin fn type>' Function 0x7fc61384ce00 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fc61384c4a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384d100 prev 0x7fc612063f00 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fc61384d070 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fc61384d8a8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7fc61384d890 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7fc61384d878 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384d850 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fc61384d268 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fc61384d238 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fc61384d1e8 <col:12> 'long double' lvalue ParmVar 0x7fc61384d070 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7fc61384d250 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fc61384d210 <col:19> 'long double' lvalue ParmVar 0x7fc61384d070 '__x' 'long double'
| | |       `-BinaryOperator 0x7fc61384d828 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fc61384d570 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7fc61384d558 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fc61384d4b0 <col:26> '<builtin fn type>' Function 0x7fc61384d358 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fc61384d5a0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fc61384d4d8 <col:42> 'long double' lvalue ParmVar 0x7fc61384d070 '__x' 'long double'
| | |         `-CallExpr 0x7fc61384d800 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7fc61384d7e8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fc61384d760 <col:50> '<builtin fn type>' Function 0x7fc61384d670 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fc61384d1a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384d970 prev 0x7fc612064090 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fc61384d8e0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fc61384dbc8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7fc61384dbb0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7fc61384db98 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384db70 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fc61384dac0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7fc61384daa8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fc61384da58 <col:12> '<builtin fn type>' Function 0x7fc61384bde8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7fc61384daf0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fc61384da80 <col:28> 'float' lvalue ParmVar 0x7fc61384d8e0 '__x' 'float'
| | |       `-CallExpr 0x7fc61384db48 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7fc61384db30 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fc61384db08 <col:36> '<builtin fn type>' Function 0x7fc61384c100 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fc61384da10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384dc90 prev 0x7fc61384aa30 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fc61384dc00 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fc61384e2e8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7fc61384e2d0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7fc61384e2b8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384e290 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7fc61384dde0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7fc61384ddc8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fc61384dd78 <col:12> '<builtin fn type>' Function 0x7fc61384c658 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fc61384e210 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fc61384dda0 <col:27> 'double' lvalue ParmVar 0x7fc61384dc00 '__x' 'double'
| | |       `-CallExpr 0x7fc61384e268 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7fc61384e250 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fc61384e228 <col:35> '<builtin fn type>' Function 0x7fc61384ce00 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fc61384dd30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384e3b0 prev 0x7fc61384abc0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fc61384e320 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fc61384e608 <col:61, line:221:1>
| | | `-ReturnStmt 0x7fc61384e5f0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7fc61384e5d8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384e5b0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fc61384e500 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7fc61384e4e8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fc61384e498 <col:12> '<builtin fn type>' Function 0x7fc61384d358 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fc61384e530 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fc61384e4c0 <col:28> 'long double' lvalue ParmVar 0x7fc61384e320 '__x' 'long double'
| | |       `-CallExpr 0x7fc61384e588 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7fc61384e570 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fc61384e548 <col:36> '<builtin fn type>' Function 0x7fc61384d670 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fc61384e450 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384e6d0 prev 0x7fc61384ad50 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fc61384e640 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fc61384e890 <col:55, line:224:1>
| | | `-ReturnStmt 0x7fc61384e878 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7fc61384e860 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384e838 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fc61384e808 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fc61384e7b8 <col:12> 'float' lvalue ParmVar 0x7fc61384e640 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7fc61384e820 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fc61384e7e0 <col:19> 'float' lvalue ParmVar 0x7fc61384e640 '__x' 'float'
| | `-AlwaysInlineAttr 0x7fc61384e770 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384e958 prev 0x7fc61384aee0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fc61384e8c8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fc61384eb18 <col:56, line:227:1>
| | | `-ReturnStmt 0x7fc61384eb00 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7fc61384eae8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384eac0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fc61384ea90 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fc61384ea40 <col:12> 'double' lvalue ParmVar 0x7fc61384e8c8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7fc61384eaa8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fc61384ea68 <col:19> 'double' lvalue ParmVar 0x7fc61384e8c8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7fc61384e9f8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384ebe0 prev 0x7fc61384b070 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fc61384eb50 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fc61384eda0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7fc61384ed88 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7fc61384ed70 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc61384ed48 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fc61384ed18 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fc61384ecc8 <col:12> 'long double' lvalue ParmVar 0x7fc61384eb50 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7fc61384ed30 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fc61384ecf0 <col:19> 'long double' lvalue ParmVar 0x7fc61384eb50 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7fc61384ec80 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc61384ee68 prev 0x7fc61384b6b0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fc61384edd8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7fc613850ad8 <col:57, line:235:1>
| | | |-DeclStmt 0x7fc6138507b0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7fc61384ef50 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7fc61384f090 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7fc61384f0f0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7fc613850280 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fc613850750 <col:5>
| | | | | |-CXXConstructorDecl 0x7fc6138503c8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7fc6138503c8
| | | | | | `-ParmVarDecl 0x7fc6138504f0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7fc613850588 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7fc613850588
| | | | |   `-ParmVarDecl 0x7fc6138506b0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7fc613850200 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7fc613850768 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fc613850868 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7fc6138507f0 <col:5, col:9> 'float' lvalue .__f 0x7fc61384f090
| | | | | `-DeclRefExpr 0x7fc6138507c8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fc613850200 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7fc613850850 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fc613850828 <col:15> 'float' lvalue ParmVar 0x7fc61384edd8 '__x' 'float'
| | | `-ReturnStmt 0x7fc613850ac0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7fc613850a98 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fc613850a80 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fc613850a60 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7fc6138509f0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7fc6138509d8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7fc613850980 <col:18, col:22> 'unsigned int' lvalue .__u 0x7fc61384f0f0
| | |           |   `-DeclRefExpr 0x7fc613850958 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fc613850200 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7fc6138509b8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7fc61384ef08 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc613850bb0 prev 0x7fc61384b840 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fc613850b20 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7fc6138541b0 <col:58, line:240:1>
| | | |-DeclStmt 0x7fc613853e88 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7fc613850c98 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7fc613850dd0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7fc613850e30 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7fc613850f70 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fc613853e28 <col:5>
| | | | | |-CXXConstructorDecl 0x7fc613851088 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7fc613851088
| | | | | | `-ParmVarDecl 0x7fc613853c00 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7fc613853c98 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7fc613853c98
| | | | |   `-ParmVarDecl 0x7fc613853dc0 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7fc613850ef0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7fc613853e40 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fc613853f40 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7fc613853ec8 <col:5, col:9> 'double' lvalue .__f 0x7fc613850dd0
| | | | | `-DeclRefExpr 0x7fc613853ea0 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fc613850ef0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7fc613853f28 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fc613853f00 <col:15> 'double' lvalue ParmVar 0x7fc613850b20 '__x' 'double'
| | | `-ReturnStmt 0x7fc613854198 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7fc613854170 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fc613854158 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fc613854138 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7fc6138540c8 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7fc6138540b0 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7fc613854058 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7fc613850e30
| | |           |   `-DeclRefExpr 0x7fc613854030 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fc613850ef0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7fc613854090 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7fc613850c50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc613854288 prev 0x7fc61384ba00 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fc6138541f8 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7fc613856760 <col:63, line:249:1>
| | | |-DeclStmt 0x7fc613856338 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7fc613854370 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7fc6138544b0 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7fc6138544f8 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7fc613854630 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7fc613854690 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7fc6138549a8 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7fc613854a88 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fc613854a88
| | | | | | |-CXXConstructorDecl 0x7fc613855dc8 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7fc613855dc8
| | | | | | | `-ParmVarDecl 0x7fc613855ef0 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7fc613855f88 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7fc613855f88
| | | | | |   `-ParmVarDecl 0x7fc6138560b0 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7fc613854750 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7fc6138548a0 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fc6138562d8 <col:5>
| | | | | |-CXXConstructorDecl 0x7fc613855c00 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7fc613855c00
| | | | | | `-ParmVarDecl 0x7fc613855d30 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7fc613856148 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7fc613856148
| | | | |   `-ParmVarDecl 0x7fc613856270 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7fc613854820 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7fc6138562f0 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fc6138563f0 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7fc613856378 <col:5, col:9> 'long double' lvalue .__ld 0x7fc6138544b0
| | | | | `-DeclRefExpr 0x7fc613856350 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fc613854820 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7fc6138563d8 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fc6138563b0 <col:16> 'long double' lvalue ParmVar 0x7fc6138541f8 '__x' 'long double'
| | | `-ReturnStmt 0x7fc613856748 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7fc613856720 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7fc613856700 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7fc613856690 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7fc613856678 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7fc613856660 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7fc613856608 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7fc613854690
| | |         |     `-MemberExpr 0x7fc6138565d0 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7fc613854750
| | |         |       `-DeclRefExpr 0x7fc6138565a8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fc613854820 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7fc613856640 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7fc613854328 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc613856838 prev 0x7fc61384b200 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fc6138567a8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fc613856bc0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7fc613856ba8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7fc613856b90 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc613856b68 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fc613856b50 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fc613856a10 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fc6138569f8 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fc6138569a0 <col:12> 'int (float)' lvalue Function 0x7fc61384bb90 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7fc613856a40 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fc613856978 <col:31> 'float' lvalue ParmVar 0x7fc6138567a8 '__x' 'float'
| | |       `-BinaryOperator 0x7fc613856b28 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7fc613856ac0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7fc613856aa8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fc613856a58 <col:39> '<builtin fn type>' Function 0x7fc61384bde8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fc613856af0 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fc613856a80 <col:55> 'float' lvalue ParmVar 0x7fc6138567a8 '__x' 'float'
| | |         `-FloatingLiteral 0x7fc613856b08 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7fc6138568d8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc613857090 prev 0x7fc61384b390 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fc613857000 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fc613857410 <col:59, line:262:1>
| | | `-ReturnStmt 0x7fc6138573f8 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7fc6138573e0 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc6138573b8 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fc6138573a0 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fc613857260 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fc613857248 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fc6138571f8 <col:12> 'int (double)' lvalue Function 0x7fc61384c400 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7fc613857290 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fc6138571d0 <col:31> 'double' lvalue ParmVar 0x7fc613857000 '__x' 'double'
| | |       `-BinaryOperator 0x7fc613857378 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7fc613857310 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7fc6138572f8 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fc6138572a8 <col:39> '<builtin fn type>' Function 0x7fc61384c658 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fc613857340 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fc6138572d0 <col:54> 'double' lvalue ParmVar 0x7fc613857000 '__x' 'double'
| | |         `-FloatingLiteral 0x7fc613857358 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7fc613857130 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc6138574d8 prev 0x7fc61384b520 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fc613857448 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fc613857870 <col:64, line:265:1>
| | | `-ReturnStmt 0x7fc613857858 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7fc613857840 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fc613857818 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fc613857800 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fc6138576b0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fc613857698 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fc613857640 <col:12> 'int (long double)' lvalue Function 0x7fc61384d100 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7fc6138576e0 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fc613857618 <col:31> 'long double' lvalue ParmVar 0x7fc613857448 '__x' 'long double'
| | |       `-BinaryOperator 0x7fc6138577d8 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7fc613857760 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7fc613857748 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fc6138576f8 <col:39> '<builtin fn type>' Function 0x7fc61384d358 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fc613857790 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fc613857720 <col:55> 'long double' lvalue ParmVar 0x7fc613857448 '__x' 'long double'
| | |         `-FloatingLiteral 0x7fc6138577a8 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7fc613857578 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc613857938 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7fc6138578a8 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc6138579d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613857a20 <col:14> Implicit
| |-FunctionDecl 0x7fc613857ad8 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7fc613857a48 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc613857b78 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613857bc0 <col:15> Implicit
| |-FunctionDecl 0x7fc613857c78 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613857be8 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc613857d18 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613857d60 <col:20> Implicit
| |-FunctionDecl 0x7fc613857e18 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613857d88 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc613857eb8 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613857f00 <col:14> Implicit
| |-FunctionDecl 0x7fc613858000 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7fc613857f28 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc6138580a0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc6138580e8 <col:15> Implicit
| |-FunctionDecl 0x7fc6138581a0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613858110 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc613858240 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613858288 <col:20> Implicit
| |-FunctionDecl 0x7fc613858340 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7fc6138582b0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc6138583e0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613858428 <col:14> Implicit
| |-FunctionDecl 0x7fc6138584e0 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7fc613858450 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc613858580 <col:15> Implicit
| | `-NoThrowAttr 0x7fc6138585c8 <col:15> Implicit
| |-FunctionDecl 0x7fc613858680 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc6138585f0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc613858720 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613858768 <col:20> Implicit
| |-FunctionDecl 0x7fc6138588e8 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc613858790 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fc613858808 <col:28> col:33 'float'
| | |-ConstAttr 0x7fc6138589d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613858a18 <col:14> Implicit
| |-FunctionDecl 0x7fc613858b98 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc613858a40 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fc613858ab8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fc613858c80 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613858cc8 <col:15> Implicit
| |-FunctionDecl 0x7fc613858e48 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc613858cf0 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fc613858d68 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fc613858f30 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613858f78 <col:20> Implicit
| |-FunctionDecl 0x7fc613859830 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613858fa0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fc6138598d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613859918 <col:14> Implicit
| |-FunctionDecl 0x7fc6138599d0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7fc613859940 <col:19> col:25 'double'
| | |-ConstAttr 0x7fc613859a70 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613859ab8 <col:15> Implicit
| |-FunctionDecl 0x7fc613859b70 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613859ae0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fc613859c10 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613859c58 <col:20> Implicit
| |-FunctionDecl 0x7fc613859d10 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613859c80 <col:19> col:24 'float'
| | |-ConstAttr 0x7fc613859db0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613859df8 <col:14> Implicit
| |-FunctionDecl 0x7fc613859eb0 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7fc613859e20 <col:19> col:25 'double'
| | |-ConstAttr 0x7fc613859f50 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613859f98 <col:15> Implicit
| |-FunctionDecl 0x7fc61385a050 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613859fc0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fc61385a0f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385a138 <col:20> Implicit
| |-FunctionDecl 0x7fc61385a1f0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385a160 <col:19> col:24 'float'
| | |-ConstAttr 0x7fc61385a290 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385a2d8 <col:14> Implicit
| |-FunctionDecl 0x7fc61385a390 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385a300 <col:19> col:25 'double'
| | |-ConstAttr 0x7fc61385a430 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385a478 <col:15> Implicit
| |-FunctionDecl 0x7fc61385a530 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385a4a0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fc61385a5d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385a618 <col:20> Implicit
| |-FunctionDecl 0x7fc61385a6d0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385a640 <col:21> col:26 'float'
| | |-ConstAttr 0x7fc61385a770 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385a7b8 <col:14> Implicit
| |-FunctionDecl 0x7fc61385b090 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385b000 <col:21> col:27 'double'
| | |-ConstAttr 0x7fc61385b130 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385b178 <col:15> Implicit
| |-FunctionDecl 0x7fc61385b230 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385b1a0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fc61385b2d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385b318 <col:20> Implicit
| |-FunctionDecl 0x7fc61385b3d0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385b340 <col:21> col:26 'float'
| | |-ConstAttr 0x7fc61385b470 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385b4b8 <col:14> Implicit
| |-FunctionDecl 0x7fc61385b570 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385b4e0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fc61385b610 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385b658 <col:15> Implicit
| |-FunctionDecl 0x7fc61385b710 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385b680 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fc61385b7b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385b7f8 <col:20> Implicit
| |-FunctionDecl 0x7fc61385b8b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385b820 <col:21> col:26 'float'
| | |-ConstAttr 0x7fc61385b950 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385b998 <col:14> Implicit
| |-FunctionDecl 0x7fc61385ba50 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385b9c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fc61385baf0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385bb38 <col:15> Implicit
| |-FunctionDecl 0x7fc61385bbf0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385bb60 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fc61385bc90 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385bcd8 <col:20> Implicit
| |-FunctionDecl 0x7fc61385bd90 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385bd00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc61385be30 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385be78 <col:14> Implicit
| |-FunctionDecl 0x7fc61385bf30 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385bea0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc61385bfd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385c838 <col:15> Implicit
| |-FunctionDecl 0x7fc61385c8f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385c860 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc61385c990 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385c9d8 <col:20> Implicit
| |-FunctionDecl 0x7fc61385ca90 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385ca00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc61385cb30 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385cb78 <col:14> Implicit
| |-FunctionDecl 0x7fc61385cc30 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385cba0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc61385ccd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385cd18 <col:15> Implicit
| |-FunctionDecl 0x7fc61385cdd0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385cd40 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc61385ce70 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385ceb8 <col:20> Implicit
| |-FunctionDecl 0x7fc61385cf70 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385cee0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc61385d010 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385d058 <col:14> Implicit
| |-FunctionDecl 0x7fc61385d110 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385d080 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc61385d1b0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385d1f8 <col:15> Implicit
| |-FunctionDecl 0x7fc61385d2b0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385d220 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc61385d350 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385d398 <col:20> Implicit
| |-FunctionDecl 0x7fc61385d450 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385d3c0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fc61385d4f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385d538 <col:14> Implicit
| |-FunctionDecl 0x7fc61385d5f0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385d560 <col:19> col:25 'double'
| | |-ConstAttr 0x7fc61385d690 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385d6d8 <col:15> Implicit
| |-FunctionDecl 0x7fc61385d800 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385d700 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fc61385d8a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385d8e8 <col:20> Implicit
| |-FunctionDecl 0x7fc61385d9a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385d910 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc61385da40 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385da88 <col:14> Implicit
| |-FunctionDecl 0x7fc61385db40 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385dab0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc61385dbe0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385dc28 <col:15> Implicit
| |-FunctionDecl 0x7fc61385dce0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385dc50 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc61385dd80 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385ddc8 <col:20> Implicit
| |-FunctionDecl 0x7fc61385de80 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385ddf0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fc61385df20 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385df68 <col:14> Implicit
| |-FunctionDecl 0x7fc61385e020 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385df90 <col:21> col:27 'double'
| | |-ConstAttr 0x7fc61385e0c0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385e108 <col:15> Implicit
| |-FunctionDecl 0x7fc61385e1c0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385e130 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fc61385e260 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385e2a8 <col:20> Implicit
| |-FunctionDecl 0x7fc61385e360 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385e2d0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fc61385e400 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385e448 <col:14> Implicit
| |-FunctionDecl 0x7fc61385e500 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385e470 <col:19> col:25 'double'
| | |-ConstAttr 0x7fc61385e5a0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385e5e8 <col:15> Implicit
| |-FunctionDecl 0x7fc61385e6a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385e610 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fc61385e740 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385e788 <col:20> Implicit
| |-FunctionDecl 0x7fc61385e890 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385e800 <col:21> col:26 'float'
| | |-ConstAttr 0x7fc61385e930 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385e978 <col:14> Implicit
| |-FunctionDecl 0x7fc61385ea30 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385e9a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fc61385ead0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385eb18 <col:15> Implicit
| |-FunctionDecl 0x7fc61385ebd0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385eb40 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fc61385ec70 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385ecb8 <col:20> Implicit
| |-FunctionDecl 0x7fc61385ed70 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385ece0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc61385ee10 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385ee58 <col:14> Implicit
| |-FunctionDecl 0x7fc61385ef10 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385ee80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc61385efb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385eff8 <col:15> Implicit
| |-FunctionDecl 0x7fc61385f0b0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385f020 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc61385f150 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385f198 <col:20> Implicit
| |-FunctionDecl 0x7fc61385f250 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385f1c0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fc61385f2f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385f338 <col:14> Implicit
| |-FunctionDecl 0x7fc61385f3f0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7fc61385f360 <col:21> col:27 'double'
| | |-ConstAttr 0x7fc61385f490 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61385f4d8 <col:15> Implicit
| |-FunctionDecl 0x7fc61385f590 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61385f500 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fc61385f630 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385f678 <col:20> Implicit
| |-FunctionDecl 0x7fc61385f730 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61385f6a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc61385f7d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613860838 <col:14> Implicit
| |-FunctionDecl 0x7fc6138608f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7fc613860860 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc613860990 <col:15> Implicit
| | `-NoThrowAttr 0x7fc6138609d8 <col:15> Implicit
| |-FunctionDecl 0x7fc613860a90 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613860a00 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc613860b30 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613860b78 <col:20> Implicit
| |-FunctionDecl 0x7fc613860d18 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7fc613860ba0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fc613860c40 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7fc613860e00 <col:14> Implicit
| |-FunctionDecl 0x7fc613860fd8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7fc613860e60 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fc613860f00 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7fc6138610c0 <col:15> Implicit
| |-FunctionDecl 0x7fc613861298 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7fc613861120 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fc6138611c0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7fc613861380 <col:20> Implicit
| |-FunctionDecl 0x7fc613861538 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fc6138613e0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fc613861458 <col:28> col:31 'int'
| | |-ConstAttr 0x7fc613861620 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613861668 <col:14> Implicit
| |-FunctionDecl 0x7fc613862800 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7fc613861690 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fc613861708 <col:29> col:32 'int'
| | |-ConstAttr 0x7fc6138628f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613862938 <col:15> Implicit
| |-FunctionDecl 0x7fc613862ab8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fc613862960 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fc6138629d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7fc613862ba0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613862be8 <col:20> Implicit
| |-FunctionDecl 0x7fc613862d88 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7fc613862c10 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fc613862cb0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7fc613862e70 <col:14> Implicit
| |-FunctionDecl 0x7fc613863028 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7fc613862ed0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fc613862f48 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7fc613863110 <col:15> Implicit
| |-FunctionDecl 0x7fc6138632c8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7fc613863170 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fc6138631e8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7fc6138633b0 <col:20> Implicit
| |-FunctionDecl 0x7fc6138634a0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7fc613863410 <col:19> col:24 'float'
| | |-ConstAttr 0x7fc613863578 <col:12> Implicit
| | `-NoThrowAttr 0x7fc6138635c0 <col:12> Implicit
| |-FunctionDecl 0x7fc613863678 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7fc6138635e8 <col:18> col:24 'double'
| | |-ConstAttr 0x7fc613863758 <col:12> Implicit
| | `-NoThrowAttr 0x7fc6138637a0 <col:12> Implicit
| |-FunctionDecl 0x7fc613864890 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7fc613864800 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7fc613864968 <col:12> Implicit
| | `-NoThrowAttr 0x7fc6138649b0 <col:12> Implicit
| |-FunctionDecl 0x7fc613864ae8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fc6138649d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fc613864a50 <col:29> col:32 'int'
| | |-ConstAttr 0x7fc613864b90 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613864bd8 <col:14> Implicit
| |-FunctionDecl 0x7fc613864d10 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7fc613864c00 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fc613864c78 <col:30> col:33 'int'
| | |-ConstAttr 0x7fc613864db8 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613864e00 <col:15> Implicit
| |-FunctionDecl 0x7fc613864f38 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fc613864e28 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fc613864ea0 <col:41> col:44 'int'
| | |-ConstAttr 0x7fc613864fe0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613865028 <col:20> Implicit
| |-FunctionDecl 0x7fc6138651a8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7fc613865050 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7fc6138650c8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7fc613865290 <col:14> Implicit
| | `-NoThrowAttr 0x7fc6138652d8 <col:14> Implicit
| |-FunctionDecl 0x7fc613865458 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7fc613865300 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7fc613865378 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7fc613865540 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613865588 <col:15> Implicit
| |-FunctionDecl 0x7fc613865708 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7fc6138655b0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7fc613865628 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7fc6138657f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613865838 <col:20> Implicit
| |-FunctionDecl 0x7fc6138658f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613865860 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fc613865990 <col:14> Implicit
| | `-ConstAttr 0x7fc6138659d8 <col:14> Implicit
| |-FunctionDecl 0x7fc613865a90 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7fc613865a00 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fc613865b30 <col:15> Implicit
| | `-ConstAttr 0x7fc613865b78 <col:15> Implicit
| |-FunctionDecl 0x7fc613865c30 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613865ba0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fc613865cd0 <col:20> Implicit
| | `-ConstAttr 0x7fc613865d18 <col:20> Implicit
| |-FunctionDecl 0x7fc613865dd0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613865d40 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc613865e70 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613865eb8 <col:14> Implicit
| |-FunctionDecl 0x7fc613865f70 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7fc613865ee0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc613866010 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613866058 <col:15> Implicit
| |-FunctionDecl 0x7fc613866110 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613866080 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc6138661b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc6138661f8 <col:20> Implicit
| |-FunctionDecl 0x7fc613866330 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc613866220 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fc613866298 <col:28> col:33 'float'
| | |-ConstAttr 0x7fc6138663d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613866420 <col:14> Implicit
| |-FunctionDecl 0x7fc613866558 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc613866448 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fc6138664c0 <col:29> col:35 'double'
| | |-ConstAttr 0x7fc613866600 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613866648 <col:15> Implicit
| |-FunctionDecl 0x7fc613866800 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc613866670 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fc6138666e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fc6138668a8 <col:20> Implicit
| | `-NoThrowAttr 0x7fc6138668f0 <col:20> Implicit
| |-FunctionDecl 0x7fc613866a28 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc613866918 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fc613866990 <col:26> col:31 'float'
| | |-ConstAttr 0x7fc613866ad0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613866b18 <col:14> Implicit
| |-FunctionDecl 0x7fc613866c50 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc613866b40 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fc613866bb8 <col:27> col:33 'double'
| | |-ConstAttr 0x7fc613866cf8 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613866d40 <col:15> Implicit
| |-FunctionDecl 0x7fc613866e78 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc613866d68 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fc613866de0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7fc613866f20 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613866f68 <col:20> Implicit
| |-FunctionDecl 0x7fc613867020 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613866f90 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc6138670c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613867108 <col:14> Implicit
| |-FunctionDecl 0x7fc6138671c0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7fc613867130 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc613867260 <col:15> Implicit
| | `-NoThrowAttr 0x7fc6138672a8 <col:15> Implicit
| |-FunctionDecl 0x7fc613867360 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc6138672d0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc613867400 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613867448 <col:20> Implicit
| |-FunctionDecl 0x7fc613867500 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7fc613867470 <col:19> col:24 'float'
| | |-ConstAttr 0x7fc6138675a0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc6138675e8 <col:14> Implicit
| |-FunctionDecl 0x7fc6138676a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7fc613867610 <col:19> col:25 'double'
| | |-ConstAttr 0x7fc613867740 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613867788 <col:15> Implicit
| |-FunctionDecl 0x7fc613867890 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613867800 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fc613867930 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613867978 <col:20> Implicit
| |-FunctionDecl 0x7fc613867a30 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7fc6138679a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fc613867ad0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc613867b18 <col:14> Implicit
| |-FunctionDecl 0x7fc613867bd0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7fc613867b40 <col:20> col:26 'double'
| | |-ConstAttr 0x7fc613867c70 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613867cb8 <col:15> Implicit
| |-FunctionDecl 0x7fc613867d70 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613867ce0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fc613867e10 <col:20> Implicit
| | `-NoThrowAttr 0x7fc613867e58 <col:20> Implicit
| |-FunctionDecl 0x7fc613867f10 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613867e80 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7fc613867fb0 <col:14> Implicit
| |-FunctionDecl 0x7fc6138680a0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fc613868010 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7fc613868140 <col:15> Implicit
| |-FunctionDecl 0x7fc613868230 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc6138681a0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7fc6138682d0 <col:20> Implicit
| |-FunctionDecl 0x7fc6138683c0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613868330 <col:22> col:27 'float'
| | |-ConstAttr 0x7fc613868460 <col:14> Implicit
| | `-NoThrowAttr 0x7fc6138684a8 <col:14> Implicit
| |-FunctionDecl 0x7fc613868560 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fc6138684d0 <col:22> col:28 'double'
| | |-ConstAttr 0x7fc613868600 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613868648 <col:15> Implicit
| |-FunctionDecl 0x7fc613868700 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613868670 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7fc6138687a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc6138687e8 <col:20> Implicit
| |-FunctionDecl 0x7fc6138688a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613868818 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fc613868948 <col:14> Implicit
| | `-ConstAttr 0x7fc613868990 <col:14> Implicit
| |-FunctionDecl 0x7fc613868a48 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7fc6138689b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fc613868ae8 <col:15> Implicit
| | `-ConstAttr 0x7fc613868b30 <col:15> Implicit
| |-FunctionDecl 0x7fc613868be8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613868b58 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fc613868c88 <col:20> Implicit
| | `-ConstAttr 0x7fc613868cd0 <col:20> Implicit
| |-FunctionDecl 0x7fc613868d88 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7fc613868cf8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fc613868e28 <col:14> Implicit
| | `-ConstAttr 0x7fc613868e70 <col:14> Implicit
| |-FunctionDecl 0x7fc613868f28 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7fc613868e98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fc613868fc8 <col:15> Implicit
| | `-ConstAttr 0x7fc613869010 <col:15> Implicit
| |-FunctionDecl 0x7fc6138690c8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613869038 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fc613869168 <col:20> Implicit
| | `-ConstAttr 0x7fc6138691b0 <col:20> Implicit
| |-FunctionDecl 0x7fc613869268 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7fc6138691d8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7fc613869308 <col:14> Implicit
| | `-ConstAttr 0x7fc613869350 <col:14> Implicit
| |-FunctionDecl 0x7fc613869408 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7fc613869378 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7fc6138694a8 <col:15> Implicit
| | `-ConstAttr 0x7fc6138694f0 <col:15> Implicit
| |-FunctionDecl 0x7fc6138695a8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613869518 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7fc613869648 <col:20> Implicit
| | `-ConstAttr 0x7fc613869690 <col:20> Implicit
| |-FunctionDecl 0x7fc613869748 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7fc6138696b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fc6138697e8 <col:14> Implicit
| | `-ConstAttr 0x7fc613869838 <col:14> Implicit
| |-FunctionDecl 0x7fc6138698f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7fc613869860 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fc613869990 <col:15> Implicit
| | `-ConstAttr 0x7fc6138699d8 <col:15> Implicit
| |-FunctionDecl 0x7fc613869a90 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc613869a00 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fc613869b30 <col:20> Implicit
| | `-ConstAttr 0x7fc613869b78 <col:20> Implicit
| |-FunctionDecl 0x7fc613869c68 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7fc613869ba0 <col:24> col:29 'float'
| | |-ConstAttr 0x7fc613869d48 <col:17> Implicit
| | `-NoThrowAttr 0x7fc613869d90 <col:17> Implicit
| |-FunctionDecl 0x7fc613869e88 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7fc613869db8 <col:23> col:29 'double'
| | |-ConstAttr 0x7fc613869f68 <col:17> Implicit
| | `-NoThrowAttr 0x7fc613869fb0 <col:17> Implicit
| |-FunctionDecl 0x7fc61386a0a8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7fc613869fd8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7fc61386a188 <col:17> Implicit
| | `-NoThrowAttr 0x7fc61386a1d0 <col:17> Implicit
| |-FunctionDecl 0x7fc61386a288 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61386a1f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fc61386a328 <col:14> Implicit
| | `-ConstAttr 0x7fc61386a370 <col:14> Implicit
| |-FunctionDecl 0x7fc61386a428 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7fc61386a398 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fc61386a4c8 <col:15> Implicit
| | `-ConstAttr 0x7fc61386a510 <col:15> Implicit
| |-FunctionDecl 0x7fc61386a5c8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61386a538 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fc61386a668 <col:20> Implicit
| | `-ConstAttr 0x7fc61386a6b0 <col:20> Implicit
| |-FunctionDecl 0x7fc61386a768 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7fc61386a6d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7fc61386a808 <col:17> Implicit
| | `-NoThrowAttr 0x7fc61386a850 <col:17> Implicit
| |-FunctionDecl 0x7fc61386a908 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7fc61386a878 <col:24> col:30 'double'
| | |-ConstAttr 0x7fc61386a9a8 <col:17> Implicit
| | `-NoThrowAttr 0x7fc61386a9f0 <col:17> Implicit
| |-FunctionDecl 0x7fc61386aaa8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7fc61386aa18 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fc61386ab48 <col:17> Implicit
| | `-NoThrowAttr 0x7fc61386ab90 <col:17> Implicit
| |-FunctionDecl 0x7fc61386ac88 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7fc61386abb8 <col:30> col:35 'float'
| | |-ConstAttr 0x7fc61386ad68 <col:22> Implicit
| | `-NoThrowAttr 0x7fc61386adb0 <col:22> Implicit
| |-FunctionDecl 0x7fc61386aea8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7fc61386add8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fc61386af88 <col:22> Implicit
| | `-NoThrowAttr 0x7fc61386afd0 <col:22> Implicit
| |-FunctionDecl 0x7fc61386b0c8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fc61386aff8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7fc61386b1a8 <col:22> Implicit
| | `-NoThrowAttr 0x7fc61386b1f0 <col:22> Implicit
| |-FunctionDecl 0x7fc61386b2a8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7fc61386b218 <col:31> col:36 'float'
| | |-ConstAttr 0x7fc61386b348 <col:22> Implicit
| | `-NoThrowAttr 0x7fc61386b390 <col:22> Implicit
| |-FunctionDecl 0x7fc61386b448 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7fc61386b3b8 <col:30> col:36 'double'
| | |-ConstAttr 0x7fc61386b4e8 <col:22> Implicit
| | `-NoThrowAttr 0x7fc61386b530 <col:22> Implicit
| |-FunctionDecl 0x7fc61386b5e8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fc61386b558 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7fc61386b688 <col:22> Implicit
| | `-NoThrowAttr 0x7fc61386b6d0 <col:22> Implicit
| |-FunctionDecl 0x7fc61386b800 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7fc61386b6f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fc61386b8a0 <col:14> Implicit
| | `-ConstAttr 0x7fc61386b8e8 <col:14> Implicit
| |-FunctionDecl 0x7fc61386b9a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7fc61386b910 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fc61386ba40 <col:15> Implicit
| | `-ConstAttr 0x7fc61386ba88 <col:15> Implicit
| |-FunctionDecl 0x7fc61386bb40 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fc61386bab0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fc61386bbe0 <col:20> Implicit
| | `-ConstAttr 0x7fc61386bc28 <col:20> Implicit
| |-FunctionDecl 0x7fc61386bd60 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc61386bc50 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fc61386bcc8 <col:27> col:32 'float'
| | |-ConstAttr 0x7fc61386be08 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61386be50 <col:14> Implicit
| |-FunctionDecl 0x7fc61386bf88 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc61386be78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fc61386bef0 <col:28> col:34 'double'
| | |-ConstAttr 0x7fc61386c030 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61386c078 <col:15> Implicit
| |-FunctionDecl 0x7fc61386c1b0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc61386c0a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fc61386c118 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fc61386c258 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61386c2a0 <col:20> Implicit
| |-FunctionDecl 0x7fc61386c3d8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc61386c2c8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fc61386c340 <col:32> col:37 'float'
| | |-ConstAttr 0x7fc61386c480 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61386c4c8 <col:14> Implicit
| |-FunctionDecl 0x7fc61386c600 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc61386c4f0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fc61386c568 <col:33> col:39 'double'
| | |-ConstAttr 0x7fc61386c6a8 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61386c6f0 <col:15> Implicit
| |-FunctionDecl 0x7fc61386c838 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc61386c718 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fc61386c790 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fc61386c8e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61386c928 <col:20> Implicit
| |-FunctionDecl 0x7fc61386cb28 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7fc61386c950 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fc61386c9c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7fc61386ca40 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7fc61386cdc8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7fc61386cbf0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fc61386cc68 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7fc61386cce0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7fc61386d068 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7fc61386ce90 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fc61386cf08 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7fc61386cf80 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7fc61386d240 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc61386d130 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7fc61386d1a8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7fc61386d2e8 <col:14> Implicit
| | `-ConstAttr 0x7fc61386d330 <col:14> Implicit
| |-FunctionDecl 0x7fc61386d468 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc61386d358 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7fc61386d3d0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7fc61386d510 <col:15> Implicit
| | `-ConstAttr 0x7fc61386d558 <col:15> Implicit
| |-FunctionDecl 0x7fc61386d690 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc61386d580 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7fc61386d5f8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7fc61386d738 <col:20> Implicit
| | `-ConstAttr 0x7fc61386d780 <col:20> Implicit
| |-FunctionDecl 0x7fc61386d8c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7fc61386d800 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fc61386d9a8 <col:14> Implicit
| | `-ConstAttr 0x7fc61386d9f0 <col:14> Implicit
| |-FunctionDecl 0x7fc61386dae8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7fc61386da18 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fc61386dbc8 <col:15> Implicit
| | `-ConstAttr 0x7fc61386dc10 <col:15> Implicit
| |-FunctionDecl 0x7fc61386dd08 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7fc61386dc38 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7fc61386dde8 <col:20> Implicit
| | `-ConstAttr 0x7fc61386de30 <col:20> Implicit
| |-FunctionDecl 0x7fc61386df68 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc61386de58 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fc61386ded0 <col:32> col:37 'float'
| | |-ConstAttr 0x7fc61386e010 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61386e058 <col:14> Implicit
| |-FunctionDecl 0x7fc61386e190 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc61386e080 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fc61386e0f8 <col:33> col:39 'double'
| | |-ConstAttr 0x7fc61386e238 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61386e280 <col:15> Implicit
| |-FunctionDecl 0x7fc61386e3b8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc61386e2a8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fc61386e320 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fc61386e460 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61386e4a8 <col:20> Implicit
| |-FunctionDecl 0x7fc61386e628 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7fc61386e4d0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7fc61386e548 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7fc61386e710 <col:15> Implicit
| | `-NoThrowAttr 0x7fc61386e758 <col:15> Implicit
| |-FunctionDecl 0x7fc61385f8d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7fc61386e780 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fc61385f800 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7fc61385f9c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385fa08 <col:14> Implicit
| |-FunctionDecl 0x7fc61385fb40 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc61385fa30 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7fc61385faa8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7fc61385fbe8 <col:20> Implicit
| | `-NoThrowAttr 0x7fc61385fc30 <col:20> Implicit
| |-FunctionDecl 0x7fc61385fd68 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc61385fc58 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fc61385fcd0 <col:27> col:32 'float'
| | |-ConstAttr 0x7fc61385fe10 <col:14> Implicit
| | `-NoThrowAttr 0x7fc61385fe58 <col:14> Implicit
| |-FunctionDecl 0x7fc61385ff90 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc61385fe80 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fc61385fef8 <col:28> col:34 'double'
| | |-ConstAttr 0x7fc613860038 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613860080 <col:15> Implicit
| |-FunctionDecl 0x7fc6138601b8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc6138600a8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fc613860120 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fc613860260 <col:20> Implicit
| | `-NoThrowAttr 0x7fc6138602a8 <col:20> Implicit
| |-FunctionDecl 0x7fc6138603e0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc6138602d0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fc613860348 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fc613860488 <col:14> Implicit
| | `-ConstAttr 0x7fc6138604d0 <col:14> Implicit
| |-FunctionDecl 0x7fc613860608 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc6138604f8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fc613860570 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fc6138606b0 <col:15> Implicit
| | `-ConstAttr 0x7fc6138606f8 <col:15> Implicit
| |-FunctionDecl 0x7fc613872838 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc613860720 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fc613860798 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fc6138728e0 <col:20> Implicit
| | `-ConstAttr 0x7fc613872928 <col:20> Implicit
| |-FunctionDecl 0x7fc613872a60 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fc613872950 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fc6138729c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fc613872b08 <col:14> Implicit
| | `-ConstAttr 0x7fc613872b50 <col:14> Implicit
| |-FunctionDecl 0x7fc613872c88 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc613872b78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fc613872bf0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fc613872d30 <col:15> Implicit
| | `-ConstAttr 0x7fc613872d78 <col:15> Implicit
| |-FunctionDecl 0x7fc613872eb0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fc613872da0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fc613872e18 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fc613872f58 <col:20> Implicit
| | `-ConstAttr 0x7fc613872fa0 <col:20> Implicit
| |-FunctionDecl 0x7fc6138731a8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7fc613872fc8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fc613873040 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fc6138730b8 <col:33> col:38 'float'
| | |-ConstAttr 0x7fc6138732a8 <col:14> Implicit
| | `-NoThrowAttr 0x7fc6138732f0 <col:14> Implicit
| |-FunctionDecl 0x7fc6138734f8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7fc613873318 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fc613873390 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7fc613873408 <col:35> col:41 'double'
| | |-ConstAttr 0x7fc6138735f8 <col:15> Implicit
| | `-NoThrowAttr 0x7fc613873640 <col:15> Implicit
| |-FunctionDecl 0x7fc613863888 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7fc613873668 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fc6138736e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7fc613873758 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7fc613863988 <col:20> Implicit
| | `-NoThrowAttr 0x7fc6138639d0 <col:20> Implicit
| |-FunctionDecl 0x7fc613863a88 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7fc613863b20 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fc613863c68 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7fc613863d00 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fc613863e48 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7fc613863ee0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fc613864028 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7fc6138640c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fc613864218 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7fc613864178 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fc6138642b8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fc613864358 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7fc613864368 <col:14> Implicit
| |-FunctionDecl 0x7fc613864430 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7fc613864390 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fc6138644d0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fc613864570 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7fc613864580 <col:15> Implicit
| |-FunctionDecl 0x7fc613876800 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fc6138645a8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7fc613864620 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7fc613864698 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fc6138768b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc613876ae0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fc613876910 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7fc613876988 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7fc613876a00 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fc613876b90 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc613876c90 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7fc613876bf0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fc613876d30 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fc613876dd0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7fc613876de0 <col:14> Implicit
| |-FunctionDecl 0x7fc613876ea8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7fc613876e08 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fc613876f48 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fc613876fe8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7fc613876ff8 <col:15> Implicit
| |-FunctionDecl 0x7fc6138770c0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7fc613877020 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fc613877160 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fc613877200 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7fc613877210 <col:14> Implicit
| |-FunctionDecl 0x7fc6138772d8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7fc613877238 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fc613877378 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fc613877418 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7fc613877428 <col:15> Implicit
| |-FunctionDecl 0x7fc6138774f0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7fc613877450 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fc613877590 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fc613877630 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7fc613877640 <col:14> Implicit
| |-FunctionDecl 0x7fc613877708 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7fc613877668 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fc613877800 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fc6138778a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7fc6138778b0 <col:15> Implicit
| |-FunctionDecl 0x7fc613877a60 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fc6138778d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7fc613877950 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7fc6138779c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fc613877b10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc613877cf8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fc613877b70 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7fc613877be8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7fc613877c60 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fc613877da8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7fc613877df0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7fc613877f18 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7fc613877fc8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7fc613878028 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7fc612072068 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fc612072168 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7fc612072168
| | |-CXXConstructorDecl 0x7fc612072278 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7fc612072278
| | | `-ParmVarDecl 0x7fc6120723a0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7fc612072438 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fc612072560 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fc613877fc8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7fc6120726b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fc612072680 <col:8> 'float' xvalue .__sinval 0x7fc613877fc8
| |   |     `-CXXStaticCastExpr 0x7fc612072650 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fc612072618 <col:8> 'struct __float2' lvalue ParmVar 0x7fc612072560 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fc613878028 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7fc612072798 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fc612072760 <col:8> 'float' xvalue .__cosval 0x7fc613878028
| |   |     `-CXXStaticCastExpr 0x7fc612072730 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fc6120726f8 <col:8> 'struct __float2' lvalue ParmVar 0x7fc612072560 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7fc6120727e8 <col:8>
| |-CXXRecordDecl 0x7fc613878090 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7fc6138781b8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7fc613878268 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7fc6138782c8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7fc612083088 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fc612083188 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7fc612083188
| | |-CXXConstructorDecl 0x7fc612083298 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7fc612083298
| | | `-ParmVarDecl 0x7fc6120833c0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7fc612083458 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fc612083580 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fc613878268 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7fc6120836d8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fc6120836a0 <col:8> 'double' xvalue .__sinval 0x7fc613878268
| |   |     `-CXXStaticCastExpr 0x7fc612083670 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fc612083638 <col:8> 'struct __double2' lvalue ParmVar 0x7fc612083580 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fc6138782c8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7fc6120837b8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fc612083780 <col:8> 'double' xvalue .__cosval 0x7fc6138782c8
| |   |     `-CXXStaticCastExpr 0x7fc612083750 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fc612083718 <col:8> 'struct __double2' lvalue ParmVar 0x7fc612083580 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7fc612083808 <col:8>
| |-FunctionDecl 0x7fc613878490 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fc613878348 <col:40> col:45 'float'
| |-FunctionDecl 0x7fc613878690 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fc613878548 <col:40> col:46 'double'
| |-FunctionDecl 0x7fc612071a00 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fc613878748 <col:42> col:47 'float'
| |-FunctionDecl 0x7fc612071b50 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fc612071ab8 <col:42> col:48 'double'
| |-FunctionDecl 0x7fc612071d90 prev 0x7fc613876800 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fc612071c08 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7fc612071c80 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7fc612071cf8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7fc612082be0 <col:80, line:664:1>
| | | |-DeclStmt 0x7fc612072850 <line:662:5, col:57>
| | | | `-VarDecl 0x7fc612071ea8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fc612072838 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fc612072800 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fc6120725c8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fc612072020 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fc612072008 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fc612071f88 <col:37> 'struct __float2 (float)' lvalue Function 0x7fc613878490 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fc612072050 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fc612071f60 <col:53> 'float' lvalue ParmVar 0x7fc612071c08 '__x' 'float'
| | | |-BinaryOperator 0x7fc612072940 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fc6120728a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fc612072890 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fc612072868 <col:6> 'float *' lvalue ParmVar 0x7fc612071c80 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fc612072928 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fc6120728f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7fc613877fc8
| | | |     `-DeclRefExpr 0x7fc6120728c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fc612071ea8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fc612082bb8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fc612082b20 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fc612082b08 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fc612082ae0 <col:34> 'float *' lvalue ParmVar 0x7fc612071cf8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fc612082ba0 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fc612082b68 <col:43, col:51> 'const float' lvalue .__cosval 0x7fc613878028
| | |       `-DeclRefExpr 0x7fc612082b40 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fc612071ea8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fc612071e40 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc612082db0 prev 0x7fc613876ae0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fc612082c28 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7fc612082ca0 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7fc612082d18 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7fc612083be0 <col:82, line:669:1>
| | | |-DeclStmt 0x7fc612083870 <line:667:5, col:57>
| | | | `-VarDecl 0x7fc612082ec8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fc612083858 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fc612083820 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fc6120835e8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fc612083040 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fc612083028 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fc612082fa8 <col:38> 'struct __double2 (double)' lvalue Function 0x7fc613878690 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fc612083070 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fc612082f80 <col:53> 'double' lvalue ParmVar 0x7fc612082c28 '__x' 'double'
| | | |-BinaryOperator 0x7fc612083960 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fc6120838c8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fc6120838b0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fc612083888 <col:6> 'double *' lvalue ParmVar 0x7fc612082ca0 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fc612083948 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fc612083910 <col:15, col:23> 'const double' lvalue .__sinval 0x7fc613878268
| | | |     `-DeclRefExpr 0x7fc6120838e8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fc612082ec8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fc612083bb8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fc612083b20 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fc612083b08 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fc612083ae0 <col:34> 'double *' lvalue ParmVar 0x7fc612082d18 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fc612083ba0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fc612083b68 <col:43, col:51> 'const double' lvalue .__cosval 0x7fc6138782c8
| | |       `-DeclRefExpr 0x7fc612083b40 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fc612082ec8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fc612082e60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc612083db0 prev 0x7fc613877a60 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fc612083c28 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7fc612083ca0 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7fc612083d18 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7fc612084308 <col:82, line:674:1>
| | | |-DeclStmt 0x7fc612084098 <line:672:5, col:59>
| | | | `-VarDecl 0x7fc612083ec8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fc612084080 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fc612084048 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fc612084030 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fc612083fe8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fc612083fd0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fc612083fa8 <col:37> 'struct __float2 (float)' lvalue Function 0x7fc612071a00 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fc612084018 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fc612083f80 <col:55> 'float' lvalue ParmVar 0x7fc612083c28 '__x' 'float'
| | | |-BinaryOperator 0x7fc612084188 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fc6120840f0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fc6120840d8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fc6120840b0 <col:6> 'float *' lvalue ParmVar 0x7fc612083ca0 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fc612084170 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fc612084138 <col:15, col:23> 'const float' lvalue .__sinval 0x7fc613877fc8
| | | |     `-DeclRefExpr 0x7fc612084110 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fc612083ec8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fc6120842e0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fc612084248 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fc612084230 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fc612084208 <col:34> 'float *' lvalue ParmVar 0x7fc612083d18 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fc6120842c8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fc612084290 <col:43, col:51> 'const float' lvalue .__cosval 0x7fc613878028
| | |       `-DeclRefExpr 0x7fc612084268 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fc612083ec8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fc612083e60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc6120844d8 prev 0x7fc613877cf8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fc612084350 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7fc6120843c8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7fc612084440 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7fc612084e40 <col:84, line:679:1>
| | | |-DeclStmt 0x7fc6120847c0 <line:677:5, col:59>
| | | | `-VarDecl 0x7fc6120845f0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fc6120847a8 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fc612084770 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fc612084758 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fc612084710 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fc6120846f8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fc6120846d0 <col:38> 'struct __double2 (double)' lvalue Function 0x7fc612071b50 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fc612084740 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fc6120846a8 <col:55> 'double' lvalue ParmVar 0x7fc612084350 '__x' 'double'
| | | |-BinaryOperator 0x7fc6120848b0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fc612084818 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fc612084800 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fc6120847d8 <col:6> 'double *' lvalue ParmVar 0x7fc6120843c8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fc612084898 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fc612084860 <col:15, col:23> 'const double' lvalue .__sinval 0x7fc613878268
| | | |     `-DeclRefExpr 0x7fc612084838 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fc6120845f0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fc612084e18 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fc612084970 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fc612084958 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fc612084930 <col:34> 'double *' lvalue ParmVar 0x7fc612084440 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fc612084e00 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fc6120849b8 <col:43, col:51> 'const double' lvalue .__cosval 0x7fc6138782c8
| | |       `-DeclRefExpr 0x7fc612084990 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fc6120845f0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fc612084588 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fc612084f28 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7fc612084e88 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fc612084fc8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fc612085120 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7fc612085080 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fc6120851c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fc6120853d8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fc612085278 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fc6120852f0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fc612085480 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fc6120855d8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7fc612085538 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fc612085678 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fc6120857d0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7fc612085730 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fc612085870 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fc612085a48 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fc612085928 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fc6120859a0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fc612085af0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fc612085cb8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc612085ba8 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7fc612085c20 <col:29> col:35 'double'
| |-VarDecl 0x7fc612085d78 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7fc61208aea0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7fc61208ae00 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7fc61208af40 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fc61208b098 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7fc61208aff8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7fc61208b138 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fc61208b310 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7fc61208b1f0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fc61208b268 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7fc61208b3b8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fc61208b510 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7fc61208b470 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7fc61208b5b0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fc61208b708 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7fc61208b668 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7fc61208b7a8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7fc61208b900 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7fc61208b860 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7fc61208b9a0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7fc61384bd98 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7fc61384bde8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7fc61384be80 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7fc61384bee8 <col:26> Implicit
|   `-ConstAttr 0x7fc61384bf30 <col:26> Implicit
|-LinkageSpecDecl 0x7fc61384c0b0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fc61384c100 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fc61384c198 <col:50> Implicit
|   `-ConstAttr 0x7fc61384c1e0 <col:50> Implicit
|-LinkageSpecDecl 0x7fc61384c608 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7fc61384c658 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7fc61384c6f0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7fc61384c758 <col:26> Implicit
|   `-ConstAttr 0x7fc61384c7a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fc61384c920 <col:49> col:49 implicit C
| `-FunctionDecl 0x7fc61384ce00 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fc61384ce98 <col:49> Implicit
|   `-ConstAttr 0x7fc61384cee0 <col:49> Implicit
|-LinkageSpecDecl 0x7fc61384d308 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7fc61384d358 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7fc61384d3f0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7fc61384d458 <col:26> Implicit
|   `-ConstAttr 0x7fc61384d4a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fc61384d620 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fc61384d670 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fc61384d708 <col:50> Implicit
|   `-ConstAttr 0x7fc61384d750 <col:50> Implicit
|-LinkageSpecDecl 0x7fc61208bae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1412:1> line:307:8 C++
| |-TypedefDecl 0x7fc61208bb50 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7fc612030be0 'long'
| |-TypedefDecl 0x7fc61208bbc0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7fc612030c80 'unsigned long'
| |-TypedefDecl 0x7fc61208bc30 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7fc612030d00 'long double'
| |-NamespaceDecl 0x7fc61208bc88 prev 0x7fc612063258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7fc612063258 'std'
| | `-TypedefDecl 0x7fc61208bd48 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7fc61208bd10 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7fc61208bcf0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7fc612031010 'nullptr_t'
| |-NamespaceDecl 0x7fc61208fa00 prev 0x7fc61208bc88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:410:37, line:411:38> line:410:47 std
| | |-original Namespace 0x7fc612063258 'std'
| | `-NamespaceDecl 0x7fc61208fa68 prev 0x7fc6120632c0 <col:52, line:411:36> <scratch space>:338:1 __1 inline
| |   |-original Namespace 0x7fc6120632c0 '__1'
| |   |-UsingDecl 0x7fc61208faf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7fc61208fb40 <col:9> col:9 implicit Typedef 0x7fc61208bb50 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7fc61208fb90 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7fc61208fbe0 <col:9> col:9 implicit Typedef 0x7fc61208bbc0 'size_t'
| |   | `-TypedefType 0x7fc6120b8a80 'size_t' sugar
| |   |   |-Typedef 0x7fc61208bbc0 'size_t'
| |   |   `-BuiltinType 0x7fc612030c80 'unsigned long'
| |   |-UsingDecl 0x7fc61208fc30 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7fc61208fc80 <col:9> col:9 implicit Typedef 0x7fc61208bc30 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7fc61208fcc8 prev 0x7fc61208fa00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:410:37, line:411:38> line:410:47 std
| | |-original Namespace 0x7fc612063258 'std'
| | `-NamespaceDecl 0x7fc61208fd30 prev 0x7fc61208fa68 <col:52, line:411:36> <scratch space>:339:1 __1 inline
| |   |-original Namespace 0x7fc6120632c0 '__1'
| |   |-ClassTemplateDecl 0x7fc612090040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:395:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7fc61208fd98 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fc61208fe38 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fc61208ffa8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7fc612090278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fc612090408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:396:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fc6120902c0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc612090370 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7fc612090618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fc6120907a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:397:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7fc612090660 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc612090710 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7fc6120909b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fc612091f18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, line:400:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7fc612091e00 <line:399:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fc612091e80 <line:400:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7fc612092190 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7fc612092238 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7fc612030b20 'void'
| |   |-ClassTemplateDecl 0x7fc6120923c8 <line:402:1, line:403:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7fc6120922b0 <line:402:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc612092330 <line:403:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7fc612092640 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7fc6120926e8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120922f0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120922b0 '_Tp'
| |   |-ClassTemplateDecl 0x7fc612092918 <line:405:1, line:406:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7fc612092760 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120927d8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fc612092880 <line:406:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7fc612092be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc612092c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:406:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7fc612092f88 <line:408:1, line:409:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7fc612092d30 <line:408:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fc612092d88 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fc612092e00 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7fc612092ef0 <line:409:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7fc612093290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120932d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7fc612093380 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7fc612092dd0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fc612092d88 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120936f8 <line:410:1, line:411:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fc6120933f8 <line:410:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7fc612093468 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7fc612093890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612093a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:411:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7fc612093ad8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7fc6120934b0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fc612093468 '_Then'
| |   |-TypeAliasTemplateDecl 0x7fc612094f30 <line:414:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7fc612093b60 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fc612093bb8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fc612093c28 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7fc612094ed0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7fc612094e60 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7fc612095140 <line:417:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fc612094f90 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fc612094fe8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fc6120950a8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7fc612095400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc612095448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:417:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612095710 <line:418:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc612095500 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc612095880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120959f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:418:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7fc612095b70 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7fc612095b00 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7fc612095db0 <line:420:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fc612095bf8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fc612095c60 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fc612095d18 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7fc612096070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fc6120960b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fc613929ed0 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7fc61392a160 prev 0x7fc613929ed0 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fc613942228 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7fc6139424c0 prev 0x7fc613942228 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fc612835578 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7fc612835810 prev 0x7fc612835578 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7fc61283a8d8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7fc61283ab70 prev 0x7fc61283a8d8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612096380 <line:421:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc612096170 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120964f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612096660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7fc612096708 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120961b0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc612096170 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fc612096aa0 <line:424:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7fc612096790 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fc6120967f8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7fc612096a40 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7fc6120969d0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fc612096ec8 <line:430:1, line:437:1> line:434:1 addressof
| |   | |-TemplateTypeParmDecl 0x7fc612096af0 <line:430:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc612096e30 <line:431:1, line:437:1> line:434:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fc612096cb8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7fc612097298 <line:435:1, line:437:1>
| |   |   | `-ReturnStmt 0x7fc612097280 <line:436:5, col:35>
| |   |   |   `-CallExpr 0x7fc612097250 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7fc612097200 <col:12> '<builtin fn type>' Function 0x7fc6120970a8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7fc612097228 <col:32> '_Tp' lvalue ParmVar 0x7fc612096cb8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7fc612096f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   |-VisibilityAttr 0x7fc612096f68 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7fc612096f78 <line:268:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7fc612097580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:493:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7fc6120972b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6120974e8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7fc6120973a8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7fc6120975d8 <line:496:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7fc6120976f8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7fc6120977d0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7fc6120979f8 <line:500:1, line:512:1> line:501:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7fc612097838 <line:500:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120978b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7fc612097960 <line:501:1, line:512:1> line:501:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7fc612097cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fc612097d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:501:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7fc612098400 <line:503:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fc612098460 <col:53> '_Tp' NonTypeTemplateParm 0x7fc6120978b8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7fc612098498 <line:504:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fc612097880 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fc612097838 '_Tp'
| |   | | |-TypedefDecl 0x7fc612098500 <line:505:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7fc612097c30 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7fc612097960 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fc612098698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:507:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7fc612098968 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7fc612098950 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7fc612098928 <col:73> 'const _Tp' lvalue Var 0x7fc612098400 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7fc612098730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | | | `-VisibilityAttr 0x7fc612098778 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7fc6120987e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7fc6120989c8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7fc6120989b0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7fc612098988 <col:69> 'const _Tp' lvalue Var 0x7fc612098400 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7fc612098880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | |   `-VisibilityAttr 0x7fc6120988c8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7fc612098ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:500:1, line:512:1> line:501:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7fc6120a9058 prev 0x7fc612098ea8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fc6120a9100 <line:503:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fc6120a9188 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fc6120a9170 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7fc6120a9218 <line:504:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fc612098e70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fc612097880 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fc612097838 '_Tp'
| |   | | |   `-BuiltinType 0x7fc612030b40 '_Bool'
| |   | | |-TypedefDecl 0x7fc6120a9280 <line:505:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7fc612098fb0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7fc612098ea8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fc6120a9368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:507:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fc6120a9438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | | `-CXXMethodDecl 0x7fc6120a94b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fc6120a9558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7fc612099180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:500:1, line:512:1> line:501:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7fc6120a86a8 prev 0x7fc612099180 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fc6120a8750 <line:503:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fc6120a87d8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fc6120a87c0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7fc6120a8868 <line:504:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fc612098e70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fc612097880 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fc612097838 '_Tp'
| |   | | |   `-BuiltinType 0x7fc612030b40 '_Bool'
| |   | | |-TypedefDecl 0x7fc6120a88d0 <line:505:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7fc612099280 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7fc612099180 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fc6120a8a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:507:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fc6120a8ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | | `-CXXMethodDecl 0x7fc6120a8b50 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fc6120a8c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7fc6120e6500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:500:1, line:512:1> line:501:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7fc6120e6730 prev 0x7fc6120e6500 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7fc6120e6800 <line:503:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7fc6120e6890 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7fc6120e6870 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7fc6120e6920 <line:504:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7fc6120e64b0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7fc612097880 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fc612097838 '_Tp'
| |   |   |   `-BuiltinType 0x7fc612030c80 'unsigned long'
| |   |   |-TypedefDecl 0x7fc6120e6988 <line:505:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7fc6120e6600 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7fc6120e6500 'integral_constant'
| |   |   |-CXXConversionDecl 0x7fc6120e6ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:507:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7fc6120e6b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-CXXMethodDecl 0x7fc6120e6c00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7fc6120e6ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |-VarDecl 0x7fc612098d70 parent 0x7fc612097960 prev 0x7fc612098400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:514:1, line:515:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7fc6120990c0 <line:525:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7fc612098fd0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fc612098e38 <line:522:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fc612098e20 <line:525:31> '_Bool' true
| |   |   `-RecordType 0x7fc612098fb0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7fc612098ea8 'integral_constant'
| |   |-TypedefDecl 0x7fc612099390 <line:526:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7fc6120992a0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fc612099140 <line:522:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fc612099128 <line:526:31> '_Bool' false
| |   |   `-RecordType 0x7fc612099280 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7fc612099180 'integral_constant'
| |   |-ClassTemplateDecl 0x7fc6120a7db0 <line:532:1, line:533:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7fc6120a7c00 <line:532:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7fc6120a7c58 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fc6120a7d18 <line:533:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7fc6120a8d78 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120a8350 <line:535:1, line:536:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fc6120a8098 <line:535:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fc6120a8c98 <line:536:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7fc6120a8d78 <line:538:1, line:539:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fc6120a95f0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120a98c0 <line:541:1, line:542:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6120a96a8 <line:541:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fc6120aa1f8 <line:542:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120aa5e0 <line:544:1, line:545:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fc6120aa2b0 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fc6120aa318 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fc6120aab78 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7fc6120aadc0 <line:547:1, line:548:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7fc6120aac30 <line:547:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fc6120aac98 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fc6120aad28 <line:548:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fc6120ab2f8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7fc6120ab540 <line:552:1, line:553:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7fc6120ab3c0 <line:552:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7fc6120ab418 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fc6120ab4a8 <line:553:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7fc6120abe30 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120aba50 <line:555:1, line:556:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fc6120ab7f8 <line:555:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fc6120abd50 <line:556:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7fc6120abe30 <line:558:1, line:559:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fc6120ac0b8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120ac4a0 <line:561:1, line:563:53> line:562:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fc6120ac170 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fc6120ac1d8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fc6120aca38 <line:562:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7fc6120acc80 <line:565:1, line:566:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7fc6120acaf0 <line:565:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fc6120acb58 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fc6120acbe8 <line:566:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fc6120ad188 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7fc6120ad358 <line:570:1, line:571:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7fc6120ad240 <line:570:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fc6120ad2c0 <line:571:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7fc6120ad818 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7fc6120ad9e8 <line:574:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7fc6120ad8d0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fc6120ad950 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7fc6120adc68 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7fc6120adc68 <line:575:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fc6120adea0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120ae108 <line:577:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6120adf58 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fc6120ae3b0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120ae6f8 <line:579:1, line:580:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fc6120ae468 <line:579:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fc6120ae4d8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fc6120aed00 <line:580:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120af2b8 <line:582:1, line:584:73> line:583:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fc6120aedb8 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fc6120aee28 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fc6120aee98 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fc6120aef08 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fc6120afbf0 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7fc6120afdc8 <line:587:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7fc6120afca8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fc6120afd30 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7fc6120b0088 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7fc6120b0088 <line:588:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fc6120b02c0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b0518 <line:590:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6120b0378 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fc6120b07c0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b0b08 <line:592:1, line:593:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fc6120b0878 <line:592:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fc6120b08e8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fc6120b1110 <line:593:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b1668 <line:595:1, line:597:73> line:596:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fc6120b11c8 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fc6120b1238 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fc6120b12a8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fc6120b1318 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fc6120b3000 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7fc6120b31d8 <line:600:1, line:601:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7fc6120b30b8 <line:600:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b3140 <line:601:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7fc6120b3780 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7fc6120b3988 <line:607:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7fc6120b3838 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b38f0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fc6120b3c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120b3c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:607:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b3ed8 <line:608:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6120b3d40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120b4038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120b41b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:608:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7fc6120b43b8 <line:617:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7fc6120b4268 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b4320 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fc6120b4630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120b46b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:617:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b4908 <line:618:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6120b4770 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120b4a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120b4bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:618:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7fc6120b4dc8 <line:627:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7fc6120b4c78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120b4d30 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7fc612093e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fc612093eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:627:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7fc612093f58 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fc6120b4cc0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fc6120b4c78 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fc613928f88 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fc6139291d0 prev 0x7fc613928f88 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7fc6139292a8 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fc613929270 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fc6120b4cc0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc6120b4c78 '_Tp'
| |   |       `-BuiltinType 0x7fc612030ce0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612094168 <line:628:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc612093fd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120942a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120943e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:628:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7fc612094488 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc612094010 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc612093fd0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fc612094740 <line:630:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7fc612094500 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120946e0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fc612094670 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120948d8 <line:635:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7fc612094790 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc612094840 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7fc612094b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fc612094b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:635:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7fc612094c40 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fc6120947d0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fc612094790 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fc613929390 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fc6139295e0 prev 0x7fc613929390 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7fc6139296b8 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fc613929680 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fc6120947d0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc612094790 '_Tp'
| |   |       `-BuiltinType 0x7fc612030ce0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612099c88 <line:636:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc612094cb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc612099dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612099f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:636:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7fc612099fa8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc612094d00 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc612094cb8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fc61209a260 <line:638:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fc61209a020 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc61209a200 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fc61209a190 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc61209a3f8 <line:643:1, line:644:80> line:643:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7fc61209a2b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc61209a360 <col:22, line:644:80> line:643:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7fc61209a670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fc61209a6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:643:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7fc61209aa10 <line:644:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7fc61209a9a0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7fc613928ca8 <line:643:1, line:644:80> line:643:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fc613928eb8 prev 0x7fc613928ca8 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7fc6139297a0 <line:644:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7fc613929750 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7fc613929730 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7fc6139296b8 'type'
| |   |         `-SubstTemplateTypeParmType 0x7fc613929680 'double' sugar
| |   |           |-TemplateTypeParmType 0x7fc6120947d0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7fc612094790 '_Tp'
| |   |           `-BuiltinType 0x7fc612030ce0 'double'
| |   |-TypeAliasTemplateDecl 0x7fc61209acd0 <line:646:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7fc61209aa88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc61209ac70 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fc61209ac00 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc61209ae38 <line:651:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7fc61209ad20 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc61209ada0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fc61209b0f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7fc61209b1c8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7fc61209b1c8 <line:652:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fc61209b430 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7fc61209b638 <line:654:1, line:655:63> line:654:50 is_void
| |   | |-TemplateTypeParmDecl 0x7fc61209b4e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61209b5a0 <col:22, line:655:63> line:654:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61209b8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61209bb18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:654:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7fc61209c118 <line:664:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7fc61209c000 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc61209c080 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fc61209c3d0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7fc61209c4d0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7fc61209c4d0 <line:665:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7fc61209c740 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7fc61209c948 <line:667:1, line:668:66> line:667:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7fc61209c7f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61209c8b0 <col:22, line:668:66> line:667:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61209cbc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61209ce28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:667:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7fc61209d098 <line:671:1, line:672:66> line:671:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7fc61209cee0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61209d000 <col:22, line:672:66> line:671:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61209d310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61209d528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:671:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7fc61209d6f8 <line:682:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7fc61209d5e0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc61209d660 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fc61209d9b0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7fc61209da88 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209ddc8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209e110 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209e460 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209e7a8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209eae8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209ee28 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209f188 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209f4d0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209f820 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209fb70 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc61209fec0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc6120a0210 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc6120a0560 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc6120a08b0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc6120a0c20 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fc6120a1000 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7fc613929890 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fc613929ab0 prev 0x7fc613929890 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209da88 <line:683:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7fc61209dcf0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209ddc8 <line:684:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7fc61209e030 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209e110 <line:685:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7fc61209e380 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209e460 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7fc61209e6d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209e7a8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7fc61209ea10 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209eae8 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7fc61209ed50 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209ee28 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7fc61209f0a8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209f188 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7fc61209f3f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209f4d0 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7fc61209f740 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209f820 <line:694:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7fc61209fa90 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209fb70 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7fc61209fde0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc61209fec0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7fc6120a0130 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc6120a0210 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7fc6120a0480 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc6120a0560 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7fc6120a07d0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc6120a08b0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7fc6120a0b20 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc6120a0c20 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7fc6120a0e90 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fc6120a1000 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7fc6120a1270 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7fc6120a1478 <line:705:1, line:706:67> line:705:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7fc6120a1328 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120a13e0 <col:22, line:706:67> line:705:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7fc6120a16f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fc6120a1958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:705:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7fc613928a58 <col:1, line:706:67> line:705:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fc613929b98 prev 0x7fc613928a58 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7fc6120a1b28 <line:715:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fc6120a1a10 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120a1a90 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fc6120a1de0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7fc6120a1ec0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7fc6120b7210 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7fc6120b7560 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7fc6120a1ec0 <line:716:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7fc6120b7130 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fc6120b7210 <line:717:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7fc6120b7480 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fc6120b7560 <line:718:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7fc6120b77d0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7fc6120b79d8 <line:720:1, line:721:73> line:720:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fc6120b7888 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b7940 <col:22, line:721:73> line:720:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc6120b7c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120b7eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:720:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7fc6120b80c8 <line:730:1, line:731:26> line:730:50 is_array
| |   | |-TemplateTypeParmDecl 0x7fc6120b7f70 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b8030 <col:22, line:731:26> line:730:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fc6120b8340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120b83c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:730:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b8688 <line:732:1, line:733:25> line:732:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fc6120b8480 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120b87d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120b8950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:732:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b8cf8 <line:734:1, line:735:25> line:734:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fc6120b8a08 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120b8ab0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fc6120b8e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120b9000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:734:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7fc6120b91d8 <line:744:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120b90b8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b9140 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fc6120b9490 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b96e8 <line:745:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fc6120b9548 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b9960 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7fc6120b9b68 <line:747:1, line:748:66> line:747:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120b9a18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b9ad0 <col:22, line:748:66> line:747:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc6120b9de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120bbe60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:747:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7fc6120bc068 <line:757:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fc6120bbf18 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120bbfd0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fc6120bc2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120bc368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:757:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120bc5e8 <line:758:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fc6120bc420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120bc728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120bc8a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:758:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7fc6120bcaa8 <line:760:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fc6120bc958 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120bca10 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fc6120bcd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120bd600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120bd8b8 <line:762:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fc6120bd6b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120bd9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120bdb70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:762:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7fc6120bdd78 <line:765:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7fc6120bdc28 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120bdce0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fc6120bdff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120be078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120be2f8 <line:766:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fc6120be130 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120be438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120be600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:766:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120be888 <line:768:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fc6120be6b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120be9c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120beb40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7fc6120bed48 <line:785:1, line:786:56> line:785:50 is_union
| |   | |-TemplateTypeParmDecl 0x7fc6120bebf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120becb0 <col:22, line:786:56> line:785:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120befc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120bf1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:785:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7fc6120bf3a8 <line:805:1, line:806:56> line:805:50 is_class
| |   | |-TemplateTypeParmDecl 0x7fc6120bf260 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120bf310 <col:22, line:806:56> line:805:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120bf668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120bf848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:805:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7fc6120bfac0 <line:828:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7fc6120bf900 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc6120bf968 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fc6120bfa28 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fc6120bfd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120bfde8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:828:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120c00a0 <line:829:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6120bfea0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120c0208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120c03b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:829:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7fc6120c0468 <line:838:1, line:846:1> line:838:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7fc6120c04d0 <line:840:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7fc6120c1600 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7fc6120c1918 <line:841:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fc6120c16b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fc6120c1880 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7fc6120c1778 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7fc6120c1b58 <line:842:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7fc6120c1970 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fc6120c1ac0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7fc6120c1a00 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7fc6120c1d18 <line:843:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fc6120c1bb0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fc6120c1c80 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7fc6120c1fd8 <line:844:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7fc6120c1d68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fc6120c1f40 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7fc6120c1e08 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7fc6120c2198 <line:845:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7fc6120c2030 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7fc6120c2100 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7fc6120c2970 <line:848:1, line:855:6> line:853:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7fc6120c21e8 <line:848:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120c2860 <col:22, line:852:50> line:848:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc6120c2828 <col:29, line:852:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fc6120c26f8 <line:848:29, line:851:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7fc6120c25a8 <line:848:29, line:850:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7fc6120c2478 <line:848:29, line:849:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7fc6120c2328 <line:848:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7fc6120c2438 <line:849:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7fc6120c2568 <line:850:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fc6120c26b8 <line:851:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fc6120c27e8 <line:852:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120c28d8 <line:853:1, line:855:6> line:853:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7fc6120c30c8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120c3360 <line:856:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc6120c3180 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c3630 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7fc6120c3838 <line:858:1, line:859:41> line:858:50 is_function
| |   | |-TemplateTypeParmDecl 0x7fc6120c36e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c37a0 <col:22, line:859:41> line:858:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fc6120c3ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120c4228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:858:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7fc6120c44d8 <line:872:1, line:875:1> line:873:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7fc6120c42e0 <line:872:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7fc6120c4358 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7fc6120c43c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7fc6120c4440 <line:873:1, line:875:1> line:873:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7fc6120c48e0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7fc6120c4ab8 <line:878:1, line:879:26> line:878:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120c4998 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c4a20 <col:22, line:879:26> line:878:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fc6120c4d70 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120c50c8 <line:881:1, line:883:33> line:882:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fc6120c4e28 <line:881:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fc6120c4e98 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fc6120c53c8 <line:882:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fc6120c5600 <line:885:1, line:886:88> line:885:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120c5480 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c5530 <col:22, line:886:88> line:885:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7fc6120c5880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120c5bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:885:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fc6120c5d98 <line:895:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120c5c78 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c5d00 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fc6120c6050 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120c6378 <line:896:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fc6120c6108 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc6120c6178 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fc6120c6600 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7fc6120c6808 <line:898:1, line:899:73> line:898:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120c66b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c6770 <col:22, line:899:73> line:898:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc6120c6a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120c6ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:898:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7fc6120c6ee8 <line:908:1, line:910:79> line:908:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120c6da0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c6e50 <col:22, line:910:79> line:908:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fc6120c7160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120c7600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:908:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7fc6120c7808 <line:921:1, line:922:55> line:921:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7fc6120c76b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c7770 <col:22, line:922:55> line:921:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120c7a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120c7c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:921:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7fc6120c7e68 <line:947:1, line:949:70> line:947:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7fc6120c7d20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c7dd0 <col:22, line:949:70> line:947:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fc6120c80e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120c8518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:947:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7fc6120c8748 <line:958:1, line:961:66> line:958:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7fc6120c8600 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120c86b0 <col:22, line:961:66> line:958:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fc6120c89c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120c8f18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:958:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7fc6120c9118 <line:970:1, line:975:71> line:970:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7fc6120c8fd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120c9080 <col:22, line:975:71> line:970:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7fc6120c9390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fc6120c9b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:970:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7fc6120c9c90 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7fc6120c9c90 <line:977:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7fc6120c9dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120c9f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:977:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7fc6120ca148 <line:986:1, line:990:63> line:986:50 is_object
| |   | |-TemplateTypeParmDecl 0x7fc6120c9ff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120ca0b0 <col:22, line:990:63> line:986:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fc6120ca3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120caa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:986:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7fc6120cac68 <line:999:1, line:1000:68> line:999:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7fc6120cab20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120cabd0 <col:22, line:1000:68> line:999:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fc6120caee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120cb1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:999:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7fc6120cb290 <line:1010:1, line:1013:1> line:1010:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7fc6120cb3b8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7fc6120cb6c0 <line:1011:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7fc6120cb450 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fc6120cb628 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7fc6120cb4e8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7fc6120cb858 <line:1012:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7fc6120cb718 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7fc6120cb7c0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7fc6120cb9e8 <line:1015:1, line:1017:81> line:1016:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7fc6120cb8c8 <line:1015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120cb950 <line:1016:1, line:1017:81> line:1016:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7fc6120cc188 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7fc6120cc748 <line:1022:1, line:1025:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7fc6120cc240 <line:1022:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120cc638 <col:22, line:1024:44> line:1022:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc6120cc600 <col:29, line:1024:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fc6120cc4c8 <line:1022:29, line:1023:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fc6120cc378 <line:1022:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fc6120cc488 <line:1023:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fc6120cc5b8 <line:1024:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120cc6b0 <line:1025:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7fc6120cca10 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7fc6120ccab8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120cc280 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120cc240 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120ccd10 <line:1027:1, line:1028:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120ccb30 <line:1027:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120ccfa0 <line:1028:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7fc6120cd048 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7fc6120ccb71 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7fc6120ccb70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120ccb30 '_Tp'
| |   |-ClassTemplateDecl 0x7fc6120cd208 <line:1030:1, line:1031:51> line:1030:50 add_const
| |   | |-TemplateTypeParmDecl 0x7fc6120cd0c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120cd170 <col:22, line:1031:51> line:1030:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7fc6120cd480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120cd4c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1030:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7fc6120cdac0 <line:1031:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7fc6120cda50 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120cdd80 <line:1034:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7fc6120cdb38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120cdd20 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120cdcb0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120ce2d0 <line:1039:1, line:1042:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7fc6120cddd0 <line:1039:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120ce1c0 <col:22, line:1041:47> line:1039:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc6120ce188 <col:29, line:1041:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fc6120ce058 <line:1039:29, line:1040:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fc6120cdf08 <line:1039:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fc6120ce018 <line:1040:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fc6120ce148 <line:1041:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120ce238 <line:1042:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7fc6120cec00 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7fc6120ceca8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120cde10 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120cddd0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120cef00 <line:1044:1, line:1045:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120ced20 <line:1044:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120cf190 <line:1045:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7fc6120cf238 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7fc6120ced64 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7fc6120ced60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120ced20 '_Tp'
| |   |-ClassTemplateDecl 0x7fc6120cf3f8 <line:1047:1, line:1048:54> line:1047:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7fc6120cf2b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120cf360 <col:22, line:1048:54> line:1047:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7fc6120cf670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120cf6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1047:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7fc6120d02a0 <line:1048:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7fc6120d0230 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120d0560 <line:1051:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fc6120d0318 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120d0500 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120d0490 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120d06f8 <line:1056:1, line:1057:78> line:1056:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7fc6120d05b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120d0660 <col:22, line:1057:78> line:1056:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7fc6120d0970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120d09b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1056:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7fc6120d0d10 <line:1057:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fc6120d0ca0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120d0fd0 <line:1060:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7fc6120d0d88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120d0f70 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120d0f00 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120d1168 <line:1065:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7fc6120d1020 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120d10d0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7fc6120d1a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120d1a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1065:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7fc6120d1b20 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120d1060 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120d1020 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120d1d68 <line:1066:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fc6120d1b98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120d1ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120d1fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1066:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fc6120d2088 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120d1be0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120d1b98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120d22c8 <line:1068:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fc6120d2100 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120d2408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120d2540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fc6120d25e8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120d2140 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120d2100 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fc6120d2ea0 <line:1072:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7fc6120d2660 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120d2e40 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120d27d0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120d3188 <line:1077:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fc6120d2ef0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120d3078 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc6120d3028 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120d30f0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fc6120d3450 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7fc6120d34f8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120d2f30 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120d2ef0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120d3750 <line:1078:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc6120d3570 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120d39e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7fc6120d3ab8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7fc6120d3a80 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7fc6120d35b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120d3570 '_Tp'
| |   |-ClassTemplateDecl 0x7fc6120d3c78 <line:1080:1, line:1081:63> line:1080:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fc6120d3b30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120d3be0 <col:22, line:1081:63> line:1080:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fc6120d3f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120d3f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1080:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7fc6120d4310 <line:1081:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fc6120d42a0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120d45d0 <line:1084:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fc6120d4388 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120d4570 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120d4500 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120d48b8 <line:1089:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fc6120d4620 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120d47a8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc6120d4758 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120d4820 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fc6120d4b80 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7fc6120d4c28 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120d4660 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120d4620 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120d8ed0 <line:1090:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc6120d4ca0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120d9160 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7fc6120d9238 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7fc6120d9200 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7fc6120d4ce0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120d4ca0 '_Tp'
| |   |-ClassTemplateDecl 0x7fc6120d93f8 <line:1092:1, line:1093:63> line:1092:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fc6120d92b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120d9360 <col:22, line:1093:63> line:1092:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fc6120d9670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120d96b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1092:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7fc6120d9a30 <line:1093:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fc6120d99c0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120d9cf0 <line:1096:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fc6120d9aa8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120d9c90 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120d9c20 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fc6120d9fc8 <line:1103:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fc6120d9d40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6120d9f30 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7fc6120d9e00 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7fc6120da258 <line:1104:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fc6120da020 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6120da1c0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7fc6120da0b8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7fc6120da650 <line:1106:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:738:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1108:1 declval
| |   | |-TemplateTypeParmDecl 0x7fc6120da2b0 <line:1106:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6120da5b8 <line:1107:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:738:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1108:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7fc6120da7b8 <line:1120:1, line:1123:1> line:1121:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7fc6120da6a0 <line:1120:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120da720 <line:1121:1, line:1123:1> line:1121:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7fc6120daa30 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7fc6120dad90 <line:1122:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fc6120dad20 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120daf38 <line:1125:1, line:1128:1> line:1126:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7fc6120dae20 <line:1125:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120daea0 <line:1126:1, line:1128:1> line:1126:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7fc6120db1b0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7fc6120db510 <line:1127:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fc6120db4a0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120db7d0 <line:1131:1, line:1132:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7fc6120db588 <line:1131:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120db770 <line:1132:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120db700 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120db9b0 <line:1137:1, line:1139:68> line:1138:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7fc6120db820 <line:1137:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc6120db888 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fc6120db918 <line:1138:1, line:1139:68> line:1138:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7fc6120b6288 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7fc6120b6340 <line:1141:1, line:1144:1> line:1141:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7fc6120b6468 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7fc6120b65a0 <line:1143:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7fc6120b67b8 <line:1148:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120b6668 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120b6720 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fc6120b6a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120b6a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1148:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7fc6120b6b20 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120b66b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120b6668 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120b6d68 <line:1149:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fc6120b6b98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120b6ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120dd800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1149:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fc6120dd8a8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120b6be0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120b6b98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120ddae8 <line:1150:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7fc6120dd920 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120ddc28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120ddd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1150:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fc6120dde08 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120dd960 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120dd920 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120de048 <line:1151:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7fc6120dde80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120de188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120de2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fc6120de368 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120ddec0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120dde80 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120de5a8 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7fc6120de3e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120de6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120de868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fc6120de910 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120de420 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120de3e0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fc6120debd0 <line:1155:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fc6120de988 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120deb70 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120deb00 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120df1a0 <line:1160:1, line:1164:57> line:1163:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7fc6120dec20 <line:1160:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120df090 <line:1161:9, line:1162:63> line:1161:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc6120df058 <col:16, line:1162:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fc6120ded58 <line:1161:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fc6120df018 <line:1162:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120df108 <line:1163:1, line:1164:57> line:1163:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7fc6120df460 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7fc6120df680 <line:1164:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7fc6120df630 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7fc6120df5b0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e0930 <line:1165:1, line:1166:23> line:1165:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120df6f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120e0bc0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7fc6120e0c68 <line:1166:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120df740 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120df6f8 '_Tp'
| |   |-ClassTemplateDecl 0x7fc6120e0e28 <line:1168:1, line:1169:58> line:1168:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7fc6120e0ce0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120e0d90 <col:22, line:1169:58> line:1168:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fc6120e10a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120e10e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1168:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7fc6120e16b0 <line:1169:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fc6120e1640 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120e19b0 <line:1172:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fc6120e1728 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120e1950 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120e18e0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120e1c98 <line:1177:1, line:1178:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7fc6120e1a00 <line:1177:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120e1b88 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc6120e1b38 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120e1c00 <line:1178:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7fc6120e21f8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e2490 <line:1180:1, line:1181:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120e22b0 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120e2760 <line:1181:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7fc6120e2ab8 <line:1183:1, line:1184:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7fc6120e2820 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120e29a8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc6120e2958 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120e2a20 <line:1184:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fc6120e2fb8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e3250 <line:1186:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120e3070 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120e3520 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7fc6120e3728 <line:1188:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7fc6120e35d8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120e3690 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fc6120e3a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120e3cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1188:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7fc6120e4008 <line:1197:1, line:1198:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7fc6120e3d70 <line:1197:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120e3ef8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc6120e3ea8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120e3f70 <line:1198:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7fc6120e4568 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e4800 <line:1200:1, line:1201:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120e4620 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120e4ad0 <line:1201:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7fc6120e4e28 <line:1203:1, line:1204:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fc6120e4b88 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120e4d18 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc6120e4cc8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120e4d90 <line:1204:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fc6120e5328 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e55c0 <line:1206:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120e53e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120e58a8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7fc6120e5aa8 <line:1208:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fc6120e5960 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120e5a10 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fc6120e5d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120e5fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1208:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7fc6120e61a8 <line:1217:1, line:1218:44> line:1217:50 rank
| |   | |-TemplateTypeParmDecl 0x7fc6120e6060 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120e6110 <col:22, line:1218:44> line:1217:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fc6120e6420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120e6d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1217:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e6fd8 <line:1219:1, line:1220:63> line:1219:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fc6120e6df8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120e7128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120e7548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1219:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e7888 <line:1221:1, line:1222:63> line:1221:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fc6120e7600 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120e7678 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fc6120e79d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120e7d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1221:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7fc6120e8038 <line:1231:1, line:1232:44> line:1231:68 extent
| |   | |-TemplateTypeParmDecl 0x7fc6120e7e40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120e7ee0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7fc6120e7f38 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7fc6120e7ea8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7fc6120e7fa0 <col:40, line:1232:44> line:1231:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fc6120e8300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120e8488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1231:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e9800 <line:1233:1, line:1234:44> line:1233:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120e8540 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120e9988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120e9c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1233:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120e9fc0 <line:1235:1, line:1236:68> line:1235:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc6120e9e68 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fc6120e9d70 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fc6120e9cf0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120e9d70 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7fc6120ea128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120ea658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1235:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120eaa30 <line:1237:1, line:1238:46> line:1237:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120ea710 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120ea788 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fc6120eabb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120eaeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1237:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120eb2f0 <line:1239:1, line:1240:68> line:1239:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc6120eb190 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fc6120eb058 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fc6120eaf70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120eafe8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7fc6120eb058 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7fc6120eb458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6120eb9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1239:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7fc6120ebbb8 <line:1249:1, line:1250:23> line:1249:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7fc6120eba70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120ebb20 <col:22, line:1250:23> line:1249:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7fc6120ebe30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120ebe78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1249:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7fc6120ebf20 <line:1250:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120ebab0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120eba70 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120ec178 <line:1251:1, line:1252:23> line:1251:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fc6120ebf98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120ec2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120ec400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1251:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fc6120ec4a8 <line:1252:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120ebfe0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120ebf98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120ec800 <line:1253:1, line:1254:23> line:1253:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fc6120ec520 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120ec598 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fc6120ec948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120eca80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1253:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fc6120ecb28 <line:1254:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fc6120ec560 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6120ec520 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fc6120ecde0 <line:1257:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7fc6120ecba0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120ecd80 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120ecd10 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120ecf78 <line:1262:1, line:1263:23> line:1262:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7fc6120ece30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120ecee0 <col:22, line:1263:23> line:1262:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7fc6120ed1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120ed238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1262:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7fc6120ed2e0 <line:1263:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc6120ece70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fc6120ece30 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120ed538 <line:1264:1, line:1265:58> line:1264:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fc6120ed358 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6120ed688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120ed800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1264:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fc6120eda00 <line:1265:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120ed990 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120edd08 <line:1266:1, line:1267:58> line:1266:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fc6120eda78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120edaf8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fc6120ede58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc6120edf90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1266:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fc6120ee150 <line:1267:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120ee0e0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120ee3d0 <line:1270:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7fc6120ee1c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120ee370 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120ee300 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120ee5a8 <line:1275:1, line:1278:1> line:1276:8 __decay
| |   | |-TemplateTypeParmDecl 0x7fc6120ee420 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fc6120ee498 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fc6120ee510 <line:1276:1, line:1278:1> line:1276:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7fc6120ee890 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7fc6120eea50 <line:1277:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7fc6120ee9e0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120eecb0 <line:1280:1, line:1294:1> line:1281:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc6120eeac8 <line:1280:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7fc6120eef40 <line:1281:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7fc6120eefd8 <line:1282:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7fc6120efa70 <line:1283:5, line:1293:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7fc6120efa00 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120efc38 <line:1296:1, line:1303:1> line:1297:29 decay
| |   | |-TemplateTypeParmDecl 0x7fc6120efae8 <line:1296:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120efba0 <line:1297:1, line:1303:1> line:1297:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7fc6120efeb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120efef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1297:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7fc6120eff90 <line:1299:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7fc6120f00e0 <line:1300:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7fc6120f0070 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7fc6120f0138 <line:1301:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7fc6120f0500 <line:1302:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7fc6120f0490 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6120f0800 <line:1306:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7fc6120f0578 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6120f0760 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6120f06f0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120f0998 <line:1311:1, line:1312:59> line:1311:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7fc6120f0850 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120f0900 <col:22, line:1312:59> line:1311:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f0c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f0df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1311:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7fc6120f0ff8 <line:1322:1, line:1323:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7fc6120f0eb0 <line:1322:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120f0f60 <col:22, line:1323:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f1270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f1458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1322:22, line:1323:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7fc6120f1658 <line:1330:1, line:1331:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7fc6120f1510 <line:1330:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120f15c0 <col:22, line:1331:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f18e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f1a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1330:22, line:1331:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7fc6120f1ce0 <line:1343:1, line:1345:63> line:1344:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7fc6120f1b20 <line:1343:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fc6120f1b88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7fc6120f1c48 <line:1344:1, line:1345:63> line:1344:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f1f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f2178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1344:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7fc6120f23f0 <line:1383:1, line:1385:65> line:1383:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7fc6120f2230 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fc6120f2298 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fc6120f2358 <col:33, line:1385:65> line:1383:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f2690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f3a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1383:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7fc6120f3c48 <line:1473:1, line:1475:56> line:1474:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7fc6120f3b00 <line:1473:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120f3bb0 <line:1474:1, line:1475:56> line:1474:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f3ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f40a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1474:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7fc6120f42a8 <line:1509:1, line:1511:62> line:1510:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7fc6120f4160 <line:1509:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120f4210 <line:1510:1, line:1511:62> line:1510:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f4520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f4708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1510:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7fc6120f4908 <line:1534:1, line:1535:70> line:1534:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7fc6120f47c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120f4870 <col:22, line:1535:70> line:1534:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f4b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f4d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1534:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7fc6120f4f68 <line:1551:1, line:1552:59> line:1551:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7fc6120f4e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120f4ed0 <col:22, line:1552:59> line:1551:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6120f51e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6120f53c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1551:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7fc6120f5610 <line:1561:1, line:1566:1> line:1562:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7fc6120f5480 <line:1561:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fc6120f54e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7fc6120f5578 <line:1562:1, line:1566:1> line:1562:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7fc6120f58f0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fc6120f5998 <line:1564:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7fc6120f54c0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fc6120f5480 '_Hp'
| |   | | `-TypedefDecl 0x7fc6120f5a00 <line:1565:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fc6120f5530 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc6120f54e8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f9718 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f9930 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f9b40 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f9d50 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120fa000 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120fa210 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120fa420 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120fa630 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120fa840 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120faa50 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612118ae8 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612118d00 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612118f10 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612119120 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612119330 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612119540 <line:1561:1, line:1566:1> line:1562:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7fc612121288 prev 0x7fc612119540 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fc612121358 <line:1564:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7fc612121320 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7fc6120f54c0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fc6120f5480 '_Hp'
| |   | | |   `-BuiltinType 0x7fc612030b80 'signed char'
| |   | | `-TypedefDecl 0x7fc6121213e8 <line:1565:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7fc6121213b0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7fc6120f5530 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7fc6120f54e8 '_Tp'
| |   | |     `-RecordType 0x7fc612119430 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7fc612119330 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612119840 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612119a50 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612119c60 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc612119e70 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fc61211a090 <line:1561:1, line:1566:1> line:1562:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7fc61211a2a0 <line:1561:1, line:1566:1> line:1562:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7fc612128b68 prev 0x7fc61211a2a0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7fc612128c38 <line:1564:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7fc612128c00 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7fc6120f54c0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fc6120f5480 '_Hp'
| |   |   |   `-BuiltinType 0x7fc612030c20 'unsigned char'
| |   |   `-TypedefDecl 0x7fc612128cc8 <line:1565:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7fc612128c90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7fc6120f5530 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7fc6120f54e8 '_Tp'
| |   |       `-RecordType 0x7fc61211a190 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7fc61211a090 '__type_list'
| |   |-CXXRecordDecl 0x7fc6120f5a78 <line:1568:1, line:1576:1> line:1568:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7fc6120f5b98 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7fc6120f5c98 <line:1571:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7fc6120f5e40 <line:1572:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fc6120f5d78 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7fc6120f5ff0 <line:1573:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fc6120f5f00 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7fc6120f60e0 <line:1574:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fc6120f60e0
| |   |-ClassTemplateDecl 0x7fc6120f62d8 <line:1578:1, line:1583:1> line:1579:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7fc6120f61b8 <line:1578:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6120f6240 <line:1579:1, line:1583:1> line:1579:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7fc6120f6550 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7fc6120f65f8 <line:1581:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7fc6120f6728 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7fc6120f6778 <line:1582:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fc6120f6200 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fc6120f61b8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f7100 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f72d0 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f74a0 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f7670 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f7840 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f7a10 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f9000 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f91c8 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7fc6120f9388 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7fc6120f9550 <line:1578:1, line:1583:1> line:1579:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7fc6120f6c00 <line:1585:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7fc6120f6d28 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7fc6120f6dd8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7fc6120f6e40 <line:1586:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7fc6120f6f68 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7fc6120f7080 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7fc6120fac60 <line:1588:1, line:1600:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7fc6120fab70 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7fc6120fab50 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fc6120faa50 '__type_list'
| |   |-ClassTemplateDecl 0x7fc6120fae48 <line:1602:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7fc6120facb8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fad38 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7fc6120fadb0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120fb4b0 <line:1604:1, line:1612:1> line:1605:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc6120fb350 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fb168 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fc6120fb0e8 <line:1604:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fb168 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7fc6120fb780 <line:1605:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fc6120fbbc0 <line:1607:5, line:1611:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7fc6120fbb50 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120fc070 <line:1614:1, line:1622:1> line:1615:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc6120fbec0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fbd28 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fc6120fbc38 <line:1614:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fc6120fbca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fbd28 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7fc6120fc340 <line:1615:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fc6120fc990 <line:1617:5, line:1621:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7fc6120fc920 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6120fcb98 <line:1624:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7fc6120fca08 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fca88 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fc6120fcb00 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120fd160 <line:1626:1, line:1627:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc6120fd000 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fce78 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fc6120fcdf8 <line:1626:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fce78 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fc6120fd648 <line:1627:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fc6120fd8f8 <line:1629:1, line:1637:1> line:1630:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fd710 <line:1629:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fd778 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fd7e0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7fc6120fd860 <line:1630:1, line:1637:1> line:1630:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7fc6120fdc50 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7fc6120fdce8 <line:1632:1, col:8> col:1 private
| |   |   |-VarDecl 0x7fc6120fdd20 <line:1633:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fc6120fde48 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fc6120fddd0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fc6120fdd80 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd7e0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fc6120fdda8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd778 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fc6120fddf8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd7e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fc6120fde20 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd778 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7fc6120fde88 <line:1634:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fc6120fdfb0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fc6120fdf38 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fc6120fdee8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd778 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fc6120fdf10 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd7e0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fc6120fdf60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd7e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fc6120fdf88 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd778 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7fc6120fe400 <line:1635:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fc6120fe438 <line:1636:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7fc6120fe5a8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7fc6120fe578 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7fc6120fe500 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7fc6120fe498 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fd710 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7fc6120fe4e8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7fc6120fe4c0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fc6120fde88 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7fc6120fe528 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fc6120fdd20 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7fc6120fe550 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fc6120fde88 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120fe9c0 <line:1639:1, line:1641:118> line:1640:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc6120fe860 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6120fe6c8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fc6120fe5e0 <line:1639:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fc6120fe648 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6120fe6c8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7fc6120ff2d8 <line:1640:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fc6120ff738 <line:1643:1, line:1653:1> line:1644:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7fc6120ff3a0 <line:1643:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fc6120ff5f8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc6120ff5a8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6120ff6a0 <line:1644:1, line:1653:1> line:1644:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7fc6120ffa20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc6120ffa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1644:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7fc6120ffd20 <line:1646:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7fc6120ffcb0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7fc6120fffc0 <line:1647:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7fc6120ffef8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7fc6120ffeb8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7fc6120fff98 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7fc6120ffff8 <line:1648:5, line:1652:5> line:1648:11 union type definition
| |   |     |-CXXRecordDecl 0x7fc612100118 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7fc6121001c0 <line:1650:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7fc612100828 <line:1651:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7fc612100d30 <line:1656:1, line:1657:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7fc6121008c0 <line:1656:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fc612100a88 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc612100a38 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7fc612100cd0 <line:1657:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7fc612100c60 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612100fc0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612100e30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612100d90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7fc612100d90 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612101128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612101290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc612101348 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612101468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc612101328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1670:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7fc6121014b8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc612101788 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612102e60 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612102cd0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612102c30 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7fc612102c30 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612102fc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612103130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc6121031e8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612103308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc6121031c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1671:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7fc612103358 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc612103628 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121038f0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612103760 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6121036c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7fc6121036c0 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612103a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612103c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc612103cb8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612103dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc612103c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1672:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7fc612103e28 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc6121040f8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121043c0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612104230 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612104190 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7fc612104190 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612104528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612104690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc612104748 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612104868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc612104728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1673:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7fc6121048b8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc612104b88 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612104e60 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612104cd0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612104c30 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7fc612104c30 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612104fc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612105130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc6121051e8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612105308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc6121051c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1674:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7fc612105358 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc612105628 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121058f0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612105760 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc6121056c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7fc6121056c0 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612105a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612105bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc612105c78 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612105d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc612105c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1675:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7fc612105de8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc6121060b8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612106380 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc6121061f0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612106150 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7fc612106150 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc6121064e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612106650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc612106708 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612106828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc6121066e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1676:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7fc612106878 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc612106b48 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612106e30 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612106ca0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612106c00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7fc612106c00 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612106f98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612107100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc6121071b8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc6121072d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc612107198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7fc612107328 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc6121075f8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121078c0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612107730 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612107690 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7fc612107690 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612107a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612107b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc612107c48 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612107d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc612107c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1678:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7fc612107db8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc612108088 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612108350 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc6121081c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612108120 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7fc612108120 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc6121084b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612108620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc6121086d8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc6121087f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc6121086b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1679:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7fc612108848 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc612108b18 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612108e30 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612108ca0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612108c00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7fc612108c00 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612108f98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612109100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc6121091b8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc6121092d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc612109198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1680:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7fc612109328 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc6121095f8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121098c0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc612109730 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc612109690 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7fc612109690 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc612109a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc612109b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc612109c48 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc612109d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc612109c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1681:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7fc612109db8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc61210a088 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61210a350 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc61210a1c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210a120 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7fc61210a120 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc61210a4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc61210a620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc61210a6d8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc61210a7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc61210a6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1682:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7fc61210a848 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc61210ab18 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61210ae30 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc61210aca0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210ac00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7fc61210ac00 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc61210af98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc61210b100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc61210b1b8 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc61210b2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc61210b198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1683:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7fc61210b328 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc61210b5f8 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61210b8c0 <line:1660:51, line:1667:7> line:1662:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc61210b730 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210b690 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7fc61210b690 <line:1661:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fc61210ba28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fc61210bb90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1661:23, line:1662:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fc61210bc48 <line:1664:5, line:1667:5> line:1664:24 struct type definition
| |   |   |-AlignedAttr 0x7fc61210bd68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:285:23> alignas
| |   |   | `-IntegerLiteral 0x7fc61210bc28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7fc61210bdb8 <line:1664:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fc61210c088 <line:1666:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7fc61210c298 <line:1695:1, line:1696:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7fc61210c120 <line:1695:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fc61210c188 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7fc61210c200 <line:1696:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61210c710 <line:1698:1, line:1702:1> line:1699:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc61210c5e8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210c578 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7fc61210c578 <line:1698:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7fc61210c9a0 <line:1699:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fc61210ca48 <line:1701:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7fc61210caa8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210c578 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61210cee0 <line:1704:1, line:1709:1> line:1705:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc61210cc80 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210cb00 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7fc61210cca8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210cb68 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7fc61210ccf8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7fc61210ccd0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210cc00 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7fc61210cb00 <line:1704:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fc61210cb68 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7fc61210cc00 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7fc61210d1e0 <line:1705:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fc61210d288 <line:1707:5, line:1708:73> line:1707:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7fc61210d7b8 <col:33, line:1708:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7fc61210d338 <line:1707:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7fc61210d2e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210cb00 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7fc61210d310 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61210cb68 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7fc61210d548 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7fc61210d778 <line:1708:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fc61210da38 <line:1711:1, line:1719:1> line:1712:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7fc61210d818 <line:1711:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fc61210d870 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7fc61210d8d8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7fc61210d9a0 <line:1712:1, line:1719:1> line:1712:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7fc61210ddd0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7fc61210de78 <line:1714:5, line:1715:81> line:1714:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fc61210e0d8 <col:43, line:1715:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fc61210e128 <line:1716:5, line:1717:66> line:1716:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fc61210e408 <col:33, line:1717:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7fc61210e6b0 <line:1718:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7fc61210e640 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc61210ead0 <line:1722:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7fc61210e738 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fc61210e790 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7fc61210ea70 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7fc61210ea00 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7fc61210fa98 <line:1727:1, line:1744:1> line:1728:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7fc61210eb20 <line:1727:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc61210fa00 <line:1728:1, line:1744:1> line:1728:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7fc61210fd10 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7fc61210fdf8 <line:1730:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7fc61210ff38 <line:1731:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7fc61210fea8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7fc6121100b8 <line:1732:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7fc61210ffe8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7fc612110238 <line:1733:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7fc612110170 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7fc6121103b8 <line:1734:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7fc6121102f0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7fc612110538 <line:1735:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7fc612110470 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7fc6121106b8 <line:1736:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7fc6121105f0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7fc612110838 <line:1737:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7fc612110770 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7fc6121109b8 <line:1738:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7fc6121108f0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7fc612110b00 <line:1739:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7fc612110a70 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7fc612110c48 <line:1740:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7fc612110bb8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7fc612110f08 <line:1742:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7fc612110ed0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7fc612110e60 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7fc612110ce8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fc612110c48 0x7fc612110b00 0x7fc6121109b8 0x7fc612110838 0x7fc6121106b8 0x7fc612110538 0x7fc6121103b8 0x7fc612110238 0x7fc6121100b8 0x7fc61210ff38 0x7fc61210fdf8
| |   | | |     `-CallExpr 0x7fc612110e38 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7fc612110da0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fc6120da650
| |   | | `-VarDecl 0x7fc612110f70 <line:1743:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7fc612111198 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7fc612111158 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7fc6121111f8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7fc6121111f8 <line:1746:1, line:1750:1> line:1747:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fc612111420 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7fc6121114c8 <line:1749:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fc612111528 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7fc6121130a0 <line:1754:1, line:1762:1> line:1758:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7fc6121115b8 <line:1754:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fc612111638 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fc6121116b8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7fc612112f80 <line:1755:11, line:1757:39> line:1755:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc612112f48 <col:18, line:1757:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7fc612111998 <line:1755:18, line:1756:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fc6121117f8 <line:1755:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fc612111958 <line:1756:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fc612112f08 <line:1757:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc612113008 <line:1758:1, line:1762:1> line:1758:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7fc6121133c0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7fc612113458 <line:1760:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fc612113490 <line:1761:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fc6121134f0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121138e0 <line:1764:1, line:1774:1> line:1765:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc612113528 <line:1764:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fc612113598 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7fc612113608 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7fc612113c20 <line:1765:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fc612113cb8 <line:1767:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fc612114290 <line:1768:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fc612114220 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fc612114840 <line:1769:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fc6121147d0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7fc612115800 <line:1770:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7fc612114d80 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7fc612115858 <line:1771:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fc612115a58 <line:1772:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7fc612115a20 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7fc6121159b8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7fc612115938 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7fc6121158b0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7fc612115910 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fc612115990 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7fc612115ac0 <line:1773:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fc612115b20 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612115e90 <line:1776:1, line:1785:1> line:1777:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc612115b58 <line:1776:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fc612115bc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7fc6121161d0 <line:1777:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fc612116268 <line:1779:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fc6121166c0 <line:1780:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fc612116650 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fc612116b50 <line:1781:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fc612116ae0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7fc612116ba8 <line:1782:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fc612116d28 <line:1783:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7fc612116cf0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7fc612116c88 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7fc612116c00 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fc612116c60 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7fc612116d90 <line:1784:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fc612116df0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121170f0 <line:1787:1, line:1793:1> line:1788:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc612116e28 <line:1787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7fc612117430 <line:1788:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fc6121174c8 <line:1790:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fc612117640 <line:1791:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7fc6121175d0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7fc6121176a8 <line:1792:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fc612117708 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7fc612118168 <line:1795:1, line:1796:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7fc612117740 <line:1795:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fc6121177b8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fc612118038 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fc6121180d0 <line:1796:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7fc612118998 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7fc612119750 <line:1800:1, line:1813:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fc612119660 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fc612119640 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fc612119540 '__type_list'
| |   |-TypedefDecl 0x7fc61211a4b0 <line:1815:1, line:1828:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fc61211a3c0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fc61211a3a0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fc61211a2a0 '__type_list'
| |   |-ClassTemplateDecl 0x7fc61211a850 <line:1830:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7fc61211a508 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7fc61211a588 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7fc61211a738 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc61211a700 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7fc61211a5e0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61211a588 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7fc61211a6e0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7fc61211a7b8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61211af78 <line:1832:1, line:1836:1> line:1833:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc61211ada0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61211ac08 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc61211ab18 <line:1832:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fc61211ab88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc61211ac08 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fc61211b2b0 <line:1833:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fc61211b358 <line:1835:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7fc61211ab60 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc61211ab18 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61211b828 <line:1838:1, line:1842:1> line:1839:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc61211b650 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fc61211b4b8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61211b3d0 <line:1838:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fc61211b438 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc61211b4b8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fc61211bb60 <line:1839:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fc61211c000 <line:1841:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7fc61211bf40 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7fc61211c7c8 <line:1844:1, line:1849:1> line:1846:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7fc61211c078 <line:1844:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61211c0e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fc61211c3d8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc61211c388 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7fc61211c6a8 <line:1845:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc61211c658 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc61211c730 <line:1846:1, line:1849:1> line:1846:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7fc61211cb10 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7fc61211cbb8 <line:1848:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7fc61211c130 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fc61211c0e8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61211cf70 <line:1851:1, line:1855:1> line:1852:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61211cc30 <line:1851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61211cc98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc61211d2c0 <line:1852:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fc61211d368 <line:1854:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7fc61211cce1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7fc61211cce0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fc61211cc98 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61211d720 <line:1857:1, line:1861:1> line:1858:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc61211d3e0 <line:1857:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61211d448 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc61211da70 <line:1858:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fc61211db18 <line:1860:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7fc61211d494 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7fc61211d490 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fc61211d448 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61211ded0 <line:1863:1, line:1867:1> line:1864:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc61211db90 <line:1863:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61211dbf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc61211e270 <line:1864:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fc61211e318 <line:1866:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7fc61211dc45 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7fc61211dc40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fc61211dbf8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61211e700 <line:1869:1, line:1873:1> line:1870:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61211e390 <line:1869:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61211e3f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc61211ea50 <line:1870:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fc61211eb58 <line:1872:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7fc61211eb20 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7fc61211e440 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fc61211e3f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61211ef40 <line:1875:1, line:1879:1> line:1876:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61211ebd0 <line:1875:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61211ec38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc61211f290 <line:1876:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fc61211f398 <line:1878:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7fc61211f360 'const _Up &' dependent
| |   |     `-QualType 0x7fc61211ec81 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7fc61211ec80 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fc61211ec38 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61211f780 <line:1881:1, line:1885:1> line:1882:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc61211f410 <line:1881:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61211f478 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc61211fad0 <line:1882:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fc61211fbd8 <line:1884:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7fc61211fba0 'volatile _Up &' dependent
| |   |     `-QualType 0x7fc61211f4c4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7fc61211f4c0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fc61211f478 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612120000 <line:1887:1, line:1891:1> line:1888:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc61211fc50 <line:1887:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61211fcb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc612120350 <line:1888:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fc612120458 <line:1890:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7fc612120420 'const volatile _Up &' dependent
| |   |     `-QualType 0x7fc61211fd05 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7fc61211fd00 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fc61211fcb8 '_Up'
| |   |-ClassTemplateDecl 0x7fc6121208a0 <line:1893:1, line:1894:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7fc6121204d0 <line:1893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc612120790 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc612120758 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fc612120608 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fc612120718 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fc612120808 <line:1894:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7fc612120b60 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7fc6121217d0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc612121b38 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc612121f18 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc612123b18 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc612123ef8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc6121242d8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc6121246b8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc612124a98 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc612124e78 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fc612125250 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7fc612125618 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612120e00 <line:1896:1, line:1900:1> line:1897:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc612120c18 <line:1896:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc612121090 <line:1897:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612121720 <line:1899:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fc6121216b0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fc6121217d0 <line:1902:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fc612121a40 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7fc612121b38 <line:1903:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612121db0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612121e60 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fc612030ba0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fc612121f18 <line:1904:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc6121239b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612123a60 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fc612030ba0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fc612123b18 <line:1905:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612123d90 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612123e40 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fc612030bc0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fc612123ef8 <line:1906:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612124170 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612124220 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fc612030bc0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fc6121242d8 <line:1907:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612124550 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612124600 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fc612030be0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fc6121246b8 <line:1908:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612124930 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc6121249e0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fc612030be0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fc612124a98 <line:1909:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612124d10 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612124dc0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fc612030c00 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fc612124e78 <line:1910:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc6121250f0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc6121251a0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fc612030c00 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fc612125250 <line:1912:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc6121254c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612125568 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fc6120a0bf0 '__int128_t' sugar
| |   |     |-Typedef 0x7fc612031060 '__int128_t'
| |   |     `-BuiltinType 0x7fc612030d40 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7fc612125618 <line:1913:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc6121258c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fc612125968 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fc6120a0bf0 '__int128_t' sugar
| |   |     |-Typedef 0x7fc612031060 '__int128_t'
| |   |     `-BuiltinType 0x7fc612030d40 '__int128'
| |   |-ClassTemplateDecl 0x7fc612125b28 <line:1916:1, line:1920:1> line:1917:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7fc6121259e0 <line:1916:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc612125a90 <line:1917:1, line:1920:1> line:1917:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7fc612125da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc612125de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1917:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7fc612126aa0 <line:1919:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fc612126a30 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc612126d60 <line:1923:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7fc612126b18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc612126d00 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7fc612126c90 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc612127180 <line:1926:1, line:1927:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fc612126db0 <line:1926:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc612127070 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc612127038 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fc612126ee8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fc612126ff8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fc6121270e8 <line:1927:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7fc612127440 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7fc6121290b0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc612129418 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc6121297f8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc612129bd8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc612129fb8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc61212a398 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc612132800 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc612132bd8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc612132fb8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fc612133390 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7fc612133758 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121276e0 <line:1929:1, line:1933:1> line:1930:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc6121274f8 <line:1929:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc612128970 <line:1930:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc612129000 <line:1932:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fc612128f90 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fc6121290b0 <line:1935:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fc612129320 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7fc612129418 <line:1936:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612129690 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc612129740 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fc612030c40 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fc6121297f8 <line:1937:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612129a70 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc612129b20 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fc612030c40 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fc612129bd8 <line:1938:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612129e50 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc612129f00 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fc612030c60 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fc612129fb8 <line:1939:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc61212a230 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc61212a2e0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fc612030c60 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fc61212a398 <line:1940:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc61212a610 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc61212a6c0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fc612030c80 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fc612132800 <line:1941:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612132a70 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc612132b20 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fc612030c80 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fc612132bd8 <line:1942:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612132e50 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc612132f00 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fc612030ca0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fc612132fb8 <line:1943:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612133230 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc6121332e0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fc612030ca0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fc612133390 <line:1945:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc612133600 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc6121336a8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fc6120a0f60 '__uint128_t' sugar
| |   |     |-Typedef 0x7fc6120310d0 '__uint128_t'
| |   |     `-BuiltinType 0x7fc612030d60 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7fc612133758 <line:1946:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fc6121339d0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fc612133a78 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fc6120a0f60 '__uint128_t' sugar
| |   |     |-Typedef 0x7fc6120310d0 '__uint128_t'
| |   |     `-BuiltinType 0x7fc612030d60 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7fc612133c38 <line:1949:1, line:1953:1> line:1950:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fc612133af0 <line:1949:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc612133ba0 <line:1950:1, line:1953:1> line:1950:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7fc612133eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fc612133ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1950:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7fc612134ab0 <line:1952:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fc612134a40 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc612134d70 <line:1956:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7fc612134b28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc612134d10 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7fc612134ca0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc612134f08 <line:1994:1, line:1995:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7fc612134dc0 <line:1994:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7fc612134e70 <line:1995:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7fc6121351e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc612135228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1995:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121354a8 <line:1999:1, line:2001:37> line:2000:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6121352e0 <line:1999:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc612135618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6121358f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2000:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fc612135bc8 <line:2005:1, line:2006:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7fc6121359b0 <line:2005:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc612135a18 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fc612135a98 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fc612135b30 <line:2006:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7fc612135ea0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612136698 <line:2008:1, line:2017:1> line:2009:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7fc612135f58 <line:2008:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc612135fc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc612137dc0 <line:2009:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7fc612138280 <line:2014:5, line:2016:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7fc612138210 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc612139190 <line:2019:1, line:2027:6> line:2022:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7fc6121382f8 <line:2019:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc612138368 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fc612138500 <line:2020:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7fc612138720 <line:2021:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7fc612139130 <line:2022:1, line:2027:6> line:2022:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7fc6121390c0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612139498 <line:2029:1, line:2031:33> line:2030:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fc6121391e0 <line:2029:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc612139248 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7fc612139648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc61213a4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2030:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fc61213a698 <line:2035:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7fc61213a578 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7fc61213a600 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7fc61213aab0 <line:2037:1, line:2038:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7fc61213a908 <line:2037:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fc61213a988 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fc61213aa18 <line:2038:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7fc61213ad50 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61213b5a0 <line:2040:1, line:2046:1> line:2041:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fc61213ae08 <line:2040:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61213ae78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fc61213b920 <line:2041:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7fc61213bb80 <line:2045:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7fc61213bb10 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61213c400 <line:2048:1, line:2055:1> line:2049:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fc61213bbf8 <line:2048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61213bc68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fc61213bcd8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7fc61213cbe8 <line:2049:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61213d078 <line:2057:1, line:2059:62> line:2058:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fc61213cca0 <line:2057:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61213cd08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fc61213cd78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7fc61213d268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc61213d718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2058:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7fc61213dab0 <line:2062:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7fc61213d800 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7fc61213da50 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7fc61213d9e0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7fc61213dc90 <line:2069:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7fc61213db00 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fc61213db68 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fc61213dbf8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7fc61213df30 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7fc61213dfd8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fc61213dbb0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fc61213db68 '_Tp'
| |   |-FunctionTemplateDecl 0x7fc61213e7c8 <line:2071:1, line:2073:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fc61213e050 <line:2071:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61213e0b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7fc61213e730 <line:2072:1, line:2073:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7fc61213e618 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7fc61213ea38 <line:2075:1, line:2076:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fc61213e820 <line:2075:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fc61213e888 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7fc61213e9a0 <line:2076:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7fc61213ef28 <line:2079:1, line:2081:69> line:2080:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7fc61213ea88 <line:2079:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61213eaf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7fc61213ee10 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fc61213edd8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fc61213ec38 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fc61213ed98 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc61213ee90 <line:2080:1, line:2081:69> line:2080:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7fc61213f498 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61214c8a0 <line:2083:1, line:2087:1> line:2084:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc61213f550 <line:2083:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61213f5b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fc61214cbc0 <line:2084:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7fc61214ce10 <line:2089:1, line:2091:46> line:2090:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7fc61214cc78 <line:2089:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61214cce8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fc61214cd78 <line:2090:1, line:2091:46> line:2090:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7fc61214d4a8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7fc61214d6a8 <line:2100:1, line:2102:88> line:2100:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fc61214d560 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61214d610 <col:22, line:2102:88> line:2100:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61214d920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61214de88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2100:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7fc61214e088 <line:2111:1, line:2114:71> line:2111:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fc61214df40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61214dff0 <col:22, line:2114:71> line:2111:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61214e300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61214e6c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2111:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7fc61214e898 <line:2133:1, line:2134:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7fc61214e780 <line:2133:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fc61214e800 <line:2134:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7fc61214eb10 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7fc61214ebc0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7fc612030bc0 'int'
| |   |-ClassTemplateDecl 0x7fc61214ed58 <line:2136:1, line:2147:1> line:2137:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7fc61214ec38 <line:2136:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61214ecc0 <line:2137:1, line:2147:1> line:2137:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7fc61214efd0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7fc61214f6e8 <line:2138:5, line:2141:5> line:2139:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fc61214f068 <line:2138:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fc61214f650 <line:2139:5, line:2141:5> line:2139:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7fc61214f520 <line:2140:9, col:86> line:2141:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7fc61214f878 <line:2143:5, line:2144:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fc61214f740 <line:2143:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fc61214f7e0 <line:2144:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7fc61214f8d8 <line:2146:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7fc61214fac0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7fc61214fa70 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7fc61214fa50 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7fc61214fa20 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7fc61214f960 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fc61214f878 0x7fc61214f6e8
| |   |       |     `-IntegerLiteral 0x7fc61214fa00 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7fc61214faa0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7fc61214fc98 <line:2149:1, line:2150:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7fc61214fb08 <line:2149:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc61214fb88 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fc61214fc00 <line:2150:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121500e0 <line:2152:1, line:2155:92> line:2153:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61214fef8 <line:2152:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc612150818 <line:2153:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612150ab0 <line:2157:1, line:2159:32> line:2158:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc6121508d0 <line:2157:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc612150df0 <line:2158:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7fc612151038 <line:2161:1, line:2162:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7fc612150ea8 <line:2161:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc612150f28 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fc612150fa0 <line:2162:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612151480 <line:2164:1, line:2165:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc612151298 <line:2164:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6121519c8 <line:2165:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612151c60 <line:2167:1, line:2168:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc612151a80 <line:2167:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc612151fa0 <line:2168:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7fc612152178 <line:2170:1, line:2172:73> line:2171:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7fc612152058 <line:2170:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6121520e0 <line:2171:1, line:2172:73> line:2171:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7fc6121526a8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7fc6120d52c8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120d4f28 <line:2174:1, line:2176:33> line:2175:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fc612152760 <line:2174:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6120d51f0 <line:2175:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7fc6120d52c8 <line:2178:1, line:2180:33> line:2179:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fc6120d5570 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7fc6120d5a38 <line:2191:1, line:2198:1> line:2194:1 move
| |   | |-TemplateTypeParmDecl 0x7fc6120d5628 <line:2191:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6120d59a0 <line:2192:1, line:2198:1> line:2194:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fc6120d5818 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fc6120d5d50 <line:2195:1, line:2198:1>
| |   |   | |-DeclStmt 0x7fc6120d5c68 <line:2196:5, col:53>
| |   |   | | `-TypedefDecl 0x7fc6120d5c10 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7fc6120d5ba0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7fc6120d5d38 <line:2197:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fc6120d5d08 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fc6120d5ca0 <col:31> '_Tp' lvalue ParmVar 0x7fc6120d5818 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fc6120d5a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6120d5ad8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6120d6180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2200:1, line:2206:1> line:2203:1 forward
| |   | |-TemplateTypeParmDecl 0x7fc6120d5d78 <line:2200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6120d60e8 <line:2201:1, line:2206:1> line:2203:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fc6120d5fb0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7fc6120d62b0 <line:2204:1, line:2206:1>
| |   |   | `-ReturnStmt 0x7fc6120d6298 <line:2205:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fc6120d6268 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fc6120d6230 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fc6120d5fb0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7fc6120d61d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6120d6220 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6120d66a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2208:1, line:2216:1> line:2211:1 forward
| |   | |-TemplateTypeParmDecl 0x7fc6120d62d0 <line:2208:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6120d6608 <line:2209:1, line:2216:1> line:2211:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fc6120d64d0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7fc6120d6a18 <line:2212:1, line:2216:1>
| |   |   | |-DeclStmt 0x7fc6120d6980 <line:2213:5, line:2214:60>
| |   |   | | `-StaticAssertDecl 0x7fc6120d6948 <line:2213:5, line:2214:59> line:2213:5
| |   |   | |   |-UnaryOperator 0x7fc6120d6858 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7fc6120d6818 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7fc6120d68f8 <line:2214:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7fc6120d6a00 <line:2215:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fc6120d69d0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fc6120d6998 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fc6120d64d0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7fc6120d66f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6120d6740 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6120d6e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2261:1, line:2267:1> line:2264:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7fc6120d6a40 <line:2261:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6120d6d40 <line:2262:1, line:2267:1> line:2264:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7fc6120d6c28 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fc6120d7018 <line:2265:1, line:2267:1>
| |   |   | `-ReturnStmt 0x7fc6120d7000 <line:2266:5, col:35>
| |   |   |   `-CallExpr 0x7fc6120d6fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2266:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fc6120d6f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2266:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     `-DeclRefExpr 0x7fc6120d6fa8 <col:32> '_Tp' lvalue ParmVar 0x7fc6120d6c28 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fc6120d6e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6120d6ea0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120d75b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2283:1, line:2289:1> line:2284:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120d7038 <line:2283:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6120d70a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6120d7118 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc6120d78d0 <line:2284:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6120d7978 <line:2286:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fc6120d70f0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fc6120d70a8 '_Class'
| |   | |-TypedefDecl 0x7fc6120d79e0 <line:2287:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc6120d7080 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc6120d7038 '_Rp'
| |   | `-TypedefDecl 0x7fc6120d7ad8 <line:2288:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc6120d7310 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc6120d72d0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc6120d7080 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc6120d7038 '_Rp'
| |   |       `-PackExpansionType 0x7fc6120d71f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc6120d7160 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc6120d7118 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120d80c8 <line:2291:1, line:2297:1> line:2292:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120d7b50 <line:2291:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6120d7bb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6120d7c28 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc6120d83e0 <line:2292:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6120d8488 <line:2294:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fc6120d7c00 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fc6120d7bb8 '_Class'
| |   | |-TypedefDecl 0x7fc6120d84f0 <line:2295:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc6120d7b90 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc6120d7b50 '_Rp'
| |   | `-TypedefDecl 0x7fc6120d85e8 <line:2296:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc6120d7e20 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc6120d7de0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc6120d7b90 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc6120d7b50 '_Rp'
| |   |       |-PackExpansionType 0x7fc6120d7d00 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc6120d7c70 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc6120d7c28 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6120d8bd8 <line:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6120d8660 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6120d86c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6120d8738 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc612153150 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6121531f8 <line:2302:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fc6120d8711 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fc6120d8710 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc6120d86c8 '_Class'
| |   | |-TypedefDecl 0x7fc612153260 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc6120d86a0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc6120d8660 '_Rp'
| |   | `-TypedefDecl 0x7fc6121533c8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc612153370 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc612153330 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc6120d86a0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc6120d8660 '_Rp'
| |   |       `-PackExpansionType 0x7fc6120d8810 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc6120d8780 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc6120d8738 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6121539b8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc612153440 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6121534a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc612153518 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc612153cd0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc612153d78 <line:2310:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fc6121534f1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fc6121534f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc6121534a8 '_Class'
| |   | |-TypedefDecl 0x7fc612153de0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc612153480 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc612153440 '_Rp'
| |   | `-TypedefDecl 0x7fc612153f48 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc612153ef0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc612153eb0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc612153480 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc612153440 '_Rp'
| |   |       |-PackExpansionType 0x7fc6121535f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc612153560 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc612153518 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc612154538 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc612153fc0 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc612154028 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc612154098 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc612154850 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6121548f8 <line:2318:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fc612154074 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fc612154070 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc612154028 '_Class'
| |   | |-TypedefDecl 0x7fc612154960 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc612154000 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc612153fc0 '_Rp'
| |   | `-TypedefDecl 0x7fc612154ac8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc612154a70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc612154a30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc612154000 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc612153fc0 '_Rp'
| |   |       `-PackExpansionType 0x7fc612154170 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc6121540e0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc612154098 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61381f118 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc612154b40 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc612154ba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc612154c18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc61381f430 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc61381f4d8 <line:2326:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fc612154bf4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fc612154bf0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc612154ba8 '_Class'
| |   | |-TypedefDecl 0x7fc61381f540 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc612154b80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc612154b40 '_Rp'
| |   | `-TypedefDecl 0x7fc61381f6a8 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc61381f650 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc61381f610 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc612154b80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc612154b40 '_Rp'
| |   |       |-PackExpansionType 0x7fc612154cf0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc612154c60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc612154c18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61381fc98 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61381f720 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc61381f788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc61381f7f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc61381ffb0 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc613820058 <line:2334:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fc61381f7d5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fc61381f7d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc61381f788 '_Class'
| |   | |-TypedefDecl 0x7fc6138200c0 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc61381f760 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc61381f720 '_Rp'
| |   | `-TypedefDecl 0x7fc613820228 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc6138201d0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613820190 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc61381f760 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc61381f720 '_Rp'
| |   |       `-PackExpansionType 0x7fc61381f8d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc61381f840 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc61381f7f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613820818 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6138202a0 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613820308 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc613820378 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613820b30 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc613820bd8 <line:2342:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fc613820355 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fc613820350 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc613820308 '_Class'
| |   | |-TypedefDecl 0x7fc613820c40 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc6138202e0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc6138202a0 '_Rp'
| |   | `-TypedefDecl 0x7fc613820da8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc613820d50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613820d10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc6138202e0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc6138202a0 '_Rp'
| |   |       |-PackExpansionType 0x7fc613820450 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc6138203c0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc613820378 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613884d98 <line:2350:1, line:2356:1> line:2351:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc613820e20 <line:2350:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613820e88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc613820ef8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc6138850b0 <line:2351:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc613885188 <line:2353:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fc613885150 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fc613820ed0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc613820e88 '_Class'
| |   | |-TypedefDecl 0x7fc6138851f0 <line:2354:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613820e60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc613820e20 '_Rp'
| |   | `-TypedefDecl 0x7fc613885358 <line:2355:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc613885300 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc6138852c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613820e60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc613820e20 '_Rp'
| |   |       `-PackExpansionType 0x7fc613820fd0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc613820f40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc613820ef8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613885948 <line:2358:1, line:2364:1> line:2359:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6138853d0 <line:2358:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613885438 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138854a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613885c60 <line:2359:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc613885d38 <line:2361:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fc613885d00 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fc613885480 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc613885438 '_Class'
| |   | |-TypedefDecl 0x7fc613885da0 <line:2362:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613885410 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc6138853d0 '_Rp'
| |   | `-TypedefDecl 0x7fc613885f08 <line:2363:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc613885eb0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613885e70 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613885410 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc6138853d0 '_Rp'
| |   |       |-PackExpansionType 0x7fc613885580 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc6138854f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc6138854a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138864f8 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc613885f80 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613885fe8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc613886058 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613886810 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6138868e8 <line:2369:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fc6138868b0 'const _Class &' dependent
| |   | |   `-QualType 0x7fc613886031 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fc613886030 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc613885fe8 '_Class'
| |   | |-TypedefDecl 0x7fc613886950 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613885fc0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc613885f80 '_Rp'
| |   | `-TypedefDecl 0x7fc613886af8 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc613886aa0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613886a60 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613885fc0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc613885f80 '_Rp'
| |   |       `-PackExpansionType 0x7fc613886130 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc6138860a0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc613886058 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138870e8 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc613886b70 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613886bd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc613886c48 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613887400 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6138874d8 <line:2377:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fc6138874a0 'const _Class &' dependent
| |   | |   `-QualType 0x7fc613886c21 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fc613886c20 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc613886bd8 '_Class'
| |   | |-TypedefDecl 0x7fc613887540 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613886bb0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc613886b70 '_Rp'
| |   | `-TypedefDecl 0x7fc6138876a8 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc613887650 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613887610 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613886bb0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc613886b70 '_Rp'
| |   |       |-PackExpansionType 0x7fc613886d20 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc613886c90 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc613886c48 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613887c98 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc613887720 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613887788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138877f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613887fb0 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc613888088 <line:2385:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fc613888050 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fc6138877d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fc6138877d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc613887788 '_Class'
| |   | |-TypedefDecl 0x7fc6138880f0 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613887760 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc613887720 '_Rp'
| |   | `-TypedefDecl 0x7fc613888258 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc613888200 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc6138881c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613887760 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc613887720 '_Rp'
| |   |       `-PackExpansionType 0x7fc6138878d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc613887840 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc6138877f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613888848 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6138882d0 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613888338 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138883a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613888b70 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc613888c48 <line:2393:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fc613888c10 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fc613888384 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fc613888380 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc613888338 '_Class'
| |   | |-TypedefDecl 0x7fc613888cb0 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613888310 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc6138882d0 '_Rp'
| |   | `-TypedefDecl 0x7fc613888e18 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc613888dc0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613888d80 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613888310 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc6138882d0 '_Rp'
| |   |       |-PackExpansionType 0x7fc613888480 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc6138883f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc6138883a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613889408 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc613888e90 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613888ef8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc613888f68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613889720 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6138897f8 <line:2401:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fc6138897c0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fc613888f45 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fc613888f40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc613888ef8 '_Class'
| |   | |-TypedefDecl 0x7fc613889860 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613888ed0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc613888e90 '_Rp'
| |   | `-TypedefDecl 0x7fc6138899c8 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc613889970 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613889930 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613888ed0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc613888e90 '_Rp'
| |   |       `-PackExpansionType 0x7fc613889040 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc613888fb0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc613888f68 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613889fb8 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc613889a40 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613889aa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc613889b18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc61388a2d0 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc61388a3a8 <line:2409:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fc61388a370 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fc613889af5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fc613889af0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc613889aa8 '_Class'
| |   | |-TypedefDecl 0x7fc61388a410 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613889a80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc613889a40 '_Rp'
| |   | `-TypedefDecl 0x7fc61388a578 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc61388a520 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc61388a4e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613889a80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc613889a40 '_Rp'
| |   |       |-PackExpansionType 0x7fc613889bf0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc613889b60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc613889b18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61388b398 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61388a5f0 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc61388a658 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc61388a6c8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc61388b6b0 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc61388b7b8 <line:2417:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fc61388b780 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fc61388a6a0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc61388a658 '_Class'
| |   | |-TypedefDecl 0x7fc61388b820 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc61388a630 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc61388a5f0 '_Rp'
| |   | `-TypedefDecl 0x7fc61388b988 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc61388b930 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc61388b8f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc61388a630 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc61388a5f0 '_Rp'
| |   |       `-PackExpansionType 0x7fc61388a7a0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc61388a710 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc61388a6c8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61388bf78 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61388ba00 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc61388ba68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc61388bad8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc61388c290 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc61388c368 <line:2425:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fc61388c330 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fc61388bab0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fc61388ba68 '_Class'
| |   | |-TypedefDecl 0x7fc61388c3d0 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc61388ba40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc61388ba00 '_Rp'
| |   | `-TypedefDecl 0x7fc61388c538 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc61388c4e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc61388c4a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc61388ba40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc61388ba00 '_Rp'
| |   |       |-PackExpansionType 0x7fc61388bbb0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc61388bb20 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc61388bad8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61388cb28 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61388c5b0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc61388c618 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc61388c688 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc61388ce40 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc61388cf48 <line:2433:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fc61388cf10 'const _Class &&' dependent
| |   | |   `-QualType 0x7fc61388c661 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fc61388c660 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc61388c618 '_Class'
| |   | |-TypedefDecl 0x7fc61388cfb0 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc61388c5f0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc61388c5b0 '_Rp'
| |   | `-TypedefDecl 0x7fc61388d118 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc61388d0c0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc61388d080 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc61388c5f0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc61388c5b0 '_Rp'
| |   |       `-PackExpansionType 0x7fc61388c760 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc61388c6d0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc61388c688 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61388e308 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61388d190 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc61388de00 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc61388de68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc61388e620 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc61388e6f8 <line:2441:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fc61388e6c0 'const _Class &&' dependent
| |   | |   `-QualType 0x7fc61388de41 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fc61388de40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc61388de00 '_Class'
| |   | |-TypedefDecl 0x7fc61388e760 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc61388d1d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc61388d190 '_Rp'
| |   | `-TypedefDecl 0x7fc61388e8c8 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc61388e870 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc61388e830 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc61388d1d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc61388d190 '_Rp'
| |   |       |-PackExpansionType 0x7fc61388df40 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc61388deb0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc61388de68 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61388eeb8 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61388e940 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc61388e9a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc61388ea18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc61388f1d0 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc61388f2d8 <line:2449:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fc61388f2a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fc61388e9f4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fc61388e9f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc61388e9a8 '_Class'
| |   | |-TypedefDecl 0x7fc61388f340 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc61388e980 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc61388e940 '_Rp'
| |   | `-TypedefDecl 0x7fc61388f4a8 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc61388f450 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc61388f410 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc61388e980 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc61388e940 '_Rp'
| |   |       `-PackExpansionType 0x7fc61388eaf0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc61388ea60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc61388ea18 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61388fa98 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc61388f520 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc61388f588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc61388f5f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613890600 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6138906d8 <line:2457:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fc6138906a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fc61388f5d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fc61388f5d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc61388f588 '_Class'
| |   | |-TypedefDecl 0x7fc613890740 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc61388f560 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc61388f520 '_Rp'
| |   | `-TypedefDecl 0x7fc6138908a8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc613890850 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613890810 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc61388f560 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc61388f520 '_Rp'
| |   |       |-PackExpansionType 0x7fc61388f6d0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc61388f640 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc61388f5f8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613890e98 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc613890920 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613890988 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138909f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc6138911b0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6138912b8 <line:2465:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fc613891280 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fc6138909d5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fc6138909d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc613890988 '_Class'
| |   | |-TypedefDecl 0x7fc613891320 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613890960 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc613890920 '_Rp'
| |   | `-TypedefDecl 0x7fc613891488 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fc613891430 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc6138913f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613890960 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc613890920 '_Rp'
| |   |       `-PackExpansionType 0x7fc613890ad0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fc613890a40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fc6138909f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613891a78 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc613891500 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613891568 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138915d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fc613891d90 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc613891e68 <line:2473:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fc613891e30 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fc6138915b5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fc6138915b0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fc613891568 '_Class'
| |   | |-TypedefDecl 0x7fc613891ed0 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fc613891540 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fc613891500 '_Rp'
| |   | `-TypedefDecl 0x7fc613892038 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fc613891fe0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fc613891fa0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fc613891540 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fc613891500 '_Rp'
| |   |       |-PackExpansionType 0x7fc6138916b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fc613891620 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fc6138915d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613892408 <line:2740:1, line:2745:1> line:2741:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fc6138920b0 <line:2740:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc613892118 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7fc613893350 <line:2741:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fc6138933f8 <line:2743:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fc613892160 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fc613892118 '_Class'
| |   | `-TypedefDecl 0x7fc613893460 <line:2744:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7fc6138920f0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fc6138920b0 '_Rp'
| |   |-ClassTemplateDecl 0x7fc6138935f8 <line:2747:1, line:2756:1> line:2748:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7fc6138934d8 <line:2747:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7fc613893560 <line:2748:1, line:2756:1> line:2748:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7fc613893d78 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7fc613893f48 <line:2759:1, line:2760:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7fc613893e30 <line:2759:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7fc613893eb0 <line:2760:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7fc6138941c0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138944e8 <line:2762:1, line:2765:1> line:2763:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fc613894278 <line:2762:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fc6138942e8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7fc613894730 <line:2763:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7fc6138947d8 <line:2764:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7fc613894330 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fc6138942e8 '_ClassType'
| |   |-ClassTemplateDecl 0x7fc613894968 <line:2769:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7fc613894850 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7fc6138948d0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7fc613894b78 <line:2921:1, line:2924:1> line:2921:11 __is_construct
| |   | `-CXXRecordDecl 0x7fc613894be0 <line:2923:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7fc613894d08 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7fc613894f80 <line:3043:1, line:3046:6> line:3044:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7fc613894dc0 <line:3043:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc613894e28 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fc613894ee8 <line:3044:1, line:3046:6> line:3044:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fc613895690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc613895898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3044:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7fc613895a98 <line:3234:1, line:3237:6> line:3235:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fc613895950 <line:3234:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc613895a00 <line:3235:1, line:3237:6> line:3235:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fc613895d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc613895e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3235:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7fc613896078 <line:3246:1, line:3249:88> line:3247:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fc613895f30 <line:3246:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc613895fe0 <line:3247:1, line:3249:88> line:3247:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc6138962f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138966e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3247:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7fc6138968e8 <line:3258:1, line:3265:6> line:3259:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fc6138967a0 <line:3258:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc613896850 <line:3259:1, line:3265:6> line:3259:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc613896b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc613896e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3259:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7fc6138970c0 <line:3278:1, line:3282:1> line:3279:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7fc613896f00 <line:3278:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc613896f68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fc613897028 <line:3279:1, line:3282:1> line:3279:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fc6138973c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61386e800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3279:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7fc61386ea08 <line:3406:1, line:3408:6> line:3406:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fc61386e8b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61386e970 <col:22, line:3408:6> line:3406:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fc61386ec80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61386ede8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3406:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7fc61386efe8 <line:3417:1, line:3419:6> line:3417:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fc61386eea0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61386ef50 <col:22, line:3419:6> line:3417:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61386f260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61386f5d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3417:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7fc61386f7d8 <line:3428:1, line:3434:6> line:3428:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fc61386f690 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61386f740 <col:22, line:3434:6> line:3428:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61386fa50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61386fd38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3428:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7fc61386ff80 <line:3445:1, line:3449:1> line:3446:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7fc61386fdf0 <line:3445:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61386fe58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fc61386fee8 <line:3446:1, line:3449:1> line:3446:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7fc6138703d8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7fc6138705d8 <line:3486:1, line:3488:88> line:3486:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fc613870490 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc613870540 <col:22, line:3488:88> line:3486:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61387aa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61387af38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3486:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7fc61387b138 <line:3497:1, line:3504:6> line:3497:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fc61387aff0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61387b0a0 <col:22, line:3504:6> line:3497:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61387b3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61387b778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3497:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7fc61387b978 <line:3515:1, line:3516:101> line:3515:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7fc61387b830 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61387b8e0 <col:22, line:3516:101> line:3515:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc61387bbf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61387bf38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3515:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7fc61387c260 <line:3552:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7fc61387c000 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7fc61387c068 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7fc61387c0c0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61387c128 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7fc61387c1c8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61389b600 <line:3554:1, line:3558:1> line:3555:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fc61387c5a8 <line:3554:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61387c618 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fc61389bc48 <line:3555:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7fc61389bf30 <line:3560:1, line:3561:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7fc61389bd00 <line:3560:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc61389be98 <line:3561:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7fc61389bd90 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7fc61389bf88 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61389c310 <line:3563:1, line:3567:1> line:3564:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fc61389bfa0 <line:3563:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61389c008 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fc61389c9c8 <line:3564:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61389cea0 <line:3569:1, line:3573:1> line:3570:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fc61389cbf8 <col:69> '_Bool' NonTypeTemplateParm 0x7fc61389caf8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fc61389ca80 <line:3569:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc61389caf8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7fc61389cb50 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fc61389d240 <line:3570:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fc61389d4c0 <line:3575:1, line:3579:1> line:3576:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7fc61389d2f8 <line:3575:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc61389d368 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fc61389d428 <line:3576:1, line:3579:1> line:3576:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7fc61389d8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61389de08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3576:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc61389e170 <line:3581:1, line:3585:1> line:3582:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7fc61389dec0 <line:3581:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc61389df38 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fc61389e2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc61389e818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3582:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fc61389ea18 <line:3704:1, line:3706:6> line:3704:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fc61389e8d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61389e980 <col:22, line:3706:6> line:3704:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fc61389ec90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc61389edf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3704:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7fc61389eff8 <line:3715:1, line:3717:88> line:3715:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fc61389eeb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc61389ef60 <col:22, line:3717:88> line:3715:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc61389f270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138a1678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3715:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7fc6138a1878 <line:3726:1, line:3732:6> line:3726:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fc6138a1730 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138a17e0 <col:22, line:3732:6> line:3726:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc6138a1af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138a1dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3726:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7fc6138a2098 <line:3743:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7fc6138a1ea0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fc6138a1ef8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc6138a1f68 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7fc6138a2000 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138a2608 <line:3745:1, line:3749:1> line:3746:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fc6138a2338 <line:3745:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc6138a23a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fc6138a2930 <line:3746:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138a2cb8 <line:3751:1, line:3755:1> line:3752:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fc6138a29e8 <line:3751:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc6138a2a58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fc6138a3358 <line:3752:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fc6138a5600 <line:3757:1, line:3761:1> line:3758:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7fc6138a3410 <line:3757:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fc6138a3478 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fc6138a3538 <line:3758:1, line:3761:1> line:3758:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7fc6138a58a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138a5c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3758:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fc6138a5e18 <line:3814:1, line:3816:88> line:3814:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fc6138a5cd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138a5d80 <col:22, line:3816:88> line:3814:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc6138a6090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138a6568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3814:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7fc6138a6768 <line:3825:1, line:3832:6> line:3825:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fc6138a6620 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138a66d0 <col:22, line:3832:6> line:3825:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fc6138a69e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138a6da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3825:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7fc6138a6ff0 <line:3843:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7fc6138a6e70 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fc6138a6ec8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fc6138a6f58 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138a7430 <line:3845:1, line:3849:1> line:3846:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6138a7248 <line:3845:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138a8700 <line:3846:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138a89a0 <line:3851:1, line:3855:1> line:3852:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6138a87b8 <line:3851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138a8f48 <line:3852:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fc6138a9148 <line:3857:1, line:3861:1> line:3858:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7fc6138a9000 <line:3857:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138a90b0 <line:3858:1, line:3861:1> line:3858:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7fc6138a93c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138a9678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3858:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138a99b8 <line:3863:1, line:3867:1> line:3864:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fc6138a9730 <line:3863:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6138a97a8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fc6138a9b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6138a9cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3864:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138a9f78 <line:3869:1, line:3873:1> line:3870:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fc6138a9db0 <line:3869:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6138aa0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6138aa230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3870:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138aa4b8 <line:3877:1, line:3881:1> line:3878:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fc6138aa2e8 <line:3877:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fc6138aa600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6138aa780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3878:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fc6138aa988 <line:3909:1, line:3910:54> line:3909:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7fc6138aa838 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138aa8f0 <col:22, line:3910:54> line:3909:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6138aac00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138aade8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3909:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7fc6138aafe8 <line:3929:1, line:3936:6> line:3929:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7fc6138aaea0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138aaf50 <col:22, line:3936:6> line:3929:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6138ab260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138ab448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3929:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7fc6138ab648 <line:3945:1, line:3951:6> line:3945:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7fc6138ab500 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138ab5b0 <col:22, line:3951:6> line:3945:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6138ab8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138abaa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7fc6138abca8 <line:3960:1, line:3968:6> line:3960:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7fc6138abb60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138abc10 <col:22, line:3968:6> line:3960:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6138abf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138ac108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3960:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7fc6138ac308 <line:3977:1, line:3984:6> line:3977:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7fc6138ac1c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138ac270 <col:22, line:3984:6> line:3977:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fc6138ac580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fc6138ad778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3977:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7fc6138ad948 <line:3991:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7fc6138ad830 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138ad8b0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fc6138adc00 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138aded8 <line:3992:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7fc6138adcb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138ae180 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7fc6138ae358 <line:3993:1, line:3994:74> line:3993:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fc6138ae238 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138ae2c0 <col:22, line:3994:74> line:3993:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7fc6138ae7e8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7fc6138ae9b8 <line:4000:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7fc6138ae8a0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7fc6138ae920 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7fc6138aec38 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7fc6138aec38 <line:4002:1, line:4005:1> line:4003:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fc6138aee30 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138af298 <line:4007:1, line:4012:1> line:4008:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fc6138aeee8 <line:4007:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fc6138aef58 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7fc6138aefc8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7fc6138af8e0 <line:4008:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138afba8 <line:4014:1, line:4018:1> line:4015:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6138af998 <line:4014:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7fc6138aff68 <line:4015:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b0168 <line:4020:1, line:4024:1> line:4021:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fc6138b0020 <line:4020:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fc6138b03d0 <line:4021:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7fc6138b05b8 <line:4023:5, col:60> col:5
| |   |   |-BinaryOperator 0x7fc6138b04d0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7fc6138b0478 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7fc6138b04b8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7fc6138b0498 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7fc6138b0578 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b07d8 <line:4026:1, line:4030:1> line:4027:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fc6138b0610 <line:4026:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138b0b28 <line:4027:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b0da8 <line:4032:1, line:4036:1> line:4033:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fc6138b0be0 <line:4032:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138b10f8 <line:4033:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b1600 <line:4038:1, line:4042:1> line:4039:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fc6138b11b0 <line:4038:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b1218 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b1968 <line:4039:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b1d88 <line:4044:1, line:4047:1> line:4045:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fc6138b1a20 <line:4044:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b2010 <line:4045:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b23d8 <line:4049:1, line:4053:1> line:4050:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fc6138b20c8 <line:4049:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b2138 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b2738 <line:4050:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b2a78 <line:4055:1, line:4058:1> line:4056:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fc6138b27f0 <line:4055:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b2cf0 <line:4056:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b31f8 <line:4060:1, line:4064:1> line:4061:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7fc6138b2da8 <line:4060:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b2e18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b2e88 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b3600 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b3b08 <line:4066:1, line:4070:1> line:4067:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7fc6138b36b8 <line:4066:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b3728 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b3798 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b3e78 <line:4067:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b4378 <line:4072:1, line:4076:1> line:4073:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7fc6138b3f30 <line:4072:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b3f98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b4008 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b46e8 <line:4073:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b4be8 <line:4078:1, line:4082:1> line:4079:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7fc6138b47a0 <line:4078:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b4808 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b4878 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b4f58 <line:4079:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b5458 <line:4084:1, line:4088:1> line:4085:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7fc6138b5010 <line:4084:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b5078 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b50e8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b61d8 <line:4085:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b66d8 <line:4090:1, line:4094:1> line:4091:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7fc6138b6290 <line:4090:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b62f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b6368 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b6a48 <line:4091:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b6f48 <line:4096:1, line:4100:1> line:4097:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7fc6138b6b00 <line:4096:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b6b68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b6bd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b72b8 <line:4097:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b77b8 <line:4102:1, line:4106:1> line:4103:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7fc6138b7370 <line:4102:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b73d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b7448 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b7b28 <line:4103:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b8040 <line:4108:1, line:4112:1> line:4109:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7fc6138b7be0 <line:4108:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b7c48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b7cb8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b83a8 <line:4109:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b88a8 <line:4114:1, line:4118:1> line:4115:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7fc6138b8460 <line:4114:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b84c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b8538 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b8c18 <line:4115:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b9118 <line:4120:1, line:4124:1> line:4121:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fc6138b8cd0 <line:4120:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b8d38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b8da8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b9488 <line:4121:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138b9988 <line:4126:1, line:4130:1> line:4127:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fc6138b9540 <line:4126:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b95a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fc6138b9618 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fc6138b9cf8 <line:4127:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138ba088 <line:4132:1, line:4136:1> line:4133:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fc6138b9db0 <line:4132:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fc6138b9e18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fc6138ba3e8 <line:4133:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7fc6138bb0a0 <line:4139:1, line:4147:8> line:4143:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7fc6138ba4a0 <line:4139:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138ba508 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138ba6a0 <line:4140:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138ba830 <line:4141:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138baa50 <line:4142:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fc6138bb040 <line:4143:1, line:4147:8> line:4143:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fc6138bafd0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6138bb9f0 <line:4149:1, line:4156:8> line:4152:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7fc6138bb0f0 <line:4149:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138bb158 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138bb2f0 <line:4150:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138bb480 <line:4151:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fc6138bb990 <line:4152:1, line:4156:8> line:4152:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fc6138bb920 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6138bd810 <line:4158:1, line:4167:8> line:4162:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7fc6138bba40 <line:4158:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138bbaa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138bbc40 <line:4159:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138bbdd0 <line:4160:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138bbf60 <line:4161:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fc6138bd7b0 <line:4162:1, line:4167:8> line:4162:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fc6138bd740 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6138be330 <line:4169:1, line:4177:8> line:4173:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7fc6138bd860 <line:4169:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138bd8c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138bda60 <line:4170:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138bdbf0 <line:4171:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138bdd80 <line:4172:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fc6138be2d0 <line:4173:1, line:4177:8> line:4173:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fc6138be260 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6138bec10 <line:4179:1, line:4186:8> line:4182:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7fc6138be380 <line:4179:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138be3e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138be580 <line:4180:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138be710 <line:4181:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fc6138bebb0 <line:4182:1, line:4186:8> line:4182:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fc6138beb40 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fc6138c0850 <line:4188:1, line:4197:8> line:4192:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7fc6138bec60 <line:4188:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138becc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138bee60 <line:4189:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138beff0 <line:4190:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fc6138bf180 <line:4191:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fc6138c07f0 <line:4192:1, line:4197:8> line:4192:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fc6138c0780 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7fc6138c0c48 <line:4207:1, line:4208:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7fc6138c08a0 <line:4207:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fc6138c0bb0 <line:4208:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fc6138c0930 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fc6138c0a68 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fc6138c0f98 <line:4210:1, line:4211:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fc6138c0ca8 <line:4210:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fc6138c0f00 <line:4211:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fc6138c0d40 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fc6138c0e18 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fc6138c48e8 <line:4215:1, line:4205:27> line:4219:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fc6138c0ff8 <line:4215:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138c1068 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138c10d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fc6138c1c28 <line:4216:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138c4850 <line:4217:1, line:4205:27> line:4219:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fc6138c1d38 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138c1dd8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fc6138c1f18 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fc6138c4d38 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138c4d20 <col:7, line:4220:88>
| |   |   |   `-CallExpr 0x7fc6138c4cf0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fc6138c4b60 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fc6138c4b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fc6138c4ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fc6138c4a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     |   | `-DeclRefExpr 0x7fc6138c4ab8 <col:44> '_A0' lvalue ParmVar 0x7fc6138c1dd8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fc6138c4b10 <col:51> '_Fp' lvalue ParmVar 0x7fc6138c1d38 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fc6138c4cd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138c4ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fc6138c4bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4220:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |         `-DeclRefExpr 0x7fc6138c4c78 <col:78> '_Args &&...' lvalue ParmVar 0x7fc6138c1f18 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fc6138c4950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138c4998 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138c6200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4222:1, line:4205:27> line:4226:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fc6138c4d58 <line:4222:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138c4dc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138c4e38 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fc6138c5668 <line:4223:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138c6140 <line:4224:1, line:4205:27> line:4226:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fc6138c5778 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138c5818 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fc6138c58f8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fc6138c6650 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138c6638 <col:7, line:4227:88>
| |   |   |   `-CallExpr 0x7fc6138c6608 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fc6138c6478 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fc6138c6450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fc6138c63f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fc6138c6330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     |   | `-DeclRefExpr 0x7fc6138c63d0 <col:44> '_A0' lvalue ParmVar 0x7fc6138c5818 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fc6138c6428 <col:51> '_Fp' lvalue ParmVar 0x7fc6138c5778 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fc6138c65e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138c65b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fc6138c64f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4227:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |         `-DeclRefExpr 0x7fc6138c6590 <col:78> '_Args &&...' lvalue ParmVar 0x7fc6138c58f8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fc6138c6268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138c62b0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138c7a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4229:1, line:4205:27> line:4233:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fc6138c6670 <line:4229:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138c66d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138c6748 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fc6138c7008 <line:4230:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138c79f0 <line:4231:1, line:4205:27> line:4233:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fc6138c7118 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138c71b8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fc6138c7298 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fc6138c7e18 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138c7e00 <col:7, line:4234:73>
| |   |   |   `-CallExpr 0x7fc6138c7dd0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fc6138c7c40 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fc6138c7c18 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fc6138c7bc8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fc6138c7b70 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fc6138c7b48 <col:24> '_A0' lvalue ParmVar 0x7fc6138c71b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fc6138c7bf0 <col:36> '_Fp' lvalue ParmVar 0x7fc6138c7118 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fc6138c7db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4234:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138c7d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4234:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fc6138c7cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4234:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |         `-DeclRefExpr 0x7fc6138c7d58 <col:63> '_Args &&...' lvalue ParmVar 0x7fc6138c7298 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fc6138c7af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138c7b38 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138c99f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:1, line:4205:27> line:4240:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fc6138c7e38 <line:4236:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138c7ea8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138c7f18 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fc6138c9008 <line:4237:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138c9960 <line:4238:1, line:4205:27> line:4240:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fc6138c9118 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138c91b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fc6138c9298 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fc6138c9d88 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138c9d70 <col:7, line:4241:73>
| |   |   |   `-CallExpr 0x7fc6138c9d40 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fc6138c9bb0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fc6138c9b88 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fc6138c9b38 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fc6138c9ae0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fc6138c9ab8 <col:24> '_A0' lvalue ParmVar 0x7fc6138c91b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fc6138c9b60 <col:36> '_Fp' lvalue ParmVar 0x7fc6138c9118 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fc6138c9d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4241:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138c9cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4241:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fc6138c9c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4241:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |         `-DeclRefExpr 0x7fc6138c9cc8 <col:63> '_Args &&...' lvalue ParmVar 0x7fc6138c9298 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fc6138c9a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138c9aa8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138cb608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:1, line:4205:27> line:4247:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fc6138c9da8 <line:4243:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138c9e18 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138c9e88 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fc6138ca9b8 <line:4244:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138cb570 <line:4245:1, line:4205:27> line:4247:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fc6138caac8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138cab68 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fc6138cac48 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fc6138cba80 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138cba68 <col:7, line:4248:91>
| |   |   |   `-CallExpr 0x7fc6138cba38 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fc6138cb8a8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fc6138cb880 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fc6138cb838 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fc6138cb818 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fc6138cb7e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fc6138cb720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     |   |     `-DeclRefExpr 0x7fc6138cb7c0 <col:46> '_A0' lvalue ParmVar 0x7fc6138cab68 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fc6138cb858 <col:54> '_Fp' lvalue ParmVar 0x7fc6138caac8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fc6138cba18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138cb9e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fc6138cb920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4248:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |         `-DeclRefExpr 0x7fc6138cb9c0 <col:81> '_Args &&...' lvalue ParmVar 0x7fc6138cac48 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fc6138cb670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138cb6b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138cd0c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:1, line:4205:27> line:4254:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fc6138cbaa0 <line:4250:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138cbb08 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138cbb78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fc6138cc508 <line:4251:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138cd030 <line:4252:1, line:4205:27> line:4254:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fc6138cc618 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138cc6b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fc6138cc798 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fc6138cd540 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138cd528 <col:7, line:4255:91>
| |   |   |   `-CallExpr 0x7fc6138cd4f8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fc6138cd368 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fc6138cd340 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fc6138cd2f8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fc6138cd2d8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fc6138cd2a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fc6138cd1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     |   |     `-DeclRefExpr 0x7fc6138cd280 <col:46> '_A0' lvalue ParmVar 0x7fc6138cc6b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fc6138cd318 <col:54> '_Fp' lvalue ParmVar 0x7fc6138cc618 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fc6138cd4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138cd4a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fc6138cd3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4255:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |         `-DeclRefExpr 0x7fc6138cd480 <col:81> '_Args &&...' lvalue ParmVar 0x7fc6138cc798 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fc6138cd130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138cd178 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138ce738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4205:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fc6138cd560 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138cd5c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138cdff8 <line:4260:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138ce6a0 <line:4261:1, line:4205:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fc6138ce0f8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138ce198 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fc6138ce9a8 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138ce990 <col:7, line:4264:50>
| |   |   |   `-BinaryOperator 0x7fc6138ce968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fc6138ce910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fc6138ce848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     | `-DeclRefExpr 0x7fc6138ce8e8 <col:43> '_A0' lvalue ParmVar 0x7fc6138ce198 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fc6138ce940 <col:50> '_Fp' lvalue ParmVar 0x7fc6138ce0f8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fc6138ce798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138ce7e0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138cf948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4205:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fc6138ce9c8 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138cea38 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138cf288 <line:4267:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138cf8b0 <line:4268:1, line:4205:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fc6138cf388 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138cf428 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fc6138cfbb8 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138cfba0 <col:7, line:4271:50>
| |   |   |   `-BinaryOperator 0x7fc6138cfb78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fc6138cfb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fc6138cfa58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     | `-DeclRefExpr 0x7fc6138cfaf8 <col:43> '_A0' lvalue ParmVar 0x7fc6138cf428 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fc6138cfb50 <col:50> '_Fp' lvalue ParmVar 0x7fc6138cf388 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fc6138cf9a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138cf9f0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138d0a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4273:1, line:4205:27> line:4277:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fc6138cfbd8 <line:4273:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138cfc48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138d04a8 <line:4274:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138d0a00 <line:4275:1, line:4205:27> line:4277:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fc6138d05a8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138d0648 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fc6138d0c68 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138d0c50 <col:7, line:4278:35>
| |   |   |   `-BinaryOperator 0x7fc6138d0c28 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fc6138d0bd0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fc6138d0b78 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fc6138d0b50 <col:23> '_A0' lvalue ParmVar 0x7fc6138d0648 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fc6138d0c00 <col:35> '_Fp' lvalue ParmVar 0x7fc6138d05a8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fc6138d0af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138d0b40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138d1958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:1, line:4205:27> line:4284:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fc6138d0c88 <line:4280:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d0cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138d13e8 <line:4281:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138d18c0 <line:4282:1, line:4205:27> line:4284:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fc6138d14e8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138d1588 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fc6138d1b20 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138d1b08 <col:7, line:4285:35>
| |   |   |   `-BinaryOperator 0x7fc6138d1ae0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fc6138d1a90 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fc6138d1a38 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fc6138d1a10 <col:23> '_A0' lvalue ParmVar 0x7fc6138d1588 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fc6138d1ab8 <col:35> '_Fp' lvalue ParmVar 0x7fc6138d14e8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fc6138d19b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138d1a00 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138d2e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:1, line:4205:27> line:4291:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fc6138d1b40 <line:4287:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d1ba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138d26d8 <line:4288:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138d2e00 <line:4289:1, line:4205:27> line:4291:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fc6138d27d8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138d2878 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fc6138d3148 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138d3130 <col:7, line:4292:53>
| |   |   |   `-BinaryOperator 0x7fc6138d3108 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fc6138d30c0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fc6138d30a0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fc6138d3070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4292:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fc6138d2fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4292:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     |     `-DeclRefExpr 0x7fc6138d3048 <col:45> '_A0' lvalue ParmVar 0x7fc6138d2878 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fc6138d30e0 <col:53> '_Fp' lvalue ParmVar 0x7fc6138d27d8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fc6138d2ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138d2f40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138d42a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4294:1, line:4205:27> line:4298:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fc6138d3168 <line:4294:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d31d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fc6138d3b68 <line:4295:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fc6138d4210 <line:4296:1, line:4205:27> line:4298:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fc6138d3c68 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138d3d08 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fc6138d4558 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138d4540 <col:7, line:4299:53>
| |   |   |   `-BinaryOperator 0x7fc6138d4518 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fc6138d44d0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fc6138d44b0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fc6138d4480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4299:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fc6138d43b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4299:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     |     `-DeclRefExpr 0x7fc6138d4458 <col:45> '_A0' lvalue ParmVar 0x7fc6138d3d08 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fc6138d44f0 <col:53> '_Fp' lvalue ParmVar 0x7fc6138d3c68 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fc6138d4308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138d4350 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138d6078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4205:27> line:4306:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fc6138d4578 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d45e8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fc6138d5fe0 <line:4304:1, line:4205:27> line:4306:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fc6138d46e8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138d4828 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fc6138d6438 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138d6420 <col:7, line:4307:80>
| |   |   |   `-CallExpr 0x7fc6138d63f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fc6138d6250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fc6138d6188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     | `-DeclRefExpr 0x7fc6138d6228 <col:43> '_Fp' lvalue ParmVar 0x7fc6138d46e8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fc6138d63d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138d63a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fc6138d62d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4307:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |         `-DeclRefExpr 0x7fc6138d6378 <col:70> '_Args &&...' lvalue ParmVar 0x7fc6138d4828 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fc6138d60d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138d6120 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138d6e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4309:1, line:4205:27> line:4312:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fc6138d6458 <line:4309:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d64c8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fc6138d6dd0 <line:4310:1, line:4205:27> line:4312:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fc6138d65c8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fc6138d66a8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fc6138d7228 <line:4205:5, col:27>
| |   |   | `-ReturnStmt 0x7fc6138d7210 <col:7, line:4313:80>
| |   |   |   `-CallExpr 0x7fc6138d71e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fc6138d7040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fc6138d6f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |     | `-DeclRefExpr 0x7fc6138d7018 <col:43> '_Fp' lvalue ParmVar 0x7fc6138d65c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fc6138d71c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138d7190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fc6138d70c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4313:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fc6120d6180 0x7fc6120d66a0
| |   |   |         `-DeclRefExpr 0x7fc6138d7168 <col:70> '_Args &&...' lvalue ParmVar 0x7fc6138d66a8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fc6138d6ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138d6f10 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fc6138d7458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4336:1> line:4320:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7fc6138d7248 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fc6138d72b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d7328 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fc6138d73c0 <line:4320:1, line:4336:1> line:4320:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7fc6138d7878 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7fc6138d7cb8 <line:4323:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7fc6138d7c80 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7fc6138d7c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fc6138d7940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fc6138c0c48 0x7fc6138c48e8 0x7fc6138c7a88 0x7fc6138cb608 0x7fc6138ce738 0x7fc6138d0a98 0x7fc6138d2e98 0x7fc6138d6078
| |   |   |     |-CallExpr 0x7fc6138d7aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7fc6138d7a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   |   |     `-PackExpansionExpr 0x7fc6138d7bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7fc6138d7ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7fc6138d7b10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4324:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   |   `-VarDecl 0x7fc6138d7d28 <line:4326:5, line:4335:18> line:4326:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fc6138d8640 <line:4327:9, line:4335:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7fc6138d8a58 <line:4338:1, line:4339:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7fc6138d86a0 <line:4338:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d8708 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7fc6138d89f8 <line:4339:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fc6138d88c0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fc6138d8dc8 <line:4341:1, line:4344:1> line:4342:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7fc6138d8ab8 <line:4341:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7fc6138d8b20 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7fc6138d8b78 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7fc6138d8be8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d8c58 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7fc6138d8d30 <line:4342:1, line:4344:1> line:4342:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7fc6138d91e0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7fc6138d9288 <line:4343:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fc6138d92e8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138d97b8 <line:4346:1, line:4356:1> line:4347:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fc6138d9320 <line:4346:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fc6138d9388 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138d93f8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fc6138db200 <line:4347:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7fc6138db2a8 <line:4349:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7fc6138d9920 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7fc6138d97b8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7fc6138db560 <line:4351:5, line:4352:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7fc6138db300 <line:4351:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fc6138db4c8 <line:4352:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7fc6138db390 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7fc6138db5c8 <line:4354:5, line:4355:76> line:4354:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fc6138dbaa8 <col:31, line:4355:76> '_Bool'
| |   |     `-CallExpr 0x7fc6138dba78 <line:4354:40, line:4355:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fc6138db6c8 <line:4354:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fc6138db560
| |   |       `-CallExpr 0x7fc6138dba40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7fc6138db790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fc6138c0c48 0x7fc6138c48e8 0x7fc6138c7a88 0x7fc6138cb608 0x7fc6138ce738 0x7fc6138d0a98 0x7fc6138d2e98 0x7fc6138d6078
| |   |         |-CallExpr 0x7fc6138db8f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7fc6138db860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   |         `-PackExpansionExpr 0x7fc6138dba20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:71> '<dependent type>'
| |   |           `-CallExpr 0x7fc6138db9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7fc6138db960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4355:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138dbf88 <line:4358:1, line:4363:1> line:4359:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fc6138dbaf0 <line:4358:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fc6138dbb58 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138dbbc8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fc6138dc360 <line:4359:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7fc6138dc408 <line:4361:5, line:4362:75> line:4361:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fc6138dc780 <col:31, line:4362:75> '_Bool'
| |   |     `-CallExpr 0x7fc6138dc748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fc6138dc498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fc6138c0c48 0x7fc6138c48e8 0x7fc6138c7a88 0x7fc6138cb608 0x7fc6138ce738 0x7fc6138d0a98 0x7fc6138d2e98 0x7fc6138d6078
| |   |       |-CallExpr 0x7fc6138dc600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7fc6138dc568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   |       `-PackExpansionExpr 0x7fc6138dc728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:71> '<dependent type>'
| |   |         `-CallExpr 0x7fc6138dc700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7fc6138dc668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4362:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   |-TypeAliasTemplateDecl 0x7fc6138dcfd8 <line:4365:1, line:4371:5> line:4366:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7fc6138dc7c8 <line:4365:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fc6138dc838 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138dc8a8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7fc6138dcf78 <line:4366:1, line:4371:5> line:4366:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fc6138dcdb0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fc6138dcb10 <line:4368:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fc6138dcc30 <line:4369:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fc6138dd600 <line:4373:1, line:4379:1> line:4374:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7fc6138dd028 <line:4373:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138dd098 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fc6138dd128 <line:4374:1, line:4379:1> line:4374:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7fc6138de068 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138de428 <line:4383:1, line:4387:1> line:4384:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fc6138de120 <line:4383:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fc6138de188 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7fc6138de580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:658:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fc6138de7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4384:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7fc6138deaf0 <line:4390:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7fc6138de8b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6138dea90 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6138dea20 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6138dec58 <line:4424:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fc6138deb40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138debc0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7fc6138def88 <line:4425:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fc6138dee68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138deef0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7fc6138dfb68 <line:4427:1, line:4444:1> line:4438:1 swap
| |   | |-TemplateTypeParmDecl 0x7fc6138df198 <line:4427:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6138dfad0 <line:4428:1, line:4444:1> line:4438:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fc6138df6b8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7fc6138df728 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7fc6138e0048 <line:4440:1, line:4444:1>
| |   |   | |-DeclStmt 0x7fc6138dfdd0 <line:4441:5, col:30>
| |   |   | | `-VarDecl 0x7fc6138dfcb8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7fc6138dfda0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7fc6138dfd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4441:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7fc6138dfc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4441:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fc6120d5a38
| |   |   | |       `-DeclRefExpr 0x7fc6138dfd18 <col:25> '_Tp' lvalue ParmVar 0x7fc6138df6b8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7fc6138dfef0 <line:4442:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7fc6138dfde8 <col:5> '_Tp' lvalue ParmVar 0x7fc6138df6b8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7fc6138dfec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4442:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7fc6138dfe40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4442:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fc6120d5a38
| |   |   | |   `-DeclRefExpr 0x7fc6138dfe98 <col:23> '_Tp' lvalue ParmVar 0x7fc6138df728 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7fc6138e0020 <line:4443:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7fc6138dff18 <col:5> '_Tp' lvalue ParmVar 0x7fc6138df728 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7fc6138dfff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4443:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fc6138dff70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4443:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fc6120d5a38
| |   |   |     `-DeclRefExpr 0x7fc6138dffc8 <col:23> '_Tp' lvalue Var 0x7fc6138dfcb8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fc6138dfbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138dfc10 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138e09d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4446:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:739:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4451:1 swap
| |   | |-TemplateTypeParmDecl 0x7fc6138e0078 <line:4446:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6138e00f8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7fc6138e0940 <line:4447:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:739:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4451:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fc6138e0598 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7fc6138e06e8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7fc6138e0a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138e0a80 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138e10f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4453:1, line:4462:1> line:4456:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7fc6138e0a90 <line:4453:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7fc6138e0af8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7fc6138e1060 <line:4454:1, line:4462:1> line:4456:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7fc6138e0bc8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7fc6138e0c38 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7fc6138e12d8 <line:4460:1, line:4462:1>
| |   |   | `-CallExpr 0x7fc6138e12a0 <line:4461:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7fc6138e11b0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fc6138e09d8 0x7fc6138dfb68
| |   |   |   |-UnaryOperator 0x7fc6138e1238 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7fc6138e1210 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fc6138e0bc8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7fc6138e1280 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7fc6138e1258 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fc6138e0c38 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7fc6138e1158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138e11a0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7fc6138e12f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4466:1, line:4505:1> line:4466:11 __detail
| |   | |-ClassTemplateDecl 0x7fc6138e17f8 <line:4470:1, line:4486:1> line:4472:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fc6138e1360 <line:4470:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fc6138e13d8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fc6138e16e0 <line:4471:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7fc6138e16a8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7fc6138e1558 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7fc6138e1518 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7fc6138e1688 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7fc6138e1648 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fc6138e1760 <line:4472:1, line:4486:1> line:4472:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fc6138e1b00 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7fc6138e21b8 <line:4474:5, line:4476:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fc6138e1b98 <line:4474:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7fc6138e1c08 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7fc6138e2120 <line:4475:5, line:4476:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7fc6138e1f78 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7fc6138e2478 <line:4477:5, line:4478:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fc6138e2210 <line:4477:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7fc6138e2278 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7fc6138e23e0 <line:4478:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7fc6138e2320 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7fc6138e26c8 <line:4481:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7fc6138e2690 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fc6138e2628 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fc6138e25f8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fc6138e2508 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fc6138e2478 0x7fc6138e21b8
| |   | |   |       `-IntegerLiteral 0x7fc6138e25d8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7fc6138e2918 <line:4482:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7fc6138e28e0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fc6138e2878 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fc6138e2848 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fc6138e2758 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fc6138e2478 0x7fc6138e21b8
| |   | |   |       `-IntegerLiteral 0x7fc6138e2828 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7fc6138e2980 <line:4484:5, line:4485:57> line:4484:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fc6138e2db8 <col:31, line:4485:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7fc6138e2ba8 <line:4484:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7fc6138e2b68 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7fc6138e2d98 <line:4485:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7fc6138e2d58 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7fc6138e30c8 <line:4488:1, line:4489:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7fc6138e2e00 <line:4488:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fc6138e2e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7fc6138e33f0 <line:4489:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7fc6138e3f40 <line:4491:1, line:4500:1> line:4492:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fc6138e34a8 <line:4491:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fc6138e3528 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fc6138e3e28 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7fc6138e3dd8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fc6138e3ea8 <line:4492:1, line:4500:1> line:4492:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fc6138e4240 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7fc6138e42e8 <line:4493:3, line:4496:66> line:4493:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fc6138e48c8 <line:4495:7, line:4496:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7fc6138e45e0 <line:4495:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7fc6138e45a8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7fc6138e4348 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fc6138e09d8 0x7fc6138dfb68
| |   | |       |   |-CallExpr 0x7fc6138e4480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4495:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7fc6138e43e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4495:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   | |       |   `-CallExpr 0x7fc6138e4580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4495:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7fc6138e44e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4495:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   | |       `-CXXNoexceptExpr 0x7fc6138e48a0 <line:4496:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7fc6138e4868 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7fc6138e4608 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fc6138e09d8 0x7fc6138dfb68
| |   | |           |-CallExpr 0x7fc6138e4740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4496:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7fc6138e46a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4496:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   | |           `-CallExpr 0x7fc6138e4840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4496:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7fc6138e47a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:412:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4496:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fc6120da650
| |   | `-ClassTemplatePartialSpecializationDecl 0x7fc6138e4bd8 <line:4502:1, line:4503:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7fc6138e4910 <line:4502:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7fc6138e4978 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7fc6138e4f00 <line:4503:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7fc6138e50d8 prev 0x7fc6138dec58 <line:4507:1, line:4511:1> line:4508:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fc6138e4fb8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138e5040 prev 0x7fc6138debc0 <line:4508:1, line:4511:1> line:4508:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fc6138e5848 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7fc6138e5a98 prev 0x7fc6138def88 <line:4513:1, line:4517:1> line:4514:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fc6138e5900 <line:4513:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138e5a00 prev 0x7fc6138deef0 <line:4514:1, line:4517:1> line:4514:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fc6138e62c8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7fc6138e6498 <line:4573:1, line:4577:1> line:4574:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7fc6138e6380 <line:4573:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138e6400 <line:4574:1, line:4577:1> line:4574:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7fc6138e6710 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7fc6138e6850 <line:4576:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7fc6138e6800 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7fc6138e63c0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7fc6138e6380 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fc6138e6b10 <line:4580:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7fc6138e68c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fc6138e6ab0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7fc6138e6a40 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fc6138e6df8 <line:4596:1, line:4601:1> line:4597:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7fc6138e6b60 <line:4596:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fc6138e6ce8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fc6138e6c98 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fc6138e6d60 <line:4597:1, line:4601:1> line:4597:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7fc6138e70c0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7fc6138e7280 <line:4599:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7fc6138e7210 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7fc6138e7438 <line:4600:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7fc6138e7400 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7fc6138e7398 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7fc6138e7358 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7fc6138e7330 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7fc6138e7300 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7fc6138e7378 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138e7690 <line:4603:1, line:4604:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fc6138e74b0 <line:4603:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138e7920 <line:4604:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7fc6138e8ee8 <line:4606:1, line:4607:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7fc6138e8e20 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7fc6138e9038 <col:38, col:54>
| |   | | `-ReturnStmt 0x7fc6138e9020 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7fc6138e9008 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fc6138e8fe0 <col:47> 'int' lvalue ParmVar 0x7fc6138e8e20 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7fc6138e8f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7fc6138e8fd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fc6138e9168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4609:1, line:4610:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7fc6138e90a0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7fc6138e92b8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7fc6138e92a0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7fc6138e9288 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fc6138e9260 <col:57> 'unsigned int' lvalue ParmVar 0x7fc6138e90a0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7fc6138e9208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7fc6138e9250 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fc6138e93e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4612:1, line:4613:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7fc6138e9320 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7fc6138e9538 <col:40, col:56>
| |   | | `-ReturnStmt 0x7fc6138e9520 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7fc6138e9508 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fc6138e94e0 <col:49> 'long' lvalue ParmVar 0x7fc6138e9320 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7fc6138e9488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7fc6138e94d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fc6138e9668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4615:1, line:4616:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7fc6138e95a0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7fc6138e97b8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7fc6138e97a0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7fc6138e9788 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fc6138e9760 <col:67> 'unsigned long' lvalue ParmVar 0x7fc6138e95a0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7fc6138e9708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7fc6138e9750 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fc6138e98e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4618:1, line:4619:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7fc6138e9820 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7fc6138e9a38 <col:50, col:66>
| |   | | `-ReturnStmt 0x7fc6138e9a20 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7fc6138e9a08 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fc6138e99e0 <col:59> 'long long' lvalue ParmVar 0x7fc6138e9820 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7fc6138e9988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7fc6138e99d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fc6138e9b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4621:1, line:4622:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7fc6138e9aa0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7fc6138e9cb8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7fc6138e9ca0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7fc6138e9c88 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fc6138e9c60 <col:76> 'unsigned long long' lvalue ParmVar 0x7fc6138e9aa0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7fc6138e9c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7fc6138e9c50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fc6138e9e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7fc6138e9d18 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7fc6138e9f70 <col:52, col:68>
| |   | | `-ReturnStmt 0x7fc6138e9f58 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7fc6138e9f40 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fc6138e9f18 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fc6138e9d18 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7fc6138e9ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7fc6138e9f08 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fc6138ea0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7fc6138e9fd0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7fc6138ea220 <col:54, col:70>
| |   | | `-ReturnStmt 0x7fc6138ea208 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7fc6138ea1f0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fc6138ea1c8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fc6138e9fd0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7fc6138ea170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   | `-VisibilityAttr 0x7fc6138ea1b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fc6138ea768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4632:1, line:4635:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7fc6138ea240 <line:4632:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fc6138ea6d0 <line:4633:1, line:4635:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7fc6138ea5c0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7fc6138ea858 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7fc6138ea840 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7fc6138ea818 <col:43> '_Tp' lvalue ParmVar 0x7fc6138ea5c0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fc6138ea7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   |   `-VisibilityAttr 0x7fc6138ea808 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fc6138ea998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4639:1, line:4649:1> line:4640:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7fc6138ea878 <line:4639:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138ea900 <line:4640:1, line:4649:1> line:4640:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7fc6138eac10 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7fc6138eb318 <line:4642:5, line:4644:95> line:4643:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fc6138eaca8 <line:4642:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fc6138eb280 <line:4643:9, line:4644:95> line:4643:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fc6138ead48 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fc6138eb5b8 <line:4645:5, line:4646:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fc6138eb370 <line:4645:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fc6138eb520 <line:4646:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fc6138eb408 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fc6138eb620 <line:4648:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fc6138eb858 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fc6138eb9d8 <line:4651:1, line:4661:1> line:4652:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7fc6138eb8b8 <line:4651:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138eb940 <line:4652:1, line:4661:1> line:4652:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7fc6138ebc50 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7fc6138ec358 <line:4654:5, line:4656:94> line:4655:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fc6138ebce8 <line:4654:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fc6138ec2c0 <line:4655:9, line:4656:94> line:4655:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fc6138ebd88 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fc6138ec578 <line:4657:5, line:4658:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fc6138ec3b0 <line:4657:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fc6138ec4e0 <line:4658:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fc6138ec448 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fc6138ec5e0 <line:4660:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fc6138ec7d8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fc6138ec958 <line:4663:1, line:4667:2> line:4664:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7fc6138ec838 <line:4663:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fc6138ec8c0 <line:4664:1, line:4667:2> line:4664:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7fc6138ed7f8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7fc6138ed8b0 <line:4693:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7fc6138ed9d8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7fc6138eda90 <line:4694:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7fc6138edbb8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7fc6138edc70 <line:4695:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7fc6138edd98 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7fc6138ee1b8 <line:4697:1, line:4701:50> line:4699:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7fc6138ede50 <line:4697:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fc6138edeb8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fc6138ee090 <line:4698:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fc6138ee120 <line:4699:1, line:4701:50> line:4699:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7fc6138ee8f0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc6138eeec8 <line:4703:1, line:4706:75> line:4704:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7fc6138ee9a8 <line:4703:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7fc6138eea18 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fc6138eea88 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7fc6138eeaf8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7fc613900860 <line:4704:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7fc613900cc0 <line:4711:1, line:4714:65> line:4713:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7fc613900918 <line:4711:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fc613900988 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fc6139009f8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7fc613900b90 <line:4712:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fc613900c28 <line:4713:1, line:4714:65> line:4713:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7fc613901308 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fc613901760 <line:4718:1, line:4720:19> line:4719:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7fc6139013c0 <line:4718:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fc613901428 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fc613901498 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7fc613901ae0 <line:4719:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7fc613929cc8 parent 0x7fc612099180 prev 0x7fc6120a8750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:792:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:515:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-FunctionTemplateDecl 0x7fc613901e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:315:1, line:321:1> line:318:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7fc613901b98 <line:315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613901d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:1> line:318:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fc613901c60 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613902570 <line:319:1, line:321:1>
| |   | `-ReturnStmt 0x7fc613902558 <line:320:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7fc613902540 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fc613902520 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7fc6139024f0 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7fc613901f50 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fc613901ef8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fc613901ed8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fc613901eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7fc613901c60 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fc613901f30 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fc6139020c8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7fc6139020b0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fc613902088 <col:37> 'int (float)' lvalue Function 0x7fc61384ee68 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fc613902060 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fc613902040 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fc613901fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7fc613901c60 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fc6139024c0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7fc613902198 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fc613902140 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fc613902120 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fc6139020f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7fc613901c60 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fc613902178 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fc613902310 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7fc6139022f8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fc6139022d0 <col:37> 'int (double)' lvalue Function 0x7fc613850bb0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fc6139022a8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fc613902288 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fc613902218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7fc613901c60 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fc613902490 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7fc613902478 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fc613902450 <col:37> 'int (long double)' lvalue Function 0x7fc613854288 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fc613902428 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fc613902408 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fc613902398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:320:20> '_A1' lvalue ParmVar 0x7fc613901c60 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613901e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc613901ea0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc613902b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:325:1, line:331:1> line:328:1 signbit
| | |-TemplateTypeParmDecl 0x7fc613902590 <line:325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613902ac8 <line:326:1, line:331:1> line:328:1 signbit 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc6139029b0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613902f08 <line:329:1, line:331:1>
| |   | `-ReturnStmt 0x7fc613902ef0 <line:330:5, col:73>
| |   |   `-CallExpr 0x7fc613902ec0 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc613902c10 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7fc613901e00
| |   |     `-CStyleCastExpr 0x7fc613902e98 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613902e50 <col:65> '_A1' lvalue ParmVar 0x7fc6139029b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613902bb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613902c00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613903198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:349:1, line:355:1> line:352:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7fc613902f28 <line:349:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613903100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:355:1> line:352:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7fc613902ff0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc6139038f0 <line:353:1, line:355:1>
| |   | `-ReturnStmt 0x7fc6139038d8 <line:354:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7fc6139038b8 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7fc613903888 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7fc6139032e8 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7fc613903290 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7fc613903270 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7fc613903248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7fc613902ff0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7fc6139032c8 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7fc613903460 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7fc613903448 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7fc613903420 <col:37> 'int (float)' lvalue Function 0x7fc612063798 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7fc6139033f8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7fc6139033d8 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7fc613903368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7fc613902ff0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7fc613903858 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7fc613903530 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fc6139034d8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fc6139034b8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fc613903490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7fc613902ff0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fc613903510 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7fc6139036a8 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7fc613903690 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fc613903668 <col:37> 'int (double)' lvalue Function 0x7fc612063918 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7fc613903640 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7fc613903620 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fc6139035b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7fc613902ff0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7fc613903828 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7fc613903810 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7fc6139037e8 <col:37> 'int (long double)' lvalue Function 0x7fc612063a98 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7fc6139037c0 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7fc6139037a0 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7fc613903730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:354:23> '_A1' lvalue ParmVar 0x7fc613902ff0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc6139031f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc613903238 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc613903ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:359:1, line:365:1> line:362:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fc613903910 <line:359:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613903e08 <line:360:1, line:365:1> line:362:1 fpclassify 'typename std::enable_if<std::is_arithmetic<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613903cf0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613904168 <line:363:1, line:365:1>
| |   | `-ReturnStmt 0x7fc613904150 <line:364:5, col:76>
| |   |   `-CallExpr 0x7fc613904120 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc613903f50 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7fc613903198
| |   |     `-CStyleCastExpr 0x7fc6139040f8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6139040b0 <col:68> '_A1' lvalue ParmVar 0x7fc613903cf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613903ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613903f40 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6139043b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:1, line:389:1> line:386:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7fc613904188 <line:383:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613904318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:389:1> line:386:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fc613904250 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613904b30 <line:387:1, line:389:1>
| |   | `-ReturnStmt 0x7fc613904b18 <line:388:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7fc613904b00 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fc613904ae0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7fc613904ab0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7fc613904500 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fc6139044a8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fc613904488 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fc613904460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7fc613904250 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fc6139044e0 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fc613904688 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fc613904670 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fc613904648 <col:37> 'int (float)' lvalue Function 0x7fc61384bb90 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fc613904620 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fc613904600 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fc613904580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7fc613904250 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fc613904a80 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7fc613904758 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fc613904700 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fc6139046e0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fc6139046b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7fc613904250 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fc613904738 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fc6139048d0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fc6139048b8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fc613904890 <col:37> 'int (double)' lvalue Function 0x7fc61384c400 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fc613904868 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fc613904848 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fc6139047d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7fc613904250 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fc613904a50 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fc613904a38 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fc613904a10 <col:37> 'int (long double)' lvalue Function 0x7fc61384d100 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fc6139049e8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fc6139049c8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fc613904958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:21> '_A1' lvalue ParmVar 0x7fc613904250 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613904408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc613904450 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc613904ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:393:1, line:399:1> line:396:1 isfinite
| | |-TemplateTypeParmDecl 0x7fc613904b50 <line:393:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613904f58 <line:394:1, line:399:1> line:396:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613904e80 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc6139052b8 <line:397:1, line:399:1>
| |   | `-ReturnStmt 0x7fc6139052a0 <line:398:5, col:74>
| |   |   `-CallExpr 0x7fc613905270 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc6139050a0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7fc6139043b0
| |   |     `-CStyleCastExpr 0x7fc613905248 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613905200 <col:66> '_A1' lvalue ParmVar 0x7fc613904e80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613905048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613905090 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613905500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:407:1, line:413:1> line:410:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7fc6139052d8 <line:407:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613905468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:413:1> line:410:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fc6139053a0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613905c70 <line:411:1, line:413:1>
| |   | `-ReturnStmt 0x7fc613905c58 <line:412:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7fc613905c40 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fc613905c20 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7fc613905bf0 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7fc613905650 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fc6139055f8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fc6139055d8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fc6139055b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7fc6139053a0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fc613905630 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fc6139057c8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fc6139057b0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fc613905788 <col:37> 'int (float)' lvalue Function 0x7fc61384d970 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fc613905760 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fc613905740 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fc6139056d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7fc6139053a0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fc613905bc0 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7fc613905898 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fc613905840 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fc613905820 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fc6139057f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7fc6139053a0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fc613905878 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fc613905a10 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fc6139059f8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fc6139059d0 <col:37> 'int (double)' lvalue Function 0x7fc61384dc90 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fc6139059a8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fc613905988 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fc613905918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7fc6139053a0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fc613905b90 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fc613905b78 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fc613905b50 <col:37> 'int (long double)' lvalue Function 0x7fc61384e3b0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fc613905b28 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fc613905b08 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fc613905a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:412:18> '_A1' lvalue ParmVar 0x7fc6139053a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613905558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc6139055a0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc613906130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:417:1, line:423:1> line:420:1 isinf
| | |-TemplateTypeParmDecl 0x7fc613905c90 <line:417:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613906098 <line:418:1, line:423:1> line:420:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613905fc0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc6139063f8 <line:421:1, line:423:1>
| |   | `-ReturnStmt 0x7fc6139063e0 <line:422:5, col:71>
| |   |   `-CallExpr 0x7fc6139063b0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc6139061e0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7fc613905500
| |   |     `-CStyleCastExpr 0x7fc613906388 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613906340 <col:63> '_A1' lvalue ParmVar 0x7fc613905fc0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613906188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6139061d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613906698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:431:1, line:437:1> line:434:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7fc613906418 <line:431:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613906600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:437:1> line:434:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fc6139064e0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613906e08 <line:435:1, line:437:1>
| |   | `-ReturnStmt 0x7fc613906df0 <line:436:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7fc613906dd8 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fc613906db8 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7fc613906d88 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7fc6139067e8 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fc613906790 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fc613906770 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fc613906748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7fc6139064e0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fc6139067c8 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fc613906960 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fc613906948 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fc613906920 <col:37> 'int (float)' lvalue Function 0x7fc61384e6d0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fc6139068f8 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fc6139068d8 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fc613906868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7fc6139064e0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fc613906d58 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7fc613906a30 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fc6139069d8 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fc6139069b8 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fc613906990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7fc6139064e0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fc613906a10 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fc613906ba8 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fc613906b90 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fc613906b68 <col:37> 'int (double)' lvalue Function 0x7fc61384e958 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fc613906b40 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fc613906b20 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fc613906ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7fc6139064e0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fc613906d28 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fc613906d10 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fc613906ce8 <col:37> 'int (long double)' lvalue Function 0x7fc61384ebe0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fc613906cc0 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fc613906ca0 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fc613906c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:436:18> '_A1' lvalue ParmVar 0x7fc6139064e0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc6139066f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc613906738 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc6139072d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:441:1, line:447:1> line:444:1 isnan
| | |-TemplateTypeParmDecl 0x7fc613906e28 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613907238 <line:442:1, line:447:1> line:444:1 isnan 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613907160 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613907598 <line:445:1, line:447:1>
| |   | `-ReturnStmt 0x7fc613907580 <line:446:5, col:71>
| |   |   `-CallExpr 0x7fc613907550 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc613907380 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7fc613906698
| |   |     `-CStyleCastExpr 0x7fc613907528 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6139074e0 <col:63> '_A1' lvalue ParmVar 0x7fc613907160 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613907328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613907370 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6139077e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:455:1, line:461:1> line:458:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7fc6139075b8 <line:455:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613907748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:461:1> line:458:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fc613907680 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613907f50 <line:459:1, line:461:1>
| |   | `-ReturnStmt 0x7fc613907f38 <line:460:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7fc613907f20 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fc613907f00 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7fc613907ed0 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7fc613907930 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fc6139078d8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fc6139078b8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fc613907890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7fc613907680 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fc613907910 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fc613907aa8 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fc613907a90 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fc613907a68 <col:37> 'int (float)' lvalue Function 0x7fc613856838 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fc613907a40 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fc613907a20 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fc6139079b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7fc613907680 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fc613907ea0 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7fc613907b78 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fc613907b20 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fc613907b00 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fc613907ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7fc613907680 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fc613907b58 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fc613907cf0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fc613907cd8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fc613907cb0 <col:37> 'int (double)' lvalue Function 0x7fc613857090 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fc613907c88 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fc613907c68 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fc613907bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7fc613907680 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fc613907e70 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fc613907e58 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fc613907e30 <col:37> 'int (long double)' lvalue Function 0x7fc6138574d8 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fc613907e08 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fc613907de8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fc613907d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:460:21> '_A1' lvalue ParmVar 0x7fc613907680 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613907838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc613907880 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc613908410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:465:1, line:471:1> line:468:1 isnormal
| | |-TemplateTypeParmDecl 0x7fc613907f70 <line:465:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613908378 <line:466:1, line:471:1> line:468:1 isnormal 'typename std::enable_if<std::is_arithmetic<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc6139082a0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc6139086d8 <line:469:1, line:471:1>
| |   | `-ReturnStmt 0x7fc6139086c0 <line:470:5, col:74>
| |   |   `-CallExpr 0x7fc613908690 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc6139084c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7fc6139077e0
| |   |     `-CStyleCastExpr 0x7fc613908668 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613908620 <col:66> '_A1' lvalue ParmVar 0x7fc6139082a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613908468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6139084b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613908a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:479:1, line:485:1> line:482:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7fc6139086f8 <line:479:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc613908768 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc6139089c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:485:1> line:482:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fc613908838 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc6139088a8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc613908dc8 <line:483:1, line:485:1>
| |   | `-ReturnStmt 0x7fc613908db0 <line:484:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7fc613908d78 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fc613908cc0 <col:25> '<builtin fn type>' Function 0x7fc613908bd0 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fc613908d10 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fc613908ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:484:22> '_A1' lvalue ParmVar 0x7fc613908838 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fc613908d58 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fc613908d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:484:32> '_A2' lvalue ParmVar 0x7fc6139088a8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc613908ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc613908b08 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc613909630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:489:1, line:501:1> line:497:1 isgreater
| | |-TemplateTypeParmDecl 0x7fc613908de8 <line:489:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc613908e58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc613909598 <line:490:1, line:501:1> line:497:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc613909400 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc613909470 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc613909b20 <line:498:1, line:501:1>
| |   | |-DeclStmt 0x7fc613909978 <line:499:5, col:57>
| |   | | `-TypedefDecl 0x7fc613909920 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc6139098b0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fc613909b08 <line:500:5, col:61>
| |   |   `-CallExpr 0x7fc613909ad0 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc613909990 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7fc613908a60
| |   |     |-CStyleCastExpr 0x7fc613909a48 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc613909a10 <col:37> '_A1' lvalue ParmVar 0x7fc613909400 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc613909aa8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613909a70 <col:53> '_A2' lvalue ParmVar 0x7fc613909470 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc613909690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6139096d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613909e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:509:1, line:515:1> line:512:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7fc613909b48 <line:509:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc613909bb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc613909dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:515:1> line:512:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fc613909c88 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc613909cf8 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390a170 <line:513:1, line:515:1>
| |   | `-ReturnStmt 0x7fc61390a158 <line:514:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7fc61390a120 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fc61390a068 <col:30> '<builtin fn type>' Function 0x7fc613909f78 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fc61390a0b8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fc61390a090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:514:27> '_A1' lvalue ParmVar 0x7fc613909c88 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fc61390a100 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fc61390a0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:514:37> '_A2' lvalue ParmVar 0x7fc613909cf8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc613909ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc613909f18 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc61390a880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:519:1, line:531:1> line:527:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7fc61390a190 <line:519:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390a1f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390a7e8 <line:520:1, line:531:1> line:527:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61390a690 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390a700 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390aca0 <line:528:1, line:531:1>
| |   | |-DeclStmt 0x7fc61390aaf8 <line:529:5, col:57>
| |   | | `-TypedefDecl 0x7fc61390aaa0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61390aa30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fc61390ac88 <line:530:5, col:66>
| |   |   `-CallExpr 0x7fc61390ac50 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61390ab10 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7fc613909e70
| |   |     |-CStyleCastExpr 0x7fc61390abc8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61390ab90 <col:42> '_A1' lvalue ParmVar 0x7fc61390a690 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61390ac28 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61390abf0 <col:58> '_A2' lvalue ParmVar 0x7fc61390a700 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390a8e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61390a928 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61390aff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:539:1, line:545:1> line:542:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7fc61390acc8 <line:539:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390ad38 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390af58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:545:1> line:542:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fc61390ae08 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390ae78 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390b2f0 <line:543:1, line:545:1>
| |   | `-ReturnStmt 0x7fc61390b2d8 <line:544:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7fc61390b2a0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fc61390b1e8 <col:22> '<builtin fn type>' Function 0x7fc61390b0f8 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fc61390b238 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fc61390b210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:544:19> '_A1' lvalue ParmVar 0x7fc61390ae08 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fc61390b280 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fc61390b258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:544:29> '_A2' lvalue ParmVar 0x7fc61390ae78 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390b050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc61390b098 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc61390b9f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:549:1, line:561:1> line:557:1 isless
| | |-TemplateTypeParmDecl 0x7fc61390b310 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390b378 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390b958 <line:550:1, line:561:1> line:557:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61390b800 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390b870 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390be10 <line:558:1, line:561:1>
| |   | |-DeclStmt 0x7fc61390bc68 <line:559:5, col:57>
| |   | | `-TypedefDecl 0x7fc61390bc10 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61390bba0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fc61390bdf8 <line:560:5, col:58>
| |   |   `-CallExpr 0x7fc61390bdc0 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61390bc80 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7fc61390aff0
| |   |     |-CStyleCastExpr 0x7fc61390bd38 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61390bd00 <col:34> '_A1' lvalue ParmVar 0x7fc61390b800 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61390bd98 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61390bd60 <col:50> '_A2' lvalue ParmVar 0x7fc61390b870 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390ba50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61390ba98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61390c160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:569:1, line:575:1> line:572:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7fc61390be38 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390bea8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390c0c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:575:1> line:572:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fc61390bf78 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390bfe8 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390c460 <line:573:1, line:575:1>
| |   | `-ReturnStmt 0x7fc61390c448 <line:574:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7fc61390c410 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fc61390c358 <col:27> '<builtin fn type>' Function 0x7fc61390c268 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fc61390c3a8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fc61390c380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:574:24> '_A1' lvalue ParmVar 0x7fc61390bf78 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fc61390c3f0 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fc61390c3c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:574:34> '_A2' lvalue ParmVar 0x7fc61390bfe8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390c1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc61390c208 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc61390cba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:579:1, line:591:1> line:587:1 islessequal
| | |-TemplateTypeParmDecl 0x7fc61390c480 <line:579:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390c4e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390cb08 <line:580:1, line:591:1> line:587:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61390c9b0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390ca20 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390cfc0 <line:588:1, line:591:1>
| |   | |-DeclStmt 0x7fc61390ce18 <line:589:5, col:57>
| |   | | `-TypedefDecl 0x7fc61390cdc0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61390cd50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fc61390cfa8 <line:590:5, col:63>
| |   |   `-CallExpr 0x7fc61390cf70 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61390ce30 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7fc61390c160
| |   |     |-CStyleCastExpr 0x7fc61390cee8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61390ceb0 <col:39> '_A1' lvalue ParmVar 0x7fc61390c9b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61390cf48 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61390cf10 <col:55> '_A2' lvalue ParmVar 0x7fc61390ca20 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390cc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61390cc48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61390d310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:599:1, line:605:1> line:602:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7fc61390cfe8 <line:599:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390d058 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390d278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:605:1> line:602:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fc61390d128 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390d198 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390d610 <line:603:1, line:605:1>
| |   | `-ReturnStmt 0x7fc61390d5f8 <line:604:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7fc61390d5c0 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fc61390d508 <col:29> '<builtin fn type>' Function 0x7fc61390d418 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fc61390d558 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fc61390d530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:604:26> '_A1' lvalue ParmVar 0x7fc61390d128 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fc61390d5a0 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fc61390d578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:604:36> '_A2' lvalue ParmVar 0x7fc61390d198 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390d370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc61390d3b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc61390dd10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:609:1, line:621:1> line:617:1 islessgreater
| | |-TemplateTypeParmDecl 0x7fc61390d630 <line:609:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390d698 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390dc78 <line:610:1, line:621:1> line:617:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61390db20 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390db90 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390e130 <line:618:1, line:621:1>
| |   | |-DeclStmt 0x7fc61390df88 <line:619:5, col:57>
| |   | | `-TypedefDecl 0x7fc61390df30 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61390dec0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fc61390e118 <line:620:5, col:65>
| |   |   `-CallExpr 0x7fc61390e0e0 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61390dfa0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7fc61390d310
| |   |     |-CStyleCastExpr 0x7fc61390e058 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61390e020 <col:41> '_A1' lvalue ParmVar 0x7fc61390db20 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61390e0b8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61390e080 <col:57> '_A2' lvalue ParmVar 0x7fc61390db90 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390dd70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61390ddb8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61390e480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:629:1, line:635:1> line:632:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7fc61390e158 <line:629:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390e1c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390e3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:635:1> line:632:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fc61390e298 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390e308 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390e7f8 <line:633:1, line:635:1>
| |   | `-ReturnStmt 0x7fc61390e7e0 <line:634:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7fc61390e7a8 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fc61390e6f0 <col:27> '<builtin fn type>' Function 0x7fc61390e600 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fc61390e740 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fc61390e718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:634:24> '_A1' lvalue ParmVar 0x7fc61390e298 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fc61390e788 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fc61390e760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:634:34> '_A2' lvalue ParmVar 0x7fc61390e308 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390e4e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
| |   `-VisibilityAttr 0x7fc61390e528 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fc61390ef00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:639:1, line:651:1> line:647:1 isunordered
| | |-TemplateTypeParmDecl 0x7fc61390e818 <line:639:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61390e888 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61390ee68 <line:640:1, line:651:1> line:647:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61390ed10 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61390ed80 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61390f320 <line:648:1, line:651:1>
| |   | |-DeclStmt 0x7fc61390f178 <line:649:5, col:57>
| |   | | `-TypedefDecl 0x7fc61390f120 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61390f0b0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fc61390f308 <line:650:5, col:63>
| |   |   `-CallExpr 0x7fc61390f2d0 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61390f190 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7fc61390e480
| |   |     |-CStyleCastExpr 0x7fc61390f248 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61390f210 <col:39> '_A1' lvalue ParmVar 0x7fc61390ed10 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61390f2a8 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61390f270 <col:55> '_A2' lvalue ParmVar 0x7fc61390ed80 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61390ef60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61390efa8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61390f428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:658:1, line:660:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61390f390 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61390f618 <col:31, col:57>
| | | `-ReturnStmt 0x7fc61390f600 <col:32, col:55>
| | |   `-CallExpr 0x7fc61390f5b8 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7fc61390f5a0 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61390f540 <col:39, col:41> 'float (float)' lvalue Function 0x7fc6138658f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61390f5e8 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61390f578 <col:47> 'float' lvalue ParmVar 0x7fc61390f390 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61390f4c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61390f510 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61390f718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:662:1, line:664:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7fc61390f680 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7fc61390f908 <col:32, col:57>
| | | `-ReturnStmt 0x7fc61390f8f0 <col:33, col:55>
| | |   `-CallExpr 0x7fc61390f8a8 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7fc61390f890 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61390f830 <col:40, col:42> 'double (double)' lvalue Function 0x7fc613865a90 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7fc61390f8d8 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61390f868 <col:47> 'double' lvalue ParmVar 0x7fc61390f680 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7fc61390f7b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61390f800 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61390fa08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:666:1, line:668:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61390f970 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61390fbf8 <col:37, col:63>
| | | `-ReturnStmt 0x7fc61390fbe0 <col:38, col:61>
| | |   `-CallExpr 0x7fc61390fb98 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61390fb80 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61390fb20 <col:45, col:47> 'long double (long double)' lvalue Function 0x7fc613865c30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61390fbc8 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61390fb58 <col:53> 'long double' lvalue ParmVar 0x7fc61390f970 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61390faa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61390faf0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61390fcf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:674:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61390fc60 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61390fee8 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61390fed0 <col:84, col:107>
| | |   `-CallExpr 0x7fc61390fe88 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61390fe70 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61390fe10 <col:91, col:93> 'float (float)' lvalue Function 0x7fc613857938 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61390feb8 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61390fe48 <col:99> 'float' lvalue ParmVar 0x7fc61390fc60 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61390fd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61390fde0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61390ffe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:675:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61390ff50 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc6139101d8 <col:83, col:109>
| | | `-ReturnStmt 0x7fc6139101c0 <col:84, col:107>
| | |   `-CallExpr 0x7fc613910178 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613910160 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613910100 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613857c78 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc6139101a8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613910138 <col:99> 'long double' lvalue ParmVar 0x7fc61390ff50 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc613910088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6139100d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6139287b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1, line:681:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7fc6139101f8 <line:678:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613928718 <line:679:1, line:681:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613928600 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61392a2b0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61392a298 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61392a268 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61392a250 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61392a218 <col:38, col:40> 'double (double)' lvalue Function 0x7fc613857ad8 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc613928930 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6139288f0 <col:53> '_A1' lvalue ParmVar 0x7fc613928600 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613928808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613928850 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392a3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:686:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61392a318 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61392a5a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61392a588 <col:84, col:107>
| | |   `-CallExpr 0x7fc61392a540 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61392a528 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392a4c8 <col:91, col:93> 'float (float)' lvalue Function 0x7fc613857e18 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61392a570 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392a500 <col:99> 'float' lvalue ParmVar 0x7fc61392a318 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61392a450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392a498 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392a6b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:687:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61392a618 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61392a8a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61392a888 <col:84, col:107>
| | |   `-CallExpr 0x7fc61392a840 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61392a828 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392a7c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc6138581a0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61392a870 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392a800 <col:99> 'long double' lvalue ParmVar 0x7fc61392a618 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61392a750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392a798 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61392ad60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:690:1, line:693:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7fc61392a8c0 <line:690:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61392acc8 <line:691:1, line:693:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61392abf0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61392b280 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61392b268 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61392b238 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61392b220 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61392b1e8 <col:38, col:40> 'double (double)' lvalue Function 0x7fc613858000 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61392aee0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61392aea0 <col:53> '_A1' lvalue ParmVar 0x7fc61392abf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61392adb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61392ae00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392b380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:698:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61392b2e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61392b570 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61392b558 <col:84, col:107>
| | |   `-CallExpr 0x7fc61392b510 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61392b4f8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392b498 <col:91, col:93> 'float (float)' lvalue Function 0x7fc613858340 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61392b540 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392b4d0 <col:99> 'float' lvalue ParmVar 0x7fc61392b2e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61392b420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392b468 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392b670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:699:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61392b5d8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61392b860 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61392b848 <col:84, col:107>
| | |   `-CallExpr 0x7fc61392b800 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61392b7e8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392b788 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613858680 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61392b830 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392b7c0 <col:99> 'long double' lvalue ParmVar 0x7fc61392b5d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61392b710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392b758 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61392bd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:705:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7fc61392b880 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61392bc88 <line:703:1, line:705:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61392bbb0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61392c240 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61392c228 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61392c1f8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61392c1e0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61392c1a8 <col:38, col:40> 'double (double)' lvalue Function 0x7fc6138584e0 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61392bea0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61392be60 <col:53> '_A1' lvalue ParmVar 0x7fc61392bbb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61392bd78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61392bdc0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392c3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:710:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc61392c2a8 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fc61392c320 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61392c630 <col:106, col:143>
| | | `-ReturnStmt 0x7fc61392c618 <col:107, col:141>
| | |   `-CallExpr 0x7fc61392c5b0 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fc61392c598 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392c4e0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fc6138588e8 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc61392c5e8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61392c518 <col:123> 'float' lvalue ParmVar 0x7fc61392c2a8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fc61392c600 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392c540 <col:133> 'float' lvalue ParmVar 0x7fc61392c320 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61392c468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392c4b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392c7b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:711:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61392c698 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fc61392c710 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61392ca20 <col:106, col:143>
| | | `-ReturnStmt 0x7fc61392ca08 <col:107, col:141>
| | |   `-CallExpr 0x7fc61392c9a0 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61392c988 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392c8d0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fc613858e48 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc61392c9d8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61392c908 <col:123> 'long double' lvalue ParmVar 0x7fc61392c698 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fc61392c9f0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392c930 <col:133> 'long double' lvalue ParmVar 0x7fc61392c710 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61392c858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392c8a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61392d380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:714:1, line:728:1> line:722:1 atan2
| | |-TemplateTypeParmDecl 0x7fc61392ca40 <line:714:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61392caa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61392d2e8 <line:715:1, line:728:1> line:722:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61392d150 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7fc61392d1c0 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7fc61392dc88 <line:723:1, line:728:1>
| |   | |-DeclStmt 0x7fc61392d5f8 <line:724:5, col:66>
| |   | | `-TypedefDecl 0x7fc61392d5a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61392d530 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc61392dad0 <line:725:5, line:726:68>
| |   | | `-StaticAssertDecl 0x7fc61392da98 <line:725:5, line:726:67> line:725:5
| |   | |   |-ParenExpr 0x7fc61392da50 <col:19, line:726:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc61392da30 <line:725:20, line:726:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc61392da10 <line:725:21, line:726:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc61392d9e8 <line:725:22, line:726:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc61392d7e8 <line:725:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc61392d9a8 <line:726:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc61392da70 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc61392dc70 <line:727:5, col:68>
| |   |   `-CallExpr 0x7fc61392dc38 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61392db08 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7fc613858b98 0x7fc61392c3c0 0x7fc61392c7b0 0x7fc61392d380
| |   |     |-CStyleCastExpr 0x7fc61392dbb0 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61392db78 <col:35> '_A1' lvalue ParmVar 0x7fc61392d150 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61392dc10 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61392dbd8 <col:60> '_A2' lvalue ParmVar 0x7fc61392d1c0 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61392d3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61392d428 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392dd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:733:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61392dd00 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61392df88 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61392df70 <col:84, col:107>
| | |   `-CallExpr 0x7fc61392df28 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61392df10 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392deb0 <col:91, col:93> 'float (float)' lvalue Function 0x7fc6138688a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61392df58 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392dee8 <col:99> 'float' lvalue ParmVar 0x7fc61392dd00 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61392de38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392de80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392e088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:734:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61392dff0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61392e278 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61392e260 <col:84, col:107>
| | |   `-CallExpr 0x7fc61392e218 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61392e200 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392e1a0 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613868be8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61392e248 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392e1d8 <col:99> 'long double' lvalue ParmVar 0x7fc61392dff0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61392e128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392e170 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61392e770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:737:1, line:740:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7fc61392e298 <line:737:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61392e6d8 <line:738:1, line:740:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61392e600 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61392ec90 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61392ec78 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61392ec48 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61392ec30 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61392ebf8 <col:38, col:40> 'double (double)' lvalue Function 0x7fc613868a48 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61392e8f0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61392e8b0 <col:53> '_A1' lvalue ParmVar 0x7fc61392e600 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61392e7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61392e810 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392ed90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:745:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61392ecf8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61392ef80 <col:82, col:107>
| | | `-ReturnStmt 0x7fc61392ef68 <col:83, col:105>
| | |   `-CallExpr 0x7fc61392ef20 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fc61392ef08 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392eea8 <col:90, col:92> 'float (float)' lvalue Function 0x7fc613859830 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61392ef50 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392eee0 <col:97> 'float' lvalue ParmVar 0x7fc61392ecf8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61392ee30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392ee78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392f080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:746:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61392efe8 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61392f270 <col:82, col:107>
| | | `-ReturnStmt 0x7fc61392f258 <col:83, col:105>
| | |   `-CallExpr 0x7fc61392f210 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61392f1f8 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392f198 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fc613859b70 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61392f240 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392f1d0 <col:97> 'long double' lvalue ParmVar 0x7fc61392efe8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61392f120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392f168 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61392f730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:749:1, line:752:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7fc61392f290 <line:749:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61392f698 <line:750:1, line:752:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61392f5c0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61392fc50 <col:29, col:61>
| |   | `-ReturnStmt 0x7fc61392fc38 <col:30, col:59>
| |   |   `-CallExpr 0x7fc61392fc08 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61392fbf0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61392fbb8 <col:37, col:39> 'double (double)' lvalue Function 0x7fc6138599d0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61392f8b0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61392f870 <col:51> '_A1' lvalue ParmVar 0x7fc61392f5c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61392f788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61392f7d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61392fd50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:757:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61392fcb8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61392ff40 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61392ff28 <col:84, col:107>
| | |   `-CallExpr 0x7fc61392fee0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61392fec8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61392fe68 <col:91, col:93> 'float (float)' lvalue Function 0x7fc61385bd90 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61392ff10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61392fea0 <col:99> 'float' lvalue ParmVar 0x7fc61392fcb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61392fdf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61392fe38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613930040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:758:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61392ffa8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc613930230 <col:83, col:109>
| | | `-ReturnStmt 0x7fc613930218 <col:84, col:107>
| | |   `-CallExpr 0x7fc6139301d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc6139301b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613930158 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc61385c8f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc613930200 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613930190 <col:99> 'long double' lvalue ParmVar 0x7fc61392ffa8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc6139300e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613930128 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613930710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:761:1, line:764:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7fc613930250 <line:761:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613930678 <line:762:1, line:764:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613930580 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613930c30 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc613930c18 <col:31, col:61>
| |   |   `-CallExpr 0x7fc613930be8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc613930bd0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613930b98 <col:38, col:40> 'double (double)' lvalue Function 0x7fc61385bf30 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc613930890 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613930850 <col:53> '_A1' lvalue ParmVar 0x7fc613930580 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613930768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6139307b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613930d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:769:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc613930c98 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc613930f20 <col:82, col:107>
| | | `-ReturnStmt 0x7fc613930f08 <col:83, col:105>
| | |   `-CallExpr 0x7fc613930ec0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fc613930ea8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613930e48 <col:90, col:92> 'float (float)' lvalue Function 0x7fc61385d450 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc613930ef0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613930e80 <col:97> 'float' lvalue ParmVar 0x7fc613930c98 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc613930dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613930e18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613931020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:770:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc613930f88 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc613931210 <col:82, col:107>
| | | `-ReturnStmt 0x7fc6139311f8 <col:83, col:105>
| | |   `-CallExpr 0x7fc6139311b0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613931198 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613931138 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fc61385d800 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc6139311e0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613931170 <col:97> 'long double' lvalue ParmVar 0x7fc613930f88 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc6139310c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613931108 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6139316d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:773:1, line:776:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7fc613931230 <line:773:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613931638 <line:774:1, line:776:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613931560 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613931bf0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fc613931bd8 <col:30, col:59>
| |   |   `-CallExpr 0x7fc613931ba8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fc613931b90 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613931b58 <col:37, col:39> 'double (double)' lvalue Function 0x7fc61385d5f0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc613931850 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613931810 <col:51> '_A1' lvalue ParmVar 0x7fc613931560 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613931728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613931770 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613931cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:781:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc613931c58 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc613931ee0 <col:83, col:109>
| | | `-ReturnStmt 0x7fc613931ec8 <col:84, col:107>
| | |   `-CallExpr 0x7fc613931e80 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc613931e68 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613931e08 <col:91, col:93> 'float (float)' lvalue Function 0x7fc6138658f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc613931eb0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613931e40 <col:99> 'float' lvalue ParmVar 0x7fc613931c58 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc613931d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613931dd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613931fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:782:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc613931f48 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc6139321d0 <col:83, col:109>
| | | `-ReturnStmt 0x7fc6139321b8 <col:84, col:107>
| | |   `-CallExpr 0x7fc613932170 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613932158 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6139320f8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613865c30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc6139321a0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613932130 <col:99> 'long double' lvalue ParmVar 0x7fc613931f48 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc613932080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6139320c8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613932698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:785:1, line:788:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7fc6139321f0 <line:785:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613932600 <line:786:1, line:788:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613932520 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613932bc0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc613932ba8 <col:31, col:61>
| |   |   `-CallExpr 0x7fc613932b78 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc613932b60 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613932b28 <col:38, col:40> 'double (double)' lvalue Function 0x7fc613865a90 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc613932818 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6139327d8 <col:53> '_A1' lvalue ParmVar 0x7fc613932520 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc6139326f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613932738 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613932cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:793:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc613932c28 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc613932eb0 <col:84, col:111>
| | | `-ReturnStmt 0x7fc613932e98 <col:85, col:109>
| | |   `-CallExpr 0x7fc613932e50 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc613932e38 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613932dd8 <col:92, col:94> 'float (float)' lvalue Function 0x7fc613868d88 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc613932e80 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613932e10 <col:101> 'float' lvalue ParmVar 0x7fc613932c28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc613932d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613932da8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613932fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:794:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc613932f18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc6139331a0 <col:84, col:111>
| | | `-ReturnStmt 0x7fc613933188 <col:85, col:109>
| | |   `-CallExpr 0x7fc613933140 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613933128 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6139330c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc6138690c8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc613933170 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613933100 <col:101> 'long double' lvalue ParmVar 0x7fc613932f18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc613933050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613933098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613933660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:797:1, line:800:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7fc6139331c0 <line:797:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc6139335c8 <line:798:1, line:800:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc6139334f0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613933b80 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc613933b68 <col:32, col:63>
| |   |   `-CallExpr 0x7fc613933b38 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fc613933b20 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613933ae8 <col:39, col:41> 'double (double)' lvalue Function 0x7fc613868f28 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc6139337e0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6139337a0 <col:55> '_A1' lvalue ParmVar 0x7fc6139334f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc6139336b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613933700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613933d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:805:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc613933be8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc613933c60 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc613933f40 <col:105, col:141>
| | | `-ReturnStmt 0x7fc613933f28 <col:106, col:139>
| | |   `-CallExpr 0x7fc613933ec0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fc613933ea8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613933e20 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fc61386bd60 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc613933ef8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613933e58 <col:121> 'float' lvalue ParmVar 0x7fc613933be8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc613933f10 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613933e80 <col:131> 'float' lvalue ParmVar 0x7fc613933c60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc613933da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613933df0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc6139340c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc613933fa8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc613934020 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc613934300 <col:105, col:141>
| | | `-ReturnStmt 0x7fc6139342e8 <col:106, col:139>
| | |   `-CallExpr 0x7fc613934280 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613934268 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6139341e0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fc61386c1b0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc6139342b8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613934218 <col:121> 'long double' lvalue ParmVar 0x7fc613933fa8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc6139342d0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613934240 <col:131> 'long double' lvalue ParmVar 0x7fc613934020 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc613934168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6139341b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613934b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:809:1, line:823:1> line:817:1 fmod
| | |-TemplateTypeParmDecl 0x7fc613934320 <line:809:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc613934388 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc613934ae8 <line:810:1, line:823:1> line:817:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc613934990 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc613934a00 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc6139353a8 <line:818:1, line:823:1>
| |   | |-DeclStmt 0x7fc613934df8 <line:819:5, col:66>
| |   | | `-TypedefDecl 0x7fc613934da0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc613934d30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc6139351f0 <line:820:5, line:821:68>
| |   | | `-StaticAssertDecl 0x7fc6139351b8 <line:820:5, line:821:67> line:820:5
| |   | |   |-ParenExpr 0x7fc613935170 <col:19, line:821:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc613935150 <line:820:20, line:821:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc613935130 <line:820:21, line:821:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc613935108 <line:820:22, line:821:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc613934f68 <line:820:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc6139350c8 <line:821:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc613935190 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc613935390 <line:822:5, col:67>
| |   |   `-CallExpr 0x7fc613935358 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc613935228 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7fc61386bf88 0x7fc613933d00 0x7fc6139340c0 0x7fc613934b80
| |   |     |-CStyleCastExpr 0x7fc6139352d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc613935298 <col:34> '_A1' lvalue ParmVar 0x7fc613934990 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc613935330 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6139352f8 <col:59> '_A2' lvalue ParmVar 0x7fc613934a00 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc613934be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613934c28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613935538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:828:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fc613935420 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc613935498 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fc6139357d0 <col:99, col:136>
| | | `-ReturnStmt 0x7fc6139357b8 <col:100, col:134>
| | |   `-CallExpr 0x7fc613935750 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7fc613935738 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613935658 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7fc613862d88 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7fc613935788 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613935690 <col:116> 'float' lvalue ParmVar 0x7fc613935420 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc6139357a0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6139356b8 <col:126> 'int *' lvalue ParmVar 0x7fc613935498 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fc6139355e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613935628 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613935950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:829:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fc613935838 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc6139358b0 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fc613935bf0 <col:99, col:136>
| | | `-ReturnStmt 0x7fc613935bd8 <col:100, col:134>
| | |   `-CallExpr 0x7fc613935b70 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613935b58 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613935a70 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7fc6138632c8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7fc613935ba8 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613935aa8 <col:116> 'long double' lvalue ParmVar 0x7fc613935838 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc613935bc0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613935ad0 <col:126> 'int *' lvalue ParmVar 0x7fc6139358b0 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fc6139359f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613935a40 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613936180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:832:1, line:835:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7fc613935c10 <line:832:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc6139360e8 <line:833:1, line:835:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fc613935f40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc613935fb8 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7fc613937758 <col:46, col:90>
| |   | `-ReturnStmt 0x7fc613937740 <col:47, col:88>
| |   |   `-CallExpr 0x7fc6139376f0 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6139376d8 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613937678 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7fc613863028 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7fc613936308 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc6139362c8 <col:70> '_A1' lvalue ParmVar 0x7fc613935f40 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fc613937728 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fc613936330 <col:80> 'int *' lvalue ParmVar 0x7fc613935fb8 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7fc6139361e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613936228 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc6139378d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:840:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fc6139377c0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc613937838 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fc613937b40 <col:98, col:135>
| | | `-ReturnStmt 0x7fc613937b28 <col:99, col:133>
| | |   `-CallExpr 0x7fc613937ac0 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7fc613937aa8 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6139379f8 <col:106, col:108> 'float (float, int)' lvalue Function 0x7fc613861538 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fc613937af8 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613937a30 <col:115> 'float' lvalue ParmVar 0x7fc6139377c0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc613937b10 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613937a58 <col:125> 'int' lvalue ParmVar 0x7fc613937838 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fc613937980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6139379c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613937cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:841:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fc613937ba8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc613937c20 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fc613937f30 <col:98, col:135>
| | | `-ReturnStmt 0x7fc613937f18 <col:99, col:133>
| | |   `-CallExpr 0x7fc613937eb0 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613937e98 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613937de0 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7fc613862ab8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fc613937ee8 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613937e18 <col:115> 'long double' lvalue ParmVar 0x7fc613937ba8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc613937f00 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613937e40 <col:125> 'int' lvalue ParmVar 0x7fc613937c20 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fc613937d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613937db0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6139384c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:844:1, line:847:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7fc613937f50 <line:844:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613938428 <line:845:1, line:847:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fc613938280 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc6139382f8 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7fc613938a58 <col:45, col:89>
| |   | `-ReturnStmt 0x7fc613938a40 <col:46, col:87>
| |   |   `-CallExpr 0x7fc6139389f0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6139389d8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613938978 <col:53, col:55> 'double (double, int)' lvalue Function 0x7fc613862800 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fc613938648 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc613938608 <col:69> '_A1' lvalue ParmVar 0x7fc613938280 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fc613938a28 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fc613938670 <col:79> 'int' lvalue ParmVar 0x7fc6139382f8 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7fc613938520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613938568 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613938b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:852:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc613938ac0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc613938d48 <col:82, col:107>
| | | `-ReturnStmt 0x7fc613938d30 <col:83, col:105>
| | |   `-CallExpr 0x7fc613938ce8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fc613938cd0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613938c70 <col:90, col:92> 'float (float)' lvalue Function 0x7fc61385e360 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc613938d18 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613938ca8 <col:97> 'float' lvalue ParmVar 0x7fc613938ac0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc613938bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613938c40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613938e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:853:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc613938db0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc613939038 <col:82, col:107>
| | | `-ReturnStmt 0x7fc613939020 <col:83, col:105>
| | |   `-CallExpr 0x7fc613938fd8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613938fc0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613938f60 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fc61385e6a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc613939008 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613938f98 <col:97> 'long double' lvalue ParmVar 0x7fc613938db0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc613938ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613938f30 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613939500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:856:1, line:859:61> col:1 log
| | |-TemplateTypeParmDecl 0x7fc613939058 <line:856:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613939468 <line:857:1, line:859:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613939390 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613004250 <col:29, col:61>
| |   | `-ReturnStmt 0x7fc613004238 <col:30, col:59>
| |   |   `-CallExpr 0x7fc613004208 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6130041f0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc6130041b8 <col:37, col:39> 'double (double)' lvalue Function 0x7fc61385e500 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc613003eb0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613003e70 <col:51> '_A1' lvalue ParmVar 0x7fc613939390 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613939558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6139395a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613004350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:864:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc6130042b8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc613004540 <col:84, col:111>
| | | `-ReturnStmt 0x7fc613004528 <col:85, col:109>
| | |   `-CallExpr 0x7fc6130044e0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc6130044c8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613004468 <col:92, col:94> 'float (float)' lvalue Function 0x7fc61385e890 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc613004510 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6130044a0 <col:101> 'float' lvalue ParmVar 0x7fc6130042b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc6130043f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613004438 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613004640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:865:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc6130045a8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc613004830 <col:84, col:111>
| | | `-ReturnStmt 0x7fc613004818 <col:85, col:109>
| | |   `-CallExpr 0x7fc6130047d0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc6130047b8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613004758 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc61385ebd0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc613004800 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613004790 <col:101> 'long double' lvalue ParmVar 0x7fc6130045a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc6130046e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613004728 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613004cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:868:1, line:871:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7fc613004850 <line:868:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613004c58 <line:869:1, line:871:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613004b80 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613005210 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc6130051f8 <col:32, col:63>
| |   |   `-CallExpr 0x7fc6130051c8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6130051b0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613005178 <col:39, col:41> 'double (double)' lvalue Function 0x7fc61385ea30 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc613004e70 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613004e30 <col:55> '_A1' lvalue ParmVar 0x7fc613004b80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613004d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613004d90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613005390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:876:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7fc613005278 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc6130052f0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7fc613005630 <col:106, col:142>
| | | `-ReturnStmt 0x7fc613005618 <col:107, col:140>
| | |   `-CallExpr 0x7fc6130055b0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7fc613005598 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6130054b0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7fc613860d18 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7fc6130055e8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc6130054e8 <col:122> 'float' lvalue ParmVar 0x7fc613005278 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc613005600 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613005510 <col:132> 'float *' lvalue ParmVar 0x7fc6130052f0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7fc613005438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613005480 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc6130057b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:877:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7fc613005698 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc613005710 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7fc613005a50 <col:106, col:142>
| | | `-ReturnStmt 0x7fc613005a38 <col:107, col:140>
| | |   `-CallExpr 0x7fc6130059d0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7fc6130059b8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6130058d0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7fc613861298 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7fc613005a08 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613005908 <col:122> 'long double' lvalue ParmVar 0x7fc613005698 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc613005a20 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613005930 <col:132> 'long double *' lvalue ParmVar 0x7fc613005710 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7fc613005858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6130058a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613005bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:883:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc613005ab8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc613005b30 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc61282a618 <col:104, col:139>
| | | `-ReturnStmt 0x7fc61282a600 <col:105, col:137>
| | |   `-CallExpr 0x7fc613005d90 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7fc613005d78 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613005cf0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7fc613866a28 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc613005dc8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613005d28 <col:119> 'float' lvalue ParmVar 0x7fc613005ab8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc613005de0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613005d50 <col:129> 'float' lvalue ParmVar 0x7fc613005b30 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc613005c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613005cc0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282a798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:884:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61282a680 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc61282a6f8 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc61282a9d8 <col:104, col:139>
| | | `-ReturnStmt 0x7fc61282a9c0 <col:105, col:137>
| | |   `-CallExpr 0x7fc61282a958 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61282a940 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282a8b8 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7fc613866e78 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc61282a990 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61282a8f0 <col:119> 'long double' lvalue ParmVar 0x7fc61282a680 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc61282a9a8 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282a918 <col:129> 'long double' lvalue ParmVar 0x7fc61282a6f8 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc61282a840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282a888 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61282b240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:887:1, line:901:1> line:895:1 pow
| | |-TemplateTypeParmDecl 0x7fc61282a9f8 <line:887:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61282aa68 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61282b1a8 <line:888:1, line:901:1> line:895:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61282b050 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61282b0c0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61282ba68 <line:896:1, line:901:1>
| |   | |-DeclStmt 0x7fc61282b4b8 <line:897:5, col:66>
| |   | | `-TypedefDecl 0x7fc61282b460 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61282b3f0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc61282b8b0 <line:898:5, line:899:68>
| |   | | `-StaticAssertDecl 0x7fc61282b878 <line:898:5, line:899:67> line:898:5
| |   | |   |-ParenExpr 0x7fc61282b830 <col:19, line:899:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc61282b810 <line:898:20, line:899:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc61282b7f0 <line:898:21, line:899:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc61282b7c8 <line:898:22, line:899:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc61282b628 <line:898:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc61282b788 <line:899:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc61282b850 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc61282ba50 <line:900:5, col:66>
| |   |   `-CallExpr 0x7fc61282ba18 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61282b8e8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7fc613866c50 0x7fc613005bd0 0x7fc61282a798 0x7fc61282b240
| |   |     |-CStyleCastExpr 0x7fc61282b990 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61282b958 <col:33> '_A1' lvalue ParmVar 0x7fc61282b050 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61282b9f0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61282b9b8 <col:58> '_A2' lvalue ParmVar 0x7fc61282b0c0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61282b2a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61282b2e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282bb78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:906:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61282bae0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61282bd68 <col:82, col:107>
| | | `-ReturnStmt 0x7fc61282bd50 <col:83, col:105>
| | |   `-CallExpr 0x7fc61282bd08 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fc61282bcf0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282bc90 <col:90, col:92> 'float (float)' lvalue Function 0x7fc613859d10 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61282bd38 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282bcc8 <col:97> 'float' lvalue ParmVar 0x7fc61282bae0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61282bc18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282bc60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282be68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:907:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61282bdd0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61282c058 <col:82, col:107>
| | | `-ReturnStmt 0x7fc61282c040 <col:83, col:105>
| | |   `-CallExpr 0x7fc61282bff8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61282bfe0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282bf80 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fc61385a050 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61282c028 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282bfb8 <col:97> 'long double' lvalue ParmVar 0x7fc61282bdd0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61282bf08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282bf50 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61282c520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:910:1, line:913:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7fc61282c078 <line:910:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61282c488 <line:911:1, line:913:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61282c3b0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61282ca50 <col:29, col:61>
| |   | `-ReturnStmt 0x7fc61282ca38 <col:30, col:59>
| |   |   `-CallExpr 0x7fc61282ca08 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61282c9f0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61282c9b8 <col:37, col:39> 'double (double)' lvalue Function 0x7fc613859eb0 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61282c6b0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61282c670 <col:51> '_A1' lvalue ParmVar 0x7fc61282c3b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61282c578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61282c5c0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282cb50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:918:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61282cab8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61282cd40 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61282cd28 <col:84, col:107>
| | |   `-CallExpr 0x7fc61282cce0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61282ccc8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282cc68 <col:91, col:93> 'float (float)' lvalue Function 0x7fc61385ca90 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61282cd10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282cca0 <col:99> 'float' lvalue ParmVar 0x7fc61282cab8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61282cbf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282cc38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282ce40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:919:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61282cda8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61282d030 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61282d018 <col:84, col:107>
| | |   `-CallExpr 0x7fc61282cfd0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61282cfb8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282cf58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc61385cdd0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61282d000 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282cf90 <col:99> 'long double' lvalue ParmVar 0x7fc61282cda8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61282cee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282cf28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61282d4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:922:1, line:925:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7fc61282d050 <line:922:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61282d458 <line:923:1, line:925:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61282d380 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61282da10 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61282d9f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61282d9c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61282d9b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61282d978 <col:38, col:40> 'double (double)' lvalue Function 0x7fc61385cc30 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61282d670 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61282d630 <col:53> '_A1' lvalue ParmVar 0x7fc61282d380 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61282d548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61282d590 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282db10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:930:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61282da78 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61282dd00 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61282dce8 <col:84, col:107>
| | |   `-CallExpr 0x7fc61282dca0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61282dc88 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282dc28 <col:91, col:93> 'float (float)' lvalue Function 0x7fc613867020 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61282dcd0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282dc60 <col:99> 'float' lvalue ParmVar 0x7fc61282da78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61282dbb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282dbf8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282de00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:931:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61282dd68 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61282dff0 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61282dfd8 <col:84, col:107>
| | |   `-CallExpr 0x7fc61282df90 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61282df78 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282df18 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613867360 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61282dfc0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282df50 <col:99> 'long double' lvalue ParmVar 0x7fc61282dd68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61282dea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282dee8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61282e4b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:934:1, line:937:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7fc61282e010 <line:934:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61282e418 <line:935:1, line:937:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61282e340 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61282e9e0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61282e9c8 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61282e998 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61282e980 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61282e948 <col:38, col:40> 'double (double)' lvalue Function 0x7fc6138671c0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61282e640 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61282e600 <col:53> '_A1' lvalue ParmVar 0x7fc61282e340 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61282e508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61282e550 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282eae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:942:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61282ea48 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61282ecd0 <col:82, col:107>
| | | `-ReturnStmt 0x7fc61282ecb8 <col:83, col:105>
| | |   `-CallExpr 0x7fc61282ec70 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fc61282ec58 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282ebf8 <col:90, col:92> 'float (float)' lvalue Function 0x7fc61385a1f0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61282eca0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282ec30 <col:97> 'float' lvalue ParmVar 0x7fc61282ea48 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61282eb80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282ebc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282edd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:943:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61282ed38 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61282efc0 <col:82, col:107>
| | | `-ReturnStmt 0x7fc61282efa8 <col:83, col:105>
| | |   `-CallExpr 0x7fc61282ef60 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61282ef48 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282eee8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fc61385a530 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61282ef90 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282ef20 <col:97> 'long double' lvalue ParmVar 0x7fc61282ed38 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61282ee70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282eeb8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61282f480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:946:1, line:949:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7fc61282efe0 <line:946:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61282f3e8 <line:947:1, line:949:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61282f310 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61282f9a0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fc61282f988 <col:30, col:59>
| |   |   `-CallExpr 0x7fc61282f958 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61282f940 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61282f908 <col:37, col:39> 'double (double)' lvalue Function 0x7fc61385a390 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61282f600 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61282f5c0 <col:51> '_A1' lvalue ParmVar 0x7fc61282f310 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61282f4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61282f520 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282faa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:954:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61282fa08 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61282fc90 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61282fc78 <col:84, col:107>
| | |   `-CallExpr 0x7fc61282fc30 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61282fc18 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282fbb8 <col:91, col:93> 'float (float)' lvalue Function 0x7fc61385cf70 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61282fc60 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282fbf0 <col:99> 'float' lvalue ParmVar 0x7fc61282fa08 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61282fb40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282fb88 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61282fd90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:955:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61282fcf8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61282ff80 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61282ff68 <col:84, col:107>
| | |   `-CallExpr 0x7fc61282ff20 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61282ff08 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61282fea8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc61385d2b0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61282ff50 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61282fee0 <col:99> 'long double' lvalue ParmVar 0x7fc61282fcf8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61282fe30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61282fe78 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612830440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:958:1, line:961:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7fc61282ffa0 <line:958:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc6128303a8 <line:959:1, line:961:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc6128302d0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612830960 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc612830948 <col:31, col:61>
| |   |   `-CallExpr 0x7fc612830918 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc612830900 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc6128308c8 <col:38, col:40> 'double (double)' lvalue Function 0x7fc61385d110 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc6128305c0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612830580 <col:53> '_A1' lvalue ParmVar 0x7fc6128302d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612830498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6128304e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612830a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:965:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc6128309c8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612830c50 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612830c38 <col:85, col:109>
| | |   `-CallExpr 0x7fc612830bf0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc612830bd8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612830b78 <col:92, col:94> 'float (float)' lvalue Function 0x7fc61385a6d0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612830c20 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612830bb0 <col:101> 'float' lvalue ParmVar 0x7fc6128309c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612830b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612830b48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612830d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:966:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612830cb8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612830f40 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612830f28 <col:85, col:109>
| | |   `-CallExpr 0x7fc612830ee0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612830ec8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612830e68 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc61385b230 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612830f10 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612830ea0 <col:101> 'long double' lvalue ParmVar 0x7fc612830cb8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612830df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612830e38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612831400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:968:1, line:971:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7fc612830f60 <line:968:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612831368 <line:969:1, line:971:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612831290 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612831920 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc612831908 <col:32, col:63>
| |   |   `-CallExpr 0x7fc6128318d8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6128318c0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612831888 <col:39, col:41> 'double (double)' lvalue Function 0x7fc61385b090 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612831580 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612831540 <col:55> '_A1' lvalue ParmVar 0x7fc612831290 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612831458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6128314a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612831a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:975:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc612831988 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612831c10 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612831bf8 <col:85, col:109>
| | |   `-CallExpr 0x7fc612831bb0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc612831b98 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612831b38 <col:92, col:94> 'float (float)' lvalue Function 0x7fc61385b3d0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612831be0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612831b70 <col:101> 'float' lvalue ParmVar 0x7fc612831988 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612831ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612831b08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612831d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:976:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612831c78 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612831f00 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612831ee8 <col:85, col:109>
| | |   `-CallExpr 0x7fc612831ea0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612831e88 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612831e28 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc61385b710 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612831ed0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612831e60 <col:101> 'long double' lvalue ParmVar 0x7fc612831c78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612831db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612831df8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6128323c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:978:1, line:981:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7fc612831f20 <line:978:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612832328 <line:979:1, line:981:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612832250 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612832940 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc612832928 <col:32, col:63>
| |   |   `-CallExpr 0x7fc6128328f8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6128328e0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc6128328a8 <col:39, col:41> 'double (double)' lvalue Function 0x7fc61385b570 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612832540 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612832500 <col:55> '_A1' lvalue ParmVar 0x7fc612832250 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612832418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612832460 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612832a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:985:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc6128329a8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612832c30 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612832c18 <col:85, col:109>
| | |   `-CallExpr 0x7fc612832bd0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc612832bb8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612832b58 <col:92, col:94> 'float (float)' lvalue Function 0x7fc61385b8b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612832c00 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612832b90 <col:101> 'float' lvalue ParmVar 0x7fc6128329a8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612832ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612832b28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612832d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:986:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612832c98 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612832f20 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612832f08 <col:85, col:109>
| | |   `-CallExpr 0x7fc612832ec0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612832ea8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612832e48 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc61385bbf0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612832ef0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612832e80 <col:101> 'long double' lvalue ParmVar 0x7fc612832c98 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612832dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612832e18 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6128333e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:988:1, line:991:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7fc612832f40 <line:988:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612833348 <line:989:1, line:991:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612833270 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612833900 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc6128338e8 <col:32, col:63>
| |   |   `-CallExpr 0x7fc6128338b8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6128338a0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612833868 <col:39, col:41> 'double (double)' lvalue Function 0x7fc61385ba50 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612833560 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612833520 <col:55> '_A1' lvalue ParmVar 0x7fc612833270 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612833438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612833480 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612833a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc612833968 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612833bf0 <col:83, col:109>
| | | `-ReturnStmt 0x7fc612833bd8 <col:84, col:107>
| | |   `-CallExpr 0x7fc612833b90 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc612833b78 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612833b18 <col:91, col:93> 'float (float)' lvalue Function 0x7fc613865dd0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612833bc0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612833b50 <col:99> 'float' lvalue ParmVar 0x7fc612833968 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612833aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612833ae8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612833cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:996:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612833c58 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612833ee0 <col:83, col:109>
| | | `-ReturnStmt 0x7fc612833ec8 <col:84, col:107>
| | |   `-CallExpr 0x7fc612833e80 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612833e68 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612833e08 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613866110 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612833eb0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612833e40 <col:99> 'long double' lvalue ParmVar 0x7fc612833c58 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612833d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612833dd8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6128343a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:998:1, line:1001:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7fc612833f00 <line:998:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612834308 <line:999:1, line:1001:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612834230 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61212ab40 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61212ab28 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61212aaf8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61212aae0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61212aaa8 <col:38, col:40> 'double (double)' lvalue Function 0x7fc613865f70 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612834520 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6128344e0 <col:53> '_A1' lvalue ParmVar 0x7fc612834230 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc6128343f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612834440 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61212acc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1005:1, line:1008:1> line:1005:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc61212aba8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc61212ac20 <line:1006:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc61212af00 <col:75, line:1008:1>
| | | `-ReturnStmt 0x7fc61212aee8 <line:1007:3, col:40>
| | |   `-CallExpr 0x7fc61212ae80 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7fc61212ae68 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61212ade0 <col:10, col:12> 'float (float, float)' lvalue Function 0x7fc61386d240 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc61212aeb8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61212ae18 <col:22> 'float' lvalue ParmVar 0x7fc61212aba8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc61212aed0 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61212ae40 <col:32> 'float' lvalue ParmVar 0x7fc61212ac20 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc61212ad68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61212adb0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61212b080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1009:1, line:1012:1> line:1010:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61212af68 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc61212afe0 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc61212b2c0 <col:64, line:1012:1>
| | | `-ReturnStmt 0x7fc61212b2a8 <line:1011:3, col:40>
| | |   `-CallExpr 0x7fc61212b240 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61212b228 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61212b1a0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7fc61386d690 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc61212b278 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61212b1d8 <col:22> 'long double' lvalue ParmVar 0x7fc61212af68 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc61212b290 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61212b200 <col:32> 'long double' lvalue ParmVar 0x7fc61212afe0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc61212b128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61212b170 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61212bb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1014:1, line:1028:1> line:1022:1 copysign
| | |-TemplateTypeParmDecl 0x7fc61212b2e0 <line:1014:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61212b348 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61212ba88 <line:1015:1, line:1028:1> line:1022:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61212b930 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61212b9a0 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61212c348 <line:1023:1, line:1028:1>
| |   | |-DeclStmt 0x7fc61212bd98 <line:1024:5, col:66>
| |   | | `-TypedefDecl 0x7fc61212bd40 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61212bcd0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc61212c190 <line:1025:5, line:1026:68>
| |   | | `-StaticAssertDecl 0x7fc61212c158 <line:1025:5, line:1026:67> line:1025:5
| |   | |   |-ParenExpr 0x7fc61212c110 <col:19, line:1026:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc61212c0f0 <line:1025:20, line:1026:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc61212c0d0 <line:1025:21, line:1026:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc61212c0a8 <line:1025:22, line:1026:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc61212bf08 <line:1025:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc61212c068 <line:1026:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc61212c130 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc61212c330 <line:1027:5, col:71>
| |   |   `-CallExpr 0x7fc61212c2f8 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61212c1c8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7fc61386d468 0x7fc61212acc0 0x7fc61212b080 0x7fc61212bb20
| |   |     |-CStyleCastExpr 0x7fc61212c270 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61212c238 <col:38> '_A1' lvalue ParmVar 0x7fc61212b930 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61212c2d0 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61212c298 <col:63> '_A2' lvalue ParmVar 0x7fc61212b9a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61212bb80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61212bbc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61212c458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1032:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61212c3c0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61212c648 <col:82, col:107>
| | | `-ReturnStmt 0x7fc61212c630 <col:83, col:105>
| | |   `-CallExpr 0x7fc61212c5e8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fc61212c5d0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61212c570 <col:90, col:92> 'float (float)' lvalue Function 0x7fc613867500 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61212c618 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61212c5a8 <col:97> 'float' lvalue ParmVar 0x7fc61212c3c0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61212c4f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61212c540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61212c748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1033:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61212c6b0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc613939740 <col:82, col:107>
| | | `-ReturnStmt 0x7fc613939728 <col:83, col:105>
| | |   `-CallExpr 0x7fc6139396e0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fc6139396c8 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613939668 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fc613867890 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc613939710 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6139396a0 <col:97> 'long double' lvalue ParmVar 0x7fc61212c6b0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61212c7e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613939638 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613939c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1035:1, line:1038:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7fc613939760 <line:1035:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613939b68 <line:1036:1, line:1038:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613939a90 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61393a120 <col:29, col:61>
| |   | `-ReturnStmt 0x7fc61393a108 <col:30, col:59>
| |   |   `-CallExpr 0x7fc61393a0d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61393a0c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61393a088 <col:37, col:39> 'double (double)' lvalue Function 0x7fc6138676a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc613939d80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613939d40 <col:51> '_A1' lvalue ParmVar 0x7fc613939a90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613939c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613939ca0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393a220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1042:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61393a188 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61393a410 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61393a3f8 <col:84, col:107>
| | |   `-CallExpr 0x7fc61393a3b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61393a398 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393a338 <col:91, col:93> 'float (float)' lvalue Function 0x7fc613867a30 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61393a3e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393a370 <col:99> 'float' lvalue ParmVar 0x7fc61393a188 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61393a2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393a308 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393a510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1043:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61393a478 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61393a700 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61393a6e8 <col:84, col:107>
| | |   `-CallExpr 0x7fc61393a6a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61393a688 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393a628 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613867d70 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61393a6d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393a660 <col:99> 'long double' lvalue ParmVar 0x7fc61393a478 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61393a5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393a5f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61393abc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1045:1, line:1048:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7fc61393a720 <line:1045:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61393ab28 <line:1046:1, line:1048:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61393aa50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61393b0e0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61393b0c8 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61393b098 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61393b080 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61393b048 <col:38, col:40> 'double (double)' lvalue Function 0x7fc613867bd0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61393ad40 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61393ad00 <col:53> '_A1' lvalue ParmVar 0x7fc61393aa50 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61393ac18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61393ac60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393b1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1052:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61393b148 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61393b3d0 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61393b3b8 <col:84, col:107>
| | |   `-CallExpr 0x7fc61393b370 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc61393b358 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393b2f8 <col:91, col:93> 'float (float)' lvalue Function 0x7fc61385d9a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61393b3a0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393b330 <col:99> 'float' lvalue ParmVar 0x7fc61393b148 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61393b280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393b2c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393b4d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1053:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61393b438 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61393b6d8 <col:83, col:109>
| | | `-ReturnStmt 0x7fc61393b6c0 <col:84, col:107>
| | |   `-CallExpr 0x7fc61393b678 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61393b660 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393b600 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc61385dce0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61393b6a8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393b638 <col:99> 'long double' lvalue ParmVar 0x7fc61393b438 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61393b570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393b5b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61393bba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1055:1, line:1058:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7fc61393b6f8 <line:1055:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61393bb08 <line:1056:1, line:1058:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61393ba30 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61393c0c0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc61393c0a8 <col:31, col:61>
| |   |   `-CallExpr 0x7fc61393c078 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61393c060 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61393c028 <col:38, col:40> 'double (double)' lvalue Function 0x7fc61385db40 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61393bd20 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61393bce0 <col:53> '_A1' lvalue ParmVar 0x7fc61393ba30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61393bbf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61393bc40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393c1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1062:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61393c128 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61393c3b0 <col:84, col:111>
| | | `-ReturnStmt 0x7fc61393c398 <col:85, col:109>
| | |   `-CallExpr 0x7fc61393c350 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc61393c338 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393c2d8 <col:92, col:94> 'float (float)' lvalue Function 0x7fc61385de80 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61393c380 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393c310 <col:101> 'float' lvalue ParmVar 0x7fc61393c128 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61393c260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393c2a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393c4b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1063:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61393c418 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61393c6a0 <col:84, col:111>
| | | `-ReturnStmt 0x7fc61393c688 <col:85, col:109>
| | |   `-CallExpr 0x7fc61393c640 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61393c628 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393c5c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc61385e1c0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61393c670 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393c600 <col:101> 'long double' lvalue ParmVar 0x7fc61393c418 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61393c550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393c598 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61393cb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1065:1, line:1068:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7fc61393c6c0 <line:1065:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61393cac8 <line:1066:1, line:1068:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61393c9f0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61393d080 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc61393d068 <col:32, col:63>
| |   |   `-CallExpr 0x7fc61393d038 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61393d020 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61393cfe8 <col:39, col:41> 'double (double)' lvalue Function 0x7fc61385e020 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61393cce0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61393cca0 <col:55> '_A1' lvalue ParmVar 0x7fc61393c9f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61393cbb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61393cc00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393d200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1072:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc61393d0e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc61393d160 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc61393d440 <col:105, col:141>
| | | `-ReturnStmt 0x7fc61393d428 <col:106, col:139>
| | |   `-CallExpr 0x7fc61393d3c0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fc61393d3a8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393d320 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fc61385fd68 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc61393d3f8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61393d358 <col:121> 'float' lvalue ParmVar 0x7fc61393d0e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc61393d410 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393d380 <col:131> 'float' lvalue ParmVar 0x7fc61393d160 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc61393d2a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393d2f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613005e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1073:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61393d4a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc61393d520 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc613006040 <col:105, col:141>
| | | `-ReturnStmt 0x7fc613006028 <col:106, col:139>
| | |   `-CallExpr 0x7fc613005fc0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613005fa8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613005f20 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fc6138601b8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc613005ff8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613005f58 <col:121> 'long double' lvalue ParmVar 0x7fc61393d4a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc613006010 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613005f80 <col:131> 'long double' lvalue ParmVar 0x7fc61393d520 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc613005ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613005ef0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6130068a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1075:1, line:1089:1> line:1083:1 fdim
| | |-TemplateTypeParmDecl 0x7fc613006060 <line:1075:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc6130060c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc613006808 <line:1076:1, line:1089:1> line:1083:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc6130066b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc613006720 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc6130070c8 <line:1084:1, line:1089:1>
| |   | |-DeclStmt 0x7fc613006b18 <line:1085:5, col:66>
| |   | | `-TypedefDecl 0x7fc613006ac0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc613006a50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc613006f10 <line:1086:5, line:1087:68>
| |   | | `-StaticAssertDecl 0x7fc613006ed8 <line:1086:5, line:1087:67> line:1086:5
| |   | |   |-ParenExpr 0x7fc613006e90 <col:19, line:1087:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc613006e70 <line:1086:20, line:1087:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc613006e50 <line:1086:21, line:1087:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc613006e28 <line:1086:22, line:1087:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc613006c88 <line:1086:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc613006de8 <line:1087:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc613006eb0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc6130070b0 <line:1088:5, col:67>
| |   |   `-CallExpr 0x7fc613007078 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc613006f48 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7fc61385ff90 0x7fc61393d200 0x7fc613005e00 0x7fc6130068a0
| |   |     |-CStyleCastExpr 0x7fc613006ff0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc613006fb8 <col:34> '_A1' lvalue ParmVar 0x7fc6130066b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc613007050 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613007018 <col:59> '_A2' lvalue ParmVar 0x7fc613006720 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc613006900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613006948 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc6130072d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1093:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc613007140 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc6130071b8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fc613007230 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7fc613007590 <col:126, col:171>
| | | `-ReturnStmt 0x7fc613007578 <col:127, col:169>
| | |   `-CallExpr 0x7fc6130074f0 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7fc6130074d8 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613007400 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7fc6138731a8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7fc613007530 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613007438 <col:141> 'float' lvalue ParmVar 0x7fc613007140 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fc613007548 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613007460 <col:151> 'float' lvalue ParmVar 0x7fc6130071b8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fc613007560 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613007488 <col:161> 'float' lvalue ParmVar 0x7fc613007230 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7fc613007388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6130073d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613007790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1094:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc6130075f8 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc613007670 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fc6130076e8 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7fc613007a50 <col:126, col:171>
| | | `-ReturnStmt 0x7fc613007a38 <col:127, col:169>
| | |   `-CallExpr 0x7fc6130079b0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613007998 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6130078b8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7fc613863888 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc6130079f0 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc6130078f0 <col:141> 'long double' lvalue ParmVar 0x7fc6130075f8 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fc613007a08 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613007918 <col:151> 'long double' lvalue ParmVar 0x7fc613007670 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fc613007a20 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613007940 <col:161> 'long double' lvalue ParmVar 0x7fc6130076e8 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7fc613007840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613007888 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6130086c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1096:1, line:1112:1> line:1105:1 fma
| | |-TemplateTypeParmDecl 0x7fc613007a70 <line:1096:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc613007ad8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7fc613007b48 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7fc613008628 <line:1097:1, line:1112:1> line:1105:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7fc613008400 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc613008470 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fc6130084e0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7fc613009280 <line:1106:1, line:1112:1>
| |   | |-DeclStmt 0x7fc6130089c8 <line:1107:5, col:71>
| |   | | `-TypedefDecl 0x7fc613008970 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7fc613008900 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7fc613009060 <line:1108:5, line:1110:68>
| |   | | `-StaticAssertDecl 0x7fc613009028 <line:1108:5, line:1110:67> line:1108:5
| |   | |   |-ParenExpr 0x7fc613008fe0 <col:19, line:1110:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc613008fc0 <line:1108:20, line:1110:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc613008fa0 <line:1108:21, line:1110:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc613008f78 <line:1108:22, line:1110:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7fc613008d98 <line:1108:22, line:1109:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7fc613008b98 <line:1108:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7fc613008d58 <line:1109:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc613008f38 <line:1110:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc613009000 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc613009268 <line:1111:5, col:91>
| |   |   `-CallExpr 0x7fc613009228 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc613009098 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7fc6138734f8 0x7fc6130072d8 0x7fc613007790 0x7fc6130086c0
| |   |     |-CStyleCastExpr 0x7fc613009140 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc613009108 <col:33> '_A1' lvalue ParmVar 0x7fc613008400 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fc6130091a0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc613009168 <col:58> '_A2' lvalue ParmVar 0x7fc613008470 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7fc613009200 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6130091c8 <col:83> '_A3' lvalue ParmVar 0x7fc6130084e0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7fc613008728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613008770 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613009410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc6130092f8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc613009370 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc613009650 <col:105, col:141>
| | | `-ReturnStmt 0x7fc613009638 <col:106, col:139>
| | |   `-CallExpr 0x7fc6130095d0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fc6130095b8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613009530 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fc6138603e0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc613009608 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613009568 <col:121> 'float' lvalue ParmVar 0x7fc6130092f8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc613009620 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613009590 <col:131> 'float' lvalue ParmVar 0x7fc613009370 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc6130094b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613009500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc6130097d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1117:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc6130096b8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc613009730 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc613009a10 <col:105, col:141>
| | | `-ReturnStmt 0x7fc6130099f8 <col:106, col:139>
| | |   `-CallExpr 0x7fc613009990 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613009978 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6130098f0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fc613872838 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc6130099c8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc613009928 <col:121> 'long double' lvalue ParmVar 0x7fc6130096b8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc6130099e0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613009950 <col:131> 'long double' lvalue ParmVar 0x7fc613009730 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc613009878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6130098c0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61300a270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1119:1, line:1133:1> line:1127:1 fmax
| | |-TemplateTypeParmDecl 0x7fc613009a30 <line:1119:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc613009a98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61300a1d8 <line:1120:1, line:1133:1> line:1127:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61300a080 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61300a0f0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61300aa98 <line:1128:1, line:1133:1>
| |   | |-DeclStmt 0x7fc61300a4e8 <line:1129:5, col:66>
| |   | | `-TypedefDecl 0x7fc61300a490 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61300a420 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc61300a8e0 <line:1130:5, line:1131:68>
| |   | | `-StaticAssertDecl 0x7fc61300a8a8 <line:1130:5, line:1131:67> line:1130:5
| |   | |   |-ParenExpr 0x7fc61300a860 <col:19, line:1131:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc61300a840 <line:1130:20, line:1131:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc61300a820 <line:1130:21, line:1131:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc61300a7f8 <line:1130:22, line:1131:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc61300a658 <line:1130:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc61300a7b8 <line:1131:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc61300a880 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc61300aa80 <line:1132:5, col:67>
| |   |   `-CallExpr 0x7fc61300aa48 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61300a918 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7fc613860608 0x7fc613009410 0x7fc6130097d0 0x7fc61300a270
| |   |     |-CStyleCastExpr 0x7fc61300a9c0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61300a988 <col:34> '_A1' lvalue ParmVar 0x7fc61300a080 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61300aa20 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61300a9e8 <col:59> '_A2' lvalue ParmVar 0x7fc61300a0f0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61300a2d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61300a318 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61300ac28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1137:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc61300ab10 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc61300ab88 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc61300ae68 <col:105, col:141>
| | | `-ReturnStmt 0x7fc61300ae50 <col:106, col:139>
| | |   `-CallExpr 0x7fc61300ade8 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fc61300add0 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61300ad48 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fc613872a60 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc61300ae20 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61300ad80 <col:121> 'float' lvalue ParmVar 0x7fc61300ab10 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc61300ae38 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61300ada8 <col:131> 'float' lvalue ParmVar 0x7fc61300ab88 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc61300acd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61300ad18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61300afe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61300aed0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc61300af48 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc61300b228 <col:105, col:141>
| | | `-ReturnStmt 0x7fc61300b210 <col:106, col:139>
| | |   `-CallExpr 0x7fc61300b1a8 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61300b190 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61300b108 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fc613872eb0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc61300b1e0 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61300b140 <col:121> 'long double' lvalue ParmVar 0x7fc61300aed0 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc61300b1f8 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61300b168 <col:131> 'long double' lvalue ParmVar 0x7fc61300af48 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc61300b090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61300b0d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61300ba90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1140:1, line:1154:1> line:1148:1 fmin
| | |-TemplateTypeParmDecl 0x7fc61300b248 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61300b2b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61300b9f8 <line:1141:1, line:1154:1> line:1148:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61300b8a0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61300b910 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61393dab8 <line:1149:1, line:1154:1>
| |   | |-DeclStmt 0x7fc61300bd08 <line:1150:5, col:66>
| |   | | `-TypedefDecl 0x7fc61300bcb0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61300bc40 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc61393d900 <line:1151:5, line:1152:68>
| |   | | `-StaticAssertDecl 0x7fc61393d8c8 <line:1151:5, line:1152:67> line:1151:5
| |   | |   |-ParenExpr 0x7fc61393d880 <col:19, line:1152:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc61393d860 <line:1151:20, line:1152:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc61393d840 <line:1151:21, line:1152:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc61393d818 <line:1151:22, line:1152:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc61393d678 <line:1151:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc61393d7d8 <line:1152:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc61393d8a0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc61393daa0 <line:1153:5, col:67>
| |   |   `-CallExpr 0x7fc61393da68 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61393d938 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7fc613872c88 0x7fc61300ac28 0x7fc61300afe8 0x7fc61300ba90
| |   |     |-CStyleCastExpr 0x7fc61393d9e0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61393d9a8 <col:34> '_A1' lvalue ParmVar 0x7fc61300b8a0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61393da40 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61393da08 <col:59> '_A2' lvalue ParmVar 0x7fc61300b910 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61300baf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61300bb38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393dc48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1158:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc61393db30 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc61393dba8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc61393de88 <col:106, col:143>
| | | `-ReturnStmt 0x7fc61393de70 <col:107, col:141>
| | |   `-CallExpr 0x7fc61393de08 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fc61393ddf0 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393dd68 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fc613866330 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc61393de40 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61393dda0 <col:123> 'float' lvalue ParmVar 0x7fc61393db30 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc61393de58 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393ddc8 <col:133> 'float' lvalue ParmVar 0x7fc61393dba8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc61393dcf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393dd38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393e008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1159:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61393def0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc61393df68 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc61393e248 <col:106, col:143>
| | | `-ReturnStmt 0x7fc61393e230 <col:107, col:141>
| | |   `-CallExpr 0x7fc61393e1c8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61393e1b0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393e128 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fc613866800 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc61393e200 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61393e160 <col:123> 'long double' lvalue ParmVar 0x7fc61393def0 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc61393e218 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393e188 <col:133> 'long double' lvalue ParmVar 0x7fc61393df68 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc61393e0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393e0f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61393eab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1161:1, line:1175:1> line:1169:1 hypot
| | |-TemplateTypeParmDecl 0x7fc61393e268 <line:1161:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61393e2d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61393ea18 <line:1162:1, line:1175:1> line:1169:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61393e8c0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61393e930 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61393f2d8 <line:1170:1, line:1175:1>
| |   | |-DeclStmt 0x7fc61393ed28 <line:1171:5, col:66>
| |   | | `-TypedefDecl 0x7fc61393ecd0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61393ec60 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc61393f120 <line:1172:5, line:1173:68>
| |   | | `-StaticAssertDecl 0x7fc61393f0e8 <line:1172:5, line:1173:67> line:1172:5
| |   | |   |-ParenExpr 0x7fc61393f0a0 <col:19, line:1173:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc61393f080 <line:1172:20, line:1173:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc61393f060 <line:1172:21, line:1173:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc61393f038 <line:1172:22, line:1173:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc61393ee98 <line:1172:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc61393eff8 <line:1173:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc61393f0c0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc61393f2c0 <line:1174:5, col:68>
| |   |   `-CallExpr 0x7fc61393f288 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61393f158 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7fc613866558 0x7fc61393dc48 0x7fc61393e008 0x7fc61393eab0
| |   |     |-CStyleCastExpr 0x7fc61393f200 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61393f1c8 <col:35> '_A1' lvalue ParmVar 0x7fc61393e8c0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61393f260 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61393f228 <col:60> '_A2' lvalue ParmVar 0x7fc61393e930 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61393eb10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61393eb58 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61393f3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1179:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61393f350 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61393f5d8 <col:76, col:103>
| | | `-ReturnStmt 0x7fc61393f5c0 <col:77, col:101>
| | |   `-CallExpr 0x7fc61393f578 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fc61393f560 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61393f500 <col:84, col:86> 'int (float)' lvalue Function 0x7fc6138634a0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7fc61393f5a8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61393f538 <col:93> 'float' lvalue ParmVar 0x7fc61393f350 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61393f488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61393f4d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc6139416e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1180:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc613941648 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc6139418d0 <col:76, col:103>
| | | `-ReturnStmt 0x7fc6139418b8 <col:77, col:101>
| | |   `-CallExpr 0x7fc613941870 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fc613941858 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6139417f8 <col:84, col:86> 'int (long double)' lvalue Function 0x7fc613864890 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7fc6139418a0 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613941830 <col:93> 'long double' lvalue ParmVar 0x7fc613941648 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc613941780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6139417c8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc613941e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1182:1, line:1185:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7fc6139418f0 <line:1182:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613941de8 <line:1183:1, line:1185:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613941cd0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc613942610 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc6139425f8 <col:32, col:63>
| |   |   `-CallExpr 0x7fc6139425c8 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7fc6139425b0 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613942578 <col:39, col:41> 'int (double)' lvalue Function 0x7fc613863678 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7fc613942000 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc613941fc0 <col:55> '_A1' lvalue ParmVar 0x7fc613941cd0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613941ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613941f20 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613942710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc613942678 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc613942900 <col:85, col:113>
| | | `-ReturnStmt 0x7fc6139428e8 <col:86, col:111>
| | |   `-CallExpr 0x7fc6139428a0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fc613942888 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613942828 <col:93, col:95> 'float (float)' lvalue Function 0x7fc613867f10 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc6139428d0 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613942860 <col:103> 'float' lvalue ParmVar 0x7fc613942678 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc6139427b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6139427f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc613942a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc613942968 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc613942bf0 <col:85, col:113>
| | | `-ReturnStmt 0x7fc613942bd8 <col:86, col:111>
| | |   `-CallExpr 0x7fc613942b90 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fc613942b78 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc613942b18 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fc613868230 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc613942bc0 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc613942b50 <col:103> 'long double' lvalue ParmVar 0x7fc613942968 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc613942aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc613942ae8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6139430b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1195:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7fc613942c10 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc613943018 <line:1193:1, line:1195:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc613942f40 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc6139435d0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fc6139435b8 <col:33, col:65>
| |   |   `-CallExpr 0x7fc613943588 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fc613943570 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc613943538 <col:40, col:42> 'double (double)' lvalue Function 0x7fc6138680a0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc613943230 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc6139431f0 <col:57> '_A1' lvalue ParmVar 0x7fc613942f40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc613943108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc613943150 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc6128346e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1199:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fc612834648 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612834900 <col:83, col:111>
| | | `-ReturnStmt 0x7fc6128348e8 <col:84, col:109>
| | |   `-CallExpr 0x7fc6128348a0 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fc612834888 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6128347f8 <col:91, col:93> 'long long (float)' lvalue Function 0x7fc61386ac88 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fc6128348d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612834830 <col:101> 'float' lvalue ParmVar 0x7fc612834648 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612834780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6128347c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612834a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1200:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612834968 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612834c20 <col:83, col:111>
| | | `-ReturnStmt 0x7fc612834c08 <col:84, col:109>
| | |   `-CallExpr 0x7fc612834bc0 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fc612834ba8 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612834b18 <col:91, col:93> 'long long (long double)' lvalue Function 0x7fc61386b0c8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fc612834bf0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612834b50 <col:101> 'long double' lvalue ParmVar 0x7fc612834968 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612834aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612834ae8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6128351d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1202:1, line:1205:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7fc612834c40 <line:1202:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612835138 <line:1203:1, line:1205:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612835020 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612835988 <col:32, col:67>
| |   | `-ReturnStmt 0x7fc612835970 <col:33, col:65>
| |   |   `-CallExpr 0x7fc612835940 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7fc612835928 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc6128358c8 <col:40, col:42> 'long long (double)' lvalue Function 0x7fc61386aea8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fc612835350 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612835310 <col:57> '_A1' lvalue ParmVar 0x7fc612835020 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612835228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612835270 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612835a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1209:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fc6128359f0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612835c78 <col:84, col:113>
| | | `-ReturnStmt 0x7fc612835c60 <col:85, col:111>
| | |   `-CallExpr 0x7fc612835c18 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fc612835c00 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612835ba0 <col:92, col:94> 'long long (float)' lvalue Function 0x7fc61386b2a8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fc612835c48 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612835bd8 <col:103> 'float' lvalue ParmVar 0x7fc6128359f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612835b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612835b70 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612835d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612835ce0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612835f68 <col:84, col:113>
| | | `-ReturnStmt 0x7fc612835f50 <col:85, col:111>
| | |   `-CallExpr 0x7fc612835f08 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fc612835ef0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612835e90 <col:92, col:94> 'long long (long double)' lvalue Function 0x7fc61386b5e8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fc612835f38 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612835ec8 <col:103> 'long double' lvalue ParmVar 0x7fc612835ce0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612835e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612835e60 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612836430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1212:1, line:1215:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7fc612835f88 <line:1212:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612836398 <line:1213:1, line:1215:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc6128362c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612836960 <col:33, col:69>
| |   | `-ReturnStmt 0x7fc612836948 <col:34, col:67>
| |   |   `-CallExpr 0x7fc612836918 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7fc612836900 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc6128368c8 <col:41, col:43> 'long long (double)' lvalue Function 0x7fc61386b448 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fc6128365b0 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612836570 <col:59> '_A1' lvalue ParmVar 0x7fc6128362c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612836488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6128364d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612836a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1219:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc6128369c8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612836c50 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612836c38 <col:85, col:109>
| | |   `-CallExpr 0x7fc612836bf0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc612836bd8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612836b78 <col:92, col:94> 'float (float)' lvalue Function 0x7fc61385f250 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612836c20 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612836bb0 <col:101> 'float' lvalue ParmVar 0x7fc6128369c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612836b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612836b48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612836d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1220:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612836cb8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612836f40 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612836f28 <col:85, col:109>
| | |   `-CallExpr 0x7fc612836ee0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612836ec8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612836e68 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc61385f590 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612836f10 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612836ea0 <col:101> 'long double' lvalue ParmVar 0x7fc612836cb8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612836df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612836e38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612837400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1222:1, line:1225:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7fc612836f60 <line:1222:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612837368 <line:1223:1, line:1225:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612837290 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612837920 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc612837908 <col:32, col:63>
| |   |   `-CallExpr 0x7fc6128378d8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6128378c0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612837888 <col:39, col:41> 'double (double)' lvalue Function 0x7fc61385f3f0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612837580 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612837540 <col:55> '_A1' lvalue ParmVar 0x7fc612837290 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612837458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6128374a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612837a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1229:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc612837988 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612837c10 <col:83, col:109>
| | | `-ReturnStmt 0x7fc612837bf8 <col:84, col:107>
| | |   `-CallExpr 0x7fc612837bb0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc612837b98 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612837b38 <col:91, col:93> 'float (float)' lvalue Function 0x7fc61385ed70 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612837be0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612837b70 <col:99> 'float' lvalue ParmVar 0x7fc612837988 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612837ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612837b08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612837d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1230:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612837c78 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612837f00 <col:83, col:109>
| | | `-ReturnStmt 0x7fc612837ee8 <col:84, col:107>
| | |   `-CallExpr 0x7fc612837ea0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612837e88 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612837e28 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc61385f0b0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612837ed0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612837e60 <col:99> 'long double' lvalue ParmVar 0x7fc612837c78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612837db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612837df8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6128383c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, line:1235:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7fc612837f20 <line:1232:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612838328 <line:1233:1, line:1235:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612838250 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612838940 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc612838928 <col:31, col:61>
| |   |   `-CallExpr 0x7fc6128388f8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6128388e0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc6128388a8 <col:38, col:40> 'double (double)' lvalue Function 0x7fc61385ef10 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612838540 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612838500 <col:53> '_A1' lvalue ParmVar 0x7fc612838250 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612838418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612838460 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612838a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1239:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc6128389a8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612838c30 <col:83, col:109>
| | | `-ReturnStmt 0x7fc612838c18 <col:84, col:107>
| | |   `-CallExpr 0x7fc612838bd0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc612838bb8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612838b58 <col:91, col:93> 'float (float)' lvalue Function 0x7fc61385f730 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612838c00 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612838b90 <col:99> 'float' lvalue ParmVar 0x7fc6128389a8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612838ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612838b28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612838d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1240:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612838c98 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612838f20 <col:83, col:109>
| | | `-ReturnStmt 0x7fc612838f08 <col:84, col:107>
| | |   `-CallExpr 0x7fc612838ec0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612838ea8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612838e48 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613860a90 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612838ef0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612838e80 <col:99> 'long double' lvalue ParmVar 0x7fc612838c98 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612838dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612838e18 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc6128393e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1242:1, line:1245:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7fc612838f40 <line:1242:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612839348 <line:1243:1, line:1245:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612839270 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612839900 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc6128398e8 <col:31, col:61>
| |   |   `-CallExpr 0x7fc6128398b8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc6128398a0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612839868 <col:38, col:40> 'double (double)' lvalue Function 0x7fc6138608f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612839560 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612839520 <col:53> '_A1' lvalue ParmVar 0x7fc612839270 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612839438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612839480 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612839a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1249:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fc612839968 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612839c20 <col:77, col:104>
| | | `-ReturnStmt 0x7fc612839c08 <col:78, col:102>
| | |   `-CallExpr 0x7fc612839bc0 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fc612839ba8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612839b18 <col:85, col:87> 'long (float)' lvalue Function 0x7fc613869c68 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fc612839bf0 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612839b50 <col:94> 'float' lvalue ParmVar 0x7fc612839968 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612839aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612839ae8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612839d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1250:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612839c88 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612839f40 <col:77, col:104>
| | | `-ReturnStmt 0x7fc612839f28 <col:78, col:102>
| | |   `-CallExpr 0x7fc612839ee0 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fc612839ec8 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612839e38 <col:85, col:87> 'long (long double)' lvalue Function 0x7fc61386a0a8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fc612839f10 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612839e70 <col:94> 'long double' lvalue ParmVar 0x7fc612839c88 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612839dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612839e08 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61283a4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, line:1255:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7fc612839f60 <line:1252:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61283a458 <line:1253:1, line:1255:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61283a340 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61283ace8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc61283acd0 <col:32, col:63>
| |   |   `-CallExpr 0x7fc61283aca0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7fc61283ac88 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61283ac28 <col:39, col:41> 'long (double)' lvalue Function 0x7fc613869e88 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fc61283a6b0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61283a670 <col:55> '_A1' lvalue ParmVar 0x7fc61283a340 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61283a548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61283a590 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283ade8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1259:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61283ad50 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61283afd8 <col:78, col:106>
| | | `-ReturnStmt 0x7fc61283afc0 <col:79, col:104>
| | |   `-CallExpr 0x7fc61283af78 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fc61283af60 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283af00 <col:86, col:88> 'long (float)' lvalue Function 0x7fc61386a768 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fc61283afa8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283af38 <col:96> 'float' lvalue ParmVar 0x7fc61283ad50 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61283ae88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283aed0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283b0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1260:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61283b040 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61283b2c8 <col:78, col:106>
| | | `-ReturnStmt 0x7fc61283b2b0 <col:79, col:104>
| | |   `-CallExpr 0x7fc61283b268 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fc61283b250 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283b1f0 <col:86, col:88> 'long (long double)' lvalue Function 0x7fc61386aaa8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fc61283b298 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283b228 <col:96> 'long double' lvalue ParmVar 0x7fc61283b040 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61283b178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283b1c0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61283b790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, line:1265:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7fc61283b2e8 <line:1262:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61283b6f8 <line:1263:1, line:1265:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61283b620 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61283bcb0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fc61283bc98 <col:33, col:65>
| |   |   `-CallExpr 0x7fc61283bc68 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7fc61283bc50 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61283bc18 <col:40, col:42> 'long (double)' lvalue Function 0x7fc61386a908 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fc61283b910 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61283b8d0 <col:57> '_A1' lvalue ParmVar 0x7fc61283b620 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61283b7e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61283b830 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283bdb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1271:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc61283bd18 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc61283bfa0 <col:88, col:119>
| | | `-ReturnStmt 0x7fc61283bf88 <col:89, col:117>
| | |   `-CallExpr 0x7fc61283bf40 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7fc61283bf28 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283bec8 <col:96, col:98> 'float (float)' lvalue Function 0x7fc613869268 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc61283bf70 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283bf00 <col:109> 'float' lvalue ParmVar 0x7fc61283bd18 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc61283be50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283be98 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283c0a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61283c008 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc61283c290 <col:88, col:119>
| | | `-ReturnStmt 0x7fc61283c278 <col:89, col:117>
| | |   `-CallExpr 0x7fc61283c230 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61283c218 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283c1b8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7fc6138695a8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc61283c260 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283c1f0 <col:109> 'long double' lvalue ParmVar 0x7fc61283c008 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc61283c140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283c188 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61283c770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1274:1, line:1277:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7fc61283c2b0 <line:1274:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61283c6d8 <line:1275:1, line:1277:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc61283c600 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc61283cc90 <col:35, col:73>
| |   | `-ReturnStmt 0x7fc61283cc78 <col:36, col:71>
| |   |   `-CallExpr 0x7fc61283cc48 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61283cc30 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61283cbf8 <col:43, col:45> 'double (double)' lvalue Function 0x7fc613869408 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc61283c8f0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61283c8b0 <col:63> '_A1' lvalue ParmVar 0x7fc61283c600 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc61283c7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61283c810 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283ce10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1281:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc61283ccf8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc61283cd70 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc61283d050 <col:110, col:151>
| | | `-ReturnStmt 0x7fc61283d038 <col:111, col:149>
| | |   `-CallExpr 0x7fc61283cfd0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fc61283cfb8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283cf30 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fc61386df68 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc61283d008 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61283cf68 <col:131> 'float' lvalue ParmVar 0x7fc61283ccf8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc61283d020 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283cf90 <col:141> 'float' lvalue ParmVar 0x7fc61283cd70 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc61283ceb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283cf00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283d1d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61283d0b8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc61283d130 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc61283d410 <col:110, col:151>
| | | `-ReturnStmt 0x7fc61283d3f8 <col:111, col:149>
| | |   `-CallExpr 0x7fc61283d390 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61283d378 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283d2f0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fc61386e3b8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc61283d3c8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61283d328 <col:131> 'long double' lvalue ParmVar 0x7fc61283d0b8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc61283d3e0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283d350 <col:141> 'long double' lvalue ParmVar 0x7fc61283d130 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc61283d278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283d2c0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61283dc70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1284:1, line:1298:1> line:1292:1 nextafter
| | |-TemplateTypeParmDecl 0x7fc61283d430 <line:1284:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61283d498 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc61283dbd8 <line:1285:1, line:1298:1> line:1292:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc61283da80 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61283daf0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc61283e498 <line:1293:1, line:1298:1>
| |   | |-DeclStmt 0x7fc61283dee8 <line:1294:5, col:66>
| |   | | `-TypedefDecl 0x7fc61283de90 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc61283de20 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc61283e2e0 <line:1295:5, line:1296:68>
| |   | | `-StaticAssertDecl 0x7fc61283e2a8 <line:1295:5, line:1296:67> line:1295:5
| |   | |   |-ParenExpr 0x7fc61283e260 <col:19, line:1296:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc61283e240 <line:1295:20, line:1296:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc61283e220 <line:1295:21, line:1296:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc61283e1f8 <line:1295:22, line:1296:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc61283e058 <line:1295:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc61283e1b8 <line:1296:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc61283e280 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc61283e480 <line:1297:5, col:72>
| |   |   `-CallExpr 0x7fc61283e448 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc61283e318 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7fc61386e190 0x7fc61283ce10 0x7fc61283d1d0 0x7fc61283dc70
| |   |     |-CStyleCastExpr 0x7fc61283e3c0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61283e388 <col:39> '_A1' lvalue ParmVar 0x7fc61283da80 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc61283e420 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc61283e3e8 <col:64> '_A2' lvalue ParmVar 0x7fc61283daf0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc61283dcd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61283dd18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283e640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61283e510 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc61283e588 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc61283e8b0 <col:111, col:153>
| | | `-ReturnStmt 0x7fc61283e898 <col:112, col:151>
| | |   `-CallExpr 0x7fc61283e830 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7fc61283e818 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283e760 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7fc61385f8d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7fc61283e868 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61283e798 <col:133> 'float' lvalue ParmVar 0x7fc61283e510 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc61283e880 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283e7c0 <col:143> 'long double' lvalue ParmVar 0x7fc61283e588 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc61283e6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283e730 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283ea30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61283e918 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc61283e990 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc61283ec70 <col:111, col:153>
| | | `-ReturnStmt 0x7fc61283ec58 <col:112, col:151>
| | |   `-CallExpr 0x7fc61283ebf0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61283ebd8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283eb50 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7fc61385fb40 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc61283ec28 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61283eb88 <col:133> 'long double' lvalue ParmVar 0x7fc61283e918 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc61283ec40 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283ebb0 <col:143> 'long double' lvalue ParmVar 0x7fc61283e990 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc61283ead8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283eb20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc61283f200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7fc61283ec90 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc61283f168 <line:1306:1, line:1308:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7fc61283efc0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc61283f038 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7fc61283f798 <col:58, col:107>
| |   | `-ReturnStmt 0x7fc61283f780 <col:59, col:105>
| |   |   `-CallExpr 0x7fc61283f730 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7fc61283f718 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc61283f6b8 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7fc61386e628 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7fc61283f388 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc61283f348 <col:87> '_A1' lvalue ParmVar 0x7fc61283efc0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fc61283f768 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fc61283f3b0 <col:97> 'long double' lvalue ParmVar 0x7fc61283f038 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7fc61283f260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc61283f2a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283f918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fc61283f800 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc61283f878 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fc61283fb58 <col:110, col:151>
| | | `-ReturnStmt 0x7fc61283fb40 <col:111, col:149>
| | |   `-CallExpr 0x7fc61283fad8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fc61283fac0 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283fa38 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fc61386c3d8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fc61283fb10 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61283fa70 <col:131> 'float' lvalue ParmVar 0x7fc61283f800 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc61283fb28 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283fa98 <col:141> 'float' lvalue ParmVar 0x7fc61283f878 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fc61283f9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283fa08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc61283fcd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fc61283fbc0 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc61283fc38 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fc61283ff18 <col:110, col:151>
| | | `-ReturnStmt 0x7fc61283ff00 <col:111, col:149>
| | |   `-CallExpr 0x7fc61283fe98 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fc61283fe80 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc61283fdf8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fc61386c838 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fc61283fed0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc61283fe30 <col:131> 'long double' lvalue ParmVar 0x7fc61283fbc0 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc61283fee8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc61283fe58 <col:141> 'long double' lvalue ParmVar 0x7fc61283fc38 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fc61283fd80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc61283fdc8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612840780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1329:1> line:1323:1 remainder
| | |-TemplateTypeParmDecl 0x7fc61283ff38 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc61283ffa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc6128406e8 <line:1316:1, line:1329:1> line:1323:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fc612840590 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc612840600 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fc612840fa8 <line:1324:1, line:1329:1>
| |   | |-DeclStmt 0x7fc6128409f8 <line:1325:5, col:66>
| |   | | `-TypedefDecl 0x7fc6128409a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc612840930 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc612840df0 <line:1326:5, line:1327:68>
| |   | | `-StaticAssertDecl 0x7fc612840db8 <line:1326:5, line:1327:67> line:1326:5
| |   | |   |-ParenExpr 0x7fc612840d70 <col:19, line:1327:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc612840d50 <line:1326:20, line:1327:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc612840d30 <line:1326:21, line:1327:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc612840d08 <line:1326:22, line:1327:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc612840b68 <line:1326:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc612840cc8 <line:1327:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc612840d90 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc612840f90 <line:1328:5, col:72>
| |   |   `-CallExpr 0x7fc612840f58 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc612840e28 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7fc61386c600 0x7fc61283f918 0x7fc61283fcd8 0x7fc612840780
| |   |     |-CStyleCastExpr 0x7fc612840ed0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc612840e98 <col:39> '_A1' lvalue ParmVar 0x7fc612840590 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fc612840f30 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612840ef8 <col:64> '_A2' lvalue ParmVar 0x7fc612840600 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fc6128407e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612840828 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612841200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fc612841020 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc612841098 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fc612841110 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fc6128414c0 <col:122, col:170>
| | | `-ReturnStmt 0x7fc6128414a8 <col:123, col:168>
| | |   `-CallExpr 0x7fc612841420 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7fc612841408 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612841328 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7fc61386cb28 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7fc612841460 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc612841360 <col:140> 'float' lvalue ParmVar 0x7fc612841020 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fc612841478 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc612841388 <col:150> 'float' lvalue ParmVar 0x7fc612841098 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fc612841490 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128413b0 <col:160> 'int *' lvalue ParmVar 0x7fc612841110 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fc6128412b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc6128412f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612841710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1334:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fc612841528 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc6128415a0 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fc612841618 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fc6128419d0 <col:122, col:170>
| | | `-ReturnStmt 0x7fc6128419b8 <col:123, col:168>
| | |   `-CallExpr 0x7fc612841930 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612841918 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612841838 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7fc61386d068 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7fc612841970 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc612841870 <col:140> 'long double' lvalue ParmVar 0x7fc612841528 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fc612841988 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc612841898 <col:150> 'long double' lvalue ParmVar 0x7fc6128415a0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fc6128419a0 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128418c0 <col:160> 'int *' lvalue ParmVar 0x7fc612841618 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fc6128417c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612841808 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612842310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1336:1, line:1350:1> line:1344:1 remquo
| | |-TemplateTypeParmDecl 0x7fc6128419f0 <line:1336:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fc612841a58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fc612842278 <line:1337:1, line:1350:1> line:1344:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fc612842040 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc6128420b0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fc612842128 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7fc612842b88 <line:1345:1, line:1350:1>
| |   | |-DeclStmt 0x7fc612842588 <line:1346:5, col:66>
| |   | | `-TypedefDecl 0x7fc612842530 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fc6128424c0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fc6128429a0 <line:1347:5, line:1348:68>
| |   | | `-StaticAssertDecl 0x7fc612842968 <line:1347:5, line:1348:67> line:1347:5
| |   | |   |-ParenExpr 0x7fc612842920 <col:19, line:1348:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fc612842900 <line:1347:20, line:1348:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fc6128428e0 <line:1347:21, line:1348:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fc6128428b8 <line:1347:22, line:1348:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fc612842718 <line:1347:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fc612842878 <line:1348:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fc612842940 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fc612842b70 <line:1349:5, col:79>
| |   |   `-CallExpr 0x7fc612842b30 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fc6128429d8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7fc61386cdc8 0x7fc612841200 0x7fc612841710 0x7fc612842310
| |   |     |-CStyleCastExpr 0x7fc612842a80 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc612842a48 <col:36> '_A1' lvalue ParmVar 0x7fc612842040 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fc612842ae0 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc612842aa8 <col:61> '_A2' lvalue ParmVar 0x7fc6128420b0 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7fc612842b08 <col:71> 'int *' lvalue ParmVar 0x7fc612842128 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7fc612842378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6128423c0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612842c98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc612842c00 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612842e88 <col:83, col:109>
| | | `-ReturnStmt 0x7fc612842e70 <col:84, col:107>
| | |   `-CallExpr 0x7fc612842e28 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fc612842e10 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612842db0 <col:91, col:93> 'float (float)' lvalue Function 0x7fc613869748 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612842e58 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612842de8 <col:99> 'float' lvalue ParmVar 0x7fc612842c00 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612842d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612842d80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612842f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612842ef0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612843178 <col:83, col:109>
| | | `-ReturnStmt 0x7fc612843160 <col:84, col:107>
| | |   `-CallExpr 0x7fc612843118 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612843100 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6128430a0 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fc613869a90 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612843148 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128430d8 <col:99> 'long double' lvalue ParmVar 0x7fc612842ef0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612843028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612843070 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612843640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1360:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7fc612843198 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc6128435a8 <line:1358:1, line:1360:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc6128434d0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612843b60 <col:30, col:63>
| |   | `-ReturnStmt 0x7fc612843b48 <col:31, col:61>
| |   |   `-CallExpr 0x7fc612843b18 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fc612843b00 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612843ac8 <col:38, col:40> 'double (double)' lvalue Function 0x7fc6138698f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc6128437c0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612843780 <col:53> '_A1' lvalue ParmVar 0x7fc6128434d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612843698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6128436e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612843c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1364:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc612843bc8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612843e50 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612843e38 <col:85, col:109>
| | |   `-CallExpr 0x7fc612843df0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc612843dd8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612843d78 <col:92, col:94> 'float (float)' lvalue Function 0x7fc61386a288 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612843e20 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612843db0 <col:101> 'float' lvalue ParmVar 0x7fc612843bc8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612843d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612843d48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612843f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1365:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc612843eb8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612844140 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612844128 <col:85, col:109>
| | |   `-CallExpr 0x7fc6128440e0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc6128440c8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612844068 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc61386a5c8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612844110 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128440a0 <col:101> 'long double' lvalue ParmVar 0x7fc612843eb8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612843ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612844038 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612844600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1367:1, line:1370:65> col:1 round
| | |-TemplateTypeParmDecl 0x7fc612844160 <line:1367:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612844568 <line:1368:1, line:1370:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc612844490 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612844b20 <col:31, col:65>
| |   | `-ReturnStmt 0x7fc612844b08 <col:32, col:63>
| |   |   `-CallExpr 0x7fc612844ad8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fc612844ac0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612844a88 <col:39, col:41> 'double (double)' lvalue Function 0x7fc61386a428 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612844780 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612844740 <col:55> '_A1' lvalue ParmVar 0x7fc612844490 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612844658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc6128446a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612844ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1374:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7fc612844b88 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc612844c00 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fc612844f10 <col:101, col:140>
| | | `-ReturnStmt 0x7fc612844ef8 <col:102, col:138>
| | |   `-CallExpr 0x7fc612844e90 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7fc612844e78 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612844dc0 <col:109, col:111> 'float (float, long)' lvalue Function 0x7fc6138651a8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7fc612844ec8 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc612844df8 <col:120> 'float' lvalue ParmVar 0x7fc612844b88 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc612844ee0 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612844e20 <col:130> 'long' lvalue ParmVar 0x7fc612844c00 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fc612844d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612844d90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612845090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7fc612844f78 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc612844ff0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fc612845300 <col:101, col:140>
| | | `-ReturnStmt 0x7fc6128452e8 <col:102, col:138>
| | |   `-CallExpr 0x7fc612845280 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612845268 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6128451b0 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7fc613865708 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7fc6128452b8 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc6128451e8 <col:120> 'long double' lvalue ParmVar 0x7fc612844f78 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc6128452d0 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612845210 <col:130> 'long' lvalue ParmVar 0x7fc612844ff0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fc612845138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612845180 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612845890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1377:1, line:1380:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7fc612845320 <line:1377:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc6128457f8 <line:1378:1, line:1380:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7fc612845650 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc6128456c8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7fc612845e28 <col:48, col:94>
| |   | `-ReturnStmt 0x7fc612845e10 <col:49, col:92>
| |   |   `-CallExpr 0x7fc612845dc0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7fc612845da8 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612845d48 <col:56, col:58> 'double (double, long)' lvalue Function 0x7fc613865458 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7fc612845a18 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc6128459d8 <col:74> '_A1' lvalue ParmVar 0x7fc612845650 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fc612845df8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fc612845a40 <col:84> 'long' lvalue ParmVar 0x7fc6128456c8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7fc6128458f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612845938 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612845fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1384:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fc612845e90 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fc612845f08 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fc6128461e8 <col:99, col:137>
| | | `-ReturnStmt 0x7fc6128461d0 <col:100, col:135>
| | |   `-CallExpr 0x7fc612846168 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7fc612846150 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6128460c8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7fc613864ae8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fc6128461a0 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc612846100 <col:117> 'float' lvalue ParmVar 0x7fc612845e90 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fc6128461b8 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc612846128 <col:127> 'int' lvalue ParmVar 0x7fc612845f08 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fc612846050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612846098 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612846368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fc612846250 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fc6128462c8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fc6128465a8 <col:99, col:137>
| | | `-ReturnStmt 0x7fc612846590 <col:100, col:135>
| | |   `-CallExpr 0x7fc612846528 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612846510 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612846488 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7fc613864f38 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fc612846560 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fc6128464c0 <col:117> 'long double' lvalue ParmVar 0x7fc612846250 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fc612846578 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128464e8 <col:127> 'int' lvalue ParmVar 0x7fc6128462c8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fc612846410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612846458 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612846b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1387:1, line:1390:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7fc612846600 <line:1387:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612846a98 <line:1388:1, line:1390:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fc612846930 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fc6128469a8 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7fc6128470a0 <col:46, col:91>
| |   | `-ReturnStmt 0x7fc612847088 <col:47, col:89>
| |   |   `-CallExpr 0x7fc612847038 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7fc612847020 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612846fe8 <col:54, col:56> 'double (double, int)' lvalue Function 0x7fc613864d10 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fc612846cb8 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fc612846c78 <col:71> '_A1' lvalue ParmVar 0x7fc612846930 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fc612847070 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fc612846ce0 <col:81> 'int' lvalue ParmVar 0x7fc6128469a8 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7fc612846b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612846bd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc6128471a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1394:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc612847108 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612847390 <col:85, col:113>
| | | `-ReturnStmt 0x7fc612847378 <col:86, col:111>
| | |   `-CallExpr 0x7fc612847330 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fc612847318 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6128472b8 <col:93, col:95> 'float (float)' lvalue Function 0x7fc6138683c0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612847360 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128472f0 <col:103> 'float' lvalue ParmVar 0x7fc612847108 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612847240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612847288 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612847490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1395:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc6128473f8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612847680 <col:85, col:113>
| | | `-ReturnStmt 0x7fc612847668 <col:86, col:111>
| | |   `-CallExpr 0x7fc612847620 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fc612847608 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc6128475a8 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fc613868700 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612847650 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128475e0 <col:103> 'long double' lvalue ParmVar 0x7fc6128473f8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc612847530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612847578 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fc612847b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1397:1, line:1400:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7fc6128476a0 <line:1397:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fc612847aa8 <line:1398:1, line:1400:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fc6128479d0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fc612848060 <col:32, col:67>
| |   | `-ReturnStmt 0x7fc612848048 <col:33, col:65>
| |   |   `-CallExpr 0x7fc612848018 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fc612848000 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fc612847fc8 <col:40, col:42> 'double (double)' lvalue Function 0x7fc613868560 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fc612847cc0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fc612847c80 <col:57> '_A1' lvalue ParmVar 0x7fc6128479d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fc612847b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| |   `-VisibilityAttr 0x7fc612847be0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612848160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1404:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fc6128480c8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fc612848350 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612848338 <col:85, col:109>
| | |   `-CallExpr 0x7fc6128482f0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fc6128482d8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612848278 <col:92, col:94> 'float (float)' lvalue Function 0x7fc61386b800 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fc612848320 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128482b0 <col:101> 'float' lvalue ParmVar 0x7fc6128480c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fc612848200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612848248 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fc612848450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1405:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fc6128483b8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fc612848640 <col:84, col:111>
| | | `-ReturnStmt 0x7fc612848628 <col:85, col:109>
| | |   `-CallExpr 0x7fc6128485e0 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fc6128485c8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fc612848568 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fc61386bb40 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fc612848610 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fc6128485a0 <col:101> 'long double' lvalue ParmVar 0x7fc6128483b8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fc6128484f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
| | `-VisibilityAttr 0x7fc612848538 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fc612848b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, line:1410:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7fc612848660 <line:1407:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7fc612848a68 <line:1408:1, line:1410:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7fc612848990 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7fc612849020 <col:31, col:65>
|     | `-ReturnStmt 0x7fc612849008 <col:32, col:63>
|     |   `-CallExpr 0x7fc612848fd8 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7fc612848fc0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7fc612848f88 <col:39, col:41> 'double (double)' lvalue Function 0x7fc61386b9a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7fc612848c80 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7fc612848c40 <col:55> '_A1' lvalue ParmVar 0x7fc612848990 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7fc612848b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:709:77> always_inline
|     `-VisibilityAttr 0x7fc612848ba0 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7fc612097058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:436:12> col:12 implicit C
| `-FunctionDecl 0x7fc6120970a8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fc612097140 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fc6120971a8 <col:12> Implicit
|   `-ConstAttr 0x7fc6120971f0 <col:12> Implicit
|-LinkageSpecDecl 0x7fc613908b80 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7fc613908bd0 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc613908c68 <col:25> Implicit
|   `-ConstAttr 0x7fc613908cb0 <col:25> Implicit
|-LinkageSpecDecl 0x7fc613909f28 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7fc613909f78 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc61390a010 <col:30> Implicit
|   `-ConstAttr 0x7fc61390a058 <col:30> Implicit
|-LinkageSpecDecl 0x7fc61390b0a8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7fc61390b0f8 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc61390b190 <col:22> Implicit
|   `-ConstAttr 0x7fc61390b1d8 <col:22> Implicit
|-LinkageSpecDecl 0x7fc61390c218 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7fc61390c268 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc61390c300 <col:27> Implicit
|   `-ConstAttr 0x7fc61390c348 <col:27> Implicit
|-LinkageSpecDecl 0x7fc61390d3c8 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7fc61390d418 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc61390d4b0 <col:29> Implicit
|   `-ConstAttr 0x7fc61390d4f8 <col:29> Implicit
|-LinkageSpecDecl 0x7fc61390e538 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7fc61390e600 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc61390e698 <col:27> Implicit
|   `-ConstAttr 0x7fc61390e6e0 <col:27> Implicit
|-NamespaceDecl 0x7fc612849040 prev 0x7fc61208fcc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:410:37, line:411:38> line:410:47 std
| |-original Namespace 0x7fc612063258 'std'
| `-NamespaceDecl 0x7fc6128490a8 prev 0x7fc61208fd30 <col:52, line:411:36> <scratch space>:421:1 __1 inline
|   |-original Namespace 0x7fc6120632c0 '__1'
|   |-UsingDecl 0x7fc612849118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7fc612849168 <col:9> col:9 implicit FunctionTemplate 0x7fc613902b60 'signbit'
|   |-UsingDecl 0x7fc6128491b8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7fc612849208 <col:9> col:9 implicit FunctionTemplate 0x7fc613903ea0 'fpclassify'
|   |-UsingDecl 0x7fc612849258 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7fc6128492a8 <col:9> col:9 implicit FunctionTemplate 0x7fc613904ff0 'isfinite'
|   |-UsingDecl 0x7fc6128492f8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7fc612849348 <col:9> col:9 implicit FunctionTemplate 0x7fc613906130 'isinf'
|   |-UsingDecl 0x7fc612849398 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7fc6128493e8 <col:9> col:9 implicit FunctionTemplate 0x7fc6139072d0 'isnan'
|   |-UsingDecl 0x7fc612849438 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7fc612849488 <col:9> col:9 implicit FunctionTemplate 0x7fc613908410 'isnormal'
|   |-UsingDecl 0x7fc6128494d8 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7fc612849528 <col:9> col:9 implicit FunctionTemplate 0x7fc613909630 'isgreater'
|   |-UsingDecl 0x7fc612849578 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7fc6128495c8 <col:9> col:9 implicit FunctionTemplate 0x7fc61390a880 'isgreaterequal'
|   |-UsingDecl 0x7fc612849618 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7fc612849668 <col:9> col:9 implicit FunctionTemplate 0x7fc61390b9f0 'isless'
|   |-UsingDecl 0x7fc6128496b8 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7fc612849708 <col:9> col:9 implicit FunctionTemplate 0x7fc61390cba0 'islessequal'
|   |-UsingDecl 0x7fc612849758 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7fc6128497a8 <col:9> col:9 implicit FunctionTemplate 0x7fc61390dd10 'islessgreater'
|   |-UsingDecl 0x7fc6128497f8 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fc612849848 <col:9> col:9 implicit FunctionTemplate 0x7fc61390ef00 'isunordered'
|   |-UsingDecl 0x7fc612849898 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fc6128498e8 prev 0x7fc612849848 <col:9> col:9 implicit FunctionTemplate 0x7fc61390ef00 'isunordered'
|   |-UsingDecl 0x7fc612849938 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7fc612849988 <col:9> col:9 implicit Typedef 0x7fc612063440 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fc6128499d8 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7fc612849a28 <col:9> col:9 implicit Typedef 0x7fc6120634b0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fc612849a78 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7fc612849ac8 <col:9> col:9 implicit Function 0x7fc61390f428 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612849b10 <col:9> col:9 implicit Function 0x7fc61390f718 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7fc612849b58 <col:9> col:9 implicit Function 0x7fc61390fa08 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7fc612849ba8 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7fc612849bf8 <col:9> col:9 implicit Function 0x7fc613857ad8 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7fc612849c40 <col:9> col:9 implicit Function 0x7fc61390fcf8 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612849c88 <col:9> col:9 implicit Function 0x7fc61390ffe8 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612849cd0 <col:9> col:9 implicit FunctionTemplate 0x7fc6139287b0 'acos'
|   |-UsingDecl 0x7fc612849d20 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7fc612849d70 <col:9> col:9 implicit Function 0x7fc613857938 'acosf' 'float (float)'
|   |-UsingDecl 0x7fc612849dc0 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7fc612849e10 <col:9> col:9 implicit Function 0x7fc613858000 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7fc612849e58 <col:9> col:9 implicit Function 0x7fc61392a3b0 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612849ea0 <col:9> col:9 implicit Function 0x7fc61392a6b0 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612849ee8 <col:9> col:9 implicit FunctionTemplate 0x7fc61392ad60 'asin'
|   |-UsingDecl 0x7fc612849f38 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7fc612849f88 <col:9> col:9 implicit Function 0x7fc613857e18 'asinf' 'float (float)'
|   |-UsingDecl 0x7fc612849fd8 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7fc61284a028 <col:9> col:9 implicit Function 0x7fc6138584e0 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284a070 <col:9> col:9 implicit Function 0x7fc61392b380 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284a0b8 <col:9> col:9 implicit Function 0x7fc61392b670 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284a100 <col:9> col:9 implicit FunctionTemplate 0x7fc61392bd20 'atan'
|   |-UsingDecl 0x7fc61284a150 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7fc61284a1a0 <col:9> col:9 implicit Function 0x7fc613858340 'atanf' 'float (float)'
|   |-UsingDecl 0x7fc61284a1f0 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7fc61284a240 <col:9> col:9 implicit Function 0x7fc613858b98 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc61284a288 <col:9> col:9 implicit Function 0x7fc61392c3c0 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc61284a2d0 <col:9> col:9 implicit Function 0x7fc61392c7b0 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284a318 <col:9> col:9 implicit FunctionTemplate 0x7fc61392d380 'atan2'
|   |-UsingDecl 0x7fc61284a368 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7fc61284a3b8 <col:9> col:9 implicit Function 0x7fc6138588e8 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7fc61284a408 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7fc61284a458 <col:9> col:9 implicit Function 0x7fc613868a48 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284a4a0 <col:9> col:9 implicit Function 0x7fc61392dd98 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284a4e8 <col:9> col:9 implicit Function 0x7fc61392e088 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284a530 <col:9> col:9 implicit FunctionTemplate 0x7fc61392e770 'ceil'
|   |-UsingDecl 0x7fc61284a580 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7fc61284d200 <col:9> col:9 implicit Function 0x7fc6138688a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7fc61284d250 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7fc61284d2a0 <col:9> col:9 implicit Function 0x7fc6138599d0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284d2e8 <col:9> col:9 implicit Function 0x7fc61392ed90 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284d330 <col:9> col:9 implicit Function 0x7fc61392f080 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284d378 <col:9> col:9 implicit FunctionTemplate 0x7fc61392f730 'cos'
|   |-UsingDecl 0x7fc61284d3c8 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7fc61284d418 <col:9> col:9 implicit Function 0x7fc613859830 'cosf' 'float (float)'
|   |-UsingDecl 0x7fc61284d468 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7fc61284d4b8 <col:9> col:9 implicit Function 0x7fc61385bf30 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284d500 <col:9> col:9 implicit Function 0x7fc61392fd50 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284d548 <col:9> col:9 implicit Function 0x7fc613930040 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284d590 <col:9> col:9 implicit FunctionTemplate 0x7fc613930710 'cosh'
|   |-UsingDecl 0x7fc61284d5e0 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7fc61284d630 <col:9> col:9 implicit Function 0x7fc61385bd90 'coshf' 'float (float)'
|   |-UsingDecl 0x7fc61284d680 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7fc61284d6d0 <col:9> col:9 implicit Function 0x7fc61385d5f0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284d718 <col:9> col:9 implicit Function 0x7fc613930d30 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284d760 <col:9> col:9 implicit Function 0x7fc613931020 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284d7a8 <col:9> col:9 implicit FunctionTemplate 0x7fc6139316d0 'exp'
|   |-UsingDecl 0x7fc61284d7f8 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7fc61284d848 <col:9> col:9 implicit Function 0x7fc61385d450 'expf' 'float (float)'
|   |-UsingDecl 0x7fc61284d898 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7fc61284d8e8 <col:9> col:9 implicit Function 0x7fc613865a90 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284d930 <col:9> col:9 implicit Function 0x7fc613931cf0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284d978 <col:9> col:9 implicit Function 0x7fc613931fe0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284d9c0 <col:9> col:9 implicit FunctionTemplate 0x7fc613932698 'fabs'
|   |-UsingDecl 0x7fc61284da10 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7fc61284da60 <col:9> col:9 implicit Function 0x7fc6138658f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7fc61284dab0 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7fc61284db00 <col:9> col:9 implicit Function 0x7fc613868f28 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284db48 <col:9> col:9 implicit Function 0x7fc613932cc0 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284db90 <col:9> col:9 implicit Function 0x7fc613932fb0 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284dbd8 <col:9> col:9 implicit FunctionTemplate 0x7fc613933660 'floor'
|   |-UsingDecl 0x7fc61284dc28 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7fc61284dc78 <col:9> col:9 implicit Function 0x7fc613868d88 'floorf' 'float (float)'
|   |-UsingDecl 0x7fc61284dcc8 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7fc61284dd18 <col:9> col:9 implicit Function 0x7fc61386bf88 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc61284dd60 <col:9> col:9 implicit Function 0x7fc613933d00 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc61284dda8 <col:9> col:9 implicit Function 0x7fc6139340c0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284ddf0 <col:9> col:9 implicit FunctionTemplate 0x7fc613934b80 'fmod'
|   |-UsingDecl 0x7fc61284de40 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7fc61284de90 <col:9> col:9 implicit Function 0x7fc61386bd60 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7fc61284dee0 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7fc61284df30 <col:9> col:9 implicit Function 0x7fc613863028 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7fc61284df78 <col:9> col:9 implicit Function 0x7fc613935538 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7fc61284dfc0 <col:9> col:9 implicit Function 0x7fc613935950 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fc61284e008 <col:9> col:9 implicit FunctionTemplate 0x7fc613936180 'frexp'
|   |-UsingDecl 0x7fc61284e058 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7fc61284e0a8 <col:9> col:9 implicit Function 0x7fc613862d88 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7fc61284e0f8 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7fc61284e148 <col:9> col:9 implicit Function 0x7fc613862800 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7fc61284e190 <col:9> col:9 implicit Function 0x7fc6139378d8 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fc61284e1d8 <col:9> col:9 implicit Function 0x7fc613937cc0 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fc61284e220 <col:9> col:9 implicit FunctionTemplate 0x7fc6139384c0 'ldexp'
|   |-UsingDecl 0x7fc61284e270 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7fc61284e2c0 <col:9> col:9 implicit Function 0x7fc613861538 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7fc61284e310 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7fc61284e360 <col:9> col:9 implicit Function 0x7fc61385e500 'log' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284e3a8 <col:9> col:9 implicit Function 0x7fc613938b58 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284e3f0 <col:9> col:9 implicit Function 0x7fc613938e48 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284e438 <col:9> col:9 implicit FunctionTemplate 0x7fc613939500 'log'
|   |-UsingDecl 0x7fc61284e488 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7fc61284e4d8 <col:9> col:9 implicit Function 0x7fc61385e360 'logf' 'float (float)'
|   |-UsingDecl 0x7fc61284e528 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7fc61284e578 <col:9> col:9 implicit Function 0x7fc61385ea30 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284e5c0 <col:9> col:9 implicit Function 0x7fc613004350 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284e608 <col:9> col:9 implicit Function 0x7fc613004640 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284e650 <col:9> col:9 implicit FunctionTemplate 0x7fc613004cf0 'log10'
|   |-UsingDecl 0x7fc61284e6a0 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7fc61284e6f0 <col:9> col:9 implicit Function 0x7fc61385e890 'log10f' 'float (float)'
|   |-UsingDecl 0x7fc61284e740 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7fc61284e790 <col:9> col:9 implicit Function 0x7fc613860fd8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7fc61284e7d8 <col:9> col:9 implicit Function 0x7fc613005390 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7fc61284e820 <col:9> col:9 implicit Function 0x7fc6130057b0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7fc61284e870 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7fc61284e8c0 <col:9> col:9 implicit Function 0x7fc613860d18 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7fc61284e910 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7fc61284e960 <col:9> col:9 implicit Function 0x7fc613866c50 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc61284e9a8 <col:9> col:9 implicit Function 0x7fc613005bd0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc61284e9f0 <col:9> col:9 implicit Function 0x7fc61282a798 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284ea38 <col:9> col:9 implicit FunctionTemplate 0x7fc61282b240 'pow'
|   |-UsingDecl 0x7fc61284ea88 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7fc61284ead8 <col:9> col:9 implicit Function 0x7fc613866a28 'powf' 'float (float, float)'
|   |-UsingDecl 0x7fc61284eb28 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7fc61284eb78 <col:9> col:9 implicit Function 0x7fc613859eb0 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284ebc0 <col:9> col:9 implicit Function 0x7fc61282bb78 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284ec08 <col:9> col:9 implicit Function 0x7fc61282be68 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284ec50 <col:9> col:9 implicit FunctionTemplate 0x7fc61282c520 'sin'
|   |-UsingDecl 0x7fc61284eca0 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7fc61284ecf0 <col:9> col:9 implicit Function 0x7fc613859d10 'sinf' 'float (float)'
|   |-UsingDecl 0x7fc61284ed40 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7fc61284ed90 <col:9> col:9 implicit Function 0x7fc61385cc30 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284edd8 <col:9> col:9 implicit Function 0x7fc61282cb50 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284ee20 <col:9> col:9 implicit Function 0x7fc61282ce40 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284ee68 <col:9> col:9 implicit FunctionTemplate 0x7fc61282d4f0 'sinh'
|   |-UsingDecl 0x7fc61284eeb8 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7fc61284ef08 <col:9> col:9 implicit Function 0x7fc61385ca90 'sinhf' 'float (float)'
|   |-UsingDecl 0x7fc61284ef58 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7fc61284efa8 <col:9> col:9 implicit Function 0x7fc6138671c0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284eff0 <col:9> col:9 implicit Function 0x7fc61282db10 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284f038 <col:9> col:9 implicit Function 0x7fc61282de00 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284f080 <col:9> col:9 implicit FunctionTemplate 0x7fc61282e4b0 'sqrt'
|   |-UsingDecl 0x7fc61284f0d0 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7fc61284f120 <col:9> col:9 implicit Function 0x7fc613867020 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7fc61284f170 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7fc61284f200 <col:9> col:9 implicit Function 0x7fc61385a390 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284f248 <col:9> col:9 implicit Function 0x7fc61282eae0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284f290 <col:9> col:9 implicit Function 0x7fc61282edd0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284f2d8 <col:9> col:9 implicit FunctionTemplate 0x7fc61282f480 'tan'
|   |-UsingDecl 0x7fc61284f328 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7fc61284f378 <col:9> col:9 implicit Function 0x7fc61385a1f0 'tanf' 'float (float)'
|   |-UsingDecl 0x7fc61284f3c8 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7fc61284f418 <col:9> col:9 implicit Function 0x7fc61385d110 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284f460 <col:9> col:9 implicit Function 0x7fc61282faa0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284f4a8 <col:9> col:9 implicit Function 0x7fc61282fd90 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284f4f0 <col:9> col:9 implicit FunctionTemplate 0x7fc612830440 'tanh'
|   |-UsingDecl 0x7fc61284f540 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7fc61284f590 <col:9> col:9 implicit Function 0x7fc61385cf70 'tanhf' 'float (float)'
|   |-UsingDecl 0x7fc61284f5e0 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7fc61284f630 <col:9> col:9 implicit Function 0x7fc61385b090 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284f678 <col:9> col:9 implicit Function 0x7fc612830a60 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284f6c0 <col:9> col:9 implicit Function 0x7fc612830d50 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284f708 <col:9> col:9 implicit FunctionTemplate 0x7fc612831400 'acosh'
|   |-UsingDecl 0x7fc61284f758 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7fc61284f7a8 <col:9> col:9 implicit Function 0x7fc61385a6d0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7fc61284f7f8 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7fc61284f848 <col:9> col:9 implicit Function 0x7fc61385b570 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284f890 <col:9> col:9 implicit Function 0x7fc612831a20 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284f8d8 <col:9> col:9 implicit Function 0x7fc612831d10 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284f920 <col:9> col:9 implicit FunctionTemplate 0x7fc6128323c0 'asinh'
|   |-UsingDecl 0x7fc61284f970 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7fc61284f9c0 <col:9> col:9 implicit Function 0x7fc61385b3d0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7fc61284fa10 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7fc61284fa60 <col:9> col:9 implicit Function 0x7fc61385ba50 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284faa8 <col:9> col:9 implicit Function 0x7fc612832a40 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284faf0 <col:9> col:9 implicit Function 0x7fc612832d30 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284fb38 <col:9> col:9 implicit FunctionTemplate 0x7fc6128333e0 'atanh'
|   |-UsingDecl 0x7fc61284fb88 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7fc61284fbd8 <col:9> col:9 implicit Function 0x7fc61385b8b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7fc61284fc28 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7fc61284fc78 <col:9> col:9 implicit Function 0x7fc613865f70 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7fc61284fcc0 <col:9> col:9 implicit Function 0x7fc612833a00 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc61284fd08 <col:9> col:9 implicit Function 0x7fc612833cf0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284fd50 <col:9> col:9 implicit FunctionTemplate 0x7fc6128343a0 'cbrt'
|   |-UsingDecl 0x7fc61284fda0 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7fc61284fdf0 <col:9> col:9 implicit Function 0x7fc613865dd0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7fc61284fe40 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7fc61284fe90 <col:9> col:9 implicit Function 0x7fc61386d468 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc61284fed8 <col:9> col:9 implicit Function 0x7fc61212acc0 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc61284ff20 <col:9> col:9 implicit Function 0x7fc61212b080 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc61284ff68 <col:9> col:9 implicit FunctionTemplate 0x7fc61212bb20 'copysign'
|   |-UsingDecl 0x7fc61284ffb8 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7fc612850008 <col:9> col:9 implicit Function 0x7fc61386d240 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7fc612850058 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7fc6128500a8 <col:9> col:9 implicit Function 0x7fc6138676a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7fc6128500f0 <col:9> col:9 implicit Function 0x7fc61212c458 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612850138 <col:9> col:9 implicit Function 0x7fc61212c748 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612850180 <col:9> col:9 implicit FunctionTemplate 0x7fc613939c00 'erf'
|   |-UsingDecl 0x7fc6128501d0 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7fc612850220 <col:9> col:9 implicit Function 0x7fc613867500 'erff' 'float (float)'
|   |-UsingDecl 0x7fc612850270 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7fc6128502c0 <col:9> col:9 implicit Function 0x7fc613867bd0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7fc612850308 <col:9> col:9 implicit Function 0x7fc61393a220 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612850350 <col:9> col:9 implicit Function 0x7fc61393a510 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612850398 <col:9> col:9 implicit FunctionTemplate 0x7fc61393abc0 'erfc'
|   |-UsingDecl 0x7fc6128503e8 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7fc612850438 <col:9> col:9 implicit Function 0x7fc613867a30 'erfcf' 'float (float)'
|   |-UsingDecl 0x7fc612850488 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7fc6128504d8 <col:9> col:9 implicit Function 0x7fc61385db40 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7fc612850520 <col:9> col:9 implicit Function 0x7fc61393b1e0 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612850568 <col:9> col:9 implicit Function 0x7fc61393b4d0 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc6128505b0 <col:9> col:9 implicit FunctionTemplate 0x7fc61393bba0 'exp2'
|   |-UsingDecl 0x7fc612850600 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7fc612850650 <col:9> col:9 implicit Function 0x7fc61385d9a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7fc6128506a0 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7fc6128506f0 <col:9> col:9 implicit Function 0x7fc61385e020 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7fc612850738 <col:9> col:9 implicit Function 0x7fc61393c1c0 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612850780 <col:9> col:9 implicit Function 0x7fc61393c4b0 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc6128507c8 <col:9> col:9 implicit FunctionTemplate 0x7fc61393cb60 'expm1'
|   |-UsingDecl 0x7fc612850818 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7fc612850868 <col:9> col:9 implicit Function 0x7fc61385de80 'expm1f' 'float (float)'
|   |-UsingDecl 0x7fc6128508b8 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7fc612850908 <col:9> col:9 implicit Function 0x7fc61385ff90 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc612850950 <col:9> col:9 implicit Function 0x7fc61393d200 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc612850998 <col:9> col:9 implicit Function 0x7fc613005e00 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc6128509e0 <col:9> col:9 implicit FunctionTemplate 0x7fc6130068a0 'fdim'
|   |-UsingDecl 0x7fc612850a30 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7fc612850a80 <col:9> col:9 implicit Function 0x7fc61385fd68 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7fc612850ad0 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7fc612850b20 <col:9> col:9 implicit Function 0x7fc6138731a8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7fc612850b70 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7fc612850bc0 <col:9> col:9 implicit Function 0x7fc6138734f8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7fc612850c08 <col:9> col:9 implicit Function 0x7fc6130072d8 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7fc612850c50 <col:9> col:9 implicit Function 0x7fc613007790 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc612850c98 <col:9> col:9 implicit FunctionTemplate 0x7fc6130086c0 'fma'
|   |-UsingDecl 0x7fc612850ce8 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7fc612850d38 <col:9> col:9 implicit Function 0x7fc613860608 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc612850d80 <col:9> col:9 implicit Function 0x7fc613009410 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc612850dc8 <col:9> col:9 implicit Function 0x7fc6130097d0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc612850e10 <col:9> col:9 implicit FunctionTemplate 0x7fc61300a270 'fmax'
|   |-UsingDecl 0x7fc612850e60 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7fc612850eb0 <col:9> col:9 implicit Function 0x7fc6138603e0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7fc612850f00 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7fc612850f50 <col:9> col:9 implicit Function 0x7fc613872c88 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc612850f98 <col:9> col:9 implicit Function 0x7fc61300ac28 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc612850fe0 <col:9> col:9 implicit Function 0x7fc61300afe8 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc612851028 <col:9> col:9 implicit FunctionTemplate 0x7fc61300ba90 'fmin'
|   |-UsingDecl 0x7fc612851078 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7fc6128510c8 <col:9> col:9 implicit Function 0x7fc613872a60 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7fc612851118 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7fc612851168 <col:9> col:9 implicit Function 0x7fc613866558 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc6128511b0 <col:9> col:9 implicit Function 0x7fc61393dc48 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc612851200 <col:9> col:9 implicit Function 0x7fc61393e008 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc612851248 <col:9> col:9 implicit FunctionTemplate 0x7fc61393eab0 'hypot'
|   |-UsingDecl 0x7fc612851298 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7fc6128512e8 <col:9> col:9 implicit Function 0x7fc613866330 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7fc612851338 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7fc612851388 <col:9> col:9 implicit Function 0x7fc613863678 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7fc6128513d0 <col:9> col:9 implicit Function 0x7fc61393f3e8 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7fc612851418 <col:9> col:9 implicit Function 0x7fc6139416e0 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612851460 <col:9> col:9 implicit FunctionTemplate 0x7fc613941e80 'ilogb'
|   |-UsingDecl 0x7fc6128514b0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7fc612851500 <col:9> col:9 implicit Function 0x7fc6138634a0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7fc612851550 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7fc6128515a0 <col:9> col:9 implicit Function 0x7fc6138680a0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fc6128515e8 <col:9> col:9 implicit Function 0x7fc613942710 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612851630 <col:9> col:9 implicit Function 0x7fc613942a00 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612851678 <col:9> col:9 implicit FunctionTemplate 0x7fc6139430b0 'lgamma'
|   |-UsingDecl 0x7fc6128516c8 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7fc612851718 <col:9> col:9 implicit Function 0x7fc613867f10 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7fc612851768 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7fc6128517b8 <col:9> col:9 implicit Function 0x7fc61386aea8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7fc612851800 <col:9> col:9 implicit Function 0x7fc6128346e0 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fc612851848 <col:9> col:9 implicit Function 0x7fc612834a00 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612851890 <col:9> col:9 implicit FunctionTemplate 0x7fc6128351d0 'llrint'
|   |-UsingDecl 0x7fc6128518e0 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7fc612851930 <col:9> col:9 implicit Function 0x7fc61386ac88 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7fc612851980 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7fc6128519d0 <col:9> col:9 implicit Function 0x7fc61386b448 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7fc612851a18 <col:9> col:9 implicit Function 0x7fc612835a88 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fc612851a60 <col:9> col:9 implicit Function 0x7fc612835d78 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612851aa8 <col:9> col:9 implicit FunctionTemplate 0x7fc612836430 'llround'
|   |-UsingDecl 0x7fc612851af8 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7fc612851b48 <col:9> col:9 implicit Function 0x7fc61386b2a8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7fc612851b98 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7fc612851be8 <col:9> col:9 implicit Function 0x7fc61385f3f0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7fc612851c30 <col:9> col:9 implicit Function 0x7fc612836a60 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612851c78 <col:9> col:9 implicit Function 0x7fc612836d50 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612851cc0 <col:9> col:9 implicit FunctionTemplate 0x7fc612837400 'log1p'
|   |-UsingDecl 0x7fc612851d10 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7fc612851d60 <col:9> col:9 implicit Function 0x7fc61385f250 'log1pf' 'float (float)'
|   |-UsingDecl 0x7fc612851db0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7fc612851e00 <col:9> col:9 implicit Function 0x7fc61385ef10 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7fc612851e48 <col:9> col:9 implicit Function 0x7fc612837a20 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612851e90 <col:9> col:9 implicit Function 0x7fc612837d10 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612851ed8 <col:9> col:9 implicit FunctionTemplate 0x7fc6128383c0 'log2'
|   |-UsingDecl 0x7fc612851f28 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7fc612851f78 <col:9> col:9 implicit Function 0x7fc61385ed70 'log2f' 'float (float)'
|   |-UsingDecl 0x7fc612851fc8 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7fc612852018 <col:9> col:9 implicit Function 0x7fc6138608f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7fc612852060 <col:9> col:9 implicit Function 0x7fc612838a40 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc6128520a8 <col:9> col:9 implicit Function 0x7fc612838d30 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc6128520f0 <col:9> col:9 implicit FunctionTemplate 0x7fc6128393e0 'logb'
|   |-UsingDecl 0x7fc612852140 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7fc612852190 <col:9> col:9 implicit Function 0x7fc61385f730 'logbf' 'float (float)'
|   |-UsingDecl 0x7fc6128521e0 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7fc612852230 <col:9> col:9 implicit Function 0x7fc613869e88 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7fc612852278 <col:9> col:9 implicit Function 0x7fc612839a00 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fc6128522c0 <col:9> col:9 implicit Function 0x7fc612839d20 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612852308 <col:9> col:9 implicit FunctionTemplate 0x7fc61283a4f0 'lrint'
|   |-UsingDecl 0x7fc612852358 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7fc6128523a8 <col:9> col:9 implicit Function 0x7fc613869c68 'lrintf' 'long (float)'
|   |-UsingDecl 0x7fc6128523f8 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7fc612852448 <col:9> col:9 implicit Function 0x7fc61386a908 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7fc612852490 <col:9> col:9 implicit Function 0x7fc61283ade8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fc6128524d8 <col:9> col:9 implicit Function 0x7fc61283b0d8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612852520 <col:9> col:9 implicit FunctionTemplate 0x7fc61283b790 'lround'
|   |-UsingDecl 0x7fc612852570 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7fc6128525c0 <col:9> col:9 implicit Function 0x7fc61386a768 'lroundf' 'long (float)'
|   |-UsingDecl 0x7fc612852610 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7fc612852660 <col:9> col:9 implicit Function 0x7fc61386dae8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7fc6128526b0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7fc612852700 <col:9> col:9 implicit Function 0x7fc61386d8c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7fc612852750 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7fc6128527a0 <col:9> col:9 implicit Function 0x7fc613869408 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7fc6128527e8 <col:9> col:9 implicit Function 0x7fc61283bdb0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612852830 <col:9> col:9 implicit Function 0x7fc61283c0a0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612852878 <col:9> col:9 implicit FunctionTemplate 0x7fc61283c770 'nearbyint'
|   |-UsingDecl 0x7fc6128528c8 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7fc612852918 <col:9> col:9 implicit Function 0x7fc613869268 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7fc612852968 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7fc6128529b8 <col:9> col:9 implicit Function 0x7fc61386e190 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc612852a00 <col:9> col:9 implicit Function 0x7fc61283ce10 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc612852a48 <col:9> col:9 implicit Function 0x7fc61283d1d0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc612852a90 <col:9> col:9 implicit FunctionTemplate 0x7fc61283dc70 'nextafter'
|   |-UsingDecl 0x7fc612852ae0 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7fc612852b30 <col:9> col:9 implicit Function 0x7fc61386df68 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7fc612852b80 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7fc612852bd0 <col:9> col:9 implicit Function 0x7fc61386e628 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7fc612852c18 <col:9> col:9 implicit Function 0x7fc61283e640 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7fc612852c60 <col:9> col:9 implicit Function 0x7fc61283ea30 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc612852ca8 <col:9> col:9 implicit FunctionTemplate 0x7fc61283f200 'nexttoward'
|   |-UsingDecl 0x7fc612852cf8 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7fc612852d48 <col:9> col:9 implicit Function 0x7fc61385f8d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7fc612852d98 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7fc612852de8 <col:9> col:9 implicit Function 0x7fc61386c600 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7fc612852e30 <col:9> col:9 implicit Function 0x7fc61283f918 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fc612852e78 <col:9> col:9 implicit Function 0x7fc61283fcd8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fc612852ec0 <col:9> col:9 implicit FunctionTemplate 0x7fc612840780 'remainder'
|   |-UsingDecl 0x7fc612852f10 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7fc612852f60 <col:9> col:9 implicit Function 0x7fc61386c3d8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7fc612852fb0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7fc612853000 <col:9> col:9 implicit Function 0x7fc61386cdc8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7fc612853048 <col:9> col:9 implicit Function 0x7fc612841200 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7fc612853090 <col:9> col:9 implicit Function 0x7fc612841710 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fc6128530d8 <col:9> col:9 implicit FunctionTemplate 0x7fc612842310 'remquo'
|   |-UsingDecl 0x7fc612853128 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7fc612853178 <col:9> col:9 implicit Function 0x7fc61386cb28 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7fc612855200 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7fc612855250 <col:9> col:9 implicit Function 0x7fc6138698f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7fc612855298 <col:9> col:9 implicit Function 0x7fc612842c98 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc6128552e0 <col:9> col:9 implicit Function 0x7fc612842f88 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612855328 <col:9> col:9 implicit FunctionTemplate 0x7fc612843640 'rint'
|   |-UsingDecl 0x7fc612855378 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7fc6128553c8 <col:9> col:9 implicit Function 0x7fc613869748 'rintf' 'float (float)'
|   |-UsingDecl 0x7fc612855418 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7fc612855468 <col:9> col:9 implicit Function 0x7fc61386a428 'round' 'double (double)'
|   |-UsingShadowDecl 0x7fc6128554b0 <col:9> col:9 implicit Function 0x7fc612843c60 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc6128554f8 <col:9> col:9 implicit Function 0x7fc612843f50 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612855540 <col:9> col:9 implicit FunctionTemplate 0x7fc612844600 'round'
|   |-UsingDecl 0x7fc612855590 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7fc6128555e0 <col:9> col:9 implicit Function 0x7fc61386a288 'roundf' 'float (float)'
|   |-UsingDecl 0x7fc612855630 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7fc612855680 <col:9> col:9 implicit Function 0x7fc613865458 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7fc6128556c8 <col:9> col:9 implicit Function 0x7fc612844ca0 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7fc612855710 <col:9> col:9 implicit Function 0x7fc612845090 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7fc612855758 <col:9> col:9 implicit FunctionTemplate 0x7fc612845890 'scalbln'
|   |-UsingDecl 0x7fc6128557a8 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7fc6128557f8 <col:9> col:9 implicit Function 0x7fc6138651a8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7fc612855848 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7fc612855898 <col:9> col:9 implicit Function 0x7fc613864d10 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7fc6128558e0 <col:9> col:9 implicit Function 0x7fc612845fa8 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fc612855928 <col:9> col:9 implicit Function 0x7fc612846368 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fc612855970 <col:9> col:9 implicit FunctionTemplate 0x7fc612846b30 'scalbn'
|   |-UsingDecl 0x7fc6128559c0 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7fc612855a10 <col:9> col:9 implicit Function 0x7fc613864ae8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7fc612855a60 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7fc612855ab0 <col:9> col:9 implicit Function 0x7fc613868560 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fc612855af8 <col:9> col:9 implicit Function 0x7fc6128471a0 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612855b40 <col:9> col:9 implicit Function 0x7fc612847490 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612855b88 <col:9> col:9 implicit FunctionTemplate 0x7fc612847b40 'tgamma'
|   |-UsingDecl 0x7fc612855bd8 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7fc612855c28 <col:9> col:9 implicit Function 0x7fc6138683c0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7fc612855c78 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7fc612855cc8 <col:9> col:9 implicit Function 0x7fc61386b9a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7fc612855d10 <col:9> col:9 implicit Function 0x7fc612848160 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fc612855d58 <col:9> col:9 implicit Function 0x7fc612848450 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fc612855da0 <col:9> col:9 implicit FunctionTemplate 0x7fc612848b00 'trunc'
|   |-UsingDecl 0x7fc612855df0 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7fc612855e40 <col:9> col:9 implicit Function 0x7fc61386b800 'truncf' 'float (float)'
|   |-UsingDecl 0x7fc612855e90 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7fc612855ee0 <col:9> col:9 implicit Function 0x7fc613857c78 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7fc612855f30 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7fc612855f80 <col:9> col:9 implicit Function 0x7fc6138581a0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7fc612855fd0 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7fc612856020 <col:9> col:9 implicit Function 0x7fc613858680 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856070 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7fc6128560c0 <col:9> col:9 implicit Function 0x7fc613858e48 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc612856110 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7fc612856160 <col:9> col:9 implicit Function 0x7fc613868be8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7fc6128561b0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7fc612856200 <col:9> col:9 implicit Function 0x7fc613859b70 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856250 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7fc6128562a0 <col:9> col:9 implicit Function 0x7fc61385c8f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7fc6128562f0 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7fc612856340 <col:9> col:9 implicit Function 0x7fc61385d800 'expl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856390 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7fc6128563e0 <col:9> col:9 implicit Function 0x7fc613865c30 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856430 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7fc612856480 <col:9> col:9 implicit Function 0x7fc6138690c8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7fc6128564d0 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7fc612856520 <col:9> col:9 implicit Function 0x7fc61386c1b0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc612856570 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7fc6128565c0 <col:9> col:9 implicit Function 0x7fc6138632c8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7fc612856610 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7fc612856660 <col:9> col:9 implicit Function 0x7fc613862ab8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7fc6128566b0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7fc612856700 <col:9> col:9 implicit Function 0x7fc61385e6a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856750 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7fc6128567a0 <col:9> col:9 implicit Function 0x7fc61385ebd0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7fc6128567f0 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7fc612856840 <col:9> col:9 implicit Function 0x7fc613861298 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7fc612856890 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7fc6128568e0 <col:9> col:9 implicit Function 0x7fc613866e78 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc612856930 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7fc612856980 <col:9> col:9 implicit Function 0x7fc61385a050 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7fc6128569d0 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7fc612856a20 <col:9> col:9 implicit Function 0x7fc61385cdd0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856a70 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7fc612856ac0 <col:9> col:9 implicit Function 0x7fc613867360 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856b10 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7fc612856b60 <col:9> col:9 implicit Function 0x7fc61385a530 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856bb0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7fc612856c00 <col:9> col:9 implicit Function 0x7fc61385d2b0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856c50 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7fc612856ca0 <col:9> col:9 implicit Function 0x7fc61385b230 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856cf0 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7fc612856d40 <col:9> col:9 implicit Function 0x7fc61385b710 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856d90 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7fc612856de0 <col:9> col:9 implicit Function 0x7fc61385bbf0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856e30 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7fc612856e80 <col:9> col:9 implicit Function 0x7fc613866110 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7fc612856ed0 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7fc612856f20 <col:9> col:9 implicit Function 0x7fc61386d690 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc612856f70 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7fc612856fc0 <col:9> col:9 implicit Function 0x7fc613867890 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7fc612857010 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7fc612857060 <col:9> col:9 implicit Function 0x7fc613867d70 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7fc6128570b0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7fc612857100 <col:9> col:9 implicit Function 0x7fc61385dce0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7fc612857150 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7fc6128571a0 <col:9> col:9 implicit Function 0x7fc61385e1c0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7fc61285f200 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7fc61285f250 <col:9> col:9 implicit Function 0x7fc6138601b8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc61285f2a0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7fc61285f2f0 <col:9> col:9 implicit Function 0x7fc613863888 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7fc61285f340 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7fc61285f390 <col:9> col:9 implicit Function 0x7fc613872838 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc61285f3e0 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7fc61285f430 <col:9> col:9 implicit Function 0x7fc613872eb0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc61285f480 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7fc61285f4d0 <col:9> col:9 implicit Function 0x7fc613866800 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc61285f520 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7fc61285f570 <col:9> col:9 implicit Function 0x7fc613864890 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7fc61285f5c0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7fc61285f610 <col:9> col:9 implicit Function 0x7fc613868230 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7fc61285f660 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7fc61285f6b0 <col:9> col:9 implicit Function 0x7fc61386b0c8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7fc61285f700 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7fc61285f750 <col:9> col:9 implicit Function 0x7fc61386b5e8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7fc61285f7a0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7fc61285f7f0 <col:9> col:9 implicit Function 0x7fc61385f590 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7fc61285f840 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7fc61285f890 <col:9> col:9 implicit Function 0x7fc61385f0b0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7fc61285f8e0 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7fc61285f930 <col:9> col:9 implicit Function 0x7fc613860a90 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7fc61285f980 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7fc61285f9d0 <col:9> col:9 implicit Function 0x7fc61386a0a8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7fc61285fa20 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7fc61285fa70 <col:9> col:9 implicit Function 0x7fc61386aaa8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7fc61285fac0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7fc61285fb10 <col:9> col:9 implicit Function 0x7fc61386dd08 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7fc61285fb60 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7fc61285fbb0 <col:9> col:9 implicit Function 0x7fc6138695a8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7fc61285fc00 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7fc61285fc50 <col:9> col:9 implicit Function 0x7fc61386e3b8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc61285fca0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7fc61285fcf0 <col:9> col:9 implicit Function 0x7fc61385fb40 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc61285fd40 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7fc61285fd90 <col:9> col:9 implicit Function 0x7fc61386c838 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fc61285fde0 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7fc61285fe30 <col:9> col:9 implicit Function 0x7fc61386d068 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7fc61285fe80 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7fc61285fed0 <col:9> col:9 implicit Function 0x7fc613869a90 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7fc61285ff20 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7fc61285ff70 <col:9> col:9 implicit Function 0x7fc61386a5c8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7fc61285ffc0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7fc612860010 <col:9> col:9 implicit Function 0x7fc613865708 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7fc612860060 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7fc6128600b0 <col:9> col:9 implicit Function 0x7fc613864f38 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7fc612860100 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7fc612860150 <col:9> col:9 implicit Function 0x7fc613868700 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7fc6128601a0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7fc6128601f0 <col:9> col:9 implicit Function 0x7fc61386bb40 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7fc6128607a0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fc612860238 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fc612860708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fc6128605f0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fc612860a28 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7fc612860a10 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7fc6128609e0 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fc612860990 <col:12> '<builtin fn type>' Function 0x7fc6128608a0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fc6128609b8 <col:28> '_A1' lvalue ParmVar 0x7fc6128605f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fc6128607f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7fc612860840 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fc612860fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fc612860a48 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fc612860f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fc612860e10 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fc612861138 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7fc612861120 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7fc6128610f0 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fc612861070 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7fc6128493e8
|   |   |     `-DeclRefExpr 0x7fc6128610c8 <col:18> '_A1' lvalue ParmVar 0x7fc612860e10 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fc612861018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7fc612861060 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fc612861600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fc612861158 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fc612861568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fc612861490 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fc612861888 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7fc612861870 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7fc612861840 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fc6128617f0 <col:12> '<builtin fn type>' Function 0x7fc612861700 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fc612861818 <col:28> '_A1' lvalue ParmVar 0x7fc612861490 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fc612861658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7fc6128616a0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fc612861d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fc6128618a8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fc612861ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fc612861bd0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fc612861eb8 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7fc612861ea0 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7fc612861e70 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fc612861df0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7fc612849348
|   |   |     `-DeclRefExpr 0x7fc612861e48 <col:18> '_A1' lvalue ParmVar 0x7fc612861bd0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fc612861d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7fc612861de0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fc612862360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7fc612861ed8 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fc6128622c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fc6128621f0 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fc6128625e8 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7fc6128625d0 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7fc6128625a0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fc612862550 <col:12> '<builtin fn type>' Function 0x7fc612862460 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fc612862578 <col:31> '_A1' lvalue ParmVar 0x7fc6128621f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fc6128623b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|   |   `-VisibilityAttr 0x7fc612862400 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7fc612862aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7fc612862608 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7fc612862a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7fc612862930 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7fc612862c18 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7fc612862c00 <line:606:5, col:29>
|       |   `-CallExpr 0x7fc612862bd0 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7fc612862b50 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7fc6128492a8
|       |     `-DeclRefExpr 0x7fc612862ba8 <col:21> '_A1' lvalue ParmVar 0x7fc612862930 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7fc612862af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:717:74> always_inline
|       `-VisibilityAttr 0x7fc612862b40 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7fc612860850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7fc6128608a0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc612860938 <col:12> Implicit
|   `-ConstAttr 0x7fc612860980 <col:12> Implicit
|-LinkageSpecDecl 0x7fc6128616b0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7fc612861700 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc612861798 <col:12> Implicit
|   `-ConstAttr 0x7fc6128617e0 <col:12> Implicit
|-LinkageSpecDecl 0x7fc612862410 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7fc612862460 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fc6128624f8 <col:12> Implicit
|   `-ConstAttr 0x7fc612862540 <col:12> Implicit
|-CXXRecordDecl 0x7fc612862c38 <object_model_refined/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7fc612862d58 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7fc612862e08 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7fc612864418 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fc6128644f8 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7fc6128644f8
| |-CXXConstructorDecl 0x7fc6128647b8 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7fc6128647b8
| | `-ParmVarDecl 0x7fc6128648e0 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7fc612864978 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7fc612864978
|   `-ParmVarDecl 0x7fc612864aa0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7fc612862e70 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7fc612862f98 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7fc612863048 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7fc6128645f8 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fc6128646d8 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7fc6128646d8
| |-CXXConstructorDecl 0x7fc612864b08 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7fc612864b08
| | `-ParmVarDecl 0x7fc612864c30 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7fc612864cc8 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7fc612864cc8
|   `-ParmVarDecl 0x7fc612864df0 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7fc6128630b0 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7fc612863258 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7fc612863308 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7fc612864318 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fc612864e58 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7fc612864e58
| | `-ParmVarDecl 0x7fc612864f80 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7fc612865018 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7fc612865018
|   `-ParmVarDecl 0x7fc612865140 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7fc612863478 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7fc6128633a8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7fc612863648 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7fc612863630 <line:17:5, col:20>
|     `-BinaryOperator 0x7fc612863608 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fc6128635d8 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fc612863540 <col:12, col:14> 'const double' lvalue .x 0x7fc612862e08
|       |   `-DeclRefExpr 0x7fc612863518 <col:12> 'const struct P1' lvalue ParmVar 0x7fc6128633a8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7fc6128635f0 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fc6128635a0 <col:18, col:20> 'const double' lvalue .x 0x7fc612862e08
|           `-DeclRefExpr 0x7fc612863578 <col:18> 'const struct P1' lvalue ParmVar 0x7fc6128633a8 'p' 'const struct P1 &'
|-FunctionDecl 0x7fc612863778 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7fc6128636a8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7fc612863948 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7fc612863930 <line:22:5, col:20>
|     `-BinaryOperator 0x7fc612863908 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fc6128638d8 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fc612863840 <col:12, col:14> 'const double' lvalue .y 0x7fc612863048
|       |   `-DeclRefExpr 0x7fc612863818 <col:12> 'const struct P2' lvalue ParmVar 0x7fc6128636a8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7fc6128638f0 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fc6128638a0 <col:18, col:20> 'const double' lvalue .y 0x7fc612863048
|           `-DeclRefExpr 0x7fc612863878 <col:18> 'const struct P2' lvalue ParmVar 0x7fc6128636a8 'p' 'const struct P2 &'
|-FunctionDecl 0x7fc612863a78 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7fc6128639a8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7fc612864138 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7fc612864120 <line:27:5, col:41>
|     `-CallExpr 0x7fc6128640f0 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7fc6128640d8 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7fc612864098 <col:12, col:17> 'double (double)' lvalue Function 0x7fc6138671c0 'sqrt' 'double (double)' (UsingShadow 0x7fc61284efa8 'sqrt')
|       `-BinaryOperator 0x7fc612863e40 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7fc612863cb0 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7fc612863c98 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7fc612863c40 <col:22> 'double (const struct P1 &)' lvalue Function 0x7fc612863478 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7fc612863ce0 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7fc612863c18 <col:28> 'const struct P3' lvalue ParmVar 0x7fc6128639a8 'p' 'const struct P3 &'
|         `-CallExpr 0x7fc612863df0 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7fc612863dd8 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fc612863d80 <col:33> 'double (const struct P2 &)' lvalue Function 0x7fc612863778 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7fc612863e20 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7fc612863d58 <col:39> 'const struct P3' lvalue ParmVar 0x7fc6128639a8 'p' 'const struct P3 &'
`-FunctionDecl 0x7fc612864180 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7fc6128655d0 <line:31:1, line:37:1>
    |-DeclStmt 0x7fc6128651d8 <line:32:5, col:12>
    | `-VarDecl 0x7fc612864258 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7fc6128651a8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7fc612865328 <line:33:5, col:17>
    | `-VarDecl 0x7fc612865238 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7fc612865308 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7fc6128652e8 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7fc612865298 <col:15> 'struct P3' lvalue Var 0x7fc612864258 'p3' 'struct P3'
    |-DeclStmt 0x7fc612865580 <line:35:5, col:23>
    | `-VarDecl 0x7fc612865350 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7fc6128654a0 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7fc612865488 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fc612865430 <col:14> 'double (const struct P3 &)' lvalue Function 0x7fc612863a78 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7fc6128654d0 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7fc612865408 <col:20> 'struct P3' lvalue Var 0x7fc612864258 'p3' 'struct P3'
    `-ReturnStmt 0x7fc6128655b8 <line:36:5, col:12>
      `-IntegerLiteral 0x7fc612865598 <col:12> 'int' 0
